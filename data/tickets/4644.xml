<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-18T17:25:09+01:00</created-at>
  <creator-id type="integer">40263</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">4644</number>
  <permalink>use-assert_respond_to-because-it-has-better-error-messaging</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>patch rails3 test</tag>
  <title>Use assert_respond_to because it has better error messaging</title>
  <updated-at type="datetime">2010-06-07T09:37:27+01:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">6</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>Neeraj Singh</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4644</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Patch will be attached through comment.</original-body>
  <latest-body>Patch will be attached through comment.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Patch will be attached through comment.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Patch will be attached through comment.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch will be attached through comment.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-18T17:25:09+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4644</number>
      <permalink>use-assert_respond_to-because-it-has-better-error-messaging</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3 test</tag>
      <title>Use assert_respond_to because it has better error messaging</title>
      <updated-at type="datetime">2010-05-18T17:25:13+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">1</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4644</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-18T17:30:13+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: rails3 test
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4644</number>
      <permalink>use-assert_respond_to-because-it-has-better-error-messaging</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch rails3 test</tag>
      <title>Use assert_respond_to because it has better error messaging</title>
      <updated-at type="datetime">2010-05-18T17:30:16+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4644</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The patch is ok Neeraj but please do this on the rails top dir:
$ grep -r 'assert ' * | grep respond_to and change all the uses

i get all this files waiting for your change ...

actionmailer/test/old_base/mail_service_test.rb:    assert !RespondToMailer.respond_to?(:new_any_old_template)
actionmailer/test/old_base/mail_service_test.rb:    assert !RespondToMailer.respond_to?(:createany_old_template)
actionmailer/test/old_base/mail_service_test.rb:    assert !RespondToMailer.respond_to?(:deliverany_old_template)
actionmailer/test/old_base/mail_service_test.rb:    assert !RespondToMailer.respond_to?(:create_Any_old_template)
actionmailer/test/old_base/mail_service_test.rb:    assert !RespondToMailer.respond_to?(:deliver_Any_old_template)
actionmailer/test/old_base/mail_service_test.rb:    assert !RespondToMailer.respond_to?(:create_1_template)
actionmailer/test/old_base/mail_service_test.rb:    assert !RespondToMailer.respond_to?(:deliver_1_template)
actionmailer/test/old_base/mail_service_test.rb:    assert !RespondToMailer.respond_to?(:foo_deliver_template)
actionmailer/test/base_test.rb:    assert !BaseMailer.respond_to?(:mail)
actionmailer/test/base_test.rb:    assert !BaseMailer.respond_to?(:headers)
actionpack/test/controller/url_for_test.rb:          assert controller.respond_to?(:home_url)
actionpack/test/controller/url_for_test.rb:          assert controller.respond_to?(:home_url)
actionpack/test/abstract/collector_test.rb:        assert !collector.respond_to?(:unknown)
actionpack/test/abstract/collector_test.rb:        assert !collector.respond_to?(:js)
activemodel/test/cases/callbacks_test.rb:    assert !ModelCallbacks.respond_to?(:before_initialize)
activemodel/test/cases/callbacks_test.rb:    assert !ModelCallbacks.respond_to?(:around_initialize)
activemodel/test/cases/attribute_methods_test.rb:    assert !ModelWithAttributes.new.respond_to?(:foo)
activemodel/lib/active_model/lint.rb:        assert model.respond_to?(:to_key), &quot;The model should respond to to_key&quot;
activemodel/lib/active_model/lint.rb:        assert model.respond_to?(:to_param), &quot;The model should respond to to_param&quot;
activemodel/lib/active_model/lint.rb:        assert model.respond_to?(:valid?), &quot;The model should respond to valid?&quot;
activemodel/lib/active_model/lint.rb:        assert model.respond_to?(:persisted?), &quot;The model should respond to persisted?&quot;
activemodel/lib/active_model/lint.rb:        assert model.class.respond_to?(:model_name), &quot;The model should respond to model_name&quot;
activemodel/lib/active_model/lint.rb:        assert model.respond_to?(:errors), &quot;The model should respond to errors&quot;
activemodel/lib/active_model/lint.rb:        assert model.respond_to?(:errors), &quot;The model should respond to errors&quot;
activemodel/lib/active_model/lint.rb:          assert @model.respond_to?(:to_model), &quot;The object should respond_to to_model&quot;
activerecord/test/cases/finder_test.rb:    #assert !topic.respond_to?(&quot;title&quot;)
activerecord/test/cases/finder_test.rb:    assert topic.respond_to?(&quot;author_name&quot;)
activerecord/test/cases/named_scope_test.rb:    assert Topic.approved.respond_to?(:limit)
activerecord/test/cases/named_scope_test.rb:    assert Topic.approved.respond_to?(:count)
activerecord/test/cases/named_scope_test.rb:    assert Topic.approved.respond_to?(:length)
activerecord/test/cases/named_scope_test.rb:    assert !Topic.approved.respond_to?(:with_create_scope)
activerecord/test/cases/named_scope_test.rb:    assert Topic.approved.respond_to?(:with_create_scope, true)
activerecord/test/cases/named_scope_test.rb:      assert Topic.respond_to?(reserved_method, true)
activerecord/test/cases/relations_test.rb:      assert relation.respond_to?(method), &quot;Topic.scoped should respond to #{method.inspect}&quot;
activerecord/test/cases/relations_test.rb:    assert ! relation.respond_to?(:matching_attributes)
activerecord/test/cases/relations_test.rb:    assert relation.respond_to?(:matching_attributes, true)
activerecord/test/cases/relations_test.rb:      assert relation.respond_to?(method), &quot;Topic.scoped should respond to #{method.inspect}&quot;
activerecord/test/cases/relations_test.rb:    assert DeveloperOrderedBySalary.scoped.respond_to?(:all_ordered_by_name)
activerecord/test/cases/relations_test.rb:    assert Topic.scoped.respond_to?(:by_lifo)
activerecord/test/cases/autosave_association_test.rb:    assert !@pirate.respond_to?(:validate_associated_records_for_non_validated_ship)
activerecord/test/cases/autosave_association_test.rb:    assert !@pirate.respond_to?(:validate_associated_records_for_non_validated_parrot)
activerecord/test/cases/autosave_association_test.rb:    assert !@pirate.respond_to?(:validate_associated_records_for_non_validated_parrots)
activerecord/test/cases/base_test.rb:    assert !topic.respond_to?(&quot;nothingness&quot;)
activerecord/test/cases/base_test.rb:    assert !topic.respond_to?(:nothingness)
activerecord/test/cases/base_test.rb:    assert !topic.respond_to?(&quot;mumbo&quot;)
activerecord/test/cases/base_test.rb:      assert !Task.new.respond_to?(&quot;#{method}=&quot;)
activerecord/test/cases/xml_serialization_test.rb:    assert !authors(:david).hello_posts.first.respond_to?(:label)
activerecord/test/cases/associations/has_many_associations_test.rb:    assert !client_association.respond_to?(:private_method)
activerecord/test/cases/associations/has_many_associations_test.rb:    assert client_association.respond_to?(:private_method, true)
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:    assert project.respond_to?(&quot;name&quot;)
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:    assert project.respond_to?(&quot;name=&quot;)
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:    assert project.respond_to?(&quot;name?&quot;)
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:    assert project.respond_to?(&quot;joined_on&quot;)
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:    #assert project.respond_to?(&quot;joined_on=&quot;)
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:    assert project.respond_to?(&quot;joined_on?&quot;)
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:    assert project.respond_to?(&quot;access_level&quot;)
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:    #assert project.respond_to?(&quot;access_level=&quot;)
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:    assert project.respond_to?(&quot;access_level?&quot;)
activerecord/test/cases/attribute_methods_test.rb:    assert topic.respond_to?('title')
activerecord/test/cases/attribute_methods_test.rb:    assert !topic.respond_to?('title_hello_world')
activerecord/test/cases/attribute_methods_test.rb:      assert topic.respond_to?(meth)
activerecord/test/cases/attribute_methods_test.rb:      assert topic.respond_to?(meth)
activerecord/test/cases/attribute_methods_test.rb:      assert topic.respond_to?(meth)
activerecord/test/cases/attribute_methods_test.rb:    assert !topic.respond_to?(:title)
activerecord/test/cases/attribute_methods_test.rb:    assert !topic.respond_to?(:title=)
activerecord/test/cases/attribute_methods_test.rb:    assert !topic.respond_to?(:title?)
activerecord/test/cases/json_serialization_test.rb:    assert !@david.posts.first.respond_to?(:favorite_quote)
activerecord/test/cases/finder_respond_to_test.rb:    assert !Topic.respond_to?(:find_by_undertitle)
activerecord/test/cases/finder_respond_to_test.rb:    assert !Topic.respond_to?(:fail_to_find_by_title)
activerecord/test/cases/finder_respond_to_test.rb:    assert !Topic.respond_to?(:find_by_title?)
activerecord/test/cases/finder_respond_to_test.rb:    assert !Topic.respond_to?(:fail_to_find_or_create_by_title)
activerecord/test/cases/finder_respond_to_test.rb:    assert !Topic.respond_to?(:find_or_create_by_title?)
activeresource/test/cases/base/schema_test.rb:      assert Person.new.respond_to?(col.to_s), &quot;should respond to the schema's string key, but failed on: #{col.to_s}&quot;
activeresource/test/cases/base/schema_test.rb:      assert Person.new.respond_to?(col.to_sym), &quot;should respond to the schema's symbol key, but failed on: #{col.to_sym}&quot;
activeresource/test/cases/base/schema_test.rb:    assert Person.respond_to?(:schema), &quot;should at least respond to the schema method&quot;
activeresource/test/cases/base/schema_test.rb:      assert s.respond_to?(:attrs), &quot;should return attributes in theory&quot;
activeresource/test/cases/base/schema_test.rb:      assert !self.respond_to?(bad_value), &quot;should only respond to a known attribute type, but accepted: #{bad_value.inspect}&quot;
activeresource/test/cases/base/schema_test.rb:    assert Person.new.respond_to?(new_attr_name), &quot;should respond to the attribute in a passed-in schema, but failed on: #{new_attr_name}&quot;
activeresource/test/cases/base/schema_test.rb:    assert Person.new.respond_to?(new_attr_name_two), &quot;should respond to the attribute from the schema, but failed on: #{new_attr_name_two}&quot;
activeresource/test/cases/base/schema_test.rb:    assert Person.new.respond_to?(new_attr_name), &quot;should respond to the attribute in a passed-in schema, but failed on: #{new_attr_name}&quot;
activeresource/test/cases/base/schema_test.rb:    assert Person.new.respond_to?(new_attr_name_two), &quot;should respond to the attribute from the schema, but failed on: #{new_attr_name_two}&quot;
activeresource/test/cases/base_test.rb:    assert matz.respond_to?(:name)
activeresource/test/cases/base_test.rb:    assert matz.respond_to?(:name=)
activeresource/test/cases/base_test.rb:    assert matz.respond_to?(:name?)
activeresource/test/cases/base_test.rb:    assert !matz.respond_to?(:super_scalable_stuff)
activesupport/test/core_ext/object_and_class_ext_test.rb:    assert !@string.respond_to?(method)
activesupport/test/core_ext/class/attribute_accessor_test.rb:    assert @class.respond_to?(:foo)
activesupport/test/core_ext/class/attribute_accessor_test.rb:    assert @class.respond_to?(:foo=)
activesupport/test/core_ext/class/attribute_accessor_test.rb:    assert @object.respond_to?(:bar)
activesupport/test/core_ext/class/attribute_accessor_test.rb:    assert !@object.respond_to?(:bar=)
activesupport/test/core_ext/class/attribute_accessor_test.rb:    assert @class.respond_to?(:shaq)
activesupport/test/core_ext/class/attribute_accessor_test.rb:    assert !@object.respond_to?(:shaq)
activesupport/test/core_ext/class/class_inheritable_attributes_test.rb:      assert !@klass.new.respond_to?(:a=)
activesupport/test/core_ext/class/class_inheritable_attributes_test.rb:      assert !@klass.new.respond_to?(:a=)
activesupport/test/core_ext/class/class_inheritable_attributes_test.rb:      assert !@klass.new.respond_to?(:a=)
activesupport/test/core_ext/class/class_inheritable_attributes_test.rb:      assert !@klass.new.respond_to?(:a=)
activesupport/test/core_ext/class/delegating_attributes_test.rb:    assert single_class.respond_to?(:both)
activesupport/test/core_ext/class/delegating_attributes_test.rb:    assert single_class.respond_to?(:both=)
activesupport/test/core_ext/class/delegating_attributes_test.rb:    assert single_class.respond_to?(:no_instance_reader)
activesupport/test/core_ext/class/delegating_attributes_test.rb:    assert single_class.respond_to?(:no_instance_reader=)
activesupport/test/core_ext/module_test.rb:    assert @instance.respond_to?(:bar)
activesupport/test/core_ext/module_test.rb:      assert !@instance.respond_to?(method)
activesupport/test/core_ext/module_test.rb:      assert @instance.respond_to?(method)
activesupport/test/core_ext/module_test.rb:    assert !@instance.respond_to?(:quux_with_baz!)
activesupport/test/core_ext/module_test.rb:    assert @instance.respond_to?(:quux_with_baz!)
activesupport/test/core_ext/module_test.rb:    assert !@instance.respond_to?(:quux_with_baz!)
activesupport/test/core_ext/module_test.rb:    assert !@instance.respond_to?(:quux_with_baz?)
activesupport/test/core_ext/module_test.rb:    assert !@instance.respond_to?(:quux_with_baz=)
activesupport/test/core_ext/module_test.rb:    assert @instance.respond_to?(:quux_with_baz!)
activesupport/test/core_ext/module_test.rb:    assert @instance.respond_to?(:quux_with_baz?)
activesupport/test/core_ext/module_test.rb:    assert @instance.respond_to?(:quux_with_baz=)
activesupport/test/core_ext/module/synchronization_test.rb:    assert @instance.respond_to?(:value_with_synchronization)
activesupport/test/core_ext/module/synchronization_test.rb:    assert @instance.respond_to?(:value_without_synchronization)
activesupport/test/core_ext/module/synchronization_test.rb:    assert @target.respond_to?(:to_s_without_synchronization)
activesupport/test/core_ext/module/attribute_accessor_test.rb:    assert @module.respond_to?(:foo)
activesupport/test/core_ext/module/attribute_accessor_test.rb:    assert @module.respond_to?(:foo=)
activesupport/test/core_ext/module/attribute_accessor_test.rb:    assert @object.respond_to?(:bar)
activesupport/test/core_ext/module/attribute_accessor_test.rb:    assert !@object.respond_to?(:bar=)
activesupport/test/core_ext/module/attribute_accessor_test.rb:    assert @module.respond_to?(:shaq)
activesupport/test/core_ext/module/attribute_accessor_test.rb:    assert !@object.respond_to?(:shaq)
activesupport/test/core_ext/string_ext_test.rb:    assert UNICODE_STRING.respond_to?(:mb_chars)
activesupport/test/dependencies_test.rb:    assert !Module.new.respond_to?(:const_missing_without_dependencies)
activesupport/test/dependencies_test.rb:    assert !Module.new.respond_to?(:load_without_new_constant_marking)
activesupport/test/multibyte_chars_test.rb:    assert ''.mb_chars.respond_to?(:slice) # Defined on Chars
activesupport/test/multibyte_chars_test.rb:    assert ''.mb_chars.respond_to?(:capitalize!) # Defined on Chars
activesupport/test/multibyte_chars_test.rb:    assert ''.mb_chars.respond_to?(:gsub) # Defined on String
activesupport/test/multibyte_chars_test.rb:    assert !''.mb_chars.respond_to?(:undefined_method) # Not defined
activesupport/test/time_zone_test.rb:      assert zone.tzinfo.respond_to?(:period_for_local)
railties/test/railties/engine_test.rb:      assert !Rails::Engine.respond_to?(:config)
railties/test/railties/plugin_test.rb:      assert !Rails::Plugin.respond_to?(:config)
railties/test/railties/railtie_test.rb:      assert !Rails::Railtie.respond_to?(:config)
railties/test/application/console_test.rb:    assert User.new.respond_to?(:name)
railties/test/application/console_test.rb:    assert !User.new.respond_to?(:age)
railties/test/application/console_test.rb:    assert !User.new.respond_to?(:age)
railties/test/application/console_test.rb:    assert User.new.respond_to?(:age)</body>
      <body-html>&lt;div&gt;&lt;p&gt;The patch is ok Neeraj but please do this on the rails top
dir:&lt;br&gt;
$ grep -r 'assert ' * | grep respond_to and change all the uses&lt;/p&gt;
&lt;p&gt;i get all this files waiting for your change ...&lt;/p&gt;
&lt;p&gt;actionmailer/test/old_base/mail_service_test.rb: assert
!RespondToMailer.respond_to?(:new_any_old_template)&lt;br&gt;
actionmailer/test/old_base/mail_service_test.rb: assert
!RespondToMailer.respond_to?(:createany_old_template)&lt;br&gt;
actionmailer/test/old_base/mail_service_test.rb: assert
!RespondToMailer.respond_to?(:deliverany_old_template)&lt;br&gt;
actionmailer/test/old_base/mail_service_test.rb: assert
!RespondToMailer.respond_to?(:create_Any_old_template)&lt;br&gt;
actionmailer/test/old_base/mail_service_test.rb: assert
!RespondToMailer.respond_to?(:deliver_Any_old_template)&lt;br&gt;
actionmailer/test/old_base/mail_service_test.rb: assert
!RespondToMailer.respond_to?(:create_1_template)&lt;br&gt;
actionmailer/test/old_base/mail_service_test.rb: assert
!RespondToMailer.respond_to?(:deliver_1_template)&lt;br&gt;
actionmailer/test/old_base/mail_service_test.rb: assert
!RespondToMailer.respond_to?(:foo_deliver_template)&lt;br&gt;
actionmailer/test/base_test.rb: assert
!BaseMailer.respond_to?(:mail)&lt;br&gt;
actionmailer/test/base_test.rb: assert
!BaseMailer.respond_to?(:headers)&lt;br&gt;
actionpack/test/controller/url_for_test.rb: assert
controller.respond_to?(:home_url)&lt;br&gt;
actionpack/test/controller/url_for_test.rb: assert
controller.respond_to?(:home_url)&lt;br&gt;
actionpack/test/abstract/collector_test.rb: assert
!collector.respond_to?(:unknown)&lt;br&gt;
actionpack/test/abstract/collector_test.rb: assert
!collector.respond_to?(:js)&lt;br&gt;
activemodel/test/cases/callbacks_test.rb: assert
!ModelCallbacks.respond_to?(:before_initialize)&lt;br&gt;
activemodel/test/cases/callbacks_test.rb: assert
!ModelCallbacks.respond_to?(:around_initialize)&lt;br&gt;
activemodel/test/cases/attribute_methods_test.rb: assert
!ModelWithAttributes.new.respond_to?(:foo)&lt;br&gt;
activemodel/lib/active_model/lint.rb: assert
model.respond_to?(:to_key), &quot;The model should respond to
to_key&quot;&lt;br&gt;
activemodel/lib/active_model/lint.rb: assert
model.respond_to?(:to_param), &quot;The model should respond to
to_param&quot;&lt;br&gt;
activemodel/lib/active_model/lint.rb: assert
model.respond_to?(:valid?), &quot;The model should respond to
valid?&quot;&lt;br&gt;
activemodel/lib/active_model/lint.rb: assert
model.respond_to?(:persisted?), &quot;The model should respond to
persisted?&quot;&lt;br&gt;
activemodel/lib/active_model/lint.rb: assert
model.class.respond_to?(:model_name), &quot;The model should respond to
model_name&quot;&lt;br&gt;
activemodel/lib/active_model/lint.rb: assert
model.respond_to?(:errors), &quot;The model should respond to
errors&quot;&lt;br&gt;
activemodel/lib/active_model/lint.rb: assert
model.respond_to?(:errors), &quot;The model should respond to
errors&quot;&lt;br&gt;
activemodel/lib/active_model/lint.rb: assert
@model.respond_to?(:to_model), &quot;The object should respond_to
to_model&quot;&lt;br&gt;
activerecord/test/cases/finder_test.rb: #assert
!topic.respond_to?(&quot;title&quot;)&lt;br&gt;
activerecord/test/cases/finder_test.rb: assert
topic.respond_to?(&quot;author_name&quot;)&lt;br&gt;
activerecord/test/cases/named_scope_test.rb: assert
Topic.approved.respond_to?(:limit)&lt;br&gt;
activerecord/test/cases/named_scope_test.rb: assert
Topic.approved.respond_to?(:count)&lt;br&gt;
activerecord/test/cases/named_scope_test.rb: assert
Topic.approved.respond_to?(:length)&lt;br&gt;
activerecord/test/cases/named_scope_test.rb: assert
!Topic.approved.respond_to?(:with_create_scope)&lt;br&gt;
activerecord/test/cases/named_scope_test.rb: assert
Topic.approved.respond_to?(:with_create_scope, true)&lt;br&gt;
activerecord/test/cases/named_scope_test.rb: assert
Topic.respond_to?(reserved_method, true)&lt;br&gt;
activerecord/test/cases/relations_test.rb: assert
relation.respond_to?(method), &quot;Topic.scoped should respond to
#{method.inspect}&quot;&lt;br&gt;
activerecord/test/cases/relations_test.rb: assert !
relation.respond_to?(:matching_attributes)&lt;br&gt;
activerecord/test/cases/relations_test.rb: assert
relation.respond_to?(:matching_attributes, true)&lt;br&gt;
activerecord/test/cases/relations_test.rb: assert
relation.respond_to?(method), &quot;Topic.scoped should respond to
#{method.inspect}&quot;&lt;br&gt;
activerecord/test/cases/relations_test.rb: assert
DeveloperOrderedBySalary.scoped.respond_to?(:all_ordered_by_name)&lt;br&gt;
activerecord/test/cases/relations_test.rb: assert
Topic.scoped.respond_to?(:by_lifo)&lt;br&gt;
activerecord/test/cases/autosave_association_test.rb: assert
&lt;a href=
&quot;mailto:!@pirate.respond&quot;&gt;!@pirate.respond&lt;/a&gt;_to?(:validate_associated_records_for_non_validated_ship)&lt;br&gt;
activerecord/test/cases/autosave_association_test.rb: assert
&lt;a href=
&quot;mailto:!@pirate.respond&quot;&gt;!@pirate.respond&lt;/a&gt;_to?(:validate_associated_records_for_non_validated_parrot)&lt;br&gt;
activerecord/test/cases/autosave_association_test.rb: assert
&lt;a href=
&quot;mailto:!@pirate.respond&quot;&gt;!@pirate.respond&lt;/a&gt;_to?(:validate_associated_records_for_non_validated_parrots)&lt;br&gt;
activerecord/test/cases/base_test.rb: assert
!topic.respond_to?(&quot;nothingness&quot;)&lt;br&gt;
activerecord/test/cases/base_test.rb: assert
!topic.respond_to?(:nothingness)&lt;br&gt;
activerecord/test/cases/base_test.rb: assert
!topic.respond_to?(&quot;mumbo&quot;)&lt;br&gt;
activerecord/test/cases/base_test.rb: assert
!Task.new.respond_to?(&quot;#{method}=&quot;)&lt;br&gt;
activerecord/test/cases/xml_serialization_test.rb: assert
!authors(:david).hello_posts.first.respond_to?(:label)&lt;br&gt;
activerecord/test/cases/associations/has_many_associations_test.rb:
assert !client_association.respond_to?(:private_method)&lt;br&gt;
activerecord/test/cases/associations/has_many_associations_test.rb:
assert client_association.respond_to?(:private_method, true)&lt;br&gt;
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:
assert project.respond_to?(&quot;name&quot;)&lt;br&gt;
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:
assert project.respond_to?(&quot;name=&quot;)&lt;br&gt;
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:
assert project.respond_to?(&quot;name?&quot;)&lt;br&gt;
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:
assert project.respond_to?(&quot;joined_on&quot;)&lt;br&gt;
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:
#assert project.respond_to?(&quot;joined_on=&quot;)&lt;br&gt;
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:
assert project.respond_to?(&quot;joined_on?&quot;)&lt;br&gt;
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:
assert project.respond_to?(&quot;access_level&quot;)&lt;br&gt;
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:
#assert project.respond_to?(&quot;access_level=&quot;)&lt;br&gt;
activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb:
assert project.respond_to?(&quot;access_level?&quot;)&lt;br&gt;
activerecord/test/cases/attribute_methods_test.rb: assert
topic.respond_to?('title')&lt;br&gt;
activerecord/test/cases/attribute_methods_test.rb: assert
!topic.respond_to?('title_hello_world')&lt;br&gt;
activerecord/test/cases/attribute_methods_test.rb: assert
topic.respond_to?(meth)&lt;br&gt;
activerecord/test/cases/attribute_methods_test.rb: assert
topic.respond_to?(meth)&lt;br&gt;
activerecord/test/cases/attribute_methods_test.rb: assert
topic.respond_to?(meth)&lt;br&gt;
activerecord/test/cases/attribute_methods_test.rb: assert
!topic.respond_to?(:title)&lt;br&gt;
activerecord/test/cases/attribute_methods_test.rb: assert
!topic.respond_to?(:title=)&lt;br&gt;
activerecord/test/cases/attribute_methods_test.rb: assert
!topic.respond_to?(:title?)&lt;br&gt;
activerecord/test/cases/json_serialization_test.rb: assert &lt;a href=
&quot;mailto:!@david.posts.first.respond&quot;&gt;!@david.posts.first.respond&lt;/a&gt;_to?(:favorite_quote)&lt;br&gt;
activerecord/test/cases/finder_respond_to_test.rb: assert
!Topic.respond_to?(:find_by_undertitle)&lt;br&gt;
activerecord/test/cases/finder_respond_to_test.rb: assert
!Topic.respond_to?(:fail_to_find_by_title)&lt;br&gt;
activerecord/test/cases/finder_respond_to_test.rb: assert
!Topic.respond_to?(:find_by_title?)&lt;br&gt;
activerecord/test/cases/finder_respond_to_test.rb: assert
!Topic.respond_to?(:fail_to_find_or_create_by_title)&lt;br&gt;
activerecord/test/cases/finder_respond_to_test.rb: assert
!Topic.respond_to?(:find_or_create_by_title?)&lt;br&gt;
activeresource/test/cases/base/schema_test.rb: assert
Person.new.respond_to?(col.to_s), &quot;should respond to the schema's
string key, but failed on: #{col.to_s}&quot;&lt;br&gt;
activeresource/test/cases/base/schema_test.rb: assert
Person.new.respond_to?(col.to_sym), &quot;should respond to the schema's
symbol key, but failed on: #{col.to_sym}&quot;&lt;br&gt;
activeresource/test/cases/base/schema_test.rb: assert
Person.respond_to?(:schema), &quot;should at least respond to the schema
method&quot;&lt;br&gt;
activeresource/test/cases/base/schema_test.rb: assert
s.respond_to?(:attrs), &quot;should return attributes in theory&quot;&lt;br&gt;
activeresource/test/cases/base/schema_test.rb: assert
!self.respond_to?(bad_value), &quot;should only respond to a known
attribute type, but accepted: #{bad_value.inspect}&quot;&lt;br&gt;
activeresource/test/cases/base/schema_test.rb: assert
Person.new.respond_to?(new_attr_name), &quot;should respond to the
attribute in a passed-in schema, but failed on:
#{new_attr_name}&quot;&lt;br&gt;
activeresource/test/cases/base/schema_test.rb: assert
Person.new.respond_to?(new_attr_name_two), &quot;should respond to the
attribute from the schema, but failed on: #{new_attr_name_two}&quot;&lt;br&gt;
activeresource/test/cases/base/schema_test.rb: assert
Person.new.respond_to?(new_attr_name), &quot;should respond to the
attribute in a passed-in schema, but failed on:
#{new_attr_name}&quot;&lt;br&gt;
activeresource/test/cases/base/schema_test.rb: assert
Person.new.respond_to?(new_attr_name_two), &quot;should respond to the
attribute from the schema, but failed on: #{new_attr_name_two}&quot;&lt;br&gt;
activeresource/test/cases/base_test.rb: assert
matz.respond_to?(:name)&lt;br&gt;
activeresource/test/cases/base_test.rb: assert
matz.respond_to?(:name=)&lt;br&gt;
activeresource/test/cases/base_test.rb: assert
matz.respond_to?(:name?)&lt;br&gt;
activeresource/test/cases/base_test.rb: assert
!matz.respond_to?(:super_scalable_stuff)&lt;br&gt;
activesupport/test/core_ext/object_and_class_ext_test.rb: assert
&lt;a href=
&quot;mailto:!@string.respond&quot;&gt;!@string.respond&lt;/a&gt;_to?(method)&lt;br&gt;
activesupport/test/core_ext/class/attribute_accessor_test.rb:
assert @class.respond_to?(:foo)&lt;br&gt;
activesupport/test/core_ext/class/attribute_accessor_test.rb:
assert @class.respond_to?(:foo=)&lt;br&gt;
activesupport/test/core_ext/class/attribute_accessor_test.rb:
assert @object.respond_to?(:bar)&lt;br&gt;
activesupport/test/core_ext/class/attribute_accessor_test.rb:
assert &lt;a href=
&quot;mailto:!@object.respond&quot;&gt;!@object.respond&lt;/a&gt;_to?(:bar=)&lt;br&gt;
activesupport/test/core_ext/class/attribute_accessor_test.rb:
assert @class.respond_to?(:shaq)&lt;br&gt;
activesupport/test/core_ext/class/attribute_accessor_test.rb:
assert &lt;a href=
&quot;mailto:!@object.respond&quot;&gt;!@object.respond&lt;/a&gt;_to?(:shaq)&lt;br&gt;
activesupport/test/core_ext/class/class_inheritable_attributes_test.rb:
assert &lt;a href=
&quot;mailto:!@klass.new.respond&quot;&gt;!@klass.new.respond&lt;/a&gt;_to?(:a=)&lt;br&gt;
activesupport/test/core_ext/class/class_inheritable_attributes_test.rb:
assert &lt;a href=
&quot;mailto:!@klass.new.respond&quot;&gt;!@klass.new.respond&lt;/a&gt;_to?(:a=)&lt;br&gt;
activesupport/test/core_ext/class/class_inheritable_attributes_test.rb:
assert &lt;a href=
&quot;mailto:!@klass.new.respond&quot;&gt;!@klass.new.respond&lt;/a&gt;_to?(:a=)&lt;br&gt;
activesupport/test/core_ext/class/class_inheritable_attributes_test.rb:
assert &lt;a href=
&quot;mailto:!@klass.new.respond&quot;&gt;!@klass.new.respond&lt;/a&gt;_to?(:a=)&lt;br&gt;
activesupport/test/core_ext/class/delegating_attributes_test.rb:
assert single_class.respond_to?(:both)&lt;br&gt;
activesupport/test/core_ext/class/delegating_attributes_test.rb:
assert single_class.respond_to?(:both=)&lt;br&gt;
activesupport/test/core_ext/class/delegating_attributes_test.rb:
assert single_class.respond_to?(:no_instance_reader)&lt;br&gt;
activesupport/test/core_ext/class/delegating_attributes_test.rb:
assert single_class.respond_to?(:no_instance_reader=)&lt;br&gt;
activesupport/test/core_ext/module_test.rb: assert
@instance.respond_to?(:bar)&lt;br&gt;
activesupport/test/core_ext/module_test.rb: assert &lt;a href=
&quot;mailto:!@instance.respond&quot;&gt;!@instance.respond&lt;/a&gt;_to?(method)&lt;br&gt;
activesupport/test/core_ext/module_test.rb: assert
@instance.respond_to?(method)&lt;br&gt;
activesupport/test/core_ext/module_test.rb: assert &lt;a href=
&quot;mailto:!@instance.respond&quot;&gt;!@instance.respond&lt;/a&gt;_to?(:quux_with_baz!)&lt;br&gt;
activesupport/test/core_ext/module_test.rb: assert
@instance.respond_to?(:quux_with_baz!)&lt;br&gt;
activesupport/test/core_ext/module_test.rb: assert &lt;a href=
&quot;mailto:!@instance.respond&quot;&gt;!@instance.respond&lt;/a&gt;_to?(:quux_with_baz!)&lt;br&gt;
activesupport/test/core_ext/module_test.rb: assert &lt;a href=
&quot;mailto:!@instance.respond&quot;&gt;!@instance.respond&lt;/a&gt;_to?(:quux_with_baz?)&lt;br&gt;
activesupport/test/core_ext/module_test.rb: assert &lt;a href=
&quot;mailto:!@instance.respond&quot;&gt;!@instance.respond&lt;/a&gt;_to?(:quux_with_baz=)&lt;br&gt;
activesupport/test/core_ext/module_test.rb: assert
@instance.respond_to?(:quux_with_baz!)&lt;br&gt;
activesupport/test/core_ext/module_test.rb: assert
@instance.respond_to?(:quux_with_baz?)&lt;br&gt;
activesupport/test/core_ext/module_test.rb: assert
@instance.respond_to?(:quux_with_baz=)&lt;br&gt;
activesupport/test/core_ext/module/synchronization_test.rb: assert
@instance.respond_to?(:value_with_synchronization)&lt;br&gt;
activesupport/test/core_ext/module/synchronization_test.rb: assert
@instance.respond_to?(:value_without_synchronization)&lt;br&gt;
activesupport/test/core_ext/module/synchronization_test.rb: assert
@target.respond_to?(:to_s_without_synchronization)&lt;br&gt;
activesupport/test/core_ext/module/attribute_accessor_test.rb:
assert @module.respond_to?(:foo)&lt;br&gt;
activesupport/test/core_ext/module/attribute_accessor_test.rb:
assert @module.respond_to?(:foo=)&lt;br&gt;
activesupport/test/core_ext/module/attribute_accessor_test.rb:
assert @object.respond_to?(:bar)&lt;br&gt;
activesupport/test/core_ext/module/attribute_accessor_test.rb:
assert &lt;a href=
&quot;mailto:!@object.respond&quot;&gt;!@object.respond&lt;/a&gt;_to?(:bar=)&lt;br&gt;
activesupport/test/core_ext/module/attribute_accessor_test.rb:
assert @module.respond_to?(:shaq)&lt;br&gt;
activesupport/test/core_ext/module/attribute_accessor_test.rb:
assert &lt;a href=
&quot;mailto:!@object.respond&quot;&gt;!@object.respond&lt;/a&gt;_to?(:shaq)&lt;br&gt;
activesupport/test/core_ext/string_ext_test.rb: assert
UNICODE_STRING.respond_to?(:mb_chars)&lt;br&gt;
activesupport/test/dependencies_test.rb: assert
!Module.new.respond_to?(:const_missing_without_dependencies)&lt;br&gt;
activesupport/test/dependencies_test.rb: assert
!Module.new.respond_to?(:load_without_new_constant_marking)&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
''.mb_chars.respond_to?(:slice) # Defined on Chars&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
''.mb_chars.respond_to?(:capitalize!) # Defined on Chars&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
''.mb_chars.respond_to?(:gsub) # Defined on String&lt;br&gt;
activesupport/test/multibyte_chars_test.rb: assert
!''.mb_chars.respond_to?(:undefined_method) # Not defined&lt;br&gt;
activesupport/test/time_zone_test.rb: assert
zone.tzinfo.respond_to?(:period_for_local)&lt;br&gt;
railties/test/railties/engine_test.rb: assert
!Rails::Engine.respond_to?(:config)&lt;br&gt;
railties/test/railties/plugin_test.rb: assert
!Rails::Plugin.respond_to?(:config)&lt;br&gt;
railties/test/railties/railtie_test.rb: assert
!Rails::Railtie.respond_to?(:config)&lt;br&gt;
railties/test/application/console_test.rb: assert
User.new.respond_to?(:name)&lt;br&gt;
railties/test/application/console_test.rb: assert
!User.new.respond_to?(:age)&lt;br&gt;
railties/test/application/console_test.rb: assert
!User.new.respond_to?(:age)&lt;br&gt;
railties/test/application/console_test.rb: assert
User.new.respond_to?(:age)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-18T23:11:23+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4644</number>
      <permalink>use-assert_respond_to-because-it-has-better-error-messaging</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>patch rails3 test</tag>
      <title>Use assert_respond_to because it has better error messaging</title>
      <updated-at type="datetime">2010-05-18T23:11:26+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4644</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Attached is revised patch.

I am going through all the test files one by one. I am not doing any grep and trying to change something specific. If needed these three tickets 4644 4643 4645 can be combined into one commit. 

Reason I kept them separate was, I was not sure what changes would appeal core team and what not.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is revised patch.&lt;/p&gt;
&lt;p&gt;I am going through all the test files one by one. I am not doing
any grep and trying to change something specific. If needed these
three tickets 4644 4643 4645 can be combined into one commit.&lt;/p&gt;
&lt;p&gt;Reason I kept them separate was, I was not sure what changes
would appeal core team and what not.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-19T02:37:52+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4644</number>
      <permalink>use-assert_respond_to-because-it-has-better-error-messaging</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>patch rails3 test</tag>
      <title>Use assert_respond_to because it has better error messaging</title>
      <updated-at type="datetime">2010-05-19T02:37:55+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">4</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4644</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This ticket can be closed. I am providing patch through #4645 .</body>
      <body-html>&lt;div&gt;&lt;p&gt;This ticket can be closed. I am providing patch through &lt;a href=
&quot;/projects/8994/tickets/4645&quot; title=&quot;Ticket #4645&quot;&gt;#4645&lt;/a&gt; .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-19T02:52:30+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4644</number>
      <permalink>use-assert_respond_to-because-it-has-better-error-messaging</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>patch rails3 test</tag>
      <title>Use assert_respond_to because it has better error messaging</title>
      <updated-at type="datetime">2010-05-19T02:52:31+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">5</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4644</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-07T09:37:21+01:00</created-at>
      <creator-id type="integer">40263</creator-id>
      <diffable-attributes type="yaml">--- 
:state: verified
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">4644</number>
      <permalink>use-assert_respond_to-because-it-has-better-error-messaging</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>patch rails3 test</tag>
      <title>Use assert_respond_to because it has better error messaging</title>
      <updated-at type="datetime">2010-06-07T09:37:27+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">6</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Neeraj Singh</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4644</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b2c74b817a7e048da1c1e9cf00ac7a75423111a1</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-18T17:30:13+01:00</created-at>
      <filename>4644_fix_against-rails3_edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">525201</id>
      <size type="integer">13328</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/525201/4644_fix_against-rails3_edge.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>008472150420460e9595b532ef66edf5900a174c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-19T02:37:52+01:00</created-at>
      <filename>4644_fix_against_rails3_edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">526064</id>
      <size type="integer">13328</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/526064/4644_fix_against_rails3_edge.diff</url>
    </attachment>
  </attachments>
</ticket>
