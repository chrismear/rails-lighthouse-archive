From ca0fc3cbee5eebc461868256bfde828621f69db4 Mon Sep 17 00:00:00 2001
From: Jan <jan.h.xie@gmail.com>
Date: Tue, 12 Oct 2010 12:42:09 +0800
Subject: [PATCH] default scope merge where clauses [#5488 state:resolved]

---
 activerecord/lib/active_record/base.rb           |    1 +
 activerecord/test/cases/base_test.rb             |    1 +
 activerecord/test/cases/relation_scoping_test.rb |   17 +++++++++++++++++
 3 files changed, 19 insertions(+), 0 deletions(-)

diff --git a/activerecord/lib/active_record/base.rb b/activerecord/lib/active_record/base.rb
index 78b3507..700c2aa 100644
--- a/activerecord/lib/active_record/base.rb
+++ b/activerecord/lib/active_record/base.rb
@@ -1139,6 +1139,7 @@ MSG
         #   Article.new.published    # => true
         #   Article.create.published # => true
         def default_scope(options = {})
+          reset_scoped_methods
           self.default_scoping << construct_finder_arel(options, default_scoping.pop)
         end
 
diff --git a/activerecord/test/cases/base_test.rb b/activerecord/test/cases/base_test.rb
index 16fd9a7..cd43539 100644
--- a/activerecord/test/cases/base_test.rb
+++ b/activerecord/test/cases/base_test.rb
@@ -1451,6 +1451,7 @@ class BasicsTest < ActiveRecord::TestCase
     UnloadablePost.class_eval do
       default_scope order('posts.comments_count ASC')
     end
+    UnloadablePost.scoped_methods # make Thread.current[:UnloadablePost_scoped_methods] not nil
 
     UnloadablePost.unloadable
     assert_not_nil Thread.current[:UnloadablePost_scoped_methods]
diff --git a/activerecord/test/cases/relation_scoping_test.rb b/activerecord/test/cases/relation_scoping_test.rb
index 64365c1..4606d52 100644
--- a/activerecord/test/cases/relation_scoping_test.rb
+++ b/activerecord/test/cases/relation_scoping_test.rb
@@ -364,6 +364,23 @@ class DefaultScopingTest < ActiveRecord::TestCase
     assert_equal 100000,  klass.first.salary
   end
 
+  def test_default_scope_called_twice_in_different_place_merges_where_clause
+    Developer.destroy_all
+    Developer.create!(:name => "David", :salary => 80000)
+    Developer.create!(:name => "David", :salary => 100000)
+    Developer.create!(:name => "Brian", :salary => 100000)
+
+    klass = Class.new(Developer)
+    klass.class_eval do
+      default_scope where("name = 'David'")
+      default_scope where("salary = 100000")
+    end
+
+    assert_equal 1,       klass.count
+    assert_equal "David", klass.first.name
+    assert_equal 100000,  klass.first.salary
+  end
+
   def test_method_scope
     expected = Developer.find(:all, :order => 'salary DESC, name DESC').collect { |dev| dev.salary }
     received = DeveloperOrderedBySalary.all_ordered_by_name.collect { |dev| dev.salary }
-- 
1.7.3.1

