<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-13T18:41:30+01:00</created-at>
  <creator-id type="integer">19612</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">183</number>
  <permalink>strange-link_to-behavior-on-links-to-controllers-in-modules</permalink>
  <priority type="integer">12854</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>helper</tag>
  <title>strange link_to behavior on links to controllers in modules</title>
  <updated-at type="datetime">2008-08-05T12:59:18+01:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">6</version>
  <user-name>Pratik</user-name>
  <creator-name>Amol Hatwar (rubygem)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/183</url>
  <priority-name nil="true"></priority-name>
  <original-body>This happens in the ERB template in the current edge as well as 2.0.2. This behavior is strange, and shouldn't happen...

*First Invocation*
@@@ ruby
&lt;%=link_to('First Link', :controller =&gt; 'first/link')%&gt;

# Generated HTML
# &lt;a href=&quot;/first/link&quot;&gt;First Link&lt;/a&gt;
@@@

*Successive Invocation* (in the same ERB Template)
@@@ ruby
&lt;%=link_to('Second Link', :controller =&gt; 'second') %&gt;

# Generated HTML
# &lt;a hreaf=&quot;/first/second&quot;&gt;Second Link&lt;/a&gt;
@@@

There's a URL fragment stuck in the second URL which has been actually passed to link_to in the first invocation.

link_to shouldn't be working in this way...</original-body>
  <latest-body>This happens in the ERB template in the current edge as well as 2.0.2. This behavior is strange, and shouldn't happen...

*First Invocation*
@@@ ruby
&lt;%=link_to('First Link', :controller =&gt; 'first/link')%&gt;

# Generated HTML
# &lt;a href=&quot;/first/link&quot;&gt;First Link&lt;/a&gt;
@@@

*Successive Invocation* (in the same ERB Template)
@@@ ruby
&lt;%=link_to('Second Link', :controller =&gt; 'second') %&gt;

# Generated HTML
# &lt;a hreaf=&quot;/first/second&quot;&gt;Second Link&lt;/a&gt;
@@@

There's a URL fragment stuck in the second URL which has been actually passed to link_to in the first invocation.

link_to shouldn't be working in this way...</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
This happens in the ERB template in the current edge as well as 2.0.2. This behavior is strange, and shouldn't happen...
&lt;/p&gt;&lt;p&gt;
&lt;strong&gt;First Invocation&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&amp;lt;%=link_to('First Link', :controller =&amp;gt; 'first/link')%&amp;gt;

# Generated HTML
# &amp;lt;a href=&amp;quot;/first/link&amp;quot;&amp;gt;First Link&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;Successive Invocation&lt;/strong&gt; (in the same ERB Template)
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&amp;lt;%=link_to('Second Link', :controller =&amp;gt; 'second') %&amp;gt;

# Generated HTML
# &amp;lt;a hreaf=&amp;quot;/first/second&amp;quot;&amp;gt;Second Link&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
There's a URL fragment stuck in the second URL which has been actually passed to link_to in the first invocation.
&lt;/p&gt;&lt;p&gt;
link_to shouldn't be working in this way...
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This happens in the ERB template in the current edge as well as 2.0.2. This behavior is strange, and shouldn't happen...

*First Invocation*
@@@ ruby
&lt;%=link_to('First Link', :controller =&gt; 'first/link')%&gt;

# Generated HTML
# &lt;a href=&quot;/first/link&quot;&gt;First Link&lt;/a&gt;
@@@

*Successive Invocation* (in the same ERB Template)
@@@ ruby
&lt;%=link_to('Second Link', :controller =&gt; 'second') %&gt;

# Generated HTML
# &lt;a href=&quot;/first/second&quot;&gt;Second Link&lt;/a&gt;
@@@

There's a URL fragment stuck in the second URL which has been actually passed to link_to in the first invocation.

link_to shouldn't be working in this way...</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This happens in the ERB template in the current edge as well as 2.0.2. This behavior is strange, and shouldn't happen...
&lt;/p&gt;&lt;p&gt;
&lt;strong&gt;First Invocation&lt;/strong&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&amp;lt;%=link_to('First Link', :controller =&amp;gt; 'first/link')%&amp;gt;

# Generated HTML
# &amp;lt;a href=&amp;quot;/first/link&amp;quot;&amp;gt;First Link&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;strong&gt;Successive Invocation&lt;/strong&gt; (in the same ERB Template)
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&amp;lt;%=link_to('Second Link', :controller =&amp;gt; 'second') %&amp;gt;

# Generated HTML
# &amp;lt;a href=&amp;quot;/first/second&amp;quot;&amp;gt;Second Link&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
There's a URL fragment stuck in the second URL which has been actually passed to link_to in the first invocation.
&lt;/p&gt;&lt;p&gt;
link_to shouldn't be working in this way...
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-13T18:42:05+01:00</created-at>
      <creator-id type="integer">19612</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">183</number>
      <permalink>strange-link_to-behavior-on-links-to-controllers-in-modules</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>strange link_to behavior on links to controllers in modules</title>
      <updated-at type="datetime">2008-05-13T18:42:05+01:00</updated-at>
      <user-id type="integer">19612</user-id>
      <version type="integer">1</version>
      <user-name>Amol Hatwar (rubygem)</user-name>
      <creator-name>Amol Hatwar (rubygem)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/183</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached test patch that confirms the said behavior...</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Attached test patch that confirms the said behavior...
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-13T21:18:54+01:00</created-at>
      <creator-id type="integer">19612</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">183</number>
      <permalink>strange-link_to-behavior-on-links-to-controllers-in-modules</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>strange link_to behavior on links to controllers in modules</title>
      <updated-at type="datetime">2008-05-13T21:18:54+01:00</updated-at>
      <user-id type="integer">19612</user-id>
      <version type="integer">2</version>
      <user-name>Amol Hatwar (rubygem)</user-name>
      <creator-name>Amol Hatwar (rubygem)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/183</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>If someone can confirm that this indeed is a *bug*, maybe I can work towards a patch that fixes it...</body>
      <body-html>&lt;div&gt;&lt;p&gt;
If someone can confirm that this indeed is a *bug*, maybe I can work towards a patch that fixes it...
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-18T05:42:07+01:00</created-at>
      <creator-id type="integer">19612</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">183</number>
      <permalink>strange-link_to-behavior-on-links-to-controllers-in-modules</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>strange link_to behavior on links to controllers in modules</title>
      <updated-at type="datetime">2008-05-18T05:42:07+01:00</updated-at>
      <user-id type="integer">19612</user-id>
      <version type="integer">3</version>
      <user-name>Amol Hatwar (rubygem)</user-name>
      <creator-name>Amol Hatwar (rubygem)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/183</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hey Amol,

The relevant code is in /actionpack/lib/action_controller/routing.rb on line 348:

@@@
      # Returns a controller path for a new +controller+ based on a +previous+ controller path.
      # Handles 4 scenarios:
      #
      # * stay in the previous controller:
      #     controller_relative_to( nil, &quot;groups/discussion&quot; ) # =&gt; &quot;groups/discussion&quot;
      #
      # * stay in the previous namespace:
      #     controller_relative_to( &quot;posts&quot;, &quot;groups/discussion&quot; ) # =&gt; &quot;groups/posts&quot;
      #
      # * forced move to the root namespace:
      #     controller_relative_to( &quot;/posts&quot;, &quot;groups/discussion&quot; ) # =&gt; &quot;posts&quot;
      #
      # * previous namespace is root:
      #     controller_relative_to( &quot;posts&quot;, &quot;anything_with_no_slashes&quot; ) # =&gt;&quot;posts&quot;
      #
      def controller_relative_to(controller, previous)
        if controller.nil?           then previous
        elsif controller[0] == ?/    then controller[1..-1]
        elsif %r{^(.*)/} =~ previous then &quot;#{$1}/#{controller}&quot;
        else controller
        end
      end
    end
@@@

From that, it looks the current behaviour is intended. Perhaps bring up a discussion on the mailing list?

Also, just by the bye, your test fails for me, but not for the reason you describe. The first link_to call just generates &quot;http://example.com&quot;, rather than a route at all. (That's on the latest edge rails).</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Hey Amol,
&lt;/p&gt;&lt;p&gt;
The relevant code is in /actionpack/lib/action_controller/routing.rb on line 348:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;      # Returns a controller path for a new +controller+ based on a +previous+ controller path.
      # Handles 4 scenarios:
      #
      # * stay in the previous controller:
      #     controller_relative_to( nil, &amp;quot;groups/discussion&amp;quot; ) # =&amp;gt; &amp;quot;groups/discussion&amp;quot;
      #
      # * stay in the previous namespace:
      #     controller_relative_to( &amp;quot;posts&amp;quot;, &amp;quot;groups/discussion&amp;quot; ) # =&amp;gt; &amp;quot;groups/posts&amp;quot;
      #
      # * forced move to the root namespace:
      #     controller_relative_to( &amp;quot;/posts&amp;quot;, &amp;quot;groups/discussion&amp;quot; ) # =&amp;gt; &amp;quot;posts&amp;quot;
      #
      # * previous namespace is root:
      #     controller_relative_to( &amp;quot;posts&amp;quot;, &amp;quot;anything_with_no_slashes&amp;quot; ) # =&amp;gt;&amp;quot;posts&amp;quot;
      #
      def controller_relative_to(controller, previous)
        if controller.nil?           then previous
        elsif controller[0] == ?/    then controller[1..-1]
        elsif %r{^(.*)/} =~ previous then &amp;quot;#{$1}/#{controller}&amp;quot;
        else controller
        end
      end
    end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
From that, it looks the current behaviour is intended. Perhaps bring up a discussion on the mailing list?
&lt;/p&gt;&lt;p&gt;
Also, just by the bye, your test fails for me, but not for the reason you describe. The first link_to call just generates &quot;http://example.com&quot;, rather than a route at all. (That's on the latest edge rails).
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-05T12:33:33+01:00</created-at>
      <creator-id type="integer">19612</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">183</number>
      <permalink>strange-link_to-behavior-on-links-to-controllers-in-modules</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>helper</tag>
      <title>strange link_to behavior on links to controllers in modules</title>
      <updated-at type="datetime">2008-08-05T12:33:33+01:00</updated-at>
      <user-id type="integer">24156</user-id>
      <version type="integer">4</version>
      <user-name>nikz</user-name>
      <creator-name>Amol Hatwar (rubygem)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/183</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Actually, upon  further investigation, that method isn't called anywhere! (nowhere I can grep for, anyways).

Regardless, the _REAL_ (slim shady) relevant section is in route_set.rb (line 322).

@@@ ruby
        # if the controller has changed, make sure it changes relative to the
        # current controller module, if any. In other words, if we're currently
        # on admin/get, and the new controller is 'set', the new controller
        # should really be admin/set.
        if !named_route &amp;&amp; expire_on[:controller] &amp;&amp; options[:controller] &amp;&amp; options[:controller][0] != ?/
          old_parts = recall[:controller].split('/')
          new_parts = options[:controller].split('/')
          parts = old_parts[0..-(new_parts.length + 1)] + new_parts
          options[:controller] = parts.join('/')
        end
@@@

Looks like the intended behaviour is what you're seeing :) 

Maybe someone can close this ticket?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Actually, upon  further investigation, that method isn't called anywhere! (nowhere I can grep for, anyways).
&lt;/p&gt;&lt;p&gt;
Regardless, the &lt;em&gt;REAL&lt;/em&gt; (slim shady) relevant section is in route_set.rb (line 322).
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;        # if the controller has changed, make sure it changes relative to the
        # current controller module, if any. In other words, if we're currently
        # on admin/get, and the new controller is 'set', the new controller
        # should really be admin/set.
        if !named_route &amp;amp;&amp;amp; expire_on[:controller] &amp;amp;&amp;amp; options[:controller] &amp;amp;&amp;amp; options[:controller][0] != ?/
          old_parts = recall[:controller].split('/')
          new_parts = options[:controller].split('/')
          parts = old_parts[0..-(new_parts.length + 1)] + new_parts
          options[:controller] = parts.join('/')
        end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Looks like the intended behaviour is what you're seeing :)
&lt;/p&gt;&lt;p&gt;
Maybe someone can close this ticket?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-05T12:40:10+01:00</created-at>
      <creator-id type="integer">19612</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">183</number>
      <permalink>strange-link_to-behavior-on-links-to-controllers-in-modules</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>helper</tag>
      <title>strange link_to behavior on links to controllers in modules</title>
      <updated-at type="datetime">2008-08-05T12:40:10+01:00</updated-at>
      <user-id type="integer">24156</user-id>
      <version type="integer">5</version>
      <user-name>nikz</user-name>
      <creator-name>Amol Hatwar (rubygem)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/183</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-05T12:59:18+01:00</created-at>
      <creator-id type="integer">19612</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">183</number>
      <permalink>strange-link_to-behavior-on-links-to-controllers-in-modules</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>helper</tag>
      <title>strange link_to behavior on links to controllers in modules</title>
      <updated-at type="datetime">2008-08-05T12:59:18+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">6</version>
      <user-name>Pratik</user-name>
      <creator-name>Amol Hatwar (rubygem)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/183</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>af93cc903a98a19c431e646cfcb800d7a5fed7ca</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-13T19:56:43+01:00</created-at>
      <filename>test_sane_link_to.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">22767</id>
      <size type="integer">10900</size>
      <uploader-id type="integer">19612</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/22767/test_sane_link_to.diff</url>
    </attachment>
  </attachments>
</ticket>
