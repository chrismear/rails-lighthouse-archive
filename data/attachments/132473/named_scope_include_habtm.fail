diff --git a/activerecord/test/cases/named_scope_test.rb b/activerecord/test/cases/named_scope_test.rb
index 92fe48c..5d9ff32 100644
--- a/activerecord/test/cases/named_scope_test.rb
+++ b/activerecord/test/cases/named_scope_test.rb
@@ -2,13 +2,14 @@ require "cases/helper"
 require 'active_support/core_ext/array/random_access'
 require 'models/post'
 require 'models/topic'
+require 'models/category'
 require 'models/comment'
 require 'models/reply'
 require 'models/author'
 require 'models/developer'
 
 class NamedScopeTest < ActiveRecord::TestCase
-  fixtures :posts, :authors, :topics, :comments, :author_addresses
+  fixtures :posts, :authors, :topics, :categories, :categories_posts, :comments, :author_addresses
 
   def test_implements_enumerable
     assert !Topic.find(:all).empty?
@@ -156,6 +157,10 @@ class NamedScopeTest < ActiveRecord::TestCase
     assert_not_equal Post.top(5), authors(:david).posts.top(5)
     assert_equal authors(:david).posts.ranked_by_comments.limit(5), authors(:david).posts.top(5)
     assert_equal Post.ranked_by_comments.limit(5), Post.top(5)
+
+    assert_equal Category.first.posts.limit(4).count, 4
+    assert_equal Category.first.posts.including_special_categories.order_by("id desc").count, 4
+    assert_equal Category.first.posts.including_special_categories.limit(4).count, 4
   end
 
   def test_active_records_have_scope_named__all__
diff --git a/activerecord/test/models/post.rb b/activerecord/test/models/post.rb
index 374e536..bcf0a26 100644
--- a/activerecord/test/models/post.rb
+++ b/activerecord/test/models/post.rb
@@ -2,6 +2,8 @@ class Post < ActiveRecord::Base
   named_scope :containing_the_letter_a, :conditions => "body LIKE '%a%'"
   named_scope :ranked_by_comments, :order => "comments_count DESC"
   named_scope :limit, lambda {|limit| {:limit => limit} }
+  named_scope :order_by, lambda {|order| {:order => order} }
+  named_scope :including_special_categories, :include => :special_categories
   named_scope :with_authors_at_address, lambda { |address| {
       :conditions => [ 'authors.author_address_id = ?', address.id ],
       :joins => 'JOIN authors ON authors.id = posts.author_id'
