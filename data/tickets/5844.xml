<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-20T01:46:37+01:00</created-at>
  <creator-id type="integer">120811</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5844</number>
  <permalink>activerecordbaseinclude_root_in_json-only-applies-to-root-model-and-not-to-collectionchildren-of-that-model</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;activerecord json&quot; json &quot;rails 30&quot; &quot;rails edge&quot;</tag>
  <title>ActiveRecord::Base.include_root_in_json only applies to root model and not to collection/children of that model..</title>
  <updated-at type="datetime">2011-02-02T16:35:15+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Nirmit Patel</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5844</url>
  <priority-name nil="true"></priority-name>
  <original-body>This may or may not be an issue but I would like to have clarification. Both Rails 3.0 and edge rails behave similarly when providing the ActiveRecord::Base.include_root_in_json = true setting when rendering an active record model with includes. 

The behavior I am describing is as follows when ActiveRecord::Base.include_root_in_json = true:

Currently:
@@@ ruby
{&quot;account&quot;: {&quot;id&quot;:&quot;123&quot;,&quot;users&quot;:[{&quot;id&quot;:1},{&quot;id&quot;:2},{&quot;id&quot;:3}]}}
@@@
Expected (thought the way it should behave):
@@@ ruby
{&quot;account&quot;: {&quot;id&quot;:&quot;123&quot;,&quot;users&quot;:[{&quot;user&quot;:{&quot;id&quot;:1}},{&quot;user&quot;:{&quot;id&quot;:2}},{&quot;user&quot;:{&quot;id&quot;:3}}]}}
@@@

I have been able to get this to work by monkey patching my current code but I don't want to implement something that is not a standard. 

So if someone from the rails team could describe why the children collection models aren't rooted with the model name as well that would help me choose the correct implementation path. Bare in mind also that the xml serialization does have &quot;user&quot; nodes per users. That may be because json and xml are inherently different, but clarification would definitely help.

If the outcome is that this behavior needs to be changed I can submit a patch.

Thanks,

Nirmit Patel</original-body>
  <latest-body>This may or may not be an issue but I would like to have clarification. Both Rails 3.0 and edge rails behave similarly when providing the ActiveRecord::Base.include_root_in_json = true setting when rendering an active record model with includes. 

The behavior I am describing is as follows when ActiveRecord::Base.include_root_in_json = true:

Currently:
@@@ ruby
{&quot;account&quot;: {&quot;id&quot;:&quot;123&quot;,&quot;users&quot;:[{&quot;id&quot;:1},{&quot;id&quot;:2},{&quot;id&quot;:3}]}}
@@@
Expected (thought the way it should behave):
@@@ ruby
{&quot;account&quot;: {&quot;id&quot;:&quot;123&quot;,&quot;users&quot;:[{&quot;user&quot;:{&quot;id&quot;:1}},{&quot;user&quot;:{&quot;id&quot;:2}},{&quot;user&quot;:{&quot;id&quot;:3}}]}}
@@@

I have been able to get this to work by monkey patching my current code but I don't want to implement something that is not a standard. 

So if someone from the rails team could describe why the children collection models aren't rooted with the model name as well that would help me choose the correct implementation path. Bare in mind also that the xml serialization does have &quot;user&quot; nodes per users. That may be because json and xml are inherently different, but clarification would definitely help.

If the outcome is that this behavior needs to be changed I can submit a patch.

Thanks,

Nirmit Patel</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This may or may not be an issue but I would like to have
clarification. Both Rails 3.0 and edge rails behave similarly when
providing the ActiveRecord::Base.include_root_in_json = true
setting when rendering an active record model with includes.&lt;/p&gt;
&lt;p&gt;The behavior I am describing is as follows when
ActiveRecord::Base.include_root_in_json = true:&lt;/p&gt;
&lt;p&gt;Currently:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;{&quot;account&quot;: {&quot;id&quot;:&quot;123&quot;,&quot;users&quot;:[{&quot;id&quot;:1},{&quot;id&quot;:2},{&quot;id&quot;:3}]}}&lt;/code&gt;
&lt;/pre&gt;
Expected (thought the way it should behave):&lt;br&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;{&quot;account&quot;: {&quot;id&quot;:&quot;123&quot;,&quot;users&quot;:[{&quot;user&quot;:{&quot;id&quot;:1}},{&quot;user&quot;:{&quot;id&quot;:2}},{&quot;user&quot;:{&quot;id&quot;:3}}]}}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have been able to get this to work by monkey patching my
current code but I don't want to implement something that is not a
standard.&lt;/p&gt;
&lt;p&gt;So if someone from the rails team could describe why the
children collection models aren't rooted with the model name as
well that would help me choose the correct implementation path.
Bare in mind also that the xml serialization does have &quot;user&quot; nodes
per users. That may be because json and xml are inherently
different, but clarification would definitely help.&lt;/p&gt;
&lt;p&gt;If the outcome is that this behavior needs to be changed I can
submit a patch.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Nirmit Patel&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This may or may not be an issue but I would like to have clarification. Both Rails 3.0 and edge rails behave similarly when providing the ActiveRecord::Base.include_root_in_json = true setting when rendering an active record model with includes. 

The behavior I am describing is as follows when ActiveRecord::Base.include_root_in_json = true:

Currently:
@@@ ruby
{&quot;account&quot;: {&quot;id&quot;:&quot;123&quot;,&quot;users&quot;:[{&quot;id&quot;:1},{&quot;id&quot;:2},{&quot;id&quot;:3}]}}
@@@
Expected (thought the way it should behave):
@@@ ruby
{&quot;account&quot;: {&quot;id&quot;:&quot;123&quot;,&quot;users&quot;:[{&quot;user&quot;:{&quot;id&quot;:1}},{&quot;user&quot;:{&quot;id&quot;:2}},{&quot;user&quot;:{&quot;id&quot;:3}}]}}
@@@

I have been able to get this to work by monkey patching my current code but I don't want to implement something that is not a standard. 

So if someone from the rails team could describe why the children collection models aren't rooted with the model name as well that would help me choose the correct implementation path. Bare in mind also that the xml serialization does have &quot;user&quot; nodes per users. That may be because json and xml are inherently different, but clarification would definitely help.

If the outcome is that this behavior needs to be changed I can submit a patch.

Thanks,

Nirmit Patel</body>
      <body-html>&lt;div&gt;&lt;p&gt;This may or may not be an issue but I would like to have
clarification. Both Rails 3.0 and edge rails behave similarly when
providing the ActiveRecord::Base.include_root_in_json = true
setting when rendering an active record model with includes.&lt;/p&gt;
&lt;p&gt;The behavior I am describing is as follows when
ActiveRecord::Base.include_root_in_json = true:&lt;/p&gt;
&lt;p&gt;Currently:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;{&quot;account&quot;: {&quot;id&quot;:&quot;123&quot;,&quot;users&quot;:[{&quot;id&quot;:1},{&quot;id&quot;:2},{&quot;id&quot;:3}]}}&lt;/code&gt;
&lt;/pre&gt;
Expected (thought the way it should behave):&lt;br&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;{&quot;account&quot;: {&quot;id&quot;:&quot;123&quot;,&quot;users&quot;:[{&quot;user&quot;:{&quot;id&quot;:1}},{&quot;user&quot;:{&quot;id&quot;:2}},{&quot;user&quot;:{&quot;id&quot;:3}}]}}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have been able to get this to work by monkey patching my
current code but I don't want to implement something that is not a
standard.&lt;/p&gt;
&lt;p&gt;So if someone from the rails team could describe why the
children collection models aren't rooted with the model name as
well that would help me choose the correct implementation path.
Bare in mind also that the xml serialization does have &quot;user&quot; nodes
per users. That may be because json and xml are inherently
different, but clarification would definitely help.&lt;/p&gt;
&lt;p&gt;If the outcome is that this behavior needs to be changed I can
submit a patch.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Nirmit Patel&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-20T01:46:37+01:00</created-at>
      <creator-id type="integer">120811</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5844</number>
      <permalink>activerecordbaseinclude_root_in_json-only-applies-to-root-model-and-not-to-collectionchildren-of-that-model</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord json&quot; json &quot;rails 3.0&quot; &quot;rails edge&quot;</tag>
      <title>ActiveRecord::Base.include_root_in_json only applies to root model and not to collection/children of that model..</title>
      <updated-at type="datetime">2010-10-20T01:47:40+01:00</updated-at>
      <user-id type="integer">120811</user-id>
      <version type="integer">1</version>
      <user-name>Nirmit Patel</user-name>
      <creator-name>Nirmit Patel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5844</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:28:39+00:00</created-at>
      <creator-id type="integer">120811</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: &quot;\&quot;activerecord json\&quot; json \&quot;rails 3.0\&quot; \&quot;rails edge\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5844</number>
      <permalink>activerecordbaseinclude_root_in_json-only-applies-to-root-model-and-not-to-collectionchildren-of-that-model</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord json&quot; json &quot;rails 30&quot; &quot;rails edge&quot;</tag>
      <title>ActiveRecord::Base.include_root_in_json only applies to root model and not to collection/children of that model..</title>
      <updated-at type="datetime">2011-02-02T16:33:56+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Nirmit Patel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5844</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:28:40+00:00</created-at>
      <creator-id type="integer">120811</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5844</number>
      <permalink>activerecordbaseinclude_root_in_json-only-applies-to-root-model-and-not-to-collectionchildren-of-that-model</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;activerecord json&quot; json &quot;rails 30&quot; &quot;rails edge&quot;</tag>
      <title>ActiveRecord::Base.include_root_in_json only applies to root model and not to collection/children of that model..</title>
      <updated-at type="datetime">2011-02-02T16:35:15+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Nirmit Patel</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5844</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
