<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-10-30T16:19:31+01:00</created-at>
  <creator-id type="integer">122577</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5896</number>
  <permalink>rails-302-dbschemarb-dont-support-database-view-in-mysql2</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>Rails 3.0.2 db/schema.rb don't support database view in mysql2 </title>
  <updated-at type="datetime">2010-10-30T21:24:44+01:00</updated-at>
  <user-id type="integer">122577</user-id>
  <version type="integer">2</version>
  <user-name>qianjigui</user-name>
  <creator-name>qianjigui</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5896</url>
  <priority-name nil="true"></priority-name>
  <original-body>#My Environment#
  * Ubuntu 8.10
  * Rails 3.0.1
  * ruby 1.8.7 (2009-06-12 patchlevel 174) [i686-linux], MBARI 0x8770, Ruby Enterprise Edition 2009.10
  * Rspec 2.0.1
  * mysql 5

#Problem Description#
The database table structures are different between developemnt and test environment. And the different is in the **Database View**.

##The problem is in##
Because the test environment will create the **test database** by **db/schema.rb**, and this file is generated by auto migration. And the **schema.rb** map the **database view** to **database table**. So we can't use it in right way.

##Example##
###Migration Code###
@@@ ruby
class CreateItems &lt; ActiveRecord::Migration
  def self.up
    create_table :items do |t|
      t.string :name
      t.datetime :birthday

      t.timestamps
    end

    execute 'CREATE VIEW items_view AS SELECT id, name FROM items'
  end

  def self.down
    execute 'DROP VIEW items_view'
    drop_table :items
  end
end  
@@@
###Auto Generate db/schema.rb###
@@@ ruby
# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# Note that this schema.rb definition is the authoritative source for your
# database schema. If you need to create the application database on another
# system, you should be using db:schema:load, not running all the migrations
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
# you'll amass, the slower it'll run and the greater likelihood for issues).
#
# It's strongly recommended to check this file into your version control system.

ActiveRecord::Schema.define(:version =&gt; 20101030150608) do

  create_table &quot;items&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;birthday&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

  create_table &quot;items_view&quot;, :id =&gt; false, :force =&gt; true do |t|
    t.integer &quot;id&quot;,   :default =&gt; 0, :null =&gt; false
    t.string  &quot;name&quot;
  end

end

@@@</original-body>
  <latest-body>#My Environment#
  * Ubuntu 8.10
  * Rails 3.0.1
  * ruby 1.8.7 (2009-06-12 patchlevel 174) [i686-linux], MBARI 0x8770, Ruby Enterprise Edition 2009.10
  * Rspec 2.0.1
  * mysql 5

#Problem Description#
The database table structures are different between developemnt and test environment. And the different is in the **Database View**.

##The problem is in##
Because the test environment will create the **test database** by **db/schema.rb**, and this file is generated by auto migration. And the **schema.rb** map the **database view** to **database table**. So we can't use it in right way.

##Example##
###Migration Code###
@@@ ruby
class CreateItems &lt; ActiveRecord::Migration
  def self.up
    create_table :items do |t|
      t.string :name
      t.datetime :birthday

      t.timestamps
    end

    execute 'CREATE VIEW items_view AS SELECT id, name FROM items'
  end

  def self.down
    execute 'DROP VIEW items_view'
    drop_table :items
  end
end  
@@@
###Auto Generate db/schema.rb###
@@@ ruby
# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# Note that this schema.rb definition is the authoritative source for your
# database schema. If you need to create the application database on another
# system, you should be using db:schema:load, not running all the migrations
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
# you'll amass, the slower it'll run and the greater likelihood for issues).
#
# It's strongly recommended to check this file into your version control system.

ActiveRecord::Schema.define(:version =&gt; 20101030150608) do

  create_table &quot;items&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;birthday&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

  create_table &quot;items_view&quot;, :id =&gt; false, :force =&gt; true do |t|
    t.integer &quot;id&quot;,   :default =&gt; 0, :null =&gt; false
    t.string  &quot;name&quot;
  end

end

@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;h1&gt;My Environment&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 8.10&lt;/li&gt;
&lt;li&gt;Rails 3.0.1&lt;/li&gt;
&lt;li&gt;ruby 1.8.7 (2009-06-12 patchlevel 174) [i686-linux], MBARI
0x8770, Ruby Enterprise Edition 2009.10&lt;/li&gt;
&lt;li&gt;Rspec 2.0.1&lt;/li&gt;
&lt;li&gt;mysql 5&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Problem Description&lt;/h1&gt;
&lt;p&gt;The database table structures are different between developemnt
and test environment. And the different is in the &lt;strong&gt;Database
View&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;The problem is in&lt;/h2&gt;
&lt;p&gt;Because the test environment will create the &lt;strong&gt;test
database&lt;/strong&gt; by &lt;strong&gt;db/schema.rb&lt;/strong&gt;, and this file
is generated by auto migration. And the &lt;strong&gt;schema.rb&lt;/strong&gt;
map the &lt;strong&gt;database view&lt;/strong&gt; to &lt;strong&gt;database
table&lt;/strong&gt;. So we can't use it in right way.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;h3&gt;Migration Code&lt;/h3&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class CreateItems &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :items do |t|
      t.string :name
      t.datetime :birthday

      t.timestamps
    end

    execute 'CREATE VIEW items_view AS SELECT id, name FROM items'
  end

  def self.down
    execute 'DROP VIEW items_view'
    drop_table :items
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Auto Generate db/schema.rb&lt;/h3&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# Note that this schema.rb definition is the authoritative source for your
# database schema. If you need to create the application database on another
# system, you should be using db:schema:load, not running all the migrations
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
# you'll amass, the slower it'll run and the greater likelihood for issues).
#
# It's strongly recommended to check this file into your version control system.

ActiveRecord::Schema.define(:version =&amp;gt; 20101030150608) do

  create_table &quot;items&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;birthday&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

  create_table &quot;items_view&quot;, :id =&amp;gt; false, :force =&amp;gt; true do |t|
    t.integer &quot;id&quot;,   :default =&amp;gt; 0, :null =&amp;gt; false
    t.string  &quot;name&quot;
  end

end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>#My Environment#
  * Ubuntu 8.10
  * Rails 3.0.1
  * ruby 1.8.7 (2009-06-12 patchlevel 174) [i686-linux], MBARI 0x8770, Ruby Enterprise Edition 2009.10
  * Rspec 2.0.1
  * mysql 5

#Problem Description#
The database table structures are different between developemnt and test environment. And the different is in the **Database View**.

##The problem is in##
Because the test environment will create the **test database** by **db/schema.rb**, and this file is generated by auto migration. And the **schema.rb** map the **database view** to **database table**. So we can't use it in right way.

##Example##
###Migration Code###
@@@ ruby
class CreateItems &lt; ActiveRecord::Migration
  def self.up
    create_table :items do |t|
      t.string :name
      t.datetime :birthday

      t.timestamps
    end

    execute 'CREATE VIEW items_view AS SELECT id, name FROM items'
  end

  def self.down
    execute 'DROP VIEW items_view'
    drop_table :items
  end
end  
@@@
###Auto Generate db/schema.rb###
@@@ ruby
# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# Note that this schema.rb definition is the authoritative source for your
# database schema. If you need to create the application database on another
# system, you should be using db:schema:load, not running all the migrations
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
# you'll amass, the slower it'll run and the greater likelihood for issues).
#
# It's strongly recommended to check this file into your version control system.

ActiveRecord::Schema.define(:version =&gt; 20101030150608) do

  create_table &quot;items&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;birthday&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

  create_table &quot;items_view&quot;, :id =&gt; false, :force =&gt; true do |t|
    t.integer &quot;id&quot;,   :default =&gt; 0, :null =&gt; false
    t.string  &quot;name&quot;
  end

end

@@@</body>
      <body-html>&lt;div&gt;&lt;h1&gt;My Environment&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 8.10&lt;/li&gt;
&lt;li&gt;Rails 3.0.1&lt;/li&gt;
&lt;li&gt;ruby 1.8.7 (2009-06-12 patchlevel 174) [i686-linux], MBARI
0x8770, Ruby Enterprise Edition 2009.10&lt;/li&gt;
&lt;li&gt;Rspec 2.0.1&lt;/li&gt;
&lt;li&gt;mysql 5&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Problem Description&lt;/h1&gt;
&lt;p&gt;The database table structures are different between developemnt
and test environment. And the different is in the &lt;strong&gt;Database
View&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;The problem is in&lt;/h2&gt;
&lt;p&gt;Because the test environment will create the &lt;strong&gt;test
database&lt;/strong&gt; by &lt;strong&gt;db/schema.rb&lt;/strong&gt;, and this file
is generated by auto migration. And the &lt;strong&gt;schema.rb&lt;/strong&gt;
map the &lt;strong&gt;database view&lt;/strong&gt; to &lt;strong&gt;database
table&lt;/strong&gt;. So we can't use it in right way.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;h3&gt;Migration Code&lt;/h3&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class CreateItems &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :items do |t|
      t.string :name
      t.datetime :birthday

      t.timestamps
    end

    execute 'CREATE VIEW items_view AS SELECT id, name FROM items'
  end

  def self.down
    execute 'DROP VIEW items_view'
    drop_table :items
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Auto Generate db/schema.rb&lt;/h3&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# Note that this schema.rb definition is the authoritative source for your
# database schema. If you need to create the application database on another
# system, you should be using db:schema:load, not running all the migrations
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
# you'll amass, the slower it'll run and the greater likelihood for issues).
#
# It's strongly recommended to check this file into your version control system.

ActiveRecord::Schema.define(:version =&amp;gt; 20101030150608) do

  create_table &quot;items&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.datetime &quot;birthday&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
  end

  create_table &quot;items_view&quot;, :id =&amp;gt; false, :force =&amp;gt; true do |t|
    t.integer &quot;id&quot;,   :default =&amp;gt; 0, :null =&amp;gt; false
    t.string  &quot;name&quot;
  end

end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-30T16:19:31+01:00</created-at>
      <creator-id type="integer">122577</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5896</number>
      <permalink>rails-302-dbschemarb-dont-support-database-view-in-mysql2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3.0.2 db/schema.rb don't support database view in mysql2 </title>
      <updated-at type="datetime">2010-10-30T21:24:44+01:00</updated-at>
      <user-id type="integer">122577</user-id>
      <version type="integer">1</version>
      <user-name>qianjigui</user-name>
      <creator-name>qianjigui</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5896</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The complete bug example project.
Hope it will be fixed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The complete bug example project.&lt;br&gt;
Hope it will be fixed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-30T16:22:30+01:00</created-at>
      <creator-id type="integer">122577</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5896</number>
      <permalink>rails-302-dbschemarb-dont-support-database-view-in-mysql2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3.0.2 db/schema.rb don't support database view in mysql2 </title>
      <updated-at type="datetime">2010-10-30T21:24:44+01:00</updated-at>
      <user-id type="integer">122577</user-id>
      <version type="integer">2</version>
      <user-name>qianjigui</user-name>
      <creator-name>qianjigui</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5896</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>bc3094b816ef81569279bdec357344cf482e5802</code>
      <content-type>application/x-bzip</content-type>
      <created-at type="datetime">2010-10-30T16:22:30+01:00</created-at>
      <filename>bugstar.bz2</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">746048</id>
      <size type="integer">76251</size>
      <uploader-id type="integer">122577</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/746048/bugstar.bz2</url>
    </attachment>
  </attachments>
</ticket>
