<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-05T10:58:04+01:00</created-at>
  <creator-id type="integer">52024</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5305</number>
  <permalink>rails3-rc-named-yield-should-return-nil-when-content_for-with-that-name-was-not-called</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>action_pack action_view content_for &quot;nested layouts&quot; rails3rc yield</tag>
  <title>Rails3 RC - Named yield should return nil when content_for with that name was not called.</title>
  <updated-at type="datetime">2011-02-02T18:54:46+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Robert Pankowecki</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5305</url>
  <priority-name nil="true"></priority-name>
  <original-body>Rails 2 allowed to easily create nested layouts. It's a bit harder in Rails3.

@@@
class TtController &lt; ApplicationController

  def index
    render 'index', :layout =&gt; 'application'
  end

  def index2
    render 'index2', :layout =&gt; 'mss'
  end

end
@@@

In Rails3 you need to have:

@@@
# app/views/layouts/application.html.erb 

&lt;html&gt;
&lt;body&gt;

&lt;%= tmp = yield(:application) %&gt;
&lt;% if tmp.blank? %&gt;
  &lt;%= yield %&gt;
&lt;% end%&gt;

&lt;/body&gt;
&lt;/html&gt;

# app/views/layouts/mss.html.erb
&lt;% content_for(:application) do %&gt;
  mss start
  &lt;%= tmp = yield(:mss) %&gt;
  &lt;% if tmp.blank? %&gt;
    &lt;%= yield %&gt;
  &lt;% end %&gt;
  mss end
&lt;% end %&gt;

&lt;%= render :file =&gt; 'layouts/application' %&gt;
@@@

but in Rails 2 it could be much simpler:

@@@
# app/views/layouts/application.html.erb 

&lt;html&gt;
&lt;body&gt;
&lt;%= yield(:application) || yield %&gt;
&lt;/body&gt;
&lt;/html&gt;

# app/views/layouts/mss.html.erb
&lt;% content_for(:application) do %&gt;
  mss start
  &lt;%= yield(:mss) || yield %&gt;
  mss end
&lt;% end %&gt;

&lt;%= render :file =&gt; 'layouts/application' %&gt;
@@@

I think that current behavior should be changed to match Rails2 for simplicity and compatibility. As I showed it is useful for nested layouts. Also it is stated in Rails2 guides that it should work this way and I think we should stick with it.</original-body>
  <latest-body>Rails 2 allowed to easily create nested layouts. It's a bit harder in Rails3.

@@@
class TtController &lt; ApplicationController

  def index
    render 'index', :layout =&gt; 'application'
  end

  def index2
    render 'index2', :layout =&gt; 'mss'
  end

end
@@@

In Rails3 you need to have:

@@@
# app/views/layouts/application.html.erb 

&lt;html&gt;
&lt;body&gt;

&lt;%= tmp = yield(:application) %&gt;
&lt;% if tmp.blank? %&gt;
  &lt;%= yield %&gt;
&lt;% end%&gt;

&lt;/body&gt;
&lt;/html&gt;

# app/views/layouts/mss.html.erb
&lt;% content_for(:application) do %&gt;
  mss start
  &lt;%= tmp = yield(:mss) %&gt;
  &lt;% if tmp.blank? %&gt;
    &lt;%= yield %&gt;
  &lt;% end %&gt;
  mss end
&lt;% end %&gt;

&lt;%= render :file =&gt; 'layouts/application' %&gt;
@@@

but in Rails 2 it could be much simpler:

@@@
# app/views/layouts/application.html.erb 

&lt;html&gt;
&lt;body&gt;
&lt;%= yield(:application) || yield %&gt;
&lt;/body&gt;
&lt;/html&gt;

# app/views/layouts/mss.html.erb
&lt;% content_for(:application) do %&gt;
  mss start
  &lt;%= yield(:mss) || yield %&gt;
  mss end
&lt;% end %&gt;

&lt;%= render :file =&gt; 'layouts/application' %&gt;
@@@

I think that current behavior should be changed to match Rails2 for simplicity and compatibility. As I showed it is useful for nested layouts. Also it is stated in Rails2 guides that it should work this way and I think we should stick with it.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Rails 2 allowed to easily create nested layouts. It's a bit
harder in Rails3.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class TtController &amp;lt; ApplicationController

  def index
    render 'index', :layout =&amp;gt; 'application'
  end

  def index2
    render 'index2', :layout =&amp;gt; 'mss'
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In Rails3 you need to have:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# app/views/layouts/application.html.erb 

&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;%= tmp = yield(:application) %&amp;gt;
&amp;lt;% if tmp.blank? %&amp;gt;
  &amp;lt;%= yield %&amp;gt;
&amp;lt;% end%&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

# app/views/layouts/mss.html.erb
&amp;lt;% content_for(:application) do %&amp;gt;
  mss start
  &amp;lt;%= tmp = yield(:mss) %&amp;gt;
  &amp;lt;% if tmp.blank? %&amp;gt;
    &amp;lt;%= yield %&amp;gt;
  &amp;lt;% end %&amp;gt;
  mss end
&amp;lt;% end %&amp;gt;

&amp;lt;%= render :file =&amp;gt; 'layouts/application' %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;but in Rails 2 it could be much simpler:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# app/views/layouts/application.html.erb 

&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;%= yield(:application) || yield %&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

# app/views/layouts/mss.html.erb
&amp;lt;% content_for(:application) do %&amp;gt;
  mss start
  &amp;lt;%= yield(:mss) || yield %&amp;gt;
  mss end
&amp;lt;% end %&amp;gt;

&amp;lt;%= render :file =&amp;gt; 'layouts/application' %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think that current behavior should be changed to match Rails2
for simplicity and compatibility. As I showed it is useful for
nested layouts. Also it is stated in Rails2 guides that it should
work this way and I think we should stick with it.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails 2 allowed to easily create nested layouts. It's a bit harder in Rails3.

@@@
class TtController &lt; ApplicationController

  def index
    render 'index', :layout =&gt; 'application'
  end

  def index2
    render 'index2', :layout =&gt; 'mss'
  end

end
@@@

In Rails3 you need to have:

@@@
# app/views/layouts/application.html.erb 

&lt;html&gt;
&lt;body&gt;

&lt;%= tmp = yield(:application) %&gt;
&lt;% if tmp.blank? %&gt;
  &lt;%= yield %&gt;
&lt;% end%&gt;

&lt;/body&gt;
&lt;/html&gt;

# app/views/layouts/mss.html.erb
&lt;% content_for(:application) do %&gt;
  mss start
  &lt;%= tmp = yield(:mss) %&gt;
  &lt;% if tmp.blank? %&gt;
    &lt;%= yield %&gt;
  &lt;% end %&gt;
  mss end
&lt;% end %&gt;

&lt;%= render :file =&gt; 'layouts/application' %&gt;
@@@

but in Rails 2 it could be much simpler:

@@@
# app/views/layouts/application.html.erb 

&lt;html&gt;
&lt;body&gt;
&lt;%= yield(:application) || yield %&gt;
&lt;/body&gt;
&lt;/html&gt;

# app/views/layouts/mss.html.erb
&lt;% content_for(:application) do %&gt;
  mss start
  &lt;%= yield(:mss) || yield %&gt;
  mss end
&lt;% end %&gt;

&lt;%= render :file =&gt; 'layouts/application' %&gt;
@@@

I think that current behavior should be changed to match Rails2 for simplicity and compatibility. As I showed it is useful for nested layouts. Also it is stated in Rails2 guides that it should work this way and I think we should stick with it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails 2 allowed to easily create nested layouts. It's a bit
harder in Rails3.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class TtController &amp;lt; ApplicationController

  def index
    render 'index', :layout =&amp;gt; 'application'
  end

  def index2
    render 'index2', :layout =&amp;gt; 'mss'
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In Rails3 you need to have:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# app/views/layouts/application.html.erb 

&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;%= tmp = yield(:application) %&amp;gt;
&amp;lt;% if tmp.blank? %&amp;gt;
  &amp;lt;%= yield %&amp;gt;
&amp;lt;% end%&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

# app/views/layouts/mss.html.erb
&amp;lt;% content_for(:application) do %&amp;gt;
  mss start
  &amp;lt;%= tmp = yield(:mss) %&amp;gt;
  &amp;lt;% if tmp.blank? %&amp;gt;
    &amp;lt;%= yield %&amp;gt;
  &amp;lt;% end %&amp;gt;
  mss end
&amp;lt;% end %&amp;gt;

&amp;lt;%= render :file =&amp;gt; 'layouts/application' %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;but in Rails 2 it could be much simpler:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# app/views/layouts/application.html.erb 

&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;%= yield(:application) || yield %&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

# app/views/layouts/mss.html.erb
&amp;lt;% content_for(:application) do %&amp;gt;
  mss start
  &amp;lt;%= yield(:mss) || yield %&amp;gt;
  mss end
&amp;lt;% end %&amp;gt;

&amp;lt;%= render :file =&amp;gt; 'layouts/application' %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think that current behavior should be changed to match Rails2
for simplicity and compatibility. As I showed it is useful for
nested layouts. Also it is stated in Rails2 guides that it should
work this way and I think we should stick with it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-05T10:58:04+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5305</number>
      <permalink>rails3-rc-named-yield-should-return-nil-when-content_for-with-that-name-was-not-called</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_pack action_view content_for &quot;nested layouts&quot; rails3rc yield</tag>
      <title>Rails3 RC - Named yield should return nil when content_for with that name was not called.</title>
      <updated-at type="datetime">2010-08-05T10:58:06+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">1</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5305</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:00:41+00:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5305</number>
      <permalink>rails3-rc-named-yield-should-return-nil-when-content_for-with-that-name-was-not-called</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>action_pack action_view content_for &quot;nested layouts&quot; rails3rc yield</tag>
      <title>Rails3 RC - Named yield should return nil when content_for with that name was not called.</title>
      <updated-at type="datetime">2011-02-02T18:54:46+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5305</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:00:43+00:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5305</number>
      <permalink>rails3-rc-named-yield-should-return-nil-when-content_for-with-that-name-was-not-called</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>action_pack action_view content_for &quot;nested layouts&quot; rails3rc yield</tag>
      <title>Rails3 RC - Named yield should return nil when content_for with that name was not called.</title>
      <updated-at type="datetime">2011-02-02T18:54:33+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5305</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
