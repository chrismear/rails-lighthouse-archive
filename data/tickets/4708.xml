<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-26T16:51:11+01:00</created-at>
  <creator-id type="integer">55948</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4708</number>
  <permalink>query-cache-broken-when-using-associations-with-scopes</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>3.0 activerecord patch scope</tag>
  <title>Query cache broken when using associations with scopes</title>
  <updated-at type="datetime">2010-06-04T01:16:14+01:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">6</version>
  <user-name>Pratik</user-name>
  <creator-name>Rasmus R&#248;nn Nielsen</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4708</url>
  <priority-name>Low</priority-name>
  <original-body>I assume that the following should fire one sql query for each line:

u = User.first
u.posts.older_than 2.seconds
u.posts.older_than 2.hours

For me, it doesn't. The third line does not fire an sql query. Instead, it returns whatever line two returned.

Here's how to repeat this:

1) Create a new Rails app
2) script/rails g model User
3) script/rails g model Post user:references
4) Define this association in user.rb: has_many :posts
5) Define this scope in post.rb: scope :older_than, lambda {|period| where 'created_at &lt; ?', period.ago }
6) Go to the console
7) Run the code written at the top of this ticket while tailing the log file. Only two queries are fired.

I'm using Rails3 beta3 and Ruby 1.9.1 on Mac OSX.</original-body>
  <latest-body>I assume that the following should fire one sql query for each line:

u = User.first
u.posts.older_than 2.seconds
u.posts.older_than 2.hours

For me, it doesn't. The third line does not fire an sql query. Instead, it returns whatever line two returned.

Here's how to repeat this:

1) Create a new Rails app
2) script/rails g model User
3) script/rails g model Post user:references
4) Define this association in user.rb: has_many :posts
5) Define this scope in post.rb: scope :older_than, lambda {|period| where 'created_at &lt; ?', period.ago }
6) Go to the console
7) Run the code written at the top of this ticket while tailing the log file. Only two queries are fired.

I'm using Rails3 beta3 and Ruby 1.9.1 on Mac OSX.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I assume that the following should fire one sql query for each
line:&lt;/p&gt;
&lt;p&gt;u = User.first&lt;br&gt;
u.posts.older_than 2.seconds&lt;br&gt;
u.posts.older_than 2.hours&lt;/p&gt;
&lt;p&gt;For me, it doesn't. The third line does not fire an sql query.
Instead, it returns whatever line two returned.&lt;/p&gt;
&lt;p&gt;Here's how to repeat this:&lt;/p&gt;
&lt;p&gt;1) Create a new Rails app&lt;br&gt;
2) script/rails g model User&lt;br&gt;
3) script/rails g model Post user:references&lt;br&gt;
4) Define this association in user.rb: has_many :posts&lt;br&gt;
5) Define this scope in post.rb: scope :older_than, lambda
{|period| where 'created_at &amp;lt; ?', period.ago }&lt;br&gt;
6) Go to the console&lt;br&gt;
7) Run the code written at the top of this ticket while tailing the
log file. Only two queries are fired.&lt;/p&gt;
&lt;p&gt;I'm using Rails3 beta3 and Ruby 1.9.1 on Mac OSX.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I assume that the following should fire one sql query for each line:

u = User.first
u.posts.older_than 2.seconds
u.posts.older_than 2.hours

For me, it doesn't. The third line does not fire an sql query. Instead, it returns whatever line two returned.

Here's how to repeat this:

1) Create a new Rails app
2) script/rails g model User
3) script/rails g model Post user:references
4) Define this association in user.rb: has_many :posts
5) Define this scope in post.rb: scope :older_than, lambda {|period| where 'created_at &lt; ?', period.ago }
6) Go to the console
7) Run the code written at the top of this ticket while tailing the log file. Only two queries are fired.

I'm using Rails3 beta3 and Ruby 1.9.1 on Mac OSX.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I assume that the following should fire one sql query for each
line:&lt;/p&gt;
&lt;p&gt;u = User.first&lt;br&gt;
u.posts.older_than 2.seconds&lt;br&gt;
u.posts.older_than 2.hours&lt;/p&gt;
&lt;p&gt;For me, it doesn't. The third line does not fire an sql query.
Instead, it returns whatever line two returned.&lt;/p&gt;
&lt;p&gt;Here's how to repeat this:&lt;/p&gt;
&lt;p&gt;1) Create a new Rails app&lt;br&gt;
2) script/rails g model User&lt;br&gt;
3) script/rails g model Post user:references&lt;br&gt;
4) Define this association in user.rb: has_many :posts&lt;br&gt;
5) Define this scope in post.rb: scope :older_than, lambda
{|period| where 'created_at &amp;lt; ?', period.ago }&lt;br&gt;
6) Go to the console&lt;br&gt;
7) Run the code written at the top of this ticket while tailing the
log file. Only two queries are fired.&lt;/p&gt;
&lt;p&gt;I'm using Rails3 beta3 and Ruby 1.9.1 on Mac OSX.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-26T16:51:11+01:00</created-at>
      <creator-id type="integer">55948</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4708</number>
      <permalink>query-cache-broken-when-using-associations-with-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0</tag>
      <title>Query cache broken when using associations with scopes</title>
      <updated-at type="datetime">2010-05-26T16:51:19+01:00</updated-at>
      <user-id type="integer">55948</user-id>
      <version type="integer">1</version>
      <user-name>Rasmus R&#248;nn Nielsen</user-name>
      <creator-name>Rasmus R&#248;nn Nielsen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4708</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached is a failing test. I am using ruby 1.8.7 and am able to reproduce it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is a failing test. I am using ruby 1.8.7 and am able to
reproduce it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-26T21:22:41+01:00</created-at>
      <creator-id type="integer">55948</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;3.0&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4708</number>
      <permalink>query-cache-broken-when-using-associations-with-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord</tag>
      <title>Query cache broken when using associations with scopes</title>
      <updated-at type="datetime">2010-05-26T21:22:45+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Rasmus R&#248;nn Nielsen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4708</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It is not a query caching issue. It is named_scope_caching issue. Second time sql is not being generated becuase named_scopes_cache has memoized the input data. 

@@@ ruby
@_named_scopes_cache ||= {}
@_named_scopes_cache[method] ||= with_scope(construct_scope) { @reflection.klass.send(method, *args) }
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;It is not a query caching issue. It is named_scope_caching
issue. Second time sql is not being generated becuase
named_scopes_cache has memoized the input data.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;@_named_scopes_cache ||= {}
@_named_scopes_cache[method] ||= with_scope(construct_scope) { @reflection.klass.send(method, *args) }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-26T22:42:29+01:00</created-at>
      <creator-id type="integer">55948</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4708</number>
      <permalink>query-cache-broken-when-using-associations-with-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord</tag>
      <title>Query cache broken when using associations with scopes</title>
      <updated-at type="datetime">2010-05-26T22:42:34+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Rasmus R&#248;nn Nielsen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4708</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Attached is patch along with test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is patch along with test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-27T17:19:34+01:00</created-at>
      <creator-id type="integer">55948</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 3.0 activerecord
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4708</number>
      <permalink>query-cache-broken-when-using-associations-with-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord patch scope</tag>
      <title>Query cache broken when using associations with scopes</title>
      <updated-at type="datetime">2010-05-27T17:19:42+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">4</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Rasmus R&#248;nn Nielsen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4708</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Assigning this ticket to Pratik so that he could close it. He just committed http://github.com/rails/rails/commit/517f709b51d1d2766d1a783d9f02fa7a6a41abc4 which fixes this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Assigning this ticket to Pratik so that he could close it. He
just committed &lt;a href=
&quot;http://github.com/rails/rails/commit/517f709b51d1d2766d1a783d9f02fa7a6a41abc4&quot;&gt;
http://github.com/rails/rails/commit/517f709b51d1d2766d1a783d9f02fa...&lt;/a&gt;
which fixes this issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-04T01:08:32+01:00</created-at>
      <creator-id type="integer">55948</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4708</number>
      <permalink>query-cache-broken-when-using-associations-with-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 activerecord patch scope</tag>
      <title>Query cache broken when using associations with scopes</title>
      <updated-at type="datetime">2010-06-04T01:08:39+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">5</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Rasmus R&#248;nn Nielsen</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4708</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Sorry, hadn't seen this ticket/patch!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, hadn't seen this ticket/patch!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-04T01:16:06+01:00</created-at>
      <creator-id type="integer">55948</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4708</number>
      <permalink>query-cache-broken-when-using-associations-with-scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.0 activerecord patch scope</tag>
      <title>Query cache broken when using associations with scopes</title>
      <updated-at type="datetime">2010-06-04T01:16:14+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">6</version>
      <user-name>Pratik</user-name>
      <creator-name>Rasmus R&#248;nn Nielsen</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4708</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>9fe9850615e54b12e503e7e6a84a1da11bf5fa29</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-26T21:22:41+01:00</created-at>
      <filename>failing_test_against_rails_edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">535857</id>
      <size type="integer">2344</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/535857/failing_test_against_rails_edge.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>434e98d083671769bca9822c8c131e50689ecef7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-27T17:19:34+01:00</created-at>
      <filename>4708_fix_against_rails3_edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">537398</id>
      <size type="integer">3460</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/537398/4708_fix_against_rails3_edge.diff</url>
    </attachment>
  </attachments>
</ticket>
