<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-13T17:30:57+00:00</created-at>
  <creator-id type="integer">14295</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6288</number>
  <permalink>actionviewoutputbuffer-to_s-should-return-a-real-string</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>actionview mail render safe_buffer</tag>
  <title>ActionView::OutputBuffer to_s should return a real String</title>
  <updated-at type="datetime">2011-04-14T01:01:49+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">3</version>
  <user-name>rails</user-name>
  <creator-name>Ryan Montgomery</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6288</url>
  <priority-name nil="true"></priority-name>
  <original-body>Recently when debugging an issue rendering an email, I ran across some unexpected behavior.

To help us in our tests when rendering an email we use this:

def render(template, local_assigns={})
  view = ActionView::Base.new([&quot;features/fixtures&quot;])
  view.render :file =&gt; template, :locals =&gt; local_assigns
end

We would use this rendered output to create an email, but whenever we pull parts of the email out, like the body, it returns the part as a ActionView::OutputBuffer.

Even calling to_s on the body didn't help and after looking into it, it's obvious why: ActiveSupport::SafeBuffer, which ActionView::OutputBuffer inherits, returns self when calling to_s. I would expect to_s to at least attempt to return a string, maybe something like 'String.new self'.

Is there a reason for this behavior?

For Example:

This fails:
  # this is equivalent to what we get when extracting emails out of our rendered template as described in the problem above
  a = ActionView::OutputBuffer.new &quot;foo@example.com&quot;
  Mail:Address.new a

This succeeds:
  Mail:Address.new &quot;foo@example.com&quot;


API Reference for ActiveSupport::SafeBuffer
http://api.rubyonrails.org/classes/ActiveSupport/SafeBuffer.html#method-i-to_s</original-body>
  <latest-body>Recently when debugging an issue rendering an email, I ran across some unexpected behavior.

To help us in our tests when rendering an email we use this:

def render(template, local_assigns={})
  view = ActionView::Base.new([&quot;features/fixtures&quot;])
  view.render :file =&gt; template, :locals =&gt; local_assigns
end

We would use this rendered output to create an email, but whenever we pull parts of the email out, like the body, it returns the part as a ActionView::OutputBuffer.

Even calling to_s on the body didn't help and after looking into it, it's obvious why: ActiveSupport::SafeBuffer, which ActionView::OutputBuffer inherits, returns self when calling to_s. I would expect to_s to at least attempt to return a string, maybe something like 'String.new self'.

Is there a reason for this behavior?

For Example:

This fails:
  # this is equivalent to what we get when extracting emails out of our rendered template as described in the problem above
  a = ActionView::OutputBuffer.new &quot;foo@example.com&quot;
  Mail:Address.new a

This succeeds:
  Mail:Address.new &quot;foo@example.com&quot;


API Reference for ActiveSupport::SafeBuffer
http://api.rubyonrails.org/classes/ActiveSupport/SafeBuffer.html#method-i-to_s</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Recently when debugging an issue rendering an email, I ran
across some unexpected behavior.&lt;/p&gt;
&lt;p&gt;To help us in our tests when rendering an email we use this:&lt;/p&gt;
&lt;p&gt;def render(template, local_assigns={})&lt;br&gt;
view = ActionView::Base.new([&quot;features/fixtures&quot;]) view.render
:file =&amp;gt; template, :locals =&amp;gt; local_assigns end&lt;/p&gt;
&lt;p&gt;We would use this rendered output to create an email, but
whenever we pull parts of the email out, like the body, it returns
the part as a ActionView::OutputBuffer.&lt;/p&gt;
&lt;p&gt;Even calling to_s on the body didn't help and after looking into
it, it's obvious why: ActiveSupport::SafeBuffer, which
ActionView::OutputBuffer inherits, returns self when calling to_s.
I would expect to_s to at least attempt to return a string, maybe
something like 'String.new self'.&lt;/p&gt;
&lt;p&gt;Is there a reason for this behavior?&lt;/p&gt;
&lt;p&gt;For Example:&lt;/p&gt;
&lt;p&gt;This fails:&lt;br&gt;
# this is equivalent to what we get when extracting emails out of
our rendered template as described in the problem above a =
ActionView::OutputBuffer.new &quot;&lt;a href=
&quot;mailto:foo@example.com&quot;&gt;foo@example.com&lt;/a&gt;&quot; Mail:Address.new
a&lt;/p&gt;
&lt;p&gt;This succeeds:&lt;br&gt;
Mail:Address.new &quot;&lt;a href=
&quot;mailto:foo@example.com&quot;&gt;foo@example.com&lt;/a&gt;&quot;&lt;/p&gt;
&lt;p&gt;API Reference for ActiveSupport::SafeBuffer&lt;br&gt;
&lt;a href=
&quot;http://api.rubyonrails.org/classes/ActiveSupport/SafeBuffer.html#method-i-to_s&quot;&gt;
http://api.rubyonrails.org/classes/ActiveSupport/SafeBuffer.html#me...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Recently when debugging an issue rendering an email, I ran across some unexpected behavior.

To help us in our tests when rendering an email we use this:

def render(template, local_assigns={})
  view = ActionView::Base.new([&quot;features/fixtures&quot;])
  view.render :file =&gt; template, :locals =&gt; local_assigns
end

We would use this rendered output to create an email, but whenever we pull parts of the email out, like the body, it returns the part as a ActionView::OutputBuffer.

Even calling to_s on the body didn't help and after looking into it, it's obvious why: ActiveSupport::SafeBuffer, which ActionView::OutputBuffer inherits, returns self when calling to_s. I would expect to_s to at least attempt to return a string, maybe something like 'String.new self'.

Is there a reason for this behavior?

For Example:

This fails:
  # this is equivalent to what we get when extracting emails out of our rendered template as described in the problem above
  a = ActionView::OutputBuffer.new &quot;foo@example.com&quot;
  Mail:Address.new a

This succeeds:
  Mail:Address.new &quot;foo@example.com&quot;


API Reference for ActiveSupport::SafeBuffer
http://api.rubyonrails.org/classes/ActiveSupport/SafeBuffer.html#method-i-to_s</body>
      <body-html>&lt;div&gt;&lt;p&gt;Recently when debugging an issue rendering an email, I ran
across some unexpected behavior.&lt;/p&gt;
&lt;p&gt;To help us in our tests when rendering an email we use this:&lt;/p&gt;
&lt;p&gt;def render(template, local_assigns={})&lt;br&gt;
view = ActionView::Base.new([&quot;features/fixtures&quot;]) view.render
:file =&amp;gt; template, :locals =&amp;gt; local_assigns end&lt;/p&gt;
&lt;p&gt;We would use this rendered output to create an email, but
whenever we pull parts of the email out, like the body, it returns
the part as a ActionView::OutputBuffer.&lt;/p&gt;
&lt;p&gt;Even calling to_s on the body didn't help and after looking into
it, it's obvious why: ActiveSupport::SafeBuffer, which
ActionView::OutputBuffer inherits, returns self when calling to_s.
I would expect to_s to at least attempt to return a string, maybe
something like 'String.new self'.&lt;/p&gt;
&lt;p&gt;Is there a reason for this behavior?&lt;/p&gt;
&lt;p&gt;For Example:&lt;/p&gt;
&lt;p&gt;This fails:&lt;br&gt;
# this is equivalent to what we get when extracting emails out of
our rendered template as described in the problem above a =
ActionView::OutputBuffer.new &quot;&lt;a href=
&quot;mailto:foo@example.com&quot;&gt;foo@example.com&lt;/a&gt;&quot; Mail:Address.new
a&lt;/p&gt;
&lt;p&gt;This succeeds:&lt;br&gt;
Mail:Address.new &quot;&lt;a href=
&quot;mailto:foo@example.com&quot;&gt;foo@example.com&lt;/a&gt;&quot;&lt;/p&gt;
&lt;p&gt;API Reference for ActiveSupport::SafeBuffer&lt;br&gt;
&lt;a href=
&quot;http://api.rubyonrails.org/classes/ActiveSupport/SafeBuffer.html#method-i-to_s&quot;&gt;
http://api.rubyonrails.org/classes/ActiveSupport/SafeBuffer.html#me...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-13T17:30:57+00:00</created-at>
      <creator-id type="integer">14295</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6288</number>
      <permalink>actionviewoutputbuffer-to_s-should-return-a-real-string</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview mail render safe_buffer</tag>
      <title>ActionView::OutputBuffer to_s should return a real String</title>
      <updated-at type="datetime">2011-01-13T17:31:00+00:00</updated-at>
      <user-id type="integer">14295</user-id>
      <version type="integer">1</version>
      <user-name>Ryan Montgomery</user-name>
      <creator-name>Ryan Montgomery</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6288</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-14T01:00:17+01:00</created-at>
      <creator-id type="integer">14295</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6288</number>
      <permalink>actionviewoutputbuffer-to_s-should-return-a-real-string</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>actionview mail render safe_buffer</tag>
      <title>ActionView::OutputBuffer to_s should return a real String</title>
      <updated-at type="datetime">2011-04-14T01:01:49+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">2</version>
      <user-name>rails</user-name>
      <creator-name>Ryan Montgomery</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6288</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-14T01:00:18+01:00</created-at>
      <creator-id type="integer">14295</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6288</number>
      <permalink>actionviewoutputbuffer-to_s-should-return-a-real-string</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>actionview mail render safe_buffer</tag>
      <title>ActionView::OutputBuffer to_s should return a real String</title>
      <updated-at type="datetime">2011-04-14T01:00:25+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>Ryan Montgomery</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6288</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
