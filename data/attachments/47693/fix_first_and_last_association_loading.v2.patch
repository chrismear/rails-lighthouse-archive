From 0b399064d8659cbd6eac84bdd515e4569e51c68c Mon Sep 17 00:00:00 2001
From: Jan De Poorter <jan@defv.be>
Date: Mon, 22 Sep 2008 17:54:58 +0200
Subject: [PATCH] Find first or last by SQL if there are no new records in the association

---
 .../associations/association_collection.rb         |    2 +-
 .../associations/has_many_associations_test.rb     |   13 +++++++++++++
 2 files changed, 14 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/associations/association_collection.rb b/activerecord/lib/active_record/associations/association_collection.rb
index afb817f..ac338fc 100644
--- a/activerecord/lib/active_record/associations/association_collection.rb
+++ b/activerecord/lib/active_record/associations/association_collection.rb
@@ -420,7 +420,7 @@ module ActiveRecord
         end
 
         def fetch_first_or_last_using_find?(args)
-          args.first.kind_of?(Hash) || !(loaded? || @owner.new_record? || @reflection.options[:finder_sql] || !@target.blank? || args.first.kind_of?(Integer))
+          args.first.kind_of?(Hash) || !(loaded? || @owner.new_record? || @reflection.options[:finder_sql] || @target.any? { |record| record.new_record? } || args.first.kind_of?(Integer))
         end
     end
   end
diff --git a/activerecord/test/cases/associations/has_many_associations_test.rb b/activerecord/test/cases/associations/has_many_associations_test.rb
index ba750b2..61ef0cc 100644
--- a/activerecord/test/cases/associations/has_many_associations_test.rb
+++ b/activerecord/test/cases/associations/has_many_associations_test.rb
@@ -1008,6 +1008,19 @@ class HasManyAssociationsTest < ActiveRecord::TestCase
 
     assert firm.clients.loaded?
   end
+  
+  def test_calling_first_or_last_on_existing_record_with_create_should_not_load_association
+    firm = companies(:first_firm)
+    firm.clients.create(:name => 'Foo')
+    assert !firm.clients.loaded?
+
+    assert_queries 2 do
+      firm.clients.first
+      firm.clients.last
+    end
+
+    assert !firm.clients.loaded?
+  end
 
   def test_calling_first_or_last_on_new_record_should_not_run_queries
     firm = Firm.new
-- 
1.5.6.rc0.29.g3beb5


From e6981ad75ac7c430873c43d2178b93391299754b Mon Sep 17 00:00:00 2001
From: Jan De Poorter <jan@defv.be>
Date: Mon, 22 Sep 2008 18:51:22 +0200
Subject: [PATCH] Change habtm test so it reflects the changes I made

---
 .../has_and_belongs_to_many_associations_test.rb   |    3 ++-
 1 files changed, 2 insertions(+), 1 deletions(-)

diff --git a/activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb b/activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb
index 9981f4c..90bedd0 100644
--- a/activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb
+++ b/activerecord/test/cases/associations/has_and_belongs_to_many_associations_test.rb
@@ -239,6 +239,7 @@ class HasAndBelongsToManyAssociationsTest < ActiveRecord::TestCase
     proj1 = devel.projects.build(:name => "Make bed")
     proj2 = devel.projects.build(:name => "Lie in it")
     assert_equal devel.projects.last, proj2
+    assert devel.projects.loaded?
     assert proj2.new_record?
     devel.save
     assert !devel.new_record?
@@ -253,7 +254,7 @@ class HasAndBelongsToManyAssociationsTest < ActiveRecord::TestCase
     assert !devel.projects.loaded?
 
     assert_equal devel.projects.last, proj
-    assert devel.projects.loaded?
+    assert !devel.projects.loaded? # Don't load if you can de an SQL count
 
     assert !proj.new_record?
     assert_equal Developer.find(1).projects.sort_by(&:id).last, proj  # prove join table is updated
-- 
1.5.6.rc0.29.g3beb5

