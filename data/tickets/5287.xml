<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-03T16:30:15+01:00</created-at>
  <creator-id type="integer">26735</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5287</number>
  <permalink>scoped-engines-routing</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>engines routing</tag>
  <title>Scoped engines routing</title>
  <updated-at type="datetime">2010-08-20T10:41:36+01:00</updated-at>
  <user-id type="integer">7697</user-id>
  <version type="integer">2</version>
  <user-name>Andrew White</user-name>
  <creator-name>teamon</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5287</url>
  <priority-name>Low</priority-name>
  <original-body>Right now, there is no control over engine routes that are injected into base app. It is impossible to mount engine at &quot;/foo/&quot; instead of &quot;/&quot;

However it could be easily done with 9 lines of code.

@@@ ruby
# Some hacking
class Rails::Engine
  def self.define_routes(&amp;block)
    @@__routes_block = block
  end
  
  def self.draw_routes(where)
    where.instance_exec &amp;@@__routes_block
  end
end

# then

# my_app/config/routes.rb
MyApp::Application.routes.draw do |map|
  scope &quot;bar&quot; do
    MyEngine::Engine.draw_routes(self)
  end
end

# my_engine.rb

require &quot;rails&quot;

module MyEngine
  class Engine &lt; Rails::Engine
    define_routes do
      match &quot;/my_engine&quot;, :to =&gt; &quot;my_engine#foo&quot;
    end
  end
end


# $ rake routes
# bar_my_engine  /bar/my_engine {:controller=&gt;&quot;my_engine&quot;, :action=&gt;&quot;foo&quot;}
@@@</original-body>
  <latest-body>Right now, there is no control over engine routes that are injected into base app. It is impossible to mount engine at &quot;/foo/&quot; instead of &quot;/&quot;

However it could be easily done with 9 lines of code.

@@@ ruby
# Some hacking
class Rails::Engine
  def self.define_routes(&amp;block)
    @@__routes_block = block
  end
  
  def self.draw_routes(where)
    where.instance_exec &amp;@@__routes_block
  end
end

# then

# my_app/config/routes.rb
MyApp::Application.routes.draw do |map|
  scope &quot;bar&quot; do
    MyEngine::Engine.draw_routes(self)
  end
end

# my_engine.rb

require &quot;rails&quot;

module MyEngine
  class Engine &lt; Rails::Engine
    define_routes do
      match &quot;/my_engine&quot;, :to =&gt; &quot;my_engine#foo&quot;
    end
  end
end


# $ rake routes
# bar_my_engine  /bar/my_engine {:controller=&gt;&quot;my_engine&quot;, :action=&gt;&quot;foo&quot;}
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Right now, there is no control over engine routes that are
injected into base app. It is impossible to mount engine at &quot;/foo/&quot;
instead of &quot;/&quot;&lt;/p&gt;
&lt;p&gt;However it could be easily done with 9 lines of code.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# Some hacking
class Rails::Engine
  def self.define_routes(&amp;amp;block)
    @@__routes_block = block
  end
  
  def self.draw_routes(where)
    where.instance_exec &amp;amp;@@__routes_block
  end
end

# then

# my_app/config/routes.rb
MyApp::Application.routes.draw do |map|
  scope &quot;bar&quot; do
    MyEngine::Engine.draw_routes(self)
  end
end

# my_engine.rb

require &quot;rails&quot;

module MyEngine
  class Engine &amp;lt; Rails::Engine
    define_routes do
      match &quot;/my_engine&quot;, :to =&amp;gt; &quot;my_engine#foo&quot;
    end
  end
end


# $ rake routes
# bar_my_engine  /bar/my_engine {:controller=&amp;gt;&quot;my_engine&quot;, :action=&amp;gt;&quot;foo&quot;}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Right now, there is no control over engine routes that are injected into base app. It is impossible to mount engine at &quot;/foo/&quot; instead of &quot;/&quot;

However it could be easily done with 9 lines of code.

@@@ ruby
# Some hacking
class Rails::Engine
  def self.define_routes(&amp;block)
    @@__routes_block = block
  end
  
  def self.draw_routes(where)
    where.instance_exec &amp;@@__routes_block
  end
end

# then

# my_app/config/routes.rb
MyApp::Application.routes.draw do |map|
  scope &quot;bar&quot; do
    MyEngine::Engine.draw_routes(self)
  end
end

# my_engine.rb

require &quot;rails&quot;

module MyEngine
  class Engine &lt; Rails::Engine
    define_routes do
      match &quot;/my_engine&quot;, :to =&gt; &quot;my_engine#foo&quot;
    end
  end
end


# $ rake routes
# bar_my_engine  /bar/my_engine {:controller=&gt;&quot;my_engine&quot;, :action=&gt;&quot;foo&quot;}
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Right now, there is no control over engine routes that are
injected into base app. It is impossible to mount engine at &quot;/foo/&quot;
instead of &quot;/&quot;&lt;/p&gt;
&lt;p&gt;However it could be easily done with 9 lines of code.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# Some hacking
class Rails::Engine
  def self.define_routes(&amp;amp;block)
    @@__routes_block = block
  end
  
  def self.draw_routes(where)
    where.instance_exec &amp;amp;@@__routes_block
  end
end

# then

# my_app/config/routes.rb
MyApp::Application.routes.draw do |map|
  scope &quot;bar&quot; do
    MyEngine::Engine.draw_routes(self)
  end
end

# my_engine.rb

require &quot;rails&quot;

module MyEngine
  class Engine &amp;lt; Rails::Engine
    define_routes do
      match &quot;/my_engine&quot;, :to =&amp;gt; &quot;my_engine#foo&quot;
    end
  end
end


# $ rake routes
# bar_my_engine  /bar/my_engine {:controller=&amp;gt;&quot;my_engine&quot;, :action=&amp;gt;&quot;foo&quot;}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-03T16:30:15+01:00</created-at>
      <creator-id type="integer">26735</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5287</number>
      <permalink>scoped-engines-routing</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>engines routing</tag>
      <title>Scoped engines routing</title>
      <updated-at type="datetime">2010-08-03T16:34:46+01:00</updated-at>
      <user-id type="integer">26735</user-id>
      <version type="integer">1</version>
      <user-name>teamon</user-name>
      <creator-name>teamon</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5287</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think that it's best to leave route customization to the engine itself. An engine may make assumptions about it's routes and if they're moved it may break the engine. If you feel this decision is incorrect please raise the issue on the rubyonrails-core mailing list.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think that it's best to leave route customization to the
engine itself. An engine may make assumptions about it's routes and
if they're moved it may break the engine. If you feel this decision
is incorrect please raise the issue on the rubyonrails-core mailing
list.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-20T10:41:32+01:00</created-at>
      <creator-id type="integer">26735</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5287</number>
      <permalink>scoped-engines-routing</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>engines routing</tag>
      <title>Scoped engines routing</title>
      <updated-at type="datetime">2010-08-20T10:41:36+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>teamon</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5287</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
