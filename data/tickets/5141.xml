<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-17T21:36:42+01:00</created-at>
  <creator-id type="integer">53577</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5141</number>
  <permalink>deprecationproxy-for-rails_default_logger-hides-original-warn-method</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>deprecation logger railties</tag>
  <title>DeprecationProxy for RAILS_DEFAULT_LOGGER hides original warn method</title>
  <updated-at type="datetime">2011-02-02T17:11:53+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Martijn Walraven</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5141</url>
  <priority-name nil="true"></priority-name>
  <original-body>In order to issue a deprecation warning when a method is invoked, railties/lib/rails/deprecation.rb sets RAILS_DEFAULT_LOGGER to a DeprecationProxy with Rails.logger as its target. But as DeprecationProxy defines its own warn method, RAILS_DEFAULT_LOGGER.warn fails with &quot;ArgumentError: wrong number of arguments (1 for 3)&quot; (because the number of arguments to the DeprecationProxy's warn method is 3).

The real fix is obviously not to use the now deprecated RAILS_DEFAULT_LOGGER, but I came across this problem in an external dependency. As a temporary hack I've set RAILS_DEFAULT_LOGGER to nil (as this disables logging for that library), but this is obviously not a working solution as it will mess with other code still depending on RAILS_DEFAULT_LOGGER (and also gives a &quot;already initialized constant&quot; warning). I will of course update the external dependency to use Rails.logger, but maybe this helps people encountering the same issue in other code.

So to summarize: RAILS_DEFAULT_LOGGER is deprecated and will be removed in a next version, but RAILS_DEFAULT_LOGGER.warn doesn't work even now, so maybe it's best to consider it removed already.</original-body>
  <latest-body>In order to issue a deprecation warning when a method is invoked, railties/lib/rails/deprecation.rb sets RAILS_DEFAULT_LOGGER to a DeprecationProxy with Rails.logger as its target. But as DeprecationProxy defines its own warn method, RAILS_DEFAULT_LOGGER.warn fails with &quot;ArgumentError: wrong number of arguments (1 for 3)&quot; (because the number of arguments to the DeprecationProxy's warn method is 3).

The real fix is obviously not to use the now deprecated RAILS_DEFAULT_LOGGER, but I came across this problem in an external dependency. As a temporary hack I've set RAILS_DEFAULT_LOGGER to nil (as this disables logging for that library), but this is obviously not a working solution as it will mess with other code still depending on RAILS_DEFAULT_LOGGER (and also gives a &quot;already initialized constant&quot; warning). I will of course update the external dependency to use Rails.logger, but maybe this helps people encountering the same issue in other code.

So to summarize: RAILS_DEFAULT_LOGGER is deprecated and will be removed in a next version, but RAILS_DEFAULT_LOGGER.warn doesn't work even now, so maybe it's best to consider it removed already.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In order to issue a deprecation warning when a method is
invoked, railties/lib/rails/deprecation.rb sets
RAILS_DEFAULT_LOGGER to a DeprecationProxy with Rails.logger as its
target. But as DeprecationProxy defines its own warn method,
RAILS_DEFAULT_LOGGER.warn fails with &quot;ArgumentError: wrong number
of arguments (1 for 3)&quot; (because the number of arguments to the
DeprecationProxy's warn method is 3).&lt;/p&gt;
&lt;p&gt;The real fix is obviously not to use the now deprecated
RAILS_DEFAULT_LOGGER, but I came across this problem in an external
dependency. As a temporary hack I've set RAILS_DEFAULT_LOGGER to
nil (as this disables logging for that library), but this is
obviously not a working solution as it will mess with other code
still depending on RAILS_DEFAULT_LOGGER (and also gives a &quot;already
initialized constant&quot; warning). I will of course update the
external dependency to use Rails.logger, but maybe this helps
people encountering the same issue in other code.&lt;/p&gt;
&lt;p&gt;So to summarize: RAILS_DEFAULT_LOGGER is deprecated and will be
removed in a next version, but RAILS_DEFAULT_LOGGER.warn doesn't
work even now, so maybe it's best to consider it removed
already.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In order to issue a deprecation warning when a method is invoked, railties/lib/rails/deprecation.rb sets RAILS_DEFAULT_LOGGER to a DeprecationProxy with Rails.logger as its target. But as DeprecationProxy defines its own warn method, RAILS_DEFAULT_LOGGER.warn fails with &quot;ArgumentError: wrong number of arguments (1 for 3)&quot; (because the number of arguments to the DeprecationProxy's warn method is 3).

The real fix is obviously not to use the now deprecated RAILS_DEFAULT_LOGGER, but I came across this problem in an external dependency. As a temporary hack I've set RAILS_DEFAULT_LOGGER to nil (as this disables logging for that library), but this is obviously not a working solution as it will mess with other code still depending on RAILS_DEFAULT_LOGGER (and also gives a &quot;already initialized constant&quot; warning). I will of course update the external dependency to use Rails.logger, but maybe this helps people encountering the same issue in other code.

So to summarize: RAILS_DEFAULT_LOGGER is deprecated and will be removed in a next version, but RAILS_DEFAULT_LOGGER.warn doesn't work even now, so maybe it's best to consider it removed already.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In order to issue a deprecation warning when a method is
invoked, railties/lib/rails/deprecation.rb sets
RAILS_DEFAULT_LOGGER to a DeprecationProxy with Rails.logger as its
target. But as DeprecationProxy defines its own warn method,
RAILS_DEFAULT_LOGGER.warn fails with &quot;ArgumentError: wrong number
of arguments (1 for 3)&quot; (because the number of arguments to the
DeprecationProxy's warn method is 3).&lt;/p&gt;
&lt;p&gt;The real fix is obviously not to use the now deprecated
RAILS_DEFAULT_LOGGER, but I came across this problem in an external
dependency. As a temporary hack I've set RAILS_DEFAULT_LOGGER to
nil (as this disables logging for that library), but this is
obviously not a working solution as it will mess with other code
still depending on RAILS_DEFAULT_LOGGER (and also gives a &quot;already
initialized constant&quot; warning). I will of course update the
external dependency to use Rails.logger, but maybe this helps
people encountering the same issue in other code.&lt;/p&gt;
&lt;p&gt;So to summarize: RAILS_DEFAULT_LOGGER is deprecated and will be
removed in a next version, but RAILS_DEFAULT_LOGGER.warn doesn't
work even now, so maybe it's best to consider it removed
already.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-17T21:36:42+01:00</created-at>
      <creator-id type="integer">53577</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5141</number>
      <permalink>deprecationproxy-for-rails_default_logger-hides-original-warn-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>deprecation logger railties</tag>
      <title>DeprecationProxy for RAILS_DEFAULT_LOGGER hides original warn method</title>
      <updated-at type="datetime">2010-07-18T07:20:21+01:00</updated-at>
      <user-id type="integer">53577</user-id>
      <version type="integer">1</version>
      <user-name>Martijn Walraven</user-name>
      <creator-name>Martijn Walraven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5141</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:35:47+00:00</created-at>
      <creator-id type="integer">53577</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5141</number>
      <permalink>deprecationproxy-for-rails_default_logger-hides-original-warn-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>deprecation logger railties</tag>
      <title>DeprecationProxy for RAILS_DEFAULT_LOGGER hides original warn method</title>
      <updated-at type="datetime">2011-02-02T17:11:39+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Martijn Walraven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5141</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:35:48+00:00</created-at>
      <creator-id type="integer">53577</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5141</number>
      <permalink>deprecationproxy-for-rails_default_logger-hides-original-warn-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>deprecation logger railties</tag>
      <title>DeprecationProxy for RAILS_DEFAULT_LOGGER hides original warn method</title>
      <updated-at type="datetime">2011-02-02T17:11:53+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Martijn Walraven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5141</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
