<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-24T05:40:54+01:00</created-at>
  <creator-id type="integer">59450</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5190</number>
  <permalink>patch-enhance-cache-busting-customization</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>[PATCH] Enhance cache busting customization</title>
  <updated-at type="datetime">2011-02-02T19:45:44+00:00</updated-at>
  <user-id type="integer">59450</user-id>
  <version type="integer">4</version>
  <user-name>Richard Hulse</user-name>
  <creator-name>Richard Hulse</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5190</url>
  <priority-name nil="true"></priority-name>
  <original-body>The current Rails cache busting regime (in ActionView::Helpers) gives you three options:

1. asset_path + mtime query string (The default)
2. RAILS_ASSET_ID environment variable used in place of mtime
3. A proc called on config.action_controller.asset_path

The proc receives the asset_path, and the user can prepend a directory name (for example) for each release so that remote caches refetch the asset:
@@@ ruby
RELEASE_NUMBER = 12345
config.action_controller.asset_path = proc { |asset_path|
  &quot;/release-#{RELEASE_NUMBER}#{asset_path}&quot;
}
@@@
This patch also passes in the asset_id to the proc (using the internal asset_id caching mechanism), allowing the user to insert the mtime into the filename:
@@@ ruby
config.action_controller.asset_path = proc { |asset_path, asset_id|
  asset_path.clone.insert(-(File.extname(asset_path).length+1),&quot;-#{asset_id}&quot;)
}
@@@

This is the optimal regime for single server deployments (and those where the mtime can be synchronized between servers) because only assets that are actually modified will be refetched by the client browser or intermediate cache. On a site with many static assets and unique browsers this will reduce massive traffic spikes after a deployment.


The alternative is for the user to override ActionView::Helpers.rewrite_asset_path, but they would also have to handle the different Rails environments. 

The submitted approach avoids having to to do this by extending the current method of altering the asset_path as a config option.

I have added tests and updated the documentation in the helper module.</original-body>
  <latest-body>The current Rails cache busting regime (in ActionView::Helpers) gives you three options:

1. asset_path + mtime query string (The default)
2. RAILS_ASSET_ID environment variable used in place of mtime
3. A proc called on config.action_controller.asset_path

The proc receives the asset_path, and the user can prepend a directory name (for example) for each release so that remote caches refetch the asset:
@@@ ruby
RELEASE_NUMBER = 12345
config.action_controller.asset_path = proc { |asset_path|
  &quot;/release-#{RELEASE_NUMBER}#{asset_path}&quot;
}
@@@
This patch also passes in the asset_id to the proc (using the internal asset_id caching mechanism), allowing the user to insert the mtime into the filename:
@@@ ruby
config.action_controller.asset_path = proc { |asset_path, asset_id|
  asset_path.clone.insert(-(File.extname(asset_path).length+1),&quot;-#{asset_id}&quot;)
}
@@@

This is the optimal regime for single server deployments (and those where the mtime can be synchronized between servers) because only assets that are actually modified will be refetched by the client browser or intermediate cache. On a site with many static assets and unique browsers this will reduce massive traffic spikes after a deployment.


The alternative is for the user to override ActionView::Helpers.rewrite_asset_path, but they would also have to handle the different Rails environments. 

The submitted approach avoids having to to do this by extending the current method of altering the asset_path as a config option.

I have added tests and updated the documentation in the helper module.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The current Rails cache busting regime (in ActionView::Helpers)
gives you three options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;asset_path + mtime query string (The default)&lt;br&gt;&lt;/li&gt;
&lt;li&gt;RAILS_ASSET_ID environment variable used in place of
mtime&lt;br&gt;&lt;/li&gt;
&lt;li&gt;A proc called on config.action_controller.asset_path&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The proc receives the asset_path, and the user can prepend a
directory name (for example) for each release so that remote caches
refetch the asset:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;RELEASE_NUMBER = 12345
config.action_controller.asset_path = proc { |asset_path|
  &quot;/release-#{RELEASE_NUMBER}#{asset_path}&quot;
}&lt;/code&gt;
&lt;/pre&gt;
This patch also passes in the asset_id to the proc (using the
internal asset_id caching mechanism), allowing the user to insert
the mtime into the filename:&lt;br&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;config.action_controller.asset_path = proc { |asset_path, asset_id|
  asset_path.clone.insert(-(File.extname(asset_path).length+1),&quot;-#{asset_id}&quot;)
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is the optimal regime for single server deployments (and
those where the mtime can be synchronized between servers) because
only assets that are actually modified will be refetched by the
client browser or intermediate cache. On a site with many static
assets and unique browsers this will reduce massive traffic spikes
after a deployment.&lt;/p&gt;
&lt;p&gt;The alternative is for the user to override
ActionView::Helpers.rewrite_asset_path, but they would also have to
handle the different Rails environments.&lt;/p&gt;
&lt;p&gt;The submitted approach avoids having to to do this by extending
the current method of altering the asset_path as a config
option.&lt;/p&gt;
&lt;p&gt;I have added tests and updated the documentation in the helper
module.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The current Rails cache busting regime (in ActionView::Helpers) gives you three options:

1. asset_path + mtime query string (The default)
2. RAILS_ASSET_ID environment variable used in place of mtime
3. A proc called on config.action_controller.asset_path

The proc receives the asset_path, and the user can prepend a directory name (for example) for each release so that remote caches refetch the asset:
@@@ ruby
RELEASE_NUMBER = 12345
config.action_controller.asset_path = proc { |asset_path|
  &quot;/release-#{RELEASE_NUMBER}#{asset_path}&quot;
}
@@@
This patch also passes in the asset_id to the proc (using the internal asset_id caching mechanism), allowing the user to insert the mtime into the filename:
@@@ ruby
config.action_controller.asset_path = proc { |asset_path, asset_id|
  asset_path.clone.insert(-(File.extname(asset_path).length+1),&quot;-#{asset_id}&quot;)
}
@@@

This is the optimal regime for single server deployments (and those where the mtime can be synchronized between servers) because only assets that are actually modified will be refetched by the client browser or intermediate cache. On a site with many static assets and unique browsers this will reduce massive traffic spikes after a deployment.


The alternative is for the user to override ActionView::Helpers.rewrite_asset_path, but they would also have to handle the different Rails environments. 

The submitted approach avoids having to to do this by extending the current method of altering the asset_path as a config option.

I have added tests and updated the documentation in the helper module.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The current Rails cache busting regime (in ActionView::Helpers)
gives you three options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;asset_path + mtime query string (The default)&lt;br&gt;&lt;/li&gt;
&lt;li&gt;RAILS_ASSET_ID environment variable used in place of
mtime&lt;br&gt;&lt;/li&gt;
&lt;li&gt;A proc called on config.action_controller.asset_path&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The proc receives the asset_path, and the user can prepend a
directory name (for example) for each release so that remote caches
refetch the asset:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;RELEASE_NUMBER = 12345
config.action_controller.asset_path = proc { |asset_path|
  &quot;/release-#{RELEASE_NUMBER}#{asset_path}&quot;
}&lt;/code&gt;
&lt;/pre&gt;
This patch also passes in the asset_id to the proc (using the
internal asset_id caching mechanism), allowing the user to insert
the mtime into the filename:&lt;br&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;config.action_controller.asset_path = proc { |asset_path, asset_id|
  asset_path.clone.insert(-(File.extname(asset_path).length+1),&quot;-#{asset_id}&quot;)
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is the optimal regime for single server deployments (and
those where the mtime can be synchronized between servers) because
only assets that are actually modified will be refetched by the
client browser or intermediate cache. On a site with many static
assets and unique browsers this will reduce massive traffic spikes
after a deployment.&lt;/p&gt;
&lt;p&gt;The alternative is for the user to override
ActionView::Helpers.rewrite_asset_path, but they would also have to
handle the different Rails environments.&lt;/p&gt;
&lt;p&gt;The submitted approach avoids having to to do this by extending
the current method of altering the asset_path as a config
option.&lt;/p&gt;
&lt;p&gt;I have added tests and updated the documentation in the helper
module.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-24T05:40:54+01:00</created-at>
      <creator-id type="integer">59450</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5190</number>
      <permalink>patch-enhance-cache-busting-customization</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Enhance cache busting customization</title>
      <updated-at type="datetime">2010-07-24T10:12:31+01:00</updated-at>
      <user-id type="integer">59450</user-id>
      <version type="integer">1</version>
      <user-name>Richard Hulse</user-name>
      <creator-name>Richard Hulse</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5190</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:35:19+00:00</created-at>
      <creator-id type="integer">59450</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5190</number>
      <permalink>patch-enhance-cache-busting-customization</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] Enhance cache busting customization</title>
      <updated-at type="datetime">2011-02-02T17:09:44+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Richard Hulse</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5190</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:35:20+00:00</created-at>
      <creator-id type="integer">59450</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5190</number>
      <permalink>patch-enhance-cache-busting-customization</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>[PATCH] Enhance cache busting customization</title>
      <updated-at type="datetime">2011-02-02T17:10:12+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Richard Hulse</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5190</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Should I check this against Rails 3.03 to get things moving ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Should I check this against Rails 3.03 to get things moving
?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T18:03:00+00:00</created-at>
      <creator-id type="integer">59450</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5190</number>
      <permalink>patch-enhance-cache-busting-customization</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>[PATCH] Enhance cache busting customization</title>
      <updated-at type="datetime">2011-02-02T19:45:44+00:00</updated-at>
      <user-id type="integer">59450</user-id>
      <version type="integer">4</version>
      <user-name>Richard Hulse</user-name>
      <creator-name>Richard Hulse</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5190</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>05841845d4a8fe84787ace259969077944c6923c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-24T05:40:54+01:00</created-at>
      <filename>enhance-cache-busting.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">601488</id>
      <size type="integer">6409</size>
      <uploader-id type="integer">59450</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/601488/enhance-cache-busting.diff</url>
    </attachment>
  </attachments>
</ticket>
