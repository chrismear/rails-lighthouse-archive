<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-26T00:56:15+01:00</created-at>
  <creator-id type="integer">104709</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4977</number>
  <permalink>calling-size-on-an-has_many-through-association-errors</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>hasmany has_many has_many_association has_many_through has_many_through_association rails3 size through</tag>
  <title>Calling 'size' on an 'has_many :through' association errors</title>
  <updated-at type="datetime">2010-06-26T13:44:14+01:00</updated-at>
  <user-id type="integer">7697</user-id>
  <version type="integer">4</version>
  <user-name>Andrew White</user-name>
  <creator-name>Nicholas Clark</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4977</url>
  <priority-name>Low</priority-name>
  <original-body>When trying to call *size* on an *has_many through* association, an error is thrown. Expected behavior would follow the vanilla *has_many*

I have a [gist](http://gist.github.com/453544 &quot;My Gist&quot;) on Github that also tries to explain it.

For the following structure: 

@@@ ruby
class Contact &lt; ActiveRecord::Base
  has_one :family
end

class Family &lt; ActiveRecord::Base
  has_many :contacts
  has_many :members
end

class Member &lt; ActiveRecord::Base
  belongs_to :family
  has_many :contacts, :through =&gt; :family
end
@@@

When `Member.new.contacts.size` is called, the following error results:

&lt;code&gt;
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '))' at line 1: SELECT     COUNT(*) AS count_id FROM       `contacts` INNER JOIN `families` ON `contacts`.family_id = `families`.id WHERE     (`contacts`.`type` = 'FamilyContact') AND ((`families`.id = ))
&lt;/code&gt;

Since this is a new object it shouldn't be querying at all. It also occurs when calling on a saved object (in this example, a saved `Member` object). Both times it fails to insert the associations **through** models id.</original-body>
  <latest-body>When trying to call *size* on an *has_many through* association, an error is thrown. Expected behavior would follow the vanilla *has_many*

I have a [gist](http://gist.github.com/453544 &quot;My Gist&quot;) on Github that also tries to explain it.

For the following structure: 

@@@ ruby
class Contact &lt; ActiveRecord::Base
  has_one :family
end

class Family &lt; ActiveRecord::Base
  has_many :contacts
  has_many :members
end

class Member &lt; ActiveRecord::Base
  belongs_to :family
  has_many :contacts, :through =&gt; :family
end
@@@

When `Member.new.contacts.size` is called, the following error results:

&lt;code&gt;
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '))' at line 1: SELECT     COUNT(*) AS count_id FROM       `contacts` INNER JOIN `families` ON `contacts`.family_id = `families`.id WHERE     (`contacts`.`type` = 'FamilyContact') AND ((`families`.id = ))
&lt;/code&gt;

Since this is a new object it shouldn't be querying at all. It also occurs when calling on a saved object (in this example, a saved `Member` object). Both times it fails to insert the associations **through** models id.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When trying to call &lt;em&gt;size&lt;/em&gt; on an &lt;em&gt;has_many
through&lt;/em&gt; association, an error is thrown. Expected behavior
would follow the vanilla &lt;em&gt;has_many&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I have a &lt;a href=&quot;http://gist.github.com/453544&quot; title=
&quot;My Gist&quot;&gt;gist&lt;/a&gt; on Github that also tries to explain it.&lt;/p&gt;
&lt;p&gt;For the following structure:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Contact &amp;lt; ActiveRecord::Base
  has_one :family
end

class Family &amp;lt; ActiveRecord::Base
  has_many :contacts
  has_many :members
end

class Member &amp;lt; ActiveRecord::Base
  belongs_to :family
  has_many :contacts, :through =&amp;gt; :family
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When &lt;code&gt;Member.new.contacts.size&lt;/code&gt; is called, the
following error results:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in
your SQL syntax; check the manual that corresponds to your MySQL
server version for the right syntax to use near '))' at line 1:
SELECT COUNT(*) AS count_id FROM&lt;/code&gt; contacts INNER JOIN
&lt;code&gt;families&lt;/code&gt; ON &lt;code&gt;contacts&lt;/code&gt;.family_id =
&lt;code&gt;families&lt;/code&gt;.id WHERE
(&lt;code&gt;contacts&lt;/code&gt;.&lt;code&gt;type&lt;/code&gt; = 'FamilyContact') AND
((&lt;code&gt;families&lt;/code&gt;.id = ))&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Since this is a new object it shouldn't be querying at all. It
also occurs when calling on a saved object (in this example, a
saved &lt;code&gt;Member&lt;/code&gt; object). Both times it fails to insert
the associations &lt;strong&gt;through&lt;/strong&gt; models id.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When trying to call *size* on an *has_many through* association, an error is thrown. Expected behavior would follow the vanilla *has_many*

I have a [gist](http://gist.github.com/453544 &quot;My Gist&quot;) on Github that also tries to explain it.

For the following structure: 

@@@ ruby
class Contact &lt; ActiveRecord::Base
  has_one :family
end

class Family &lt; ActiveRecord::Base
  has_many :contacts
  has_many :members
end

class Member &lt; ActiveRecord::Base
  belongs_to :family
  has_many :contacts, :through =&gt; :family
end
@@@

When `Member.new.contacts.size` is called, the following error results:

&lt;code&gt;
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '))' at line 1: SELECT     COUNT(*) AS count_id FROM       `contacts` INNER JOIN `families` ON `contacts`.family_id = `families`.id WHERE     (`contacts`.`type` = 'FamilyContact') AND ((`families`.id = ))
&lt;/code&gt;

Since this is a new object it shouldn't be querying at all. It also occurs when calling on a saved object (in this example, a saved `Member` object). Both times it fails to insert the associations **through** models id.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When trying to call &lt;em&gt;size&lt;/em&gt; on an &lt;em&gt;has_many
through&lt;/em&gt; association, an error is thrown. Expected behavior
would follow the vanilla &lt;em&gt;has_many&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I have a &lt;a href=&quot;http://gist.github.com/453544&quot; title=
&quot;My Gist&quot;&gt;gist&lt;/a&gt; on Github that also tries to explain it.&lt;/p&gt;
&lt;p&gt;For the following structure:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Contact &amp;lt; ActiveRecord::Base
  has_one :family
end

class Family &amp;lt; ActiveRecord::Base
  has_many :contacts
  has_many :members
end

class Member &amp;lt; ActiveRecord::Base
  belongs_to :family
  has_many :contacts, :through =&amp;gt; :family
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When &lt;code&gt;Member.new.contacts.size&lt;/code&gt; is called, the
following error results:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in
your SQL syntax; check the manual that corresponds to your MySQL
server version for the right syntax to use near '))' at line 1:
SELECT COUNT(*) AS count_id FROM&lt;/code&gt; contacts INNER JOIN
&lt;code&gt;families&lt;/code&gt; ON &lt;code&gt;contacts&lt;/code&gt;.family_id =
&lt;code&gt;families&lt;/code&gt;.id WHERE
(&lt;code&gt;contacts&lt;/code&gt;.&lt;code&gt;type&lt;/code&gt; = 'FamilyContact') AND
((&lt;code&gt;families&lt;/code&gt;.id = ))&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Since this is a new object it shouldn't be querying at all. It
also occurs when calling on a saved object (in this example, a
saved &lt;code&gt;Member&lt;/code&gt; object). Both times it fails to insert
the associations &lt;strong&gt;through&lt;/strong&gt; models id.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-26T00:56:15+01:00</created-at>
      <creator-id type="integer">104709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4977</number>
      <permalink>calling-size-on-an-has_many-through-association-errors</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>hasmany rails3 size through</tag>
      <title>Calling 'size' on an 'has_many :through' association errors</title>
      <updated-at type="datetime">2010-06-26T01:11:07+01:00</updated-at>
      <user-id type="integer">104709</user-id>
      <version type="integer">1</version>
      <user-name>Nicholas Clark</user-name>
      <creator-name>Nicholas Clark</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4977</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-26T02:18:16+01:00</created-at>
      <creator-id type="integer">104709</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: hasmany rails3 size through
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4977</number>
      <permalink>calling-size-on-an-has_many-through-association-errors</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>hasmany has_many has_many_association has_many_through has_many_through_association rails3 size through</tag>
      <title>Calling 'size' on an 'has_many :through' association errors</title>
      <updated-at type="datetime">2010-06-26T02:18:20+01:00</updated-at>
      <user-id type="integer">104709</user-id>
      <version type="integer">2</version>
      <user-name>Nicholas Clark</user-name>
      <creator-name>Nicholas Clark</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4977</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I don't get where contacts.type comes into this. Sure you're not doing STI?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't get where contacts.type comes into this. Sure you're not
doing STI?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-26T03:12:05+01:00</created-at>
      <creator-id type="integer">104709</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4977</number>
      <permalink>calling-size-on-an-has_many-through-association-errors</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>hasmany has_many has_many_association has_many_through has_many_through_association rails3 size through</tag>
      <title>Calling 'size' on an 'has_many :through' association errors</title>
      <updated-at type="datetime">2010-06-26T03:12:10+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Nicholas Clark</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4977</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Duplicate of #4887</body>
      <body-html>&lt;div&gt;&lt;p&gt;Duplicate of &lt;a href=&quot;/projects/8994/tickets/4887&quot; title=
&quot;Ticket #4887&quot;&gt;#4887&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-26T13:44:05+01:00</created-at>
      <creator-id type="integer">104709</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4977</number>
      <permalink>calling-size-on-an-has_many-through-association-errors</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>hasmany has_many has_many_association has_many_through has_many_through_association rails3 size through</tag>
      <title>Calling 'size' on an 'has_many :through' association errors</title>
      <updated-at type="datetime">2010-06-26T13:44:14+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">4</version>
      <user-name>Andrew White</user-name>
      <creator-name>Nicholas Clark</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4977</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
