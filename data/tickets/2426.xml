<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-17T08:07:21+00:00</created-at>
  <creator-id type="integer">53098</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2426</number>
  <permalink>rackinput-already-read-on-first-upload-to-a-rails-metal-in-production</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>rack.input already read on first upload to a Rails Metal in production</title>
  <updated-at type="datetime">2011-03-26T01:58:53+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">10</version>
  <user-name>bingbing</user-name>
  <creator-name>maschnitz (at yahoo)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2426</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>rack.input is being read or seeked through improperly before I touch it. It's only upon the first upload to each of my mongrel cluster's servers. The mongrel server is fronted by Apache mod_proxy_balancer.

Steps to reproduce:

1) Set up a basic Rails app, with a mongrel_cluster and Apache mod_proxy_balancer front end.

2) Create a new Metal, app/metal/test.rb with:
@@@ 
require(File.dirname(__FILE__) + &quot;/../../config/environment&quot;) unless defined?(Rails)

class Test
  def self.call(env)
    if env[&quot;PATH_INFO&quot;] =~ /^\/test/i
      req = Rack::Request.new(env)
      if req.post?
        return [200, {&quot;Content-Type&quot; =&gt; &quot;text/html&quot;}, [env['rack.input'].pos.to_s]]
      else
        return [200, {&quot;Content-Type&quot; =&gt; &quot;text/html&quot;}, [ %Q|
&lt;form enctype=&quot;multipart/form-data&quot; id=&quot;post_form&quot; method=&quot;post&quot;&gt;
  &lt;input id=&quot;file&quot; name=&quot;file&quot; size=&quot;30&quot; type=&quot;file&quot;&gt;
  &lt;input id=&quot;submit&quot; name=&quot;commit&quot; value=&quot;submit&quot; type=&quot;submit&quot;&gt;
&lt;/form&gt;
| ]]
      end
    else
      [404, {&quot;Content-Type&quot; =&gt; &quot;text/html&quot;}, [&quot;Not Found&quot;]]
    end
  end
end 
@@@ 

3) Run the app, and navigate to /test.

4) Upload a file. Note the seek position reported.

5) Repeat the upload N times, where N is the number of mongrel servers in your cluster. (Assuming a round-robin or load-based proxy. Other proxy methods might require less.)

6) On the Nth try, the seek position has gone to 0. I believe this is the proper value.

Note that this does not happen in development mode, under an unproxied Rails rackup server, nor an unproxied mongrel server. I have not tried a rackup with just this Metal (not familiar enough with it).

The workaround is simple: call env['rack.input'].seek(0) before doing anything else in the metal.

Versions:
- Rails 2.3.2
- Rack 0.9.1
- Ruby 1.8.6
- Apache 2.2.9
- Ubuntu 8.10

I'm not sure which subsystem is doing this. Please let me know if this is mongrel's or rack's problem.</original-body>
  <latest-body>rack.input is being read or seeked through improperly before I touch it. It's only upon the first upload to each of my mongrel cluster's servers. The mongrel server is fronted by Apache mod_proxy_balancer.

Steps to reproduce:

1) Set up a basic Rails app, with a mongrel_cluster and Apache mod_proxy_balancer front end.

2) Create a new Metal, app/metal/test.rb with:
@@@ 
require(File.dirname(__FILE__) + &quot;/../../config/environment&quot;) unless defined?(Rails)

class Test
  def self.call(env)
    if env[&quot;PATH_INFO&quot;] =~ /^\/test/i
      req = Rack::Request.new(env)
      if req.post?
        return [200, {&quot;Content-Type&quot; =&gt; &quot;text/html&quot;}, [env['rack.input'].pos.to_s]]
      else
        return [200, {&quot;Content-Type&quot; =&gt; &quot;text/html&quot;}, [ %Q|
&lt;form enctype=&quot;multipart/form-data&quot; id=&quot;post_form&quot; method=&quot;post&quot;&gt;
  &lt;input id=&quot;file&quot; name=&quot;file&quot; size=&quot;30&quot; type=&quot;file&quot;&gt;
  &lt;input id=&quot;submit&quot; name=&quot;commit&quot; value=&quot;submit&quot; type=&quot;submit&quot;&gt;
&lt;/form&gt;
| ]]
      end
    else
      [404, {&quot;Content-Type&quot; =&gt; &quot;text/html&quot;}, [&quot;Not Found&quot;]]
    end
  end
end 
@@@ 

3) Run the app, and navigate to /test.

4) Upload a file. Note the seek position reported.

5) Repeat the upload N times, where N is the number of mongrel servers in your cluster. (Assuming a round-robin or load-based proxy. Other proxy methods might require less.)

6) On the Nth try, the seek position has gone to 0. I believe this is the proper value.

Note that this does not happen in development mode, under an unproxied Rails rackup server, nor an unproxied mongrel server. I have not tried a rackup with just this Metal (not familiar enough with it).

The workaround is simple: call env['rack.input'].seek(0) before doing anything else in the metal.

Versions:
- Rails 2.3.2
- Rack 0.9.1
- Ruby 1.8.6
- Apache 2.2.9
- Ubuntu 8.10

I'm not sure which subsystem is doing this. Please let me know if this is mongrel's or rack's problem.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;rack.input is being read or seeked through improperly before I
touch it. It's only upon the first upload to each of my mongrel
cluster's servers. The mongrel server is fronted by Apache
mod_proxy_balancer.&lt;/p&gt;
&lt;p&gt;Steps to reproduce:&lt;/p&gt;
&lt;p&gt;1) Set up a basic Rails app, with a mongrel_cluster and Apache
mod_proxy_balancer front end.&lt;/p&gt;
&lt;p&gt;2) Create a new Metal, app/metal/test.rb with:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
require(File.dirname(__FILE__) + &amp;quot;/../../config/environment&amp;quot;) unless defined?(Rails)

class Test
  def self.call(env)
    if env[&amp;quot;PATH_INFO&amp;quot;] =~ /^\/test/i
      req = Rack::Request.new(env)
      if req.post?
        return [200, {&amp;quot;Content-Type&amp;quot; =&amp;gt; &amp;quot;text/html&amp;quot;}, [env['rack.input'].pos.to_s]]
      else
        return [200, {&amp;quot;Content-Type&amp;quot; =&amp;gt; &amp;quot;text/html&amp;quot;}, [ %Q|
&amp;lt;form enctype=&amp;quot;multipart/form-data&amp;quot; id=&amp;quot;post_form&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt;
  &amp;lt;input id=&amp;quot;file&amp;quot; name=&amp;quot;file&amp;quot; size=&amp;quot;30&amp;quot; type=&amp;quot;file&amp;quot;&amp;gt;
  &amp;lt;input id=&amp;quot;submit&amp;quot; name=&amp;quot;commit&amp;quot; value=&amp;quot;submit&amp;quot; type=&amp;quot;submit&amp;quot;&amp;gt;
&amp;lt;/form&amp;gt;
| ]]
      end
    else
      [404, {&amp;quot;Content-Type&amp;quot; =&amp;gt; &amp;quot;text/html&amp;quot;}, [&amp;quot;Not Found&amp;quot;]]
    end
  end
end 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3) Run the app, and navigate to /test.&lt;/p&gt;
&lt;p&gt;4) Upload a file. Note the seek position reported.&lt;/p&gt;
&lt;p&gt;5) Repeat the upload N times, where N is the number of mongrel
servers in your cluster. (Assuming a round-robin or load-based
proxy. Other proxy methods might require less.)&lt;/p&gt;
&lt;p&gt;6) On the Nth try, the seek position has gone to 0. I believe
this is the proper value.&lt;/p&gt;
&lt;p&gt;Note that this does not happen in development mode, under an
unproxied Rails rackup server, nor an unproxied mongrel server. I
have not tried a rackup with just this Metal (not familiar enough
with it).&lt;/p&gt;
&lt;p&gt;The workaround is simple: call env['rack.input'].seek(0) before
doing anything else in the metal.&lt;/p&gt;
&lt;p&gt;Versions: - Rails 2.3.2 - Rack 0.9.1 - Ruby 1.8.6 - Apache 2.2.9
- Ubuntu 8.10&lt;/p&gt;
&lt;p&gt;I'm not sure which subsystem is doing this. Please let me know
if this is mongrel's or rack's problem.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>rack.input is being read or seeked through improperly before I touch it. It's only upon the first upload to each of my mongrel cluster's servers. The mongrel server is fronted by Apache mod_proxy_balancer.

Steps to reproduce:

1) Set up a basic Rails app, with a mongrel_cluster and Apache mod_proxy_balancer front end.

2) Create a new Metal, app/metal/test.rb with:
@@@ 
require(File.dirname(__FILE__) + &quot;/../../config/environment&quot;) unless defined?(Rails)

class Test
  def self.call(env)
    if env[&quot;PATH_INFO&quot;] =~ /^\/test/i
      req = Rack::Request.new(env)
      if req.post?
        return [200, {&quot;Content-Type&quot; =&gt; &quot;text/html&quot;}, [env['rack.input'].pos.to_s]]
      else
        return [200, {&quot;Content-Type&quot; =&gt; &quot;text/html&quot;}, [ %Q|
&lt;form enctype=&quot;multipart/form-data&quot; id=&quot;post_form&quot; method=&quot;post&quot;&gt;
  &lt;input id=&quot;file&quot; name=&quot;file&quot; size=&quot;30&quot; type=&quot;file&quot;&gt;
  &lt;input id=&quot;submit&quot; name=&quot;commit&quot; value=&quot;submit&quot; type=&quot;submit&quot;&gt;
&lt;/form&gt;
| ]]
      end
    else
      [404, {&quot;Content-Type&quot; =&gt; &quot;text/html&quot;}, [&quot;Not Found&quot;]]
    end
  end
end 
@@@ 

3) Run the app, and navigate to /test.

4) Upload a file. Note the seek position reported. It is not zero. Instead, in my tests, it's the end of the StringIO.

5) Repeat the upload N times, where N is the number of mongrel servers in your cluster. (Assuming a round-robin or load-based proxy. Other proxy methods might require less.)

6) On the Nth try, the seek position has gone to 0. I believe this is the proper value.

Note that this does not happen in development mode, under an unproxied Rails rackup server, nor an unproxied mongrel server. I have not tried a rackup with just this Metal (not familiar enough with it).

The workaround is simple: call env['rack.input'].rewind before doing anything else in the Metal.

Versions:
- Rails 2.3.2
- Rack 0.9.1
- Ruby 1.8.6
- Mongrel 1.1.5
- Apache 2.2.9
- Ubuntu 8.10

I'm not sure which subsystem is doing this. Please let me know if this is mongrel's or rack's problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;rack.input is being read or seeked through improperly before I
touch it. It's only upon the first upload to each of my mongrel
cluster's servers. The mongrel server is fronted by Apache
mod_proxy_balancer.&lt;/p&gt;
&lt;p&gt;Steps to reproduce:&lt;/p&gt;
&lt;p&gt;1) Set up a basic Rails app, with a mongrel_cluster and Apache
mod_proxy_balancer front end.&lt;/p&gt;
&lt;p&gt;2) Create a new Metal, app/metal/test.rb with:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
require(File.dirname(__FILE__) + &amp;quot;/../../config/environment&amp;quot;) unless defined?(Rails)

class Test
  def self.call(env)
    if env[&amp;quot;PATH_INFO&amp;quot;] =~ /^\/test/i
      req = Rack::Request.new(env)
      if req.post?
        return [200, {&amp;quot;Content-Type&amp;quot; =&amp;gt; &amp;quot;text/html&amp;quot;}, [env['rack.input'].pos.to_s]]
      else
        return [200, {&amp;quot;Content-Type&amp;quot; =&amp;gt; &amp;quot;text/html&amp;quot;}, [ %Q|
&amp;lt;form enctype=&amp;quot;multipart/form-data&amp;quot; id=&amp;quot;post_form&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt;
  &amp;lt;input id=&amp;quot;file&amp;quot; name=&amp;quot;file&amp;quot; size=&amp;quot;30&amp;quot; type=&amp;quot;file&amp;quot;&amp;gt;
  &amp;lt;input id=&amp;quot;submit&amp;quot; name=&amp;quot;commit&amp;quot; value=&amp;quot;submit&amp;quot; type=&amp;quot;submit&amp;quot;&amp;gt;
&amp;lt;/form&amp;gt;
| ]]
      end
    else
      [404, {&amp;quot;Content-Type&amp;quot; =&amp;gt; &amp;quot;text/html&amp;quot;}, [&amp;quot;Not Found&amp;quot;]]
    end
  end
end 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3) Run the app, and navigate to /test.&lt;/p&gt;
&lt;p&gt;4) Upload a file. Note the seek position reported. It is not
zero. Instead, in my tests, it's the end of the StringIO.&lt;/p&gt;
&lt;p&gt;5) Repeat the upload N times, where N is the number of mongrel
servers in your cluster. (Assuming a round-robin or load-based
proxy. Other proxy methods might require less.)&lt;/p&gt;
&lt;p&gt;6) On the Nth try, the seek position has gone to 0. I believe
this is the proper value.&lt;/p&gt;
&lt;p&gt;Note that this does not happen in development mode, under an
unproxied Rails rackup server, nor an unproxied mongrel server. I
have not tried a rackup with just this Metal (not familiar enough
with it).&lt;/p&gt;
&lt;p&gt;The workaround is simple: call env['rack.input'].rewind before
doing anything else in the Metal.&lt;/p&gt;
&lt;p&gt;Versions: - Rails 2.3.2 - Rack 0.9.1 - Ruby 1.8.6 - Mongrel
1.1.5 - Apache 2.2.9 - Ubuntu 8.10&lt;/p&gt;
&lt;p&gt;I'm not sure which subsystem is doing this. Please let me know
if this is mongrel's or rack's problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T21:08:00+01:00</created-at>
      <creator-id type="integer">53098</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2426</number>
      <permalink>rackinput-already-read-on-first-upload-to-a-rails-metal-in-production</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>rack.input already read on first upload to a Rails Metal in production</title>
      <updated-at type="datetime">2009-04-05T21:20:45+01:00</updated-at>
      <user-id type="integer">53098</user-id>
      <version type="integer">1</version>
      <user-name>maschnitz (at yahoo)</user-name>
      <creator-name>maschnitz (at yahoo)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2426</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>mongrel_cluster interfaces with Rack in CGI mode.
Inside Mongrel, the first request appears to leave the request body StringIO positioned at the end of the data stream.

Since that part of mongrel (lib/mongrel/cgi.rb) is only necessary in that mode, you don't see the problem when you use rackup, etc.

The fix to Mongrel is a one-liner, but I still need to track down why only the first request suffers from this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;mongrel_cluster interfaces with Rack in CGI mode. Inside
Mongrel, the first request appears to leave the request body
StringIO positioned at the end of the data stream.&lt;/p&gt;
&lt;p&gt;Since that part of mongrel (lib/mongrel/cgi.rb) is only
necessary in that mode, you don't see the problem when you use
rackup, etc.&lt;/p&gt;
&lt;p&gt;The fix to Mongrel is a one-liner, but I still need to track
down why only the first request suffers from this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-14T20:26:49+01:00</created-at>
      <creator-id type="integer">53098</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2426</number>
      <permalink>rackinput-already-read-on-first-upload-to-a-rails-metal-in-production</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>rack.input already read on first upload to a Rails Metal in production</title>
      <updated-at type="datetime">2009-04-14T20:26:53+01:00</updated-at>
      <user-id type="integer">43681</user-id>
      <version type="integer">2</version>
      <user-name>Wilson Bilkovich</user-name>
      <creator-name>maschnitz (at yahoo)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2426</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:45+01:00</created-at>
      <creator-id type="integer">53098</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2426</number>
      <permalink>rackinput-already-read-on-first-upload-to-a-rails-metal-in-production</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>rack.input already read on first upload to a Rails Metal in production</title>
      <updated-at type="datetime">2010-05-04T18:48:45+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>maschnitz (at yahoo)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2426</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>esides that &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/panerai-luminor-submersible-slytech-chrono-mens-watch-pam00202-watch.html&quot;&gt;Panerai Luminor Submersible Slytech Chrono Mens PAM00202&lt;/a&gt;&lt;/b&gt; your award acceptance cede &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;replica watches uk&lt;/a&gt;&lt;/b&gt; like. Instead of looking &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;Fake watches&lt;/a&gt;&lt;/b&gt; towards the comparable expired &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/omega-de-ville-prestige-automatic-mens-watch-4875-50-01-watch.html&quot;&gt;Omega De Ville Prestige Automatic Mens 4875.50.01&lt;/a&gt;&lt;/b&gt; gifts, adore domicile sculptures &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/replica-watch-cartier-rotonde.html&quot;&gt;fake Cartier Rotonde&lt;/a&gt;&lt;/b&gt; further at odds at &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/replica-watch-chopard-happy-snowflake.html&quot;&gt;cheap Chopard Happy Snowflake&lt;/a&gt;&lt;/b&gt; rest accessories, bring a &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/replica-watch-zenith-defy-xtreme.html&quot;&gt;fake Zenith Defy Xtreme&lt;/a&gt;&lt;/b&gt; the eye at portrait &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/replica-watch-omega-seamaster-planet-ocean.html&quot;&gt;fake Omega Seamaster Planet Ocean&lt;/a&gt;&lt;/b&gt; Vacheron Constantin watches. Ladies' &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/breitling-watch.html&quot;&gt;Replica Breitling watches&lt;/a&gt;&lt;/b&gt; Bulgaria Parents command is &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;Fake watches&lt;/a&gt;&lt;/b&gt; especially cute and marvelous exclusive. T</body>
      <body-html>&lt;div&gt;&lt;p&gt;esides that &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/panerai-luminor-submersible-slytech-chrono-mens-watch-pam00202-watch.html&quot;&gt;
Panerai Luminor Submersible Slytech Chrono Mens PAM00202&lt;/a&gt;&lt;/b&gt;
your award acceptance cede &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com&quot;&gt;replica watches uk&lt;/a&gt;&lt;/b&gt; like.
Instead of looking &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;Fake
watches&lt;/a&gt;&lt;/b&gt; towards the comparable expired &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/omega-de-ville-prestige-automatic-mens-watch-4875-50-01-watch.html&quot;&gt;
Omega De Ville Prestige Automatic Mens 4875.50.01&lt;/a&gt;&lt;/b&gt; gifts,
adore domicile sculptures &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/replica-watch-cartier-rotonde.html&quot;&gt;fake
Cartier Rotonde&lt;/a&gt;&lt;/b&gt; further at odds at &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/replica-watch-chopard-happy-snowflake.html&quot;&gt;
cheap Chopard Happy Snowflake&lt;/a&gt;&lt;/b&gt; rest accessories, bring a
&lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/replica-watch-zenith-defy-xtreme.html&quot;&gt;fake
Zenith Defy Xtreme&lt;/a&gt;&lt;/b&gt; the eye at portrait &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/replica-watch-omega-seamaster-planet-ocean.html&quot;&gt;
fake Omega Seamaster Planet Ocean&lt;/a&gt;&lt;/b&gt; Vacheron Constantin
watches. Ladies' &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/breitling-watch.html&quot;&gt;Replica Breitling
watches&lt;/a&gt;&lt;/b&gt; Bulgaria Parents command is &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com&quot;&gt;Fake watches&lt;/a&gt;&lt;/b&gt; especially cute
and marvelous exclusive. T&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T08:27:53+01:00</created-at>
      <creator-id type="integer">53098</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2426</number>
      <permalink>rackinput-already-read-on-first-upload-to-a-rails-metal-in-production</permalink>
      <priority type="integer">1578</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>rack.input already read on first upload to a Rails Metal in production</title>
      <updated-at type="datetime">2010-07-21T01:44:45+01:00</updated-at>
      <user-id type="integer">107783</user-id>
      <version type="integer">4</version>
      <user-name>LYN</user-name>
      <creator-name>maschnitz (at yahoo)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2426</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:50:53+00:00</created-at>
      <creator-id type="integer">53098</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2426</number>
      <permalink>rackinput-already-read-on-first-upload-to-a-rails-metal-in-production</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>rack.input already read on first upload to a Rails Metal in production</title>
      <updated-at type="datetime">2011-02-02T18:20:15+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>maschnitz (at yahoo)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2426</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:50:55+00:00</created-at>
      <creator-id type="integer">53098</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2426</number>
      <permalink>rackinput-already-read-on-first-upload-to-a-rails-metal-in-production</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>rack.input already read on first upload to a Rails Metal in production</title>
      <updated-at type="datetime">2011-02-02T18:20:05+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>maschnitz (at yahoo)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2426</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T02:31:48+00:00</created-at>
      <creator-id type="integer">53098</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2426</number>
      <permalink>rackinput-already-read-on-first-upload-to-a-rails-metal-in-production</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>rack.input already read on first upload to a Rails Metal in production</title>
      <updated-at type="datetime">2011-02-14T05:41:55+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">7</version>
      <user-name>xixi</user-name>
      <creator-name>maschnitz (at yahoo)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2426</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T09:35:49+00:00</created-at>
      <creator-id type="integer">53098</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2426</number>
      <permalink>rackinput-already-read-on-first-upload-to-a-rails-metal-in-production</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>rack.input already read on first upload to a Rails Metal in production</title>
      <updated-at type="datetime">2011-02-14T09:36:40+00:00</updated-at>
      <user-id type="integer">136894</user-id>
      <version type="integer">8</version>
      <user-name>tdfgd</user-name>
      <creator-name>maschnitz (at yahoo)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2426</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T07:59:47+00:00</created-at>
      <creator-id type="integer">53098</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2426</number>
      <permalink>rackinput-already-read-on-first-upload-to-a-rails-metal-in-production</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>rack.input already read on first upload to a Rails Metal in production</title>
      <updated-at type="datetime">2011-02-17T08:07:21+00:00</updated-at>
      <user-id type="integer">137453</user-id>
      <version type="integer">9</version>
      <user-name>gfhg</user-name>
      <creator-name>maschnitz (at yahoo)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2426</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;omega watch&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;omega
watch&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T01:39:36+00:00</created-at>
      <creator-id type="integer">53098</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2426</number>
      <permalink>rackinput-already-read-on-first-upload-to-a-rails-metal-in-production</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>rack.input already read on first upload to a Rails Metal in production</title>
      <updated-at type="datetime">2011-03-26T01:58:53+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">10</version>
      <user-name>bingbing</user-name>
      <creator-name>maschnitz (at yahoo)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2426</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
