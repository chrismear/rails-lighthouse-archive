<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-08-26T19:41:36+01:00</created-at>
  <creator-id type="integer">17334</creator-id>
  <milestone-due-on type="datetime">2009-08-31T00:00:00+01:00</milestone-due-on>
  <milestone-id type="integer">41987</milestone-id>
  <number type="integer">3102</number>
  <permalink>correct-regexp-extension-unoptionalize-assertions-and-fix-failures-masked-by-false-positives</permalink>
  <priority type="integer">21</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activesupport patch</tag>
  <title>Correct Regexp extension un/optionalize assertions and fix failures masked by false positives</title>
  <updated-at type="datetime">2009-08-26T23:43:48+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">4</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Jeffrey Hardy</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3102</url>
  <milestone-title>2.3.4</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This patch corrects the Regexp extension un/optionalize test assertions. Previously, `assert` was being used instead of assert_equal, producing false positives.

{{{
-  assert &quot;&quot;, Regexp.optionalize(&quot;&quot;)
+  assert_equal &quot;&quot;, Regexp.optionalize(&quot;&quot;)
}}}

The first will always pass since &quot;&quot; evaluates to true. It's clear that the original author intended `assert_equal`.

Fixing the assertions uncovered a failure which this patch also fixes:

{{{
test_optionalize(RegexpExtAccessTests)
    [./test/core_ext/regexp_ext_test.rb:18:in `test_optionalize'
&lt;&quot;&quot;&gt; expected but was
&lt;&quot;(?:)?&quot;&gt;.
}}}

Since the previous return value of /(?:)?/ will still match an empty string, behavior is unchanged (all Action Pack tests continue to pass), but based on the tests, &quot;&quot; was the return value the author intended.</original-body>
  <latest-body>This patch corrects the Regexp extension un/optionalize test assertions. Previously, `assert` was being used instead of assert_equal, producing false positives.

{{{
-  assert &quot;&quot;, Regexp.optionalize(&quot;&quot;)
+  assert_equal &quot;&quot;, Regexp.optionalize(&quot;&quot;)
}}}

The first will always pass since &quot;&quot; evaluates to true. It's clear that the original author intended `assert_equal`.

Fixing the assertions uncovered a failure which this patch also fixes:

{{{
test_optionalize(RegexpExtAccessTests)
    [./test/core_ext/regexp_ext_test.rb:18:in `test_optionalize'
&lt;&quot;&quot;&gt; expected but was
&lt;&quot;(?:)?&quot;&gt;.
}}}

Since the previous return value of /(?:)?/ will still match an empty string, behavior is unchanged (all Action Pack tests continue to pass), but based on the tests, &quot;&quot; was the return value the author intended.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This patch corrects the Regexp extension un/optionalize test
assertions. Previously, &lt;code&gt;assert&lt;/code&gt; was being used instead
of assert_equal, producing false positives.&lt;/p&gt;
&lt;p&gt;{{{ - assert &quot;&quot;, Regexp.optionalize(&quot;&quot;) + assert_equal &quot;&quot;,
Regexp.optionalize(&quot;&quot;) }}}&lt;/p&gt;
&lt;p&gt;The first will always pass since &quot;&quot; evaluates to true. It's
clear that the original author intended
&lt;code&gt;assert_equal&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Fixing the assertions uncovered a failure which this patch also
fixes:&lt;/p&gt;
&lt;p&gt;{{{ test_optionalize(RegexpExtAccessTests)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[./test/core_ext/regexp_ext_test.rb:18:in `test_optionalize'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;&quot;&quot;&amp;gt; expected but was &amp;lt;&quot;(?:)?&quot;&amp;gt;. }}}&lt;/p&gt;
&lt;p&gt;Since the previous return value of /(?:)?/ will still match an
empty string, behavior is unchanged (all Action Pack tests continue
to pass), but based on the tests, &quot;&quot; was the return value the
author intended.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch corrects the Regexp extension un/optionalize test assertions. Previously, `assert` was being used instead of assert_equal, producing false positives.

@@@
-  assert &quot;&quot;, Regexp.optionalize(&quot;&quot;)
+  assert_equal &quot;&quot;, Regexp.optionalize(&quot;&quot;)
@@@

The first will always pass since &quot;&quot; evaluates to true. It's clear that the original author intended `assert_equal`.

Fixing the assertions uncovered a failure which this patch also fixes:

@@@
test_optionalize(RegexpExtAccessTests)
    [./test/core_ext/regexp_ext_test.rb:18:in `test_optionalize'
&lt;&quot;&quot;&gt; expected but was
&lt;&quot;(?:)?&quot;&gt;.
@@@

Since the previous return value of /(?:)?/ will still match an empty string, behavior is unchanged (all Action Pack tests continue to pass), but based on the tests, &quot;&quot; was the return value the author intended.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch corrects the Regexp extension un/optionalize test
assertions. Previously, &lt;code&gt;assert&lt;/code&gt; was being used instead
of assert_equal, producing false positives.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;-  assert &quot;&quot;, Regexp.optionalize(&quot;&quot;)
+  assert_equal &quot;&quot;, Regexp.optionalize(&quot;&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The first will always pass since &quot;&quot; evaluates to true. It's
clear that the original author intended
&lt;code&gt;assert_equal&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Fixing the assertions uncovered a failure which this patch also
fixes:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;test_optionalize(RegexpExtAccessTests)
    [./test/core_ext/regexp_ext_test.rb:18:in `test_optionalize'
&amp;lt;&quot;&quot;&amp;gt; expected but was
&amp;lt;&quot;(?:)?&quot;&amp;gt;.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Since the previous return value of /(?:)?/ will still match an
empty string, behavior is unchanged (all Action Pack tests continue
to pass), but based on the tests, &quot;&quot; was the return value the
author intended.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-26T19:41:36+01:00</created-at>
      <creator-id type="integer">17334</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3102</number>
      <permalink>correct-regexp-extension-unoptionalize-assertions-and-fix-failures-masked-by-false-positives</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Correct Regexp extension un/optionalize assertions and fix failures masked by false positives</title>
      <updated-at type="datetime">2009-08-26T19:42:44+01:00</updated-at>
      <user-id type="integer">17334</user-id>
      <version type="integer">1</version>
      <user-name>Jeffrey Hardy</user-name>
      <creator-name>Jeffrey Hardy</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3102</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Fixed on master, needs 2-3-stable backport since it lives in AP there</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fixed on master, needs 2-3-stable backport since it lives in AP
there&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-26T22:40:17+01:00</created-at>
      <creator-id type="integer">17334</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">41987</milestone-id>
      <number type="integer">3102</number>
      <permalink>correct-regexp-extension-unoptionalize-assertions-and-fix-failures-masked-by-false-positives</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport patch</tag>
      <title>Correct Regexp extension un/optionalize assertions and fix failures masked by false positives</title>
      <updated-at type="datetime">2009-08-26T22:40:18+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Jeffrey Hardy</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3102</url>
      <milestone-title>2.3.4</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [66d8063c910b166e58f77ca5149a454f721667c7]) Correct Regexp#un/optionalize assertions and fix uncovered failures

[#3102 state:incomplete]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/66d8063c910b166e58f77ca5149a454f721667c7</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/66d8063c910b166e58f77ca5149a454f721667c7&quot;
title=
&quot;Changeset [66d8063c910b166e58f77ca5149a454f721667c7]&quot;&gt;[66d8063c910b166e58f77ca5149a454f721667c7]&lt;/a&gt;)
Correct Regexp#un/optionalize assertions and fix uncovered
failures&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/3102&quot; title=
&quot;Ticket #3102&quot;&gt;#3102&lt;/a&gt; state:incomplete]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/66d8063c910b166e58f77ca5149a454f721667c7&quot;&gt;
http://github.com/rails/rails/commit/66d8063c910b166e58f77ca5149a45...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-26T22:55:35+01:00</created-at>
      <creator-id type="integer">17334</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">41987</milestone-id>
      <number type="integer">3102</number>
      <permalink>correct-regexp-extension-unoptionalize-assertions-and-fix-failures-masked-by-false-positives</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activesupport patch</tag>
      <title>Correct Regexp extension un/optionalize assertions and fix failures masked by false positives</title>
      <updated-at type="datetime">2009-08-26T22:55:38+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Jeffrey Hardy</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3102</url>
      <milestone-title>2.3.4</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-26T23:43:41+01:00</created-at>
      <creator-id type="integer">17334</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">41987</milestone-id>
      <number type="integer">3102</number>
      <permalink>correct-regexp-extension-unoptionalize-assertions-and-fix-failures-masked-by-false-positives</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activesupport patch</tag>
      <title>Correct Regexp extension un/optionalize assertions and fix failures masked by false positives</title>
      <updated-at type="datetime">2009-08-26T23:43:48+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Jeffrey Hardy</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3102</url>
      <milestone-title>2.3.4</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b1559c4e125f59309dbc6d0c466646f8ac8f4eea</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-26T19:41:38+01:00</created-at>
      <filename>correct-regexp-extension-tests.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">253855</id>
      <size type="integer">1946</size>
      <uploader-id type="integer">17334</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/253855/correct-regexp-extension-tests.patch</url>
    </attachment>
  </attachments>
</ticket>
