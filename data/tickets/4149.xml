<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">12714</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-17T16:22:24+01:00</created-at>
  <creator-id type="integer">90112</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">4149</number>
  <permalink>strange-require-behavior-in-development-environment</permalink>
  <priority type="integer">1</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag nil="true"></tag>
  <title>strange 'require' behavior in development environment</title>
  <updated-at type="datetime">2010-11-08T08:52:23+00:00</updated-at>
  <user-id type="integer">94458</user-id>
  <version type="integer">19</version>
  <user-name>Jeff Kreeftmeijer</user-name>
  <creator-name>Valentine Bichkovsky</creator-name>
  <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>High</priority-name>
  <original-body>My model uses 'open-uri' to download images from remote locations.
In file app/models/asset.rb:
@@@
require 'open-uri'
class Asset &lt; ActiveRecord::Base
...
 def some_method(uri)
  &lt;uses open-uri here&gt;
 end
...
end
@@@

It works fine in the production environment and in the development environment when using rails console.
But it throws the folloving exception when trying to download an image via web interface in development environment:
@@@
uninitialized constant OpenURI
@@@

For now, I made it work placing the require statement _inside_ the class, like this:
@@@
class Asset &lt; ActiveRecord::Base
 require 'open-uri'
 ...
 def some_method(uri)
  &lt;uses open-uri here&gt;
 end
...
end
@@@
but it looks strange, isn't it?

My configuration: edge Rails, Ruby 1.8.7, Ubuntu 9.10.</original-body>
  <latest-body>My model uses 'open-uri' to download images from remote locations.
In file app/models/asset.rb:
@@@
require 'open-uri'
class Asset &lt; ActiveRecord::Base
...
 def some_method(uri)
  &lt;uses open-uri here&gt;
 end
...
end
@@@

It works fine in the production environment and in the development environment when using rails console.
But it throws the folloving exception when trying to download an image via web interface in development environment:
@@@
uninitialized constant OpenURI
@@@

For now, I made it work placing the require statement _inside_ the class, like this:
@@@
class Asset &lt; ActiveRecord::Base
 require 'open-uri'
 ...
 def some_method(uri)
  &lt;uses open-uri here&gt;
 end
...
end
@@@
but it looks strange, isn't it?

My configuration: edge Rails, Ruby 1.8.7, Ubuntu 9.10.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;My model uses 'open-uri' to download images from remote
locations.&lt;br&gt;
In file app/models/asset.rb:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;require 'open-uri'
class Asset &amp;lt; ActiveRecord::Base
...
 def some_method(uri)
  &amp;lt;uses open-uri here&amp;gt;
 end
...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It works fine in the production environment and in the
development environment when using rails console.&lt;br&gt;
But it throws the folloving exception when trying to download an
image via web interface in development environment:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;uninitialized constant OpenURI&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For now, I made it work placing the require statement
&lt;em&gt;inside&lt;/em&gt; the class, like this:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Asset &amp;lt; ActiveRecord::Base
 require 'open-uri'
 ...
 def some_method(uri)
  &amp;lt;uses open-uri here&amp;gt;
 end
...
end&lt;/code&gt;
&lt;/pre&gt;
but it looks strange, isn't it?
&lt;p&gt;My configuration: edge Rails, Ruby 1.8.7, Ubuntu 9.10.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>My model uses 'open-uri' to download images from remote locations.
In file app/models/asset.rb:
@@@
require 'open-uri'
class Asset &lt; ActiveRecord::Base
...
 def some_method(uri)
  &lt;uses open-uri here&gt;
 end
...
end
@@@

It works fine in the production environment and in the development environment when using rails console.
But it throws the folloving exception when trying to download an image via web interface in development environment:
@@@
uninitialized constant OpenURI
@@@

For now, I made it work placing the require statement _inside_ the class, like this:
@@@
class Asset &lt; ActiveRecord::Base
 require 'open-uri'
 ...
 def some_method(uri)
  &lt;uses open-uri here&gt;
 end
...
end
@@@
but it looks strange, isn't it?

My configuration: edge Rails, Ruby 1.8.7, Ubuntu 9.10.</body>
      <body-html>&lt;div&gt;&lt;p&gt;My model uses 'open-uri' to download images from remote
locations.&lt;br&gt;
In file app/models/asset.rb:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;require 'open-uri'
class Asset &amp;lt; ActiveRecord::Base
...
 def some_method(uri)
  &amp;lt;uses open-uri here&amp;gt;
 end
...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It works fine in the production environment and in the
development environment when using rails console.&lt;br&gt;
But it throws the folloving exception when trying to download an
image via web interface in development environment:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;uninitialized constant OpenURI&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For now, I made it work placing the require statement
&lt;em&gt;inside&lt;/em&gt; the class, like this:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Asset &amp;lt; ActiveRecord::Base
 require 'open-uri'
 ...
 def some_method(uri)
  &amp;lt;uses open-uri here&amp;gt;
 end
...
end&lt;/code&gt;
&lt;/pre&gt;
but it looks strange, isn't it?
&lt;p&gt;My configuration: edge Rails, Ruby 1.8.7, Ubuntu 9.10.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-10T19:37:48+00:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;development environment&quot; &quot;rails 3&quot; require</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-03-10T19:37:50+00:00</updated-at>
      <user-id type="integer">90112</user-id>
      <version type="integer">1</version>
      <user-name>Valentine Bichkovsky</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have the exact same problem. And valentin's method of putting the require statement into the class definition actually helps. Seems very strange to me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have the exact same problem. And valentin's method of putting
the require statement into the class definition actually helps.
Seems very strange to me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-19T12:05:43+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;development environment&quot; &quot;rails 3&quot; require</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-04-19T12:05:45+01:00</updated-at>
      <user-id type="integer">42458</user-id>
      <version type="integer">2</version>
      <user-name>Maximilian Schulz</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can't reproduce the problem. Requiring outside the class works for me in both production and development.

ruby 1.8.7 (2010-01-10 patchlevel 249) [i686-linux]
Rails 3.0.0.beta3</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can't reproduce the problem. Requiring outside the class works
for me in both production and development.&lt;/p&gt;
&lt;p&gt;ruby 1.8.7 (2010-01-10 patchlevel 249) [i686-linux]&lt;br&gt;
Rails 3.0.0.beta3&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T11:12:38+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;development environment&quot; &quot;rails 3&quot; require</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-04-21T11:12:40+01:00</updated-at>
      <user-id type="integer">3806</user-id>
      <version type="integer">3</version>
      <user-name>kates</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I also have this problem when using it in the application controller. Requiring it inside the application controller class seems to fix it for the first request, but subsequent requests cause a NameError(uninitialized constant OpenURI)

ruby 1.9.2dev (2010-04-15 trunk 27346) [i686-linux]
Rails 3.0.0.beta3</body>
      <body-html>&lt;div&gt;&lt;p&gt;I also have this problem when using it in the application
controller. Requiring it inside the application controller class
seems to fix it for the first request, but subsequent requests
cause a NameError(uninitialized constant OpenURI)&lt;/p&gt;
&lt;p&gt;ruby 1.9.2dev (2010-04-15 trunk 27346) [i686-linux]&lt;br&gt;
Rails 3.0.0.beta3&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-27T06:44:54+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;development environment\&quot; \&quot;rails 3\&quot; require&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-04-27T06:44:58+01:00</updated-at>
      <user-id type="integer">96798</user-id>
      <version type="integer">4</version>
      <user-name>jbermudes</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Could not reproduce this error in Rails 2.3.5 (ruby 1.8.7 (2009-06-08 patchlevel 173) [universal-darwin10.0])

We used the following in our attempt to reproduce: (app/models/person.rb)

@@@
require 'open-uri'

class Person &lt; ActiveRecord::Base
  def foo
    foo = open('http://google.com')
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could not reproduce this error in Rails 2.3.5 (ruby 1.8.7
(2009-06-08 patchlevel 173) [universal-darwin10.0])&lt;/p&gt;
&lt;p&gt;We used the following in our attempt to reproduce:
(app/models/person.rb)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;require 'open-uri'

class Person &amp;lt; ActiveRecord::Base
  def foo
    foo = open('http://google.com')
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-27T11:18:55+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-04-27T11:18:58+01:00</updated-at>
      <user-id type="integer">96813</user-id>
      <version type="integer">5</version>
      <user-name>Ganesh Shankar</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can confirm this is still happening here:

$ rails --version
Rails 3.0.0.beta3
$ ruby --version
ruby 1.9.2dev (2010-04-28 trunk 27525) [x86_64-darwin10.3.0]

My require statement is in a module defined in lib/foo.rb -- so it doesn't necessarily have to be in a controller or AR class.

However, the error is only generated when making a request to a controller that eventually hits the Module **on the second attempt**.  The first attempt works fine, as do other routes that don't use the Module.

This issue occurs while running in development -- it does not occur while running in production</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can confirm this is still happening here:&lt;/p&gt;
&lt;p&gt;$ rails --version Rails 3.0.0.beta3&lt;br&gt;
$ ruby --version ruby 1.9.2dev (2010-04-28 trunk 27525)
[x86_64-darwin10.3.0]&lt;/p&gt;
&lt;p&gt;My require statement is in a module defined in lib/foo.rb -- so
it doesn't necessarily have to be in a controller or AR class.&lt;/p&gt;
&lt;p&gt;However, the error is only generated when making a request to a
controller that eventually hits the Module &lt;strong&gt;on the second
attempt&lt;/strong&gt;. The first attempt works fine, as do other routes
that don't use the Module.&lt;/p&gt;
&lt;p&gt;This issue occurs while running in development -- it does not
occur while running in production&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-28T16:42:39+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-04-28T16:42:43+01:00</updated-at>
      <user-id type="integer">20273</user-id>
      <version type="integer">6</version>
      <user-name>Josh Sharpe</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>requiring open-uri at the top of environment.rb and removing it from all of my Modules 'fixes' this -- although it's definitely the wrong solution.</body>
      <body-html>&lt;div&gt;&lt;p&gt;requiring open-uri at the top of environment.rb and removing it
from all of my Modules 'fixes' this -- although it's definitely the
wrong solution.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-28T17:54:53+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-04-28T17:54:58+01:00</updated-at>
      <user-id type="integer">20273</user-id>
      <version type="integer">7</version>
      <user-name>Josh Sharpe</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am not able to recreate this problem with rails3 beta3. This is what I did.

&lt;pre&gt;
rvm use ruby-1.8.7
rails g scaffold User name:string
rake db:migrate

# add following line at the top of app/models/user.rb
require 'open-uri'

rails s
&lt;/pre&gt;

I refreshed the page a number of times. All seems fine.

Some more info about my environment.

&lt;pre&gt;
server booted with WEBrick

$ ruby -v
ruby 1.8.7 (2010-01-10 patchlevel 249) [i686-darwin10.3.0]

$ rails -v
Rails 3.0.0.beta3
&lt;/pre&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am not able to recreate this problem with rails3 beta3. This
is what I did.&lt;/p&gt;
&lt;pre&gt;
rvm use ruby-1.8.7
rails g scaffold User name:string
rake db:migrate

# add following line at the top of app/models/user.rb
require 'open-uri'

rails s
&lt;/pre&gt;
&lt;p&gt;I refreshed the page a number of times. All seems fine.&lt;/p&gt;
&lt;p&gt;Some more info about my environment.&lt;/p&gt;
&lt;pre&gt;
server booted with WEBrick

$ ruby -v
ruby 1.8.7 (2010-01-10 patchlevel 249) [i686-darwin10.3.0]

$ rails -v
Rails 3.0.0.beta3
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-28T18:18:17+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-04-28T18:18:20+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">8</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Neeraj Singh, it is not the 'require' statement, that causes an error. Try to actually *use* open-uri in your code, like opening some URL in some of your model's methods, and that method should be called from the controller when you refresh the page.

About the second attempt - I was also getting this error on the second attempt. 

I think, it is connected with class reloading in development mode. Everything is loaded as it has on the first attempt, but then, on the second attempt, when class is reloaded, something is not working correctly. It also explains why the error occurs in development mode only.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Neeraj Singh, it is not the 'require' statement, that causes an
error. Try to actually &lt;em&gt;use&lt;/em&gt; open-uri in your code, like
opening some URL in some of your model's methods, and that method
should be called from the controller when you refresh the page.&lt;/p&gt;
&lt;p&gt;About the second attempt - I was also getting this error on the
second attempt.&lt;/p&gt;
&lt;p&gt;I think, it is connected with class reloading in development
mode. Everything is loaded as it has on the first attempt, but
then, on the second attempt, when class is reloaded, something is
not working correctly. It also explains why the error occurs in
development mode only.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-29T11:36:51+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-04-29T11:37:34+01:00</updated-at>
      <user-id type="integer">90112</user-id>
      <version type="integer">9</version>
      <user-name>Valentine Bichkovsky</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I spent some time today looking into this issue. Here are my thoughts.

First this is how you can reproduce the problem.

@@@ ruby
require 'open-uri'
class UsersController &lt; ApplicationController
  def index
    open(&quot;http://www.ruby-lang.org/&quot;) {|f| }
    render :text =&gt; 'hello'
  end
end
@@@

Everything will work fine in production mode.

In development mode start the server and visit http://localhost:3000/users . First time things will look fine. Now refresh the page and you will see &lt;tt&gt;uninitialized constant OpenURI&lt;/tt&gt; error.

active_spport/dependencies.rb has following code.

@@@ ruby
def load_file(...)
...
newly_defined_paths = new_constants_in(*parent_paths) do
  result = Kernel.load path
end
autoloaded_constants.concat newly_defined_paths unless load_once_path?(path)
...
end
@@@

Above mentioned piece of code finds all the constants defined in users_controller and adds those constants to autoloaded_constants. At the end of the request all the items from autloaded_constants are removed. It means OpenURI is removed from the constant. 

However this strategy has one issue.

First look at [this discussion](http://www.ruby-forum.com/topic/209674) to see how in some cases the constants which are removed using remove_const are not restored using require.

Exactly the same thing is happening here. In the case I illustrated above OpenURI is getting removed using remove_const method. However &lt;tt&gt;require 'open-uri'&lt;/tt&gt; returns false the second time when page is refreshed. This is precisely because of the reason mentioned in [this discussion](http://www.ruby-forum.com/topic/209674) .

The main point is that removing a constant using remove_const does not necessarily removes the constant from $LOADED_FEATURES which is what require checks to see if constant needs to be loaded or not.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I spent some time today looking into this issue. Here are my
thoughts.&lt;/p&gt;
&lt;p&gt;First this is how you can reproduce the problem.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require 'open-uri'
class UsersController &amp;lt; ApplicationController
  def index
    open(&quot;http://www.ruby-lang.org/&quot;) {|f| }
    render :text =&amp;gt; 'hello'
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Everything will work fine in production mode.&lt;/p&gt;
&lt;p&gt;In development mode start the server and visit &lt;a href=
&quot;http://localhost:3000/users&quot;&gt;http://localhost:3000/users&lt;/a&gt; .
First time things will look fine. Now refresh the page and you will
see &lt;tt&gt;uninitialized constant OpenURI&lt;/tt&gt; error.&lt;/p&gt;
&lt;p&gt;active_spport/dependencies.rb has following code.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def load_file(...)
...
newly_defined_paths = new_constants_in(*parent_paths) do
  result = Kernel.load path
end
autoloaded_constants.concat newly_defined_paths unless load_once_path?(path)
...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Above mentioned piece of code finds all the constants defined in
users_controller and adds those constants to autoloaded_constants.
At the end of the request all the items from autloaded_constants
are removed. It means OpenURI is removed from the constant.&lt;/p&gt;
&lt;p&gt;However this strategy has one issue.&lt;/p&gt;
&lt;p&gt;First look at &lt;a href=
&quot;http://www.ruby-forum.com/topic/209674&quot;&gt;this discussion&lt;/a&gt; to see
how in some cases the constants which are removed using
remove_const are not restored using require.&lt;/p&gt;
&lt;p&gt;Exactly the same thing is happening here. In the case I
illustrated above OpenURI is getting removed using remove_const
method. However &lt;tt&gt;require 'open-uri'&lt;/tt&gt; returns false the
second time when page is refreshed. This is precisely because of
the reason mentioned in &lt;a href=
&quot;http://www.ruby-forum.com/topic/209674&quot;&gt;this discussion&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;The main point is that removing a constant using remove_const
does not necessarily removes the constant from $LOADED_FEATURES
which is what require checks to see if constant needs to be loaded
or not.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-12T23:05:19+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: rails3
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport dependencies rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-05-12T23:05:21+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">10</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There are (AFAIK) two options to make this behave better:

- require open-uri in an initializer which will keep the remove_const bogeyman away

- use `require_dependency` instead of require, which will reload open-uri when the controller is reloaded</body>
      <body-html>&lt;div&gt;&lt;p&gt;There are (AFAIK) two options to make this behave better:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;require open-uri in an initializer which will keep the
remove_const bogeyman away&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;use &lt;code&gt;require_dependency&lt;/code&gt; instead of require, which
will reload open-uri when the controller is reloaded&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-13T01:25:28+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport dependencies rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-05-13T01:25:30+01:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">11</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You could investigate making dependencies.rb magically solve this but I'm guessing it's a tonne more work than it's worth.  That code is pretty robust and does what it does very well, it's just that it doesn't do everything people have dreamed up :).

Moving the require of open-uri into your action would work though that obviously has its own set of problems.  Alternatively you could put your controllers into load_once_paths but that's probably worse.

All in all the two options matt mentions are the simplest way to avoid the problems you're encountering here, and are easy to reason about.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You could investigate making dependencies.rb magically solve
this but I'm guessing it's a tonne more work than it's worth. That
code is pretty robust and does what it does very well, it's just
that it doesn't do everything people have dreamed up :).&lt;/p&gt;
&lt;p&gt;Moving the require of open-uri into your action would work
though that obviously has its own set of problems. Alternatively
you could put your controllers into load_once_paths but that's
probably worse.&lt;/p&gt;
&lt;p&gt;All in all the two options matt mentions are the simplest way to
avoid the problems you're encountering here, and are easy to reason
about.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-13T22:28:43+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activesupport dependencies rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-05-13T22:28:47+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">12</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>An example app reproducing this bug:

http://github.com/paulca/uninitialized_constant_example</body>
      <body-html>&lt;div&gt;&lt;p&gt;An example app reproducing this bug:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/paulca/uninitialized_constant_example&quot;&gt;http://github.com/paulca/uninitialized_constant_example&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-12T14:55:43+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- 
:state: wontfix
:priority: 0
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport dependencies rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-08-12T14:55:48+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">13</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can confirm this from the example app (rails 3.0.0.rc) in 1.9.2-rc2 and 1.8.7 ree.
All tests run fine, but development server breaks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can confirm this from the example app (rails 3.0.0.rc) in
1.9.2-rc2 and 1.8.7 ree.&lt;br&gt;
All tests run fine, but development server breaks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-16T09:05:21+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport dependencies rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-08-16T09:05:31+01:00</updated-at>
      <user-id type="integer">39053</user-id>
      <version type="integer">14</version>
      <user-name>Zachary Scott</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello! Our store sales with all kinds of shoes, such as the recreational of &lt;a href=&quot;http://www.vibramshoesmall.com&quot;&gt;five finger shoes&lt;/a&gt;&#12289;sports of the &lt;a href=&quot;http://www.sneakerace.com&quot;&gt;nike shoes&lt;/a&gt; and &lt;a href=&quot;http://www.shoeshoot.com&quot;&gt;air Jordan shoes&lt;/a&gt;, and we also have fashion of &lt;a href=&quot;http://www.ugg-boots-4u.com&quot;&gt;ugg boots sale&lt;/a&gt; and for our body favorable of &lt;a href=&quot;http://www.comfortoes.com&quot;&gt;MBT shoes sale&lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello! Our store sales with all kinds of shoes, such as the
recreational of &lt;a href=&quot;http://www.vibramshoesmall.com&quot;&gt;five
finger shoes&lt;/a&gt;&amp;#12289;sports of the &lt;a href=
&quot;http://www.sneakerace.com&quot;&gt;nike shoes&lt;/a&gt; and &lt;a href=
&quot;http://www.shoeshoot.com&quot;&gt;air Jordan shoes&lt;/a&gt;, and we also have
fashion of &lt;a href=&quot;http://www.ugg-boots-4u.com&quot;&gt;ugg boots sale&lt;/a&gt;
and for our body favorable of &lt;a href=
&quot;http://www.comfortoes.com&quot;&gt;MBT shoes sale&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-17T08:33:56+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport dependencies rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-08-17T16:22:24+01:00</updated-at>
      <user-id type="integer">111899</user-id>
      <version type="integer">15</version>
      <user-name>vivian</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Fixed here http://github.com/rails/rails/compare/fca617a...c6db348</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fixed here &lt;a href=
&quot;http://github.com/rails/rails/compare/fca617a...c6db348&quot;&gt;http://github.com/rails/rails/compare/fca617a...c6db348&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-19T00:29:06+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activesupport dependencies rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-08-19T00:29:07+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">16</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:48+01:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activesupport dependencies rails3</tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-10-15T23:01:48+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">17</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T08:52:20+00:00</created-at>
      <creator-id type="integer">90112</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activesupport dependencies rails3
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4149</number>
      <permalink>strange-require-behavior-in-development-environment</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>strange 'require' behavior in development environment</title>
      <updated-at type="datetime">2010-11-08T08:52:23+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">19</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Valentine Bichkovsky</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4149</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>High</priority-name>
    </version>
  </versions>
</ticket>
