<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-20T03:43:21+01:00</created-at>
  <creator-id type="integer">794</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1555</number>
  <permalink>integrationsession-fails-to-follow_redirect-because-of-rack-headerslocation-changes</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>&quot;2 years old bug&quot; 2.3 actionpack edge integration_test</tag>
  <title>Integration::Session fails to follow_redirect! because of Rack headers['location] changes</title>
  <updated-at type="datetime">2010-07-20T03:43:21+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">3</version>
  <user-name>Repository</user-name>
  <creator-name>Christos Zisopoulos</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1555</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Given a freshly created edge app and a controller (e.g. Posts) that just redirects one URL to another URL (e.g. /posts/private =302=&gt; /posts/index ) the following simple steps in an Integration story fail.

@@@ ruby
get '/posts/private' 
assert_response :redirect # passes
follow_redirect! # should try to get /posts/index
assert_response :success # fails with a 404
@@@

What happens is that no matter what the URL follow_redirect! always tries to get '/h' which is actually the wrongly interpreted first character of 'http://www.example.com/posts/index'

I've tracked the issue down to line 129 of integration.rb:

@@@ ruby
get(interpret_uri(headers['location'].first))
@@@

The bug seems to have appeared after this commit:

http://github.com/rails/rails/commit/ebec9d43e262d28d742ff10acd828bad6cbb28ed

Before these Rack related changes, calling headers['location'] would return an Array of Strings. Now it returns a single String (in my case 'http://www.example.com/posts/index') and calling first on it returns the first character.

Removing the call to first makes my integration story pass but raises an error in line 35 of integration_test.rb (test_follow_redirect_calls_get_and_returns_status):

@@@ ruby
@session.stubs(:headers).returns({&quot;location&quot; =&gt; [&quot;www.google.com&quot;]})
@@@

The test can be fixed by removing the square brackets i.e. make headers['location'] return an String. 

I am almost certain that the test needs fixing because line 342 of Rack's lint.rb (Rake::Lint#check_headers) that states that &quot;header values must consist of Strings&quot; and it seems to be exactly what is returned from the @app.call(env)

http://github.com/chneukirchen/rack/tree/master/lib/rack/lint.rb#L342

I am attaching a tiny patch for this with no extra tests, just the corrected ones, as the dispatch code is way over my head and I can't seem to find a way to test it more end to end. Stubbing seems to have hidden the bug in this case...</original-body>
  <latest-body>Given a freshly created edge app and a controller (e.g. Posts) that just redirects one URL to another URL (e.g. /posts/private =302=&gt; /posts/index ) the following simple steps in an Integration story fail.

@@@ ruby
get '/posts/private' 
assert_response :redirect # passes
follow_redirect! # should try to get /posts/index
assert_response :success # fails with a 404
@@@

What happens is that no matter what the URL follow_redirect! always tries to get '/h' which is actually the wrongly interpreted first character of 'http://www.example.com/posts/index'

I've tracked the issue down to line 129 of integration.rb:

@@@ ruby
get(interpret_uri(headers['location'].first))
@@@

The bug seems to have appeared after this commit:

http://github.com/rails/rails/commit/ebec9d43e262d28d742ff10acd828bad6cbb28ed

Before these Rack related changes, calling headers['location'] would return an Array of Strings. Now it returns a single String (in my case 'http://www.example.com/posts/index') and calling first on it returns the first character.

Removing the call to first makes my integration story pass but raises an error in line 35 of integration_test.rb (test_follow_redirect_calls_get_and_returns_status):

@@@ ruby
@session.stubs(:headers).returns({&quot;location&quot; =&gt; [&quot;www.google.com&quot;]})
@@@

The test can be fixed by removing the square brackets i.e. make headers['location'] return an String. 

I am almost certain that the test needs fixing because line 342 of Rack's lint.rb (Rake::Lint#check_headers) that states that &quot;header values must consist of Strings&quot; and it seems to be exactly what is returned from the @app.call(env)

http://github.com/chneukirchen/rack/tree/master/lib/rack/lint.rb#L342

I am attaching a tiny patch for this with no extra tests, just the corrected ones, as the dispatch code is way over my head and I can't seem to find a way to test it more end to end. Stubbing seems to have hidden the bug in this case...</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Given a freshly created edge app and a controller (e.g. Posts)
that just redirects one URL to another URL (e.g. /posts/private
=302=&amp;gt; /posts/index ) the following simple steps in an
Integration story fail.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
get '/posts/private' 
assert_response :redirect # passes
follow_redirect! # should try to get /posts/index
assert_response :success # fails with a 404
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What happens is that no matter what the URL follow_redirect!
always tries to get '/h' which is actually the wrongly interpreted
first character of 'http://www.example.com/posts/index'&lt;/p&gt;
&lt;p&gt;I've tracked the issue down to line 129 of integration.rb:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
get(interpret_uri(headers['location'].first))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The bug seems to have appeared after this commit:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/rails/rails/commit/ebec9d43e262d28d742ff10acd828bad6cbb28ed&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before these Rack related changes, calling headers['location']
would return an Array of Strings. Now it returns a single String
(in my case 'http://www.example.com/posts/index') and calling first
on it returns the first character.&lt;/p&gt;
&lt;p&gt;Removing the call to first makes my integration story pass but
raises an error in line 35 of integration_test.rb
(test_follow_redirect_calls_get_and_returns_status):&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
@session.stubs(:headers).returns({&amp;quot;location&amp;quot; =&amp;gt; [&amp;quot;www.google.com&amp;quot;]})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The test can be fixed by removing the square brackets i.e. make
headers['location'] return an String.&lt;/p&gt;
&lt;p&gt;I am almost certain that the test needs fixing because line 342
of Rack's lint.rb (Rake::Lint#check_headers) that states that
&quot;header values must consist of Strings&quot; and it seems to be exactly
what is returned from the @app.call(env)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/chneukirchen/rack/tree/master/lib/rack/lint.rb#L342&quot;&gt;
http://github.com/chneukirchen/r...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am attaching a tiny patch for this with no extra tests, just
the corrected ones, as the dispatch code is way over my head and I
can't seem to find a way to test it more end to end. Stubbing seems
to have hidden the bug in this case...&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given a freshly created edge app and a controller (e.g. `Posts`) that just redirects one URL to another URL (e.g. `/posts/private =302=&gt; /posts/index` ) the following simple steps in an Integration story fail.

@@@ ruby
get '/posts/private' 
assert_response :redirect # passes
follow_redirect! # should try to get /posts/index
assert_response :success # fails with a 404
@@@

What happens is that no matter what the URL `follow_redirect!` always tries to get `/h` which is actually the wrongly interpreted first character of `http://www.example.com/posts/index`

I've tracked the issue down to line 129 of `integration.rb`:

@@@ ruby
get(interpret_uri(headers['location'].first))
@@@

The bug seems to have appeared after this commit:

http://github.com/rails/rails/commit/ebec9d43e262d28d742ff10acd828bad6cbb28ed

Before these Rack related changes, calling `headers['location']` would return an Array of Strings. Now it returns a single String (in my case `http://www.example.com/posts/index`) and calling first on it returns the first character.

Removing the call to first makes my integration story pass but raises an error in line 35 of `integration_test.rb` (`test_follow_redirect_calls_get_and_returns_status`):

@@@ ruby
@session.stubs(:headers).returns({&quot;location&quot; =&gt; [&quot;www.google.com&quot;]})
@@@

The test can be fixed by removing the square brackets i.e. make `headers['location']` stub return an String. 

I am almost certain that the test needs fixing because line 342 of Rack's `lint.rb` (`Rake::Lint#check_headers`) that states that &quot;header values must consist of Strings&quot; and it seems to be exactly what is returned from the `@app.call(env)`

http://github.com/chneukirchen/rack/tree/master/lib/rack/lint.rb#L342

I am attaching a tiny patch for this with no extra tests, just the corrected ones, as the dispatch code is way over my head and I can't seem to find a way to test it more end to end. Testing with stubs seems to have hidden the bug in this case...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given a freshly created edge app and a controller (e.g.
&lt;code&gt;Posts&lt;/code&gt;) that just redirects one URL to another URL
(e.g. &lt;code&gt;/posts/private =302=&amp;gt; /posts/index&lt;/code&gt; ) the
following simple steps in an Integration story fail.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
get '/posts/private' 
assert_response :redirect # passes
follow_redirect! # should try to get /posts/index
assert_response :success # fails with a 404
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What happens is that no matter what the URL
&lt;code&gt;follow_redirect!&lt;/code&gt; always tries to get &lt;code&gt;/h&lt;/code&gt;
which is actually the wrongly interpreted first character of
&lt;code&gt;&lt;a href=&quot;http://www.example.com/posts/index&quot;&gt;http://www.example.com/posts/index&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I've tracked the issue down to line 129 of
&lt;code&gt;integration.rb&lt;/code&gt;:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
get(interpret_uri(headers['location'].first))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The bug seems to have appeared after this commit:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/rails/rails/commit/ebec9d43e262d28d742ff10acd828bad6cbb28ed&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before these Rack related changes, calling
&lt;code&gt;headers['location']&lt;/code&gt; would return an Array of Strings.
Now it returns a single String (in my case &lt;code&gt;&lt;a href=&quot;http://www.example.com/posts/index&quot;&gt;http://www.example.com/posts/index&lt;/a&gt;&lt;/code&gt;)
and calling first on it returns the first character.&lt;/p&gt;
&lt;p&gt;Removing the call to first makes my integration story pass but
raises an error in line 35 of &lt;code&gt;integration_test.rb&lt;/code&gt;
(&lt;code&gt;test_follow_redirect_calls_get_and_returns_status&lt;/code&gt;):&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
@session.stubs(:headers).returns({&amp;quot;location&amp;quot; =&amp;gt; [&amp;quot;www.google.com&amp;quot;]})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The test can be fixed by removing the square brackets i.e. make
&lt;code&gt;headers['location']&lt;/code&gt; stub return an String.&lt;/p&gt;
&lt;p&gt;I am almost certain that the test needs fixing because line 342
of Rack's &lt;code&gt;lint.rb&lt;/code&gt;
(&lt;code&gt;Rake::Lint#check_headers&lt;/code&gt;) that states that &quot;header
values must consist of Strings&quot; and it seems to be exactly what is
returned from the &lt;code&gt;@app.call(env)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/chneukirchen/rack/tree/master/lib/rack/lint.rb#L342&quot;&gt;
http://github.com/chneukirchen/r...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am attaching a tiny patch for this with no extra tests, just
the corrected ones, as the dispatch code is way over my head and I
can't seem to find a way to test it more end to end. Testing with
stubs seems to have hidden the bug in this case...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-11T00:13:50+00:00</created-at>
      <creator-id type="integer">794</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1555</number>
      <permalink>integrationsession-fails-to-follow_redirect-because-of-rack-headerslocation-changes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2 years old bug&quot; 2.3 actionpack edge integration_test</tag>
      <title>Integration::Session fails to follow_redirect! because of Rack headers['location] changes</title>
      <updated-at type="datetime">2008-12-11T00:16:39+00:00</updated-at>
      <user-id type="integer">794</user-id>
      <version type="integer">1</version>
      <user-name>Christos Zisopoulos</user-name>
      <creator-name>Christos Zisopoulos</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1555</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-11T00:28:14+00:00</created-at>
      <creator-id type="integer">794</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1555</number>
      <permalink>integrationsession-fails-to-follow_redirect-because-of-rack-headerslocation-changes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;2 years old bug&quot; 2.3 actionpack edge integration_test</tag>
      <title>Integration::Session fails to follow_redirect! because of Rack headers['location] changes</title>
      <updated-at type="datetime">2008-12-11T00:28:17+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Christos Zisopoulos</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1555</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [69387ce0169b95d3a170cfb1c66a7570b1746e37]) Fix for Integration::Session follow_redirect! headers['location'] bug with Rack [#1555 state:resolved]

Signed-off-by: Joshua Peek &lt;josh@joshpeek.com&gt;
http://github.com/rails/rails/commit/69387ce0169b95d3a170cfb1c66a7570b1746e37</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [69387ce0169b95d3a170cfb1c66a7570b1746e37]) Fix for
Integration::Session follow_redirect! headers['location'] bug with
Rack [&lt;a href=&quot;/projects/8994/tickets/1555&quot; title=&quot;Ticket #1555&quot;&gt;#1555&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Joshua Peek &lt;a href=&quot;mailto:josh@joshpeek.com&quot;&gt;josh@joshpeek.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/69387ce0169b95d3a170cfb1c66a7570b1746e37&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-11T00:37:53+00:00</created-at>
      <creator-id type="integer">794</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1555</number>
      <permalink>integrationsession-fails-to-follow_redirect-because-of-rack-headerslocation-changes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;2 years old bug&quot; 2.3 actionpack edge integration_test</tag>
      <title>Integration::Session fails to follow_redirect! because of Rack headers['location] changes</title>
      <updated-at type="datetime">2008-12-11T00:37:54+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Christos Zisopoulos</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1555</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>se famous &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;fake rolex watches&lt;/a&gt;&lt;/b&gt; Swiss govern forming companies, &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;fake rolex watches for sale&lt;/a&gt;&lt;/b&gt; near due to Rolex &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;fake breitling&lt;/a&gt;&lt;/b&gt; besides Patek Philippe also &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;Fake watches&lt;/a&gt;&lt;/b&gt; introduced a specialty of &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;watch fakes&lt;/a&gt;&lt;/b&gt; quartz watches, but a &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/cartier-santos-two-tone-18kt-yellow-gold-and-steel-mens-watch-w20011c4-watch.html&quot;&gt;Cartier Santos Two-Tone 18kt Yellow Gold and Steel Mens W20011C4&lt;/a&gt;&lt;/b&gt; few Swiss watchmakers bland &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/tag-heuer-link-18kt-yellow-gold-steel-chronograph-mens-watch-cjf2150-bb0590-watch.html&quot;&gt;Tag Heuer Link 18kt Yellow Gold Steel Chronograph Mens CJF2150.BB0590&lt;/a&gt;&lt;/b&gt; remained domineering about quartz. &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/breitling-bentley-motors-chronograph-steel-blue-mens-watch-a2536212-c818-watch.html&quot;&gt;Breitling Bentley Motors Chronograph Steel Blue Mens A2536212-C818&lt;/a&gt;&lt;/b&gt; The important quarters of &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/hublot-big-bang-mens-watch-301-sb-131-rx-watch.html&quot;&gt;Hublot Big Bang Mens 301.SB.131.RX&lt;/a&gt;&lt;/b&gt; Blanca came spread plant &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/longines-watch.html&quot;&gt;Replica Longines watches&lt;/a&gt;&lt;/b&gt; the subsequent advertisement: Since 1735 finished</body>
      <body-html>&lt;div&gt;&lt;p&gt;se famous &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;fake rolex
watches&lt;/a&gt;&lt;/b&gt; Swiss govern forming companies, &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com&quot;&gt;fake rolex watches for sale&lt;/a&gt;&lt;/b&gt;
near due to Rolex &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;fake
breitling&lt;/a&gt;&lt;/b&gt; besides Patek Philippe also &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com&quot;&gt;Fake watches&lt;/a&gt;&lt;/b&gt; introduced a
specialty of &lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com&quot;&gt;watch
fakes&lt;/a&gt;&lt;/b&gt; quartz watches, but a &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/cartier-santos-two-tone-18kt-yellow-gold-and-steel-mens-watch-w20011c4-watch.html&quot;&gt;
Cartier Santos Two-Tone 18kt Yellow Gold and Steel Mens
W20011C4&lt;/a&gt;&lt;/b&gt; few Swiss watchmakers bland &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/tag-heuer-link-18kt-yellow-gold-steel-chronograph-mens-watch-cjf2150-bb0590-watch.html&quot;&gt;
Tag Heuer Link 18kt Yellow Gold Steel Chronograph Mens
CJF2150.BB0590&lt;/a&gt;&lt;/b&gt; remained domineering about quartz.
&lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/breitling-bentley-motors-chronograph-steel-blue-mens-watch-a2536212-c818-watch.html&quot;&gt;
Breitling Bentley Motors Chronograph Steel Blue Mens
A2536212-C818&lt;/a&gt;&lt;/b&gt; The important quarters of &lt;b&gt;&lt;a href=
&quot;http://www.e-watchshop.com/hublot-big-bang-mens-watch-301-sb-131-rx-watch.html&quot;&gt;
Hublot Big Bang Mens 301.SB.131.RX&lt;/a&gt;&lt;/b&gt; Blanca came spread plant
&lt;b&gt;&lt;a href=&quot;http://www.e-watchshop.com/longines-watch.html&quot;&gt;Replica
Longines watches&lt;/a&gt;&lt;/b&gt; the subsequent advertisement: Since 1735
finished&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T09:46:14+01:00</created-at>
      <creator-id type="integer">794</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:tag: &quot;\&quot;2 years old bug\&quot; 2.3 actionpack edge integration_test&quot;
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1555</number>
      <permalink>integrationsession-fails-to-follow_redirect-because-of-rack-headerslocation-changes</permalink>
      <priority type="integer">913</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2 actionpack edge integration_test</tag>
      <title>Integration::Session fails to follow_redirect! because of Rack headers['location] changes</title>
      <updated-at type="datetime">2010-07-20T03:43:21+01:00</updated-at>
      <user-id type="integer">107783</user-id>
      <version type="integer">4</version>
      <user-name>LYN</user-name>
      <creator-name>Christos Zisopoulos</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1555</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>2c0eaa4f295b662df79eb1257106ac63da35b228</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-11T00:13:51+00:00</created-at>
      <filename>integration_follow_redirect_fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">70063</id>
      <size type="integer">1699</size>
      <uploader-id type="integer">794</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/70063/integration_follow_redirect_fix.diff</url>
    </attachment>
  </attachments>
</ticket>
