<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-31T23:44:44+01:00</created-at>
  <creator-id type="integer">101424</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4741</number>
  <permalink>configload_paths-and-namespace-issue</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>config.load_paths and namespace issue</title>
  <updated-at type="datetime">2011-02-02T18:24:24+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Jesse House</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4741</url>
  <priority-name nil="true"></priority-name>
  <original-body>If I create a directory called jobs at /app/jobs
then add a ruby class Jobs::Bar (/app/jobs/bar.rb)
instantiating this object while running under 'rails server' fails with &quot;NameError: uninitialized constant Jobs&quot;
and in 'rails console' it fails with the same error but can then be loaded (see below console session)

using rvm 
running ruby-1.9.1-p378 [ i386 ]
Rails 3.0.0.beta3

the below works fine in rails 2.2.2 and ruby 1.8.7

@@@
# /config/application.rb
config.load_paths += %W( #{config.root}/app/jobs )        
@@@

@@@
# /app/jobs/bar.rb
module Jobs
  class Bar
    def hello
      &quot;Bar says hello&quot;
    end
  end
end
@@@

$&gt; rails console

@@@
ruby-1.9.1-p378 &gt; b = ::Jobs::Bar.new
NameError: uninitialized constant Jobs
	from (irb):3
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:47:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:8:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands.rb:34:in `&lt;top (required)&gt;'
	from script/rails:9:in `require'
	from script/rails:9:in `&lt;main&gt;'
@@@

@@@
# it makes sense that this would fail since it doesn't really exist
ruby-1.9.1-p378 &gt; b = Bar.new
LoadError: Expected /Users/house/projects/sandboxfor3/app/jobs/bar.rb to define Bar
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:453:in `load_missing_constant'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:153:in `block in const_missing'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:151:in `each'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:151:in `const_missing'
	from (irb):4
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:47:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:8:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands.rb:34:in `&lt;top (required)&gt;'
	from script/rails:9:in `require'
	from script/rails:9:in `&lt;main&gt;'
@@@

@@@
# now it works as expected? but only after doing 'b = Bar.new' which is invalid?
ruby-1.9.1-p378 &gt; b = ::Jobs::Bar.new
 =&gt; #&lt;Jobs::Bar:0x2484b64&gt; 
ruby-1.9.1-p378 &gt; b.hello
 =&gt; &quot;Bar says hello&quot;
@@@


Everything works correctly in the following similar situations

 - namespaces under /app/models, 
 -- for example /app/models/jobs/bar.rb with the exact same class definition and no config.load_paths 
 - a non-namespaced class under /app/jobs with config.load_paths
 -- for example 

@@@
# /app/jobs/foo.rb
class Foo
end

Foo.new # no errors
@@@</original-body>
  <latest-body>If I create a directory called jobs at /app/jobs
then add a ruby class Jobs::Bar (/app/jobs/bar.rb)
instantiating this object while running under 'rails server' fails with &quot;NameError: uninitialized constant Jobs&quot;
and in 'rails console' it fails with the same error but can then be loaded (see below console session)

using rvm 
running ruby-1.9.1-p378 [ i386 ]
Rails 3.0.0.beta3

the below works fine in rails 2.2.2 and ruby 1.8.7

@@@
# /config/application.rb
config.load_paths += %W( #{config.root}/app/jobs )        
@@@

@@@
# /app/jobs/bar.rb
module Jobs
  class Bar
    def hello
      &quot;Bar says hello&quot;
    end
  end
end
@@@

$&gt; rails console

@@@
ruby-1.9.1-p378 &gt; b = ::Jobs::Bar.new
NameError: uninitialized constant Jobs
	from (irb):3
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:47:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:8:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands.rb:34:in `&lt;top (required)&gt;'
	from script/rails:9:in `require'
	from script/rails:9:in `&lt;main&gt;'
@@@

@@@
# it makes sense that this would fail since it doesn't really exist
ruby-1.9.1-p378 &gt; b = Bar.new
LoadError: Expected /Users/house/projects/sandboxfor3/app/jobs/bar.rb to define Bar
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:453:in `load_missing_constant'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:153:in `block in const_missing'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:151:in `each'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:151:in `const_missing'
	from (irb):4
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:47:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:8:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands.rb:34:in `&lt;top (required)&gt;'
	from script/rails:9:in `require'
	from script/rails:9:in `&lt;main&gt;'
@@@

@@@
# now it works as expected? but only after doing 'b = Bar.new' which is invalid?
ruby-1.9.1-p378 &gt; b = ::Jobs::Bar.new
 =&gt; #&lt;Jobs::Bar:0x2484b64&gt; 
ruby-1.9.1-p378 &gt; b.hello
 =&gt; &quot;Bar says hello&quot;
@@@


Everything works correctly in the following similar situations

 - namespaces under /app/models, 
 -- for example /app/models/jobs/bar.rb with the exact same class definition and no config.load_paths 
 - a non-namespaced class under /app/jobs with config.load_paths
 -- for example 

@@@
# /app/jobs/foo.rb
class Foo
end

Foo.new # no errors
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If I create a directory called jobs at /app/jobs&lt;br&gt;
then add a ruby class Jobs::Bar (/app/jobs/bar.rb)&lt;br&gt;
instantiating this object while running under 'rails server' fails
with &quot;NameError: uninitialized constant Jobs&quot;&lt;br&gt;
and in 'rails console' it fails with the same error but can then be
loaded (see below console session)&lt;/p&gt;
&lt;p&gt;using rvm&lt;br&gt;
running ruby-1.9.1-p378 [ i386 ]&lt;br&gt;
Rails 3.0.0.beta3&lt;/p&gt;
&lt;p&gt;the below works fine in rails 2.2.2 and ruby 1.8.7&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# /config/application.rb
config.load_paths += %W( #{config.root}/app/jobs )&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;# /app/jobs/bar.rb
module Jobs
  class Bar
    def hello
      &quot;Bar says hello&quot;
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;$&amp;gt; rails console&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ruby-1.9.1-p378 &amp;gt; b = ::Jobs::Bar.new
NameError: uninitialized constant Jobs
    from (irb):3
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:47:in `start'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:8:in `start'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands.rb:34:in `&amp;lt;top (required)&amp;gt;'
    from script/rails:9:in `require'
    from script/rails:9:in `&amp;lt;main&amp;gt;'&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;# it makes sense that this would fail since it doesn't really exist
ruby-1.9.1-p378 &amp;gt; b = Bar.new
LoadError: Expected /Users/house/projects/sandboxfor3/app/jobs/bar.rb to define Bar
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:453:in `load_missing_constant'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:153:in `block in const_missing'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:151:in `each'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:151:in `const_missing'
    from (irb):4
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:47:in `start'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:8:in `start'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands.rb:34:in `&amp;lt;top (required)&amp;gt;'
    from script/rails:9:in `require'
    from script/rails:9:in `&amp;lt;main&amp;gt;'&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;# now it works as expected? but only after doing 'b = Bar.new' which is invalid?
ruby-1.9.1-p378 &amp;gt; b = ::Jobs::Bar.new
 =&amp;gt; #&amp;lt;Jobs::Bar:0x2484b64&amp;gt; 
ruby-1.9.1-p378 &amp;gt; b.hello
 =&amp;gt; &quot;Bar says hello&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Everything works correctly in the following similar
situations&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;namespaces under /app/models, -- for example
/app/models/jobs/bar.rb with the exact same class definition and no
config.load_paths&lt;/li&gt;
&lt;li&gt;a non-namespaced class under /app/jobs with config.load_paths
-- for example&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;# /app/jobs/foo.rb
class Foo
end

Foo.new # no errors&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If I create a directory called jobs at /app/jobs
then add a ruby class Jobs::Bar (/app/jobs/bar.rb)
instantiating this object while running under 'rails server' fails with &quot;NameError: uninitialized constant Jobs&quot;
and in 'rails console' it fails with the same error but can then be loaded (see below console session)

using rvm 
running ruby-1.9.1-p378 [ i386 ]
Rails 3.0.0.beta3

the below works fine in rails 2.2.2 and ruby 1.8.7

@@@
# /config/application.rb
config.load_paths += %W( #{config.root}/app/jobs )        
@@@

@@@
# /app/jobs/bar.rb
module Jobs
  class Bar
    def hello
      &quot;Bar says hello&quot;
    end
  end
end
@@@

$&gt; rails console

@@@
ruby-1.9.1-p378 &gt; b = ::Jobs::Bar.new
NameError: uninitialized constant Jobs
	from (irb):3
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:47:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:8:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands.rb:34:in `&lt;top (required)&gt;'
	from script/rails:9:in `require'
	from script/rails:9:in `&lt;main&gt;'
@@@

@@@
# it makes sense that this would fail since it doesn't really exist
ruby-1.9.1-p378 &gt; b = Bar.new
LoadError: Expected /Users/house/projects/sandboxfor3/app/jobs/bar.rb to define Bar
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:453:in `load_missing_constant'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:153:in `block in const_missing'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:151:in `each'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:151:in `const_missing'
	from (irb):4
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:47:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:8:in `start'
	from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands.rb:34:in `&lt;top (required)&gt;'
	from script/rails:9:in `require'
	from script/rails:9:in `&lt;main&gt;'
@@@

@@@
# now it works as expected? but only after doing 'b = Bar.new' which is invalid?
ruby-1.9.1-p378 &gt; b = ::Jobs::Bar.new
 =&gt; #&lt;Jobs::Bar:0x2484b64&gt; 
ruby-1.9.1-p378 &gt; b.hello
 =&gt; &quot;Bar says hello&quot;
@@@


Everything works correctly in the following similar situations

 - namespaces under /app/models, 
 -- for example /app/models/jobs/bar.rb with the exact same class definition and no config.load_paths 
 - a non-namespaced class under /app/jobs with config.load_paths
 -- for example 

@@@
# /app/jobs/foo.rb
class Foo
end

Foo.new # no errors
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;If I create a directory called jobs at /app/jobs&lt;br&gt;
then add a ruby class Jobs::Bar (/app/jobs/bar.rb)&lt;br&gt;
instantiating this object while running under 'rails server' fails
with &quot;NameError: uninitialized constant Jobs&quot;&lt;br&gt;
and in 'rails console' it fails with the same error but can then be
loaded (see below console session)&lt;/p&gt;
&lt;p&gt;using rvm&lt;br&gt;
running ruby-1.9.1-p378 [ i386 ]&lt;br&gt;
Rails 3.0.0.beta3&lt;/p&gt;
&lt;p&gt;the below works fine in rails 2.2.2 and ruby 1.8.7&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# /config/application.rb
config.load_paths += %W( #{config.root}/app/jobs )&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;# /app/jobs/bar.rb
module Jobs
  class Bar
    def hello
      &quot;Bar says hello&quot;
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;$&amp;gt; rails console&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ruby-1.9.1-p378 &amp;gt; b = ::Jobs::Bar.new
NameError: uninitialized constant Jobs
    from (irb):3
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:47:in `start'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:8:in `start'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands.rb:34:in `&amp;lt;top (required)&amp;gt;'
    from script/rails:9:in `require'
    from script/rails:9:in `&amp;lt;main&amp;gt;'&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;# it makes sense that this would fail since it doesn't really exist
ruby-1.9.1-p378 &amp;gt; b = Bar.new
LoadError: Expected /Users/house/projects/sandboxfor3/app/jobs/bar.rb to define Bar
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:453:in `load_missing_constant'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:153:in `block in const_missing'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:151:in `each'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/activesupport-3.0.0.beta3/lib/active_support/dependencies.rb:151:in `const_missing'
    from (irb):4
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:47:in `start'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands/console.rb:8:in `start'
    from /Users/house/.rvm/gems/ruby-1.9.1-p378/gems/railties-3.0.0.beta3/lib/rails/commands.rb:34:in `&amp;lt;top (required)&amp;gt;'
    from script/rails:9:in `require'
    from script/rails:9:in `&amp;lt;main&amp;gt;'&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;# now it works as expected? but only after doing 'b = Bar.new' which is invalid?
ruby-1.9.1-p378 &amp;gt; b = ::Jobs::Bar.new
 =&amp;gt; #&amp;lt;Jobs::Bar:0x2484b64&amp;gt; 
ruby-1.9.1-p378 &amp;gt; b.hello
 =&amp;gt; &quot;Bar says hello&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Everything works correctly in the following similar
situations&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;namespaces under /app/models, -- for example
/app/models/jobs/bar.rb with the exact same class definition and no
config.load_paths&lt;/li&gt;
&lt;li&gt;a non-namespaced class under /app/jobs with config.load_paths
-- for example&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code&gt;# /app/jobs/foo.rb
class Foo
end

Foo.new # no errors&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-31T23:44:44+01:00</created-at>
      <creator-id type="integer">101424</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4741</number>
      <permalink>configload_paths-and-namespace-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>config.load_paths and namespace issue</title>
      <updated-at type="datetime">2010-05-31T23:44:46+01:00</updated-at>
      <user-id type="integer">101424</user-id>
      <version type="integer">1</version>
      <user-name>Jesse House</user-name>
      <creator-name>Jesse House</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4741</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:51:59+00:00</created-at>
      <creator-id type="integer">101424</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4741</number>
      <permalink>configload_paths-and-namespace-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>config.load_paths and namespace issue</title>
      <updated-at type="datetime">2011-02-02T18:24:14+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jesse House</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4741</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:52:01+00:00</created-at>
      <creator-id type="integer">101424</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4741</number>
      <permalink>configload_paths-and-namespace-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>config.load_paths and namespace issue</title>
      <updated-at type="datetime">2011-02-02T18:24:24+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jesse House</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4741</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
