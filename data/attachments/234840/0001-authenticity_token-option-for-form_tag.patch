From 837bd23b7f654a24e5d2e20e9ed6e61af6640115 Mon Sep 17 00:00:00 2001
From: =?utf-8?q?Jakub=20Ku=C5=BAma?= <kuba@synergypeople.net>
Date: Mon, 3 Aug 2009 15:59:46 +0200
Subject: [PATCH] authenticity_token option for form_tag

---
 .../lib/action_view/helpers/form_tag_helper.rb     |   27 ++++++++++++++++---
 .../controller/request_forgery_protection_test.rb  |   18 +++++++++++++
 2 files changed, 40 insertions(+), 5 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/form_tag_helper.rb b/actionpack/lib/action_view/helpers/form_tag_helper.rb
index e126b35..f613d0b 100644
--- a/actionpack/lib/action_view/helpers/form_tag_helper.rb
+++ b/actionpack/lib/action_view/helpers/form_tag_helper.rb
@@ -18,6 +18,9 @@ module ActionView
       # * <tt>:method</tt> - The method to use when submitting the form, usually either "get" or "post".
       #   If "put", "delete", or another verb is used, a hidden input with name <tt>_method</tt>
       #   is added to simulate the verb over post.
+      # * <tt>:authenticity_token</tt> - Authenticity token to use in the form. Use only if you need to
+      #   pass custom authenticity token string, or to not add authenticity_token field at all
+      #   (by passing <tt>false</tt>).
       # * A list of parameters to feed to the URL the form will be posted to.
       #
       # ==== Examples
@@ -34,6 +37,13 @@ module ActionView
       #     <div><%= submit_tag 'Save' %></div>
       #   <% end -%>
       #   # => <form action="/posts" method="post"><div><input type="submit" name="submit" value="Save" /></div></form>
+      #
+      #   form_tag('http://far.away.com/form', :authenticity_token => false)
+      #   # form without authenticity token
+      #
+      #   form_tag('http://far.away.com/form', :authenticity_token => "cf50faa3fe97702ca1ae")
+      #   # form with custom authenticity token
+      #
       def form_tag(url_for_options = {}, options = {}, *parameters_for_url, &block)
         html_options = html_options_for_form(url_for_options, options, *parameters_for_url)
         if block_given?
@@ -441,20 +451,26 @@ module ActionView
           returning options.stringify_keys do |html_options|
             html_options["enctype"] = "multipart/form-data" if html_options.delete("multipart")
             html_options["action"]  = url_for(url_for_options, *parameters_for_url)
+            html_options["authenticity_token"] = html_options.delete("authenticity_token") if html_options.has_key?("authenticity_token")
           end
         end
 
+        def wrap_hidden_tags(tags)
+          tags.blank? ? "" : content_tag(:div, tags, :style => 'margin:0;padding:0;display:inline')
+        end
+
         def extra_tags_for_form(html_options)
+          authenticity_token = html_options.delete("authenticity_token")
           case method = html_options.delete("method").to_s
             when /^get$/i # must be case-insentive, but can't use downcase as might be nil
               html_options["method"] = "get"
               ''
             when /^post$/i, "", nil
               html_options["method"] = "post"
-              protect_against_forgery? ? content_tag(:div, token_tag, :style => 'margin:0;padding:0;display:inline') : ''
+              wrap_hidden_tags(token_tag(authenticity_token))
             else
               html_options["method"] = "post"
-              content_tag(:div, tag(:input, :type => "hidden", :name => "_method", :value => method) + token_tag, :style => 'margin:0;padding:0;display:inline')
+              wrap_hidden_tags(tag(:input, :type => "hidden", :name => "_method", :value => method) + token_tag(authenticity_token))
           end
         end
 
@@ -470,11 +486,12 @@ module ActionView
           concat("</form>")
         end
 
-        def token_tag
-          unless protect_against_forgery?
+        def token_tag(token)
+          token = form_authenticity_token if token.nil?
+          if token == false || !protect_against_forgery?
             ''
           else
-            tag(:input, :type => "hidden", :name => request_forgery_protection_token.to_s, :value => form_authenticity_token)
+            tag(:input, :type => "hidden", :name => request_forgery_protection_token.to_s, :value => token)
           end
         end
 
diff --git a/actionpack/test/controller/request_forgery_protection_test.rb b/actionpack/test/controller/request_forgery_protection_test.rb
index 83925ed..e9d81ad 100644
--- a/actionpack/test/controller/request_forgery_protection_test.rb
+++ b/actionpack/test/controller/request_forgery_protection_test.rb
@@ -19,6 +19,14 @@ module RequestForgeryProtectionActions
     render :inline => "<% form_remote_tag(:url => '/') {} %>"
   end
 
+  def external_form
+    render :inline => "<%= form_tag('http://farfar.away/form', :authenticity_token => 'external_token') {} %>"
+  end
+
+  def external_form_without_protection
+    render :inline => "<%= form_tag('http://farfar.away/form', :authenticity_token => false) {} %>"
+  end
+
   def unsafe
     render :text => 'pwn'
   end
@@ -67,6 +75,16 @@ module RequestForgeryProtectionTests
      assert_equal 1, @response.body.scan(@token).size
    end
 
+   def test_should_render_external_form_with_external_token
+     get :external_form
+     assert_select 'form>div>input[name=?][value=?]', 'authenticity_token', 'external_token'
+   end
+
+   def test_should_render_external_form_without_token
+     get :external_form_without_protection
+     assert_select 'form>div>input[name=?][value=?]', 'authenticity_token', @token, false
+   end
+
    def test_should_allow_get
      get :index
      assert_response :success
-- 
1.6.0.4

