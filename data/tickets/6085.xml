<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-29T21:14:56+00:00</created-at>
  <creator-id type="integer">127135</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6085</number>
  <permalink>joins-on-has_one-through-generates-sql-query-with-is-null</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag nil="true"></tag>
  <title>joins() on has_one through generates SQL query with &quot;IS NULL&quot;</title>
  <updated-at type="datetime">2010-12-21T20:16:47+00:00</updated-at>
  <user-id type="integer">11330</user-id>
  <version type="integer">3</version>
  <user-name>Jon Leighton</user-name>
  <creator-name>avioing</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6085</url>
  <priority-name>Low</priority-name>
  <original-body>using ruby 1.9.2, rails 3.0.3

Post
belongs_to :user_project
has_one :project, :through =&gt; :user_project

UserProject
belongs_to :project
has_many :posts

Project
has_many :user_projects
has_many :posts, :through =&gt; :user_projects


here is the problem:

irb&gt; Post.joins(:project)
=&gt; []

here is the generated query:
SELECT `posts`.* FROM `posts` INNER JOIN `user_projects` ON `posts`.`id` IS NULL INNER JOIN `projects` ON `projects`.`id` = `user_projects`.`project_id`

where is &quot;IS NULL&quot; coming from?</original-body>
  <latest-body>using ruby 1.9.2, rails 3.0.3

Post
belongs_to :user_project
has_one :project, :through =&gt; :user_project

UserProject
belongs_to :project
has_many :posts

Project
has_many :user_projects
has_many :posts, :through =&gt; :user_projects


here is the problem:

irb&gt; Post.joins(:project)
=&gt; []

here is the generated query:
SELECT `posts`.* FROM `posts` INNER JOIN `user_projects` ON `posts`.`id` IS NULL INNER JOIN `projects` ON `projects`.`id` = `user_projects`.`project_id`

where is &quot;IS NULL&quot; coming from?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;using ruby 1.9.2, rails 3.0.3&lt;/p&gt;
&lt;p&gt;Post&lt;br&gt;
belongs_to :user_project&lt;br&gt;
has_one :project, :through =&amp;gt; :user_project&lt;/p&gt;
&lt;p&gt;UserProject&lt;br&gt;
belongs_to :project&lt;br&gt;
has_many :posts&lt;/p&gt;
&lt;p&gt;Project&lt;br&gt;
has_many :user_projects&lt;br&gt;
has_many :posts, :through =&amp;gt; :user_projects&lt;/p&gt;
&lt;p&gt;here is the problem:&lt;/p&gt;
&lt;p&gt;irb&amp;gt; Post.joins(:project)&lt;br&gt;
=&amp;gt; []&lt;/p&gt;
&lt;p&gt;here is the generated query:&lt;br&gt;
SELECT &lt;code&gt;posts&lt;/code&gt;.* FROM &lt;code&gt;posts&lt;/code&gt; INNER JOIN
&lt;code&gt;user_projects&lt;/code&gt; ON &lt;code&gt;posts&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; IS
NULL INNER JOIN &lt;code&gt;projects&lt;/code&gt; ON
&lt;code&gt;projects&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; =
&lt;code&gt;user_projects&lt;/code&gt;.&lt;code&gt;project_id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;where is &quot;IS NULL&quot; coming from?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>using ruby 1.9.2, rails 3.0.3

Post
belongs_to :user_project
has_one :project, :through =&gt; :user_project

UserProject
belongs_to :project
has_many :posts

Project
has_many :user_projects
has_many :posts, :through =&gt; :user_projects


here is the problem:

irb&gt; Post.joins(:project)
=&gt; []

here is the generated query:
SELECT `posts`.* FROM `posts` INNER JOIN `user_projects` ON `posts`.`id` IS NULL INNER JOIN `projects` ON `projects`.`id` = `user_projects`.`project_id`

where is &quot;IS NULL&quot; coming from?</body>
      <body-html>&lt;div&gt;&lt;p&gt;using ruby 1.9.2, rails 3.0.3&lt;/p&gt;
&lt;p&gt;Post&lt;br&gt;
belongs_to :user_project&lt;br&gt;
has_one :project, :through =&amp;gt; :user_project&lt;/p&gt;
&lt;p&gt;UserProject&lt;br&gt;
belongs_to :project&lt;br&gt;
has_many :posts&lt;/p&gt;
&lt;p&gt;Project&lt;br&gt;
has_many :user_projects&lt;br&gt;
has_many :posts, :through =&amp;gt; :user_projects&lt;/p&gt;
&lt;p&gt;here is the problem:&lt;/p&gt;
&lt;p&gt;irb&amp;gt; Post.joins(:project)&lt;br&gt;
=&amp;gt; []&lt;/p&gt;
&lt;p&gt;here is the generated query:&lt;br&gt;
SELECT &lt;code&gt;posts&lt;/code&gt;.* FROM &lt;code&gt;posts&lt;/code&gt; INNER JOIN
&lt;code&gt;user_projects&lt;/code&gt; ON &lt;code&gt;posts&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; IS
NULL INNER JOIN &lt;code&gt;projects&lt;/code&gt; ON
&lt;code&gt;projects&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; =
&lt;code&gt;user_projects&lt;/code&gt;.&lt;code&gt;project_id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;where is &quot;IS NULL&quot; coming from?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-29T21:14:56+00:00</created-at>
      <creator-id type="integer">127135</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6085</number>
      <permalink>joins-on-has_one-through-generates-sql-query-with-is-null</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>joins() on has_one through generates SQL query with &quot;IS NULL&quot;</title>
      <updated-at type="datetime">2010-11-29T21:15:02+00:00</updated-at>
      <user-id type="integer">127135</user-id>
      <version type="integer">1</version>
      <user-name>avioing</user-name>
      <creator-name>avioing</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6085</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have the same problem (also using Rails 3.0.3, but using JRuby), additionally if I make the join 1 level deeper I get an INNER JOIN `table_name` ON 0.

@@@
class FociSample &lt; ActiveRecord::Base
  belongs_to :foci_group
  has_one    :source_well, :through =&gt; :foci_group
end

class FociGroup &lt; ActiveRecord::Base
  belongs_to :source_well, :foreign_key =&gt; &quot;source_id&quot;, :class_name =&gt; &quot;CultureWell&quot;
end

class CultureWell &lt; ActiveRecord::Base
  belongs_to :culture_plate
end
@@@
When trying 
@@@
FociSample.joins(:source_well =&gt; :culture_plate)
@@@
the generated query is:
@@@
SELECT `foci_samples`.* FROM `foci_samples` INNER JOIN `foci_groups` ON `foci_samples`.`id` IS NULL INNER JOIN `culture_wells` ON 0 INNER JOIN `culture_plates` ON `culture_plates`.`id` = `culture_wells`.`culture_plate_id`
@@@


Adding an additional level
@@@
class CulturePlate &lt; ActiveRecord::Base
  belongs_to :culture_batch
end

FociSample.joins(:source_well =&gt; {:culture_plate =&gt; :culture_batch})
@@@
results in this query:
@@@
SELECT `foci_samples`.* FROM `foci_samples` INNER JOIN `foci_groups` ON `foci_samples`.`id` IS NULL INNER JOIN `culture_wells` ON 0 INNER JOIN `culture_plates` ON `culture_plates`.`id` = `culture_wells`.`culture_plate_id` INNER JOIN `culture_batches` ON `culture_batches`.`id` = `culture_plates`.`culture_batch_id`
@@@
where the join condition for the extra dependency makes sense again.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have the same problem (also using Rails 3.0.3, but using
JRuby), additionally if I make the join 1 level deeper I get an
INNER JOIN &lt;code&gt;table_name&lt;/code&gt; ON 0.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class FociSample &amp;lt; ActiveRecord::Base
  belongs_to :foci_group
  has_one    :source_well, :through =&amp;gt; :foci_group
end

class FociGroup &amp;lt; ActiveRecord::Base
  belongs_to :source_well, :foreign_key =&amp;gt; &quot;source_id&quot;, :class_name =&amp;gt; &quot;CultureWell&quot;
end

class CultureWell &amp;lt; ActiveRecord::Base
  belongs_to :culture_plate
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When trying&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;FociSample.joins(:source_well =&amp;gt; :culture_plate)&lt;/code&gt;
&lt;/pre&gt;
the generated query is:&lt;br&gt;
&lt;pre&gt;
&lt;code&gt;SELECT &lt;/code&gt;foci_samples.* FROM &lt;code&gt;foci_samples&lt;/code&gt; INNER JOIN &lt;code&gt;foci_groups&lt;/code&gt; ON &lt;code&gt;foci_samples&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; IS NULL INNER JOIN &lt;code&gt;culture_wells&lt;/code&gt; ON 0 INNER JOIN &lt;code&gt;culture_plates&lt;/code&gt; ON &lt;code&gt;culture_plates&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; = &lt;code&gt;culture_wells&lt;/code&gt;.&lt;code&gt;culture_plate_id&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Adding an additional level&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class CulturePlate &amp;lt; ActiveRecord::Base
  belongs_to :culture_batch
end&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
FociSample.joins(:source_well =&amp;gt; {:culture_plate =&amp;gt; :culture_batch})&lt;/code&gt;
&lt;/pre&gt;
results in this query:&lt;br&gt;
&lt;pre&gt;
&lt;code&gt;SELECT &lt;/code&gt;foci_samples.* FROM &lt;code&gt;foci_samples&lt;/code&gt; INNER JOIN &lt;code&gt;foci_groups&lt;/code&gt; ON &lt;code&gt;foci_samples&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; IS NULL INNER JOIN &lt;code&gt;culture_wells&lt;/code&gt; ON 0 INNER JOIN &lt;code&gt;culture_plates&lt;/code&gt; ON &lt;code&gt;culture_plates&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; = &lt;code&gt;culture_wells&lt;/code&gt;.&lt;code&gt;culture_plate_id&lt;/code&gt; INNER JOIN &lt;code&gt;culture_batches&lt;/code&gt; ON &lt;code&gt;culture_batches&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; = &lt;code&gt;culture_plates&lt;/code&gt;.&lt;code&gt;culture_batch_id&lt;/code&gt;
&lt;/pre&gt;
where the join condition for the extra dependency makes sense
again.&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-15T17:07:04+00:00</created-at>
      <creator-id type="integer">127135</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6085</number>
      <permalink>joins-on-has_one-through-generates-sql-query-with-is-null</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>joins() on has_one through generates SQL query with &quot;IS NULL&quot;</title>
      <updated-at type="datetime">2010-12-15T17:07:10+00:00</updated-at>
      <user-id type="integer">118057</user-id>
      <version type="integer">2</version>
      <user-name>Joeri Samson</user-name>
      <creator-name>avioing</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6085</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi there,

Thanks for the bug report.

This is a duplicate of #2801, which is fixed in master.

Jon</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi there,&lt;/p&gt;
&lt;p&gt;Thanks for the bug report.&lt;/p&gt;
&lt;p&gt;This is a duplicate of &lt;a href=&quot;/projects/8994/tickets/2801&quot;
title=&quot;Ticket #2801&quot;&gt;#2801&lt;/a&gt;, which is fixed in master.&lt;/p&gt;
&lt;p&gt;Jon&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-21T20:16:36+00:00</created-at>
      <creator-id type="integer">127135</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6085</number>
      <permalink>joins-on-has_one-through-generates-sql-query-with-is-null</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag nil="true"></tag>
      <title>joins() on has_one through generates SQL query with &quot;IS NULL&quot;</title>
      <updated-at type="datetime">2010-12-21T20:16:47+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">3</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>avioing</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6085</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
