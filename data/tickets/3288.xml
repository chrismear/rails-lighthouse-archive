<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-28T01:14:44+01:00</created-at>
  <creator-id type="integer">20836</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3288</number>
  <permalink>using-destroy-on-ar-association-collection-updates-the-collection-in-memory</permalink>
  <priority type="integer">140677</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2-3-stable activerecord patch</tag>
  <title>Using destroy on AR association collection updates the collection in memory.</title>
  <updated-at type="datetime">2011-02-02T18:39:26+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">6</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Lawrence Pit</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3288</url>
  <priority-name nil="true"></priority-name>
  <original-body>This fails on the second +assert_equal+ statement.

@@@ ruby
  p = Pirate.first
  assert_equal 2, p.parrots.length
  p.parrots.destroy(p.parrots.first)
  assert_equal 1, p.parrots.length
@@@

Attached patch fixes this.</original-body>
  <latest-body>This fails on the second +assert_equal+ statement.

@@@ ruby
  p = Pirate.first
  assert_equal 2, p.parrots.length
  p.parrots.destroy(p.parrots.first)
  assert_equal 1, p.parrots.length
@@@

Attached patch fixes this.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This fails on the second +assert_equal+ statement.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  p = Pirate.first
  assert_equal 2, p.parrots.length
  p.parrots.destroy(p.parrots.first)
  assert_equal 1, p.parrots.length&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Attached patch fixes this.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This fails on the second +assert_equal+ statement.

@@@ ruby
  p = Pirate.first
  assert_equal 2, p.parrots.length
  p.parrots.destroy(p.parrots.first)
  assert_equal 1, p.parrots.length
@@@

Attached patch fixes this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This fails on the second +assert_equal+ statement.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  p = Pirate.first
  assert_equal 2, p.parrots.length
  p.parrots.destroy(p.parrots.first)
  assert_equal 1, p.parrots.length&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Attached patch fixes this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-28T01:14:44+01:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3288</number>
      <permalink>using-destroy-on-ar-association-collection-updates-the-collection-in-memory</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord patch</tag>
      <title>Using destroy on AR association collection updates the collection in memory.</title>
      <updated-at type="datetime">2009-09-28T01:14:50+01:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">1</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3288</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I somehow think that this is an intended behavior. Consider this snippet:

@@@
 $ parrot = Parrot.first
=&gt; &lt;Parrot id: 1, name: &quot;Jack&quot;&gt;
 $ parrot.destroy
=&gt; &lt;Parrot id:1, name: &quot;Jack&quot;&gt;
 $ parrot
=&gt; &lt;Parrot id:1, name: &quot;Jack&quot;&gt;
@@@

Current behavior of `p.parrots.destroy(p.parrots.first)` would make it consistence with the above snippet, as it gives you the opportunity to access the record that was destroyed.

Let's see how anybody else think about this idea.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I somehow think that this is an intended behavior. Consider this
snippet:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; $ parrot = Parrot.first
=&amp;gt; &amp;lt;Parrot id: 1, name: &quot;Jack&quot;&amp;gt;
 $ parrot.destroy
=&amp;gt; &amp;lt;Parrot id:1, name: &quot;Jack&quot;&amp;gt;
 $ parrot
=&amp;gt; &amp;lt;Parrot id:1, name: &quot;Jack&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Current behavior of
&lt;code&gt;p.parrots.destroy(p.parrots.first)&lt;/code&gt; would make it
consistence with the above snippet, as it gives you the opportunity
to access the record that was destroyed.&lt;/p&gt;
&lt;p&gt;Let's see how anybody else think about this idea.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-15T14:38:47+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3288</number>
      <permalink>using-destroy-on-ar-association-collection-updates-the-collection-in-memory</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord patch</tag>
      <title>Using destroy on AR association collection updates the collection in memory.</title>
      <updated-at type="datetime">2010-02-15T14:38:49+00:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">2</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3288</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think it is not good idea to have access to destroyed record. You have to be very careful when you using it, but if you really want to have this destroyed object, it is easy to do this without making new data base query. If you would like to have updated collection after destroy you need to do db query or make some ugly workaround. Why I need update my collection? The best example is rendering ajax response. You have list of some objects(to-do list or something like that) on website. User clicks &quot;remove object&quot; and you would like to show its new list using ajax. For now you can not do this without making new db query after destroy.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think it is not good idea to have access to destroyed record.
You have to be very careful when you using it, but if you really
want to have this destroyed object, it is easy to do this without
making new data base query. If you would like to have updated
collection after destroy you need to do db query or make some ugly
workaround. Why I need update my collection? The best example is
rendering ajax response. You have list of some objects(to-do list
or something like that) on website. User clicks &quot;remove object&quot; and
you would like to show its new list using ajax. For now you can not
do this without making new db query after destroy.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-16T13:06:11+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3288</number>
      <permalink>using-destroy-on-ar-association-collection-updates-the-collection-in-memory</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord patch</tag>
      <title>Using destroy on AR association collection updates the collection in memory.</title>
      <updated-at type="datetime">2010-02-16T13:06:15+00:00</updated-at>
      <user-id type="integer">86621</user-id>
      <version type="integer">3</version>
      <user-name>Staszek</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3288</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>So are you +1 on the patch? ;-)

To me it's very simple: If one deletes something from a collection, then no one would expect it to be still part of that collection, right?</body>
      <body-html>&lt;div&gt;&lt;p&gt;So are you +1 on the patch? ;-)&lt;/p&gt;
&lt;p&gt;To me it's very simple: If one deletes something from a
collection, then no one would expect it to be still part of that
collection, right?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-16T23:37:54+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3288</number>
      <permalink>using-destroy-on-ar-association-collection-updates-the-collection-in-memory</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord patch</tag>
      <title>Using destroy on AR association collection updates the collection in memory.</title>
      <updated-at type="datetime">2010-02-16T23:37:56+00:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">4</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3288</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:54:57+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3288</number>
      <permalink>using-destroy-on-ar-association-collection-updates-the-collection-in-memory</permalink>
      <priority type="integer">140677</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord patch</tag>
      <title>Using destroy on AR association collection updates the collection in memory.</title>
      <updated-at type="datetime">2011-02-02T18:39:26+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3288</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:54:57+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3288</number>
      <permalink>using-destroy-on-ar-association-collection-updates-the-collection-in-memory</permalink>
      <priority type="integer">140677</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable activerecord patch</tag>
      <title>Using destroy on AR association collection updates the collection in memory.</title>
      <updated-at type="datetime">2011-02-02T18:38:32+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3288</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>194c0915023240281b8481430c2bbf5e5c707520</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-28T01:14:45+01:00</created-at>
      <filename>ar_assoc_destroy.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">279755</id>
      <size type="integer">8778</size>
      <uploader-id type="integer">20836</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/279755/ar_assoc_destroy.diff</url>
    </attachment>
  </attachments>
</ticket>
