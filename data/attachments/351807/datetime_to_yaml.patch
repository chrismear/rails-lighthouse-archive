From 3a04b8fe2f498bede97aac88ef976cf046fce29b Mon Sep 17 00:00:00 2001
From: Serguei Filimonov <serguei.filimonov@gmail.com>
Date: Fri, 11 Dec 2009 13:08:00 -0800
Subject: [PATCH] Added #to_i to DateTime in ActiveSupport so #to_yaml works correctly on ActiveRecord models with DateTime attributes.

---
 activerecord/test/cases/yaml_serialization_test.rb |   11 +++++++++++
 .../core_ext/date_time/conversions.rb              |   15 +++++++++++++--
 activesupport/test/core_ext/date_time_ext_test.rb  |    4 ++++
 3 files changed, 28 insertions(+), 2 deletions(-)
 create mode 100644 activerecord/test/cases/yaml_serialization_test.rb

diff --git a/activerecord/test/cases/yaml_serialization_test.rb b/activerecord/test/cases/yaml_serialization_test.rb
new file mode 100644
index 0000000..f221def
--- /dev/null
+++ b/activerecord/test/cases/yaml_serialization_test.rb
@@ -0,0 +1,11 @@
+require "cases/helper"
+require 'models/topic'
+
+class YamlSerializationTest < ActiveRecord::TestCase
+  def test_to_yaml_with_time_with_zone_should_not_raise_exception
+    Time.zone = ActiveSupport::TimeZone["Pacific Time (US & Canada)"]
+    ActiveRecord::Base.time_zone_aware_attributes = true
+    topic = Topic.new(:written_on => DateTime.now)
+    assert_nothing_raised { topic.to_yaml }
+  end
+end
diff --git a/activesupport/lib/active_support/core_ext/date_time/conversions.rb b/activesupport/lib/active_support/core_ext/date_time/conversions.rb
index 5f01bc4..47a3183 100644
--- a/activesupport/lib/active_support/core_ext/date_time/conversions.rb
+++ b/activesupport/lib/active_support/core_ext/date_time/conversions.rb
@@ -78,7 +78,18 @@ class DateTime
   
   # Converts self to a floating-point number of seconds since the Unix epoch 
   def to_f
-    days_since_unix_epoch = self - ::DateTime.civil(1970)
-    (days_since_unix_epoch * 86_400).to_f
+    seconds_since_unix_epoch.to_f
+  end
+
+  # Converts self to an integer number of seconds since the Unix epoch
+  def to_i
+    seconds_since_unix_epoch.to_i
+  end
+
+  private
+
+  def seconds_since_unix_epoch
+    seconds_per_day = 86_400
+    (self - ::DateTime.civil(1970)) * seconds_per_day
   end
 end
diff --git a/activesupport/test/core_ext/date_time_ext_test.rb b/activesupport/test/core_ext/date_time_ext_test.rb
index 4341ead..278c057 100644
--- a/activesupport/test/core_ext/date_time_ext_test.rb
+++ b/activesupport/test/core_ext/date_time_ext_test.rb
@@ -350,6 +350,10 @@ class DateTimeExtCalculationsTest < Test::Unit::TestCase
     assert_equal 946684800.0, DateTime.civil(1999,12,31,19,0,0,Rational(-5,24)).to_f
   end
 
+  def test_to_i
+    assert_equal 946684800, DateTime.civil(2000).to_i
+  end
+
   protected
     def with_env_tz(new_tz = 'US/Eastern')
       old_tz, ENV['TZ'] = ENV['TZ'], new_tz
-- 
1.6.3.3

