<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">40263</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:16+00:00</created-at>
  <creator-id type="integer">68822</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5975</number>
  <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>put :update in json format should return '{}' in real-life and not only in tests</title>
  <updated-at type="datetime">2011-02-19T09:28:16+00:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">11</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>Christiaan Van den Poel</creator-name>
  <assigned-user-name>Neeraj Singh</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
  <priority-name>Low</priority-name>
  <original-body>There is a bug in jQuery 1.4.4 which causes an succesful ajax update to a resource to trigger 'ajax:failure' events instead of 'ajax:success'.

The reason for this is, that the server answers with status 200 and a nearly empty body, it contains 1 whitespace.  This causes jQuery to choke on the parseJSON.  And so the wrong ajax callbacks are triggered.

This one is easy to reproduce:

     #generate a new rails project
     $ rails new ujs_test &amp;&amp; cd ujs_test
     # add the line 'gem 'jquery-rails' to your Gemfile
     $ bundle install
     $ rails g jquery:install
     $ rails g scaffold folder name:string 
     
In the 'app/views/folders/_form.html.erb' change the first line to:

    &lt;%= form_for(@folder, :remote =&gt; true, :html =&gt; {'data-type' =&gt; 'json' }) do |f| %&gt;

Be sure to use just responders:

    class FoldersController &lt; ApplicationController
    respond_to :html, :json

    def index
    @folders = Folder.all
    respond_with(@folders)
    end

    def edit
    @folder = Folder.find(params[:id])
    respond_with(@folder)
    end

    def new
    @folder = Folder.new
    respond_with(@folder)
    end

    def create
    @folder = Folder.create(params[:folder])
    respond_with(@folder)
    end

    def update
    @folder = Folder.find(params[:id]).update_attributes(params[:folder])
    respond_with(@folder)
    end
    end

As a debug/logger you can use this in your application.js
     
      // Place your application-specific JavaScript functions and classes here
      // This file is automatically included by javascript_include_tag :defaults
      $(function(){
          $('form[data-remote]').bind('ajax:success', function(data, status, xhr){
              console.log(&quot;*** ajax:success ***&quot;);
              console.dir(data);
              console.dir(status);
              console.log(&quot;*** END: ajax:success ***&quot;);
          });

          $('form[data-remote]').bind('ajax:failure', function(xhr, status, error){
              console.log(&quot;+++ ajax:failure +++&quot;);
              console.dir(xhr);
              console.dir(status);
              console.dir(error);
              console.log(&quot;+++ END: ajax:failure +++&quot;);
          });
      });

When you go to http://localhost/folders/1/edit (besure to have one created already).

Doing an edit and hitting update will trigger an 'ajax:failure' event although the response status is 200.</original-body>
  <latest-body>There is a bug in jQuery 1.4.4 which causes an succesful ajax update to a resource to trigger 'ajax:failure' events instead of 'ajax:success'.

The reason for this is, that the server answers with status 200 and a nearly empty body, it contains 1 whitespace.  This causes jQuery to choke on the parseJSON.  And so the wrong ajax callbacks are triggered.

This one is easy to reproduce:

     #generate a new rails project
     $ rails new ujs_test &amp;&amp; cd ujs_test
     # add the line 'gem 'jquery-rails' to your Gemfile
     $ bundle install
     $ rails g jquery:install
     $ rails g scaffold folder name:string 
     
In the 'app/views/folders/_form.html.erb' change the first line to:

    &lt;%= form_for(@folder, :remote =&gt; true, :html =&gt; {'data-type' =&gt; 'json' }) do |f| %&gt;

Be sure to use just responders:

    class FoldersController &lt; ApplicationController
    respond_to :html, :json

    def index
    @folders = Folder.all
    respond_with(@folders)
    end

    def edit
    @folder = Folder.find(params[:id])
    respond_with(@folder)
    end

    def new
    @folder = Folder.new
    respond_with(@folder)
    end

    def create
    @folder = Folder.create(params[:folder])
    respond_with(@folder)
    end

    def update
    @folder = Folder.find(params[:id]).update_attributes(params[:folder])
    respond_with(@folder)
    end
    end

As a debug/logger you can use this in your application.js
     
      // Place your application-specific JavaScript functions and classes here
      // This file is automatically included by javascript_include_tag :defaults
      $(function(){
          $('form[data-remote]').bind('ajax:success', function(data, status, xhr){
              console.log(&quot;*** ajax:success ***&quot;);
              console.dir(data);
              console.dir(status);
              console.log(&quot;*** END: ajax:success ***&quot;);
          });

          $('form[data-remote]').bind('ajax:failure', function(xhr, status, error){
              console.log(&quot;+++ ajax:failure +++&quot;);
              console.dir(xhr);
              console.dir(status);
              console.dir(error);
              console.log(&quot;+++ END: ajax:failure +++&quot;);
          });
      });

When you go to http://localhost/folders/1/edit (besure to have one created already).

Doing an edit and hitting update will trigger an 'ajax:failure' event although the response status is 200.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;There is a bug in jQuery 1.4.4 which causes an succesful ajax
update to a resource to trigger 'ajax:failure' events instead of
'ajax:success'.&lt;/p&gt;
&lt;p&gt;The reason for this is, that the server answers with status 200
and a nearly empty body, it contains 1 whitespace. This causes
jQuery to choke on the parseJSON. And so the wrong ajax callbacks
are triggered.&lt;/p&gt;
&lt;p&gt;This one is easy to reproduce:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; #generate a new rails project
 $ rails new ujs_test &amp;amp;&amp;amp; cd ujs_test
 # add the line 'gem 'jquery-rails' to your Gemfile
 $ bundle install
 $ rails g jquery:install
 $ rails g scaffold folder name:string&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the 'app/views/folders/_form.html.erb' change the first line
to:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= form_for(@folder, :remote =&amp;gt; true, :html =&amp;gt; {'data-type' =&amp;gt; 'json' }) do |f| %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Be sure to use just responders:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class FoldersController &amp;lt; ApplicationController
respond_to :html, :json

def index
@folders = Folder.all
respond_with(@folders)
end

def edit
@folder = Folder.find(params[:id])
respond_with(@folder)
end

def new
@folder = Folder.new
respond_with(@folder)
end

def create
@folder = Folder.create(params[:folder])
respond_with(@folder)
end

def update
@folder = Folder.find(params[:id]).update_attributes(params[:folder])
respond_with(@folder)
end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As a debug/logger you can use this in your
application.js&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  // Place your application-specific JavaScript functions and classes here
  // This file is automatically included by javascript_include_tag :defaults
  $(function(){
      $('form[data-remote]').bind('ajax:success', function(data, status, xhr){
          console.log(&quot;*** ajax:success ***&quot;);
          console.dir(data);
          console.dir(status);
          console.log(&quot;*** END: ajax:success ***&quot;);
      });

      $('form[data-remote]').bind('ajax:failure', function(xhr, status, error){
          console.log(&quot;+++ ajax:failure +++&quot;);
          console.dir(xhr);
          console.dir(status);
          console.dir(error);
          console.log(&quot;+++ END: ajax:failure +++&quot;);
      });
  });&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When you go to &lt;a href=
&quot;http://localhost/folders/1/edit&quot;&gt;http://localhost/folders/1/edit&lt;/a&gt;
(besure to have one created already).&lt;/p&gt;
&lt;p&gt;Doing an edit and hitting update will trigger an 'ajax:failure'
event although the response status is 200.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is a bug in jQuery 1.4.4 which causes an succesful ajax update to a resource to trigger 'ajax:failure' events instead of 'ajax:success'.

The reason for this is, that the server answers with status 200 and a nearly empty body, it contains 1 whitespace.  This causes jQuery to choke on the parseJSON.  And so the wrong ajax callbacks are triggered.

This one is easy to reproduce:

     #generate a new rails project
     $ rails new ujs_test &amp;&amp; cd ujs_test
     # add the line 'gem 'jquery-rails' to your Gemfile
     $ bundle install
     $ rails g jquery:install
     $ rails g scaffold folder name:string 
     
In the 'app/views/folders/_form.html.erb' change the first line to:

    &lt;%= form_for(@folder, :remote =&gt; true, :html =&gt; {'data-type' =&gt; 'json' }) do |f| %&gt;

Be sure to use just responders:

    class FoldersController &lt; ApplicationController
    respond_to :html, :json

    def index
    @folders = Folder.all
    respond_with(@folders)
    end

    def edit
    @folder = Folder.find(params[:id])
    respond_with(@folder)
    end

    def new
    @folder = Folder.new
    respond_with(@folder)
    end

    def create
    @folder = Folder.create(params[:folder])
    respond_with(@folder)
    end

    def update
    @folder = Folder.find(params[:id]).update_attributes(params[:folder])
    respond_with(@folder)
    end
    end

As a debug/logger you can use this in your application.js
     
      // Place your application-specific JavaScript functions and classes here
      // This file is automatically included by javascript_include_tag :defaults
      $(function(){
          $('form[data-remote]').bind('ajax:success', function(data, status, xhr){
              console.log(&quot;*** ajax:success ***&quot;);
              console.dir(data);
              console.dir(status);
              console.log(&quot;*** END: ajax:success ***&quot;);
          });

          $('form[data-remote]').bind('ajax:failure', function(xhr, status, error){
              console.log(&quot;+++ ajax:failure +++&quot;);
              console.dir(xhr);
              console.dir(status);
              console.dir(error);
              console.log(&quot;+++ END: ajax:failure +++&quot;);
          });
      });

When you go to http://localhost/folders/1/edit (besure to have one created already).

Doing an edit and hitting update will trigger an 'ajax:failure' event although the response status is 200.</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is a bug in jQuery 1.4.4 which causes an succesful ajax
update to a resource to trigger 'ajax:failure' events instead of
'ajax:success'.&lt;/p&gt;
&lt;p&gt;The reason for this is, that the server answers with status 200
and a nearly empty body, it contains 1 whitespace. This causes
jQuery to choke on the parseJSON. And so the wrong ajax callbacks
are triggered.&lt;/p&gt;
&lt;p&gt;This one is easy to reproduce:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; #generate a new rails project
 $ rails new ujs_test &amp;amp;&amp;amp; cd ujs_test
 # add the line 'gem 'jquery-rails' to your Gemfile
 $ bundle install
 $ rails g jquery:install
 $ rails g scaffold folder name:string&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the 'app/views/folders/_form.html.erb' change the first line
to:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= form_for(@folder, :remote =&amp;gt; true, :html =&amp;gt; {'data-type' =&amp;gt; 'json' }) do |f| %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Be sure to use just responders:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class FoldersController &amp;lt; ApplicationController
respond_to :html, :json

def index
@folders = Folder.all
respond_with(@folders)
end

def edit
@folder = Folder.find(params[:id])
respond_with(@folder)
end

def new
@folder = Folder.new
respond_with(@folder)
end

def create
@folder = Folder.create(params[:folder])
respond_with(@folder)
end

def update
@folder = Folder.find(params[:id]).update_attributes(params[:folder])
respond_with(@folder)
end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As a debug/logger you can use this in your
application.js&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  // Place your application-specific JavaScript functions and classes here
  // This file is automatically included by javascript_include_tag :defaults
  $(function(){
      $('form[data-remote]').bind('ajax:success', function(data, status, xhr){
          console.log(&quot;*** ajax:success ***&quot;);
          console.dir(data);
          console.dir(status);
          console.log(&quot;*** END: ajax:success ***&quot;);
      });

      $('form[data-remote]').bind('ajax:failure', function(xhr, status, error){
          console.log(&quot;+++ ajax:failure +++&quot;);
          console.dir(xhr);
          console.dir(status);
          console.dir(error);
          console.log(&quot;+++ END: ajax:failure +++&quot;);
      });
  });&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When you go to &lt;a href=
&quot;http://localhost/folders/1/edit&quot;&gt;http://localhost/folders/1/edit&lt;/a&gt;
(besure to have one created already).&lt;/p&gt;
&lt;p&gt;Doing an edit and hitting update will trigger an 'ajax:failure'
event although the response status is 200.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T13:51:04+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>latest jquery (1.4.4) has a bug in its parseJSON that has an effect on jquery-ujs and its callbacks</title>
      <updated-at type="datetime">2010-11-15T13:51:06+00:00</updated-at>
      <user-id type="integer">68822</user-id>
      <version type="integer">1</version>
      <user-name>Christiaan Van den Poel</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'll take a look.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'll take a look.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T14:10:49+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>latest jquery (1.4.4) has a bug in its parseJSON that has an effect on jquery-ujs and its callbacks</title>
      <updated-at type="datetime">2010-11-15T14:10:50+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The bug was rejected by the jquery team http://bugs.jquery.com/ticket/7521

They say the string with whitespaces is not valid json, so it's in the rails code where the whitespaces should be removed from the response, no?</body>
      <body-html>&lt;div&gt;&lt;p&gt;The bug was rejected by the jquery team &lt;a href=
&quot;http://bugs.jquery.com/ticket/7521&quot;&gt;http://bugs.jquery.com/ticket/7521&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;They say the string with whitespaces is not valid json, so it's
in the rails code where the whitespaces should be removed from the
response, no?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T14:11:32+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 40263
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>latest jquery (1.4.4) has a bug in its parseJSON that has an effect on jquery-ujs and its callbacks</title>
      <updated-at type="datetime">2010-11-15T14:11:33+00:00</updated-at>
      <user-id type="integer">68822</user-id>
      <version type="integer">3</version>
      <user-name>Christiaan Van den Poel</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In the file 'actionpack/lib/action_controller/metal/responder.rb' on line 167
https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/responder.rb#L167

The code is that for a successful update the response is 

    head :ok

In the file 'actionpack/lib/action_controller/metal/head.rb' on line 29 
https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/head.rb#L29

There is code that set the response body to a string with one whitespace, which is, according the jQuery team non valid when you return json.

     self.response_body = &quot; &quot;

I can imagine there is a historic reason to return one whitespace in case of a head response, but I also follow the jQuery team when they state that in case of a JSON response this string/response is invalid.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In the file
'actionpack/lib/action_controller/metal/responder.rb' on line
167&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/responder.rb#L167&quot;&gt;
https://github.com/rails/rails/blob/master/actionpack/lib/action_co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The code is that for a successful update the response is&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;head :ok&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the file 'actionpack/lib/action_controller/metal/head.rb' on
line 29&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/head.rb#L29&quot;&gt;
https://github.com/rails/rails/blob/master/actionpack/lib/action_co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is code that set the response body to a string with one
whitespace, which is, according the jQuery team non valid when you
return json.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; self.response_body = &quot; &quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I can imagine there is a historic reason to return one
whitespace in case of a head response, but I also follow the jQuery
team when they state that in case of a JSON response this
string/response is invalid.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T14:24:43+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>latest jquery (1.4.4) has a bug in its parseJSON that has an effect on jquery-ujs and its callbacks</title>
      <updated-at type="datetime">2010-11-15T14:24:47+00:00</updated-at>
      <user-id type="integer">68822</user-id>
      <version type="integer">4</version>
      <user-name>Christiaan Van den Poel</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Seems during my comment edit I've removed the who's responsible?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Seems during my comment edit I've removed the who's
responsible?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T14:25:46+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>latest jquery (1.4.4) has a bug in its parseJSON that has an effect on jquery-ujs and its callbacks</title>
      <updated-at type="datetime">2010-11-15T14:25:48+00:00</updated-at>
      <user-id type="integer">68822</user-id>
      <version type="integer">5</version>
      <user-name>Christiaan Van den Poel</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When I look at the rails code there is a test for returning '{}' when a put request is made in json format.

https://github.com/rails/rails/blob/master/actionpack/test/controller/mime_responds_test.rb#L734

But when I use it in my application and browser, I get &quot; &quot; which is invalid json.

The thing is also: the accepts request header is:

Chrome 7:  application/json, text/javascript, */*; q=0.01
FF3: 	   application/json, text/javascript, */*; q=0.01

So when I write a new test:

    def test_using_resource_for_put_with_json_yields_ok_on_success_2
       Customer.any_instance.stubs(:to_json).returns('{&quot;name&quot;: &quot;David&quot;}')
       @request.accept = &quot;application/json,text/javascript,*/*;q=0.01&quot;
       put :using_resource
       assert_equal &quot;application/json&quot;, @response.content_type
       assert_equal 200, @response.status
       assert_equal &quot;{}&quot;, @response.body
    end

this fails (exception):

    NoMethodError: undefined method `hash_for_customer_url' for #&lt;Module:0xb6936fb4&gt;
    /var/projects/github/rails@github/actionpack/lib/action_dispatch/routing/polymorphic_routes.rb:135:in `__send__'
    /var/projects/github/rails@github/actionpack/lib/action_dispatch/routing/polymorphic_routes.rb:135:in `polymorphic_url'
    /var/projects/github/rails@github/actionpack/lib/action_dispatch/routing/url_for.rb:138:in `url_for'
    /var/projects/github/rails@github/actionpack/lib/action_controller/metal/redirecting.rb:93:in `_compute_redirect_to_location'
    /var/projects/github/rails@github/actionpack/lib/action_controller/metal/redirecting.rb:63:in `redirect_to'
    .... 

So then I write the test like this:
          
         def test_using_resource_for_put_with_json_yields_ok_on_success_2
	    with_test_route_set do
		Customer.any_instance.stubs(:to_json).returns('{&quot;name&quot;: &quot;David&quot;}')
		    @request.accept = &quot;application/json,text/javascript,*/*;q=0.01&quot;
		    put :using_resource
		    assert_equal &quot;application/json&quot;, @response.content_type
		    assert_equal 200, @response.status
		    assert_equal &quot;{}&quot;, @response.body
		end
	  end

The test fails (real test fail):

    1) Failure:
    test_using_resource_for_put_with_json_yields_ok_on_success_2(RespondWithControllerTest)
    [controller/mime_responds_test.rb:742:in `test_using_resource_for_put_with_json_yields_ok_on_success_2'
     controller/mime_responds_test.rb:932:in `with_test_route_set'
     /var/projects/github/rails@github/actionpack/lib/action_dispatch/testing/assertions/routing.rb:164:in `with_routing'
     controller/mime_responds_test.rb:924:in `with_test_route_set'
     controller/mime_responds_test.rb:738:in `test_using_resource_for_put_with_json_yields_ok_on_success_2'
     /var/projects/github/rails@github/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
     /var/projects/github/rails@github/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
     /var/projects/github/rails@github/activesupport/lib/active_support/callbacks.rb:428:in `_run_setup_callbacks'
     /var/projects/github/rails@github/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run']:
     &lt;&quot;application/json&quot;&gt; expected but was
     &lt;&quot;text/html&quot;&gt;.

So I'm testing with a reallife situation and the test fails?

Perhaps I'm not getting all this rails code and am I doing it wrong, perhaps someone can help out here.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When I look at the rails code there is a test for returning '{}'
when a put request is made in json format.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://github.com/rails/rails/blob/master/actionpack/test/controller/mime_responds_test.rb#L734&quot;&gt;
https://github.com/rails/rails/blob/master/actionpack/test/controll...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But when I use it in my application and browser, I get &quot; &quot; which
is invalid json.&lt;/p&gt;
&lt;p&gt;The thing is also: the accepts request header is:&lt;/p&gt;
&lt;p&gt;Chrome 7: application/json, text/javascript, &lt;em&gt;/&lt;/em&gt;;
q=0.01&lt;br&gt;
FF3: application/json, text/javascript, &lt;em&gt;/&lt;/em&gt;; q=0.01&lt;/p&gt;
&lt;p&gt;So when I write a new test:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test_using_resource_for_put_with_json_yields_ok_on_success_2
   Customer.any_instance.stubs(:to_json).returns('{&quot;name&quot;: &quot;David&quot;}')
   @request.accept = &quot;application/json,text/javascript,*/*;q=0.01&quot;
   put :using_resource
   assert_equal &quot;application/json&quot;, @response.content_type
   assert_equal 200, @response.status
   assert_equal &quot;{}&quot;, @response.body
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this fails (exception):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;NoMethodError: undefined method `hash_for_customer_url' for #&amp;lt;Module:0xb6936fb4&amp;gt;
/var/projects/github/rails@github/actionpack/lib/action_dispatch/routing/polymorphic_routes.rb:135:in `__send__'
/var/projects/github/rails@github/actionpack/lib/action_dispatch/routing/polymorphic_routes.rb:135:in `polymorphic_url'
/var/projects/github/rails@github/actionpack/lib/action_dispatch/routing/url_for.rb:138:in `url_for'
/var/projects/github/rails@github/actionpack/lib/action_controller/metal/redirecting.rb:93:in `_compute_redirect_to_location'
/var/projects/github/rails@github/actionpack/lib/action_controller/metal/redirecting.rb:63:in `redirect_to'
....&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So then I write the test like this:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;     def test_using_resource_for_put_with_json_yields_ok_on_success_2
    with_test_route_set do
    Customer.any_instance.stubs(:to_json).returns('{&quot;name&quot;: &quot;David&quot;}')
        @request.accept = &quot;application/json,text/javascript,*/*;q=0.01&quot;
        put :using_resource
        assert_equal &quot;application/json&quot;, @response.content_type
        assert_equal 200, @response.status
        assert_equal &quot;{}&quot;, @response.body
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The test fails (real test fail):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;1) Failure:
test_using_resource_for_put_with_json_yields_ok_on_success_2(RespondWithControllerTest)
[controller/mime_responds_test.rb:742:in `test_using_resource_for_put_with_json_yields_ok_on_success_2'
 controller/mime_responds_test.rb:932:in `with_test_route_set'
 /var/projects/github/rails@github/actionpack/lib/action_dispatch/testing/assertions/routing.rb:164:in `with_routing'
 controller/mime_responds_test.rb:924:in `with_test_route_set'
 controller/mime_responds_test.rb:738:in `test_using_resource_for_put_with_json_yields_ok_on_success_2'
 /var/projects/github/rails@github/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
 /var/projects/github/rails@github/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
 /var/projects/github/rails@github/activesupport/lib/active_support/callbacks.rb:428:in `_run_setup_callbacks'
 /var/projects/github/rails@github/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run']:
 &amp;lt;&quot;application/json&quot;&amp;gt; expected but was
 &amp;lt;&quot;text/html&quot;&amp;gt;.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So I'm testing with a reallife situation and the test fails?&lt;/p&gt;
&lt;p&gt;Perhaps I'm not getting all this rails code and am I doing it
wrong, perhaps someone can help out here.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T15:42:36+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>latest jquery (1.4.4) has a bug in its parseJSON that has an effect on jquery-ujs and its callbacks</title>
      <updated-at type="datetime">2010-11-15T15:42:38+00:00</updated-at>
      <user-id type="integer">68822</user-id>
      <version type="integer">6</version>
      <user-name>Christiaan Van den Poel</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T15:49:03+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- 
:title: latest jquery (1.4.4) has a bug in its parseJSON that has an effect on jquery-ujs and its callbacks
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>put :update in json format should return '{}' in real-life and not only in tests</title>
      <updated-at type="datetime">2010-11-15T15:49:05+00:00</updated-at>
      <user-id type="integer">68822</user-id>
      <version type="integer">7</version>
      <user-name>Christiaan Van den Poel</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I followed your instruction and I am getting {} as the response.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I followed your instruction and I am getting {} as the
response.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T17:16:41+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>put :update in json format should return '{}' in real-life and not only in tests</title>
      <updated-at type="datetime">2010-11-15T17:16:43+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">8</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I tested on rails edge.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I tested on rails edge.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T17:17:12+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>put :update in json format should return '{}' in real-life and not only in tests</title>
      <updated-at type="datetime">2010-11-15T17:17:14+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">9</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>indeed, it look likes it is fixed in edge since 3.0.1.

My mistake...

Thx for checking</body>
      <body-html>&lt;div&gt;&lt;p&gt;indeed, it look likes it is fixed in edge since 3.0.1.&lt;/p&gt;
&lt;p&gt;My mistake...&lt;/p&gt;
&lt;p&gt;Thx for checking&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-15T17:39:45+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>put :update in json format should return '{}' in real-life and not only in tests</title>
      <updated-at type="datetime">2010-11-15T17:39:49+00:00</updated-at>
      <user-id type="integer">68822</user-id>
      <version type="integer">10</version>
      <user-name>Christiaan Van den Poel</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-19T16:45:27+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>put :update in json format should return '{}' in real-life and not only in tests</title>
      <updated-at type="datetime">2010-11-19T16:45:36+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">11</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Founded as a French fashion house in 1854, &lt;A href=&quot;http://www.elechanel.com/&quot;&gt;Channel Bags&lt;/A&gt; one of the best manufacturers of luxury goods and has become one of those brands that trend. &lt;A href=&quot;http://www.elechanel.com/&quot;&gt;Chanel For Sale&lt;/A&gt; are for a long, long time very popular. Every fashionista loves the &lt;A href=&quot;http://www.elechanel.com/&quot;&gt;Chanel Classic Bag&lt;/A&gt;, and you can make a long list of stars and other celebrities. The hard feelings about &lt;A href=&quot;http://www.elechanel.com/chanel-accessories-c-20.html&quot;&gt;Chanel Belt&lt;/A&gt;. Instead, the authentic &lt;A href=&quot;http://www.elechanel.com/chanel-handbags-c-2.html&quot;&gt;Chanel Classic Flap&lt;/A&gt;, they began to make the &lt;A href=&quot;http://www.elechanel.com/chanel-handbags-c-2.html&quot;&gt;Black Chanel Bag&lt;/A&gt;. &lt;A href=&quot;http://www.elechanel.com/chanel-handbags-c-2.html&quot;&gt;Chanel Bag Price&lt;/A&gt; are in different levels of similarity and quality compared to the real thing. So if you really enjoy the &lt;A href=&quot;http://www.elechanel.com/chanel-accessories-c-20.html&quot;&gt;Chanel Scarf&lt;/A&gt; for sale style, but you hate their price tags, try the high-quality replicas and allows you to add your beauty.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Founded as a French fashion house in 1854, &lt;a href=
&quot;http://www.elechanel.com/&quot;&gt;Channel Bags&lt;/a&gt; one of the best
manufacturers of luxury goods and has become one of those brands
that trend. &lt;a href=&quot;http://www.elechanel.com/&quot;&gt;Chanel For Sale&lt;/a&gt;
are for a long, long time very popular. Every fashionista loves the
&lt;a href=&quot;http://www.elechanel.com/&quot;&gt;Chanel Classic Bag&lt;/a&gt;, and you
can make a long list of stars and other celebrities. The hard
feelings about &lt;a href=
&quot;http://www.elechanel.com/chanel-accessories-c-20.html&quot;&gt;Chanel
Belt&lt;/a&gt;. Instead, the authentic &lt;a href=
&quot;http://www.elechanel.com/chanel-handbags-c-2.html&quot;&gt;Chanel Classic
Flap&lt;/a&gt;, they began to make the &lt;a href=
&quot;http://www.elechanel.com/chanel-handbags-c-2.html&quot;&gt;Black Chanel
Bag&lt;/a&gt;. &lt;a href=
&quot;http://www.elechanel.com/chanel-handbags-c-2.html&quot;&gt;Chanel Bag
Price&lt;/a&gt; are in different levels of similarity and quality
compared to the real thing. So if you really enjoy the &lt;a href=
&quot;http://www.elechanel.com/chanel-accessories-c-20.html&quot;&gt;Chanel
Scarf&lt;/a&gt; for sale style, but you hate their price tags, try the
high-quality replicas and allows you to add your beauty.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-17T02:07:05+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>put :update in json format should return '{}' in real-life and not only in tests</title>
      <updated-at type="datetime">2010-12-17T10:12:09+00:00</updated-at>
      <user-id type="integer">129223</user-id>
      <version type="integer">12</version>
      <user-name>fvurefgbyru</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-28T03:06:12+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>put :update in json format should return '{}' in real-life and not only in tests</title>
      <updated-at type="datetime">2010-12-28T03:36:16+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">13</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>student of the well-known big &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram&lt;/a&gt;  words, there are two situations: &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers shoes&lt;/a&gt;  particularly good in all aspects and all  &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;five fingers shoes&lt;/a&gt; aspects of good students are particularly bad bad student. However,  &lt;a href=&quot;http://www.vibram.us.com/button-men-shoes&quot;&gt;Cheap Vibram Men Shoes&lt;/a&gt; for the pig, it really seems a bit of trouble. He is not a particularly good good student nor is it particularly  &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;vibram shoes&lt;/a&gt; bad bad student. However, more often, he can show himself, for &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers&lt;/a&gt;  example, what show what activities and the like, especially &lt;a href=&quot;http://www.vibram.us.com/kso-leather-facing-men-shoes&quot;&gt;Cheap Vibram Fivefingers Women Shoes&lt;/a&gt;  basketball</body>
      <body-html>&lt;div&gt;&lt;p&gt;student of the well-known big &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;Vibram&lt;/a&gt; words, there are two
situations: &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers
shoes&lt;/a&gt; particularly good in all aspects and all &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;five fingers shoes&lt;/a&gt; aspects of good
students are particularly bad bad student. However, &lt;a href=
&quot;http://www.vibram.us.com/button-men-shoes&quot;&gt;Cheap Vibram Men
Shoes&lt;/a&gt; for the pig, it really seems a bit of trouble. He is not
a particularly good good student nor is it particularly &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;vibram shoes&lt;/a&gt; bad bad student.
However, more often, he can show himself, for &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers&lt;/a&gt; example, what
show what activities and the like, especially &lt;a href=
&quot;http://www.vibram.us.com/kso-leather-facing-men-shoes&quot;&gt;Cheap
Vibram Fivefingers Women Shoes&lt;/a&gt; basketball&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-28T08:20:48+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>put :update in json format should return '{}' in real-life and not only in tests</title>
      <updated-at type="datetime">2011-01-28T08:44:31+00:00</updated-at>
      <user-id type="integer">134634</user-id>
      <version type="integer">14</version>
      <user-name>songqiudong</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T03:05:30+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>put :update in json format should return '{}' in real-life and not only in tests</title>
      <updated-at type="datetime">2011-02-14T05:41:59+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">15</version>
      <user-name>xixi</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:11:57+00:00</created-at>
      <creator-id type="integer">68822</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5975</number>
      <permalink>latest-jquery-144-has-a-bug-in-its-parsejson-that-has-an-effect-on-jquery-ujs-and-its-callbacks</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>put :update in json format should return '{}' in real-life and not only in tests</title>
      <updated-at type="datetime">2011-02-19T09:28:16+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">16</version>
      <user-name>mklo</user-name>
      <creator-name>Christiaan Van den Poel</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5975</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5213b5c0e4aafdecfdf072f387ded928a5c5d65b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-15T17:39:45+00:00</created-at>
      <filename>responder.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">770953</id>
      <size type="integer">2819</size>
      <uploader-id type="integer">68822</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/770953/responder.diff</url>
    </attachment>
  </attachments>
</ticket>
