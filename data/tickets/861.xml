<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-08-19T21:19:46+01:00</created-at>
  <creator-id type="integer">21652</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">861</number>
  <permalink>fix-for-a-transaction-problem-with-change_column-on-postgresql-if-bad-arguments-passed-in</permalink>
  <priority type="integer">317</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord bug patch postgresql</tag>
  <title>fix for a transaction problem with change_column on postgresql if bad arguments passed in</title>
  <updated-at type="datetime">2008-08-25T09:30:38+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">4</version>
  <user-name>Repository</user-name>
  <creator-name>azimux</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/861</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>If you do something like this:

@@@
SomeModel.transaction do 
  &lt;A:  some queries/statements that alter database&gt;

  change_column :table, :column, :null =&gt; false

  &lt;B:  some more queries/statements that alter database&gt;
end
@@@

Then the statements in A will be rolled back but the statements in B will be committed, and this happens without any errors or warnings whatsoever, and causes some confusion.

Notice how I forgot to add the column type to the change_column call, causing change_column to build an invalid statement (it tries to use 'nullfalse' as the datatype), but this exception is gobbled up by change_column which then does some transactional work of it's own, giving the said undesired side effects.

This code is there to handle some problem with pg version 7.x.  This patch reraises the exception if the postgresql_version is &gt; 80000, which means the above code raises an exception as it should.</original-body>
  <latest-body>If you do something like this:

@@@
SomeModel.transaction do 
  &lt;A:  some queries/statements that alter database&gt;

  change_column :table, :column, :null =&gt; false

  &lt;B:  some more queries/statements that alter database&gt;
end
@@@

Then the statements in A will be rolled back but the statements in B will be committed, and this happens without any errors or warnings whatsoever, and causes some confusion.

Notice how I forgot to add the column type to the change_column call, causing change_column to build an invalid statement (it tries to use 'nullfalse' as the datatype), but this exception is gobbled up by change_column which then does some transactional work of it's own, giving the said undesired side effects.

This code is there to handle some problem with pg version 7.x.  This patch reraises the exception if the postgresql_version is &gt; 80000, which means the above code raises an exception as it should.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If you do something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
SomeModel.transaction do
  &amp;lt;A:  some queries/statements that alter database&amp;gt;

  change_column :table, :column, :null =&amp;gt; false

  &amp;lt;B:  some more queries/statements that alter database&amp;gt;
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then the statements in A will be rolled back but the statements in B will be committed, and this happens without any errors or warnings whatsoever, and causes some confusion.&lt;/p&gt;

&lt;p&gt;Notice how I forgot to add the column type to the change_column call, causing change_column to build an invalid statement (it tries to use 'nullfalse' as the datatype), but this exception is gobbled up by change_column which then does some transactional work of it's own, giving the said undesired side effects.&lt;/p&gt;

&lt;p&gt;This code is there to handle some problem with pg version 7.x.  This patch reraises the exception if the postgresql_version is &gt; 80000, which means the above code raises an exception as it should.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>If you do something like this:

@@@
SomeModel.transaction do 
  &lt;A:  some queries/statements that alter database&gt;

  change_column :table, :column, :null =&gt; false

  &lt;B:  some more queries/statements that alter database&gt;
end
@@@

Then the statements in A will be rolled back but the statements in B will be committed, and this happens without any errors or warnings whatsoever, and causes some confusion.

Notice how I forgot to add the column type to the change_column call, causing change_column to build an invalid statement (it tries to use 'nullfalse' as the datatype), but this exception is gobbled up by change_column which then does some transactional work of it's own, giving the said undesired side effects.

This code is there to handle some problem with pg version 7.x.  This patch reraises the exception if the postgresql_version is &gt; 80000, which means the above code raises an exception as it should.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you do something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
SomeModel.transaction do
  &amp;lt;A:  some queries/statements that alter database&amp;gt;

  change_column :table, :column, :null =&amp;gt; false

  &amp;lt;B:  some more queries/statements that alter database&amp;gt;
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then the statements in A will be rolled back but the statements in B will be committed, and this happens without any errors or warnings whatsoever, and causes some confusion.&lt;/p&gt;

&lt;p&gt;Notice how I forgot to add the column type to the change_column call, causing change_column to build an invalid statement (it tries to use 'nullfalse' as the datatype), but this exception is gobbled up by change_column which then does some transactional work of it's own, giving the said undesired side effects.&lt;/p&gt;

&lt;p&gt;This code is there to handle some problem with pg version 7.x.  This patch reraises the exception if the postgresql_version is &gt; 80000, which means the above code raises an exception as it should.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-19T21:19:47+01:00</created-at>
      <creator-id type="integer">21652</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">861</number>
      <permalink>fix-for-a-transaction-problem-with-change_column-on-postgresql-if-bad-arguments-passed-in</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug patch postgresql</tag>
      <title>fix for a transaction problem with change_column on postgresql if bad arguments passed in</title>
      <updated-at type="datetime">2008-08-19T21:19:47+01:00</updated-at>
      <user-id type="integer">21652</user-id>
      <version type="integer">1</version>
      <user-name>azimux</user-name>
      <creator-name>azimux</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/861</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [0d74e72e6de7b96e158950a449ea1ccce6f5b8d7]) Fix postgres bug when change_column is called with invalid parameters. [#861 state:resolved]

Signed-off-by: Tarmo T&#228;nav &lt;tarmo@itech.ee&gt;
Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/0d74e72e6de7b96e158950a449ea1ccce6f5b8d7</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [0d74e72e6de7b96e158950a449ea1ccce6f5b8d7]) Fix postgres bug when change_column is called with invalid parameters. [&lt;a href=&quot;/projects/8994/tickets/861&quot; title=&quot;Ticket #861&quot;&gt;#861&lt;/a&gt; state:resolved]&lt;/p&gt;

&lt;p&gt;Signed-off-by: Tarmo T&#228;nav &lt;a href=&quot;&amp;amp;#109;&amp;amp;#x61;&amp;amp;#x69;&amp;amp;#108;&amp;amp;#116;&amp;amp;#x6f;&amp;amp;#x3a;&amp;amp;#x74;&amp;amp;#97;&amp;amp;#114;&amp;amp;#109;&amp;amp;#111;&amp;amp;#x40;&amp;amp;#x69;&amp;amp;#x74;&amp;amp;#101;&amp;amp;#99;&amp;amp;#104;&amp;amp;#46;&amp;amp;#101;&amp;amp;#101;&quot;&gt;&amp;#116;&amp;#x61;&amp;#114;&amp;#x6d;&amp;#111;&amp;#64;&amp;#105;&amp;#116;&amp;#101;&amp;#x63;&amp;#104;&amp;#46;&amp;#101;&amp;#x65;&lt;/a&gt;
Signed-off-by: Pratik Naik &lt;a&gt;&amp;#x70;&amp;#114;&amp;#97;&amp;#116;&amp;#105;&amp;#x6b;&amp;#x6e;&amp;#x61;&amp;#105;&amp;#x6b;&amp;#x40;&amp;#x67;&amp;#x6d;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#x2e;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/0d74e72e6de7b96e158950a449ea1ccce6f5b8d7&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-21T16:25:10+01:00</created-at>
      <creator-id type="integer">21652</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">861</number>
      <permalink>fix-for-a-transaction-problem-with-change_column-on-postgresql-if-bad-arguments-passed-in</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug patch postgresql</tag>
      <title>fix for a transaction problem with change_column on postgresql if bad arguments passed in</title>
      <updated-at type="datetime">2008-08-21T16:25:10+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>azimux</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/861</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [09343166ac213e5fcbd3eb5b21d44606b56afa62]) PostgreSQL: fix transaction bug that can occur if you call change_column with invalid parameters

[#861 state:resolved]
http://github.com/rails/rails/commit/09343166ac213e5fcbd3eb5b21d44606b56afa62</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [09343166ac213e5fcbd3eb5b21d44606b56afa62]) PostgreSQL: fix transaction bug that can occur if you call change_column with invalid parameters&lt;/p&gt;

&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/861&quot; title=&quot;Ticket #861&quot;&gt;#861&lt;/a&gt; state:resolved]
&lt;a href=&quot;http://github.com/rails/rails/commit/09343166ac213e5fcbd3eb5b21d44606b56afa62&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-22T02:16:43+01:00</created-at>
      <creator-id type="integer">21652</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">861</number>
      <permalink>fix-for-a-transaction-problem-with-change_column-on-postgresql-if-bad-arguments-passed-in</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug patch postgresql</tag>
      <title>fix for a transaction problem with change_column on postgresql if bad arguments passed in</title>
      <updated-at type="datetime">2008-08-22T02:16:43+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>azimux</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/861</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [6e71a3552921836590ef7b60334cbf92a2f49d1e]) PostgreSQL: fix transaction bug that can occur if you call change_column with invalid parameters

[#861 state:resolved]
http://github.com/rails/rails/commit/6e71a3552921836590ef7b60334cbf92a2f49d1e</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [6e71a3552921836590ef7b60334cbf92a2f49d1e]) PostgreSQL: fix transaction bug that can occur if you call change_column with invalid parameters&lt;/p&gt;

&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/861&quot; title=&quot;Ticket #861&quot;&gt;#861&lt;/a&gt; state:resolved]
&lt;a href=&quot;http://github.com/rails/rails/commit/6e71a3552921836590ef7b60334cbf92a2f49d1e&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-25T09:30:38+01:00</created-at>
      <creator-id type="integer">21652</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">861</number>
      <permalink>fix-for-a-transaction-problem-with-change_column-on-postgresql-if-bad-arguments-passed-in</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug patch postgresql</tag>
      <title>fix for a transaction problem with change_column on postgresql if bad arguments passed in</title>
      <updated-at type="datetime">2008-08-25T09:30:38+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>azimux</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/861</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>9576e27d75d2d9cc77f8aad99b58dd648061d864</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-08-19T21:19:46+01:00</created-at>
      <filename>0011-fixes-a-pretty-nasty-transaction-bug-that-can-occur.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">40227</id>
      <size type="integer">1282</size>
      <uploader-id type="integer">21652</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/40227/0011-fixes-a-pretty-nasty-transaction-bug-that-can-occur.patch</url>
    </attachment>
  </attachments>
</ticket>
