<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-17T07:38:07+00:00</created-at>
  <creator-id type="integer">33110</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1117</number>
  <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
  <priority type="integer">535</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>incomplete</state>
  <tag>2-3-stable activerecord bug bug rails3 serialization serialize serialized sqlite</tag>
  <title>Serialized fields + sqlite :binary columns = exception</title>
  <updated-at type="datetime">2011-03-26T01:32:21+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">13</version>
  <user-name>bingbing</user-name>
  <creator-name>Victor Costan</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I have a serialized field. In my migration, I use the type :binary for the column. This works fine on mysql, but raises the following on sqlite3:

NoMethodError: private method `gsub' called for #&lt;Facebooker::User:0x1fe8fac&gt;
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/sqlite_adapter.rb:58:in `binary_to_string'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/abstract/schema_definitions.rb:69:in `type_cast'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:157:in `field_changed?'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:131:in `write_attribute'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/attribute_methods.rb:211:in `facebooker_user='


Diagnostic attempt: 
The problem is that type_cast should not be called in the first place. The method's comment says that its arg should be a string, which won't be the case if the field is serialized.
This issue is masked if the column's type is string, because type_cast simply returns its arg. binary_to_string also returns its arg by default, but the sqlite adapter overrides that behavior.
I think the solution is having a different field_changed? for serialized fields, or 

Sadly, I don't have enough bandwidth to look further into this. I'll switch my field to a string in my deployment. I hope someone else does, though.


Thanks!
    Victor</original-body>
  <latest-body>I have a serialized field. In my migration, I use the type :binary for the column. This works fine on mysql, but raises the following on sqlite3:

NoMethodError: private method `gsub' called for #&lt;Facebooker::User:0x1fe8fac&gt;
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/sqlite_adapter.rb:58:in `binary_to_string'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/abstract/schema_definitions.rb:69:in `type_cast'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:157:in `field_changed?'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:131:in `write_attribute'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/attribute_methods.rb:211:in `facebooker_user='


Diagnostic attempt: 
The problem is that type_cast should not be called in the first place. The method's comment says that its arg should be a string, which won't be the case if the field is serialized.
This issue is masked if the column's type is string, because type_cast simply returns its arg. binary_to_string also returns its arg by default, but the sqlite adapter overrides that behavior.
I think the solution is having a different field_changed? for serialized fields, or 

Sadly, I don't have enough bandwidth to look further into this. I'll switch my field to a string in my deployment. I hope someone else does, though.


Thanks!
    Victor</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have a serialized field. In my migration, I use the type
:binary for the column. This works fine on mysql, but raises the
following on sqlite3:&lt;/p&gt;
&lt;p&gt;NoMethodError: private method &lt;code&gt;gsub' called for #
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/sqlite_adapter.rb:58:in&lt;/code&gt;binary_to_string'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/abstract/schema_definitions.rb:69:in
&lt;code&gt;type_cast'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:157:in&lt;/code&gt;field_changed?'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:131:in
&lt;code&gt;write_attribute'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/attribute_methods.rb:211:in&lt;/code&gt;facebooker_user='&lt;/p&gt;
&lt;p&gt;Diagnostic attempt: The problem is that type_cast should not be
called in the first place. The method's comment says that its arg
should be a string, which won't be the case if the field is
serialized. This issue is masked if the column's type is string,
because type_cast simply returns its arg. binary_to_string also
returns its arg by default, but the sqlite adapter overrides that
behavior. I think the solution is having a different field_changed?
for serialized fields, or&lt;/p&gt;
&lt;p&gt;Sadly, I don't have enough bandwidth to look further into this.
I'll switch my field to a string in my deployment. I hope someone
else does, though.&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Victor
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a serialized field. In my migration, I use the type :binary for the column. This works fine on mysql, but raises the following on sqlite3:
	NoMethodError: private method `gsub' called for #&lt;Facebooker::User:0x1fe8fac&gt;
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/sqlite_adapter.rb:58:in `binary_to_string'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/abstract/schema_definitions.rb:69:in `type_cast'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:157:in `field_changed?'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:131:in `write_attribute'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/attribute_methods.rb:211:in `facebooker_user='

Diagnostic attempt: 
The problem is that type_cast should not be called in the first place. The method's comment says that its arg should be a string, which won't be the case if the field is serialized.
This issue is masked if the column's type is string, because type_cast simply returns its arg. binary_to_string also returns its arg by default, but the sqlite adapter overrides that behavior.
I think the solution is having a different field_changed? for serialized fields, or 

Sadly, I don't have enough bandwidth to look further into this. I'll switch my field to a string in my deployment. I hope someone else does, though.


Thanks!
    Victor</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a serialized field. In my migration, I use the type
:binary for the column. This works fine on mysql, but raises the
following on sqlite3:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;NoMethodError: private method `gsub' called for #&amp;lt;Facebooker::User:0x1fe8fac&amp;gt;
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/sqlite_adapter.rb:58:in `binary_to_string'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/abstract/schema_definitions.rb:69:in `type_cast'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:157:in `field_changed?'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:131:in `write_attribute'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/attribute_methods.rb:211:in `facebooker_user='
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Diagnostic attempt: The problem is that type_cast should not be
called in the first place. The method's comment says that its arg
should be a string, which won't be the case if the field is
serialized. This issue is masked if the column's type is string,
because type_cast simply returns its arg. binary_to_string also
returns its arg by default, but the sqlite adapter overrides that
behavior. I think the solution is having a different field_changed?
for serialized fields, or&lt;/p&gt;
&lt;p&gt;Sadly, I don't have enough bandwidth to look further into this.
I'll switch my field to a string in my deployment. I hope someone
else does, though.&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Victor
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-26T06:43:57+01:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1.activerecord&quot; bug</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2008-09-26T06:49:45+01:00</updated-at>
      <user-id type="integer">33110</user-id>
      <version type="integer">1</version>
      <user-name>Victor Costan</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>More debugging:

I first tried to fix the error in dirty.rb, by replacing field_changed? with the following:
      def field_changed?(attr, old, value)
        if column = column_for_attribute(attr)
          if column.type == :integer &amp;&amp; column.null &amp;&amp; (old.nil? || old == 0)
            # For nullable integer columns, NULL gets stored in database for blank (i.e. '') values.
            # Hence we don't record it as a change if the value changes from nil to ''.
            # If an old value of 0 is set to '' we want this to get changed to nil as otherwise it'll
            # be typecast back to 0 (''.to_i =&gt; 0)
            value = nil if value.blank?
          else
            if self.class.serialized_attributes.has_key? attr
              # nothing to do for serialized attributes
              value = value
            else
              value = column.type_cast(value)
            end
          end
        end

        old != value
      end    

This fixed writing, but reading still breaks with the following:
	NoMethodError: private method `gsub' called for #&lt;Facebooker::User:0x2019544&gt;
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/sqlite_adapter.rb:58:in `binary_to_string'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/abstract/schema_definitions.rb:69:in `type_cast'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/attribute_methods.rb:269:in `read_attribute'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2587:in `attributes_with_quotes'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2585:in `each'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2585:in `attributes_with_quotes'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2507:in `create_without_callbacks'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/callbacks.rb:220:in `create_without_timestamps'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/timestamp.rb:29:in `create'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2483:in `create_or_update_without_callbacks'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/callbacks.rb:207:in `create_or_update'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2217:in `save_without_validation!'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/validations.rb:921:in `save_without_dirty!'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:83:in `save_without_transactions!'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:110:in `save!'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:79:in `transaction'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:98:in `transaction'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:110:in `save!'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:118:in `rollback_active_record_state!'
	/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:110:in `save!'




However, the following quick fix in the SQLite adapter (lib/active_record/connection_adapters/sqlite_adapter.rb:31) works:

        def binary_to_string(value)
          return value unless value.kind_of? String
          value.gsub(/%00|%25/n) do |b|
            case b
              when &quot;%00&quot; then &quot;\0&quot;
              when &quot;%25&quot; then &quot;%&quot;
            end
          end
        end

This is not a proper fix, it just makes the adapter mask the error, like the other adapters. But it works(tm).</body>
      <body-html>&lt;div&gt;&lt;p&gt;More debugging:&lt;/p&gt;
&lt;p&gt;I first tried to fix the error in dirty.rb, by replacing
field_changed? with the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  def field_changed?(attr, old, value)
    if column = column_for_attribute(attr)
      if column.type == :integer &amp;amp;&amp;amp; column.null &amp;amp;&amp;amp; (old.nil? || old == 0)
        # For nullable integer columns, NULL gets stored in database for blank (i.e. '') values.
        # Hence we don't record it as a change if the value changes from nil to ''.
        # If an old value of 0 is set to '' we want this to get changed to nil as otherwise it'll
        # be typecast back to 0 (''.to_i =&amp;gt; 0)
        value = nil if value.blank?
      else
        if self.class.serialized_attributes.has_key? attr
          # nothing to do for serialized attributes
          value = value
        else
          value = column.type_cast(value)
        end
      end
    end

    old != value
  end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This fixed writing, but reading still breaks with the
following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;NoMethodError: private method `gsub' called for #&amp;lt;Facebooker::User:0x2019544&amp;gt;
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/sqlite_adapter.rb:58:in `binary_to_string'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/abstract/schema_definitions.rb:69:in `type_cast'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/attribute_methods.rb:269:in `read_attribute'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2587:in `attributes_with_quotes'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2585:in `each'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2585:in `attributes_with_quotes'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2507:in `create_without_callbacks'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/callbacks.rb:220:in `create_without_timestamps'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/timestamp.rb:29:in `create'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2483:in `create_or_update_without_callbacks'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/callbacks.rb:207:in `create_or_update'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/base.rb:2217:in `save_without_validation!'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/validations.rb:921:in `save_without_dirty!'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/dirty.rb:83:in `save_without_transactions!'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:110:in `save!'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/connection_adapters/abstract/database_statements.rb:66:in `transaction'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:79:in `transaction'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:98:in `transaction'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:110:in `save!'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:118:in `rollback_active_record_state!'
/Library/Ruby/Gems/1.8/gems/activerecord-2.1.1/lib/active_record/transactions.rb:110:in `save!'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, the following quick fix in the SQLite adapter
(lib/active_record/connection_adapters/sqlite_adapter.rb:31)
works:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    def binary_to_string(value)
      return value unless value.kind_of? String
      value.gsub(/%00|%25/n) do |b|
        case b
          when &quot;%00&quot; then &quot;\0&quot;
          when &quot;%25&quot; then &quot;%&quot;
        end
      end
    end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is not a proper fix, it just makes the adapter mask the
error, like the other adapters. But it works(tm).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-26T08:13:54+01:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;2.1.activerecord&quot; bug</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2008-09-26T08:13:59+01:00</updated-at>
      <user-id type="integer">33110</user-id>
      <version type="integer">2</version>
      <user-name>Victor Costan</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Maybe you could submit failing tests.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Maybe you could submit failing tests.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-18T06:55:57+00:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;2.1.activerecord\&quot; bug&quot;
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1.activerecord activerecord bug bug serialization serialize serialized sqlite</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2009-01-18T06:56:00+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Or even a concise example of how to duplicate the bug would be good.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Or even a concise example of how to duplicate the bug would be
good.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-10T11:25:13+01:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1.activerecord activerecord bug bug serialization serialize serialized sqlite</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2010-04-10T11:25:15+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">4</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>With the help of Boston.rb (especially Dan Pickett), I put together a failing test. The patch applies cleanly to both master and 2.3-stable.

The test passes for MySQL and PostgreSQL. On SQLite3, the test crashes ruby-1.8.7-p249 on Rails 3, and on 2-3-stable it raises the exception mentioned in the bug report.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;With the help of Boston.rb (especially Dan Pickett), I put
together a failing test. The patch applies cleanly to both master
and 2.3-stable.&lt;/p&gt;
&lt;p&gt;The test passes for MySQL and PostgreSQL. On SQLite3, the test
crashes ruby-1.8.7-p249 on Rails 3, and on 2-3-stable it raises the
exception mentioned in the bug report.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T05:51:42+01:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1.activerecord activerecord bug bug serialization serialize serialized sqlite
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1.activerecord activerecord bug bug rails3 serialization serialize serialized sqlite</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2010-04-21T05:51:44+01:00</updated-at>
      <user-id type="integer">33110</user-id>
      <version type="integer">5</version>
      <user-name>Victor Costan</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:35+01:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1.activerecord activerecord bug bug rails3 serialization serialize serialized sqlite</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2010-05-04T18:48:35+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-16T23:46:30+01:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1.activerecord activerecord bug bug rails3 serialization serialize serialized sqlite
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">535</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2-3-stable activerecord bug bug rails3 serialization serialize serialized sqlite</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2010-10-16T23:46:33+01:00</updated-at>
      <user-id type="integer">81551</user-id>
      <version type="integer">7</version>
      <user-name>Andrea Campi</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The test passes for MySQL and PostgreSQL. On SQLite3, the test &lt;a href=&quot;http://www.weddinginthebox.com/blog/white-wedding-dresses.html&quot;&gt;white informal wedding dresses&lt;/a&gt; ruby-1.8.7-p249 on Rails 3, and on 2-3-stable it raises the exception mentioned in the bug report.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The test passes for MySQL and PostgreSQL. On SQLite3, the test
&lt;a href=
&quot;http://www.weddinginthebox.com/blog/white-wedding-dresses.html&quot;&gt;white
informal wedding dresses&lt;/a&gt; ruby-1.8.7-p249 on Rails 3, and on
2-3-stable it raises the exception mentioned in the bug report.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T06:30:25+01:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">535</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2-3-stable activerecord bug bug rails3 serialization serialize serialized sqlite</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2010-10-19T17:52:54+01:00</updated-at>
      <user-id type="integer">120610</user-id>
      <version type="integer">8</version>
      <user-name>koukou</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-08T01:32:13+00:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">535</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2-3-stable activerecord bug bug rails3 serialization serialize serialized sqlite</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2010-11-08T23:12:14+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">9</version>
      <user-name>jim123456</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-28T02:29:56+00:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">535</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2-3-stable activerecord bug bug rails3 serialization serialize serialized sqlite</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2010-12-28T03:36:07+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">10</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-14T03:24:48+00:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">535</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2-3-stable activerecord bug bug rails3 serialization serialize serialized sqlite</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2011-02-14T05:42:02+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">11</version>
      <user-name>xixi</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-17T07:29:17+00:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">535</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2-3-stable activerecord bug bug rails3 serialization serialize serialized sqlite</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2011-02-17T07:38:07+00:00</updated-at>
      <user-id type="integer">137451</user-id>
      <version type="integer">12</version>
      <user-name>fghgghjg</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;gucci watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;gucci
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-26T01:24:26+00:00</created-at>
      <creator-id type="integer">33110</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1117</number>
      <permalink>serialized-fields-sqlite-binary-columns-exception</permalink>
      <priority type="integer">535</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2-3-stable activerecord bug bug rails3 serialization serialize serialized sqlite</tag>
      <title>Serialized fields + sqlite :binary columns = exception</title>
      <updated-at type="datetime">2011-03-26T01:32:21+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">13</version>
      <user-name>bingbing</user-name>
      <creator-name>Victor Costan</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1117</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>e399acb6d78307aa88cc62096d7b84ef607b2513</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-21T05:51:42+01:00</created-at>
      <filename>binary_serialization_test_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">490793</id>
      <size type="integer">1288</size>
      <uploader-id type="integer">33110</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/490793/binary_serialization_test_patch.diff</url>
    </attachment>
  </attachments>
</ticket>
