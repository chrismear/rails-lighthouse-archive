From ef9bb928e75ed09854368588aae5b1a00fe873fb Mon Sep 17 00:00:00 2001
From: Emmanuel Oga <EmmanuelOga@gmail.com>
Date: Fri, 28 Aug 2009 13:15:38 +0000
Subject: [PATCH] make ActiveRecord::Base.subclasses a public method

---
 activerecord/lib/active_record/base.rb |    6 +++++-
 activerecord/test/cases/base_test.rb   |    4 ++++
 2 files changed, 9 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/base.rb b/activerecord/lib/active_record/base.rb
index c5be561..13b2822 100755
--- a/activerecord/lib/active_record/base.rb
+++ b/activerecord/lib/active_record/base.rb
@@ -2151,11 +2151,15 @@ module ActiveRecord #:nodoc:
           with_scope(method_scoping, :overwrite, &block)
         end
 
-        def subclasses #:nodoc:
+        # ActiveRecord::Base utilizes the inherited hook to know about new subclasses.
+        # You can access the list of currently loaded ActiveRecord::Base subclasses using this accessor.
+        def subclasses
           @@subclasses[self] ||= []
           @@subclasses[self] + extra = @@subclasses[self].inject([]) {|list, subclass| list + subclass.subclasses }
         end
 
+        public :subclasses
+
         # Sets the default options for the model. The format of the
         # <tt>options</tt> argument is the same as in find.
         #
diff --git a/activerecord/test/cases/base_test.rb b/activerecord/test/cases/base_test.rb
index 8421a8f..04dfa1e 100755
--- a/activerecord/test/cases/base_test.rb
+++ b/activerecord/test/cases/base_test.rb
@@ -1970,6 +1970,10 @@ class BasicsTest < ActiveRecord::TestCase
     assert !SubStiPost.descends_from_active_record?
   end
 
+  def test_base_subclasses_is_public_method
+    assert ActiveRecord::Base.public_methods.include?("subclasses")
+  end
+
   def test_find_on_abstract_base_class_doesnt_use_type_condition
     old_class = LooseDescendant
     Object.send :remove_const, :LooseDescendant
-- 
1.6.4.1

