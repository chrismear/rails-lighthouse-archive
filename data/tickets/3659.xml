<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">8406</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-01-05T15:19:38+00:00</created-at>
  <creator-id type="integer">2077</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3659</number>
  <permalink>accepts_nested_attributes_for-causes-duplicate-entries-in-join-model-table</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>accepts_nested_attributes_for activerecord fixed</tag>
  <title>accepts_nested_attributes_for  causes duplicate entries in join model table</title>
  <updated-at type="datetime">2010-07-07T12:33:58+01:00</updated-at>
  <user-id type="integer">16715</user-id>
  <version type="integer">8</version>
  <user-name>Satish Chauhan</user-name>
  <creator-name>Hates_</creator-name>
  <assigned-user-name>Eloy Duran</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3659</url>
  <priority-name>Low</priority-name>
  <original-body>The code below works fine in 2.3.4. When creating a new instance with accepts_nested_attributes_for, I get duplicate entries in the join table (I removed the index for testing).

class Publisher &lt; ActiveRecord::Base

  has_many :publisher_users
  has_many :users, :through =&gt; :publisher_users

  accepts_nested_attributes_for :users

end

class PublisherUser &lt; ActiveRecord::Base
  belongs_to :publisher
  belongs_to :user
end

class User &lt; ActiveRecord::Base

  has_many :publisher_users
  has_one  :publisher, :through =&gt; :publisher_users

end

*In console:*

Publisher.create(:name =&gt; &quot;name&quot;, :agrees_terms =&gt; &quot;1&quot;, :users_attributes =&gt; {&quot;0&quot; =&gt; {:fullname =&gt; &quot;full name&quot;, :email =&gt; &quot;test@test.com&quot;, :password =&gt; &quot;password&quot;}})

*SQL Output*

Publisher Create (0.2ms)   INSERT INTO `publishers` &#8230;.
User Create (0.2ms)   INSERT INTO `users`&#8230;.

PublisherUser Create (0.2ms)   INSERT INTO `publisher_users` (`created_at`, `updated_at`, `user_id`, `publisher_id`) VALUES('2010-01-05 15:07:07', '2010-01-05 15:07:07', 156, 5)
PublisherUser Create (0.1ms)   INSERT INTO `publisher_users` (`created_at`, `updated_at`, `user_id`, `publisher_id`) VALUES('2010-01-05 15:07:07', '2010-01-05 15:07:07', 156, 5)</original-body>
  <latest-body>The code below works fine in 2.3.4. When creating a new instance with accepts_nested_attributes_for, I get duplicate entries in the join table (I removed the index for testing).

class Publisher &lt; ActiveRecord::Base

  has_many :publisher_users
  has_many :users, :through =&gt; :publisher_users

  accepts_nested_attributes_for :users

end

class PublisherUser &lt; ActiveRecord::Base
  belongs_to :publisher
  belongs_to :user
end

class User &lt; ActiveRecord::Base

  has_many :publisher_users
  has_one  :publisher, :through =&gt; :publisher_users

end

*In console:*

Publisher.create(:name =&gt; &quot;name&quot;, :agrees_terms =&gt; &quot;1&quot;, :users_attributes =&gt; {&quot;0&quot; =&gt; {:fullname =&gt; &quot;full name&quot;, :email =&gt; &quot;test@test.com&quot;, :password =&gt; &quot;password&quot;}})

*SQL Output*

Publisher Create (0.2ms)   INSERT INTO `publishers` &#8230;.
User Create (0.2ms)   INSERT INTO `users`&#8230;.

PublisherUser Create (0.2ms)   INSERT INTO `publisher_users` (`created_at`, `updated_at`, `user_id`, `publisher_id`) VALUES('2010-01-05 15:07:07', '2010-01-05 15:07:07', 156, 5)
PublisherUser Create (0.1ms)   INSERT INTO `publisher_users` (`created_at`, `updated_at`, `user_id`, `publisher_id`) VALUES('2010-01-05 15:07:07', '2010-01-05 15:07:07', 156, 5)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The code below works fine in 2.3.4. When creating a new instance
with accepts_nested_attributes_for, I get duplicate entries in the
join table (I removed the index for testing).&lt;/p&gt;
&lt;p&gt;class Publisher &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;has_many :publisher_users has_many :users, :through =&amp;gt;
:publisher_users&lt;/p&gt;
&lt;p&gt;accepts_nested_attributes_for :users&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class PublisherUser &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :publisher belongs_to :user end&lt;/p&gt;
&lt;p&gt;class User &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;has_many :publisher_users has_one :publisher, :through =&amp;gt;
:publisher_users&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;*In console:*&lt;/p&gt;
&lt;p&gt;Publisher.create(:name =&amp;gt; &quot;name&quot;, :agrees_terms =&amp;gt; &quot;1&quot;,
:users_attributes =&amp;gt; {&quot;0&quot; =&amp;gt; {:fullname =&amp;gt; &quot;full name&quot;,
:email =&amp;gt; &quot;&lt;a href=&quot;mailto:test@test.com&quot;&gt;test@test.com&lt;/a&gt;&quot;,
:password =&amp;gt; &quot;password&quot;}})&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SQL Output&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Publisher Create (0.2ms) INSERT INTO &lt;code&gt;publishers&lt;/code&gt;
&amp;#8230;.&lt;br&gt;
User Create (0.2ms) INSERT INTO &lt;code&gt;users&lt;/code&gt;&amp;#8230;.&lt;/p&gt;
&lt;p&gt;PublisherUser Create (0.2ms) INSERT INTO
&lt;code&gt;publisher_users&lt;/code&gt; (&lt;code&gt;created_at&lt;/code&gt;,
&lt;code&gt;updated_at&lt;/code&gt;, &lt;code&gt;user_id&lt;/code&gt;,
&lt;code&gt;publisher_id&lt;/code&gt;) VALUES('2010-01-05 15:07:07',
'2010-01-05 15:07:07', 156, 5)&lt;br&gt;
PublisherUser Create (0.1ms) INSERT INTO
&lt;code&gt;publisher_users&lt;/code&gt; (&lt;code&gt;created_at&lt;/code&gt;,
&lt;code&gt;updated_at&lt;/code&gt;, &lt;code&gt;user_id&lt;/code&gt;,
&lt;code&gt;publisher_id&lt;/code&gt;) VALUES('2010-01-05 15:07:07',
'2010-01-05 15:07:07', 156, 5)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The code below works fine in 2.3.4. When creating a new instance with accepts_nested_attributes_for, I get duplicate entries in the join table (I removed the index for testing).

class Publisher &lt; ActiveRecord::Base

  has_many :publisher_users
  has_many :users, :through =&gt; :publisher_users

  accepts_nested_attributes_for :users

end

class PublisherUser &lt; ActiveRecord::Base
  belongs_to :publisher
  belongs_to :user
end

class User &lt; ActiveRecord::Base

  has_many :publisher_users
  has_one  :publisher, :through =&gt; :publisher_users

end

*In console:*

Publisher.create(:name =&gt; &quot;name&quot;, :agrees_terms =&gt; &quot;1&quot;, :users_attributes =&gt; {&quot;0&quot; =&gt; {:fullname =&gt; &quot;full name&quot;, :email =&gt; &quot;test@test.com&quot;, :password =&gt; &quot;password&quot;}})

*SQL Output*

Publisher Create (0.2ms)   INSERT INTO `publishers` &#8230;.
User Create (0.2ms)   INSERT INTO `users`&#8230;.

PublisherUser Create (0.2ms)   INSERT INTO `publisher_users` (`created_at`, `updated_at`, `user_id`, `publisher_id`) VALUES('2010-01-05 15:07:07', '2010-01-05 15:07:07', 156, 5)
PublisherUser Create (0.1ms)   INSERT INTO `publisher_users` (`created_at`, `updated_at`, `user_id`, `publisher_id`) VALUES('2010-01-05 15:07:07', '2010-01-05 15:07:07', 156, 5)</body>
      <body-html>&lt;div&gt;&lt;p&gt;The code below works fine in 2.3.4. When creating a new instance
with accepts_nested_attributes_for, I get duplicate entries in the
join table (I removed the index for testing).&lt;/p&gt;
&lt;p&gt;class Publisher &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;has_many :publisher_users has_many :users, :through =&amp;gt;
:publisher_users&lt;/p&gt;
&lt;p&gt;accepts_nested_attributes_for :users&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class PublisherUser &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :publisher belongs_to :user end&lt;/p&gt;
&lt;p&gt;class User &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;has_many :publisher_users has_one :publisher, :through =&amp;gt;
:publisher_users&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;*In console:*&lt;/p&gt;
&lt;p&gt;Publisher.create(:name =&amp;gt; &quot;name&quot;, :agrees_terms =&amp;gt; &quot;1&quot;,
:users_attributes =&amp;gt; {&quot;0&quot; =&amp;gt; {:fullname =&amp;gt; &quot;full name&quot;,
:email =&amp;gt; &quot;&lt;a href=&quot;mailto:test@test.com&quot;&gt;test@test.com&lt;/a&gt;&quot;,
:password =&amp;gt; &quot;password&quot;}})&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SQL Output&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Publisher Create (0.2ms) INSERT INTO &lt;code&gt;publishers&lt;/code&gt;
&amp;#8230;.&lt;br&gt;
User Create (0.2ms) INSERT INTO &lt;code&gt;users&lt;/code&gt;&amp;#8230;.&lt;/p&gt;
&lt;p&gt;PublisherUser Create (0.2ms) INSERT INTO
&lt;code&gt;publisher_users&lt;/code&gt; (&lt;code&gt;created_at&lt;/code&gt;,
&lt;code&gt;updated_at&lt;/code&gt;, &lt;code&gt;user_id&lt;/code&gt;,
&lt;code&gt;publisher_id&lt;/code&gt;) VALUES('2010-01-05 15:07:07',
'2010-01-05 15:07:07', 156, 5)&lt;br&gt;
PublisherUser Create (0.1ms) INSERT INTO
&lt;code&gt;publisher_users&lt;/code&gt; (&lt;code&gt;created_at&lt;/code&gt;,
&lt;code&gt;updated_at&lt;/code&gt;, &lt;code&gt;user_id&lt;/code&gt;,
&lt;code&gt;publisher_id&lt;/code&gt;) VALUES('2010-01-05 15:07:07',
'2010-01-05 15:07:07', 156, 5)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-05T15:19:38+00:00</created-at>
      <creator-id type="integer">2077</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3659</number>
      <permalink>accepts_nested_attributes_for-causes-duplicate-entries-in-join-model-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>accepts_nested_attributes_for activerecord</tag>
      <title>accepts_nested_attributes_for  causes duplicate entries in join model table</title>
      <updated-at type="datetime">2010-01-05T15:19:42+00:00</updated-at>
      <user-id type="integer">2077</user-id>
      <version type="integer">1</version>
      <user-name>Hates_</user-name>
      <creator-name>Hates_</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3659</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Tested with 2-3-stable branch and this seems to have been fixed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Tested with 2-3-stable branch and this seems to have been
fixed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-08T11:46:00+00:00</created-at>
      <creator-id type="integer">2077</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: accepts_nested_attributes_for activerecord
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3659</number>
      <permalink>accepts_nested_attributes_for-causes-duplicate-entries-in-join-model-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>accepts_nested_attributes_for activerecord fixed</tag>
      <title>accepts_nested_attributes_for  causes duplicate entries in join model table</title>
      <updated-at type="datetime">2010-01-08T11:46:02+00:00</updated-at>
      <user-id type="integer">2077</user-id>
      <version type="integer">2</version>
      <user-name>Hates_</user-name>
      <creator-name>Hates_</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3659</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I was just gonna ask that :) Thanks for the update.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was just gonna ask that :) Thanks for the update.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-11T10:18:05+00:00</created-at>
      <creator-id type="integer">2077</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3659</number>
      <permalink>accepts_nested_attributes_for-causes-duplicate-entries-in-join-model-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>accepts_nested_attributes_for activerecord fixed</tag>
      <title>accepts_nested_attributes_for  causes duplicate entries in join model table</title>
      <updated-at type="datetime">2010-01-11T10:18:09+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">3</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Hates_</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3659</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello Richard,

I have the same problem than you! I am with Rails 2.3.5, how have you solved this problem? Rails 2.3.5 isn't a 2-3-stable branch? (I am begginer)

Thank you!

Alessio</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello Richard,&lt;/p&gt;
&lt;p&gt;I have the same problem than you! I am with Rails 2.3.5, how
have you solved this problem? Rails 2.3.5 isn't a 2-3-stable
branch? (I am begginer)&lt;/p&gt;
&lt;p&gt;Thank you!&lt;/p&gt;
&lt;p&gt;Alessio&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-06T15:53:46+01:00</created-at>
      <creator-id type="integer">2077</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3659</number>
      <permalink>accepts_nested_attributes_for-causes-duplicate-entries-in-join-model-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>accepts_nested_attributes_for activerecord fixed</tag>
      <title>accepts_nested_attributes_for  causes duplicate entries in join model table</title>
      <updated-at type="datetime">2010-04-06T15:53:49+01:00</updated-at>
      <user-id type="integer">93691</user-id>
      <version type="integer">4</version>
      <user-name>Alessio</user-name>
      <creator-name>Hates_</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3659</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Eloy,
I have the same problem (Rails 2.3.5)
Can you tell me how did you resolved it?

Thanks,
Yossi</body>
      <body-html>&lt;div&gt;&lt;p&gt;Eloy,&lt;br&gt;
I have the same problem (Rails 2.3.5)&lt;br&gt;
Can you tell me how did you resolved it?&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Yossi&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-07T23:13:41+01:00</created-at>
      <creator-id type="integer">2077</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3659</number>
      <permalink>accepts_nested_attributes_for-causes-duplicate-entries-in-join-model-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>accepts_nested_attributes_for activerecord fixed</tag>
      <title>accepts_nested_attributes_for  causes duplicate entries in join model table</title>
      <updated-at type="datetime">2010-04-07T23:13:45+01:00</updated-at>
      <user-id type="integer">93983</user-id>
      <version type="integer">5</version>
      <user-name>Yossi</user-name>
      <creator-name>Hates_</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3659</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails 2.3.5 was released at the end of november last year: http://weblog.rubyonrails.org/2009/11/30/ruby-on-rails-2-3-5-released. So seeing as Richard confirmed it was fixed on 2-3-stable in january this year, it means the fix is not in a release yet.

Until 2.3.6 is released, I'd advice you to do a checkout of http://github.com/rails/rails/tree/2-3-stable.

HTH</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails 2.3.5 was released at the end of november last year:
&lt;a href=
&quot;http://weblog.rubyonrails.org/2009/11/30/ruby-on-rails-2-3-5-released&quot;&gt;
http://weblog.rubyonrails.org/2009/11/30/ruby-on-rails-2-3-5-released&lt;/a&gt;.
So seeing as Richard confirmed it was fixed on 2-3-stable in
january this year, it means the fix is not in a release yet.&lt;/p&gt;
&lt;p&gt;Until 2.3.6 is released, I'd advice you to do a checkout of
&lt;a href=
&quot;http://github.com/rails/rails/tree/2-3-stable&quot;&gt;http://github.com/rails/rails/tree/2-3-stable&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;HTH&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-08T09:42:14+01:00</created-at>
      <creator-id type="integer">2077</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3659</number>
      <permalink>accepts_nested_attributes_for-causes-duplicate-entries-in-join-model-table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>accepts_nested_attributes_for activerecord fixed</tag>
      <title>accepts_nested_attributes_for  causes duplicate entries in join model table</title>
      <updated-at type="datetime">2010-04-08T09:42:17+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">6</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Hates_</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3659</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Which commit was this, or which public release did this get rolled in? As I saw this in 2.3.5, upgraded to 2.3.8, and I'm still seeing it. Here is my model:

@@@ ruby
class User &lt; ActiveRecord::Base
  has_many :conferences, :through =&gt; :conference_attendees, :order =&gt; 'end_date DESC'
  has_many :conference_attendees
  accepts_nested_attributes_for, :conferences, :allow_destroy =&gt; true
end

class Conference &lt; ActiveRecord::Base
  has_many :users, :through =&gt; :conference_attendees
  has_many :conference_attendees, :dependent =&gt; :destroy
  accepts_nested_attributes_for :conference_attendees, :allow_destroy =&gt; true
end

class ConferenceAttendee &lt; ActiveRecord::Base
  belongs_to :conference
  belongs_to :user
end

@user = User.first
# @user.id == 2
params = {&quot;user&quot;=&gt;{&quot;conferences_attributes&quot;=&gt;{&quot;0&quot;=&gt;{&quot;name&quot;=&gt;&quot;Conf Name&quot;, &quot;conference_attendees_attributes&quot;=&gt;{&quot;0&quot;=&gt;{&quot;role&quot;=&gt;&quot;Attendee&quot;, &quot;user_id&quot;=&gt;&quot;1984&quot;}}}}}}
@user.update_attributes params['user']
@@@

When I run this in Rails 2.3.8, I see the following in my logs:
@@@
  Conference Create (0.2ms)   INSERT INTO `tech_conferences` (`name`, `created_at`, `updated_at`) VALUES('Conf Name', '2010-06-26 03:01:07', '2010-06-26 03:01:07')
  ConferenceAttendee Create (0.2ms)   INSERT INTO `tech_conference_attendees` (`created_at`, `updated_at`, `role`, `user_id`, `conference_id`) VALUES('2010-06-26 03:01:07', '2010-06-26 03:01:07', 'Attendee', 1984, 1124)
  ConferenceAttendee Create (0.7ms)   INSERT INTO `tech_conference_attendees` (`created_at`, `updated_at`, `role`, `user_id`, `conference_id`) VALUES('2010-06-26 03:01:07', '2010-06-26 03:01:07', NULL, 2, 1124)
@@@

This varies slightly from the original poster. In my case, the second conference has a NULL value for the 'role' field in ConferenceAttendee, and also has the same user id as the @user although that ID was not specified in the params for ConferenceAttendee.

Also of note: I tried changing my `accepts_nested_attributes_for :conference_attendees` and added a :reject_if that rejects everything, and ran this again. The first ConferenceAttendee is not created, but the second one is.

My quick-and-dirty workaround for this right now is an after_save that deletes the record if it doesn't have a 'role' attribute, I'm just hoping this kluge doesn't get me fired. :) Please, if you've got a better temporary solution, I'm all ears.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Which commit was this, or which public release did this get
rolled in? As I saw this in 2.3.5, upgraded to 2.3.8, and I'm still
seeing it. Here is my model:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
  has_many :conferences, :through =&amp;gt; :conference_attendees, :order =&amp;gt; 'end_date DESC'
  has_many :conference_attendees
  accepts_nested_attributes_for, :conferences, :allow_destroy =&amp;gt; true
end

class Conference &amp;lt; ActiveRecord::Base
  has_many :users, :through =&amp;gt; :conference_attendees
  has_many :conference_attendees, :dependent =&amp;gt; :destroy
  accepts_nested_attributes_for :conference_attendees, :allow_destroy =&amp;gt; true
end

class ConferenceAttendee &amp;lt; ActiveRecord::Base
  belongs_to :conference
  belongs_to :user
end

@user = User.first
# @user.id == 2
params = {&quot;user&quot;=&amp;gt;{&quot;conferences_attributes&quot;=&amp;gt;{&quot;0&quot;=&amp;gt;{&quot;name&quot;=&amp;gt;&quot;Conf Name&quot;, &quot;conference_attendees_attributes&quot;=&amp;gt;{&quot;0&quot;=&amp;gt;{&quot;role&quot;=&amp;gt;&quot;Attendee&quot;, &quot;user_id&quot;=&amp;gt;&quot;1984&quot;}}}}}}
@user.update_attributes params['user']&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I run this in Rails 2.3.8, I see the following in my
logs:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  Conference Create (0.2ms)   INSERT INTO &lt;/code&gt;tech_conferences (&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;created_at&lt;/code&gt;, &lt;code&gt;updated_at&lt;/code&gt;) VALUES('Conf Name', '2010-06-26 03:01:07', '2010-06-26 03:01:07')
  ConferenceAttendee Create (0.2ms)   INSERT INTO &lt;code&gt;tech_conference_attendees&lt;/code&gt; (&lt;code&gt;created_at&lt;/code&gt;, &lt;code&gt;updated_at&lt;/code&gt;, &lt;code&gt;role&lt;/code&gt;, &lt;code&gt;user_id&lt;/code&gt;, &lt;code&gt;conference_id&lt;/code&gt;) VALUES('2010-06-26 03:01:07', '2010-06-26 03:01:07', 'Attendee', 1984, 1124)
  ConferenceAttendee Create (0.7ms)   INSERT INTO &lt;code&gt;tech_conference_attendees&lt;/code&gt; (&lt;code&gt;created_at&lt;/code&gt;, &lt;code&gt;updated_at&lt;/code&gt;, &lt;code&gt;role&lt;/code&gt;, &lt;code&gt;user_id&lt;/code&gt;, &lt;code&gt;conference_id&lt;/code&gt;) VALUES('2010-06-26 03:01:07', '2010-06-26 03:01:07', NULL, 2, 1124)
&lt;/pre&gt;
&lt;p&gt;This varies slightly from the original poster. In my case, the
second conference has a NULL value for the 'role' field in
ConferenceAttendee, and also has the same user id as the @user
although that ID was not specified in the params for
ConferenceAttendee.&lt;/p&gt;
&lt;p&gt;Also of note: I tried changing my
&lt;code&gt;accepts_nested_attributes_for :conference_attendees&lt;/code&gt;
and added a :reject_if that rejects everything, and ran this again.
The first ConferenceAttendee is not created, but the second one
is.&lt;/p&gt;
&lt;p&gt;My quick-and-dirty workaround for this right now is an
after_save that deletes the record if it doesn't have a 'role'
attribute, I'm just hoping this kluge doesn't get me fired. :)
Please, if you've got a better temporary solution, I'm all
ears.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-26T17:09:39+01:00</created-at>
      <creator-id type="integer">2077</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3659</number>
      <permalink>accepts_nested_attributes_for-causes-duplicate-entries-in-join-model-table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>accepts_nested_attributes_for activerecord fixed</tag>
      <title>accepts_nested_attributes_for  causes duplicate entries in join model table</title>
      <updated-at type="datetime">2010-06-26T17:09:45+01:00</updated-at>
      <user-id type="integer">27279</user-id>
      <version type="integer">7</version>
      <user-name>Liam Morley (carpeliam)</user-name>
      <creator-name>Hates_</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3659</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have the same problem (Rails 2.3.5)

Its resolved in 2.3.8.

any idea about the patch that resolved this problem?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have the same problem (Rails 2.3.5)&lt;/p&gt;
&lt;p&gt;Its resolved in 2.3.8.&lt;/p&gt;
&lt;p&gt;any idea about the patch that resolved this problem?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-07T12:33:54+01:00</created-at>
      <creator-id type="integer">2077</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3659</number>
      <permalink>accepts_nested_attributes_for-causes-duplicate-entries-in-join-model-table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>accepts_nested_attributes_for activerecord fixed</tag>
      <title>accepts_nested_attributes_for  causes duplicate entries in join model table</title>
      <updated-at type="datetime">2010-07-07T12:33:58+01:00</updated-at>
      <user-id type="integer">16715</user-id>
      <version type="integer">8</version>
      <user-name>Satish Chauhan</user-name>
      <creator-name>Hates_</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3659</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
