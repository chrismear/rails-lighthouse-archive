<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-09-01T22:07:48+01:00</created-at>
  <creator-id type="integer">13453</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5524</number>
  <permalink>not-unique-tablealiasambiguous-column-name-with-chained-named_scopes</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>239 bug joins named_scope</tag>
  <title>Not unique table/alias/ambiguous column name with chained named_scopes </title>
  <updated-at type="datetime">2011-02-20T08:52:40+00:00</updated-at>
  <user-id type="integer">137872</user-id>
  <version type="integer">4</version>
  <user-name>Dan</user-name>
  <creator-name>Stephen Heuer</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5524</url>
  <priority-name nil="true"></priority-name>
  <original-body>Something that worked in rails 2.3.8 and below that does not work in 2.3.9.

@@@
Loading development environment (Rails 2.3.8)
ree-1.8.7-2010.02 &gt; Top.first.bottoms_in_version.in_location(Building.last)
 =&gt; [#&lt;Bottom id: 1, middle_id: 1, version: 1, location_type: &quot;Building&quot;, location_id: &quot;2&quot;, created_at: &quot;2010-09-01 20:45:08&quot;, updated_at: &quot;2010-09-01 20:45:08&quot;&gt;, #&lt;Bottom id: 2, middle_id: 1, version: 1, location_type: &quot;Room&quot;, location_id: &quot;4&quot;, created_at: &quot;2010-09-01 20:45:08&quot;, updated_at: &quot;2010-09-01 20:45:08&quot;&gt;] 
@@@

@@@
Loading development environment (Rails 2.3.9)
ree-1.8.7-2010.02 &gt; Top.first.bottoms_in_version.in_location(Building.last)
ActiveRecord::StatementInvalid: SQLite3::SQLException: ambiguous column name: middles.id: SELECT &quot;bottoms&quot;.&quot;id&quot; AS t0_r0, &quot;bottoms&quot;.&quot;middle_id&quot; AS t0_r1, &quot;bottoms&quot;.&quot;version&quot; AS t0_r2, &quot;bottoms&quot;.&quot;location_type&quot; AS t0_r3, &quot;bottoms&quot;.&quot;location_id&quot; AS t0_r4, &quot;bottoms&quot;.&quot;created_at&quot; AS t0_r5, &quot;bottoms&quot;.&quot;updated_at&quot; AS t0_r6, &quot;middles&quot;.&quot;id&quot; AS t1_r0, &quot;middles&quot;.&quot;top_id&quot; AS t1_r1, &quot;middles&quot;.&quot;version&quot; AS t1_r2, &quot;middles&quot;.&quot;created_at&quot; AS t1_r3, &quot;middles&quot;.&quot;updated_at&quot; AS t1_r4, &quot;tops&quot;.&quot;id&quot; AS t2_r0, &quot;tops&quot;.&quot;name&quot; AS t2_r1, &quot;tops&quot;.&quot;version&quot; AS t2_r2, &quot;tops&quot;.&quot;created_at&quot; AS t2_r3, &quot;tops&quot;.&quot;updated_at&quot; AS t2_r4 FROM &quot;bottoms&quot;  LEFT OUTER JOIN &quot;middles&quot; ON &quot;middles&quot;.id = &quot;bottoms&quot;.middle_id  LEFT OUTER JOIN &quot;tops&quot; ON &quot;tops&quot;.id = &quot;middles&quot;.top_id  INNER JOIN &quot;middles&quot; ON &quot;bottoms&quot;.middle_id = &quot;middles&quot;.id    WHERE (((((`location_type` = 'Room' AND `location_id` IN (4,5,6)) OR (`location_type` = 'Building' AND `location_id` IN (2))) AND `tops`.version == `bottoms`.version) AND (`bottoms`.`version` = 1)) AND ((&quot;middles&quot;.top_id = 1))) 
@@@

Throws errors in sqlite3 and mysql:
Mysql::Error: Not unique table/alias
SQLite3::SQLException: ambiguous column name

I have attached a rails app that demonstrates the problem.

@@@
rake db:migrate
rake db:seed
script/console
&gt; Top.first.bottoms_in_version.in_location(Building.last)
@@@</original-body>
  <latest-body>Something that worked in rails 2.3.8 and below that does not work in 2.3.9.

@@@
Loading development environment (Rails 2.3.8)
ree-1.8.7-2010.02 &gt; Top.first.bottoms_in_version.in_location(Building.last)
 =&gt; [#&lt;Bottom id: 1, middle_id: 1, version: 1, location_type: &quot;Building&quot;, location_id: &quot;2&quot;, created_at: &quot;2010-09-01 20:45:08&quot;, updated_at: &quot;2010-09-01 20:45:08&quot;&gt;, #&lt;Bottom id: 2, middle_id: 1, version: 1, location_type: &quot;Room&quot;, location_id: &quot;4&quot;, created_at: &quot;2010-09-01 20:45:08&quot;, updated_at: &quot;2010-09-01 20:45:08&quot;&gt;] 
@@@

@@@
Loading development environment (Rails 2.3.9)
ree-1.8.7-2010.02 &gt; Top.first.bottoms_in_version.in_location(Building.last)
ActiveRecord::StatementInvalid: SQLite3::SQLException: ambiguous column name: middles.id: SELECT &quot;bottoms&quot;.&quot;id&quot; AS t0_r0, &quot;bottoms&quot;.&quot;middle_id&quot; AS t0_r1, &quot;bottoms&quot;.&quot;version&quot; AS t0_r2, &quot;bottoms&quot;.&quot;location_type&quot; AS t0_r3, &quot;bottoms&quot;.&quot;location_id&quot; AS t0_r4, &quot;bottoms&quot;.&quot;created_at&quot; AS t0_r5, &quot;bottoms&quot;.&quot;updated_at&quot; AS t0_r6, &quot;middles&quot;.&quot;id&quot; AS t1_r0, &quot;middles&quot;.&quot;top_id&quot; AS t1_r1, &quot;middles&quot;.&quot;version&quot; AS t1_r2, &quot;middles&quot;.&quot;created_at&quot; AS t1_r3, &quot;middles&quot;.&quot;updated_at&quot; AS t1_r4, &quot;tops&quot;.&quot;id&quot; AS t2_r0, &quot;tops&quot;.&quot;name&quot; AS t2_r1, &quot;tops&quot;.&quot;version&quot; AS t2_r2, &quot;tops&quot;.&quot;created_at&quot; AS t2_r3, &quot;tops&quot;.&quot;updated_at&quot; AS t2_r4 FROM &quot;bottoms&quot;  LEFT OUTER JOIN &quot;middles&quot; ON &quot;middles&quot;.id = &quot;bottoms&quot;.middle_id  LEFT OUTER JOIN &quot;tops&quot; ON &quot;tops&quot;.id = &quot;middles&quot;.top_id  INNER JOIN &quot;middles&quot; ON &quot;bottoms&quot;.middle_id = &quot;middles&quot;.id    WHERE (((((`location_type` = 'Room' AND `location_id` IN (4,5,6)) OR (`location_type` = 'Building' AND `location_id` IN (2))) AND `tops`.version == `bottoms`.version) AND (`bottoms`.`version` = 1)) AND ((&quot;middles&quot;.top_id = 1))) 
@@@

Throws errors in sqlite3 and mysql:
Mysql::Error: Not unique table/alias
SQLite3::SQLException: ambiguous column name

I have attached a rails app that demonstrates the problem.

@@@
rake db:migrate
rake db:seed
script/console
&gt; Top.first.bottoms_in_version.in_location(Building.last)
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Something that worked in rails 2.3.8 and below that does not
work in 2.3.9.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Loading development environment (Rails 2.3.8)
ree-1.8.7-2010.02 &amp;gt; Top.first.bottoms_in_version.in_location(Building.last)
 =&amp;gt; [#&amp;lt;Bottom id: 1, middle_id: 1, version: 1, location_type: &quot;Building&quot;, location_id: &quot;2&quot;, created_at: &quot;2010-09-01 20:45:08&quot;, updated_at: &quot;2010-09-01 20:45:08&quot;&amp;gt;, #&amp;lt;Bottom id: 2, middle_id: 1, version: 1, location_type: &quot;Room&quot;, location_id: &quot;4&quot;, created_at: &quot;2010-09-01 20:45:08&quot;, updated_at: &quot;2010-09-01 20:45:08&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;Loading development environment (Rails 2.3.9)
ree-1.8.7-2010.02 &amp;gt; Top.first.bottoms_in_version.in_location(Building.last)
ActiveRecord::StatementInvalid: SQLite3::SQLException: ambiguous column name: middles.id: SELECT &quot;bottoms&quot;.&quot;id&quot; AS t0_r0, &quot;bottoms&quot;.&quot;middle_id&quot; AS t0_r1, &quot;bottoms&quot;.&quot;version&quot; AS t0_r2, &quot;bottoms&quot;.&quot;location_type&quot; AS t0_r3, &quot;bottoms&quot;.&quot;location_id&quot; AS t0_r4, &quot;bottoms&quot;.&quot;created_at&quot; AS t0_r5, &quot;bottoms&quot;.&quot;updated_at&quot; AS t0_r6, &quot;middles&quot;.&quot;id&quot; AS t1_r0, &quot;middles&quot;.&quot;top_id&quot; AS t1_r1, &quot;middles&quot;.&quot;version&quot; AS t1_r2, &quot;middles&quot;.&quot;created_at&quot; AS t1_r3, &quot;middles&quot;.&quot;updated_at&quot; AS t1_r4, &quot;tops&quot;.&quot;id&quot; AS t2_r0, &quot;tops&quot;.&quot;name&quot; AS t2_r1, &quot;tops&quot;.&quot;version&quot; AS t2_r2, &quot;tops&quot;.&quot;created_at&quot; AS t2_r3, &quot;tops&quot;.&quot;updated_at&quot; AS t2_r4 FROM &quot;bottoms&quot;  LEFT OUTER JOIN &quot;middles&quot; ON &quot;middles&quot;.id = &quot;bottoms&quot;.middle_id  LEFT OUTER JOIN &quot;tops&quot; ON &quot;tops&quot;.id = &quot;middles&quot;.top_id  INNER JOIN &quot;middles&quot; ON &quot;bottoms&quot;.middle_id = &quot;middles&quot;.id    WHERE (((((`location_type` = 'Room' AND `location_id` IN (4,5,6)) OR (`location_type` = 'Building' AND `location_id` IN (2))) AND `tops`.version == `bottoms`.version) AND (`bottoms`.`version` = 1)) AND ((&quot;middles&quot;.top_id = 1)))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Throws errors in sqlite3 and mysql:&lt;br&gt;
Mysql::Error: Not unique table/alias&lt;br&gt;
SQLite3::SQLException: ambiguous column name&lt;/p&gt;
&lt;p&gt;I have attached a rails app that demonstrates the problem.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rake db:migrate
rake db:seed
script/console
&amp;gt; Top.first.bottoms_in_version.in_location(Building.last)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Something that worked in rails 2.3.8 and below that does not work in 2.3.9.

@@@
Loading development environment (Rails 2.3.8)
ree-1.8.7-2010.02 &gt; Top.first.bottoms_in_version.in_location(Building.last)
 =&gt; [#&lt;Bottom id: 1, middle_id: 1, version: 1, location_type: &quot;Building&quot;, location_id: &quot;2&quot;, created_at: &quot;2010-09-01 20:45:08&quot;, updated_at: &quot;2010-09-01 20:45:08&quot;&gt;, #&lt;Bottom id: 2, middle_id: 1, version: 1, location_type: &quot;Room&quot;, location_id: &quot;4&quot;, created_at: &quot;2010-09-01 20:45:08&quot;, updated_at: &quot;2010-09-01 20:45:08&quot;&gt;] 
@@@

@@@
Loading development environment (Rails 2.3.9)
ree-1.8.7-2010.02 &gt; Top.first.bottoms_in_version.in_location(Building.last)
ActiveRecord::StatementInvalid: SQLite3::SQLException: ambiguous column name: middles.id: SELECT &quot;bottoms&quot;.&quot;id&quot; AS t0_r0, &quot;bottoms&quot;.&quot;middle_id&quot; AS t0_r1, &quot;bottoms&quot;.&quot;version&quot; AS t0_r2, &quot;bottoms&quot;.&quot;location_type&quot; AS t0_r3, &quot;bottoms&quot;.&quot;location_id&quot; AS t0_r4, &quot;bottoms&quot;.&quot;created_at&quot; AS t0_r5, &quot;bottoms&quot;.&quot;updated_at&quot; AS t0_r6, &quot;middles&quot;.&quot;id&quot; AS t1_r0, &quot;middles&quot;.&quot;top_id&quot; AS t1_r1, &quot;middles&quot;.&quot;version&quot; AS t1_r2, &quot;middles&quot;.&quot;created_at&quot; AS t1_r3, &quot;middles&quot;.&quot;updated_at&quot; AS t1_r4, &quot;tops&quot;.&quot;id&quot; AS t2_r0, &quot;tops&quot;.&quot;name&quot; AS t2_r1, &quot;tops&quot;.&quot;version&quot; AS t2_r2, &quot;tops&quot;.&quot;created_at&quot; AS t2_r3, &quot;tops&quot;.&quot;updated_at&quot; AS t2_r4 FROM &quot;bottoms&quot;  LEFT OUTER JOIN &quot;middles&quot; ON &quot;middles&quot;.id = &quot;bottoms&quot;.middle_id  LEFT OUTER JOIN &quot;tops&quot; ON &quot;tops&quot;.id = &quot;middles&quot;.top_id  INNER JOIN &quot;middles&quot; ON &quot;bottoms&quot;.middle_id = &quot;middles&quot;.id    WHERE (((((`location_type` = 'Room' AND `location_id` IN (4,5,6)) OR (`location_type` = 'Building' AND `location_id` IN (2))) AND `tops`.version == `bottoms`.version) AND (`bottoms`.`version` = 1)) AND ((&quot;middles&quot;.top_id = 1))) 
@@@

Throws errors in sqlite3 and mysql:
Mysql::Error: Not unique table/alias
SQLite3::SQLException: ambiguous column name

I have attached a rails app that demonstrates the problem.

@@@
rake db:migrate
rake db:seed
script/console
&gt; Top.first.bottoms_in_version.in_location(Building.last)
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Something that worked in rails 2.3.8 and below that does not
work in 2.3.9.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Loading development environment (Rails 2.3.8)
ree-1.8.7-2010.02 &amp;gt; Top.first.bottoms_in_version.in_location(Building.last)
 =&amp;gt; [#&amp;lt;Bottom id: 1, middle_id: 1, version: 1, location_type: &quot;Building&quot;, location_id: &quot;2&quot;, created_at: &quot;2010-09-01 20:45:08&quot;, updated_at: &quot;2010-09-01 20:45:08&quot;&amp;gt;, #&amp;lt;Bottom id: 2, middle_id: 1, version: 1, location_type: &quot;Room&quot;, location_id: &quot;4&quot;, created_at: &quot;2010-09-01 20:45:08&quot;, updated_at: &quot;2010-09-01 20:45:08&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;Loading development environment (Rails 2.3.9)
ree-1.8.7-2010.02 &amp;gt; Top.first.bottoms_in_version.in_location(Building.last)
ActiveRecord::StatementInvalid: SQLite3::SQLException: ambiguous column name: middles.id: SELECT &quot;bottoms&quot;.&quot;id&quot; AS t0_r0, &quot;bottoms&quot;.&quot;middle_id&quot; AS t0_r1, &quot;bottoms&quot;.&quot;version&quot; AS t0_r2, &quot;bottoms&quot;.&quot;location_type&quot; AS t0_r3, &quot;bottoms&quot;.&quot;location_id&quot; AS t0_r4, &quot;bottoms&quot;.&quot;created_at&quot; AS t0_r5, &quot;bottoms&quot;.&quot;updated_at&quot; AS t0_r6, &quot;middles&quot;.&quot;id&quot; AS t1_r0, &quot;middles&quot;.&quot;top_id&quot; AS t1_r1, &quot;middles&quot;.&quot;version&quot; AS t1_r2, &quot;middles&quot;.&quot;created_at&quot; AS t1_r3, &quot;middles&quot;.&quot;updated_at&quot; AS t1_r4, &quot;tops&quot;.&quot;id&quot; AS t2_r0, &quot;tops&quot;.&quot;name&quot; AS t2_r1, &quot;tops&quot;.&quot;version&quot; AS t2_r2, &quot;tops&quot;.&quot;created_at&quot; AS t2_r3, &quot;tops&quot;.&quot;updated_at&quot; AS t2_r4 FROM &quot;bottoms&quot;  LEFT OUTER JOIN &quot;middles&quot; ON &quot;middles&quot;.id = &quot;bottoms&quot;.middle_id  LEFT OUTER JOIN &quot;tops&quot; ON &quot;tops&quot;.id = &quot;middles&quot;.top_id  INNER JOIN &quot;middles&quot; ON &quot;bottoms&quot;.middle_id = &quot;middles&quot;.id    WHERE (((((`location_type` = 'Room' AND `location_id` IN (4,5,6)) OR (`location_type` = 'Building' AND `location_id` IN (2))) AND `tops`.version == `bottoms`.version) AND (`bottoms`.`version` = 1)) AND ((&quot;middles&quot;.top_id = 1)))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Throws errors in sqlite3 and mysql:&lt;br&gt;
Mysql::Error: Not unique table/alias&lt;br&gt;
SQLite3::SQLException: ambiguous column name&lt;/p&gt;
&lt;p&gt;I have attached a rails app that demonstrates the problem.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rake db:migrate
rake db:seed
script/console
&amp;gt; Top.first.bottoms_in_version.in_location(Building.last)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-01T22:07:48+01:00</created-at>
      <creator-id type="integer">13453</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5524</number>
      <permalink>not-unique-tablealiasambiguous-column-name-with-chained-named_scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.9 bug joins named_scope</tag>
      <title>Not unique table/alias/ambiguous column name with chained named_scopes </title>
      <updated-at type="datetime">2010-09-01T22:07:50+01:00</updated-at>
      <user-id type="integer">13453</user-id>
      <version type="integer">1</version>
      <user-name>Stephen Heuer</user-name>
      <creator-name>Stephen Heuer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5524</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:49:13+00:00</created-at>
      <creator-id type="integer">13453</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.9 bug joins named_scope
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5524</number>
      <permalink>not-unique-tablealiasambiguous-column-name-with-chained-named_scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>239 bug joins named_scope</tag>
      <title>Not unique table/alias/ambiguous column name with chained named_scopes </title>
      <updated-at type="datetime">2011-02-02T18:09:24+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Stephen Heuer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5524</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:49:14+00:00</created-at>
      <creator-id type="integer">13453</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5524</number>
      <permalink>not-unique-tablealiasambiguous-column-name-with-chained-named_scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>239 bug joins named_scope</tag>
      <title>Not unique table/alias/ambiguous column name with chained named_scopes </title>
      <updated-at type="datetime">2011-02-02T18:09:10+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Stephen Heuer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5524</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[state:open] 

Still an issue in Rails 3.0.4  As above run
rake db:migrate
rake db:seed
rails c

Loading development environment (Rails 3.0.4)
&gt;&gt; Category.good.joins(:items)
ActiveRecord::StatementInvalid: SQLite3::SQLException: ambiguous column name: name: SELECT &quot;categories&quot;.* FROM &quot;categories&quot; INNER JOIN &quot;items&quot; ON &quot;items&quot;.&quot;category_id&quot; = &quot;categories&quot;.&quot;id&quot; WHERE (name = 'Good Stuff')

As a workaround, if you recreate the scope as follows:
 scope :good, :conditions =&gt; [&quot;categories.name = 'Good Stuff'&quot;]

then it works fine. I'm not sure what implications this would have on intersection between scopes, but in this demo

Category.good.important.joins(:items)

does work.</body>
      <body-html>&lt;div&gt;&lt;p&gt;[state:open]&lt;/p&gt;
&lt;p&gt;Still an issue in Rails 3.0.4 As above run&lt;br&gt;
rake db:migrate&lt;br&gt;
rake db:seed&lt;br&gt;
rails c&lt;/p&gt;
&lt;p&gt;Loading development environment (Rails 3.0.4)&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Category.good.joins(:items) ActiveRecord::StatementInvalid:
SQLite3::SQLException: ambiguous column name: name: SELECT
&quot;categories&quot;.* FROM &quot;categories&quot; INNER JOIN &quot;items&quot; ON
&quot;items&quot;.&quot;category_id&quot; = &quot;categories&quot;.&quot;id&quot; WHERE (name = 'Good
Stuff')&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;As a workaround, if you recreate the scope as follows:&lt;br&gt;
scope :good, :conditions =&amp;gt; [&quot;categories.name = 'Good
Stuff'&quot;]&lt;/p&gt;
&lt;p&gt;then it works fine. I'm not sure what implications this would
have on intersection between scopes, but in this demo&lt;/p&gt;
&lt;p&gt;Category.good.important.joins(:items)&lt;/p&gt;
&lt;p&gt;does work.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-20T08:52:26+00:00</created-at>
      <creator-id type="integer">13453</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5524</number>
      <permalink>not-unique-tablealiasambiguous-column-name-with-chained-named_scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>239 bug joins named_scope</tag>
      <title>Not unique table/alias/ambiguous column name with chained named_scopes </title>
      <updated-at type="datetime">2011-02-20T08:52:40+00:00</updated-at>
      <user-id type="integer">137872</user-id>
      <version type="integer">4</version>
      <user-name>Dan</user-name>
      <creator-name>Stephen Heuer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5524</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b3a4cdc74e0400a61c1fd60714c35402039c4c35</code>
      <content-type>application/octet-stream</content-type>
      <created-at type="datetime">2010-09-01T22:07:48+01:00</created-at>
      <filename>test_app.tgz</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">655731</id>
      <size type="integer">83498</size>
      <uploader-id type="integer">13453</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/655731/test_app.tgz</url>
    </attachment>
    <attachment type="Attachment">
      <code>bb58e76d6a72af2ba13a42849c9bd51489421bf4</code>
      <content-type>application/x-gzip</content-type>
      <created-at type="datetime">2011-02-20T08:52:26+00:00</created-at>
      <filename>rails_ticket_5524_a.tgz</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">921113</id>
      <size type="integer">87708</size>
      <uploader-id type="integer">137872</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/921113/rails_ticket_5524_a.tgz</url>
    </attachment>
  </attachments>
</ticket>
