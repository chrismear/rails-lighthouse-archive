<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-30T11:42:04+01:00</created-at>
  <creator-id type="integer">26415</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2375</number>
  <permalink>sql-syntax-error-while-executing-count-with-has_many-through-and-named_scopes</permalink>
  <priority type="integer">1535</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>2.3.2 :through active_record bug bugs count named_scope</tag>
  <title>SQL syntax error while executing count with has_many :through and named_scopes</title>
  <updated-at type="datetime">2009-03-30T13:53:40+01:00</updated-at>
  <user-id type="integer">7211</user-id>
  <version type="integer">3</version>
  <user-name>CancelProfileIsBroken</user-name>
  <creator-name>Bartosz Pietrzak</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2375</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Appl.rb:
@@@
  named_scope :confirmed, :conditions =&gt; {:state =&gt; &quot;confirmed&quot;}
  has_many :tags, :through =&gt; :taggings
  has_many :taggings, :dependent =&gt; :destroy
@@@


Tag.rb:
@@@
  has_many :appls, :through =&gt; :taggings
@@@

And now in script/console:

@@@
= Tag.find 65
  Tag Load (0.6ms)   SELECT * FROM `tags` WHERE (`tags`.`id` = 65) 
=&gt; #&lt;Tag id: 65, name: &quot;DO DUPY!!!&quot;, created_at: &quot;2009-03-04 11:11:15&quot;, updated_at: &quot;2009-03-04 11:11:15&quot;, company_id: 1, color: &quot;f1f5ec&quot;, font_color: &quot;006633&quot;, taggings_count: 20&gt;
&gt;&gt; t.appls.size
  SQL (0.7ms)   SELECT count(*) AS count_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE ((`taggings`.tag_id = 65)) 
=&gt; 20
&gt;&gt; t.appls.confirmed.size
  SQL (0.0ms)   Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggin' at line 1: SELECT count(`appls`.*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE (((`appls`.`state` = 'confirmed') AND ((`taggings`.tag_id = 65))) AND ((`taggings`.tag_id = 65))) 
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggin' at line 1: SELECT count(`appls`.*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE (((`appls`.`state` = 'confirmed') AND ((`taggings`.tag_id = 65))) AND ((`taggings`.tag_id = 65))) 
@@@

While t.appls.confirmed.to_a.size gives 20.

Error is in count(`appls`.*), when I change it manually to count(*) it works well and gives the expected result.</original-body>
  <latest-body>Appl.rb:
@@@
  named_scope :confirmed, :conditions =&gt; {:state =&gt; &quot;confirmed&quot;}
  has_many :tags, :through =&gt; :taggings
  has_many :taggings, :dependent =&gt; :destroy
@@@


Tag.rb:
@@@
  has_many :appls, :through =&gt; :taggings
@@@

And now in script/console:

@@@
= Tag.find 65
  Tag Load (0.6ms)   SELECT * FROM `tags` WHERE (`tags`.`id` = 65) 
=&gt; #&lt;Tag id: 65, name: &quot;DO DUPY!!!&quot;, created_at: &quot;2009-03-04 11:11:15&quot;, updated_at: &quot;2009-03-04 11:11:15&quot;, company_id: 1, color: &quot;f1f5ec&quot;, font_color: &quot;006633&quot;, taggings_count: 20&gt;
&gt;&gt; t.appls.size
  SQL (0.7ms)   SELECT count(*) AS count_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE ((`taggings`.tag_id = 65)) 
=&gt; 20
&gt;&gt; t.appls.confirmed.size
  SQL (0.0ms)   Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggin' at line 1: SELECT count(`appls`.*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE (((`appls`.`state` = 'confirmed') AND ((`taggings`.tag_id = 65))) AND ((`taggings`.tag_id = 65))) 
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggin' at line 1: SELECT count(`appls`.*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE (((`appls`.`state` = 'confirmed') AND ((`taggings`.tag_id = 65))) AND ((`taggings`.tag_id = 65))) 
@@@

While t.appls.confirmed.to_a.size gives 20.

Error is in count(`appls`.*), when I change it manually to count(*) it works well and gives the expected result.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Appl.rb:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  named_scope :confirmed, :conditions =&amp;gt; {:state =&amp;gt; &amp;quot;confirmed&amp;quot;}
  has_many :tags, :through =&amp;gt; :taggings
  has_many :taggings, :dependent =&amp;gt; :destroy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tag.rb:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  has_many :appls, :through =&amp;gt; :taggings
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And now in script/console:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
= Tag.find 65
  Tag Load (0.6ms)   SELECT * FROM `tags` WHERE (`tags`.`id` = 65) 
=&amp;gt; #&amp;lt;Tag id: 65, name: &amp;quot;DO DUPY!!!&amp;quot;, created_at: &amp;quot;2009-03-04 11:11:15&amp;quot;, updated_at: &amp;quot;2009-03-04 11:11:15&amp;quot;, company_id: 1, color: &amp;quot;f1f5ec&amp;quot;, font_color: &amp;quot;006633&amp;quot;, taggings_count: 20&amp;gt;
&amp;gt;&amp;gt; t.appls.size
  SQL (0.7ms)   SELECT count(*) AS count_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE ((`taggings`.tag_id = 65)) 
=&amp;gt; 20
&amp;gt;&amp;gt; t.appls.confirmed.size
  SQL (0.0ms)   Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggin' at line 1: SELECT count(`appls`.*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE (((`appls`.`state` = 'confirmed') AND ((`taggings`.tag_id = 65))) AND ((`taggings`.tag_id = 65))) 
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggin' at line 1: SELECT count(`appls`.*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE (((`appls`.`state` = 'confirmed') AND ((`taggings`.tag_id = 65))) AND ((`taggings`.tag_id = 65))) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While t.appls.confirmed.to_a.size gives 20.&lt;/p&gt;
&lt;p&gt;Error is in count(&lt;code&gt;appls&lt;/code&gt;.&lt;em&gt;), when I change it
manually to count(&lt;/em&gt;) it works well and gives the expected
result.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Appl.rb:
@@@
  named_scope :confirmed, :conditions =&gt; {:state =&gt; &quot;confirmed&quot;}
  has_many :tags, :through =&gt; :taggings
  has_many :taggings, :dependent =&gt; :destroy
@@@


Tag.rb:
@@@
  has_many :appls, :through =&gt; :taggings
@@@

And now in script/console:

@@@
= Tag.find 65
  Tag Load (0.6ms)   SELECT * FROM `tags` WHERE (`tags`.`id` = 65) 
=&gt; #&lt;Tag id: 65, name: &quot;DO DUPY!!!&quot;, created_at: &quot;2009-03-04 11:11:15&quot;, updated_at: &quot;2009-03-04 11:11:15&quot;, company_id: 1, color: &quot;f1f5ec&quot;, font_color: &quot;006633&quot;, taggings_count: 20&gt;
&gt;&gt; t.appls.size
  SQL (0.7ms)   SELECT count(*) AS count_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE ((`taggings`.tag_id = 65)) 
=&gt; 20
&gt;&gt; t.appls.confirmed.size
  SQL (0.0ms)   Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggin' at line 1: SELECT count(`appls`.*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE (((`appls`.`state` = 'confirmed') AND ((`taggings`.tag_id = 65))) AND ((`taggings`.tag_id = 65))) 
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggin' at line 1: SELECT count(`appls`.*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE (((`appls`.`state` = 'confirmed') AND ((`taggings`.tag_id = 65))) AND ((`taggings`.tag_id = 65))) 
@@@

While t.appls.confirmed.to_a.size gives 20.

Error is in count(`appls`.*), when I change it manually to count(*) it works well and gives the expected result.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Appl.rb:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  named_scope :confirmed, :conditions =&amp;gt; {:state =&amp;gt; &amp;quot;confirmed&amp;quot;}
  has_many :tags, :through =&amp;gt; :taggings
  has_many :taggings, :dependent =&amp;gt; :destroy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tag.rb:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  has_many :appls, :through =&amp;gt; :taggings
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And now in script/console:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
= Tag.find 65
  Tag Load (0.6ms)   SELECT * FROM `tags` WHERE (`tags`.`id` = 65) 
=&amp;gt; #&amp;lt;Tag id: 65, name: &amp;quot;DO DUPY!!!&amp;quot;, created_at: &amp;quot;2009-03-04 11:11:15&amp;quot;, updated_at: &amp;quot;2009-03-04 11:11:15&amp;quot;, company_id: 1, color: &amp;quot;f1f5ec&amp;quot;, font_color: &amp;quot;006633&amp;quot;, taggings_count: 20&amp;gt;
&amp;gt;&amp;gt; t.appls.size
  SQL (0.7ms)   SELECT count(*) AS count_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE ((`taggings`.tag_id = 65)) 
=&amp;gt; 20
&amp;gt;&amp;gt; t.appls.confirmed.size
  SQL (0.0ms)   Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggin' at line 1: SELECT count(`appls`.*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE (((`appls`.`state` = 'confirmed') AND ((`taggings`.tag_id = 65))) AND ((`taggings`.tag_id = 65))) 
ActiveRecord::StatementInvalid: Mysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggin' at line 1: SELECT count(`appls`.*) AS count_appls_all FROM `appls` INNER JOIN `taggings` ON `appls`.id = `taggings`.appl_id WHERE (((`appls`.`state` = 'confirmed') AND ((`taggings`.tag_id = 65))) AND ((`taggings`.tag_id = 65))) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While t.appls.confirmed.to_a.size gives 20.&lt;/p&gt;
&lt;p&gt;Error is in count(&lt;code&gt;appls&lt;/code&gt;.&lt;em&gt;), when I change it
manually to count(&lt;/em&gt;) it works well and gives the expected
result.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-30T11:42:04+01:00</created-at>
      <creator-id type="integer">26415</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2375</number>
      <permalink>sql-syntax-error-while-executing-count-with-has_many-through-and-named_scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 :through active_record bug bugs count named_scope</tag>
      <title>SQL syntax error while executing count with has_many :through and named_scopes</title>
      <updated-at type="datetime">2009-03-30T11:42:10+01:00</updated-at>
      <user-id type="integer">26415</user-id>
      <version type="integer">1</version>
      <user-name>Bartosz Pietrzak</user-name>
      <creator-name>Bartosz Pietrzak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2375</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>got an formatting error in last paragraph.

error is in:
@@@
count(`appls`.*)
@@@

and correct version is:
@@@
count(*)
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;got an formatting error in last paragraph.&lt;/p&gt;
&lt;p&gt;error is in:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
count(`appls`.*)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and correct version is:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
count(*)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-30T11:43:51+01:00</created-at>
      <creator-id type="integer">26415</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2375</number>
      <permalink>sql-syntax-error-while-executing-count-with-has_many-through-and-named_scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 :through active_record bug bugs count named_scope</tag>
      <title>SQL syntax error while executing count with has_many :through and named_scopes</title>
      <updated-at type="datetime">2009-03-30T11:43:56+01:00</updated-at>
      <user-id type="integer">26415</user-id>
      <version type="integer">2</version>
      <user-name>Bartosz Pietrzak</user-name>
      <creator-name>Bartosz Pietrzak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2375</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Being extensively discussed on #2189</body>
      <body-html>&lt;div&gt;&lt;p&gt;Being extensively discussed on &lt;a href=&quot;/projects/8994/tickets/2189&quot; title=&quot;Ticket #2189&quot;&gt;#2189&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-30T13:53:39+01:00</created-at>
      <creator-id type="integer">26415</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2375</number>
      <permalink>sql-syntax-error-while-executing-count-with-has_many-through-and-named_scopes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>2.3.2 :through active_record bug bugs count named_scope</tag>
      <title>SQL syntax error while executing count with has_many :through and named_scopes</title>
      <updated-at type="datetime">2009-03-30T13:53:40+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">3</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Bartosz Pietrzak</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2375</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
