<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-02T15:32:18+00:00</created-at>
  <creator-id type="integer">87485</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6102</number>
  <permalink>activerecord-boolean-support-with-bit1-mysql-data-type</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>active_record bit1 boolean &quot;bug patch&quot; datatype mysql</tag>
  <title>ActiveRecord: boolean support with bit(1) MySQL data type</title>
  <updated-at type="datetime">2011-03-04T00:00:39+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">4</version>
  <user-name>rails</user-name>
  <creator-name>Antonio Espinosa</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6102</url>
  <priority-name nil="true"></priority-name>
  <original-body>##Note: ##
*BIT MySQL data type was added in MySQL 5.0.3 for MyISAM, and extended in 5.0.5 to MEMORY, InnoDB, BDB, and NDBCLUSTER. Before 5.0.3, BIT is a synonym for TINYINT(1).*

##Config: ##
os: Windows XP
rails: 2.3.8
ruby: 1.8.7
gem mysql: 2.8.1
mysql server: 5.0.41

## Problem ##
Activerecord#column_name? return false instead of true when using datatype &quot;bit(1)&quot; with mysql and the value in the database is 1 (true).

To support the bit data type, I have changed the following files:


# /active_record/connection_adapters/abstract/schema_definitions.rb #
@@@
def value_to_boolean(value)
  if value.is_a?(String) &amp;&amp; value.blank?
    nil
  else
+++   value = value.ord if value.is_a?(String) &amp;&amp; value.ord &lt; 2 # Support bit(1) mysql datatype for bool
    TRUE_VALUES.include?(value)
  end
end
@@@

# /active_record/connection_adapters/mysql_adapter.rb #
@@@
  def simplified_type(field_type)
#    return :boolean if MysqlAdapter.emulate_booleans &amp;&amp; field_type.downcase.index(&quot;tinyint(1)&quot;)
+++    return :boolean if MysqlAdapter.emulate_booleans &amp;&amp; field_type =~ /tinyint\(1\)|bit/i
    return :string  if field_type =~ /enum/i
    super
  end
@@@

@@@
  def extract_limit(sql_type)
    case sql_type
    when /blob|text/i
      case sql_type
      when /tiny/i
         255
 ...
    when /^tinyint/i;   1
+++    when /^bit/i;   1
    else
      super
    end
  end
@@@

Best regards,</original-body>
  <latest-body>##Note: ##
*BIT MySQL data type was added in MySQL 5.0.3 for MyISAM, and extended in 5.0.5 to MEMORY, InnoDB, BDB, and NDBCLUSTER. Before 5.0.3, BIT is a synonym for TINYINT(1).*

##Config: ##
os: Windows XP
rails: 2.3.8
ruby: 1.8.7
gem mysql: 2.8.1
mysql server: 5.0.41

## Problem ##
Activerecord#column_name? return false instead of true when using datatype &quot;bit(1)&quot; with mysql and the value in the database is 1 (true).

To support the bit data type, I have changed the following files:


# /active_record/connection_adapters/abstract/schema_definitions.rb #
@@@
def value_to_boolean(value)
  if value.is_a?(String) &amp;&amp; value.blank?
    nil
  else
+++   value = value.ord if value.is_a?(String) &amp;&amp; value.ord &lt; 2 # Support bit(1) mysql datatype for bool
    TRUE_VALUES.include?(value)
  end
end
@@@

# /active_record/connection_adapters/mysql_adapter.rb #
@@@
  def simplified_type(field_type)
#    return :boolean if MysqlAdapter.emulate_booleans &amp;&amp; field_type.downcase.index(&quot;tinyint(1)&quot;)
+++    return :boolean if MysqlAdapter.emulate_booleans &amp;&amp; field_type =~ /tinyint\(1\)|bit/i
    return :string  if field_type =~ /enum/i
    super
  end
@@@

@@@
  def extract_limit(sql_type)
    case sql_type
    when /blob|text/i
      case sql_type
      when /tiny/i
         255
 ...
    when /^tinyint/i;   1
+++    when /^bit/i;   1
    else
      super
    end
  end
@@@

Best regards,</latest-body>
  <original-body-html>&lt;div&gt;&lt;h2&gt;Note:&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;BIT MySQL data type was added in MySQL 5.0.3 for MyISAM, and
extended in 5.0.5 to MEMORY, InnoDB, BDB, and NDBCLUSTER. Before
5.0.3, BIT is a synonym for TINYINT(1).&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Config:&lt;/h2&gt;
&lt;p&gt;os: Windows XP&lt;br&gt;
rails: 2.3.8&lt;br&gt;
ruby: 1.8.7&lt;br&gt;
gem mysql: 2.8.1&lt;br&gt;
mysql server: 5.0.41&lt;/p&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;Activerecord#column_name? return false instead of true when
using datatype &quot;bit(1)&quot; with mysql and the value in the database is
1 (true).&lt;/p&gt;
&lt;p&gt;To support the bit data type, I have changed the following
files:&lt;/p&gt;
&lt;h1&gt;
/active_record/connection_adapters/abstract/schema_definitions.rb&lt;/h1&gt;
&lt;pre&gt;
&lt;code&gt;def value_to_boolean(value)
  if value.is_a?(String) &amp;amp;&amp;amp; value.blank?
    nil
  else
+++   value = value.ord if value.is_a?(String) &amp;amp;&amp;amp; value.ord &amp;lt; 2 # Support bit(1) mysql datatype for bool
    TRUE_VALUES.include?(value)
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;/active_record/connection_adapters/mysql_adapter.rb&lt;/h1&gt;
&lt;pre&gt;
&lt;code&gt;  def simplified_type(field_type)
#    return :boolean if MysqlAdapter.emulate_booleans &amp;amp;&amp;amp; field_type.downcase.index(&quot;tinyint(1)&quot;)
+++    return :boolean if MysqlAdapter.emulate_booleans &amp;amp;&amp;amp; field_type =~ /tinyint\(1\)|bit/i
    return :string  if field_type =~ /enum/i
    super
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;  def extract_limit(sql_type)
    case sql_type
    when /blob|text/i
      case sql_type
      when /tiny/i
         255
 ...
    when /^tinyint/i;   1
+++    when /^bit/i;   1
    else
      super
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Best regards,&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>##Note: ##
*BIT MySQL data type was added in MySQL 5.0.3 for MyISAM, and extended in 5.0.5 to MEMORY, InnoDB, BDB, and NDBCLUSTER. Before 5.0.3, BIT is a synonym for TINYINT(1).*

##Config: ##
os: Windows XP
rails: 2.3.8
ruby: 1.8.7
gem mysql: 2.8.1
mysql server: 5.0.41

## Problem ##
Activerecord#column_name? return false instead of true when using datatype &quot;bit(1)&quot; with mysql and the value in the database is 1 (true).

To support the bit data type, I have changed the following files:


# /active_record/connection_adapters/abstract/schema_definitions.rb #
@@@
def value_to_boolean(value)
  if value.is_a?(String) &amp;&amp; value.blank?
    nil
  else
+++   value = value.ord if value.is_a?(String) &amp;&amp; value.ord &lt; 2 # Support bit(1) mysql datatype for bool
    TRUE_VALUES.include?(value)
  end
end
@@@

# /active_record/connection_adapters/mysql_adapter.rb #
@@@
  def simplified_type(field_type)
#    return :boolean if MysqlAdapter.emulate_booleans &amp;&amp; field_type.downcase.index(&quot;tinyint(1)&quot;)
+++    return :boolean if MysqlAdapter.emulate_booleans &amp;&amp; field_type =~ /tinyint\(1\)|bit/i
    return :string  if field_type =~ /enum/i
    super
  end
@@@

@@@
  def extract_limit(sql_type)
    case sql_type
    when /blob|text/i
      case sql_type
      when /tiny/i
         255
 ...
    when /^tinyint/i;   1
+++    when /^bit/i;   1
    else
      super
    end
  end
@@@

Best regards,</body>
      <body-html>&lt;div&gt;&lt;h2&gt;Note:&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;BIT MySQL data type was added in MySQL 5.0.3 for MyISAM, and
extended in 5.0.5 to MEMORY, InnoDB, BDB, and NDBCLUSTER. Before
5.0.3, BIT is a synonym for TINYINT(1).&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Config:&lt;/h2&gt;
&lt;p&gt;os: Windows XP&lt;br&gt;
rails: 2.3.8&lt;br&gt;
ruby: 1.8.7&lt;br&gt;
gem mysql: 2.8.1&lt;br&gt;
mysql server: 5.0.41&lt;/p&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;Activerecord#column_name? return false instead of true when
using datatype &quot;bit(1)&quot; with mysql and the value in the database is
1 (true).&lt;/p&gt;
&lt;p&gt;To support the bit data type, I have changed the following
files:&lt;/p&gt;
&lt;h1&gt;
/active_record/connection_adapters/abstract/schema_definitions.rb&lt;/h1&gt;
&lt;pre&gt;
&lt;code&gt;def value_to_boolean(value)
  if value.is_a?(String) &amp;amp;&amp;amp; value.blank?
    nil
  else
+++   value = value.ord if value.is_a?(String) &amp;amp;&amp;amp; value.ord &amp;lt; 2 # Support bit(1) mysql datatype for bool
    TRUE_VALUES.include?(value)
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;/active_record/connection_adapters/mysql_adapter.rb&lt;/h1&gt;
&lt;pre&gt;
&lt;code&gt;  def simplified_type(field_type)
#    return :boolean if MysqlAdapter.emulate_booleans &amp;amp;&amp;amp; field_type.downcase.index(&quot;tinyint(1)&quot;)
+++    return :boolean if MysqlAdapter.emulate_booleans &amp;amp;&amp;amp; field_type =~ /tinyint\(1\)|bit/i
    return :string  if field_type =~ /enum/i
    super
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;  def extract_limit(sql_type)
    case sql_type
    when /blob|text/i
      case sql_type
      when /tiny/i
         255
 ...
    when /^tinyint/i;   1
+++    when /^bit/i;   1
    else
      super
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Best regards,&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-02T15:32:18+00:00</created-at>
      <creator-id type="integer">87485</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6102</number>
      <permalink>activerecord-boolean-support-with-bit1-mysql-data-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record bit1 boolean datatype mysql</tag>
      <title>ActiveRecord: boolean support with bit(1) MySQL data type</title>
      <updated-at type="datetime">2010-12-03T08:54:38+00:00</updated-at>
      <user-id type="integer">87485</user-id>
      <version type="integer">1</version>
      <user-name>Antonio Espinosa</user-name>
      <creator-name>Antonio Espinosa</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6102</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-02T15:43:38+00:00</created-at>
      <creator-id type="integer">87485</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_record bit1 boolean datatype mysql
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6102</number>
      <permalink>activerecord-boolean-support-with-bit1-mysql-data-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record bit1 boolean &quot;bug patch&quot; datatype mysql</tag>
      <title>ActiveRecord: boolean support with bit(1) MySQL data type</title>
      <updated-at type="datetime">2010-12-02T15:45:55+00:00</updated-at>
      <user-id type="integer">87485</user-id>
      <version type="integer">2</version>
      <user-name>Antonio Espinosa</user-name>
      <creator-name>Antonio Espinosa</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6102</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-04T00:00:11+00:00</created-at>
      <creator-id type="integer">87485</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6102</number>
      <permalink>activerecord-boolean-support-with-bit1-mysql-data-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record bit1 boolean &quot;bug patch&quot; datatype mysql</tag>
      <title>ActiveRecord: boolean support with bit(1) MySQL data type</title>
      <updated-at type="datetime">2011-03-04T00:00:16+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>Antonio Espinosa</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6102</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-04T00:00:12+00:00</created-at>
      <creator-id type="integer">87485</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6102</number>
      <permalink>activerecord-boolean-support-with-bit1-mysql-data-type</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>active_record bit1 boolean &quot;bug patch&quot; datatype mysql</tag>
      <title>ActiveRecord: boolean support with bit(1) MySQL data type</title>
      <updated-at type="datetime">2011-03-04T00:00:39+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>Antonio Espinosa</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6102</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
