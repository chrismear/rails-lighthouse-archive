<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-03T13:01:04+00:00</created-at>
  <creator-id type="integer">8551</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6111</number>
  <permalink>sessions-should-not-be-saved-unless-dirty-patch</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>sessions</tag>
  <title>Sessions should not be saved unless dirty [patch]</title>
  <updated-at type="datetime">2011-03-04T00:00:35+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">4</version>
  <user-name>rails</user-name>
  <creator-name>Fjan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6111</url>
  <priority-name nil="true"></priority-name>
  <original-body>At the moment Rails saves sessions after every request that access the (lazy loaded) session, even if the session has not changed. This has two problems:

1. Performance: the unnecessary write is wasted CPU cycles and bandwidth (or a useless database access in case of the ActiveRecord store)
2. There is a very obscure bug in Internet Explorer 7 (only in 7, not IE 6 or 8) that deletes a cookie if it's set on a 304 Not Modified request while inside an iframe.

The second one was actually the reason I needed to create this patch as my app needs to support running inside an iframe on IE7, but the performance benefits are a nice bonus. It only takes about 5 lines of ruby to set a dirty bit and check for it upon saving. Attached is a monkey patch, if there is consensus that this is a good idea I'll work it into a proper patch. I incorporated the patch from [4445](https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_after-option-on-session-forces-session-creation-on-each-and-every-action) to make it work with expire after too.</original-body>
  <latest-body>At the moment Rails saves sessions after every request that access the (lazy loaded) session, even if the session has not changed. This has two problems:

1. Performance: the unnecessary write is wasted CPU cycles and bandwidth (or a useless database access in case of the ActiveRecord store)
2. There is a very obscure bug in Internet Explorer 7 (only in 7, not IE 6 or 8) that deletes a cookie if it's set on a 304 Not Modified request while inside an iframe.

The second one was actually the reason I needed to create this patch as my app needs to support running inside an iframe on IE7, but the performance benefits are a nice bonus. It only takes about 5 lines of ruby to set a dirty bit and check for it upon saving. Attached is a monkey patch, if there is consensus that this is a good idea I'll work it into a proper patch. I incorporated the patch from [4445](https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_after-option-on-session-forces-session-creation-on-each-and-every-action) to make it work with expire after too.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;At the moment Rails saves sessions after every request that
access the (lazy loaded) session, even if the session has not
changed. This has two problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Performance: the unnecessary write is wasted CPU cycles and
bandwidth (or a useless database access in case of the ActiveRecord
store)&lt;br&gt;&lt;/li&gt;
&lt;li&gt;There is a very obscure bug in Internet Explorer 7 (only in 7,
not IE 6 or 8) that deletes a cookie if it's set on a 304 Not
Modified request while inside an iframe.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The second one was actually the reason I needed to create this
patch as my app needs to support running inside an iframe on IE7,
but the performance benefits are a nice bonus. It only takes about
5 lines of ruby to set a dirty bit and check for it upon saving.
Attached is a monkey patch, if there is consensus that this is a
good idea I'll work it into a proper patch. I incorporated the
patch from &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_after-option-on-session-forces-session-creation-on-each-and-every-action&quot;&gt;
4445&lt;/a&gt; to make it work with expire after too.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>At the moment Rails saves sessions after every request that access the (lazy loaded) session, even if the session has not changed. This has two problems:

1. Performance: the unnecessary write is wasted CPU cycles and bandwidth (or a useless database access in case of the ActiveRecord store)
2. There is a very obscure bug in Internet Explorer 7 (only in 7, not IE 6 or 8) that deletes a cookie if it's set on a 304 Not Modified request while inside an iframe.

The second one was actually the reason I needed to create this patch as my app needs to support running inside an iframe on IE7, but the performance benefits are a nice bonus. It only takes about 5 lines of ruby to set a dirty bit and check for it upon saving. Attached is a monkey patch, if there is consensus that this is a good idea I'll work it into a proper patch. I incorporated the patch from [4445](https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_after-option-on-session-forces-session-creation-on-each-and-every-action) to make it work with expire after too.</body>
      <body-html>&lt;div&gt;&lt;p&gt;At the moment Rails saves sessions after every request that
access the (lazy loaded) session, even if the session has not
changed. This has two problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Performance: the unnecessary write is wasted CPU cycles and
bandwidth (or a useless database access in case of the ActiveRecord
store)&lt;br&gt;&lt;/li&gt;
&lt;li&gt;There is a very obscure bug in Internet Explorer 7 (only in 7,
not IE 6 or 8) that deletes a cookie if it's set on a 304 Not
Modified request while inside an iframe.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The second one was actually the reason I needed to create this
patch as my app needs to support running inside an iframe on IE7,
but the performance benefits are a nice bonus. It only takes about
5 lines of ruby to set a dirty bit and check for it upon saving.
Attached is a monkey patch, if there is consensus that this is a
good idea I'll work it into a proper patch. I incorporated the
patch from &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_after-option-on-session-forces-session-creation-on-each-and-every-action&quot;&gt;
4445&lt;/a&gt; to make it work with expire after too.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-03T13:01:04+00:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6111</number>
      <permalink>sessions-should-not-be-saved-unless-dirty-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>sessions</tag>
      <title>Sessions should not be saved unless dirty [patch]</title>
      <updated-at type="datetime">2010-12-03T13:01:06+00:00</updated-at>
      <user-id type="integer">8551</user-id>
      <version type="integer">1</version>
      <user-name>Fjan</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6111</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just a small clarification on the obscure IE7 bug in case people want to reproduce it: It only happens in combination with Apache which (correctly) filters P3P headers from 304 requests. A P3P header is needed for all versions of Internet Explorer to accept cookies inside an iframe. The missing header has the effect of IE7 not only rejecting the cookie (which wouldn't be much of a problem) but actively deleting the cookie thereby logging the user out.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just a small clarification on the obscure IE7 bug in case people
want to reproduce it: It only happens in combination with Apache
which (correctly) filters P3P headers from 304 requests. A P3P
header is needed for all versions of Internet Explorer to accept
cookies inside an iframe. The missing header has the effect of IE7
not only rejecting the cookie (which wouldn't be much of a problem)
but actively deleting the cookie thereby logging the user out.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-03T13:23:00+00:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6111</number>
      <permalink>sessions-should-not-be-saved-unless-dirty-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>sessions</tag>
      <title>Sessions should not be saved unless dirty [patch]</title>
      <updated-at type="datetime">2010-12-03T13:23:01+00:00</updated-at>
      <user-id type="integer">8551</user-id>
      <version type="integer">2</version>
      <user-name>Fjan</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6111</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-04T00:00:10+00:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6111</number>
      <permalink>sessions-should-not-be-saved-unless-dirty-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>sessions</tag>
      <title>Sessions should not be saved unless dirty [patch]</title>
      <updated-at type="datetime">2011-03-04T00:00:35+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6111</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-04T00:00:11+00:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6111</number>
      <permalink>sessions-should-not-be-saved-unless-dirty-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>sessions</tag>
      <title>Sessions should not be saved unless dirty [patch]</title>
      <updated-at type="datetime">2011-03-04T00:00:21+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6111</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d5f5a923d595831797671a61b3146baae7b95e67</code>
      <content-type>text/x-ruby-script</content-type>
      <created-at type="datetime">2010-12-03T13:01:05+00:00</created-at>
      <filename>lazy_save_session_patch.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">801505</id>
      <size type="integer">1392</size>
      <uploader-id type="integer">8551</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/801505/lazy_save_session_patch.rb</url>
    </attachment>
  </attachments>
</ticket>
