From 509a3c0bdc0e000aba161a57ab161adfaaa7ccb6 Mon Sep 17 00:00:00 2001
From: Szymon Nowak <szimek@gmail.com>
Date: Sat, 30 Jan 2010 17:38:42 +0100
Subject: [PATCH] Change Rails::Generators::Migration protected instance methods to class methods.

---
 activerecord/lib/generators/active_record.rb |   17 ++++-----
 railties/lib/rails/generators/migration.rb   |   50 ++++++++++++++------------
 2 files changed, 35 insertions(+), 32 deletions(-)

diff --git a/activerecord/lib/generators/active_record.rb b/activerecord/lib/generators/active_record.rb
index 25b982f..1ca838b 100644
--- a/activerecord/lib/generators/active_record.rb
+++ b/activerecord/lib/generators/active_record.rb
@@ -16,16 +16,15 @@ module ActiveRecord
         end
       end
 
-      protected
-        # Implement the required interface for Rails::Generators::Migration.
-        #
-        def next_migration_number(dirname) #:nodoc:
-          if ActiveRecord::Base.timestamped_migrations
-            Time.now.utc.strftime("%Y%m%d%H%M%S")
-          else
-            "%.3d" % (current_migration_number(dirname) + 1)
-          end
+      # Implement the required interface for Rails::Generators::Migration.
+      #
+      def self.next_migration_number(dirname) #:nodoc:
+        if ActiveRecord::Base.timestamped_migrations
+          Time.now.utc.strftime("%Y%m%d%H%M%S")
+        else
+          "%.3d" % (current_migration_number(dirname) + 1)
         end
+      end
     end
   end
 end
diff --git a/railties/lib/rails/generators/migration.rb b/railties/lib/rails/generators/migration.rb
index 0a9151e..957d695 100644
--- a/railties/lib/rails/generators/migration.rb
+++ b/railties/lib/rails/generators/migration.rb
@@ -6,11 +6,36 @@ module Rails
     #
     module Migration
       def self.included(base) #:nodoc:
+        base.extend ClassMethods
         base.send :attr_reader, :migration_number,
                                 :migration_file_name,
                                 :migration_class_name
       end
 
+      module ClassMethods
+        def migration_lookup_at(dirname) #:nodoc:
+          Dir.glob("#{dirname}/[0-9]*_*.rb")
+        end
+
+        def migration_exists?(dirname, file_name) #:nodoc:
+          migration_lookup_at(dirname).grep(/\d+_#{file_name}.rb$/).first
+        end
+
+        def current_migration_number(dirname) #:nodoc:
+          migration_lookup_at(dirname).collect do |file|
+            File.basename(file).split("_").first.to_i
+          end.max.to_i
+        end
+
+        def next_migration_number(dirname) #:nodoc:
+          orm = Rails.configuration.generators.options[:rails][:orm]
+          require "generators/#{orm}"
+          "#{orm.to_s.camelize}::Generators::Base".constantize.next_migration_number(dirname)
+        rescue
+          raise NotImplementedError
+        end
+      end
+
       # Creates a migration template at the given destination. The difference
       # to the default template method is that the migration number is appended
       # to the destination file name.
@@ -26,11 +51,11 @@ module Rails
         destination = File.expand_path(destination || source, self.destination_root)
 
         migration_dir = File.dirname(destination)
-        @migration_number     = next_migration_number(migration_dir)
+        @migration_number     = self.class.next_migration_number(migration_dir)
         @migration_file_name  = File.basename(destination).sub(/\.rb$/, '')
         @migration_class_name = @migration_file_name.camelize
 
-        destination = migration_exists?(migration_dir, @migration_file_name)
+        destination = self.class.migration_exists?(migration_dir, @migration_file_name)
 
         if behavior == :invoke
           raise Error, "Another migration is already named #{@migration_file_name}: #{destination}" if destination
@@ -39,27 +64,6 @@ module Rails
 
         template(source, destination, config)
       end
-
-      protected
-
-        def migration_lookup_at(dirname) #:nodoc:
-          Dir.glob("#{dirname}/[0-9]*_*.rb")
-        end
-
-        def migration_exists?(dirname, file_name) #:nodoc:
-          migration_lookup_at(dirname).grep(/\d+_#{file_name}.rb$/).first
-        end
-
-        def current_migration_number(dirname) #:nodoc:
-          migration_lookup_at(dirname).collect do |file|
-            File.basename(file).split("_").first.to_i
-          end.max.to_i
-        end
-
-        def next_migration_number(dirname) #:nodoc:
-          raise NotImplementError
-        end
-
     end
   end
 end
-- 
1.6.6

