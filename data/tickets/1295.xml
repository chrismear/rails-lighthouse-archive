<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-30T09:47:47+00:00</created-at>
  <creator-id type="integer">36008</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1295</number>
  <permalink>making-with_scope-merge-selects</permalink>
  <priority type="integer">700</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>22 active activerecord patch scope select with_scope</tag>
  <title>Making ActiveRecord #with_scope merge :selects</title>
  <updated-at type="datetime">2011-02-02T19:12:12+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">13</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>FiXato</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When adding :select to scopes, only the first one defined gets used, instead of all the scoped :select arguments being merged together.
Since in Edge Rails the :joins now properly merge together through scopes, it would seem expected behaviour for the :select to do this as well.

The attached patch allows scopes the merge their :select's so the following examples:
  Author.with_scope(:find =&gt; { :select =&gt; 'authors.name'}) do
    scoped_authors = Author.with_scope(:find =&gt; { :select =&gt; 'authors.id'}) do
      Author.find(:all, :conditions =&gt; {:id =&gt; 1})
    end
  end

and:
  Author.scoped(:select =&gt; 'authors.id').scoped(:select =&gt; 'authors.name', :conditions =&gt; &quot;authors.id = #{author.id}&quot;)

will both generate the following SQL:
  SELECT authors.id,authors.name FROM &quot;authors&quot; WHERE (authors.id = 1)  LIMIT 1</original-body>
  <latest-body>When adding :select to scopes, only the first one defined gets used, instead of all the scoped :select arguments being merged together.
Since in Edge Rails the :joins now properly merge together through scopes, it would seem expected behaviour for the :select to do this as well.

The attached patch allows scopes the merge their :select's so the following examples:
  Author.with_scope(:find =&gt; { :select =&gt; 'authors.name'}) do
    scoped_authors = Author.with_scope(:find =&gt; { :select =&gt; 'authors.id'}) do
      Author.find(:all, :conditions =&gt; {:id =&gt; 1})
    end
  end

and:
  Author.scoped(:select =&gt; 'authors.id').scoped(:select =&gt; 'authors.name', :conditions =&gt; &quot;authors.id = #{author.id}&quot;)

will both generate the following SQL:
  SELECT authors.id,authors.name FROM &quot;authors&quot; WHERE (authors.id = 1)  LIMIT 1</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When adding :select to scopes, only the first one defined gets
used, instead of all the scoped :select arguments being merged
together. Since in Edge Rails the :joins now properly merge
together through scopes, it would seem expected behaviour for the
:select to do this as well.&lt;/p&gt;
&lt;p&gt;The attached patch allows scopes the merge their :select's so
the following examples: Author.with_scope(:find =&amp;gt; { :select
=&amp;gt; 'authors.name'}) do&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;scoped_authors = Author.with_scope(:find =&amp;gt; { :select =&amp;gt; 'authors.id'}) do
  Author.find(:all, :conditions =&amp;gt; {:id =&amp;gt; 1})
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;and: Author.scoped(:select =&amp;gt; 'authors.id').scoped(:select
=&amp;gt; 'authors.name', :conditions =&amp;gt; &quot;authors.id =
#{author.id}&quot;)&lt;/p&gt;
&lt;p&gt;will both generate the following SQL: SELECT
authors.id,authors.name FROM &quot;authors&quot; WHERE (authors.id = 1) LIMIT
1&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When adding :select to scopes, only the first one defined gets used, instead of all the scoped :select arguments being merged together.
Since in Edge Rails the :joins now properly merge together through scopes, it would seem expected behaviour for the :select to do this as well.

The attached patch allows scopes the merge their :select's so the following examples:
    Author.with_scope(:find =&gt; { :select =&gt; 'authors.name'}) do
      scoped_authors = Author.with_scope(:find =&gt; { :select =&gt; 'authors.id'}) do
        Author.find(:all, :conditions =&gt; {:id =&gt; 1})
      end
    end

and:
    Author.scoped(:select =&gt; 'authors.id').scoped(:select =&gt; 'authors.name', :conditions =&gt; &quot;authors.id = #{author.id}&quot;)

will both generate the following SQL:
    SELECT authors.id,authors.name FROM &quot;authors&quot; WHERE (authors.id = 1)  LIMIT 1</body>
      <body-html>&lt;div&gt;&lt;p&gt;When adding :select to scopes, only the first one defined gets
used, instead of all the scoped :select arguments being merged
together. Since in Edge Rails the :joins now properly merge
together through scopes, it would seem expected behaviour for the
:select to do this as well.&lt;/p&gt;
&lt;p&gt;The attached patch allows scopes the merge their :select's so
the following examples:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Author.with_scope(:find =&amp;gt; { :select =&amp;gt; 'authors.name'}) do
  scoped_authors = Author.with_scope(:find =&amp;gt; { :select =&amp;gt; 'authors.id'}) do
    Author.find(:all, :conditions =&amp;gt; {:id =&amp;gt; 1})
  end
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Author.scoped(:select =&amp;gt; 'authors.id').scoped(:select =&amp;gt; 'authors.name', :conditions =&amp;gt; &quot;authors.id = #{author.id}&quot;)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will both generate the following SQL:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT authors.id,authors.name FROM &quot;authors&quot; WHERE (authors.id = 1)  LIMIT 1
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-30T09:47:47+00:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 :select active activerecord scope with_scope</tag>
      <title>making with_scope merge :selects</title>
      <updated-at type="datetime">2008-10-30T09:50:48+00:00</updated-at>
      <user-id type="integer">36008</user-id>
      <version type="integer">1</version>
      <user-name>FiXato</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-31T08:58:48+00:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2 :select active activerecord scope with_scope
:title: making with_scope merge :selects
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 :select active activerecord patch scope with_scope</tag>
      <title>[PATCH] making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2008-10-31T08:58:51+00:00</updated-at>
      <user-id type="integer">36008</user-id>
      <version type="integer">2</version>
      <user-name>FiXato</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is a very interesting ticket, which I bet many of us have thought about before.  Merging selects sounds difficult, but not impossible like merging GROUP BY, and it won't work in some cases.

I'd try for an approach like the way we merge :joins, removing duplicates to avoid selecting &quot;users.*,users.*&quot; and getting those columns back twice.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a very interesting ticket, which I bet many of us have
thought about before. Merging selects sounds difficult, but not
impossible like merging GROUP BY, and it won't work in some
cases.&lt;/p&gt;
&lt;p&gt;I'd try for an approach like the way we merge :joins, removing
duplicates to avoid selecting &quot;users.&lt;em&gt;,users.&lt;/em&gt;&quot; and getting
those columns back twice.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-29T05:21:43+00:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 :select active activerecord patch scope with_scope</tag>
      <title>[PATCH] making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2008-12-29T05:21:48+00:00</updated-at>
      <user-id type="integer">25962</user-id>
      <version type="integer">3</version>
      <user-name>David Stevenson</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Whoa, I've recently posted to rails-core mailing list asking for the reason why selects aren't being merged..

Although it may be hard, it's not harder than merging joins for instance so we should definitely give it a try!


+1 on this and I'm starting to hack on this as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Whoa, I've recently posted to rails-core mailing list asking for
the reason why selects aren't being merged..&lt;/p&gt;
&lt;p&gt;Although it may be hard, it's not harder than merging joins for
instance so we should definitely give it a try!&lt;/p&gt;
&lt;p&gt;+1 on this and I'm starting to hack on this as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-01T18:12:05+00:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 :select active activerecord patch scope with_scope</tag>
      <title>[PATCH] making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2009-01-01T18:12:10+00:00</updated-at>
      <user-id type="integer">19954</user-id>
      <version type="integer">4</version>
      <user-name>Pascal Ehlert</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>So to give you a quick update what I found hardest about merging two select statements is to get eventual DISTINCT (ON) clauses right.. 

I doubt this is possible without an SQL parser at all, but maybe someone who is better at SQL than me can have a look..
This would be a feature I'd definitely appreciate.. I've got a patch with everything but this ready..</body>
      <body-html>&lt;div&gt;&lt;p&gt;So to give you a quick update what I found hardest about merging
two select statements is to get eventual DISTINCT (ON) clauses
right..&lt;/p&gt;
&lt;p&gt;I doubt this is possible without an SQL parser at all, but maybe
someone who is better at SQL than me can have a look.. This would
be a feature I'd definitely appreciate.. I've got a patch with
everything but this ready..&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-02T02:55:31+00:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 :select active activerecord patch scope with_scope</tag>
      <title>[PATCH] making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2009-01-02T02:55:33+00:00</updated-at>
      <user-id type="integer">19954</user-id>
      <version type="integer">5</version>
      <user-name>Pascal Ehlert</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>So here comes my take on the problem, now ignoring eventual problems with DISTINCT ON..

If anyone should ever use this it will be obvious that _complex_ DISTINCT ON with subselects in scopes are likely to generate invalid SQL.

However it's not problem to specify them in the actual find.

Let me know what you think, all tests are passing.</body>
      <body-html>&lt;div&gt;&lt;p&gt;So here comes my take on the problem, now ignoring eventual
problems with DISTINCT ON..&lt;/p&gt;
&lt;p&gt;If anyone should ever use this it will be obvious that
&lt;em&gt;complex&lt;/em&gt; DISTINCT ON with subselects in scopes are likely
to generate invalid SQL.&lt;/p&gt;
&lt;p&gt;However it's not problem to specify them in the actual find.&lt;/p&gt;
&lt;p&gt;Let me know what you think, all tests are passing.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-02T12:15:37+00:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 :select active activerecord patch scope with_scope</tag>
      <title>[PATCH] making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2009-01-02T12:15:39+00:00</updated-at>
      <user-id type="integer">19954</user-id>
      <version type="integer">6</version>
      <user-name>Pascal Ehlert</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm willing to try this, but why not just have a different named scope for you select clause?

+0</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm willing to try this, but why not just have a different named
scope for you select clause?&lt;/p&gt;
&lt;p&gt;+0&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-02T21:12:21+00:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 :select active activerecord patch scope with_scope</tag>
      <title>[PATCH] making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2009-01-02T21:12:27+00:00</updated-at>
      <user-id type="integer">21653</user-id>
      <version type="integer">7</version>
      <user-name>Amos King</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Because I found that chaining scopes often makes sense even with select clauses, especially internally from plugins (I'd need it for a db translations plugin which selects and aliases fields from a joined translations table)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Because I found that chaining scopes often makes sense even with
select clauses, especially internally from plugins (I'd need it for
a db translations plugin which selects and aliases fields from a
joined translations table)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-03T01:14:08+00:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 :select active activerecord patch scope with_scope</tag>
      <title>[PATCH] making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2009-01-03T01:14:12+00:00</updated-at>
      <user-id type="integer">19954</user-id>
      <version type="integer">8</version>
      <user-name>Pascal Ehlert</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T21:06:11+00:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- 
:title: &quot;[PATCH] making ActiveRecord #with_scope merge :selects&quot;
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 :select active activerecord patch scope with_scope</tag>
      <title>Making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2009-03-06T21:06:14+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">9</version>
      <user-name>Pratik</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I couldn't find this patch, so I've made a duplicate #2918 - sorry. My patch also fixes the problems with DISTINCTs. I've also included the tiny patch to remove &quot;safe_to_array&quot; method from base.rb: #2916.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I couldn't find this patch, so I've made a duplicate &lt;a href=
&quot;/projects/8994/tickets/2918&quot; title=&quot;Ticket #2918&quot;&gt;#2918&lt;/a&gt; -
sorry. My patch also fixes the problems with DISTINCTs. I've also
included the tiny patch to remove &quot;safe_to_array&quot; method from
base.rb: &lt;a href=&quot;/projects/8994/tickets/2916&quot; title=
&quot;Ticket #2916&quot;&gt;#2916&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-21T10:15:21+01:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 :select active activerecord patch scope with_scope</tag>
      <title>Making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2009-07-21T10:15:26+01:00</updated-at>
      <user-id type="integer">22814</user-id>
      <version type="integer">10</version>
      <user-name>qoobaa</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:36+01:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 :select active activerecord patch scope with_scope</tag>
      <title>Making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2010-05-04T18:48:36+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">11</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:04:34+00:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
:tag: 2.2 :select active activerecord patch scope with_scope
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">700</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>22 active activerecord patch scope select with_scope</tag>
      <title>Making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2011-02-02T19:12:02+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">12</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:04:36+00:00</created-at>
      <creator-id type="integer">36008</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1295</number>
      <permalink>making-with_scope-merge-selects</permalink>
      <priority type="integer">700</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>22 active activerecord patch scope select with_scope</tag>
      <title>Making ActiveRecord #with_scope merge :selects</title>
      <updated-at type="datetime">2011-02-02T19:12:12+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">13</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>FiXato</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1295</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1025ca06c33151d289465f59277150ac34b590bb</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-30T09:47:47+00:00</created-at>
      <filename>make_with_scope_merge_selects.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">58178</id>
      <size type="integer">3215</size>
      <uploader-id type="integer">36008</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/58178/make_with_scope_merge_selects.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>4f9056e5c30ea5902467a662d4ceaa2fdac3f428</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-02T12:15:37+00:00</created-at>
      <filename>merge_scoped_selects.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">74891</id>
      <size type="integer">3882</size>
      <uploader-id type="integer">19954</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/74891/merge_scoped_selects.patch</url>
    </attachment>
  </attachments>
</ticket>
