<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-10-15T21:36:45+01:00</created-at>
  <creator-id type="integer">13334</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">3381</number>
  <permalink>arel-192-compatibility</permalink>
  <priority type="integer">9</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>1.9.2 activerecord arel master</tag>
  <title>ARel 1.9.2 compatibility</title>
  <updated-at type="datetime">2010-10-15T23:01:37+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">4</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Nikolai Lugovoi</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3381</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>1. Array#to_s in 1.9.2 changed to more :inspect-like,

@@@
--- a/lib/arel/engines/sql/relations/relation.rb
+++ b/lib/arel/engines/sql/relations/relation.rb 
@@ -12,7 +12,7 @@
         order = order.zip((0...order.size).to_a).map { |s,i| &quot;id_list.alias_#{i} #{'DESC' if s =~ /\bdesc$/i}&quot; }.join(', ')

         query = build_query \
-          &quot;SELECT     #{select_clauses.to_s}&quot;,
+          &quot;SELECT     #{select_clauses.kind_of?(::Array) ? select_clauses.join(&quot;&quot;) : select_clauses.to_s}&quot;,
           &quot;FROM       #{table_sql(Sql::TableReference.new(self))}&quot;,
           (joins(self)                                   unless joins(self).blank? ),
           (&quot;WHERE     #{where_clauses.join(&quot;\n\tAND &quot;)}&quot; unless wheres.blank?      ),
@@@

2. Some methods aren't delegated, as instance_methods() returns array of symbols:

@@@
--- a/activerecord/lib/active_record/relation.rb
+++ b/activerecord/lib/active_record/relation.rb
@@ -110,7 +110,7 @@ module ActiveRecord
     end

     def respond_to?(method)
-      if @relation.respond_to?(method) || Array.instance_methods.include?(method.to_s)
+      if @relation.respond_to?(method) || [].respond_to?(method)
         true
       else
         super
@@ -121,7 +121,7 @@ module ActiveRecord
       def method_missing(method, *args, &amp;block)
         if @relation.respond_to?(method)
           @relation.send(method, *args, &amp;block)
-        elsif Array.instance_methods.include?(method.to_s)
+        elsif [].respond_to?(method)
           to_a.send(method, *args, &amp;block)
         end
       end
@@@</original-body>
  <latest-body>1. Array#to_s in 1.9.2 changed to more :inspect-like,

@@@
--- a/lib/arel/engines/sql/relations/relation.rb
+++ b/lib/arel/engines/sql/relations/relation.rb 
@@ -12,7 +12,7 @@
         order = order.zip((0...order.size).to_a).map { |s,i| &quot;id_list.alias_#{i} #{'DESC' if s =~ /\bdesc$/i}&quot; }.join(', ')

         query = build_query \
-          &quot;SELECT     #{select_clauses.to_s}&quot;,
+          &quot;SELECT     #{select_clauses.kind_of?(::Array) ? select_clauses.join(&quot;&quot;) : select_clauses.to_s}&quot;,
           &quot;FROM       #{table_sql(Sql::TableReference.new(self))}&quot;,
           (joins(self)                                   unless joins(self).blank? ),
           (&quot;WHERE     #{where_clauses.join(&quot;\n\tAND &quot;)}&quot; unless wheres.blank?      ),
@@@

2. Some methods aren't delegated, as instance_methods() returns array of symbols:

@@@
--- a/activerecord/lib/active_record/relation.rb
+++ b/activerecord/lib/active_record/relation.rb
@@ -110,7 +110,7 @@ module ActiveRecord
     end

     def respond_to?(method)
-      if @relation.respond_to?(method) || Array.instance_methods.include?(method.to_s)
+      if @relation.respond_to?(method) || [].respond_to?(method)
         true
       else
         super
@@ -121,7 +121,7 @@ module ActiveRecord
       def method_missing(method, *args, &amp;block)
         if @relation.respond_to?(method)
           @relation.send(method, *args, &amp;block)
-        elsif Array.instance_methods.include?(method.to_s)
+        elsif [].respond_to?(method)
           to_a.send(method, *args, &amp;block)
         end
       end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;ol&gt;
&lt;li&gt;Array#to_s in 1.9.2 changed to more :inspect-like,&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;
&lt;code&gt;--- a/lib/arel/engines/sql/relations/relation.rb
+++ b/lib/arel/engines/sql/relations/relation.rb 
@@ -12,7 +12,7 @@
         order = order.zip((0...order.size).to_a).map { |s,i| &quot;id_list.alias_#{i} #{'DESC' if s =~ /\bdesc$/i}&quot; }.join(', ')

         query = build_query \
-          &quot;SELECT     #{select_clauses.to_s}&quot;,
+          &quot;SELECT     #{select_clauses.kind_of?(::Array) ? select_clauses.join(&quot;&quot;) : select_clauses.to_s}&quot;,
           &quot;FROM       #{table_sql(Sql::TableReference.new(self))}&quot;,
           (joins(self)                                   unless joins(self).blank? ),
           (&quot;WHERE     #{where_clauses.join(&quot;\n\tAND &quot;)}&quot; unless wheres.blank?      ),&lt;/code&gt;
&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;Some methods aren't delegated, as instance_methods() returns
array of symbols:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;
&lt;code&gt;--- a/activerecord/lib/active_record/relation.rb
+++ b/activerecord/lib/active_record/relation.rb
@@ -110,7 +110,7 @@ module ActiveRecord
     end

     def respond_to?(method)
-      if @relation.respond_to?(method) || Array.instance_methods.include?(method.to_s)
+      if @relation.respond_to?(method) || [].respond_to?(method)
         true
       else
         super
@@ -121,7 +121,7 @@ module ActiveRecord
       def method_missing(method, *args, &amp;amp;block)
         if @relation.respond_to?(method)
           @relation.send(method, *args, &amp;amp;block)
-        elsif Array.instance_methods.include?(method.to_s)
+        elsif [].respond_to?(method)
           to_a.send(method, *args, &amp;amp;block)
         end
       end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>1. Array#to_s in 1.9.2 changed to more :inspect-like,

@@@
--- a/lib/arel/engines/sql/relations/relation.rb
+++ b/lib/arel/engines/sql/relations/relation.rb 
@@ -12,7 +12,7 @@
         order = order.zip((0...order.size).to_a).map { |s,i| &quot;id_list.alias_#{i} #{'DESC' if s =~ /\bdesc$/i}&quot; }.join(', ')

         query = build_query \
-          &quot;SELECT     #{select_clauses.to_s}&quot;,
+          &quot;SELECT     #{select_clauses.kind_of?(::Array) ? select_clauses.join(&quot;&quot;) : select_clauses.to_s}&quot;,
           &quot;FROM       #{table_sql(Sql::TableReference.new(self))}&quot;,
           (joins(self)                                   unless joins(self).blank? ),
           (&quot;WHERE     #{where_clauses.join(&quot;\n\tAND &quot;)}&quot; unless wheres.blank?      ),
@@@

2. Some methods aren't delegated, as instance_methods() returns array of symbols:

@@@
--- a/activerecord/lib/active_record/relation.rb
+++ b/activerecord/lib/active_record/relation.rb
@@ -110,7 +110,7 @@ module ActiveRecord
     end

     def respond_to?(method)
-      if @relation.respond_to?(method) || Array.instance_methods.include?(method.to_s)
+      if @relation.respond_to?(method) || [].respond_to?(method)
         true
       else
         super
@@ -121,7 +121,7 @@ module ActiveRecord
       def method_missing(method, *args, &amp;block)
         if @relation.respond_to?(method)
           @relation.send(method, *args, &amp;block)
-        elsif Array.instance_methods.include?(method.to_s)
+        elsif [].respond_to?(method)
           to_a.send(method, *args, &amp;block)
         end
       end
@@@</body>
      <body-html>&lt;div&gt;&lt;ol&gt;
&lt;li&gt;Array#to_s in 1.9.2 changed to more :inspect-like,&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;
&lt;code&gt;--- a/lib/arel/engines/sql/relations/relation.rb
+++ b/lib/arel/engines/sql/relations/relation.rb 
@@ -12,7 +12,7 @@
         order = order.zip((0...order.size).to_a).map { |s,i| &quot;id_list.alias_#{i} #{'DESC' if s =~ /\bdesc$/i}&quot; }.join(', ')

         query = build_query \
-          &quot;SELECT     #{select_clauses.to_s}&quot;,
+          &quot;SELECT     #{select_clauses.kind_of?(::Array) ? select_clauses.join(&quot;&quot;) : select_clauses.to_s}&quot;,
           &quot;FROM       #{table_sql(Sql::TableReference.new(self))}&quot;,
           (joins(self)                                   unless joins(self).blank? ),
           (&quot;WHERE     #{where_clauses.join(&quot;\n\tAND &quot;)}&quot; unless wheres.blank?      ),&lt;/code&gt;
&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;Some methods aren't delegated, as instance_methods() returns
array of symbols:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;
&lt;code&gt;--- a/activerecord/lib/active_record/relation.rb
+++ b/activerecord/lib/active_record/relation.rb
@@ -110,7 +110,7 @@ module ActiveRecord
     end

     def respond_to?(method)
-      if @relation.respond_to?(method) || Array.instance_methods.include?(method.to_s)
+      if @relation.respond_to?(method) || [].respond_to?(method)
         true
       else
         super
@@ -121,7 +121,7 @@ module ActiveRecord
       def method_missing(method, *args, &amp;amp;block)
         if @relation.respond_to?(method)
           @relation.send(method, *args, &amp;amp;block)
-        elsif Array.instance_methods.include?(method.to_s)
+        elsif [].respond_to?(method)
           to_a.send(method, *args, &amp;amp;block)
         end
       end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-15T21:36:45+01:00</created-at>
      <creator-id type="integer">13334</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3381</number>
      <permalink>arel-192-compatibility</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>1.9.2 activerecord arel master</tag>
      <title>ARel 1.9.2 compatibility</title>
      <updated-at type="datetime">2009-10-15T21:36:51+01:00</updated-at>
      <user-id type="integer">13334</user-id>
      <version type="integer">1</version>
      <user-name>Nikolai Lugovoi</user-name>
      <creator-name>Nikolai Lugovoi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3381</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-10T13:18:08+00:00</created-at>
      <creator-id type="integer">13334</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3381</number>
      <permalink>arel-192-compatibility</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>1.9.2 activerecord arel master</tag>
      <title>ARel 1.9.2 compatibility</title>
      <updated-at type="datetime">2009-11-10T13:18:12+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Nikolai Lugovoi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3381</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-10T20:00:52+00:00</created-at>
      <creator-id type="integer">13334</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3381</number>
      <permalink>arel-192-compatibility</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>1.9.2 activerecord arel master</tag>
      <title>ARel 1.9.2 compatibility</title>
      <updated-at type="datetime">2009-11-10T20:00:54+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Nikolai Lugovoi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3381</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:37+01:00</created-at>
      <creator-id type="integer">13334</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">3381</number>
      <permalink>arel-192-compatibility</permalink>
      <priority type="integer">9</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>1.9.2 activerecord arel master</tag>
      <title>ARel 1.9.2 compatibility</title>
      <updated-at type="datetime">2010-10-15T23:01:37+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Nikolai Lugovoi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3381</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
