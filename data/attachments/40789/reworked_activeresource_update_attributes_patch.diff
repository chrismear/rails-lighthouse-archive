<!DOCTYPE html
    PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
 <title>#7308: reworked_activeresource_update_attributes_patch.diff - Rails Trac - Trac</title><link rel="start" href="/wiki" /><link rel="search" href="/search" /><link rel="help" href="/wiki/TracGuide" /><link rel="stylesheet" href="/trac/css/trac.css" type="text/css" /><link rel="stylesheet" href="/trac/css/diff.css" type="text/css" /><link rel="stylesheet" href="/trac/css/code.css" type="text/css" /><link rel="icon" href="/chrome/common/trac.ico" type="image/x-icon" /><link rel="shortcut icon" href="/chrome/common/trac.ico" type="image/x-icon" /><link rel="up" href="/ticket/7308" title="Ticket #7308" /><link rel="alternate" href="/attachment/ticket/7308/reworked_activeresource_update_attributes_patch.diff?format=txt" title="Plain Text" type="text/x-diff; charset=iso-8859-15" /><link rel="alternate" href="/attachment/ticket/7308/reworked_activeresource_update_attributes_patch.diff?format=raw" title="Original Format" type="text/x-diff; charset=iso-8859-15" /><style type="text/css">@import url(/site/screen.css);
</style>
 <script type="text/javascript" src="/trac/js/trac.js"></script>
</head>
<body>
<div id="TopNav">
  <img src="http://www.rubyonrails.org/images/favicon.png" style="vertical-align: middle; border: none; margin-right: 5px"/>
  <a href="http://www.rubyonrails.org/">Ruby on Rails</a> |
  <a href="http://www.rubyonrails.org/screencasts">Screencasts</a> |
  <a href="http://www.rubyonrails.org/down">Download</a> |
  <a href="http://www.rubyonrails.org/docs">Documentation</a> |
  <a href="http://weblog.rubyonrails.org">Weblog</a> |
  <a href="http://www.rubyonrails.org/community">Community</a> |
  <a href="http://dev.rubyonrails.org">Source</a>
</div>

<div id="banner">

<div id="header"><h1><a href="http://dev.rubyonrails.org/">Rails Trac</a></h1></div>

<form id="search" action="/search" method="get">
 <div>
  <label for="proj-search">Search:</label>
  <input type="text" id="proj-search" name="q" size="10" accesskey="f" value="" />
  <input type="submit" value="Search" />
  <input type="hidden" name="wiki" value="on" />
  <input type="hidden" name="changeset" value="on" />
  <input type="hidden" name="ticket" value="on" />
 </div>
</form>



<div id="metanav" class="nav"><ul><li class="first"><a href="/login">Login</a></li><li><a href="/settings">Settings</a></li><li><a accesskey="6" href="/wiki/TracGuide">Help/Guide</a></li><li><a href="/about">About Trac</a></li><li class="last"><a href="/register">Register</a></li></ul></div>
</div>

<div id="mainnav" class="nav"><ul><li class="first"><a accesskey="1" href="/wiki">Wiki</a></li><li><a accesskey="2" href="/timeline">Timeline</a></li><li><a accesskey="3" href="/roadmap">Roadmap</a></li><li><a href="/browser">Browse Source</a></li><li><a href="/report">View Tickets</a></li><li class="last"><a accesskey="4" href="/search">Search</a></li></ul></div>
<div id="main">




<div id="ctxtnav" class="nav"></div>

<div id="content" class="attachment">


 <h1><a href="/ticket/7308">Ticket #7308</a>: reworked_activeresource_update_attributes_patch.diff</h1>
 <table id="info" summary="Description"><tbody><tr>
   <th scope="col">
    File reworked_activeresource_update_attributes_patch.diff, 4.5 kB 
    (added by EmmanuelOga,  7 months ago)
   </th></tr><tr>
   <td class="message"><p>
Same patch as before but reworked because the patch utility can't find the context of the changes (I'm sure this is happening because the patch was created months ago)
</p>
</td>
  </tr>
 </tbody></table>
 <div id="preview">
   


<div class="diff"><ul class="entries"><li class="entry">
  <h2>test/base_test.rb</h2>
  <table class="inline" summary="Differences" cellspacing="0">
   <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
   <thead><tr>
    <th>old</th>
    <th>new</th>
    <th>&nbsp;</th>
   </tr></thead><tbody><tr><th>383</th><th>383</th><td class="l"><span>&nbsp; &nbsp; assert_raises(ActiveResource::ResourceConflict) { Person.find(2).save }</span>&nbsp;</td></tr><tr><th>384</th><th>384</th><td class="l"><span>&nbsp; end</span>&nbsp;</td></tr><tr><th>385</th><th>385</th><td class="l"><span></span>&nbsp;</td></tr></tbody><tbody class="add"><tr class="first"><th>&nbsp;</th><th>386</th><td class="r"><ins>&nbsp; def test_update_attribute</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>387</th><td class="r"><ins>&nbsp; &nbsp; matz = Person.find(:first)</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>388</th><td class="r"><ins>&nbsp; &nbsp; assert matz.update_attribute(&#34;name&#34;, &#34;David&#34;)</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>389</th><td class="r"><ins>&nbsp; &nbsp; assert_equal &#34;David&#34;, matz.name</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>390</th><td class="r"><ins>&nbsp; &nbsp; assert_equal 1, matz.id&nbsp; &nbsp;# make sure don't wipe out other attrs.</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>391</th><td class="r"><ins>&nbsp; &nbsp; </ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>392</th><td class="r"><ins>&nbsp; &nbsp; # Test exceptions get raised</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>393</th><td class="r"><ins>&nbsp; &nbsp; ActiveResource::HttpMock.respond_to do |mock|</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>394</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; mock.put&nbsp; &nbsp; &#34;/people/1.xml&#34;,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{}, nil, 409</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>395</th><td class="r"><ins>&nbsp; &nbsp; end</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>396</th><td class="r"><ins>&nbsp; &nbsp; assert_raise(ActiveResource::ResourceConflict) { matz.update_attribute(&#34;name&#34;, &#34;David&#34;) }</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>397</th><td class="r"><ins>&nbsp; end</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>398</th><td class="r"><ins></ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>399</th><td class="r"><ins>&nbsp; def test_update_attributes</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>400</th><td class="r"><ins>&nbsp; &nbsp; matz = Person.find(:first)</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>401</th><td class="r"><ins>&nbsp; &nbsp; matz.sex = 'male'</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>402</th><td class="r"><ins>&nbsp; &nbsp; assert matz.update_attributes(&#34;name&#34; =&gt; &#34;David&#34;, &#34;sex&#34; =&gt; &#34;female&#34;)</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>403</th><td class="r"><ins>&nbsp; &nbsp; assert_equal &#34;David&#34;, matz.name</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>404</th><td class="r"><ins>&nbsp; &nbsp; assert_equal &#34;female&#34;, matz.sex</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>405</th><td class="r"><ins>&nbsp; &nbsp; assert_equal 1, matz.id&nbsp; &nbsp;# make sure don't wipe out other attrs.</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>406</th><td class="r"><ins>&nbsp; &nbsp; </ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>407</th><td class="r"><ins>&nbsp; &nbsp; # Test exceptions get raised</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>408</th><td class="r"><ins>&nbsp; &nbsp; ActiveResource::HttpMock.respond_to do |mock|</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>409</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; mock.put&nbsp; &nbsp; &#34;/people/1.xml&#34;,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{}, nil, 409</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>410</th><td class="r"><ins>&nbsp; &nbsp; end</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>411</th><td class="r"><ins>&nbsp; &nbsp; assert_raise(ActiveResource::ResourceConflict) { matz.update_attributes(&#34;name&#34; =&gt; &#34;David&#34;, &#34;sex&#34; =&gt; &#34;&#34;) }</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>412</th><td class="r"><ins>&nbsp; end</ins>&nbsp;</td></tr><tr class="last"><th>&nbsp;</th><th>413</th><td class="r"><ins></ins>&nbsp;</td></tr></tbody><tbody><tr><th>386</th><th>414</th><td class="l"><span>&nbsp; def test_destroy</span>&nbsp;</td></tr><tr><th>387</th><th>415</th><td class="l"><span>&nbsp; &nbsp; assert Person.find(1).destroy</span>&nbsp;</td></tr><tr><th>388</th><th>416</th><td class="l"><span>&nbsp; &nbsp; ActiveResource::HttpMock.respond_to do |mock|</span>&nbsp;</td></tr></tbody>
  </table>
 </li><li class="entry">
  <h2>lib/active_resource/base.rb</h2>
  <table class="inline" summary="Differences" cellspacing="0">
   <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
   <thead><tr>
    <th>old</th>
    <th>new</th>
    <th>&nbsp;</th>
   </tr></thead><tbody><tr><th>668</th><th>668</th><td class="l"><span>&nbsp; &nbsp; def destroy</span>&nbsp;</td></tr><tr><th>669</th><th>669</th><td class="l"><span>&nbsp; &nbsp; &nbsp; connection.delete(element_path, self.class.headers)</span>&nbsp;</td></tr><tr><th>670</th><th>670</th><td class="l"><span>&nbsp; &nbsp; end</span>&nbsp;</td></tr></tbody><tbody class="add"><tr class="first"><th>&nbsp;</th><th>671</th><td class="r"><ins>&nbsp; &nbsp; </ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>672</th><td class="r"><ins>&nbsp; &nbsp; # Updates a single attribute and requests that the resource be saved.</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>673</th><td class="r"><ins>&nbsp; &nbsp; #</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>674</th><td class="r"><ins>&nbsp; &nbsp; # Note: Unlike ActiveRecord::Base.update_attribute, this method &lt;b&gt;is&lt;/b&gt; subject to normal validation</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>675</th><td class="r"><ins>&nbsp; &nbsp; # routines as an update sends the whole body of the resource in the request.&nbsp; (See Validations).</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>676</th><td class="r"><ins>&nbsp; &nbsp; # As such, this method is equivalent to calling update_attributes with a single attribute/value pair.</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>677</th><td class="r"><ins>&nbsp; &nbsp; #</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>678</th><td class="r"><ins>&nbsp; &nbsp; # Note: Also unlike ActiveRecord::Base, ActiveResource currently uses string versions of attribute</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>679</th><td class="r"><ins>&nbsp; &nbsp; # names, so use &lt;tt&gt;update_attribute(&#34;name&#34;, &#34;ryan&#34;)&lt;/tt&gt; &lt;em&gt;instead of&lt;/em&gt; &lt;tt&gt;update_attribute(:name, &#34;ryan&#34;)&lt;/tt&gt;.</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>680</th><td class="r"><ins>&nbsp; &nbsp; #</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>681</th><td class="r"><ins>&nbsp; &nbsp; # If the saving fails because of a connection or remote service error, an exception will be raised.&nbsp; If saving</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>682</th><td class="r"><ins>&nbsp; &nbsp; # fails because the resource is invalid then &lt;tt&gt;false&lt;/tt&gt; will be returned.</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>683</th><td class="r"><ins>&nbsp; &nbsp; #&nbsp; &nbsp; </ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>684</th><td class="r"><ins>&nbsp; &nbsp; def update_attribute(name, value); update_attributes(name =&gt; value); end</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>685</th><td class="r"><ins>&nbsp;</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>686</th><td class="r"><ins>&nbsp; &nbsp; # Updates this resource withe all the attributes from the passed-in Hash and requests that</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>687</th><td class="r"><ins>&nbsp; &nbsp; # the record be saved.</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>688</th><td class="r"><ins>&nbsp; &nbsp; #</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>689</th><td class="r"><ins>&nbsp; &nbsp; # If the saving fails because of a connection or remote service error, an exception will be raised.&nbsp; If saving</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>690</th><td class="r"><ins>&nbsp; &nbsp; # fails because the resource is invalid then &lt;tt&gt;false&lt;/tt&gt; will be returned.</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>691</th><td class="r"><ins>&nbsp; &nbsp; #</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>692</th><td class="r"><ins>&nbsp; &nbsp; # Note: Though this request can be made with a partial set of the resource's attributes, the full body</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>693</th><td class="r"><ins>&nbsp; &nbsp; # of the request will still be sent in the save request to the remote service.&nbsp; Also note that</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>694</th><td class="r"><ins>&nbsp; &nbsp; # ActiveResource currently uses string versions of attribute</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>695</th><td class="r"><ins>&nbsp; &nbsp; # names, so use &lt;tt&gt;update_attributes(&#34;name&#34; =&gt; &#34;ryan&#34;)&lt;/tt&gt; &lt;em&gt;instead of&lt;/em&gt; &lt;tt&gt;update_attribute(:name =&gt; &#34;ryan&#34;)&lt;/tt&gt;.</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>696</th><td class="r"><ins>&nbsp; &nbsp; #&nbsp; &nbsp; </ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>697</th><td class="r"><ins>&nbsp; &nbsp; def update_attributes(attributes)</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>698</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; load(attributes) &amp;&amp; save</ins>&nbsp;</td></tr><tr class="last"><th>&nbsp;</th><th>699</th><td class="r"><ins>&nbsp; &nbsp; end&nbsp; &nbsp; </ins>&nbsp;</td></tr></tbody><tbody><tr><th>671</th><th>700</th><td class="l"><span></span>&nbsp;</td></tr><tr><th>672</th><th>701</th><td class="l"><span>&nbsp; &nbsp; # Evaluates to &lt;tt&gt;true&lt;/tt&gt; if this resource is not +new?+ and is</span>&nbsp;</td></tr><tr><th>673</th><th>702</th><td class="l"><span>&nbsp; &nbsp; # found on the remote service.&nbsp; Using this method, you can check for</span>&nbsp;</td></tr></tbody>
  </table>
 </li><li class="entry">
  <h2>README</h2>
  <table class="inline" summary="Differences" cellspacing="0">
   <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
   <thead><tr>
    <th>old</th>
    <th>new</th>
    <th>&nbsp;</th>
   </tr></thead><tbody><tr><th>143</th><th>143</th><td class="l"><span>&nbsp; ryan.first = 'Rizzle'</span>&nbsp;</td></tr><tr><th>144</th><th>144</th><td class="l"><span>&nbsp; ryan.save&nbsp; #=&gt; true</span>&nbsp;</td></tr><tr><th>145</th><th>145</th><td class="l"><span></span>&nbsp;</td></tr></tbody><tbody class="add"><tr class="first"><th>&nbsp;</th><th>146</th><td class="r"><ins>&lt;tt&gt;update_attribute&lt;/tt&gt; and &lt;tt&gt;update_attributes&lt;/tt&gt; work very similarly to ActiveRecord except that both</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>147</th><td class="r"><ins>are subject to validation errors and the string attribute name is expected:</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>148</th><td class="r"><ins></ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>149</th><td class="r"><ins>&nbsp; # &lt;person&gt;&lt;first&gt;Ryan&lt;/first&gt;&lt;/person&gt;</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>150</th><td class="r"><ins>&nbsp; #</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>151</th><td class="r"><ins>&nbsp; # is submitted as the body on</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>152</th><td class="r"><ins>&nbsp; #</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>153</th><td class="r"><ins>&nbsp; # PUT http://api.people.com:3000/people/1.xml</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>154</th><td class="r"><ins>&nbsp; #</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>155</th><td class="r"><ins>&nbsp; # when save is called on an existing Person object.&nbsp; An empty response is</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>156</th><td class="r"><ins>&nbsp; # is expected with code (204)</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>157</th><td class="r"><ins>&nbsp; #</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>158</th><td class="r"><ins>&nbsp; ryan = Person.find(1)</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>159</th><td class="r"><ins>&nbsp; ryan.update_attribute('first', 'Ryan')&nbsp; #=&gt; true</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>160</th><td class="r"><ins></ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>161</th><td class="r"><ins>&nbsp; # Or</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>162</th><td class="r"><ins>&nbsp; ryan = Person.find(1)</ins>&nbsp;</td></tr><tr><th>&nbsp;</th><th>163</th><td class="r"><ins>&nbsp; ryan.update_attribute('first', 'Rizzle')&nbsp; #=&gt; true</ins>&nbsp;</td></tr><tr class="last"><th>&nbsp;</th><th>164</th><td class="r"><ins></ins>&nbsp;</td></tr></tbody><tbody><tr><th>146</th><th>165</th><td class="l"><span>==== Delete</span>&nbsp;</td></tr><tr><th>147</th><th>166</th><td class="l"><span></span>&nbsp;</td></tr><tr><th>148</th><th>167</th><td class="l"><span>Destruction of a resource can be invoked as a class and instance method of the resource.</span>&nbsp;</td></tr></tbody>
  </table>
 </li>
</ul></div>

 </div>
 


</div>
<script type="text/javascript">searchHighlight()</script>
<div id="altlinks"><h3>Download in other formats:</h3><ul><li class="first"><a href="/attachment/ticket/7308/reworked_activeresource_update_attributes_patch.diff?format=txt">Plain Text</a></li><li class="last"><a href="/attachment/ticket/7308/reworked_activeresource_update_attributes_patch.diff?format=raw">Original Format</a></li></ul></div>

</div>

<div id="footer">
 <hr />
 <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/trac/trac_logo_mini.png" height="30" width="107"
   alt="Trac Powered"/></a>
 <p class="left">
  Powered by <a href="/about"><strong>Trac 0.10.5dev</strong></a><br />
  By <a href="http://www.edgewall.org/">Edgewall Software</a>.
 </p>
 <p class="right">
  Visit the Ruby on Rails project at<br /><a href="http://rubyonrails.org/">http://rubyonrails.org/</a>
 </p>
</div>


 </body>
</html>

