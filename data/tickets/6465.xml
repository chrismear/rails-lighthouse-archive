<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-24T14:00:22+00:00</created-at>
  <creator-id type="integer">77847</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6465</number>
  <permalink>problem-with-autoload-and-nested-modulesclasses</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>autoload const_missing &quot;nested objects&quot;</tag>
  <title>Problem with autoload and nested modules/classes</title>
  <updated-at type="datetime">2011-03-05T18:39:55+00:00</updated-at>
  <user-id type="integer">7697</user-id>
  <version type="integer">2</version>
  <user-name>Andrew White</user-name>
  <creator-name>Alexander Stanko</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6465</url>
  <priority-name>Low</priority-name>
  <original-body>Hello!

Let I have extras/ in autoload_paths, and also I have classes:

extras/gate/flight.rb
@@@ ruby
class Gate::Flight
end
@@@

extras/gate/reciever.rb
@@@ ruby
class Gate::Reciever
  Flight #load Gate::Flight for us
  Flight #ArgumentError: Gate is not missing constant Flight! 
end
@@@


Is it normal behavior, and I should always type Gate::Flight in all nested modules/classes?
If not, I make a patch to fix this issue.</original-body>
  <latest-body>Hello!

Let I have extras/ in autoload_paths, and also I have classes:

extras/gate/flight.rb
@@@ ruby
class Gate::Flight
end
@@@

extras/gate/reciever.rb
@@@ ruby
class Gate::Reciever
  Flight #load Gate::Flight for us
  Flight #ArgumentError: Gate is not missing constant Flight! 
end
@@@


Is it normal behavior, and I should always type Gate::Flight in all nested modules/classes?
If not, I make a patch to fix this issue.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello!&lt;/p&gt;
&lt;p&gt;Let I have extras/ in autoload_paths, and also I have
classes:&lt;/p&gt;
&lt;p&gt;extras/gate/flight.rb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Gate::Flight
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;extras/gate/reciever.rb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Gate::Reciever
  Flight #load Gate::Flight for us
  Flight #ArgumentError: Gate is not missing constant Flight! 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Is it normal behavior, and I should always type Gate::Flight in
all nested modules/classes?&lt;br&gt;
If not, I make a patch to fix this issue.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello!

Let I have extras/ in autoload_paths, and also I have classes:

extras/gate/flight.rb
@@@ ruby
class Gate::Flight
end
@@@

extras/gate/reciever.rb
@@@ ruby
class Gate::Reciever
  Flight #load Gate::Flight for us
  Flight #ArgumentError: Gate is not missing constant Flight! 
end
@@@


Is it normal behavior, and I should always type Gate::Flight in all nested modules/classes?
If not, I make a patch to fix this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello!&lt;/p&gt;
&lt;p&gt;Let I have extras/ in autoload_paths, and also I have
classes:&lt;/p&gt;
&lt;p&gt;extras/gate/flight.rb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Gate::Flight
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;extras/gate/reciever.rb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Gate::Reciever
  Flight #load Gate::Flight for us
  Flight #ArgumentError: Gate is not missing constant Flight! 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Is it normal behavior, and I should always type Gate::Flight in
all nested modules/classes?&lt;br&gt;
If not, I make a patch to fix this issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-24T14:00:22+00:00</created-at>
      <creator-id type="integer">77847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6465</number>
      <permalink>problem-with-autoload-and-nested-modulesclasses</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>autoload const_missing &quot;nested objects&quot;</tag>
      <title>Problem with autoload and nested modules/classes</title>
      <updated-at type="datetime">2011-02-24T14:00:25+00:00</updated-at>
      <user-id type="integer">77847</user-id>
      <version type="integer">1</version>
      <user-name>Alexander Stanko</user-name>
      <creator-name>Alexander Stanko</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6465</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is a duplicate of #5383 - if you rewrite your class definitions so that they're not inline everything will work, e.g:

@@@ ruby
  module Gate
    class Flight; end
    class Receiver
      Flight #load 
      Flight 
    end
  end
@@@

This is because Ruby searches for constants in Object first when defined as ModuleName::ClassName but inside the parent module when nested properly.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a duplicate of &lt;a href=&quot;/projects/8994/tickets/5383&quot;
title=&quot;Ticket #5383&quot;&gt;#5383&lt;/a&gt; - if you rewrite your class
definitions so that they're not inline everything will work,
e.g:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  module Gate
    class Flight; end
    class Receiver
      Flight #load 
      Flight 
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is because Ruby searches for constants in Object first when
defined as ModuleName::ClassName but inside the parent module when
nested properly.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-05T18:39:49+00:00</created-at>
      <creator-id type="integer">77847</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6465</number>
      <permalink>problem-with-autoload-and-nested-modulesclasses</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>autoload const_missing &quot;nested objects&quot;</tag>
      <title>Problem with autoload and nested modules/classes</title>
      <updated-at type="datetime">2011-03-05T18:39:55+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>Alexander Stanko</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6465</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>0ea64b29746ca820c7610b4e80d2c00c0070a273</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-24T14:00:22+00:00</created-at>
      <filename>0001-fix-x-is-not-missing-constant-y-problem-for-nested-m.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">928662</id>
      <size type="integer">2184</size>
      <uploader-id type="integer">77847</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/928662/0001-fix-x-is-not-missing-constant-y-problem-for-nested-m.patch</url>
    </attachment>
  </attachments>
</ticket>
