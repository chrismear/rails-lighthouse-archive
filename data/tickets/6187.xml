<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">7341</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-17T18:49:07+00:00</created-at>
  <creator-id type="integer">129396</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6187</number>
  <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
  <updated-at type="datetime">2011-05-05T01:01:00+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">15</version>
  <user-name>rails</user-name>
  <creator-name>fhirzall</creator-name>
  <assigned-user-name>Piotr Sarnacki</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
  <priority-name>Low</priority-name>
  <original-body>As of 3.0.3, add_index fails if the generated index is longer than 64 chars: I've confirmed that rolling back to rails 3.0.1 does not cause the same problem:

&lt;code&gt;
add_index :facility_inventory_items, [:facility_id, :inventory_item_id], :name =&gt; &quot;index_fii_facility_id_inventory_item_id&quot;
Index name 'index_facility_inventory_items_on_facility_id_and_inventory_item_id' on table 'facility_inventory_items' is too long; the limit is 63 characters
&lt;/code&gt;


The workaround is to specify the :name in add_index.

&lt;code&gt;
add_index :long_table_name, [:long_column_name, :col2], :name =&gt; &quot;short_index_name&quot;
&lt;/code&gt;</original-body>
  <latest-body>As of 3.0.3, add_index fails if the generated index is longer than 64 chars: I've confirmed that rolling back to rails 3.0.1 does not cause the same problem:

&lt;code&gt;
add_index :facility_inventory_items, [:facility_id, :inventory_item_id], :name =&gt; &quot;index_fii_facility_id_inventory_item_id&quot;
Index name 'index_facility_inventory_items_on_facility_id_and_inventory_item_id' on table 'facility_inventory_items' is too long; the limit is 63 characters
&lt;/code&gt;


The workaround is to specify the :name in add_index.

&lt;code&gt;
add_index :long_table_name, [:long_column_name, :col2], :name =&gt; &quot;short_index_name&quot;
&lt;/code&gt;</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;As of 3.0.3, add_index fails if the generated index is longer
than 64 chars: I've confirmed that rolling back to rails 3.0.1 does
not cause the same problem:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
add_index :facility_inventory_items, [:facility_id,
:inventory_item_id], :name =&amp;gt;
&quot;index_fii_facility_id_inventory_item_id&quot;&lt;br&gt;
Index name
'index_facility_inventory_items_on_facility_id_and_inventory_item_id'
on table 'facility_inventory_items' is too long; the limit is 63
characters&lt;br&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The workaround is to specify the :name in add_index.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
add_index :long_table_name, [:long_column_name, :col2], :name =&amp;gt;
&quot;short_index_name&quot;&lt;br&gt;&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As of 3.0.3, add_index fails if the generated index is longer than 64 chars: I've confirmed that rolling back to rails 3.0.1 does not cause the same problem:

&lt;code&gt;
add_index :facility_inventory_items, [:facility_id, :inventory_item_id], :name =&gt; &quot;index_fii_facility_id_inventory_item_id&quot;
Index name 'index_facility_inventory_items_on_facility_id_and_inventory_item_id' on table 'facility_inventory_items' is too long; the limit is 63 characters
&lt;/code&gt;


The workaround is to specify the :name in add_index.

&lt;code&gt;
add_index :long_table_name, [:long_column_name, :col2], :name =&gt; &quot;short_index_name&quot;
&lt;/code&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;As of 3.0.3, add_index fails if the generated index is longer
than 64 chars: I've confirmed that rolling back to rails 3.0.1 does
not cause the same problem:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
add_index :facility_inventory_items, [:facility_id,
:inventory_item_id], :name =&amp;gt;
&quot;index_fii_facility_id_inventory_item_id&quot;&lt;br&gt;
Index name
'index_facility_inventory_items_on_facility_id_and_inventory_item_id'
on table 'facility_inventory_items' is too long; the limit is 63
characters&lt;br&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The workaround is to specify the :name in add_index.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
add_index :long_table_name, [:long_column_name, :col2], :name =&amp;gt;
&quot;short_index_name&quot;&lt;br&gt;&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-17T13:54:17+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-17T13:54:20+00:00</updated-at>
      <user-id type="integer">129396</user-id>
      <version type="integer">1</version>
      <user-name>fhirzall</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is proper behavior. Postgres allows longer names, but cuts it anyway. Try something like that in dbconsole:

    CREATE INDEX blablablablablablablablablablablablablablablablablablablablabla_this_will_be_cut_anyway ON posts (title);

and then:

    # CREATE INDEX blablablablablablablablablablablablablablablablablablablablabla ON posts (title);
    ERROR:  relation &quot;blablablablablablablablablablablablablablablablablablablablabla&quot; already exists

    # \di
                                                   List of relations
     Schema |                              Name                               | Type  | Owner  |       Table       
    --------+-----------------------------------------------------------------+-------+--------+-------------------
     public | blablablablablablablablablablablablablablablablablablablablabla | index | drogus | posts</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is proper behavior. Postgres allows longer names, but cuts
it anyway. Try something like that in dbconsole:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;CREATE INDEX blablablablablablablablablablablablablablablablablablablablabla_this_will_be_cut_anyway ON posts (title);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and then:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# CREATE INDEX blablablablablablablablablablablablablablablablablablablablabla ON posts (title);
ERROR:  relation &quot;blablablablablablablablablablablablablablablablablablablablabla&quot; already exists

# \di
                                               List of relations
 Schema |                              Name                               | Type  | Owner  |       Table       
--------+-----------------------------------------------------------------+-------+--------+-------------------
 public | blablablablablablablablablablablablablablablablablablablablabla | index | drogus | posts&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-17T14:54:58+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-17T14:55:08+00:00</updated-at>
      <user-id type="integer">7341</user-id>
      <version type="integer">2</version>
      <user-name>Piotr Sarnacki</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-17T14:55:12+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-17T14:55:21+00:00</updated-at>
      <user-id type="integer">7341</user-id>
      <version type="integer">3</version>
      <user-name>Piotr Sarnacki</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I understand that PG cuts it off, but doesn't it make more sense that rails not throw an exception and continue running migrations? This behavior breaks several apps that didn't manually specify an index name for indexes on more than 2-3 decently sized columns. This was also reported on issue #3252 and was fixed as part of the patch for #3452 on rails 2.3.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I understand that PG cuts it off, but doesn't it make more sense
that rails not throw an exception and continue running migrations?
This behavior breaks several apps that didn't manually specify an
index name for indexes on more than 2-3 decently sized columns.
This was also reported on issue &lt;a href=
&quot;/projects/8994/tickets/3252&quot; title=&quot;Ticket #3252&quot;&gt;#3252&lt;/a&gt; and
was fixed as part of the patch for &lt;a href=
&quot;/projects/8994/tickets/3452&quot; title=&quot;Ticket #3452&quot;&gt;#3452&lt;/a&gt; on
rails 2.3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-17T15:13:59+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-17T15:14:08+00:00</updated-at>
      <user-id type="integer">129396</user-id>
      <version type="integer">4</version>
      <user-name>fhirzall</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I would personally leave it out like that, but I can see your point. If it was fixed earlier in 2.3, I'm opening that ticket for further discussion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I would personally leave it out like that, but I can see your
point. If it was fixed earlier in 2.3, I'm opening that ticket for
further discussion.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-17T16:14:34+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- 
:state: invalid
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-17T17:03:04+00:00</updated-at>
      <user-id type="integer">7341</user-id>
      <version type="integer">5</version>
      <user-name>Piotr Sarnacki</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7341</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>fhirzall: I checked history for changes in that matter and it looks like:

rails &lt; 2.3.4 didn't care
2.3.4 &lt;= rails &lt; 2.3.6 - exception caused by #3252
2.3.6 &lt;= rails &lt; 3.0.3 - ignoring long indexes with warning in logs
rails &gt;= 3.0.3 - error instead of warning in logs

In that case, you probably don't want behavior from rails &gt;= 2.3.6, as your migrations were passing, but without actually creating indexes.

My opinion is that, although long indexes names require an action now, it's much better to notify user about the problem than ignore it or let postgres ignore it.

When you were creating the ticket, which of these approaches have you had in mind?</body>
      <body-html>&lt;div&gt;&lt;p&gt;fhirzall: I checked history for changes in that matter and it
looks like:&lt;/p&gt;
&lt;p&gt;rails &amp;lt; 2.3.4 didn't care&lt;br&gt;
2.3.4 &amp;lt;= rails &amp;lt; 2.3.6 - exception caused by &lt;a href=
&quot;/projects/8994/tickets/3252&quot; title=&quot;Ticket #3252&quot;&gt;#3252&lt;/a&gt;&lt;br&gt;
2.3.6 &amp;lt;= rails &amp;lt; 3.0.3 - ignoring long indexes with warning
in logs&lt;br&gt;
rails &amp;gt;= 3.0.3 - error instead of warning in logs&lt;/p&gt;
&lt;p&gt;In that case, you probably don't want behavior from rails &amp;gt;=
2.3.6, as your migrations were passing, but without actually
creating indexes.&lt;/p&gt;
&lt;p&gt;My opinion is that, although long indexes names require an
action now, it's much better to notify user about the problem than
ignore it or let postgres ignore it.&lt;/p&gt;
&lt;p&gt;When you were creating the ticket, which of these approaches
have you had in mind?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-17T18:49:07+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-18T08:55:33+00:00</updated-at>
      <user-id type="integer">7341</user-id>
      <version type="integer">6</version>
      <user-name>Piotr Sarnacki</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name>Piotr Sarnacki</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7341</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Oh, few days ago I was thinking to write a patch for it, because this problem is really annoying (for me). I was thinking about two strategies: first is always to raise an exception when name is too long, second is to try to cut the index name to 63 chars (for postgres) and then if there is already an index with such name raise an exception. 

Piotr, what do you think is the best way to deal with it?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oh, few days ago I was thinking to write a patch for it, because
this problem is really annoying (for me). I was thinking about two
strategies: first is always to raise an exception when name is too
long, second is to try to cut the index name to 63 chars (for
postgres) and then if there is already an index with such name
raise an exception.&lt;/p&gt;
&lt;p&gt;Piotr, what do you think is the best way to deal with it?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-18T11:41:56+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-18T11:42:06+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">7</version>
      <user-name>2kan</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name>Piotr Sarnacki</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7341</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>IMO the best way to handle this is to truncate the index name and display a warning to the user. My reasoning is that an exception will break many existing apps, and not creating the actual index will throw people off (that didn't pay attention to the warning and assumed truncation).

That's my 0.02, what did you have in mind Piotr?

Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;IMO the best way to handle this is to truncate the index name
and display a warning to the user. My reasoning is that an
exception will break many existing apps, and not creating the
actual index will throw people off (that didn't pay attention to
the warning and assumed truncation).&lt;/p&gt;
&lt;p&gt;That's my 0.02, what did you have in mind Piotr?&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-18T11:52:42+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-18T11:52:50+00:00</updated-at>
      <user-id type="integer">129396</user-id>
      <version type="integer">8</version>
      <user-name>fhirzall</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name>Piotr Sarnacki</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7341</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've made patch (with test): when index name is too long we try to cut it and create index with shorter name. If index with shorter name already exists an exception is raised.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've made patch (with test): when index name is too long we try
to cut it and create index with shorter name. If index with shorter
name already exists an exception is raised.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-19T13:06:24+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-19T13:06:36+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">9</version>
      <user-name>2kan</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name>Piotr Sarnacki</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7341</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>fhirzall: I just wanted to know which behavior you consider as the appropriate one.

2kan: I don't think that I can merge that. While it may be ok for only postgres, where index names are truncated anyway, it's not expected for the other databases.

I'm still against removing the error, but I'll talk with someone from core team about that.</body>
      <body-html>&lt;div&gt;&lt;p&gt;fhirzall: I just wanted to know which behavior you consider as
the appropriate one.&lt;/p&gt;
&lt;p&gt;2kan: I don't think that I can merge that. While it may be ok
for only postgres, where index names are truncated anyway, it's not
expected for the other databases.&lt;/p&gt;
&lt;p&gt;I'm still against removing the error, but I'll talk with someone
from core team about that.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-21T13:34:02+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-21T13:47:15+00:00</updated-at>
      <user-id type="integer">7341</user-id>
      <version type="integer">10</version>
      <user-name>Piotr Sarnacki</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name>Piotr Sarnacki</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7341</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Piotr, any change 2kan's patch can be redone for Postgres only, then?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Piotr, any change 2kan's patch can be redone for Postgres only,
then?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-21T13:44:02+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-21T13:44:12+00:00</updated-at>
      <user-id type="integer">11102</user-id>
      <version type="integer">11</version>
      <user-name>Yaroslav Markin</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name>Piotr Sarnacki</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7341</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Piotr, yes, but from another point of view it's not expected when rails generates index name which cause exception or db error. Maybe we should do it this way: we shouldn't truncate user defined index name and truncate names automatically generated by rails?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Piotr, yes, but from another point of view it's not expected
when rails generates index name which cause exception or db error.
Maybe we should do it this way: we shouldn't truncate user defined
index name and truncate names automatically generated by rails?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-21T14:11:24+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2010-12-21T14:11:35+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">12</version>
      <user-name>2kan</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name>Piotr Sarnacki</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7341</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm on pgsql 9 with Rails 2.3:

&lt;code&gt;
  SQL (1.4ms)   BEGIN
Index name 'index_ratings_on_rating_type_and_rating_id_and_rated_type_and_rating' on table 'ratings' is too long; the limit is 63 characters. Skipping.
  SQL (1.4ms)   INSERT INTO schema_migrations (version) VALUES ('20110204162542')
  SQL (1.1ms)   COMMIT
&lt;/code&gt;

When I ran the migration, it appeared that everything went fine, but I didn't see the index created.  I saw the above in my logs.  It looks like it just skipped over creating the index without any complaints.

Very surprising.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm on pgsql 9 with Rails 2.3:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
SQL (1.4ms) BEGIN Index name
'index_ratings_on_rating_type_and_rating_id_and_rated_type_and_rating'
on table 'ratings' is too long; the limit is 63 characters.
Skipping.&lt;br&gt;
SQL (1.4ms) INSERT INTO schema_migrations (version) VALUES
('20110204162542') SQL (1.1ms) COMMIT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When I ran the migration, it appeared that everything went fine,
but I didn't see the index created. I saw the above in my logs. It
looks like it just skipped over creating the index without any
complaints.&lt;/p&gt;
&lt;p&gt;Very surprising.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-04T16:36:59+00:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2011-02-04T16:37:12+00:00</updated-at>
      <user-id type="integer">395</user-id>
      <version type="integer">13</version>
      <user-name>Joe Van Dyk</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name>Piotr Sarnacki</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7341</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-05-05T01:00:07+01:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2011-05-05T01:00:30+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">14</version>
      <user-name>rails</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name>Piotr Sarnacki</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7341</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-05-05T01:00:08+01:00</created-at>
      <creator-id type="integer">129396</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6187</number>
      <permalink>postgresql-and-rails-303-migrations-fail-with-index-name-length-64-chars</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>PostgreSQL and Rails 3.0.3 migrations fail with index name length &gt; 64 chars</title>
      <updated-at type="datetime">2011-05-05T01:01:00+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">15</version>
      <user-name>rails</user-name>
      <creator-name>fhirzall</creator-name>
      <assigned-user-name>Piotr Sarnacki</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6187</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>7a6d7c1a49f352cf262de39eefb5403cb2a88341</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-19T13:06:24+00:00</created-at>
      <filename>6187-fix-against-rails-edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">826315</id>
      <size type="integer">3828</size>
      <uploader-id type="integer">65953</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/826315/6187-fix-against-rails-edge.diff</url>
    </attachment>
  </attachments>
</ticket>
