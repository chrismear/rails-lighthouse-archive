From 4a25fe9bf2f93265cfd770c5dfe8401fdaa24545 Mon Sep 17 00:00:00 2001
From: Elad Meidar <elad@eizesus.com>
Date: Fri, 25 Sep 2009 17:51:20 -0400
Subject: [PATCH] LH3218 - default scope overriding attributes on :create, fixed to overrite attributes with scoped defaults only if no value was specificied explicitly in the #create or #new calls of if a default column value was assigned

---
 activerecord/lib/active_record/base.rb         |    8 +++++++-
 activerecord/test/cases/method_scoping_test.rb |    4 ++++
 2 files changed, 11 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/base.rb b/activerecord/lib/active_record/base.rb
index 502fe04..26cd001 100755
--- a/activerecord/lib/active_record/base.rb
+++ b/activerecord/lib/active_record/base.rb
@@ -2417,11 +2417,17 @@ module ActiveRecord #:nodoc:
       # hence you can't have attributes that aren't part of the table columns.
       def initialize(attributes = nil)
         @attributes = attributes_from_column_definition
+        attrs_with_default_values = @attributes.collect {|att, val| att if val.present? }.compact
         @attributes_cache = {}
         @new_record = true
         ensure_proper_type
         self.attributes = attributes unless attributes.nil?
-        self.class.send(:scope, :create).each { |att,value| self.send("#{att}=", value) } if self.class.send(:scoped?, :create)
+        if self.class.send(:scoped?, :create)
+          create_scope_attrs = self.class.send(:scope, :create).stringify_keys!          
+          create_scope_attrs.each do |att, val|
+            self.send("#{att}=", val) if self.send("#{att}").blank? || attrs_with_default_values.include?(att)
+          end
+        end
         result = yield self if block_given?
         _run_initialize_callbacks
         result
diff --git a/activerecord/test/cases/method_scoping_test.rb b/activerecord/test/cases/method_scoping_test.rb
index 35f7bc5..8a1b635 100644
--- a/activerecord/test/cases/method_scoping_test.rb
+++ b/activerecord/test/cases/method_scoping_test.rb
@@ -602,6 +602,10 @@ class DefaultScopingTest < ActiveRecord::TestCase
     assert_equal 'Jamis', DeveloperCalledJamis.create!.name
   end
 
+  def test_create_attribute_overwrites_default
+    assert_equal 'David', DeveloperCalledJamis.create!(:name => 'David').name
+  end
+  
   def test_default_scoping_with_threads
     scope = [{ :create => {}, :find => { :order => 'salary DESC' } }]
 
-- 
1.6.0.2

