<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-04T12:40:13+00:00</created-at>
  <creator-id type="integer">101927</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6520</number>
  <permalink>running-migrations-in-different-postgresql-schemas-is-inconsistent</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>activerecord databases postgresql rails3.0.5</tag>
  <title>Running migrations in different PostgreSQL schemas is inconsistent</title>
  <updated-at type="datetime">2011-03-04T12:40:19+00:00</updated-at>
  <user-id type="integer">101927</user-id>
  <version type="integer">1</version>
  <user-name>Jigar Patel</user-name>
  <creator-name>Jigar Patel</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6520</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hello,

I have been researching on using multiple Postgres schemas in a single rails app. One option is to develop the entire app in one schema (default schema) and then create other shemas and dump the database structure in them. Other option is to support running migrations in specified schema and maintain the schema_migrations table in each schema.

I have made some patches, but I am not sure of the correctness of the approach. Here is what I have done -
1. Modify this method - ActiveRecord::Migrator.schema_migrations_table_name - to return the sm_table name as schema_name.table_name if the adapter is PostgreSQL.
2. Add an option of specifying the schema name in migration rake tasks.

This would result in this flow -
rake db:migrate SCHEMA=demo

Rake tasks will have following steps -
a) Set current schema search path
b) Run the migration (as it is done now)
c) Set schema_search_path to old schema search path.

Now a developer can develop in a &quot;dev&quot; schema, and run the migration in any specified schema or all the schemas.

Can somebody guide me, so that I can write test cases for this?</original-body>
  <latest-body>Hello,

I have been researching on using multiple Postgres schemas in a single rails app. One option is to develop the entire app in one schema (default schema) and then create other shemas and dump the database structure in them. Other option is to support running migrations in specified schema and maintain the schema_migrations table in each schema.

I have made some patches, but I am not sure of the correctness of the approach. Here is what I have done -
1. Modify this method - ActiveRecord::Migrator.schema_migrations_table_name - to return the sm_table name as schema_name.table_name if the adapter is PostgreSQL.
2. Add an option of specifying the schema name in migration rake tasks.

This would result in this flow -
rake db:migrate SCHEMA=demo

Rake tasks will have following steps -
a) Set current schema search path
b) Run the migration (as it is done now)
c) Set schema_search_path to old schema search path.

Now a developer can develop in a &quot;dev&quot; schema, and run the migration in any specified schema or all the schemas.

Can somebody guide me, so that I can write test cases for this?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;I have been researching on using multiple Postgres schemas in a
single rails app. One option is to develop the entire app in one
schema (default schema) and then create other shemas and dump the
database structure in them. Other option is to support running
migrations in specified schema and maintain the schema_migrations
table in each schema.&lt;/p&gt;
&lt;p&gt;I have made some patches, but I am not sure of the correctness
of the approach. Here is what I have done -&lt;br&gt;
1. Modify this method -
ActiveRecord::Migrator.schema_migrations_table_name - to return the
sm_table name as schema_name.table_name if the adapter is
PostgreSQL.&lt;br&gt;
2. Add an option of specifying the schema name in migration rake
tasks.&lt;/p&gt;
&lt;p&gt;This would result in this flow -&lt;br&gt;
rake db:migrate SCHEMA=demo&lt;/p&gt;
&lt;p&gt;Rake tasks will have following steps -&lt;br&gt;
a) Set current schema search path&lt;br&gt;
b) Run the migration (as it is done now)&lt;br&gt;
c) Set schema_search_path to old schema search path.&lt;/p&gt;
&lt;p&gt;Now a developer can develop in a &quot;dev&quot; schema, and run the
migration in any specified schema or all the schemas.&lt;/p&gt;
&lt;p&gt;Can somebody guide me, so that I can write test cases for
this?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello,

I have been researching on using multiple Postgres schemas in a single rails app. One option is to develop the entire app in one schema (default schema) and then create other shemas and dump the database structure in them. Other option is to support running migrations in specified schema and maintain the schema_migrations table in each schema.

I have made some patches, but I am not sure of the correctness of the approach. Here is what I have done -
1. Modify this method - ActiveRecord::Migrator.schema_migrations_table_name - to return the sm_table name as schema_name.table_name if the adapter is PostgreSQL.
2. Add an option of specifying the schema name in migration rake tasks.

This would result in this flow -
rake db:migrate SCHEMA=demo

Rake tasks will have following steps -
a) Set current schema search path
b) Run the migration (as it is done now)
c) Set schema_search_path to old schema search path.

Now a developer can develop in a &quot;dev&quot; schema, and run the migration in any specified schema or all the schemas.

Can somebody guide me, so that I can write test cases for this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;I have been researching on using multiple Postgres schemas in a
single rails app. One option is to develop the entire app in one
schema (default schema) and then create other shemas and dump the
database structure in them. Other option is to support running
migrations in specified schema and maintain the schema_migrations
table in each schema.&lt;/p&gt;
&lt;p&gt;I have made some patches, but I am not sure of the correctness
of the approach. Here is what I have done -&lt;br&gt;
1. Modify this method -
ActiveRecord::Migrator.schema_migrations_table_name - to return the
sm_table name as schema_name.table_name if the adapter is
PostgreSQL.&lt;br&gt;
2. Add an option of specifying the schema name in migration rake
tasks.&lt;/p&gt;
&lt;p&gt;This would result in this flow -&lt;br&gt;
rake db:migrate SCHEMA=demo&lt;/p&gt;
&lt;p&gt;Rake tasks will have following steps -&lt;br&gt;
a) Set current schema search path&lt;br&gt;
b) Run the migration (as it is done now)&lt;br&gt;
c) Set schema_search_path to old schema search path.&lt;/p&gt;
&lt;p&gt;Now a developer can develop in a &quot;dev&quot; schema, and run the
migration in any specified schema or all the schemas.&lt;/p&gt;
&lt;p&gt;Can somebody guide me, so that I can write test cases for
this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-04T12:40:13+00:00</created-at>
      <creator-id type="integer">101927</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6520</number>
      <permalink>running-migrations-in-different-postgresql-schemas-is-inconsistent</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord databases postgresql rails3.0.5</tag>
      <title>Running migrations in different PostgreSQL schemas is inconsistent</title>
      <updated-at type="datetime">2011-03-04T12:40:19+00:00</updated-at>
      <user-id type="integer">101927</user-id>
      <version type="integer">1</version>
      <user-name>Jigar Patel</user-name>
      <creator-name>Jigar Patel</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6520</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
