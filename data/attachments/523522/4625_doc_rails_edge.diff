From e6a891fd9a1135b7cb562fe50a14484920f0f3f2 Mon Sep 17 00:00:00 2001
From: Neeraj Singh <neerajdotname@gmail.com>
Date: Mon, 17 May 2010 10:28:59 -0400
Subject: [PATCH] class_inheritable_accessor should let subclasses inherit from the superclass's attribute

[#4625 state:resolved]
---
 .../core_ext/class/inheritable_attributes.rb       |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/class/inheritable_attributes.rb b/activesupport/lib/active_support/core_ext/class/inheritable_attributes.rb
index 2b8e2b5..0132b5d 100644
--- a/activesupport/lib/active_support/core_ext/class/inheritable_attributes.rb
+++ b/activesupport/lib/active_support/core_ext/class/inheritable_attributes.rb
@@ -9,6 +9,8 @@ end
 # their parents' attributes, instead of just a pointer to the same. This means that the child can add elements
 # to, for example, an array without those additions being shared with either their parent, siblings, or
 # children, which is unlike the regular class-level attributes that are shared across the entire hierarchy.
+# Note that subclasses are give a copy of parent attributes at runtime when subclass is created. After the
+# subclass has been created any change in parent attributes will not be reflected in child.
 class Class # :nodoc:
   def class_inheritable_reader(*syms)
     options = syms.extract_options!
-- 
1.6.5.2

