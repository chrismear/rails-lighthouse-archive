<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">12714</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-12T03:21:27+01:00</created-at>
  <creator-id type="integer">106139</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5089</number>
  <permalink>activesupportcallbacks-rescuable-true-does-not-work-for-errs-in-before-callbacks-patch</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activesupport callbacks patch</tag>
  <title>ActiveSupport::Callbacks :rescuable =&gt; true does not work for errors in :before callbacks [Patch]</title>
  <updated-at type="datetime">2011-02-02T17:15:47+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">8</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>hjdivad</creator-name>
  <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5089</url>
  <priority-name>Low</priority-name>
  <original-body>Steps To Reproduce
==================

    require 'active_support'
    require 'active_support/callbacks'

    class Foo
      include ActiveSupport::Callbacks
      define_callbacks :event, :rescuable =&gt; true

      set_callback :event, :before do
        raise &quot;Error&quot;
      end
      set_callback :event, :after do
        puts &quot;After callback still run.&quot;
      end

      def run
        run_callbacks :event
      end
    end

    Foo.new.run


Expected Behaviour
==================
&quot;After callback still run.&quot; should be printed, and then the exception raised.
i.e. the behaviour (relative the :after callback) should be the same as for the
following:


    require 'active_support'
    require 'active_support/callbacks'

    class Foo
      include ActiveSupport::Callbacks
      define_callbacks :event, :rescuable =&gt; true

      set_callback :event, :after do
        puts &quot;After callback still run.&quot;
      end

      def run
        run_callbacks :event do
          raise &quot;Error&quot;
        end
      end
    end

    Foo.new.run


Actual Behaviour
================
The string is not printed (i.e. the :after callback is not invoked), but the
exception is raised.


Proposed Patch
==============
See [1] for a github branch with a test case and patch.  Alternatively, see
attached patch.


References
==========
1. http://github.com/hjdivad/rails/tree/issue-5089</original-body>
  <latest-body>Steps To Reproduce
==================

    require 'active_support'
    require 'active_support/callbacks'

    class Foo
      include ActiveSupport::Callbacks
      define_callbacks :event, :rescuable =&gt; true

      set_callback :event, :before do
        raise &quot;Error&quot;
      end
      set_callback :event, :after do
        puts &quot;After callback still run.&quot;
      end

      def run
        run_callbacks :event
      end
    end

    Foo.new.run


Expected Behaviour
==================
&quot;After callback still run.&quot; should be printed, and then the exception raised.
i.e. the behaviour (relative the :after callback) should be the same as for the
following:


    require 'active_support'
    require 'active_support/callbacks'

    class Foo
      include ActiveSupport::Callbacks
      define_callbacks :event, :rescuable =&gt; true

      set_callback :event, :after do
        puts &quot;After callback still run.&quot;
      end

      def run
        run_callbacks :event do
          raise &quot;Error&quot;
        end
      end
    end

    Foo.new.run


Actual Behaviour
================
The string is not printed (i.e. the :after callback is not invoked), but the
exception is raised.


Proposed Patch
==============
See [1] for a github branch with a test case and patch.  Alternatively, see
attached patch.


References
==========
1. http://github.com/hjdivad/rails/tree/issue-5089</latest-body>
  <original-body-html>&lt;div&gt;&lt;h1&gt;Steps To Reproduce&lt;/h1&gt;
&lt;pre&gt;
&lt;code&gt;require 'active_support'
require 'active_support/callbacks'

class Foo
  include ActiveSupport::Callbacks
  define_callbacks :event, :rescuable =&amp;gt; true

  set_callback :event, :before do
    raise &quot;Error&quot;
  end
  set_callback :event, :after do
    puts &quot;After callback still run.&quot;
  end

  def run
    run_callbacks :event
  end
end

Foo.new.run&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;Expected Behaviour&lt;/h1&gt;
&lt;p&gt;&quot;After callback still run.&quot; should be printed, and then the
exception raised. i.e. the behaviour (relative the :after callback)
should be the same as for the&lt;br&gt;
following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;require 'active_support'
require 'active_support/callbacks'

class Foo
  include ActiveSupport::Callbacks
  define_callbacks :event, :rescuable =&amp;gt; true

  set_callback :event, :after do
    puts &quot;After callback still run.&quot;
  end

  def run
    run_callbacks :event do
      raise &quot;Error&quot;
    end
  end
end

Foo.new.run&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;Actual Behaviour&lt;/h1&gt;
&lt;p&gt;The string is not printed (i.e. the :after callback is not
invoked), but the&lt;br&gt;
exception is raised.&lt;/p&gt;
&lt;h1&gt;Proposed Patch&lt;/h1&gt;
&lt;p&gt;See &lt;a href=&quot;/projects/8994/changesets/1&quot; title=
&quot;Changeset [1]&quot;&gt;[1]&lt;/a&gt; for a github branch with a test case and
patch. Alternatively, see&lt;br&gt;
attached patch.&lt;/p&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=
&quot;http://github.com/hjdivad/rails/tree/issue-5089&quot;&gt;http://github.com/hjdivad/rails/tree/issue-5089&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Steps To Reproduce
==================

    require 'active_support'
    require 'active_support/callbacks'

    class Foo
      include ActiveSupport::Callbacks
      define_callbacks :event, :rescuable =&gt; true

      set_callback :event, :before do
        raise &quot;Error&quot;
      end
      set_callback :event, :after do
        puts &quot;After callback still run.&quot;
      end

      def run
        run_callbacks :event
      end
    end

    Foo.new.run


Expected Behaviour
==================
&quot;After callback still run.&quot; should be printed, and then the exception raised.
i.e. the behaviour (relative the :after callback) should be the same as for the
following:


    require 'active_support'
    require 'active_support/callbacks'

    class Foo
      include ActiveSupport::Callbacks
      define_callbacks :event, :rescuable =&gt; true

      set_callback :event, :after do
        puts &quot;After callback still run.&quot;
      end

      def run
        run_callbacks :event do
          raise &quot;Error&quot;
        end
      end
    end

    Foo.new.run


Actual Behaviour
================
The string is not printed (i.e. the :after callback is not invoked), but the
exception is raised.


Proposed Patch
==============
See [1] for a github branch with a test case and patch.  Alternatively, see
attached patch.


References
==========
1. http://github.com/hjdivad/rails/tree/issue-5089</body>
      <body-html>&lt;div&gt;&lt;h1&gt;Steps To Reproduce&lt;/h1&gt;
&lt;pre&gt;
&lt;code&gt;require 'active_support'
require 'active_support/callbacks'

class Foo
  include ActiveSupport::Callbacks
  define_callbacks :event, :rescuable =&amp;gt; true

  set_callback :event, :before do
    raise &quot;Error&quot;
  end
  set_callback :event, :after do
    puts &quot;After callback still run.&quot;
  end

  def run
    run_callbacks :event
  end
end

Foo.new.run&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;Expected Behaviour&lt;/h1&gt;
&lt;p&gt;&quot;After callback still run.&quot; should be printed, and then the
exception raised. i.e. the behaviour (relative the :after callback)
should be the same as for the&lt;br&gt;
following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;require 'active_support'
require 'active_support/callbacks'

class Foo
  include ActiveSupport::Callbacks
  define_callbacks :event, :rescuable =&amp;gt; true

  set_callback :event, :after do
    puts &quot;After callback still run.&quot;
  end

  def run
    run_callbacks :event do
      raise &quot;Error&quot;
    end
  end
end

Foo.new.run&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;Actual Behaviour&lt;/h1&gt;
&lt;p&gt;The string is not printed (i.e. the :after callback is not
invoked), but the&lt;br&gt;
exception is raised.&lt;/p&gt;
&lt;h1&gt;Proposed Patch&lt;/h1&gt;
&lt;p&gt;See &lt;a href=&quot;/projects/8994/changesets/1&quot; title=
&quot;Changeset [1]&quot;&gt;[1]&lt;/a&gt; for a github branch with a test case and
patch. Alternatively, see&lt;br&gt;
attached patch.&lt;/p&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=
&quot;http://github.com/hjdivad/rails/tree/issue-5089&quot;&gt;http://github.com/hjdivad/rails/tree/issue-5089&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-12T03:21:27+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5089</number>
      <permalink>activesupportcallbacks-rescuable-true-does-not-work-for-errs-in-before-callbacks-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;callbacks active_support&quot;</tag>
      <title>ActiveSupport::Callbacks :rescuable =&gt; true does not work for errs in :before callbacks [Patch]</title>
      <updated-at type="datetime">2010-07-12T03:24:21+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">1</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5089</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-12T03:24:42+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;callbacks active_support\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5089</number>
      <permalink>activesupportcallbacks-rescuable-true-does-not-work-for-errs-in-before-callbacks-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support callbacks</tag>
      <title>ActiveSupport::Callbacks :rescuable =&gt; true does not work for errs in :before callbacks [Patch]</title>
      <updated-at type="datetime">2010-07-12T03:24:43+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">2</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5089</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-12T03:24:54+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_support callbacks
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5089</number>
      <permalink>activesupportcallbacks-rescuable-true-does-not-work-for-errs-in-before-callbacks-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport callbacks</tag>
      <title>ActiveSupport::Callbacks :rescuable =&gt; true does not work for errs in :before callbacks [Patch]</title>
      <updated-at type="datetime">2010-07-12T03:24:57+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">3</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5089</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-12T03:25:39+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- 
:title: ActiveSupport::Callbacks :rescuable =&gt; true does not work for errs in :before callbacks [Patch]
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5089</number>
      <permalink>activesupportcallbacks-rescuable-true-does-not-work-for-errs-in-before-callbacks-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport callbacks</tag>
      <title>ActiveSupport::Callbacks :rescuable =&gt; true does not work for errors in :before callbacks [Patch]</title>
      <updated-at type="datetime">2010-07-12T03:25:39+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">4</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5089</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-12T03:53:23+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5089</number>
      <permalink>activesupportcallbacks-rescuable-true-does-not-work-for-errs-in-before-callbacks-patch</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport callbacks</tag>
      <title>ActiveSupport::Callbacks :rescuable =&gt; true does not work for errors in :before callbacks [Patch]</title>
      <updated-at type="datetime">2010-07-12T03:53:28+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">5</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>hjdivad</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5089</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I have uploaded a better patch than the original, and also updated the git
branch.  My original patch broke callbacks with :before and :around with
:rescuable =&gt; true.

Also, quite apart from running :after callbacks when :before callbacks raised
exceptions, it seems there was a general problem with the :rescuable feature
with :around callbacks that resulted from `rescued_error` being first declared
in a block, and thus undefined at the conditional raise.


    def compile(key=nil, object=nil)
      method = []
      method &lt;&lt; &quot;value = nil&quot;
      method &lt;&lt; &quot;halted = false&quot;

    # The :around callback start will result in a method invocation and the
    # beginning of a block...
      each do |callback|
        method &lt;&lt; callback.start(key, object)
      end

    # This causes rescued_error to be local to that block...
      if config[:rescuable]
        method &lt;&lt; &quot;rescued_error = nil&quot;
        method &lt;&lt; &quot;begin&quot;
      end

      method &lt;&lt; &quot;value = yield if block_given? &amp;&amp; !halted&quot;

      if config[:rescuable]
        method &lt;&lt; &quot;rescue Exception =&gt; e&quot;
        method &lt;&lt; &quot;rescued_error = e&quot;
        method &lt;&lt; &quot;end&quot;
      end

      reverse_each do |callback|
        method &lt;&lt; callback.end(key, object)
      end

    # and thus undefined at this line
      method &lt;&lt; &quot;raise rescued_error if rescued_error&quot; if config[:rescuable]
      method &lt;&lt; &quot;halted ? false : (block_given? ? value : true)&quot;
      method.compact.join(&quot;\n&quot;)
    end</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have uploaded a better patch than the original, and also
updated the git&lt;br&gt;
branch. My original patch broke callbacks with :before and :around
with&lt;br&gt;
:rescuable =&amp;gt; true.&lt;/p&gt;
&lt;p&gt;Also, quite apart from running :after callbacks when :before
callbacks raised&lt;br&gt;
exceptions, it seems there was a general problem with the
:rescuable feature&lt;br&gt;
with :around callbacks that resulted from
&lt;code&gt;rescued_error&lt;/code&gt; being first declared&lt;br&gt;
in a block, and thus undefined at the conditional raise.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def compile(key=nil, object=nil)
  method = []
  method &amp;lt;&amp;lt; &quot;value = nil&quot;
  method &amp;lt;&amp;lt; &quot;halted = false&quot;

# The :around callback start will result in a method invocation and the
# beginning of a block...
  each do |callback|
    method &amp;lt;&amp;lt; callback.start(key, object)
  end

# This causes rescued_error to be local to that block...
  if config[:rescuable]
    method &amp;lt;&amp;lt; &quot;rescued_error = nil&quot;
    method &amp;lt;&amp;lt; &quot;begin&quot;
  end

  method &amp;lt;&amp;lt; &quot;value = yield if block_given? &amp;amp;&amp;amp; !halted&quot;

  if config[:rescuable]
    method &amp;lt;&amp;lt; &quot;rescue Exception =&amp;gt; e&quot;
    method &amp;lt;&amp;lt; &quot;rescued_error = e&quot;
    method &amp;lt;&amp;lt; &quot;end&quot;
  end

  reverse_each do |callback|
    method &amp;lt;&amp;lt; callback.end(key, object)
  end

# and thus undefined at this line
  method &amp;lt;&amp;lt; &quot;raise rescued_error if rescued_error&quot; if config[:rescuable]
  method &amp;lt;&amp;lt; &quot;halted ? false : (block_given? ? value : true)&quot;
  method.compact.join(&quot;\n&quot;)
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-15T21:44:12+01:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activesupport callbacks
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5089</number>
      <permalink>activesupportcallbacks-rescuable-true-does-not-work-for-errs-in-before-callbacks-patch</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport callbacks patch</tag>
      <title>ActiveSupport::Callbacks :rescuable =&gt; true does not work for errors in :before callbacks [Patch]</title>
      <updated-at type="datetime">2010-07-15T21:44:14+01:00</updated-at>
      <user-id type="integer">106139</user-id>
      <version type="integer">6</version>
      <user-name>hjdivad</user-name>
      <creator-name>hjdivad</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5089</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:36:06+00:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5089</number>
      <permalink>activesupportcallbacks-rescuable-true-does-not-work-for-errs-in-before-callbacks-patch</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport callbacks patch</tag>
      <title>ActiveSupport::Callbacks :rescuable =&gt; true does not work for errors in :before callbacks [Patch]</title>
      <updated-at type="datetime">2011-02-02T17:13:02+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>hjdivad</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5089</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:36:08+00:00</created-at>
      <creator-id type="integer">106139</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5089</number>
      <permalink>activesupportcallbacks-rescuable-true-does-not-work-for-errs-in-before-callbacks-patch</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activesupport callbacks patch</tag>
      <title>ActiveSupport::Callbacks :rescuable =&gt; true does not work for errors in :before callbacks [Patch]</title>
      <updated-at type="datetime">2011-02-02T17:15:47+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>hjdivad</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5089</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>ba3656d844987dd6553e8f4c83a3ea65b46dc25e</code>
      <content-type>application/octet-stream</content-type>
      <created-at type="datetime">2010-07-12T03:21:27+01:00</created-at>
      <filename>patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">590634</id>
      <size type="integer">1935</size>
      <uploader-id type="integer">106139</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/590634/patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>5cb42e474832b1763a2e5ee19bd7b91bb326d0bf</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-15T21:44:12+01:00</created-at>
      <filename>issue-5089.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">594501</id>
      <size type="integer">4153</size>
      <uploader-id type="integer">106139</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/594501/issue-5089.diff</url>
    </attachment>
  </attachments>
</ticket>
