<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-11T19:20:01+01:00</created-at>
  <creator-id type="integer">9830</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1027</number>
  <permalink>optimization-to-not-hit-the-db-when-preloading-empty-association-sets</permalink>
  <priority type="integer">464</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord eager_loading patch</tag>
  <title>Optimization to not hit the db when preloading empty association sets</title>
  <updated-at type="datetime">2008-12-18T19:22:12+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">6</version>
  <user-name>Repository</user-name>
  <creator-name>RSL</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1027</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Current code hits the db whether there's any ids to preload or not. Optimization to only hit db when the ids array is not empty. Passes all current tests but I'm not sure how to make a test using Test::Unit which asserts that the database isn't hit. Could add tests with mocha if needed.</original-body>
  <latest-body>Current code hits the db whether there's any ids to preload or not. Optimization to only hit db when the ids array is not empty. Passes all current tests but I'm not sure how to make a test using Test::Unit which asserts that the database isn't hit. Could add tests with mocha if needed.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Current code hits the db whether there's any ids to preload or
not. Optimization to only hit db when the ids array is not empty.
Passes all current tests but I'm not sure how to make a test using
Test::Unit which asserts that the database isn't hit. Could add
tests with mocha if needed.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Current code hits the db whether there's any ids to preload or not. Optimization to only hit db when the ids array is not empty. Passes all current tests but I'm not sure how to make a test using Test::Unit which asserts that the database isn't hit. Could add tests with mocha if needed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Current code hits the db whether there's any ids to preload or
not. Optimization to only hit db when the ids array is not empty.
Passes all current tests but I'm not sure how to make a test using
Test::Unit which asserts that the database isn't hit. Could add
tests with mocha if needed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-11T19:20:01+01:00</created-at>
      <creator-id type="integer">9830</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1027</number>
      <permalink>optimization-to-not-hit-the-db-when-preloading-empty-association-sets</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord eager_loading patch</tag>
      <title>Optimization to not hit the db when preloading empty association sets</title>
      <updated-at type="datetime">2008-09-11T19:20:10+01:00</updated-at>
      <user-id type="integer">9830</user-id>
      <version type="integer">1</version>
      <user-name>RSL</user-name>
      <creator-name>RSL</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1027</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Optimized patch in preload_belongs_to_association method.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Optimized patch in preload_belongs_to_association method.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-15T19:10:59+01:00</created-at>
      <creator-id type="integer">9830</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1027</number>
      <permalink>optimization-to-not-hit-the-db-when-preloading-empty-association-sets</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord eager_loading patch</tag>
      <title>Optimization to not hit the db when preloading empty association sets</title>
      <updated-at type="datetime">2008-09-15T19:11:01+01:00</updated-at>
      <user-id type="integer">9830</user-id>
      <version type="integer">2</version>
      <user-name>RSL</user-name>
      <creator-name>RSL</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1027</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here's the case where I discovered this behavior:

@@@
class User &lt; ActiveRecord::Base
  has_many :memberships
  has_many :sites, :through =&gt; :memberships
  belongs_to :current_membership, :class_name =&gt; &quot;Membership&quot;
end

class Membership &lt; ActiveRecord::Base
  belongs_to :user
  belongs_to :site
end

class Site &lt; ActiveRecord::Base
  has_many :memberships
  has_many :users, :through =&gt; :memberships
end
@@@

which generates the following SQL:

@@@
  User Load (0.3ms)   SELECT * FROM `users` LIMIT 1
  Membership Columns (2.2ms)   SHOW FIELDS FROM `memberships`
  Membership Load (0.2ms)   SELECT * FROM `memberships` WHERE (`memberships`.`id` = NULL) 
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's the case where I discovered this behavior:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class User &amp;lt; ActiveRecord::Base
  has_many :memberships
  has_many :sites, :through =&amp;gt; :memberships
  belongs_to :current_membership, :class_name =&amp;gt; &amp;quot;Membership&amp;quot;
end

class Membership &amp;lt; ActiveRecord::Base
  belongs_to :user
  belongs_to :site
end

class Site &amp;lt; ActiveRecord::Base
  has_many :memberships
  has_many :users, :through =&amp;gt; :memberships
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which generates the following SQL:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  User Load (0.3ms)   SELECT * FROM `users` LIMIT 1
  Membership Columns (2.2ms)   SHOW FIELDS FROM `memberships`
  Membership Load (0.2ms)   SELECT * FROM `memberships` WHERE (`memberships`.`id` = NULL)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-15T19:15:15+01:00</created-at>
      <creator-id type="integer">9830</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1027</number>
      <permalink>optimization-to-not-hit-the-db-when-preloading-empty-association-sets</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord eager_loading patch</tag>
      <title>Optimization to not hit the db when preloading empty association sets</title>
      <updated-at type="datetime">2008-09-15T19:15:19+01:00</updated-at>
      <user-id type="integer">9830</user-id>
      <version type="integer">3</version>
      <user-name>RSL</user-name>
      <creator-name>RSL</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1027</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Oops. Forgot the find that generated the SQL:

@@@ User.first :include =&gt; :current_membership
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops. Forgot the find that generated the SQL:&lt;/p&gt;
&lt;p&gt;@@@ User.first :include =&amp;gt; :current_membership&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-15T19:16:12+01:00</created-at>
      <creator-id type="integer">9830</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1027</number>
      <permalink>optimization-to-not-hit-the-db-when-preloading-empty-association-sets</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord eager_loading patch</tag>
      <title>Optimization to not hit the db when preloading empty association sets</title>
      <updated-at type="datetime">2008-09-15T19:16:17+01:00</updated-at>
      <user-id type="integer">9830</user-id>
      <version type="integer">4</version>
      <user-name>RSL</user-name>
      <creator-name>RSL</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1027</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here's my take. assert_queries does the job nicely for testing this - there was an existing case that tested the previous behaviour for belongs_to. There is actually no need to do this for the has_many etc... cases, since we check earlier on that we have at least one record (belongs_to is different because you can have records but still have no associations to load if the foreign keys are all null)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's my take. assert_queries does the job nicely for testing
this - there was an existing case that tested the previous
behaviour for belongs_to. There is actually no need to do this for
the has_many etc... cases, since we check earlier on that we have
at least one record (belongs_to is different because you can have
records but still have no associations to load if the foreign keys
are all null)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-14T23:04:43+00:00</created-at>
      <creator-id type="integer">9830</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1027</number>
      <permalink>optimization-to-not-hit-the-db-when-preloading-empty-association-sets</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord eager_loading patch</tag>
      <title>Optimization to not hit the db when preloading empty association sets</title>
      <updated-at type="datetime">2008-12-14T23:04:44+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">5</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>RSL</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1027</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [707d0dd3e1e8df7771073670e4257d933d2818f9]) Fix preloading of belongs_to with null foreign key generating useless query [#1027 state:resolved]
http://github.com/rails/rails/commit/707d0dd3e1e8df7771073670e4257d933d2818f9</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [707d0dd3e1e8df7771073670e4257d933d2818f9]) Fix preloading
of belongs_to with null foreign key generating useless query
[&lt;a href=&quot;/projects/8994/tickets/1027&quot; title=&quot;Ticket #1027&quot;&gt;#1027&lt;/a&gt; state:resolved] &lt;a href=&quot;http://github.com/rails/rails/commit/707d0dd3e1e8df7771073670e4257d933d2818f9&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-18T19:22:09+00:00</created-at>
      <creator-id type="integer">9830</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1027</number>
      <permalink>optimization-to-not-hit-the-db-when-preloading-empty-association-sets</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord eager_loading patch</tag>
      <title>Optimization to not hit the db when preloading empty association sets</title>
      <updated-at type="datetime">2008-12-18T19:22:12+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>RSL</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1027</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>60961b18ac3d5f906df8daad4c08c6089e4246cc</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-15T19:10:59+01:00</created-at>
      <filename>dont_preload_empty_sets.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">46033</id>
      <size type="integer">1956</size>
      <uploader-id type="integer">9830</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/46033/dont_preload_empty_sets.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>bfaf166d1583f502dc3001e22904796db85b8e03</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-14T23:04:43+00:00</created-at>
      <filename>0001-Fix-preloading-of-belongs_to-with-null-foreign-query.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">71112</id>
      <size type="integer">2237</size>
      <uploader-id type="integer">17477</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/71112/0001-Fix-preloading-of-belongs_to-with-null-foreign-query.patch</url>
    </attachment>
  </attachments>
</ticket>
