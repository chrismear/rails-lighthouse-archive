<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-21T02:54:44+00:00</created-at>
  <creator-id type="integer">29820</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">2034</number>
  <permalink>exceptions-in-views-hard-to-catch</permalink>
  <priority type="integer">5</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>3.x action_view exception patch templateerror</tag>
  <title>Exceptions in views hard to catch</title>
  <updated-at type="datetime">2010-10-15T23:01:30+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">13</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>pedz</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I had a ticket open in the old Rails bug system about this along with a patch.  That patch no longer works.

I have a couple of questions / concerns.

First, if a template encounters an exception during &quot;compile&quot; time, the original exception is caught and wrapped in a TemplateError exception.  Thats fine but if an exception occurs during &quot;run&quot; time, the exception is also caught and also wrapped in a TemplateError.  It would be nice if those two wrappers were different.

Second, I set a catch for a particular exception but if that exception happens while in a view, then the view code catches it and wraps it.  When it gets to action controller, now my exception handler is not used because it looks like a TemplateError exception.

Third, the second item above would not be too bad if there was a defined way to catch a TemplateError exception (or any exception), examine it, and if I don't want to really catch it, return &quot;false&quot; or something like that from my exception handler and have it be caught by the default handlers.  (I guess calling rescue_action_without_handler would work but is that &quot;stable&quot;?)

I would not mind working on a patch for all this but it gets frustrating submitting patches for the same issue over and over again.</original-body>
  <latest-body>I had a ticket open in the old Rails bug system about this along with a patch.  That patch no longer works.

I have a couple of questions / concerns.

First, if a template encounters an exception during &quot;compile&quot; time, the original exception is caught and wrapped in a TemplateError exception.  Thats fine but if an exception occurs during &quot;run&quot; time, the exception is also caught and also wrapped in a TemplateError.  It would be nice if those two wrappers were different.

Second, I set a catch for a particular exception but if that exception happens while in a view, then the view code catches it and wraps it.  When it gets to action controller, now my exception handler is not used because it looks like a TemplateError exception.

Third, the second item above would not be too bad if there was a defined way to catch a TemplateError exception (or any exception), examine it, and if I don't want to really catch it, return &quot;false&quot; or something like that from my exception handler and have it be caught by the default handlers.  (I guess calling rescue_action_without_handler would work but is that &quot;stable&quot;?)

I would not mind working on a patch for all this but it gets frustrating submitting patches for the same issue over and over again.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I had a ticket open in the old Rails bug system about this along
with a patch. That patch no longer works.&lt;/p&gt;
&lt;p&gt;I have a couple of questions / concerns.&lt;/p&gt;
&lt;p&gt;First, if a template encounters an exception during &quot;compile&quot;
time, the original exception is caught and wrapped in a
TemplateError exception. Thats fine but if an exception occurs
during &quot;run&quot; time, the exception is also caught and also wrapped in
a TemplateError. It would be nice if those two wrappers were
different.&lt;/p&gt;
&lt;p&gt;Second, I set a catch for a particular exception but if that
exception happens while in a view, then the view code catches it
and wraps it. When it gets to action controller, now my exception
handler is not used because it looks like a TemplateError
exception.&lt;/p&gt;
&lt;p&gt;Third, the second item above would not be too bad if there was a
defined way to catch a TemplateError exception (or any exception),
examine it, and if I don't want to really catch it, return &quot;false&quot;
or something like that from my exception handler and have it be
caught by the default handlers. (I guess calling
rescue_action_without_handler would work but is that &quot;stable&quot;?)&lt;/p&gt;
&lt;p&gt;I would not mind working on a patch for all this but it gets
frustrating submitting patches for the same issue over and over
again.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I had a ticket open in the old Rails bug system about this along with a patch.  That patch no longer works.

I have a couple of questions / concerns.

First, if a template encounters an exception during &quot;compile&quot; time, the original exception is caught and wrapped in a TemplateError exception.  Thats fine but if an exception occurs during &quot;run&quot; time, the exception is also caught and also wrapped in a TemplateError.  It would be nice if those two wrappers were different.

Second, I set a catch for a particular exception but if that exception happens while in a view, then the view code catches it and wraps it.  When it gets to action controller, now my exception handler is not used because it looks like a TemplateError exception.

Third, the second item above would not be too bad if there was a defined way to catch a TemplateError exception (or any exception), examine it, and if I don't want to really catch it, return &quot;false&quot; or something like that from my exception handler and have it be caught by the default handlers.  (I guess calling rescue_action_without_handler would work but is that &quot;stable&quot;?)

I would not mind working on a patch for all this but it gets frustrating submitting patches for the same issue over and over again.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I had a ticket open in the old Rails bug system about this along
with a patch. That patch no longer works.&lt;/p&gt;
&lt;p&gt;I have a couple of questions / concerns.&lt;/p&gt;
&lt;p&gt;First, if a template encounters an exception during &quot;compile&quot;
time, the original exception is caught and wrapped in a
TemplateError exception. Thats fine but if an exception occurs
during &quot;run&quot; time, the exception is also caught and also wrapped in
a TemplateError. It would be nice if those two wrappers were
different.&lt;/p&gt;
&lt;p&gt;Second, I set a catch for a particular exception but if that
exception happens while in a view, then the view code catches it
and wraps it. When it gets to action controller, now my exception
handler is not used because it looks like a TemplateError
exception.&lt;/p&gt;
&lt;p&gt;Third, the second item above would not be too bad if there was a
defined way to catch a TemplateError exception (or any exception),
examine it, and if I don't want to really catch it, return &quot;false&quot;
or something like that from my exception handler and have it be
caught by the default handlers. (I guess calling
rescue_action_without_handler would work but is that &quot;stable&quot;?)&lt;/p&gt;
&lt;p&gt;I would not mind working on a patch for all this but it gets
frustrating submitting patches for the same issue over and over
again.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-21T02:54:44+00:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_view exception templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2009-02-21T02:54:48+00:00</updated-at>
      <user-id type="integer">29820</user-id>
      <version type="integer">1</version>
      <user-name>pedz</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The diff fixes my issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The diff fixes my issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-14T21:31:41+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_view exception templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2009-04-14T21:31:44+01:00</updated-at>
      <user-id type="integer">29820</user-id>
      <version type="integer">2</version>
      <user-name>pedz</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I was bitten by this myself today,  marking for 3.0

I'd prefer to investigate changing AV to not swallow the exceptions before making this change in rescue_from</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was bitten by this myself today, marking for 3.0&lt;/p&gt;
&lt;p&gt;I'd prefer to investigate changing AV to not swallow the
exceptions before making this change in rescue_from&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-27T04:27:37+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_view exception templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2009-07-27T04:27:42+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">3</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-01T22:25:21+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>action_view exception templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2010-06-01T22:26:27+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I cannot reproduce. If anyone can, please provide better repro information.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I cannot reproduce. If anyone can, please provide better repro
information.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-08T02:09:13+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>action_view exception templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2010-06-08T02:09:23+01:00</updated-at>
      <user-id type="integer">12714</user-id>
      <version type="integer">5</version>
      <user-name>Yehuda Katz (wycats)</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hopefully this sufficiently illustrates the problem we're having 

application_controller.rb

@@@ ruby
class ApplicationController &lt; ActionController::Base
  protect_from_forgery
  layout 'application'
  
  rescue_from ActionView::TemplateError, :with =&gt; :rescue_template_error

  def rescue_template_error(template_error)
    # any exception raised from views will be wrapped in TemplateError
    # so that you have to examine `template_error.original_exception` and
    # then use `rescue_action_without_handler` if exception should propagate 
    render :text =&gt; &quot;rescued TemplateError&quot;
  end

  rescue_from ArgumentError, :with =&gt; :rescue_argument_error

  def rescue_argument_error(argument_error)
    # this will get called only when raised from controller level
    render :text =&gt; &quot;rescued ArgumentError&quot;
  end
end
@@@

posts/index.html.erb

@@@ ruby
&lt;%# will get caught by `rescue_from ActionView::TemplateError` clause  %&gt;
&lt;% raise ArgumentError, &quot;test ArgumentError&quot; %&gt;
@@@ 

posts_controller.rb

@@@ ruby
class PostsController &lt; ApplicationController
  def index
    # will get caught by `rescue_from ArgumentError, :with =&gt; :rescue_argument_error` clause
    raise ArgumentError, &quot;test ArgumentError&quot;
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hopefully this sufficiently illustrates the problem we're
having&lt;/p&gt;
&lt;p&gt;application_controller.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class ApplicationController &amp;lt; ActionController::Base
  protect_from_forgery
  layout 'application'
  
  rescue_from ActionView::TemplateError, :with =&amp;gt; :rescue_template_error

  def rescue_template_error(template_error)
    # any exception raised from views will be wrapped in TemplateError
    # so that you have to examine `template_error.original_exception` and
    # then use `rescue_action_without_handler` if exception should propagate 
    render :text =&amp;gt; &quot;rescued TemplateError&quot;
  end

  rescue_from ArgumentError, :with =&amp;gt; :rescue_argument_error

  def rescue_argument_error(argument_error)
    # this will get called only when raised from controller level
    render :text =&amp;gt; &quot;rescued ArgumentError&quot;
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;posts/index.html.erb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&amp;lt;%# will get caught by `rescue_from ActionView::TemplateError` clause  %&amp;gt;
&amp;lt;% raise ArgumentError, &quot;test ArgumentError&quot; %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;posts_controller.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class PostsController &amp;lt; ApplicationController
  def index
    # will get caught by `rescue_from ArgumentError, :with =&amp;gt; :rescue_argument_error` clause
    raise ArgumentError, &quot;test ArgumentError&quot;
  end
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-08T04:49:58+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>action_view exception templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2010-06-08T04:50:08+01:00</updated-at>
      <user-id type="integer">43210</user-id>
      <version type="integer">6</version>
      <user-name>Evgeniy Dolzhenko</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Attached is a patch with test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is a patch with test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-08T10:22:13+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: action_view exception templateerror
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>3.x action_view exception patch templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2010-06-08T10:22:27+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Jos&#233; Valim provided feedback on the patch. Will be providing a better patch and test soon.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jos&amp;eacute; Valim provided feedback on the patch. Will be
providing a better patch and test soon.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-08T14:40:47+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>3.x action_view exception patch templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2010-06-08T14:40:58+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">8</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Attached is modified patch with test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is modified patch with test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-08T17:09:48+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>3.x action_view exception patch templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2010-06-08T17:10:04+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">9</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T13:00:56+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- 
:state: invalid
:priority: 0
:assigned_user: 141
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">5</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.x action_view exception patch templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2010-07-19T13:01:01+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">10</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [33c5689e2d04aa08759903bc5d1e4de3bf6c35dd]) Exceptions from views should be rescued based on the original exception. If a handler for original exception is missing then apply ActiveView::TemplateError

[#2034 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/33c5689e2d04aa08759903bc5d1e4de3bf6c35dd</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/33c5689e2d04aa08759903bc5d1e4de3bf6c35dd&quot;
title=
&quot;Changeset [33c5689e2d04aa08759903bc5d1e4de3bf6c35dd]&quot;&gt;[33c5689e2d04aa08759903bc5d1e4de3bf6c35dd]&lt;/a&gt;)
Exceptions from views should be rescued based on the original
exception. If a handler for original exception is missing then
apply ActiveView::TemplateError&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/2034&quot; title=
&quot;Ticket #2034&quot;&gt;#2034&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/33c5689e2d04aa08759903bc5d1e4de3bf6c35dd&quot;&gt;
http://github.com/rails/rails/commit/33c5689e2d04aa08759903bc5d1e4d...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T13:51:03+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">5</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.x action_view exception patch templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2010-07-19T13:51:07+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">11</version>
      <user-name>Repository</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Here is a workaround for those who are using Rails 2.3. Place in your ApplicationController:

@@@ ruby
rescue_from ActionView::TemplateError do |exception|
  rescue_action(exception.original_exception)
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is a workaround for those who are using Rails 2.3. Place in
your ApplicationController:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;rescue_from ActionView::TemplateError do |exception|
  rescue_action(exception.original_exception)
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-04T10:58:51+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">5</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.x action_view exception patch templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2010-08-04T10:58:56+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">12</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:30+01:00</created-at>
      <creator-id type="integer">29820</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 74033
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">2034</number>
      <permalink>exceptions-in-views-hard-to-catch</permalink>
      <priority type="integer">5</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.x action_view exception patch templateerror</tag>
      <title>Exceptions in views hard to catch</title>
      <updated-at type="datetime">2010-10-15T23:01:30+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">13</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>pedz</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2034</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>e0cee83b58fcc75ec40c3906219d588c88c5303c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-14T21:31:41+01:00</created-at>
      <filename>fix-view-rescue.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">111203</id>
      <size type="integer">1911</size>
      <uploader-id type="integer">29820</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/111203/fix-view-rescue.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>8423cd3d74a8807fc05a2384798e97dbc47fc5f7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-08T10:22:13+01:00</created-at>
      <filename>2034_fix_against_master.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">550619</id>
      <size type="integer">2697</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/550619/2034_fix_against_master.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>1cf4dee84f067e1e9a8e06fb9b3c5f2a728cb480</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-08T17:09:48+01:00</created-at>
      <filename>2034_fix_against_master.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">551105</id>
      <size type="integer">4046</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/551105/2034_fix_against_master.diff</url>
    </attachment>
  </attachments>
</ticket>
