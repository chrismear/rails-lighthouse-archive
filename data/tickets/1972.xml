<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-14T17:02:24+00:00</created-at>
  <creator-id type="integer">46476</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1972</number>
  <permalink>rails-metal-throw-an-exception-to-continue-the-dispatch-chain</permalink>
  <priority type="integer">1225</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>Rails metal: Throw an exception to continue the dispatch chain</title>
  <updated-at type="datetime">2011-02-02T18:49:22+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">7</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Jonas Schneider</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1972</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>As described here: http://guides.rails.info/rails_on_rack.html
Metal applications cannot return the HTTP Status 404 to a client, as it is used for continuing the Metal chain execution. Please use normal Rails controllers or a custom middleware if returning 404 is a requirement.

I don't think it has to be so difficult for a Metal app to return a 404... Why not just define some constant exception and continue the dispatch chain when its thrown? Makes more sense, to me at least. At the moment, you probably need to manually render the public/404.html file if you want to get 404'ish behaviour (without losing speed to the normal routing stuff).
If more guys think like me, I'll try to make a patch up for this.</original-body>
  <latest-body>As described here: http://guides.rails.info/rails_on_rack.html
Metal applications cannot return the HTTP Status 404 to a client, as it is used for continuing the Metal chain execution. Please use normal Rails controllers or a custom middleware if returning 404 is a requirement.

I don't think it has to be so difficult for a Metal app to return a 404... Why not just define some constant exception and continue the dispatch chain when its thrown? Makes more sense, to me at least. At the moment, you probably need to manually render the public/404.html file if you want to get 404'ish behaviour (without losing speed to the normal routing stuff).
If more guys think like me, I'll try to make a patch up for this.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;As described here: &lt;a href=&quot;http://guides.rails.info/rails_on_rack.html&quot;&gt;http://guides.rails.info/rails_o...&lt;/a&gt;
Metal applications cannot return the HTTP Status 404 to a client,
as it is used for continuing the Metal chain execution. Please use
normal Rails controllers or a custom middleware if returning 404 is
a requirement.&lt;/p&gt;
&lt;p&gt;I don't think it has to be so difficult for a Metal app to
return a 404... Why not just define some constant exception and
continue the dispatch chain when its thrown? Makes more sense, to
me at least. At the moment, you probably need to manually render
the public/404.html file if you want to get 404'ish behaviour
(without losing speed to the normal routing stuff). If more guys
think like me, I'll try to make a patch up for this.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As described here: http://guides.rails.info/rails_on_rack.html
Metal applications cannot return the HTTP Status 404 to a client, as it is used for continuing the Metal chain execution. Please use normal Rails controllers or a custom middleware if returning 404 is a requirement.

I don't think it has to be so difficult for a Metal app to return a 404... Why not just define some constant exception and continue the dispatch chain when its thrown? Makes more sense, to me at least. At the moment, you probably need to manually render the public/404.html file if you want to get 404'ish behaviour (without losing speed to the normal routing stuff).
If more guys think like me, I'll try to make a patch up for this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As described here: &lt;a href=&quot;http://guides.rails.info/rails_on_rack.html&quot;&gt;http://guides.rails.info/rails_o...&lt;/a&gt;
Metal applications cannot return the HTTP Status 404 to a client,
as it is used for continuing the Metal chain execution. Please use
normal Rails controllers or a custom middleware if returning 404 is
a requirement.&lt;/p&gt;
&lt;p&gt;I don't think it has to be so difficult for a Metal app to
return a 404... Why not just define some constant exception and
continue the dispatch chain when its thrown? Makes more sense, to
me at least. At the moment, you probably need to manually render
the public/404.html file if you want to get 404'ish behaviour
(without losing speed to the normal routing stuff). If more guys
think like me, I'll try to make a patch up for this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-14T17:02:24+00:00</created-at>
      <creator-id type="integer">46476</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1972</number>
      <permalink>rails-metal-throw-an-exception-to-continue-the-dispatch-chain</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails metal: Throw an exception to continue the dispatch chain</title>
      <updated-at type="datetime">2009-02-14T17:02:28+00:00</updated-at>
      <user-id type="integer">46476</user-id>
      <version type="integer">1</version>
      <user-name>Jonas Schneider</user-name>
      <creator-name>Jonas Schneider</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1972</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am in favor of this. Not just because it makes sense, but also because of such a solution would reveal much more intent than returning something with the &quot;magic value&quot; 404.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am in favor of this. Not just because it makes sense, but also
because of such a solution would reveal much more intent than
returning something with the &quot;magic value&quot; 404.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-09T13:53:38+01:00</created-at>
      <creator-id type="integer">46476</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1972</number>
      <permalink>rails-metal-throw-an-exception-to-continue-the-dispatch-chain</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails metal: Throw an exception to continue the dispatch chain</title>
      <updated-at type="datetime">2010-04-09T13:53:41+01:00</updated-at>
      <user-id type="integer">21241</user-id>
      <version type="integer">2</version>
      <user-name>Magnus Bergmark</user-name>
      <creator-name>Jonas Schneider</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1972</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree that returning a magic 404 feels wrong, but I'm not sure if we should affect the change in Rails 2.x in the interests of not breaking existing applications.

In Rails edge, a &quot;X-Cascade&quot; header with a value of &quot;pass&quot; is required to continue the Metal chain.

i.e.

  [404, { 'Content-Type' =&gt; 'text/html', 'X-Cascade' =&gt; 'pass' }, ['Not Found']]


This feels sufficient to me, would you be happy with that? In fact, this undocumented change had me struggling for a few hours when trying to upgrade an app to Rails 3. I'm going to fix the documentation bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree that returning a magic 404 feels wrong, but I'm not sure
if we should affect the change in Rails 2.x in the interests of not
breaking existing applications.&lt;/p&gt;
&lt;p&gt;In Rails edge, a &quot;X-Cascade&quot; header with a value of &quot;pass&quot; is
required to continue the Metal chain.&lt;/p&gt;
&lt;p&gt;i.e.&lt;/p&gt;
&lt;p&gt;[404, { 'Content-Type' =&amp;gt; 'text/html', 'X-Cascade' =&amp;gt;
'pass' }, ['Not Found']]&lt;/p&gt;
&lt;p&gt;This feels sufficient to me, would you be happy with that? In
fact, this undocumented change had me struggling for a few hours
when trying to upgrade an app to Rails 3. I'm going to fix the
documentation bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-19T10:54:24+01:00</created-at>
      <creator-id type="integer">46476</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1972</number>
      <permalink>rails-metal-throw-an-exception-to-continue-the-dispatch-chain</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails metal: Throw an exception to continue the dispatch chain</title>
      <updated-at type="datetime">2010-04-19T10:54:28+01:00</updated-at>
      <user-id type="integer">586</user-id>
      <version type="integer">3</version>
      <user-name>Cheah Chu Yeow</user-name>
      <creator-name>Jonas Schneider</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1972</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:39+01:00</created-at>
      <creator-id type="integer">46476</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1972</number>
      <permalink>rails-metal-throw-an-exception-to-continue-the-dispatch-chain</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails metal: Throw an exception to continue the dispatch chain</title>
      <updated-at type="datetime">2010-05-04T18:48:39+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Jonas Schneider</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1972</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>'X-Cascade' =&gt; 'pass' solves this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;'X-Cascade' =&amp;gt; 'pass' solves this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-20T15:55:51+01:00</created-at>
      <creator-id type="integer">46476</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1972</number>
      <permalink>rails-metal-throw-an-exception-to-continue-the-dispatch-chain</permalink>
      <priority type="integer">1225</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails metal: Throw an exception to continue the dispatch chain</title>
      <updated-at type="datetime">2010-08-20T15:55:53+01:00</updated-at>
      <user-id type="integer">46476</user-id>
      <version type="integer">5</version>
      <user-name>Jonas Schneider</user-name>
      <creator-name>Jonas Schneider</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1972</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:59:38+00:00</created-at>
      <creator-id type="integer">46476</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1972</number>
      <permalink>rails-metal-throw-an-exception-to-continue-the-dispatch-chain</permalink>
      <priority type="integer">1225</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Rails metal: Throw an exception to continue the dispatch chain</title>
      <updated-at type="datetime">2011-02-02T18:49:22+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jonas Schneider</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1972</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:59:39+00:00</created-at>
      <creator-id type="integer">46476</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1972</number>
      <permalink>rails-metal-throw-an-exception-to-continue-the-dispatch-chain</permalink>
      <priority type="integer">1225</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Rails metal: Throw an exception to continue the dispatch chain</title>
      <updated-at type="datetime">2011-02-02T18:49:19+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jonas Schneider</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1972</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
