From 35a6fc9b9509cec20ed3dee4144f0320f6f737d6 Mon Sep 17 00:00:00 2001
From: Emilio Tagua <miloops@gmail.com>
Date: Wed, 23 Jun 2010 13:10:53 -0300
Subject: [PATCH] Add tests for relation count. Fix other tests that were conceptually wrong.

---
 activerecord/test/cases/calculations_test.rb |    2 +-
 activerecord/test/cases/relations_test.rb    |    6 +++++-
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/activerecord/test/cases/calculations_test.rb b/activerecord/test/cases/calculations_test.rb
index 329dd7d..2c9d23c 100644
--- a/activerecord/test/cases/calculations_test.rb
+++ b/activerecord/test/cases/calculations_test.rb
@@ -272,7 +272,7 @@ class CalculationsTest < ActiveRecord::TestCase
   end
 
   def test_count_with_column_and_options_parameter
-    assert_equal 2, Account.count(:firm_id, :conditions => "credit_limit = 50")
+    assert_equal 2, Account.count(:firm_id, :conditions => "credit_limit = 50 AND firm_id IS NOT NULL")
   end
 
   def test_count_with_no_parameters_isnt_deprecated
diff --git a/activerecord/test/cases/relations_test.rb b/activerecord/test/cases/relations_test.rb
index 165b2e1..b33f602 100644
--- a/activerecord/test/cases/relations_test.rb
+++ b/activerecord/test/cases/relations_test.rb
@@ -468,7 +468,7 @@ class RelationTest < ActiveRecord::TestCase
     posts = Post.scoped
 
     assert_equal [0], posts.select('comments_count').where('id is not null').group('id').order('id').count.values.uniq
-    assert_equal 0, posts.where('id is not null').select('comments_count').count
+    assert_equal 7, posts.where('id is not null').select('comments_count').count
 
     assert_equal 7, posts.select('comments_count').count('id')
     assert_equal 0, posts.select('comments_count').count
@@ -604,4 +604,8 @@ class RelationTest < ActiveRecord::TestCase
   def test_order_by_relation_attribute
     assert_equal Post.order(Post.arel_table[:title]).all, Post.order("title").all
   end
+
+  def test_relations_limit_with_conditions_or_limit
+    assert_equal Post.limit(2).size, Post.limit(2).all.size
+  end
 end
-- 
1.6.5

