<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-11T11:40:02+00:00</created-at>
  <creator-id type="integer">17407</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2211</number>
  <permalink>arfind_or_create-doesnt-add-the-created-model-to-collection</permalink>
  <priority type="integer">1405</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>23-rc2 activerecord association association_proxy edge find_or_create</tag>
  <title>AR#find_or_create doesn't add the created model to collection</title>
  <updated-at type="datetime">2011-02-02T18:32:04+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">9</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Akira Matsuda</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2211</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>While Company has many Clients, and if a new client created by
@@@ 
new_client = a_company.clients_find_or_create_by_name
@@@
, the new_client is not dynamically added to
@@@
a_company.clients
@@@
until you run
@@@
a_company.clients :reload
@@@
.

This behaviour deffers from simple
@@@
a_company.clients.create
@@@
.  
Is n't it very annoying?</original-body>
  <latest-body>While Company has many Clients, and if a new client created by
@@@ 
new_client = a_company.clients_find_or_create_by_name
@@@
, the new_client is not dynamically added to
@@@
a_company.clients
@@@
until you run
@@@
a_company.clients :reload
@@@
.

This behaviour deffers from simple
@@@
a_company.clients.create
@@@
.  
Is n't it very annoying?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;While Company has many Clients, and if a new client created
by&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
new_client = a_company.clients_find_or_create_by_name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;, the new_client is not dynamically added to&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
a_company.clients
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;until you run&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
a_company.clients :reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;This behaviour deffers from simple&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
a_company.clients.create
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;.&lt;br&gt;
Is n't it very annoying?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>While Company has many Clients, and if a new client created by
@@@ ruby
new_client = a_company.clients_find_or_create_by_name
@@@
the new_client is not dynamically added to
@@@ ruby
a_company.clients
@@@
until you run
@@@ ruby
a_company.clients :reload
@@@
  

This behaviour differs from simple
@@@ ruby
a_company.clients.create
@@@
  

Is n't it very annoying?</body>
      <body-html>&lt;div&gt;&lt;p&gt;While Company has many Clients, and if a new client created
by&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
new_client = a_company.clients_find_or_create_by_name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the new_client is not dynamically added to&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
a_company.clients
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;until you run&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
a_company.clients :reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This behaviour differs from simple&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
a_company.clients.create
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Is n't it very annoying?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-11T11:40:04+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2211</number>
      <permalink>arfind_or_create-doesnt-add-the-created-model-to-collection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-rc2 activerecord association association_proxy edge find_or_create</tag>
      <title>AR#find_or_create doesn't add the created model to collection</title>
      <updated-at type="datetime">2009-03-16T09:40:12+00:00</updated-at>
      <user-id type="integer">17407</user-id>
      <version type="integer">1</version>
      <user-name>Akira Matsuda</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2211</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have verified this behavior by creating a new application with a failing test case:

script/generate rspec_model company name:string
script/generate rspec_model client company_id:integer name:string

Then I added the associations:

class Company &lt; ActiveRecord::Base
  has_many :clients
end

class Client &lt; ActiveRecord::Base
  belongs_to :company
end

Here is a failing test case;

require File.expand_path(File.dirname(__FILE__) + '/../spec_helper')
require 'stringio'

def redirect
  orig_defout = $stdout
  $stdout = StringIO.new
  yield
  $stdout.string
ensure
  $stdout = orig_defout
end

describe Company do
  it &quot;output size from company.clients should double after two clients are created&quot; do
    company = Company.create! :name =&gt; 'AAA'
    company.clients.find_or_create_by_name :name =&gt; 'client_A01'
    eval_string = 'p company.clients'
    output_string = redirect { eval eval_string }
    first_size = output_string.size
    company.clients.find_or_create_by_name :name =&gt; 'client_A02'
    eval_string = 'p company.clients'
    output_string = redirect { eval eval_string }
    second_size = output_string.size

    second_size.should == (first_size * 2)
  end
end

Hopefully this test case will help resolve the issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have verified this behavior by creating a new application with
a failing test case:&lt;/p&gt;
&lt;p&gt;script/generate rspec_model company name:string script/generate
rspec_model client company_id:integer name:string&lt;/p&gt;
&lt;p&gt;Then I added the associations:&lt;/p&gt;
&lt;p&gt;class Company &amp;lt; ActiveRecord::Base has_many :clients end&lt;/p&gt;
&lt;p&gt;class Client &amp;lt; ActiveRecord::Base belongs_to :company end&lt;/p&gt;
&lt;p&gt;Here is a failing test case;&lt;/p&gt;
&lt;p&gt;require File.expand_path(File.dirname(&lt;strong&gt;FILE&lt;/strong&gt;) +
'/../spec_helper') require 'stringio'&lt;/p&gt;
&lt;p&gt;def redirect orig_defout = $stdout $stdout = StringIO.new yield
$stdout.string ensure $stdout = orig_defout end&lt;/p&gt;
&lt;p&gt;describe Company do it &quot;output size from company.clients should
double after two clients are created&quot; do&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;company = Company.create! :name =&amp;gt; 'AAA'
company.clients.find_or_create_by_name :name =&amp;gt; 'client_A01'
eval_string = 'p company.clients'
output_string = redirect { eval eval_string }
first_size = output_string.size
company.clients.find_or_create_by_name :name =&amp;gt; 'client_A02'
eval_string = 'p company.clients'
output_string = redirect { eval eval_string }
second_size = output_string.size

second_size.should == (first_size * 2)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;Hopefully this test case will help resolve the issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-15T02:13:51+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2211</number>
      <permalink>arfind_or_create-doesnt-add-the-created-model-to-collection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-rc2 activerecord association association_proxy edge find_or_create</tag>
      <title>AR#find_or_create doesn't add the created model to collection</title>
      <updated-at type="datetime">2009-03-15T02:13:54+00:00</updated-at>
      <user-id type="integer">50602</user-id>
      <version type="integer">2</version>
      <user-name>David Medinets</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2211</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry about the bad formatting, let me try again.

I have verified this behavior by creating a new application with a failing test case:

@@@
script/generate rspec_model company name:string
script/generate rspec_model client company_id:integer name:string
@@@

Then I added the associations:

@@@ ruby
class Company &lt; ActiveRecord::Base
  has_many :clients
end

class Client &lt; ActiveRecord::Base
  belongs_to :company
end
@@@

Here is a failing test case;

@@@ ruby
require File.expand_path(File.dirname(__FILE__) + '/../spec_helper')
require 'stringio'

def redirect
  orig_defout = $stdout
  $stdout = StringIO.new
  yield
  $stdout.string
ensure
  $stdout = orig_defout
end

describe Company do
  it &quot;output size from company.clients should double after two clients are created&quot; do
    company = Company.create! :name =&gt; 'AAA'
    company.clients.find_or_create_by_name :name =&gt; 'client_A01'
    eval_string = 'p company.clients'
    output_string = redirect { eval eval_string }
    first_size = output_string.size
    company.clients.find_or_create_by_name :name =&gt; 'client_A02'
    eval_string = 'p company.clients'
    output_string = redirect { eval eval_string }
    second_size = output_string.size

    second_size.should == (first_size * 2)
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry about the bad formatting, let me try again.&lt;/p&gt;
&lt;p&gt;I have verified this behavior by creating a new application with
a failing test case:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
script/generate rspec_model company name:string
script/generate rspec_model client company_id:integer name:string
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then I added the associations:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Company &amp;lt; ActiveRecord::Base
  has_many :clients
end

class Client &amp;lt; ActiveRecord::Base
  belongs_to :company
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is a failing test case;&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
require File.expand_path(File.dirname(__FILE__) + '/../spec_helper')
require 'stringio'

def redirect
  orig_defout = $stdout
  $stdout = StringIO.new
  yield
  $stdout.string
ensure
  $stdout = orig_defout
end

describe Company do
  it &amp;quot;output size from company.clients should double after two clients are created&amp;quot; do
    company = Company.create! :name =&amp;gt; 'AAA'
    company.clients.find_or_create_by_name :name =&amp;gt; 'client_A01'
    eval_string = 'p company.clients'
    output_string = redirect { eval eval_string }
    first_size = output_string.size
    company.clients.find_or_create_by_name :name =&amp;gt; 'client_A02'
    eval_string = 'p company.clients'
    output_string = redirect { eval eval_string }
    second_size = output_string.size

    second_size.should == (first_size * 2)
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-15T02:27:58+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2211</number>
      <permalink>arfind_or_create-doesnt-add-the-created-model-to-collection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-rc2 activerecord association association_proxy edge find_or_create</tag>
      <title>AR#find_or_create doesn't add the created model to collection</title>
      <updated-at type="datetime">2009-03-16T09:32:08+00:00</updated-at>
      <user-id type="integer">50602</user-id>
      <version type="integer">3</version>
      <user-name>David Medinets</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2211</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Fixed your formatting a bit. After the 3 @'s you should specify the language that's used or nothing for plain code, but not a regular line of text :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fixed your formatting a bit. After the 3 @'s you should specify
the language that's used or nothing for plain code, but not a
regular line of text :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-16T09:33:24+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2211</number>
      <permalink>arfind_or_create-doesnt-add-the-created-model-to-collection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-rc2 activerecord association association_proxy edge find_or_create</tag>
      <title>AR#find_or_create doesn't add the created model to collection</title>
      <updated-at type="datetime">2009-03-16T09:33:26+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">4</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2211</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>After some additional experimentation, I learned that simply multiplying the string size was not correct. The updated spec test is below.

Not sure if it helps but essentially the issue is that the non-working test does not call the create() method in association_collection.rb instead the create() method in base.rb is called. I am stepping through an execution trace (made by Unroller) to see if I can come up with a resolution.

@@@ ruby
require File.expand_path(File.dirname(__FILE__) + '/../spec_helper')
require 'stringio'

def redirect
  orig_defout = $stdout
  $stdout = StringIO.new
  yield
  $stdout.string
ensure
  $stdout = orig_defout
end

describe Company do
  it &quot;output size from company.clients should double after two clients are created by create&quot; do
    company = Company.create :name =&gt; 'AAA'
    company.clients.create :name =&gt; 'client_A01'
    company.clients.create :name =&gt; 'client_A02'
    eval_string = 'p company.clients'
    output_string = redirect { eval eval_string }
    output_string.size.should == 245
  end

  it &quot;output size from company.clients should double after two clients are created by find_or_create&quot; do
    company = Company.create :name =&gt; 'AAA'
    company.clients.find_or_create_by_name :name =&gt; 'client_A01'
    company.clients.find_or_create_by_name :name =&gt; 'client_A02'
    eval_string = 'p company.clients'
    output_string = redirect { eval eval_string }
    second_size = output_string.size
    second_size.should == 245
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;After some additional experimentation, I learned that simply
multiplying the string size was not correct. The updated spec test
is below.&lt;/p&gt;
&lt;p&gt;Not sure if it helps but essentially the issue is that the
non-working test does not call the create() method in
association_collection.rb instead the create() method in base.rb is
called. I am stepping through an execution trace (made by Unroller)
to see if I can come up with a resolution.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
require File.expand_path(File.dirname(__FILE__) + '/../spec_helper')
require 'stringio'

def redirect
  orig_defout = $stdout
  $stdout = StringIO.new
  yield
  $stdout.string
ensure
  $stdout = orig_defout
end

describe Company do
  it &amp;quot;output size from company.clients should double after two clients are created by create&amp;quot; do
    company = Company.create :name =&amp;gt; 'AAA'
    company.clients.create :name =&amp;gt; 'client_A01'
    company.clients.create :name =&amp;gt; 'client_A02'
    eval_string = 'p company.clients'
    output_string = redirect { eval eval_string }
    output_string.size.should == 245
  end

  it &amp;quot;output size from company.clients should double after two clients are created by find_or_create&amp;quot; do
    company = Company.create :name =&amp;gt; 'AAA'
    company.clients.find_or_create_by_name :name =&amp;gt; 'client_A01'
    company.clients.find_or_create_by_name :name =&amp;gt; 'client_A02'
    eval_string = 'p company.clients'
    output_string = redirect { eval eval_string }
    second_size = output_string.size
    second_size.should == 245
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-16T09:56:30+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2211</number>
      <permalink>arfind_or_create-doesnt-add-the-created-model-to-collection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-rc2 activerecord association association_proxy edge find_or_create</tag>
      <title>AR#find_or_create doesn't add the created model to collection</title>
      <updated-at type="datetime">2009-03-16T09:56:31+00:00</updated-at>
      <user-id type="integer">50602</user-id>
      <version type="integer">5</version>
      <user-name>David Medinets</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2211</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Pending a patch against master and test case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Pending a patch against master and test case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-12T02:18:26+01:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2211</number>
      <permalink>arfind_or_create-doesnt-add-the-created-model-to-collection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.3-rc2 activerecord association association_proxy edge find_or_create</tag>
      <title>AR#find_or_create doesn't add the created model to collection</title>
      <updated-at type="datetime">2009-09-12T02:18:27+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2211</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:41+01:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2211</number>
      <permalink>arfind_or_create-doesnt-add-the-created-model-to-collection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.3-rc2 activerecord association association_proxy edge find_or_create</tag>
      <title>AR#find_or_create doesn't add the created model to collection</title>
      <updated-at type="datetime">2010-05-04T18:48:41+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">7</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2211</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:53:47+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: incomplete
:tag: 2.3-rc2 activerecord association association_proxy edge find_or_create
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2211</number>
      <permalink>arfind_or_create-doesnt-add-the-created-model-to-collection</permalink>
      <priority type="integer">1405</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>23-rc2 activerecord association association_proxy edge find_or_create</tag>
      <title>AR#find_or_create doesn't add the created model to collection</title>
      <updated-at type="datetime">2011-02-02T18:32:04+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2211</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:53:49+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2211</number>
      <permalink>arfind_or_create-doesnt-add-the-created-model-to-collection</permalink>
      <priority type="integer">1405</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>23-rc2 activerecord association association_proxy edge find_or_create</tag>
      <title>AR#find_or_create doesn't add the created model to collection</title>
      <updated-at type="datetime">2011-02-02T18:31:15+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2211</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
