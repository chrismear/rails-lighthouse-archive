From 6fc3ebad65471f83f28838616cef1685f538c6ff Mon Sep 17 00:00:00 2001
From: Sokolov Yura <funny.falcon@gmail.com>
Date: Tue, 7 Dec 2010 13:22:17 +0300
Subject: [PATCH] make calculation aware to current scope's :group and :having

---
 activerecord/lib/active_record/calculations.rb |    4 ++++
 activerecord/test/cases/calculations_test.rb   |   21 +++++++++++++++++++++
 2 files changed, 25 insertions(+), 0 deletions(-)

diff --git a/activerecord/lib/active_record/calculations.rb b/activerecord/lib/active_record/calculations.rb
index f6249e5..b61a3ac 100644
--- a/activerecord/lib/active_record/calculations.rb
+++ b/activerecord/lib/active_record/calculations.rb
@@ -127,6 +127,10 @@ module ActiveRecord
         column_name     = options[:select] if options[:select]
         column_name     = '*' if column_name == :all
         column          = column_for column_name
+        cur_scope = scope(:find)
+        if !options[:group] && cur_scope && cur_scope[:group]
+          options = options.reverse_merge(cur_scope.slice(:group, :having))
+        end
         catch :invalid_query do
           if options[:group]
             return execute_grouped_calculation(operation, column_name, column, options)
diff --git a/activerecord/test/cases/calculations_test.rb b/activerecord/test/cases/calculations_test.rb
index d5bb358..c34db60 100644
--- a/activerecord/test/cases/calculations_test.rb
+++ b/activerecord/test/cases/calculations_test.rb
@@ -109,6 +109,16 @@ class CalculationsTest < ActiveRecord::TestCase
     assert_equal 60,  c[2]
   end
 
+  def test_should_group_by_summed_field_having_condition_with_scopes
+    c = Account.with_scope( :find => { :group => :firm_id,
+                                   :having => 'sum(credit_limit) > 50'}) do
+      Account.sum(:credit_limit)
+    end
+    assert_nil        c[1]
+    assert_equal 105, c[6]
+    assert_equal 60,  c[2]
+  end
+  
   def test_should_group_by_summed_field_having_sanitized_condition
     c = Account.sum(:credit_limit, :group => :firm_id,
                                    :having => ['sum(credit_limit) > ?', 50])
@@ -154,6 +164,17 @@ class CalculationsTest < ActiveRecord::TestCase
     assert_equal 105, c[6]
     assert_nil        c[2]
   end
+  
+  def test_should_group_by_summed_field_with_conditions_and_having_from_with_scoped
+    c = Account.with_scope(:find => {  :conditions => 'firm_id > 1',
+                                   :group => :firm_id,
+                                   :having => 'sum(credit_limit) > 60' }) do
+      Account.sum(:credit_limit)
+    end
+    assert_nil        c[1]
+    assert_equal 105, c[6]
+    assert_nil        c[2]
+  end
 
   def test_should_group_by_fields_with_table_alias
     c = Account.sum(:credit_limit, :group => 'accounts.firm_id')
-- 
1.7.1

