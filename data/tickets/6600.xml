<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-03-21T09:24:29+00:00</created-at>
  <creator-id type="integer">142144</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6600</number>
  <permalink>305-ar-has_many-through-wrong-table-name</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag nil="true"></tag>
  <title>3.0.5 AR: has_many :through - wrong table name</title>
  <updated-at type="datetime">2011-03-21T11:56:47+00:00</updated-at>
  <user-id type="integer">7697</user-id>
  <version type="integer">3</version>
  <user-name>Andrew White</user-name>
  <creator-name>Strelok</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6600</url>
  <priority-name>Low</priority-name>
  <original-body>I'm using rails 3.0.5

I have Model Card

@@@ ruby
class Card &lt; ActiveRecord::Base
  has_many :records, :foreign_key =&gt; 'card_id', :dependent =&gt; :destroy
end
@@@

Model HospitalCard

@@@ ruby
class HospitalCard &lt; Card
  has_one :last_record, :class_name =&gt; 'Record', :foreign_key =&gt; 'card_id', :order =&gt; 'id DESC'
  has_many :record_criterias, :through =&gt; :last_record
end
@@@

Model Record
@@@ ruby
class Record &lt; ActiveRecord::Base
  belongs_to :card
end
@@@
And
@@@ ruby
class RecordCriteria &lt; ActiveRecord::Base
  belongs_to :record
end
@@@


When I try
@@@ ruby
Card.find(1).record_criterias
@@@

@@@ ruby

ActiveRecord::StatementInvalid: ODBC::Error: S0002 (208) [Microsoft][SQL Native Client][SQL Server]Invalid object name 'record_criteria'.: SELECT [record_criteria].* FROM [record_criteria] INNER JOIN
[records] ON [record_criteria].record_id = [records].id WHERE [record_criteria].[deleted_at] IS NULL AND (([records].card_id = 1) AND (((records.deleted_at IS NULL))))
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract_adapter.rb:207:in `log'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-sqlserver-adapter-3.0.10/lib/active_record/connection_adapters/sqlserver/database_statements.rb:249:in `raw_select'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-sqlserver-adapter-3.0.10/lib/active_record/connection_adapters/sqlserver/database_statements.rb:193:in `select'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/base.rb:467:in `find_by_sql'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation.rb:64:in `to_a'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:143:in `all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:105:in `send'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:105:in `find'
        from C:0:in `__send__'
        from C:0:in `find'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/base.rb:1121:in `with_scope'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:203:in `send'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:203:in `with_scope'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_collection.rb:410:in `load_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:145:in `inspect'
        from C:/Ruby/lib/ruby/1.8/irb.rb:310:in `output_value'
        from C:/Ruby/lib/ruby/1.8/irb.rb:159:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:271:in `signal_status'
        from C:/Ruby/lib/ruby/1.8/irb.rb:155:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:154:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:71:in `start'
        from C:/Ruby/lib/ruby/1.8/irb.rb:70:in `catch'
        from C:/Ruby/lib/ruby/1.8/irb.rb:70:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands/console.rb:44:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands/console.rb:8:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands.rb:23
        from script/rails:6:in `require'
        from script/rails:6irb(main):017:0&gt; 1
@@@

'record_criteria' - wrong table name I have 'record_criterias'

Not depends on database adapter. I tested it via sqlite3 and sqlserver with the same result. 


In 3.0.4 all works properly</original-body>
  <latest-body>I'm using rails 3.0.5

I have Model Card

@@@ ruby
class Card &lt; ActiveRecord::Base
  has_many :records, :foreign_key =&gt; 'card_id', :dependent =&gt; :destroy
end
@@@

Model HospitalCard

@@@ ruby
class HospitalCard &lt; Card
  has_one :last_record, :class_name =&gt; 'Record', :foreign_key =&gt; 'card_id', :order =&gt; 'id DESC'
  has_many :record_criterias, :through =&gt; :last_record
end
@@@

Model Record
@@@ ruby
class Record &lt; ActiveRecord::Base
  belongs_to :card
end
@@@
And
@@@ ruby
class RecordCriteria &lt; ActiveRecord::Base
  belongs_to :record
end
@@@


When I try
@@@ ruby
Card.find(1).record_criterias
@@@

@@@ ruby

ActiveRecord::StatementInvalid: ODBC::Error: S0002 (208) [Microsoft][SQL Native Client][SQL Server]Invalid object name 'record_criteria'.: SELECT [record_criteria].* FROM [record_criteria] INNER JOIN
[records] ON [record_criteria].record_id = [records].id WHERE [record_criteria].[deleted_at] IS NULL AND (([records].card_id = 1) AND (((records.deleted_at IS NULL))))
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract_adapter.rb:207:in `log'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-sqlserver-adapter-3.0.10/lib/active_record/connection_adapters/sqlserver/database_statements.rb:249:in `raw_select'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-sqlserver-adapter-3.0.10/lib/active_record/connection_adapters/sqlserver/database_statements.rb:193:in `select'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/base.rb:467:in `find_by_sql'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation.rb:64:in `to_a'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:143:in `all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:105:in `send'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:105:in `find'
        from C:0:in `__send__'
        from C:0:in `find'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/base.rb:1121:in `with_scope'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:203:in `send'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:203:in `with_scope'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_collection.rb:410:in `load_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:145:in `inspect'
        from C:/Ruby/lib/ruby/1.8/irb.rb:310:in `output_value'
        from C:/Ruby/lib/ruby/1.8/irb.rb:159:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:271:in `signal_status'
        from C:/Ruby/lib/ruby/1.8/irb.rb:155:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:154:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:71:in `start'
        from C:/Ruby/lib/ruby/1.8/irb.rb:70:in `catch'
        from C:/Ruby/lib/ruby/1.8/irb.rb:70:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands/console.rb:44:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands/console.rb:8:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands.rb:23
        from script/rails:6:in `require'
        from script/rails:6irb(main):017:0&gt; 1
@@@

'record_criteria' - wrong table name I have 'record_criterias'

Not depends on database adapter. I tested it via sqlite3 and sqlserver with the same result. 


In 3.0.4 all works properly</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm using rails 3.0.5&lt;/p&gt;
&lt;p&gt;I have Model Card&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Card &amp;lt; ActiveRecord::Base
  has_many :records, :foreign_key =&amp;gt; 'card_id', :dependent =&amp;gt; :destroy
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Model HospitalCard&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class HospitalCard &amp;lt; Card
  has_one :last_record, :class_name =&amp;gt; 'Record', :foreign_key =&amp;gt; 'card_id', :order =&amp;gt; 'id DESC'
  has_many :record_criterias, :through =&amp;gt; :last_record
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Model Record&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Record &amp;lt; ActiveRecord::Base
  belongs_to :card
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class RecordCriteria &amp;lt; ActiveRecord::Base
  belongs_to :record
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I try&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;Card.find(1).record_criterias&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
ActiveRecord::StatementInvalid: ODBC::Error: S0002 (208) [Microsoft][SQL Native Client][SQL Server]Invalid object name 'record_criteria'.: SELECT [record_criteria].* FROM [record_criteria] INNER JOIN
[records] ON [record_criteria].record_id = [records].id WHERE [record_criteria].[deleted_at] IS NULL AND (([records].card_id = 1) AND (((records.deleted_at IS NULL))))
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract_adapter.rb:207:in `log'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-sqlserver-adapter-3.0.10/lib/active_record/connection_adapters/sqlserver/database_statements.rb:249:in `raw_select'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-sqlserver-adapter-3.0.10/lib/active_record/connection_adapters/sqlserver/database_statements.rb:193:in `select'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/base.rb:467:in `find_by_sql'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation.rb:64:in `to_a'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:143:in `all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:105:in `send'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:105:in `find'
        from C:0:in `__send__'
        from C:0:in `find'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/base.rb:1121:in `with_scope'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:203:in `send'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:203:in `with_scope'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_collection.rb:410:in `load_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:145:in `inspect'
        from C:/Ruby/lib/ruby/1.8/irb.rb:310:in `output_value'
        from C:/Ruby/lib/ruby/1.8/irb.rb:159:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:271:in `signal_status'
        from C:/Ruby/lib/ruby/1.8/irb.rb:155:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:154:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:71:in `start'
        from C:/Ruby/lib/ruby/1.8/irb.rb:70:in `catch'
        from C:/Ruby/lib/ruby/1.8/irb.rb:70:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands/console.rb:44:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands/console.rb:8:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands.rb:23
        from script/rails:6:in `require'
        from script/rails:6irb(main):017:0&amp;gt; 1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;'record_criteria' - wrong table name I have
'record_criterias'&lt;/p&gt;
&lt;p&gt;Not depends on database adapter. I tested it via sqlite3 and
sqlserver with the same result.&lt;/p&gt;
&lt;p&gt;In 3.0.4 all works properly&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm using rails 3.0.5

I have Model Card

@@@ ruby
class Card &lt; ActiveRecord::Base
  has_many :records, :foreign_key =&gt; 'card_id', :dependent =&gt; :destroy
end
@@@

Model HospitalCard

@@@ ruby
class HospitalCard &lt; Card
  has_one :last_record, :class_name =&gt; 'Record', :foreign_key =&gt; 'card_id', :order =&gt; 'id DESC'
  has_many :record_criterias, :through =&gt; :last_record
end
@@@

Model Record
@@@ ruby
class Record &lt; ActiveRecord::Base
  belongs_to :card
end
@@@
And
@@@ ruby
class RecordCriteria &lt; ActiveRecord::Base
  belongs_to :record
end
@@@


When I try
@@@ ruby
Card.find(1).record_criterias
@@@

@@@ ruby

ActiveRecord::StatementInvalid: ODBC::Error: S0002 (208) [Microsoft][SQL Native Client][SQL Server]Invalid object name 'record_criteria'.: SELECT [record_criteria].* FROM [record_criteria] INNER JOIN
[records] ON [record_criteria].record_id = [records].id WHERE [record_criteria].[deleted_at] IS NULL AND (([records].card_id = 1) AND (((records.deleted_at IS NULL))))
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract_adapter.rb:207:in `log'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-sqlserver-adapter-3.0.10/lib/active_record/connection_adapters/sqlserver/database_statements.rb:249:in `raw_select'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-sqlserver-adapter-3.0.10/lib/active_record/connection_adapters/sqlserver/database_statements.rb:193:in `select'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/base.rb:467:in `find_by_sql'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation.rb:64:in `to_a'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:143:in `all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:105:in `send'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:105:in `find'
        from C:0:in `__send__'
        from C:0:in `find'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/base.rb:1121:in `with_scope'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:203:in `send'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:203:in `with_scope'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_collection.rb:410:in `load_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:145:in `inspect'
        from C:/Ruby/lib/ruby/1.8/irb.rb:310:in `output_value'
        from C:/Ruby/lib/ruby/1.8/irb.rb:159:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:271:in `signal_status'
        from C:/Ruby/lib/ruby/1.8/irb.rb:155:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:154:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:71:in `start'
        from C:/Ruby/lib/ruby/1.8/irb.rb:70:in `catch'
        from C:/Ruby/lib/ruby/1.8/irb.rb:70:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands/console.rb:44:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands/console.rb:8:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands.rb:23
        from script/rails:6:in `require'
        from script/rails:6irb(main):017:0&gt; 1
@@@

'record_criteria' - wrong table name I have 'record_criterias'

Not depends on database adapter. I tested it via sqlite3 and sqlserver with the same result. 


In 3.0.4 all works properly</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm using rails 3.0.5&lt;/p&gt;
&lt;p&gt;I have Model Card&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Card &amp;lt; ActiveRecord::Base
  has_many :records, :foreign_key =&amp;gt; 'card_id', :dependent =&amp;gt; :destroy
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Model HospitalCard&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class HospitalCard &amp;lt; Card
  has_one :last_record, :class_name =&amp;gt; 'Record', :foreign_key =&amp;gt; 'card_id', :order =&amp;gt; 'id DESC'
  has_many :record_criterias, :through =&amp;gt; :last_record
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Model Record&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Record &amp;lt; ActiveRecord::Base
  belongs_to :card
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class RecordCriteria &amp;lt; ActiveRecord::Base
  belongs_to :record
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I try&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;Card.find(1).record_criterias&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
ActiveRecord::StatementInvalid: ODBC::Error: S0002 (208) [Microsoft][SQL Native Client][SQL Server]Invalid object name 'record_criteria'.: SELECT [record_criteria].* FROM [record_criteria] INNER JOIN
[records] ON [record_criteria].record_id = [records].id WHERE [record_criteria].[deleted_at] IS NULL AND (([records].card_id = 1) AND (((records.deleted_at IS NULL))))
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract_adapter.rb:207:in `log'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-sqlserver-adapter-3.0.10/lib/active_record/connection_adapters/sqlserver/database_statements.rb:249:in `raw_select'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-sqlserver-adapter-3.0.10/lib/active_record/connection_adapters/sqlserver/database_statements.rb:193:in `select'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/connection_adapters/abstract/query_cache.rb:56:in `select_all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/base.rb:467:in `find_by_sql'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation.rb:64:in `to_a'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:143:in `all'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:105:in `send'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/relation/finder_methods.rb:105:in `find'
        from C:0:in `__send__'
        from C:0:in `find'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/base.rb:1121:in `with_scope'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:203:in `send'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:203:in `with_scope'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/has_many_through_association.rb:84:in `find_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_collection.rb:410:in `load_target'
        from C:/Ruby/lib/ruby/gems/1.8/gems/activerecord-3.0.5/lib/active_record/associations/association_proxy.rb:145:in `inspect'
        from C:/Ruby/lib/ruby/1.8/irb.rb:310:in `output_value'
        from C:/Ruby/lib/ruby/1.8/irb.rb:159:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:271:in `signal_status'
        from C:/Ruby/lib/ruby/1.8/irb.rb:155:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:154:in `eval_input'
        from C:/Ruby/lib/ruby/1.8/irb.rb:71:in `start'
        from C:/Ruby/lib/ruby/1.8/irb.rb:70:in `catch'
        from C:/Ruby/lib/ruby/1.8/irb.rb:70:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands/console.rb:44:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands/console.rb:8:in `start'
        from C:/Ruby/lib/ruby/gems/1.8/gems/railties-3.0.5/lib/rails/commands.rb:23
        from script/rails:6:in `require'
        from script/rails:6irb(main):017:0&amp;gt; 1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;'record_criteria' - wrong table name I have
'record_criterias'&lt;/p&gt;
&lt;p&gt;Not depends on database adapter. I tested it via sqlite3 and
sqlserver with the same result.&lt;/p&gt;
&lt;p&gt;In 3.0.4 all works properly&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-21T09:24:29+00:00</created-at>
      <creator-id type="integer">142144</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6600</number>
      <permalink>305-ar-has_many-through-wrong-table-name</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>3.0.5 AR: has_many :through - wrong table name</title>
      <updated-at type="datetime">2011-03-21T09:45:46+00:00</updated-at>
      <user-id type="integer">142144</user-id>
      <version type="integer">1</version>
      <user-name>Strelok</user-name>
      <creator-name>Strelok</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6600</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Duplicate of #6479.

Strictly speaking criteria is the plural of criterion - your class name should be RecordCriterion. However this still doesn't work so you'll need to add a custom inflection to your inflections.rb initializer.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Duplicate of &lt;a href=&quot;/projects/8994/tickets/6479&quot; title=
&quot;Ticket #6479&quot;&gt;#6479&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Strictly speaking criteria is the plural of criterion - your
class name should be RecordCriterion. However this still doesn't
work so you'll need to add a custom inflection to your
inflections.rb initializer.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-21T11:56:10+00:00</created-at>
      <creator-id type="integer">142144</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6600</number>
      <permalink>305-ar-has_many-through-wrong-table-name</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>3.0.5 AR: has_many :through - wrong table name</title>
      <updated-at type="datetime">2011-03-21T11:56:15+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>Strelok</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6600</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-21T11:56:40+00:00</created-at>
      <creator-id type="integer">142144</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6600</number>
      <permalink>305-ar-has_many-through-wrong-table-name</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag nil="true"></tag>
      <title>3.0.5 AR: has_many :through - wrong table name</title>
      <updated-at type="datetime">2011-03-21T11:56:47+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">3</version>
      <user-name>Andrew White</user-name>
      <creator-name>Strelok</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6600</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
