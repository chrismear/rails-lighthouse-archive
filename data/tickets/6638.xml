<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">7697</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-28T13:59:14+01:00</created-at>
  <creator-id type="integer">143122</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71470</milestone-id>
  <number type="integer">6638</number>
  <permalink>autogenerated-fixture-ids-too-long-for-some-mysql-integer-types</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag nil="true"></tag>
  <title>Autogenerated fixture ids too long for some MySQL integer types</title>
  <updated-at type="datetime">2011-03-29T16:27:23+01:00</updated-at>
  <user-id type="integer">7697</user-id>
  <version type="integer">4</version>
  <user-name>Andrew White</user-name>
  <creator-name>Martin Tepper</creator-name>
  <assigned-user-name>Andrew White</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6638</url>
  <milestone-title>3.1</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>We've came across this by accident. Some of our tables had the primary key column &quot;id&quot; set to SMALLINT (http://dev.mysql.com/doc/refman/5.0/en/numeric-types.html) to save a little disk space. The problem is that the ids generated by Fixtures::identify are too long - they don't take the length of the target column into account, being just a modulo'd hash of the name.

This is on Rails 2.3.11.

The question is, is this something warranting attention ?
I'd like to go and try to make a test and a fix for this, as I consider this a bug - the magic fixtures should be magic enough to work on smaller columns.

But will a solution, which might make the Fixture system more complicated, be accepted ? Or is this too much of an edge case ?</original-body>
  <latest-body>We've came across this by accident. Some of our tables had the primary key column &quot;id&quot; set to SMALLINT (http://dev.mysql.com/doc/refman/5.0/en/numeric-types.html) to save a little disk space. The problem is that the ids generated by Fixtures::identify are too long - they don't take the length of the target column into account, being just a modulo'd hash of the name.

This is on Rails 2.3.11.

The question is, is this something warranting attention ?
I'd like to go and try to make a test and a fix for this, as I consider this a bug - the magic fixtures should be magic enough to work on smaller columns.

But will a solution, which might make the Fixture system more complicated, be accepted ? Or is this too much of an edge case ?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;We've came across this by accident. Some of our tables had the
primary key column &quot;id&quot; set to SMALLINT (&lt;a href=
&quot;http://dev.mysql.com/doc/refman/5.0/en/numeric-types.html&quot;&gt;http://dev.mysql.com/doc/refman/5.0/en/numeric-types.html&lt;/a&gt;)
to save a little disk space. The problem is that the ids generated
by Fixtures::identify are too long - they don't take the length of
the target column into account, being just a modulo'd hash of the
name.&lt;/p&gt;
&lt;p&gt;This is on Rails 2.3.11.&lt;/p&gt;
&lt;p&gt;The question is, is this something warranting attention ?&lt;br&gt;
I'd like to go and try to make a test and a fix for this, as I
consider this a bug - the magic fixtures should be magic enough to
work on smaller columns.&lt;/p&gt;
&lt;p&gt;But will a solution, which might make the Fixture system more
complicated, be accepted ? Or is this too much of an edge case
?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>We've came across this by accident. Some of our tables had the primary key column &quot;id&quot; set to SMALLINT (http://dev.mysql.com/doc/refman/5.0/en/numeric-types.html) to save a little disk space. The problem is that the ids generated by Fixtures::identify are too long - they don't take the length of the target column into account, being just a modulo'd hash of the name.

This is on Rails 2.3.11.

The question is, is this something warranting attention ?
I'd like to go and try to make a test and a fix for this, as I consider this a bug - the magic fixtures should be magic enough to work on smaller columns.

But will a solution, which might make the Fixture system more complicated, be accepted ? Or is this too much of an edge case ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;We've came across this by accident. Some of our tables had the
primary key column &quot;id&quot; set to SMALLINT (&lt;a href=
&quot;http://dev.mysql.com/doc/refman/5.0/en/numeric-types.html&quot;&gt;http://dev.mysql.com/doc/refman/5.0/en/numeric-types.html&lt;/a&gt;)
to save a little disk space. The problem is that the ids generated
by Fixtures::identify are too long - they don't take the length of
the target column into account, being just a modulo'd hash of the
name.&lt;/p&gt;
&lt;p&gt;This is on Rails 2.3.11.&lt;/p&gt;
&lt;p&gt;The question is, is this something warranting attention ?&lt;br&gt;
I'd like to go and try to make a test and a fix for this, as I
consider this a bug - the magic fixtures should be magic enough to
work on smaller columns.&lt;/p&gt;
&lt;p&gt;But will a solution, which might make the Fixture system more
complicated, be accepted ? Or is this too much of an edge case
?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-28T13:59:14+01:00</created-at>
      <creator-id type="integer">143122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6638</number>
      <permalink>autogenerated-fixture-ids-too-long-for-some-mysql-integer-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Autogenerated fixture ids too long for some MySQL integer types</title>
      <updated-at type="datetime">2011-03-28T13:59:23+01:00</updated-at>
      <user-id type="integer">143122</user-id>
      <version type="integer">1</version>
      <user-name>Martin Tepper</user-name>
      <creator-name>Martin Tepper</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6638</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Wouldn't it be easier just to convert the columns to INT? What's the justification for keeping them as SMALLINT - performance difference would be next to nothing and at most you'd save 130KB before you overflowed the id column. I can see the logic of keeping other columns as small as possible if you're dealing with millions of rows but not for the primary key column.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Wouldn't it be easier just to convert the columns to INT? What's
the justification for keeping them as SMALLINT - performance
difference would be next to nothing and at most you'd save 130KB
before you overflowed the id column. I can see the logic of keeping
other columns as small as possible if you're dealing with millions
of rows but not for the primary key column.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-28T21:33:51+01:00</created-at>
      <creator-id type="integer">143122</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6638</number>
      <permalink>autogenerated-fixture-ids-too-long-for-some-mysql-integer-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Autogenerated fixture ids too long for some MySQL integer types</title>
      <updated-at type="datetime">2011-03-28T21:33:59+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>Martin Tepper</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6638</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Well, the justification is that if you reference the primary id from other tables, and if those have a large number of rows, the few bytes per foreign key entry can add up. Especially if you have (multiple) indices on the foreign keys.
This will probably not be a game-changer for one table, but when you are in a tight spot memory-wise on your DB server, you're trying to optimize where you can.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well, the justification is that if you reference the primary id
from other tables, and if those have a large number of rows, the
few bytes per foreign key entry can add up. Especially if you have
(multiple) indices on the foreign keys.&lt;br&gt;
This will probably not be a game-changer for one table, but when
you are in a tight spot memory-wise on your DB server, you're
trying to optimize where you can.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-29T16:21:17+01:00</created-at>
      <creator-id type="integer">143122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6638</number>
      <permalink>autogenerated-fixture-ids-too-long-for-some-mysql-integer-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Autogenerated fixture ids too long for some MySQL integer types</title>
      <updated-at type="datetime">2011-03-29T16:21:25+01:00</updated-at>
      <user-id type="integer">143122</user-id>
      <version type="integer">3</version>
      <user-name>Martin Tepper</user-name>
      <creator-name>Martin Tepper</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6638</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yep, I can see that would make a difference - go ahead and see if you can fix it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yep, I can see that would make a difference - go ahead and see
if you can fix it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-29T16:27:15+01:00</created-at>
      <creator-id type="integer">143122</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">6638</number>
      <permalink>autogenerated-fixture-ids-too-long-for-some-mysql-integer-types</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Autogenerated fixture ids too long for some MySQL integer types</title>
      <updated-at type="datetime">2011-03-29T16:27:23+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">4</version>
      <user-name>Andrew White</user-name>
      <creator-name>Martin Tepper</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6638</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
