<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-05-24T04:02:50+01:00</created-at>
  <creator-id type="integer">8964</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2704</number>
  <permalink>allow-calltime-list-of-allowed-attributes-for-mass-assignment</permalink>
  <priority type="integer">1824</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>3.0 active_record patch tested testing tests</tag>
  <title>allow calltime list of allowed attributes for mass assignment</title>
  <updated-at type="datetime">2009-05-26T00:28:54+01:00</updated-at>
  <user-id type="integer">8964</user-id>
  <version type="integer">7</version>
  <user-name>cainlevy</user-name>
  <creator-name>cainlevy</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2704</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>As described and discussed in http://groups.google.com/group/rubyonrails-core/browse_thread/thread/3b6818496d0d07f1.

This ticket adds an ActiveRecord::Base#assign method that mimics #attributes= but with one difference -- it accepts a list of assignable attributes. This effectively moves the attr_protected/attr_accessible paradigm into a context that is naturally aware of the current user's role and permissions.

The list of assignable attributes act as an override to any existing attr_accessible or attr_protected declarations. This keeps it backwards compatible; if the list of assignable attributes is not specified, then assign(hash) acts exactly the same as attributes=(hash).

All methods that accept mass assignment hashes are upgraded to also accept a list of allowed attributes. This only created a backwards-compatibility conflict in one spot: the replace parameter for build_association() and create_association() has been pushed into the third position.</original-body>
  <latest-body>As described and discussed in http://groups.google.com/group/rubyonrails-core/browse_thread/thread/3b6818496d0d07f1.

This ticket adds an ActiveRecord::Base#assign method that mimics #attributes= but with one difference -- it accepts a list of assignable attributes. This effectively moves the attr_protected/attr_accessible paradigm into a context that is naturally aware of the current user's role and permissions.

The list of assignable attributes act as an override to any existing attr_accessible or attr_protected declarations. This keeps it backwards compatible; if the list of assignable attributes is not specified, then assign(hash) acts exactly the same as attributes=(hash).

All methods that accept mass assignment hashes are upgraded to also accept a list of allowed attributes. This only created a backwards-compatibility conflict in one spot: the replace parameter for build_association() and create_association() has been pushed into the third position.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;As described and discussed in &lt;a href=&quot;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/3b6818496d0d07f1.%3C/p&quot;&gt;
http://groups.google.com/group/r...&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;p&gt;This ticket adds an ActiveRecord::Base#assign method that mimics
#attributes= but with one difference -- it accepts a list of
assignable attributes. This effectively moves the
attr_protected/attr_accessible paradigm into a context that is
naturally aware of the current user's role and permissions.&lt;/p&gt;
&lt;p&gt;The list of assignable attributes act as an override to any
existing attr_accessible or attr_protected declarations. This keeps
it backwards compatible; if the list of assignable attributes is
not specified, then assign(hash) acts exactly the same as
attributes=(hash).&lt;/p&gt;
&lt;p&gt;All methods that accept mass assignment hashes are upgraded to
also accept a list of allowed attributes. This only created a
backwards-compatibility conflict in one spot: the replace parameter
for build_association() and create_association() has been pushed
into the third position.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As described and discussed in http://groups.google.com/group/rubyonrails-core/browse_thread/thread/3b6818496d0d07f1.

This ticket adds an ActiveRecord::Base#assign method that mimics #attributes= but with one difference -- it accepts a list of assignable attributes. This effectively moves the attr_protected/attr_accessible paradigm into a context that is naturally aware of the current user's role and permissions.

The list of assignable attributes act as an override to any existing attr_accessible or attr_protected declarations. This keeps it backwards compatible; if the list of assignable attributes is not specified, then assign(hash) acts exactly the same as attributes=(hash).

All methods that accept mass assignment hashes are upgraded to also accept a list of allowed attributes. This only created a backwards-compatibility conflict in one spot: the replace parameter for build_association() and create_association() has been pushed into the third position.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As described and discussed in &lt;a href=
&quot;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/3b6818496d0d07f1&quot;&gt;
http://groups.google.com/group/rubyonrails-core/browse_thread/threa...&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This ticket adds an ActiveRecord::Base#assign method that mimics
#attributes= but with one difference -- it accepts a list of
assignable attributes. This effectively moves the
attr_protected/attr_accessible paradigm into a context that is
naturally aware of the current user's role and permissions.&lt;/p&gt;
&lt;p&gt;The list of assignable attributes act as an override to any
existing attr_accessible or attr_protected declarations. This keeps
it backwards compatible; if the list of assignable attributes is
not specified, then assign(hash) acts exactly the same as
attributes=(hash).&lt;/p&gt;
&lt;p&gt;All methods that accept mass assignment hashes are upgraded to
also accept a list of allowed attributes. This only created a
backwards-compatibility conflict in one spot: the replace parameter
for build_association() and create_association() has been pushed
into the third position.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-24T04:02:50+01:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2704</number>
      <permalink>allow-calltime-list-of-allowed-attributes-for-mass-assignment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.0 active_record patch tested testing tests</tag>
      <title>allow calltime list of allowed attributes for mass assignment</title>
      <updated-at type="datetime">2009-05-24T04:02:55+01:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">1</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2704</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I don't think this massive change to the api is justified.  You're introducing complexity for all users to support a few cases which, while hardly rare, aren't 100% of user's requirements.

It should be trivial for you to implement this as a plugin to see if people prefer this approach to specifying assignable attributes.  If that picks up momentum we can look at pulling it in to rails.

In the meantime users can already do:

@@@

@user.attributes = params[:user].slice(:email, :password, :password_confirmation)
@user.attributes = params[:user].except(:admin)

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't think this massive change to the api is justified.
You're introducing complexity for all users to support a few cases
which, while hardly rare, aren't 100% of user's requirements.&lt;/p&gt;
&lt;p&gt;It should be trivial for you to implement this as a plugin to
see if people prefer this approach to specifying assignable
attributes. If that picks up momentum we can look at pulling it in
to rails.&lt;/p&gt;
&lt;p&gt;In the meantime users can already do:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
@user.attributes = params[:user].slice(:email, :password, :password_confirmation)
@user.attributes = params[:user].except(:admin)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-24T07:26:13+01:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2704</number>
      <permalink>allow-calltime-list-of-allowed-attributes-for-mass-assignment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>3.0 active_record patch tested testing tests</tag>
      <title>allow calltime list of allowed attributes for mass assignment</title>
      <updated-at type="datetime">2009-05-24T07:26:17+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>cainlevy</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2704</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hey Koz, thanks for the reply --

I certainly hope I'm not just creating complexity for everyone. How does this ticket do that? This change (ignoring #2705) is nearly 100% backwards compatible, isn't it? Most of the diff deals with changing method signatures for association builders to pass through the extra optional parameter, which really isn't a fun thing to do in a plugin.

I do think that Hash#slice and Hash#except can help, but I also think there's value in the mass assignment method of choice knowing whether the attributes have already been filtered or not. For example, I like the fallback behavior to an intelligent default attribute blacklist for the primary key and other special columns.

Again, I'm curious how this adds needless complexity, as it's a completely optional parameter that only appears when you need it. If you think that ticket #2705 is going too far that's fine with me -- I'm much more interested in this standalone change.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey Koz, thanks for the reply --&lt;/p&gt;
&lt;p&gt;I certainly hope I'm not just creating complexity for everyone.
How does this ticket do that? This change (ignoring &lt;a href=
&quot;/projects/8994/tickets/2705&quot; title=&quot;Ticket #2705&quot;&gt;#2705&lt;/a&gt;) is
nearly 100% backwards compatible, isn't it? Most of the diff deals
with changing method signatures for association builders to pass
through the extra optional parameter, which really isn't a fun
thing to do in a plugin.&lt;/p&gt;
&lt;p&gt;I do think that Hash#slice and Hash#except can help, but I also
think there's value in the mass assignment method of choice knowing
whether the attributes have already been filtered or not. For
example, I like the fallback behavior to an intelligent default
attribute blacklist for the primary key and other special
columns.&lt;/p&gt;
&lt;p&gt;Again, I'm curious how this adds needless complexity, as it's a
completely optional parameter that only appears when you need it.
If you think that ticket &lt;a href=&quot;/projects/8994/tickets/2705&quot;
title=&quot;Ticket #2705&quot;&gt;#2705&lt;/a&gt; is going too far that's fine with me
-- I'm much more interested in this standalone change.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-24T08:13:17+01:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2704</number>
      <permalink>allow-calltime-list-of-allowed-attributes-for-mass-assignment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>3.0 active_record patch tested testing tests</tag>
      <title>allow calltime list of allowed attributes for mass assignment</title>
      <updated-at type="datetime">2009-05-24T08:13:21+01:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">3</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2704</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I certainly don't want to come accross like I'm opposed to changing the
attribute assignment code.  What I'm trying to get at is that we should
test something drastic like this through plugins.

This lets us see how people adopt it, bed down any issues etc.  If the
plugin gains critical mass, then that's a great sign that the
functionality should be rolled into the core of rails itself.

The plugin would be incredibly simple, a single method for AR::Base and
can therefore focus on gathering API and usability feedback from users.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I certainly don't want to come accross like I'm opposed to
changing the&lt;br&gt;
attribute assignment code. What I'm trying to get at is that we
should&lt;br&gt;
test something drastic like this through plugins.&lt;/p&gt;
&lt;p&gt;This lets us see how people adopt it, bed down any issues etc.
If the&lt;br&gt;
plugin gains critical mass, then that's a great sign that the&lt;br&gt;
functionality should be rolled into the core of rails itself.&lt;/p&gt;
&lt;p&gt;The plugin would be incredibly simple, a single method for
AR::Base and&lt;br&gt;
can therefore focus on gathering API and usability feedback from
users.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-24T09:09:34+01:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2704</number>
      <permalink>allow-calltime-list-of-allowed-attributes-for-mass-assignment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>3.0 active_record patch tested testing tests</tag>
      <title>allow calltime list of allowed attributes for mass assignment</title>
      <updated-at type="datetime">2009-05-24T09:09:35+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>cainlevy</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2704</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yep. It would certainly be easy to distribute the assign() method via a plugin. It'd be much harder to extend the change to the other mass assignment methods for consistency, but perhaps you're saying that's not necessary to field test the concept?

Hmm, when can we say that a plugin has critical mass?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yep. It would certainly be easy to distribute the assign()
method via a plugin. It'd be much harder to extend the change to
the other mass assignment methods for consistency, but perhaps
you're saying that's not necessary to field test the concept?&lt;/p&gt;
&lt;p&gt;Hmm, when can we say that a plugin has critical mass?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-24T09:43:19+01:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2704</number>
      <permalink>allow-calltime-list-of-allowed-attributes-for-mass-assignment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>3.0 active_record patch tested testing tests</tag>
      <title>allow calltime list of allowed attributes for mass assignment</title>
      <updated-at type="datetime">2009-05-24T09:43:22+01:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">5</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2704</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Right, there's no reason to remove or deprecate the existing method.
This is about experimenting with an alternative implementation.

As for when it has critical mass, it should be 'obvious' and 'everyone'
should be using it.  These are obviously slippery definitions but in the
past we've been well-served by it.

Even if it remains a plugin forever, we'll have an alternative
mass-assignment method available for users who want it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Right, there's no reason to remove or deprecate the existing
method.&lt;br&gt;
This is about experimenting with an alternative implementation.&lt;/p&gt;
&lt;p&gt;As for when it has critical mass, it should be 'obvious' and
'everyone'&lt;br&gt;
should be using it. These are obviously slippery definitions but in
the&lt;br&gt;
past we've been well-served by it.&lt;/p&gt;
&lt;p&gt;Even if it remains a plugin forever, we'll have an
alternative&lt;br&gt;
mass-assignment method available for users who want it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-24T09:50:55+01:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2704</number>
      <permalink>allow-calltime-list-of-allowed-attributes-for-mass-assignment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>3.0 active_record patch tested testing tests</tag>
      <title>allow calltime list of allowed attributes for mass assignment</title>
      <updated-at type="datetime">2009-05-24T09:50:56+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">6</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>cainlevy</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2704</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>http://github.com/cainlevy/mass_assignment</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;http://github.com/cainlevy/mass_assignment&quot;&gt;http://github.com/cainlevy/mass_assignment&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-26T00:28:52+01:00</created-at>
      <creator-id type="integer">8964</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2704</number>
      <permalink>allow-calltime-list-of-allowed-attributes-for-mass-assignment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>3.0 active_record patch tested testing tests</tag>
      <title>allow calltime list of allowed attributes for mass assignment</title>
      <updated-at type="datetime">2009-05-26T00:28:54+01:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">7</version>
      <user-name>cainlevy</user-name>
      <creator-name>cainlevy</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2704</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a7a9a8f465baa8c1a8f628b9a2a37373279ac29f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-05-24T04:02:50+01:00</created-at>
      <filename>mass_assigment_revisited.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">125758</id>
      <size type="integer">68280</size>
      <uploader-id type="integer">8964</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/125758/mass_assigment_revisited.diff</url>
    </attachment>
  </attachments>
</ticket>
