<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-19T14:25:28+01:00</created-at>
  <creator-id type="integer">750</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3142</number>
  <permalink>make-select-options-in-forms-symbolstring-indifferent</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>actionpack patch</tag>
  <title>Make select options in forms symbol/string indifferent</title>
  <updated-at type="datetime">2010-07-19T14:25:28+01:00</updated-at>
  <user-id type="integer">750</user-id>
  <version type="integer">9</version>
  <user-name>Peter Marklund</user-name>
  <creator-name>Peter Marklund</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3142</url>
  <priority-name nil="true"></priority-name>
  <original-body>A gotcha I've run into a number of times is that my options array for a select box will be symbols but the param to select an option will be a string, or sometimes vice versa. I don't think the select options should care whether a value is a string or a symbol (just like HashWithIndifferentAccess doesn't).

This patch changes the option_value_selected? method to do a to_s in its comparisons.</original-body>
  <latest-body>A gotcha I've run into a number of times is that my options array for a select box will be symbols but the param to select an option will be a string, or sometimes vice versa. I don't think the select options should care whether a value is a string or a symbol (just like HashWithIndifferentAccess doesn't).

This patch changes the option_value_selected? method to do a to_s in its comparisons.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;A gotcha I've run into a number of times is that my options
array for a select box will be symbols but the param to select an
option will be a string, or sometimes vice versa. I don't think the
select options should care whether a value is a string or a symbol
(just like HashWithIndifferentAccess doesn't).&lt;/p&gt;
&lt;p&gt;This patch changes the option_value_selected? method to do a
to_s in its comparisons.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A gotcha I've run into a number of times is that my options array for a select box will be integers or symbols but the param to select an option will be a string, or sometimes vice versa. I think it would be both more convenient and more correct to do the selection based on the string representation of the object (Object#to_s) since that is what will be in the HTML value attribute and what will be submitted. It would also avoid the gotcha.

The patch changes the option_value_selected? method to do a to_s in its comparisons.</body>
      <body-html>&lt;div&gt;&lt;p&gt;A gotcha I've run into a number of times is that my options
array for a select box will be integers or symbols but the param to
select an option will be a string, or sometimes vice versa. I think
it would be both more convenient and more correct to do the
selection based on the string representation of the object
(Object#to_s) since that is what will be in the HTML value
attribute and what will be submitted. It would also avoid the
gotcha.&lt;/p&gt;
&lt;p&gt;The patch changes the option_value_selected? method to do a to_s
in its comparisons.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-03T23:56:25+01:00</created-at>
      <creator-id type="integer">750</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3142</number>
      <permalink>make-select-options-in-forms-symbolstring-indifferent</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack patch</tag>
      <title>Make select options in forms select on string equality instead of object equality</title>
      <updated-at type="datetime">2009-09-07T09:54:56+01:00</updated-at>
      <user-id type="integer">750</user-id>
      <version type="integer">1</version>
      <user-name>Peter Marklund</user-name>
      <creator-name>Peter Marklund</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3142</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Added tests for when the selection or one of the options is nil.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Added tests for when the selection or one of the options is
nil.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-04T07:02:43+01:00</created-at>
      <creator-id type="integer">750</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3142</number>
      <permalink>make-select-options-in-forms-symbolstring-indifferent</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack patch</tag>
      <title>Make select options in forms symbol/string indifferent</title>
      <updated-at type="datetime">2009-09-04T07:02:46+01:00</updated-at>
      <user-id type="integer">750</user-id>
      <version type="integer">2</version>
      <user-name>Peter Marklund</user-name>
      <creator-name>Peter Marklund</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3142</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Converting everything to string is likely to break things. Wouldn't be better to explicitly check for symbols?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Converting everything to string is likely to break things.
Wouldn't be better to explicitly check for symbols?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-05T19:07:40+01:00</created-at>
      <creator-id type="integer">750</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3142</number>
      <permalink>make-select-options-in-forms-symbolstring-indifferent</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack patch</tag>
      <title>Make select options in forms symbol/string indifferent</title>
      <updated-at type="datetime">2009-09-05T19:07:45+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Peter Marklund</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3142</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>It's probably unusual that you have anything other than strings or symbols as options, but if you do, it seams reasonable that the objects that you use have a sensible to_s implementation, after all, to_s will be invoked when the HTML is rendered, no? Can you give an example of a use case that would be broken?</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's probably unusual that you have anything other than strings
or symbols as options, but if you do, it seams reasonable that the
objects that you use have a sensible to_s implementation, after
all, to_s will be invoked when the HTML is rendered, no? Can you
give an example of a use case that would be broken?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-06T08:37:05+01:00</created-at>
      <creator-id type="integer">750</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3142</number>
      <permalink>make-select-options-in-forms-symbolstring-indifferent</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack patch</tag>
      <title>Make select options in forms symbol/string indifferent</title>
      <updated-at type="datetime">2009-09-06T08:37:09+01:00</updated-at>
      <user-id type="integer">750</user-id>
      <version type="integer">4</version>
      <user-name>Peter Marklund</user-name>
      <creator-name>Peter Marklund</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3142</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Actually a more common use case for running into this issue is that the option values in the select are ActiveRecord integer ids. What's wrong with this code?

    &lt;% form_tag do %&gt;
      &lt;%= select_tag(:category_id,
        options_for_select(Category.all.map { |c| [c.name, c.id] }, params[:category_id])) %&gt;
      &lt;%= submit_tag %&gt;
    &lt;% end %&gt;    

What's wrong is that params[:category_id] will always fail to select an option since param values are strings, not integers. The workaround is to invoke to_i on the parameter or the option values or both. I think this is the scenario where this gotcha has come up the most often for me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Actually a more common use case for running into this issue is
that the option values in the select are ActiveRecord integer ids.
What's wrong with this code?&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;% form_tag do %&amp;gt;
  &amp;lt;%= select_tag(:category_id,
    options_for_select(Category.all.map { |c| [c.name, c.id] }, params[:category_id])) %&amp;gt;
  &amp;lt;%= submit_tag %&amp;gt;
&amp;lt;% end %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;What's wrong is that params[:category_id] will always fail to
select an option since param values are strings, not integers. The
workaround is to invoke to_i on the parameter or the option values
or both. I think this is the scenario where this gotcha has come up
the most often for me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-07T09:49:17+01:00</created-at>
      <creator-id type="integer">750</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3142</number>
      <permalink>make-select-options-in-forms-symbolstring-indifferent</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack patch</tag>
      <title>Make select options in forms symbol/string indifferent</title>
      <updated-at type="datetime">2009-09-07T09:49:22+01:00</updated-at>
      <user-id type="integer">750</user-id>
      <version type="integer">5</version>
      <user-name>Peter Marklund</user-name>
      <creator-name>Peter Marklund</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3142</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Two observations:

- this code:
@@@ ruby
if selected.respond_to?(:include?) &amp;&amp; !selected.is_a?(String)
@@@
is less specific than this:
@@@
if selected.is_a?(Enumerable)
@@@

The original code follows the duck-typing philosophy, with a small gotcha where String also responds_to :include?. While it's not always likely that something else could be passed in, it seems like a mistake to explicitly check for Enumerable.

- the code in the patch gets slow for large multiple-selection lists, especially if many options are selected. It's calling :to_s on selected for each element, which could really slow things down. For instance, if you had a multivalue select with 100 elements, 50 of which were selected, this code would call to_s 5000 times vs. a correct approach (converting types before calling options_for_select) which would need only O(200) conversions. While speed isn't always the goal, a ~25x performance loss is pretty extreme.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Two observations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;this code:
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;if selected.respond_to?(:include?) &amp;amp;&amp;amp; !selected.is_a?(String)&lt;/code&gt;
&lt;/pre&gt;
is less specific than this:&lt;br&gt;
&lt;pre&gt;
&lt;code&gt;if selected.is_a?(Enumerable)&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The original code follows the duck-typing philosophy, with a
small gotcha where String also responds_to :include?. While it's
not always likely that something else could be passed in, it seems
like a mistake to explicitly check for Enumerable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the code in the patch gets slow for large multiple-selection
lists, especially if many options are selected. It's calling :to_s
on selected for each element, which could really slow things down.
For instance, if you had a multivalue select with 100 elements, 50
of which were selected, this code would call to_s 5000 times vs. a
correct approach (converting types before calling
options_for_select) which would need only O(200) conversions. While
speed isn't always the goal, a ~25x performance loss is pretty
extreme.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-07T20:46:09+01:00</created-at>
      <creator-id type="integer">750</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3142</number>
      <permalink>make-select-options-in-forms-symbolstring-indifferent</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack patch</tag>
      <title>Make select options in forms symbol/string indifferent</title>
      <updated-at type="datetime">2009-09-07T20:46:16+01:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">6</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Peter Marklund</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3142</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Matt,
there reason I checked for Enumerable was because I needed to use the map method. It seems reasonable to require that if you want to select multiple values you do so with an Enumerable. I even doubt that anyone is using anything than an Array in practice. Of course, to follow the duck typing pattern you would check for the presence of both those methods, but checking for Enumerable seemed cleaner and more clear to me.

Regarding the speed, your example is a bit of an edge case. On my machine invoking to_s 5000 times on an integer seems to take about 4ms ad that doesn't seem too significant.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Matt,&lt;br&gt;
there reason I checked for Enumerable was because I needed to use
the map method. It seems reasonable to require that if you want to
select multiple values you do so with an Enumerable. I even doubt
that anyone is using anything than an Array in practice. Of course,
to follow the duck typing pattern you would check for the presence
of both those methods, but checking for Enumerable seemed cleaner
and more clear to me.&lt;/p&gt;
&lt;p&gt;Regarding the speed, your example is a bit of an edge case. On
my machine invoking to_s 5000 times on an integer seems to take
about 4ms ad that doesn't seem too significant.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-08T00:38:44+01:00</created-at>
      <creator-id type="integer">750</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3142</number>
      <permalink>make-select-options-in-forms-symbolstring-indifferent</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack patch</tag>
      <title>Make select options in forms symbol/string indifferent</title>
      <updated-at type="datetime">2009-09-08T00:38:45+01:00</updated-at>
      <user-id type="integer">750</user-id>
      <version type="integer">7</version>
      <user-name>Peter Marklund</user-name>
      <creator-name>Peter Marklund</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3142</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>You should be using collection_select for the case you've described there, it appears to work just fine.  I agree with jose that there's a risk of breaking things if we just to_s things blindly.


Given that there's a better and functional replacement for your case, and there's a risk of breakage, marking as wontfix.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You should be using collection_select for the case you've
described there, it appears to work just fine. I agree with jose
that there's a risk of breaking things if we just to_s things
blindly.&lt;/p&gt;
&lt;p&gt;Given that there's a better and functional replacement for your
case, and there's a risk of breakage, marking as wontfix.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-09-08T04:55:34+01:00</created-at>
      <creator-id type="integer">750</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3142</number>
      <permalink>make-select-options-in-forms-symbolstring-indifferent</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>actionpack patch</tag>
      <title>Make select options in forms symbol/string indifferent</title>
      <updated-at type="datetime">2009-09-08T04:55:38+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">8</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Peter Marklund</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3142</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I don't really see a practical risk of backwards incompatibility in this change. Can someone please show me a use case that breaks?

Yes, you are right Michael, using collection_select seems to not have this issue, curiously, I haven't tracked down why. The issue with collection_select though is that it mandates the use of an object which I didn't have in my example and it would force me to use a dummy object:

    &lt;% form_tag do %&gt;
    &lt;%= collection_select(:dummy, :category_id, Category.all, :name, :id, {:selected =&gt; params[:dummy][:category_id]}) %&gt;
      &lt;%= submit_tag %&gt;
    &lt;% end %&gt;

It seems a plain select_tag is better for this use case even if you then have to live with the to_s gotcha.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't really see a practical risk of backwards incompatibility
in this change. Can someone please show me a use case that
breaks?&lt;/p&gt;
&lt;p&gt;Yes, you are right Michael, using collection_select seems to not
have this issue, curiously, I haven't tracked down why. The issue
with collection_select though is that it mandates the use of an
object which I didn't have in my example and it would force me to
use a dummy object:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;% form_tag do %&amp;gt;
&amp;lt;%= collection_select(:dummy, :category_id, Category.all, :name, :id, {:selected =&amp;gt; params[:dummy][:category_id]}) %&amp;gt;
  &amp;lt;%= submit_tag %&amp;gt;
&amp;lt;% end %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It seems a plain select_tag is better for this use case even if
you then have to live with the to_s gotcha.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-09-08T23:07:39+01:00</created-at>
      <creator-id type="integer">750</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3142</number>
      <permalink>make-select-options-in-forms-symbolstring-indifferent</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>actionpack patch</tag>
      <title>Make select options in forms symbol/string indifferent</title>
      <updated-at type="datetime">2009-09-08T23:07:45+01:00</updated-at>
      <user-id type="integer">750</user-id>
      <version type="integer">9</version>
      <user-name>Peter Marklund</user-name>
      <creator-name>Peter Marklund</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3142</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>2b756a6be8db1deb0489860cd2c97db86b06418c</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-03T23:56:27+01:00</created-at>
      <filename>indifferent-select-options.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">260768</id>
      <size type="integer">2538</size>
      <uploader-id type="integer">750</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/260768/indifferent-select-options.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>32cf0412aea20fb67f6e521a11bd17f4615ba9f6</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-04T07:02:43+01:00</created-at>
      <filename>indifferent-select-options.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">260946</id>
      <size type="integer">3436</size>
      <uploader-id type="integer">750</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/260946/indifferent-select-options.diff</url>
    </attachment>
  </attachments>
</ticket>
