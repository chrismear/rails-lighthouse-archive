<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-24T19:06:24+00:00</created-at>
  <creator-id type="integer">18410</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6060</number>
  <permalink>allow-customization-of-form-class-on-button_to</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>actionview button_to helpers patch</tag>
  <title>Allow customization of form class on button_to</title>
  <updated-at type="datetime">2011-02-25T00:00:42+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">3</version>
  <user-name>rails</user-name>
  <creator-name>Andrei Bocan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6060</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hello hello gents,

I'll describe the issue I was having with `button_to` succinctly:

Say you've got two actions on a resource that require posts. Flag and Delete, for instance.

These two would both be posts, so the natural fit for this would be two `button_to`s, in order to allow non-js clients to use the features as well.

Now, in order to differentiate between the two in our javascript handlers, we'd require the ability to set some sort of class, to get to the elements easily.

Right now, the only class that you can set is the one of the submit button. The proper way to hook javascript into this would be to get the form, and hook its submit event. Only having a customizable class on the submit button leads to awkward css rules such as `form:has(.my-widget)`, which just feel kind of dirty.

This patch adds the :form_class modifier `button_to`.


You'll find the patch attached, and the link to the pull request on github is https://github.com/rails/rails/pull/108 in case that's easier for anyone.</original-body>
  <latest-body>Hello hello gents,

I'll describe the issue I was having with `button_to` succinctly:

Say you've got two actions on a resource that require posts. Flag and Delete, for instance.

These two would both be posts, so the natural fit for this would be two `button_to`s, in order to allow non-js clients to use the features as well.

Now, in order to differentiate between the two in our javascript handlers, we'd require the ability to set some sort of class, to get to the elements easily.

Right now, the only class that you can set is the one of the submit button. The proper way to hook javascript into this would be to get the form, and hook its submit event. Only having a customizable class on the submit button leads to awkward css rules such as `form:has(.my-widget)`, which just feel kind of dirty.

This patch adds the :form_class modifier `button_to`.


You'll find the patch attached, and the link to the pull request on github is https://github.com/rails/rails/pull/108 in case that's easier for anyone.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello hello gents,&lt;/p&gt;
&lt;p&gt;I'll describe the issue I was having with &lt;code&gt;button_to&lt;/code&gt;
succinctly:&lt;/p&gt;
&lt;p&gt;Say you've got two actions on a resource that require posts.
Flag and Delete, for instance.&lt;/p&gt;
&lt;p&gt;These two would both be posts, so the natural fit for this would
be two &lt;code&gt;button_to&lt;/code&gt;s, in order to allow non-js clients to
use the features as well.&lt;/p&gt;
&lt;p&gt;Now, in order to differentiate between the two in our javascript
handlers, we'd require the ability to set some sort of class, to
get to the elements easily.&lt;/p&gt;
&lt;p&gt;Right now, the only class that you can set is the one of the
submit button. The proper way to hook javascript into this would be
to get the form, and hook its submit event. Only having a
customizable class on the submit button leads to awkward css rules
such as &lt;code&gt;form:has(.my-widget)&lt;/code&gt;, which just feel kind of
dirty.&lt;/p&gt;
&lt;p&gt;This patch adds the :form_class modifier
&lt;code&gt;button_to&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You'll find the patch attached, and the link to the pull request
on github is &lt;a href=
&quot;https://github.com/rails/rails/pull/108&quot;&gt;https://github.com/rails/rails/pull/108&lt;/a&gt;
in case that's easier for anyone.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello hello gents,

I'll describe the issue I was having with `button_to` succinctly:

Say you've got two actions on a resource that require posts. Flag and Delete, for instance.

These two would both be posts, so the natural fit for this would be two `button_to`s, in order to allow non-js clients to use the features as well.

Now, in order to differentiate between the two in our javascript handlers, we'd require the ability to set some sort of class, to get to the elements easily.

Right now, the only class that you can set is the one of the submit button. The proper way to hook javascript into this would be to get the form, and hook its submit event. Only having a customizable class on the submit button leads to awkward css rules such as `form:has(.my-widget)`, which just feel kind of dirty.

This patch adds the :form_class modifier `button_to`.


You'll find the patch attached, and the link to the pull request on github is https://github.com/rails/rails/pull/108 in case that's easier for anyone.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello hello gents,&lt;/p&gt;
&lt;p&gt;I'll describe the issue I was having with &lt;code&gt;button_to&lt;/code&gt;
succinctly:&lt;/p&gt;
&lt;p&gt;Say you've got two actions on a resource that require posts.
Flag and Delete, for instance.&lt;/p&gt;
&lt;p&gt;These two would both be posts, so the natural fit for this would
be two &lt;code&gt;button_to&lt;/code&gt;s, in order to allow non-js clients to
use the features as well.&lt;/p&gt;
&lt;p&gt;Now, in order to differentiate between the two in our javascript
handlers, we'd require the ability to set some sort of class, to
get to the elements easily.&lt;/p&gt;
&lt;p&gt;Right now, the only class that you can set is the one of the
submit button. The proper way to hook javascript into this would be
to get the form, and hook its submit event. Only having a
customizable class on the submit button leads to awkward css rules
such as &lt;code&gt;form:has(.my-widget)&lt;/code&gt;, which just feel kind of
dirty.&lt;/p&gt;
&lt;p&gt;This patch adds the :form_class modifier
&lt;code&gt;button_to&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You'll find the patch attached, and the link to the pull request
on github is &lt;a href=
&quot;https://github.com/rails/rails/pull/108&quot;&gt;https://github.com/rails/rails/pull/108&lt;/a&gt;
in case that's easier for anyone.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-24T19:06:24+00:00</created-at>
      <creator-id type="integer">18410</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6060</number>
      <permalink>allow-customization-of-form-class-on-button_to</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview button_to helpers patch</tag>
      <title>Allow customization of form class on button_to</title>
      <updated-at type="datetime">2010-11-24T19:06:29+00:00</updated-at>
      <user-id type="integer">18410</user-id>
      <version type="integer">1</version>
      <user-name>Andrei Bocan</user-name>
      <creator-name>Andrei Bocan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6060</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-25T00:00:07+00:00</created-at>
      <creator-id type="integer">18410</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6060</number>
      <permalink>allow-customization-of-form-class-on-button_to</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>actionview button_to helpers patch</tag>
      <title>Allow customization of form class on button_to</title>
      <updated-at type="datetime">2011-02-25T00:00:42+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">2</version>
      <user-name>rails</user-name>
      <creator-name>Andrei Bocan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6060</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-25T00:00:07+00:00</created-at>
      <creator-id type="integer">18410</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6060</number>
      <permalink>allow-customization-of-form-class-on-button_to</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>actionview button_to helpers patch</tag>
      <title>Allow customization of form class on button_to</title>
      <updated-at type="datetime">2011-02-25T00:00:18+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>Andrei Bocan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6060</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c2ae48d4b7e9e7143067bf45c8eb430a0097b2d6</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-24T19:06:24+00:00</created-at>
      <filename>customizable-form-class.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">788418</id>
      <size type="integer">4434</size>
      <uploader-id type="integer">18410</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/788418/customizable-form-class.diff</url>
    </attachment>
  </attachments>
</ticket>
