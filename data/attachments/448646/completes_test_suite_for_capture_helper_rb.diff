From 15f59c4247ee003e47e63a921b855e1a9f2fc704 Mon Sep 17 00:00:00 2001
From: Xavier Noria <fxn@hashref.com>
Date: Tue, 16 Mar 2010 20:33:38 +0100
Subject: [PATCH 1/2] adds tests for #capture

---
 actionpack/test/template/capture_helper_test.rb |   23 +++++++++++++++++++++++
 1 files changed, 23 insertions(+), 0 deletions(-)

diff --git a/actionpack/test/template/capture_helper_test.rb b/actionpack/test/template/capture_helper_test.rb
index e65f8b1..dafc5e1 100644
--- a/actionpack/test/template/capture_helper_test.rb
+++ b/actionpack/test/template/capture_helper_test.rb
@@ -6,6 +6,29 @@ class CaptureHelperTest < ActionView::TestCase
     @av = ActionView::Base.new
     @_content_for = Hash.new {|h,k| h[k] = "" }
   end
+  
+  def test_capture_captures_the_temporary_output_buffer_in_its_block
+    assert_nil @av.output_buffer
+    string = @av.capture do
+      @av.output_buffer << 'foo'
+      @av.output_buffer << 'bar'
+    end
+    assert_nil @av.output_buffer
+    assert_equal 'foobar', string
+    assert_kind_of ActionView::NonConcattingString, string
+  end
+
+  def test_capture_captures_the_value_returned_by_the_block_in_the_temporary_buffer_is_blank
+    string = @av.capture('foo', 'bar') do |a, b|
+      a + b
+    end
+    assert_equal 'foobar', string
+    assert_kind_of ActionView::NonConcattingString, string
+  end
+
+  def test_capture_returns_nil_if_the_returned_value_is_not_a_string
+    assert_nil @av.capture { 1 }
+  end
 
   def test_content_for
     assert ! content_for?(:title)
-- 
1.6.6


From 0fda8a83a1cb6bb927cc6d63030255c02265a362 Mon Sep 17 00:00:00 2001
From: Xavier Noria <fxn@hashref.com>
Date: Tue, 16 Mar 2010 21:05:01 +0100
Subject: [PATCH 2/2] adds tests for #flush_output_buffer

---
 actionpack/test/template/capture_helper_test.rb |   37 ++++++++++++++++++++++-
 1 files changed, 36 insertions(+), 1 deletions(-)

diff --git a/actionpack/test/template/capture_helper_test.rb b/actionpack/test/template/capture_helper_test.rb
index dafc5e1..629f331 100644
--- a/actionpack/test/template/capture_helper_test.rb
+++ b/actionpack/test/template/capture_helper_test.rb
@@ -70,7 +70,7 @@ class CaptureHelperTest < ActionView::TestCase
       @av.output_buffer = ActionView::OutputBuffer.new
 
       # Ensure we set the output buffer to an encoding different than the default one.
-      alt_encoding = @av.output_buffer.encoding == Encoding::US_ASCII ? Encoding::UTF_8 : Encoding::US_ASCII
+      alt_encoding = alt_encoding(@av.output_buffer)
       @av.output_buffer.force_encoding(alt_encoding)
 
       @av.with_output_buffer do
@@ -83,4 +83,39 @@ class CaptureHelperTest < ActionView::TestCase
     assert_nil @av.output_buffer
     assert_equal "", @av.with_output_buffer {}
   end
+  
+  def test_flush_output_buffer_concats_output_buffer_to_response
+    view = view_with_controller
+    assert_equal [], view.response.body_parts
+    
+    view.output_buffer << 'OMG'
+    view.flush_output_buffer
+    assert_equal ['OMG'], view.response.body_parts
+    assert_equal '', view.output_buffer
+
+    view.output_buffer << 'foobar'
+    view.flush_output_buffer
+    assert_equal ['OMG', 'foobar'], view.response.body_parts
+    assert_equal '', view.output_buffer
+  end
+  
+  unless RUBY_VERSION < '1.9'
+    def test_flush_output_buffer_preserves_the_encoding_of_the_output_buffer
+      view = view_with_controller
+      alt_encoding = alt_encoding(view.output_buffer)
+      view.output_buffer.force_encoding(alt_encoding)
+      flush_output_buffer
+      assert_equal alt_encoding, view.output_buffer.encoding
+    end
+  end
+  
+  def alt_encoding(output_buffer)
+    output_buffer.encoding == Encoding::US_ASCII ? Encoding::UTF_8 : Encoding::US_ASCII
+  end
+  
+  def view_with_controller
+    returning(ActionView::Base.for_controller(TestController.new)) do |view|
+      view.output_buffer = ActionView::OutputBuffer.new
+    end
+  end
 end
-- 
1.6.6

