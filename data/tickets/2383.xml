<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-31T15:52:02+01:00</created-at>
  <creator-id type="integer">17296</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2383</number>
  <permalink>sqlbypass-session-store-doesnt-use-activerecordbase-connection</permalink>
  <priority type="integer">1543</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>SqlBypass session store doesn't use ActiveRecord::Base connection</title>
  <updated-at type="datetime">2010-01-15T21:46:11+00:00</updated-at>
  <user-id type="integer">82847</user-id>
  <version type="integer">6</version>
  <user-name>Chris Pruett</user-name>
  <creator-name>Luca Guidi</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2383</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>All the methods in `ActiveRecord::SessionStore::SqlBypass` use `@@connection` class var, instead of the homonym class method. This of course doesn't not guarantee that var isn't `nil`.

Try it by yourself:

@@@ruby
# config/initializers/session_store.rb
ActionController::Base.session_store = :active_record_store
ActiveRecord::SessionStore.session_class = ActiveRecord::SessionStore::SqlBypass
@@@

Then try to start the server and use sessions, it should raise a `NoMethodError`.

I created a patch for solving this issue, but not the whole problem. Since there aren't unit tests for `ActiveRecord` session stores, but only functional tests in `ActionPack`.

As you can see from the patch I replaced `@@connection` with `connection` only where covered by tests.</original-body>
  <latest-body>All the methods in `ActiveRecord::SessionStore::SqlBypass` use `@@connection` class var, instead of the homonym class method. This of course doesn't not guarantee that var isn't `nil`.

Try it by yourself:

@@@ruby
# config/initializers/session_store.rb
ActionController::Base.session_store = :active_record_store
ActiveRecord::SessionStore.session_class = ActiveRecord::SessionStore::SqlBypass
@@@

Then try to start the server and use sessions, it should raise a `NoMethodError`.

I created a patch for solving this issue, but not the whole problem. Since there aren't unit tests for `ActiveRecord` session stores, but only functional tests in `ActionPack`.

As you can see from the patch I replaced `@@connection` with `connection` only where covered by tests.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;All the methods in
&lt;code&gt;ActiveRecord::SessionStore::SqlBypass&lt;/code&gt; use
&lt;code&gt;@@connection&lt;/code&gt; class var, instead of the homonym class
method. This of course doesn't not guarantee that var isn't
&lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Try it by yourself:&lt;/p&gt;
&lt;p&gt;@@@ruby&lt;/p&gt;
&lt;h1&gt;config/initializers/session_store.rb&lt;/h1&gt;
&lt;p&gt;ActionController::Base.session_store = :active_record_store
ActiveRecord::SessionStore.session_class =
ActiveRecord::SessionStore::SqlBypass&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;

Then try to start the server and use sessions, it should raise a `NoMethodError`.

I created a patch for solving this issue, but not the whole problem. Since there aren't unit tests for `ActiveRecord` session stores, but only functional tests in `ActionPack`.

As you can see from the patch I replaced `@@connection` with `connection` only where covered by tests.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>All the methods in `ActiveRecord::SessionStore::SqlBypass` use `@@connection` class var, instead of the homonym class method. This of course doesn't not guarantee that var isn't `nil`.

Try it by yourself:

@@@ruby
# config/initializers/session_store.rb
ActionController::Base.session_store = :active_record_store
ActiveRecord::SessionStore.session_class = ActiveRecord::SessionStore::SqlBypass
@@@

Then try to start the server and use sessions, it should raise a `NoMethodError`.

I created a patch for solving this issue, but not the whole problem. Since there aren't unit tests for `ActiveRecord` session stores, but only functional tests in `ActionPack`.

As you can see from the patch I replaced `@@connection` with `connection` only where covered by tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;All the methods in
&lt;code&gt;ActiveRecord::SessionStore::SqlBypass&lt;/code&gt; use
&lt;code&gt;@@connection&lt;/code&gt; class var, instead of the homonym class
method. This of course doesn't not guarantee that var isn't
&lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Try it by yourself:&lt;/p&gt;
&lt;p&gt;@@@ruby&lt;/p&gt;
&lt;h1&gt;config/initializers/session_store.rb&lt;/h1&gt;
&lt;p&gt;ActionController::Base.session_store = :active_record_store
ActiveRecord::SessionStore.session_class =
ActiveRecord::SessionStore::SqlBypass&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;

Then try to start the server and use sessions, it should raise a `NoMethodError`.

I created a patch for solving this issue, but not the whole problem. Since there aren't unit tests for `ActiveRecord` session stores, but only functional tests in `ActionPack`.

As you can see from the patch I replaced `@@connection` with `connection` only where covered by tests.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-31T15:52:02+01:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2383</number>
      <permalink>sqlbypass-session-store-doesnt-use-activerecordbase-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record_store patch tested</tag>
      <title>SqlBypass session store doesn't use ActiveRecord::Base connection</title>
      <updated-at type="datetime">2009-03-31T15:52:05+01:00</updated-at>
      <user-id type="integer">17296</user-id>
      <version type="integer">1</version>
      <user-name>Luca Guidi</user-name>
      <creator-name>Luca Guidi</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2383</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-11T10:16:31+01:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2383</number>
      <permalink>sqlbypass-session-store-doesnt-use-activerecordbase-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_record_store patch tested</tag>
      <title>SqlBypass session store doesn't use ActiveRecord::Base connection</title>
      <updated-at type="datetime">2009-04-11T10:16:35+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Luca Guidi</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2383</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Excuse me if I'm wrong, but was it a mistake to mark this ticket resolved?

I am still seeing the issue that the original reporter describes, and it has been impeding my ability to use SqlBypass in my application.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Excuse me if I'm wrong, but was it a mistake to mark this ticket
resolved?&lt;/p&gt;
&lt;p&gt;I am still seeing the issue that the original reporter
describes, and it has been impeding my ability to use SqlBypass in
my application.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-25T00:21:42+00:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_record_store patch tested
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2383</number>
      <permalink>sqlbypass-session-store-doesnt-use-activerecordbase-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>SqlBypass session store doesn't use ActiveRecord::Base connection</title>
      <updated-at type="datetime">2009-11-25T00:21:44+00:00</updated-at>
      <user-id type="integer">17499</user-id>
      <version type="integer">3</version>
      <user-name>Grant Hutchins</user-name>
      <creator-name>Luca Guidi</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2383</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is the commit: http://github.com/rails/rails/commit/42cdc7571d115c5eb4ece440001d221f24553100
Which version of Rails are you using?</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is the commit: &lt;a href=
&quot;http://github.com/rails/rails/commit/42cdc7571d115c5eb4ece440001d221f24553100&quot;&gt;
http://github.com/rails/rails/commit/42cdc7571d115c5eb4ece440001d22...&lt;/a&gt;&lt;br&gt;
Which version of Rails are you using?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-11-25T09:31:42+00:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2383</number>
      <permalink>sqlbypass-session-store-doesnt-use-activerecordbase-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>SqlBypass session store doesn't use ActiveRecord::Base connection</title>
      <updated-at type="datetime">2009-11-25T09:31:45+00:00</updated-at>
      <user-id type="integer">17296</user-id>
      <version type="integer">4</version>
      <user-name>Luca Guidi</user-name>
      <creator-name>Luca Guidi</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2383</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm using Rails 2.3.5 (and was on 2.3.4 when I wrote the previous comment).

I think I've figured out what's going on. The patch you mentioned fixes the issue for the find_by_session_id method, but I was running into problems with the other methods, which still use @@connection.

I'll look into writing a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm using Rails 2.3.5 (and was on 2.3.4 when I wrote the
previous comment).&lt;/p&gt;
&lt;p&gt;I think I've figured out what's going on. The patch you
mentioned fixes the issue for the find_by_session_id method, but I
was running into problems with the other methods, which still use
@@connection.&lt;/p&gt;
&lt;p&gt;I'll look into writing a patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-12-03T17:43:52+00:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2383</number>
      <permalink>sqlbypass-session-store-doesnt-use-activerecordbase-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>SqlBypass session store doesn't use ActiveRecord::Base connection</title>
      <updated-at type="datetime">2009-12-03T17:43:59+00:00</updated-at>
      <user-id type="integer">17499</user-id>
      <version type="integer">5</version>
      <user-name>Grant Hutchins</user-name>
      <creator-name>Luca Guidi</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2383</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I patched the code to use `connection` instead of `@@connection`, which fixed the issue for the *first* call to session. However, on subsequent requests, I receive this error:

&gt; Mysql::Error: query: not connected: SELECT * FROM sessions WHERE session_id='1338b0600b1eddf9871f1fb878ac9bff'

Patching the `connection` method to this seems to fix the issue, but I'm not sure why or if it's the right solution

@@@ ruby
def connection
  @@connection = ActiveRecord::Base.connection
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I patched the code to use &lt;code&gt;connection&lt;/code&gt; instead of
&lt;code&gt;@@connection&lt;/code&gt;, which fixed the issue for the
&lt;em&gt;first&lt;/em&gt; call to session. However, on subsequent requests, I
receive this error:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mysql::Error: query: not connected: SELECT * FROM sessions WHERE
session_id='1338b0600b1eddf9871f1fb878ac9bff'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Patching the &lt;code&gt;connection&lt;/code&gt; method to this seems to fix
the issue, but I'm not sure why or if it's the right solution&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def connection
  @@connection = ActiveRecord::Base.connection
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-15T21:46:10+00:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2383</number>
      <permalink>sqlbypass-session-store-doesnt-use-activerecordbase-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>SqlBypass session store doesn't use ActiveRecord::Base connection</title>
      <updated-at type="datetime">2010-01-15T21:46:11+00:00</updated-at>
      <user-id type="integer">82847</user-id>
      <version type="integer">6</version>
      <user-name>Chris Pruett</user-name>
      <creator-name>Luca Guidi</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2383</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5aaf655072e3f2ed5f96deca53b9f0d95a1b3578</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-03-31T15:52:02+01:00</created-at>
      <filename>0001-Ensure-SqlBypass-use-ActiveRecord-Base-connection.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">106066</id>
      <size type="integer">3343</size>
      <uploader-id type="integer">17296</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/106066/0001-Ensure-SqlBypass-use-ActiveRecord-Base-connection.patch</url>
    </attachment>
  </attachments>
</ticket>
