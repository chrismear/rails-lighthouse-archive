<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-12-08T05:52:40+00:00</created-at>
  <creator-id type="integer">107166</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6131</number>
  <permalink>default_url_options-set-within-a-controller-are-not-cleared-after-every-request-on-production</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>default_url_options set within a controller are not cleared after every request on production</title>
  <updated-at type="datetime">2011-02-25T10:43:33+00:00</updated-at>
  <user-id type="integer">8407</user-id>
  <version type="integer">2</version>
  <user-name>Manfred Stienstra</user-name>
  <creator-name>Michael Reinsch</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6131</url>
  <priority-name>Low</priority-name>
  <original-body>With Rails 3.0.3:  default_url_options set from within a controller (default_url_options[:something] = &quot;value&quot;) won't be cleared after each request in a production environment.  Once set, the option will be used until overwritten or explicitly removed.  In development mode though, the option is dropped after each request.

For instance, we are using code like this:

@@@ ruby
  class ApplicationController
    before_filter :set_session_id_parameter
    def set_session_id_parameter
      if device_needs_session_param_in_url?
         session[:_dummy_param_to_force_session_init] = nil  # to make sure we have a session id
         key = Rails.application.config.session_options[:key]
         default_url_options[key] = request.session_options[:id]
      end
    end
  end
@@@

In development mode this works fine. But within a production environment (class caching enabled) the session ID parameter once set will stay for all subsequent requests until overwritten again.  This was unexpected behavior for us.  I also can't find any documentation indicating that this would be the case.</original-body>
  <latest-body>With Rails 3.0.3:  default_url_options set from within a controller (default_url_options[:something] = &quot;value&quot;) won't be cleared after each request in a production environment.  Once set, the option will be used until overwritten or explicitly removed.  In development mode though, the option is dropped after each request.

For instance, we are using code like this:

@@@ ruby
  class ApplicationController
    before_filter :set_session_id_parameter
    def set_session_id_parameter
      if device_needs_session_param_in_url?
         session[:_dummy_param_to_force_session_init] = nil  # to make sure we have a session id
         key = Rails.application.config.session_options[:key]
         default_url_options[key] = request.session_options[:id]
      end
    end
  end
@@@

In development mode this works fine. But within a production environment (class caching enabled) the session ID parameter once set will stay for all subsequent requests until overwritten again.  This was unexpected behavior for us.  I also can't find any documentation indicating that this would be the case.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;With Rails 3.0.3: default_url_options set from within a
controller (default_url_options[:something] = &quot;value&quot;) won't be
cleared after each request in a production environment. Once set,
the option will be used until overwritten or explicitly removed. In
development mode though, the option is dropped after each
request.&lt;/p&gt;
&lt;p&gt;For instance, we are using code like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class ApplicationController
    before_filter :set_session_id_parameter
    def set_session_id_parameter
      if device_needs_session_param_in_url?
         session[:_dummy_param_to_force_session_init] = nil  # to make sure we have a session id
         key = Rails.application.config.session_options[:key]
         default_url_options[key] = request.session_options[:id]
      end
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In development mode this works fine. But within a production
environment (class caching enabled) the session ID parameter once
set will stay for all subsequent requests until overwritten again.
This was unexpected behavior for us. I also can't find any
documentation indicating that this would be the case.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>With Rails 3.0.3:  default_url_options set from within a controller (default_url_options[:something] = &quot;value&quot;) won't be cleared after each request in a production environment.  Once set, the option will be used until overwritten or explicitly removed.  In development mode though, the option is dropped after each request.

For instance, we are using code like this:

@@@ ruby
  class ApplicationController
    before_filter :set_session_id_parameter
    def set_session_id_parameter
      if device_needs_session_param_in_url?
         session[:_dummy_param_to_force_session_init] = nil  # to make sure we have a session id
         key = Rails.application.config.session_options[:key]
         default_url_options[key] = request.session_options[:id]
      end
    end
  end
@@@

In development mode this works fine. But within a production environment (class caching enabled) the session ID parameter once set will stay for all subsequent requests until overwritten again.  This was unexpected behavior for us.  I also can't find any documentation indicating that this would be the case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;With Rails 3.0.3: default_url_options set from within a
controller (default_url_options[:something] = &quot;value&quot;) won't be
cleared after each request in a production environment. Once set,
the option will be used until overwritten or explicitly removed. In
development mode though, the option is dropped after each
request.&lt;/p&gt;
&lt;p&gt;For instance, we are using code like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class ApplicationController
    before_filter :set_session_id_parameter
    def set_session_id_parameter
      if device_needs_session_param_in_url?
         session[:_dummy_param_to_force_session_init] = nil  # to make sure we have a session id
         key = Rails.application.config.session_options[:key]
         default_url_options[key] = request.session_options[:id]
      end
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In development mode this works fine. But within a production
environment (class caching enabled) the session ID parameter once
set will stay for all subsequent requests until overwritten again.
This was unexpected behavior for us. I also can't find any
documentation indicating that this would be the case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-08T05:52:40+00:00</created-at>
      <creator-id type="integer">107166</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6131</number>
      <permalink>default_url_options-set-within-a-controller-are-not-cleared-after-every-request-on-production</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>default_url_options set within a controller are not cleared after every request on production</title>
      <updated-at type="datetime">2010-12-08T05:52:43+00:00</updated-at>
      <user-id type="integer">107166</user-id>
      <version type="integer">1</version>
      <user-name>Michael Reinsch</user-name>
      <creator-name>Michael Reinsch</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6131</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Correct, this is exactly what they're supposed to do.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Correct, this is exactly what they're supposed to do.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-25T10:43:22+00:00</created-at>
      <creator-id type="integer">107166</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6131</number>
      <permalink>default_url_options-set-within-a-controller-are-not-cleared-after-every-request-on-production</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>default_url_options set within a controller are not cleared after every request on production</title>
      <updated-at type="datetime">2011-02-25T10:43:33+00:00</updated-at>
      <user-id type="integer">8407</user-id>
      <version type="integer">2</version>
      <user-name>Manfred Stienstra</user-name>
      <creator-name>Michael Reinsch</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6131</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
