<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-31T14:47:30+00:00</created-at>
  <creator-id type="integer">52024</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6240</number>
  <permalink>activerecordtestcasesrelations_testrb-fails-on-mysql-and-sqlite-when-executed-separately-from-other-tests</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activecord rails3 tests</tag>
  <title>activerecord/test/cases/relations_test.rb fails on mysql and sqlite when executed separately from other tests</title>
  <updated-at type="datetime">2011-04-01T01:00:32+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">4</version>
  <user-name>rails</user-name>
  <creator-name>Robert Pankowecki</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6240</url>
  <priority-name nil="true"></priority-name>
  <original-body>Everything is ok when running:

@@@
rake test_sqlite3
rake test_mysql
@@@

but executing

@@@
rake test_sqlite3 TEST=test/cases/relations_test.rb
rake test_mysql TEST=test/cases/relations_test.rb
@@@

leads to error:

@@@
# Mysql
1) Failure:
test_any(RelationTest) [test/cases/relations_test.rb:643]:
4 instead of 3 queries were executed.
Queries:
SELECT COUNT(*) FROM `posts` 
SHOW TABLES
SELECT COUNT(*) FROM `posts`  WHERE `posts`.`id` IS NULL
SELECT `posts`.* FROM `posts` .
&lt;3&gt; expected but was
&lt;4&gt;.

#Sqlite
1) Failure:
test_any(RelationTest) [test/cases/relations_test.rb:643]:
4 instead of 3 queries were executed.
Queries:
SELECT COUNT(*) FROM &quot;posts&quot; 
          SELECT name
          FROM sqlite_master
          WHERE type = 'table' AND NOT name = 'sqlite_sequence'

SELECT COUNT(*) FROM &quot;posts&quot;  WHERE &quot;posts&quot;.&quot;id&quot; IS NULL
SELECT &quot;posts&quot;.* FROM &quot;posts&quot; .
&lt;3&gt; expected but was
&lt;4&gt;.
@@@</original-body>
  <latest-body>Everything is ok when running:

@@@
rake test_sqlite3
rake test_mysql
@@@

but executing

@@@
rake test_sqlite3 TEST=test/cases/relations_test.rb
rake test_mysql TEST=test/cases/relations_test.rb
@@@

leads to error:

@@@
# Mysql
1) Failure:
test_any(RelationTest) [test/cases/relations_test.rb:643]:
4 instead of 3 queries were executed.
Queries:
SELECT COUNT(*) FROM `posts` 
SHOW TABLES
SELECT COUNT(*) FROM `posts`  WHERE `posts`.`id` IS NULL
SELECT `posts`.* FROM `posts` .
&lt;3&gt; expected but was
&lt;4&gt;.

#Sqlite
1) Failure:
test_any(RelationTest) [test/cases/relations_test.rb:643]:
4 instead of 3 queries were executed.
Queries:
SELECT COUNT(*) FROM &quot;posts&quot; 
          SELECT name
          FROM sqlite_master
          WHERE type = 'table' AND NOT name = 'sqlite_sequence'

SELECT COUNT(*) FROM &quot;posts&quot;  WHERE &quot;posts&quot;.&quot;id&quot; IS NULL
SELECT &quot;posts&quot;.* FROM &quot;posts&quot; .
&lt;3&gt; expected but was
&lt;4&gt;.
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Everything is ok when running:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rake test_sqlite3
rake test_mysql&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;but executing&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rake test_sqlite3 TEST=test/cases/relations_test.rb
rake test_mysql TEST=test/cases/relations_test.rb&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;leads to error:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# Mysql
1) Failure:
test_any(RelationTest) [test/cases/relations_test.rb:643]:
4 instead of 3 queries were executed.
Queries:
SELECT COUNT(*) FROM `posts` 
SHOW TABLES
SELECT COUNT(*) FROM `posts`  WHERE `posts`.`id` IS NULL
SELECT `posts`.* FROM `posts` .
&amp;lt;3&amp;gt; expected but was
&amp;lt;4&amp;gt;.

#Sqlite
1) Failure:
test_any(RelationTest) [test/cases/relations_test.rb:643]:
4 instead of 3 queries were executed.
Queries:
SELECT COUNT(*) FROM &quot;posts&quot; 
          SELECT name
          FROM sqlite_master
          WHERE type = 'table' AND NOT name = 'sqlite_sequence'

SELECT COUNT(*) FROM &quot;posts&quot;  WHERE &quot;posts&quot;.&quot;id&quot; IS NULL
SELECT &quot;posts&quot;.* FROM &quot;posts&quot; .
&amp;lt;3&amp;gt; expected but was
&amp;lt;4&amp;gt;.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Everything is ok when running:

@@@
rake test_sqlite3
rake test_mysql
@@@

but executing

@@@
rake test_sqlite3 TEST=test/cases/relations_test.rb
rake test_mysql TEST=test/cases/relations_test.rb
@@@

leads to error:

@@@
# Mysql
1) Failure:
test_any(RelationTest) [test/cases/relations_test.rb:643]:
4 instead of 3 queries were executed.
Queries:
SELECT COUNT(*) FROM `posts` 
SHOW TABLES
SELECT COUNT(*) FROM `posts`  WHERE `posts`.`id` IS NULL
SELECT `posts`.* FROM `posts` .
&lt;3&gt; expected but was
&lt;4&gt;.

#Sqlite
1) Failure:
test_any(RelationTest) [test/cases/relations_test.rb:643]:
4 instead of 3 queries were executed.
Queries:
SELECT COUNT(*) FROM &quot;posts&quot; 
          SELECT name
          FROM sqlite_master
          WHERE type = 'table' AND NOT name = 'sqlite_sequence'

SELECT COUNT(*) FROM &quot;posts&quot;  WHERE &quot;posts&quot;.&quot;id&quot; IS NULL
SELECT &quot;posts&quot;.* FROM &quot;posts&quot; .
&lt;3&gt; expected but was
&lt;4&gt;.
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Everything is ok when running:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rake test_sqlite3
rake test_mysql&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;but executing&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rake test_sqlite3 TEST=test/cases/relations_test.rb
rake test_mysql TEST=test/cases/relations_test.rb&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;leads to error:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# Mysql
1) Failure:
test_any(RelationTest) [test/cases/relations_test.rb:643]:
4 instead of 3 queries were executed.
Queries:
SELECT COUNT(*) FROM `posts` 
SHOW TABLES
SELECT COUNT(*) FROM `posts`  WHERE `posts`.`id` IS NULL
SELECT `posts`.* FROM `posts` .
&amp;lt;3&amp;gt; expected but was
&amp;lt;4&amp;gt;.

#Sqlite
1) Failure:
test_any(RelationTest) [test/cases/relations_test.rb:643]:
4 instead of 3 queries were executed.
Queries:
SELECT COUNT(*) FROM &quot;posts&quot; 
          SELECT name
          FROM sqlite_master
          WHERE type = 'table' AND NOT name = 'sqlite_sequence'

SELECT COUNT(*) FROM &quot;posts&quot;  WHERE &quot;posts&quot;.&quot;id&quot; IS NULL
SELECT &quot;posts&quot;.* FROM &quot;posts&quot; .
&amp;lt;3&amp;gt; expected but was
&amp;lt;4&amp;gt;.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-31T14:47:30+00:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6240</number>
      <permalink>activerecordtestcasesrelations_testrb-fails-on-mysql-and-sqlite-when-executed-separately-from-other-tests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activecord tests</tag>
      <title>activerecord/test/cases/relations_test.rb fails on mysql and sqlite when executed separately from other tests</title>
      <updated-at type="datetime">2010-12-31T14:47:31+00:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">1</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6240</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-31T14:47:53+00:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activecord tests
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6240</number>
      <permalink>activerecordtestcasesrelations_testrb-fails-on-mysql-and-sqlite-when-executed-separately-from-other-tests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activecord rails3 tests</tag>
      <title>activerecord/test/cases/relations_test.rb fails on mysql and sqlite when executed separately from other tests</title>
      <updated-at type="datetime">2010-12-31T14:47:56+00:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">2</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6240</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-01T01:00:22+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6240</number>
      <permalink>activerecordtestcasesrelations_testrb-fails-on-mysql-and-sqlite-when-executed-separately-from-other-tests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activecord rails3 tests</tag>
      <title>activerecord/test/cases/relations_test.rb fails on mysql and sqlite when executed separately from other tests</title>
      <updated-at type="datetime">2011-04-01T01:00:29+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6240</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-01T01:00:23+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6240</number>
      <permalink>activerecordtestcasesrelations_testrb-fails-on-mysql-and-sqlite-when-executed-separately-from-other-tests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activecord rails3 tests</tag>
      <title>activerecord/test/cases/relations_test.rb fails on mysql and sqlite when executed separately from other tests</title>
      <updated-at type="datetime">2011-04-01T01:00:32+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6240</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
