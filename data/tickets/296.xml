<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-02T09:12:15+01:00</created-at>
  <creator-id type="integer">10618</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">296</number>
  <permalink>render_to_string-is-completely-broken</permalink>
  <priority type="integer">14921</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>bug edge</tag>
  <title>render_to_string is completely broken</title>
  <updated-at type="datetime">2008-06-02T13:49:02+01:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">4</version>
  <user-name>Pratik</user-name>
  <creator-name>Jaroslaw Zabiello</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/296</url>
  <priority-name nil="true"></priority-name>
  <original-body>@@@ ruby
class MyController &lt; ApplicationController
  def index	 
    @x = render_to_string :controller =&gt; 'i_do_not_exists'
  end
end
@@@

There is no exception raised if I use :controller which does not exist at all. Whatever options I use, @x always contains app/views/my/index.html.erb file content (even for existing controllers render_to_string ignore every parameter)</original-body>
  <latest-body>@@@ ruby
class MyController &lt; ApplicationController
  def index	 
    @x = render_to_string :controller =&gt; 'i_do_not_exists'
  end
end
@@@

There is no exception raised if I use :controller which does not exist at all. Whatever options I use, @x always contains app/views/my/index.html.erb file content (even for existing controllers render_to_string ignore every parameter)</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class MyController &amp;lt; ApplicationController
  def index	 
    @x = render_to_string :controller =&amp;gt; 'i_do_not_exists'
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
There is no exception raised if I use :controller which does not exist at all. Whatever options I use, @x always contains app/views/my/index.html.erb file content (even for existing controllers render_to_string ignore every parameter)
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@ ruby
class MyController &lt; ApplicationController
  def index	 
    @x = render_to_string :controller =&gt; 'i_do_not_exists'
  end
end
@@@

There is no exception raised if I use :controller which does not exist at all. Whatever options I use, @x always contains app/views/my/index.html.erb file content (even for existing controllers render_to_string ignore every parameter)</body>
      <body-html>&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class MyController &amp;lt; ApplicationController
  def index	 
    @x = render_to_string :controller =&amp;gt; 'i_do_not_exists'
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
There is no exception raised if I use :controller which does not exist at all. Whatever options I use, @x always contains app/views/my/index.html.erb file content (even for existing controllers render_to_string ignore every parameter)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-02T09:12:15+01:00</created-at>
      <creator-id type="integer">10618</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">296</number>
      <permalink>render_to_string-is-completely-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>render_to_string is completely broken</title>
      <updated-at type="datetime">2008-06-02T09:12:15+01:00</updated-at>
      <user-id type="integer">10618</user-id>
      <version type="integer">1</version>
      <user-name>Jaroslaw Zabiello</user-name>
      <creator-name>Jaroslaw Zabiello</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/296</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Use render_to_string :template =&gt; 'i_do_not_exists/index'

What is the behavior in Rails 2.0.x ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Use render_to_string :template =&gt; 'i_do_not_exists/index'
&lt;/p&gt;&lt;p&gt;
What is the behavior in Rails 2.0.x ?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-02T12:18:40+01:00</created-at>
      <creator-id type="integer">10618</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">296</number>
      <permalink>render_to_string-is-completely-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>render_to_string is completely broken</title>
      <updated-at type="datetime">2008-06-02T12:18:40+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Jaroslaw Zabiello</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/296</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I do NOT want to render just another template (without its action). I want to render *another action*. I have just checked and I see it is broken for RoR 2.0.2 and 2.1.0 as well. Therefore information displayed in api.rubyonrails.org is misleading and wrong (capitalization is mine):

@@@
render_to_string(options = nil, &amp;block) 

Renders according to THE SAME RULES AS RENDER, but returns the result in a string instead of sending it as the response body to the browser. 
@@@

@@@ ruby
# app/views/controllers/my_controller.rb:

class MyController &lt; ApplicationController
  def index 
    @slot = render_to_string :action =&gt; 'second'
  end
  
  def second    
    @var = 'World'
    render :text =&gt; 'It will never be displayed from host/my!' 
  end
end
       

# app/views/my/index.html.erb:

Slot: &lt;%= @slot %&gt; 
         
# app/views/my/second.html.erb:

Hello &lt;%= @msg %&gt;! 

@@@ 

Result at http://localhost:3000/my:

Result: 
@@@
Slot: Hello !
@@@

The @msg variable was not rendered at all. render :text was also ignored at all. It looks like render_to_string ignores Ruby code in the action.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I do NOT want to render just another template (without its action). I want to render &lt;strong&gt;another action&lt;/strong&gt;. I have just checked and I see it is broken for RoR 2.0.2 and 2.1.0 as well. Therefore information displayed in api.rubyonrails.org is misleading and wrong (capitalization is mine):
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;render_to_string(options = nil, &amp;amp;block) 

Renders according to THE SAME RULES AS RENDER, but returns the result in a string instead of sending it as the response body to the browser. &lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;# app/views/controllers/my_controller.rb:

class MyController &amp;lt; ApplicationController
  def index 
    @slot = render_to_string :action =&amp;gt; 'second'
  end
  
  def second    
    @var = 'World'
    render :text =&amp;gt; 'It will never be displayed from host/my!' 
  end
end
       

# app/views/my/index.html.erb:

Slot: &amp;lt;%= @slot %&amp;gt; 
         
# app/views/my/second.html.erb:

Hello &amp;lt;%= @msg %&amp;gt;! 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Result at &lt;a href=&quot;http://localhost:3000/my&quot;&gt;http://localhost:3000/my&lt;/a&gt;:
&lt;/p&gt;&lt;p&gt;
Result:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;Slot: Hello !&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
The @msg variable was not rendered at all. render :text was also ignored at all. It looks like render_to_string ignores Ruby code in the action.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-02T13:46:22+01:00</created-at>
      <creator-id type="integer">10618</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">296</number>
      <permalink>render_to_string-is-completely-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>render_to_string is completely broken</title>
      <updated-at type="datetime">2008-06-02T13:46:22+01:00</updated-at>
      <user-id type="integer">10618</user-id>
      <version type="integer">3</version>
      <user-name>Jaroslaw Zabiello</user-name>
      <creator-name>Jaroslaw Zabiello</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/296</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You cannot render *another action*. render_to_string is only for rendering templates. It *will not* call action code.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
You cannot render &lt;strong&gt;another action&lt;/strong&gt;. render_to_string is only for rendering templates. It &lt;strong&gt;will not&lt;/strong&gt; call action code.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-02T13:49:02+01:00</created-at>
      <creator-id type="integer">10618</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">296</number>
      <permalink>render_to_string-is-completely-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>render_to_string is completely broken</title>
      <updated-at type="datetime">2008-06-02T13:49:02+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">4</version>
      <user-name>Pratik</user-name>
      <creator-name>Jaroslaw Zabiello</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/296</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
