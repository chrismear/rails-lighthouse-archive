<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-26T23:52:38+00:00</created-at>
  <creator-id type="integer">17407</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6339</number>
  <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>active_record create_table edge migration patch rails3.1 tested</tag>
  <title>sexier migration that doesn't need the block parameter for create_table</title>
  <updated-at type="datetime">2011-01-27T15:41:29+00:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">11</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>Akira Matsuda</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
  <priority-name>Low</priority-name>
  <original-body>This patch enables the following syntax for AR::TableDefinition#create_table.

@@@ ruby
class CreateUsers &lt; ActiveRecord::Migration
  def change
    create_table :users do
      string :name
      timestamps
    end
  end
end
@@@

Traditional syntax is still available. So, this patch does not break any existing migration files.

@@@ ruby
class CreateUsers &lt; ActiveRecord::Migration
  def change
    create_table :users do |t|
      t.string :name
      t.timestamps
    end
  end
end
@@@

I believe the new syntax is more Rails-3-ish, I mean, consistent Rails 3 API, since the routes DSL and ActionMailer DSL also dropped their block parameters in Rails 3.

And, I think 3.1 is the best timing to apply this change because some other changes were already introduced to the migration DSL.</original-body>
  <latest-body>This patch enables the following syntax for AR::TableDefinition#create_table.

@@@ ruby
class CreateUsers &lt; ActiveRecord::Migration
  def change
    create_table :users do
      string :name
      timestamps
    end
  end
end
@@@

Traditional syntax is still available. So, this patch does not break any existing migration files.

@@@ ruby
class CreateUsers &lt; ActiveRecord::Migration
  def change
    create_table :users do |t|
      t.string :name
      t.timestamps
    end
  end
end
@@@

I believe the new syntax is more Rails-3-ish, I mean, consistent Rails 3 API, since the routes DSL and ActionMailer DSL also dropped their block parameters in Rails 3.

And, I think 3.1 is the best timing to apply this change because some other changes were already introduced to the migration DSL.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This patch enables the following syntax for
AR::TableDefinition#create_table.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class CreateUsers &amp;lt; ActiveRecord::Migration
  def change
    create_table :users do
      string :name
      timestamps
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Traditional syntax is still available. So, this patch does not
break any existing migration files.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class CreateUsers &amp;lt; ActiveRecord::Migration
  def change
    create_table :users do |t|
      t.string :name
      t.timestamps
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I believe the new syntax is more Rails-3-ish, I mean, consistent
Rails 3 API, since the routes DSL and ActionMailer DSL also dropped
their block parameters in Rails 3.&lt;/p&gt;
&lt;p&gt;And, I think 3.1 is the best timing to apply this change because
some other changes were already introduced to the migration
DSL.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch enables the following syntax for AR::TableDefinition#create_table.

@@@ ruby
class CreateUsers &lt; ActiveRecord::Migration
  def change
    create_table :users do
      string :name
      timestamps
    end
  end
end
@@@

Traditional syntax is still available. So, this patch does not break any existing migration files.

@@@ ruby
class CreateUsers &lt; ActiveRecord::Migration
  def change
    create_table :users do |t|
      t.string :name
      t.timestamps
    end
  end
end
@@@

I believe the new syntax is more Rails-3-ish, I mean, consistent Rails 3 API, since the routes DSL and ActionMailer DSL also dropped their block parameters in Rails 3.

And, I think 3.1 is the best timing to apply this change because some other changes were already introduced to the migration DSL.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch enables the following syntax for
AR::TableDefinition#create_table.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class CreateUsers &amp;lt; ActiveRecord::Migration
  def change
    create_table :users do
      string :name
      timestamps
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Traditional syntax is still available. So, this patch does not
break any existing migration files.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class CreateUsers &amp;lt; ActiveRecord::Migration
  def change
    create_table :users do |t|
      t.string :name
      t.timestamps
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I believe the new syntax is more Rails-3-ish, I mean, consistent
Rails 3 API, since the routes DSL and ActionMailer DSL also dropped
their block parameters in Rails 3.&lt;/p&gt;
&lt;p&gt;And, I think 3.1 is the best timing to apply this change because
some other changes were already introduced to the migration
DSL.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-26T23:52:38+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6339</number>
      <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record create_table edge migration patch rails3.1 tested</tag>
      <title>sexier migration that doesn't need the block parameter for create_table</title>
      <updated-at type="datetime">2011-01-27T00:19:15+00:00</updated-at>
      <user-id type="integer">17407</user-id>
      <version type="integer">1</version>
      <user-name>Akira Matsuda</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I like it. It does fit in more with the Rails 3 way of doing things.

I'd love it if we can get more people to review the patch or give their opinions so that we can assign it to a core member for review. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I like it. It does fit in more with the Rails 3 way of doing
things.&lt;/p&gt;
&lt;p&gt;I'd love it if we can get more people to review the patch or
give their opinions so that we can assign it to a core member for
review. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-27T03:44:05+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6339</number>
      <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record create_table edge migration patch rails3.1 tested</tag>
      <title>sexier migration that doesn't need the block parameter for create_table</title>
      <updated-at type="datetime">2011-01-27T03:44:11+00:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">2</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm not core, but I think it's great.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not core, but I think it's great.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-27T04:01:02+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6339</number>
      <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record create_table edge migration patch rails3.1 tested</tag>
      <title>sexier migration that doesn't need the block parameter for create_table</title>
      <updated-at type="datetime">2011-01-27T04:01:11+00:00</updated-at>
      <user-id type="integer">39818</user-id>
      <version type="integer">3</version>
      <user-name>Jesse Storimer</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think I like this patch. It really fits the trend of Rails 3 as in the route, where we remove `map.` from the route file.

So yeah, +1. Would love to get this applied.

Aaron, can I have your opinion too?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think I like this patch. It really fits the trend of Rails 3
as in the route, where we remove &lt;code&gt;map.&lt;/code&gt; from the route
file.&lt;/p&gt;
&lt;p&gt;So yeah, +1. Would love to get this applied.&lt;/p&gt;
&lt;p&gt;Aaron, can I have your opinion too?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-27T04:28:13+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6339</number>
      <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record create_table edge migration patch rails3.1 tested</tag>
      <title>sexier migration that doesn't need the block parameter for create_table</title>
      <updated-at type="datetime">2011-01-27T04:28:24+00:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">4</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1

looks cool.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;looks cool.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-27T08:42:48+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6339</number>
      <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record create_table edge migration patch rails3.1 tested</tag>
      <title>sexier migration that doesn't need the block parameter for create_table</title>
      <updated-at type="datetime">2011-01-27T08:43:03+00:00</updated-at>
      <user-id type="integer">75004</user-id>
      <version type="integer">5</version>
      <user-name>lakshmanan</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-27T08:47:49+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6339</number>
      <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record create_table edge migration patch rails3.1 tested</tag>
      <title>sexier migration that doesn't need the block parameter for create_table</title>
      <updated-at type="datetime">2011-01-27T08:48:06+00:00</updated-at>
      <user-id type="integer">92756</user-id>
      <version type="integer">6</version>
      <user-name>Jan Jones</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok, assigning to a core member for consideration. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, assigning to a core member for consideration. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-27T12:27:25+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6339</number>
      <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record create_table edge migration patch rails3.1 tested</tag>
      <title>sexier migration that doesn't need the block parameter for create_table</title>
      <updated-at type="datetime">2011-01-27T12:27:39+00:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">7</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks for the patch, but I have -1.

Using instance_eval changes the self.scope and usually causes a lot of confusion. For that reason, Rails avoids using instance_eval whenever it can.

In a few places, like the router, it is convenient because we usually nest several blocks, one inside the other. But this is not the case for migrations. So I will stick with simplicity.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for the patch, but I have -1.&lt;/p&gt;
&lt;p&gt;Using instance_eval changes the self.scope and usually causes a
lot of confusion. For that reason, Rails avoids using instance_eval
whenever it can.&lt;/p&gt;
&lt;p&gt;In a few places, like the router, it is convenient because we
usually nest several blocks, one inside the other. But this is not
the case for migrations. So I will stick with simplicity.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-27T12:37:12+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6339</number>
      <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_record create_table edge migration patch rails3.1 tested</tag>
      <title>sexier migration that doesn't need the block parameter for create_table</title>
      <updated-at type="datetime">2011-01-27T12:37:28+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">8</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Jos&#233;

Thanks for reviewing!
I think I understand your point. Yes, eval family should not be abused. It may cause unexpected weird problem when combined with other metaprogramming technique.
However, I think it won't cause any problem in this paricular case, because we're talking about migrations.

Methods we use inside the create_table block are besically restricted to the following 15 methods.

@@@ ruby
# You see this migration command surely runs on my console.
ActiveRecord::Schema.define do
  create_table :people do
    column :string, :col1
    timestamps
    references :model1
    belongs_to :model2
    string :col2
    text :col3
    integer :col4
    float :col4
    decimal :col5
    datetime :col6
    timestamp :col7
    time :col8
    date :col9
    binary :col10
    boolean :col11
  end
end

-- create_table(:people)
   -&gt; 0.0060s
@@@

That is why instance_eval is *already used* in AR::Schema.define without causing any problem ever. https://github.com/rails/rails/blob/master/activerecord/lib/active_record/schema.rb#L50
Who does metaprogramming inside create_table block in migration files?

So, what do you actually worry? Am I missing any possible usecase?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Jos&amp;eacute;&lt;/p&gt;
&lt;p&gt;Thanks for reviewing!&lt;br&gt;
I think I understand your point. Yes, eval family should not be
abused. It may cause unexpected weird problem when combined with
other metaprogramming technique.&lt;br&gt;
However, I think it won't cause any problem in this paricular case,
because we're talking about migrations.&lt;/p&gt;
&lt;p&gt;Methods we use inside the create_table block are besically
restricted to the following 15 methods.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;# You see this migration command surely runs on my console.
ActiveRecord::Schema.define do
  create_table :people do
    column :string, :col1
    timestamps
    references :model1
    belongs_to :model2
    string :col2
    text :col3
    integer :col4
    float :col4
    decimal :col5
    datetime :col6
    timestamp :col7
    time :col8
    date :col9
    binary :col10
    boolean :col11
  end
end

-- create_table(:people)
   -&amp;gt; 0.0060s&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That is why instance_eval is &lt;em&gt;already used&lt;/em&gt; in
AR::Schema.define without causing any problem ever. &lt;a href=
&quot;https://github.com/rails/rails/blob/master/activerecord/lib/active_record/schema.rb#L50&quot;&gt;
https://github.com/rails/rails/blob/master/activerecord/lib/active_...&lt;/a&gt;&lt;br&gt;
Who does metaprogramming inside create_table block in migration
files?&lt;/p&gt;
&lt;p&gt;So, what do you actually worry? Am I missing any possible
usecase?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-27T14:55:43+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6339</number>
      <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_record create_table edge migration patch rails3.1 tested</tag>
      <title>sexier migration that doesn't need the block parameter for create_table</title>
      <updated-at type="datetime">2011-01-27T14:56:01+00:00</updated-at>
      <user-id type="integer">17407</user-id>
      <version type="integer">9</version>
      <user-name>Akira Matsuda</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@@@ sed
# sorry I made a tiny mistake
s/column :string, :col1/column :col1, :string/
@@@</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code class=&quot;sed&quot;&gt;# sorry I made a tiny mistake
s/column :string, :col1/column :col1, :string/&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-27T15:04:58+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6339</number>
      <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_record create_table edge migration patch rails3.1 tested</tag>
      <title>sexier migration that doesn't need the block parameter for create_table</title>
      <updated-at type="datetime">2011-01-27T15:05:15+00:00</updated-at>
      <user-id type="integer">17407</user-id>
      <version type="integer">10</version>
      <user-name>Akira Matsuda</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok, I am on the fence. :) Aaron Patterson is responsible for AR so I will defer the final decision to him.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, I am on the fence. :) Aaron Patterson is responsible for AR
so I will defer the final decision to him.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-27T15:41:13+00:00</created-at>
      <creator-id type="integer">17407</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 19965
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6339</number>
      <permalink>sexier-migration-that-doesnt-need-the-block-parameter-for-create_table</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_record create_table edge migration patch rails3.1 tested</tag>
      <title>sexier migration that doesn't need the block parameter for create_table</title>
      <updated-at type="datetime">2011-01-27T15:41:29+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">11</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Akira Matsuda</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6339</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>541b9278b9ecdee8ceffadfc0e2215b7f285b0fc</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-01-26T23:52:39+00:00</created-at>
      <filename>sexier_migration.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">880881</id>
      <size type="integer">6055</size>
      <uploader-id type="integer">17407</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/880881/sexier_migration.diff</url>
    </attachment>
  </attachments>
</ticket>
