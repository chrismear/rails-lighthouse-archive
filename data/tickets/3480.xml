<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-02T10:56:17+01:00</created-at>
  <creator-id type="integer">76123</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3480</number>
  <permalink>has_one-through-associations-not-saved-correctly</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.3.2 activerecord has_one_through</tag>
  <title>has_one through associations not saved correctly</title>
  <updated-at type="datetime">2010-10-02T10:56:17+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">6</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>gerad</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3480</url>
  <priority-name>Low</priority-name>
  <original-body>**Summary**

Attributes created using has_one :through associations are lost upon serialization to the database.

**Details**

@@@ ruby
class Club &lt; ActiveRecord::Base
  has_one :membership
end
@@@

@@@ ruby
class Membership &lt; ActiveRecord::Base
  belongs_to :person
  belongs_to :club
end
@@@

@@@ ruby
class Person &lt; ActiveRecord::Base
  has_one :membership
  has_one :club, :through =&gt; :membership
end
@@@

@@@ ruby
require 'test_helper'

class PersonTest &lt; ActiveSupport::TestCase
  test &quot;person's club is saved&quot; do
    p = Person.new
    c = Club.new
    p.club = c
    c.save!; c.reload
    p.save!; p.reload
    assert_equal c, p.club
  end
end
@@@

@@@
$ ruby -Itest test/unit/person_test.rb
Loaded suite test/unit/person_test
Started
F
Finished in 0.186399 seconds.

  1) Failure:
test_can_save_club(PersonTest) [test/unit/person_test.rb:10]:
&lt;#&lt;Club id: 1, created_at: &quot;2009-11-11 00:10:41&quot;, updated_at: &quot;2009-11-11 00:10:41&quot;&gt;&gt; expected but was
&lt;nil&gt;.
@@@</original-body>
  <latest-body>**Summary**

Attributes created using has_one :through associations are lost upon serialization to the database.

**Details**

@@@ ruby
class Club &lt; ActiveRecord::Base
  has_one :membership
end
@@@

@@@ ruby
class Membership &lt; ActiveRecord::Base
  belongs_to :person
  belongs_to :club
end
@@@

@@@ ruby
class Person &lt; ActiveRecord::Base
  has_one :membership
  has_one :club, :through =&gt; :membership
end
@@@

@@@ ruby
require 'test_helper'

class PersonTest &lt; ActiveSupport::TestCase
  test &quot;person's club is saved&quot; do
    p = Person.new
    c = Club.new
    p.club = c
    c.save!; c.reload
    p.save!; p.reload
    assert_equal c, p.club
  end
end
@@@

@@@
$ ruby -Itest test/unit/person_test.rb
Loaded suite test/unit/person_test
Started
F
Finished in 0.186399 seconds.

  1) Failure:
test_can_save_club(PersonTest) [test/unit/person_test.rb:10]:
&lt;#&lt;Club id: 1, created_at: &quot;2009-11-11 00:10:41&quot;, updated_at: &quot;2009-11-11 00:10:41&quot;&gt;&gt; expected but was
&lt;nil&gt;.
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Attributes created using has_one :through associations are lost
upon serialization to the database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Club &amp;lt; ActiveRecord::Base
  has_one :membership
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Membership &amp;lt; ActiveRecord::Base
  belongs_to :person
  belongs_to :club
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Person &amp;lt; ActiveRecord::Base
  has_one :membership
  has_one :club, :through =&amp;gt; :membership
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require 'test_helper'

class PersonTest &amp;lt; ActiveSupport::TestCase
  test &quot;person's club is saved&quot; do
    p = Person.new
    c = Club.new
    p.club = c
    c.save!; c.reload
    p.save!; p.reload
    assert_equal c, p.club
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;$ ruby -Itest test/unit/person_test.rb
Loaded suite test/unit/person_test
Started
F
Finished in 0.186399 seconds.

  1) Failure:
test_can_save_club(PersonTest) [test/unit/person_test.rb:10]:
&amp;lt;#&amp;lt;Club id: 1, created_at: &quot;2009-11-11 00:10:41&quot;, updated_at: &quot;2009-11-11 00:10:41&quot;&amp;gt;&amp;gt; expected but was
&amp;lt;nil&amp;gt;.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>**Summary**

Attributes created using has_one :through associations are lost upon serialization to the database.

**Details**

@@@ ruby
class Club &lt; ActiveRecord::Base
  has_one :membership
end
@@@

@@@ ruby
class Membership &lt; ActiveRecord::Base
  belongs_to :person
  belongs_to :club
end
@@@

@@@ ruby
class Person &lt; ActiveRecord::Base
  has_one :membership
  has_one :club, :through =&gt; :membership
end
@@@

@@@ ruby
require 'test_helper'

class PersonTest &lt; ActiveSupport::TestCase
  test &quot;person's club is saved&quot; do
    p = Person.new
    c = Club.new
    p.club = c
    assert_equal c, p.club
    c.save!; c.reload
    p.save!; p.reload
    assert_equal c, p.club
  end
end
@@@

@@@
$ ruby -Itest test/unit/person_test.rb
Loaded suite test/unit/person_test
Started
F
Finished in 0.057744 seconds.

  1) Failure:
test_person's_club_is_saved(PersonTest) [test/unit/person_test.rb:11]:
&lt;#&lt;Club id: 1, created_at: &quot;2009-11-11 01:01:47&quot;, updated_at: &quot;2009-11-11 01:01:47&quot;&gt;&gt; expected but was
&lt;nil&gt;.

1 tests, 2 assertions, 1 failures, 0 errors
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Attributes created using has_one :through associations are lost
upon serialization to the database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Club &amp;lt; ActiveRecord::Base
  has_one :membership
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Membership &amp;lt; ActiveRecord::Base
  belongs_to :person
  belongs_to :club
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Person &amp;lt; ActiveRecord::Base
  has_one :membership
  has_one :club, :through =&amp;gt; :membership
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require 'test_helper'

class PersonTest &amp;lt; ActiveSupport::TestCase
  test &quot;person's club is saved&quot; do
    p = Person.new
    c = Club.new
    p.club = c
    assert_equal c, p.club
    c.save!; c.reload
    p.save!; p.reload
    assert_equal c, p.club
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;$ ruby -Itest test/unit/person_test.rb
Loaded suite test/unit/person_test
Started
F
Finished in 0.057744 seconds.

  1) Failure:
test_person's_club_is_saved(PersonTest) [test/unit/person_test.rb:11]:
&amp;lt;#&amp;lt;Club id: 1, created_at: &quot;2009-11-11 01:01:47&quot;, updated_at: &quot;2009-11-11 01:01:47&quot;&amp;gt;&amp;gt; expected but was
&amp;lt;nil&amp;gt;.

1 tests, 2 assertions, 1 failures, 0 errors&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-11T00:15:58+00:00</created-at>
      <creator-id type="integer">76123</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3480</number>
      <permalink>has_one-through-associations-not-saved-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord has_one_through</tag>
      <title>has_one through associations not saved correctly</title>
      <updated-at type="datetime">2009-11-11T01:02:56+00:00</updated-at>
      <user-id type="integer">76123</user-id>
      <version type="integer">1</version>
      <user-name>gerad</user-name>
      <creator-name>gerad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3480</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Also happens on 2.3.4 version 7ba80252a5a6bd94c8445347caee663b12c1a526</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also happens on 2.3.4 version
7ba80252a5a6bd94c8445347caee663b12c1a526&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-11T01:03:54+00:00</created-at>
      <creator-id type="integer">76123</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3480</number>
      <permalink>has_one-through-associations-not-saved-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord has_one_through</tag>
      <title>has_one through associations not saved correctly</title>
      <updated-at type="datetime">2009-11-11T01:03:55+00:00</updated-at>
      <user-id type="integer">76123</user-id>
      <version type="integer">2</version>
      <user-name>gerad</user-name>
      <creator-name>gerad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3480</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Three cases -
1. p = Person.new
   c = Club.new
   p.club = c
This line will insert a new row in memberships table with both person_id and club_id as nil.
   c.save
   p.save
Both objects will be saved without any related membership. Hence your test case fails.

2. p = Person.new
   c = Club.new
   c.save
   p.club = c
   
This will create an entry in Membership table with club_id = &quot;c.id&quot; and person_id as nil
  p.save will save the object but without any related membership and hence without any related organization.

3. p = Person.new
   p.save
p will be a Person with some id.
   c = Club.new
   c.save
c will be a Club with some id.
   p.club = c
This will create an entry in memberships table with person_id and club_id pointing to corresponding rows in persons and clubs tables.
   p.save will save and you will be able to fetch club.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Three cases -&lt;br&gt;
1. p = Person.new&lt;br&gt;
c = Club.new p.club = c This line will insert a new row in
memberships table with both person_id and club_id as nil.&lt;br&gt;
c.save p.save Both objects will be saved without any related
membership. Hence your test case fails.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;p = Person.new&lt;br&gt;
c = Club.new c.save p.club = c&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This will create an entry in Membership table with club_id =
&quot;c.id&quot; and person_id as nil&lt;br&gt;
p.save will save the object but without any related membership and
hence without any related organization.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;p = Person.new&lt;br&gt;
p.save p will be a Person with some id.&lt;br&gt;
c = Club.new c.save c will be a Club with some id.&lt;br&gt;
p.club = c This will create an entry in memberships table with
person_id and club_id pointing to corresponding rows in persons and
clubs tables.&lt;br&gt;
p.save will save and you will be able to fetch club.&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-24T12:58:04+01:00</created-at>
      <creator-id type="integer">76123</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3480</number>
      <permalink>has_one-through-associations-not-saved-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord has_one_through</tag>
      <title>has_one through associations not saved correctly</title>
      <updated-at type="datetime">2010-07-24T12:58:06+01:00</updated-at>
      <user-id type="integer">101927</user-id>
      <version type="integer">3</version>
      <user-name>Jigar Patel</user-name>
      <creator-name>gerad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3480</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I ran your testcase statements in console and I test Membership after every statement. You are not saving anything

In short -&gt; you are playing in memory without saving anything. so literally you are playing with nils

@@@
&gt;&gt; p = Person.new
=&gt; #&lt;Person id: nil, created_at: nil, updated_at: nil&gt;
&gt;&gt; Membership.last
=&gt; nil
&gt;&gt; c = Club.new
=&gt; #&lt;Club id: nil, created_at: nil, updated_at: nil&gt;
&gt;&gt; Membership.last
=&gt; nil
&gt;&gt; p.club = c
=&gt; #&lt;Club id: nil, created_at: nil, updated_at: nil&gt;
&gt;&gt; Membership.last
=&gt; nil
&gt;&gt; c.save!
=&gt; true
&gt;&gt; Membership.last
=&gt; nil
&gt;&gt; c.reload
=&gt; #&lt;Club id: 2, created_at: &quot;2010-07-24 11:57:24&quot;, updated_at: &quot;2010-07-24 11:57:24&quot;&gt;
&gt;&gt; p.save!

# after this statement - your test will pass

=&gt; true
&gt;&gt; Membership.last
=&gt; #&lt;Membership id: 2, club_id: nil, person_id: 2, created_at: &quot;2010-07-24 11:57:43&quot;, updated_at: &quot;2010-07-24 11:57:43&quot;&gt;
@@@


Hope it helps</body>
      <body-html>&lt;div&gt;&lt;p&gt;I ran your testcase statements in console and I test Membership
after every statement. You are not saving anything&lt;/p&gt;
&lt;p&gt;In short -&amp;gt; you are playing in memory without saving
anything. so literally you are playing with nils&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; p = Person.new
=&amp;gt; #&amp;lt;Person id: nil, created_at: nil, updated_at: nil&amp;gt;
&amp;gt;&amp;gt; Membership.last
=&amp;gt; nil
&amp;gt;&amp;gt; c = Club.new
=&amp;gt; #&amp;lt;Club id: nil, created_at: nil, updated_at: nil&amp;gt;
&amp;gt;&amp;gt; Membership.last
=&amp;gt; nil
&amp;gt;&amp;gt; p.club = c
=&amp;gt; #&amp;lt;Club id: nil, created_at: nil, updated_at: nil&amp;gt;
&amp;gt;&amp;gt; Membership.last
=&amp;gt; nil
&amp;gt;&amp;gt; c.save!
=&amp;gt; true
&amp;gt;&amp;gt; Membership.last
=&amp;gt; nil
&amp;gt;&amp;gt; c.reload
=&amp;gt; #&amp;lt;Club id: 2, created_at: &quot;2010-07-24 11:57:24&quot;, updated_at: &quot;2010-07-24 11:57:24&quot;&amp;gt;
&amp;gt;&amp;gt; p.save!

# after this statement - your test will pass

=&amp;gt; true
&amp;gt;&amp;gt; Membership.last
=&amp;gt; #&amp;lt;Membership id: 2, club_id: nil, person_id: 2, created_at: &quot;2010-07-24 11:57:43&quot;, updated_at: &quot;2010-07-24 11:57:43&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Hope it helps&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-24T13:08:58+01:00</created-at>
      <creator-id type="integer">76123</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3480</number>
      <permalink>has_one-through-associations-not-saved-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 activerecord has_one_through</tag>
      <title>has_one through associations not saved correctly</title>
      <updated-at type="datetime">2010-07-24T13:09:03+01:00</updated-at>
      <user-id type="integer">75004</user-id>
      <version type="integer">5</version>
      <user-name>lakshmanan</user-name>
      <creator-name>gerad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3480</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;code&gt;p.club&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; are not the same. &lt;code&gt;c&lt;/code&gt; is created when &lt;code&gt;c&lt;/code&gt; is saved. While &lt;code&gt;p.club&lt;/code&gt; is created when &lt;code&gt;p&lt;/code&gt; is saved.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;code&gt;p.club&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; are not the same.
&lt;code&gt;c&lt;/code&gt; is created when &lt;code&gt;c&lt;/code&gt; is saved. While
&lt;code&gt;p.club&lt;/code&gt; is created when &lt;code&gt;p&lt;/code&gt; is saved.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-27T14:52:16+01:00</created-at>
      <creator-id type="integer">76123</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3480</number>
      <permalink>has_one-through-associations-not-saved-correctly</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 activerecord has_one_through</tag>
      <title>has_one through associations not saved correctly</title>
      <updated-at type="datetime">2010-09-27T14:52:21+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">6</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>gerad</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3480</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
