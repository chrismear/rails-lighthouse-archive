<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-17T16:53:53+01:00</created-at>
  <creator-id type="integer">32203</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1063</number>
  <permalink>binary-data-broken-with-postgresql-adapter</permalink>
  <priority type="integer">27</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
  <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
  <updated-at type="datetime">2008-10-27T18:39:38+00:00</updated-at>
  <user-id type="integer">141</user-id>
  <version type="integer">26</version>
  <user-name>Michael Koziarski</user-name>
  <creator-name>Adam Majer</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
  <priority-name nil="true"></priority-name>
  <original-body>To create the problem, you only need to do,

@@@
  rails my_app; cd my_app
  script/generate model BorkedBinary b_data:binary
@@@
  ... fix config/database.yml so rails can connect ...
@@@
  rake db:migrate
  script/console
     BorkedBinary.create( :b_data =&gt; '\404' )
@@@

if it works correctly, you'll get '\404'

unfortunately, where b = BorkedData object,

@@@
&gt;&gt; b.b_data = '\404'
=&gt; &quot;\\404&quot;
&gt;&gt; b.b_data
=&gt; &quot;404&quot;
@@@

The problem is before the postgresql driver, as the query generated is broken,

@@@
BorkedBinary Create (0.001279)   INSERT INTO &quot;borked_binaries&quot; (&quot;created_at&quot;, &quot;updated_at&quot;, &quot;b_data&quot;) VALUES('2008-09-17 07:49:54.316491', '2008-09-17 07:49:54.316491', E'404')
@@@

I've tried this with MySQL, PostgreSQL and SQLite3 adapters. Only PostgreSQL is affected.</original-body>
  <latest-body>To create the problem, you only need to do,

@@@
  rails my_app; cd my_app
  script/generate model BorkedBinary b_data:binary
@@@
  ... fix config/database.yml so rails can connect ...
@@@
  rake db:migrate
  script/console
     BorkedBinary.create( :b_data =&gt; '\404' )
@@@

if it works correctly, you'll get '\404'

unfortunately, where b = BorkedData object,

@@@
&gt;&gt; b.b_data = '\404'
=&gt; &quot;\\404&quot;
&gt;&gt; b.b_data
=&gt; &quot;404&quot;
@@@

The problem is before the postgresql driver, as the query generated is broken,

@@@
BorkedBinary Create (0.001279)   INSERT INTO &quot;borked_binaries&quot; (&quot;created_at&quot;, &quot;updated_at&quot;, &quot;b_data&quot;) VALUES('2008-09-17 07:49:54.316491', '2008-09-17 07:49:54.316491', E'404')
@@@

I've tried this with MySQL, PostgreSQL and SQLite3 adapters. Only PostgreSQL is affected.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;To create the problem, you only need to do,&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  rails my_app; cd my_app
  script/generate model BorkedBinary b_data:binary
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;... fix config/database.yml so rails can connect ...&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  rake db:migrate
  script/console
     BorkedBinary.create( :b_data =&amp;gt; '\404' )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if it works correctly, you'll get '\404'&lt;/p&gt;
&lt;p&gt;unfortunately, where b = BorkedData object,&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;gt;&amp;gt; b.b_data = '\404'
=&amp;gt; &amp;quot;\\404&amp;quot;
&amp;gt;&amp;gt; b.b_data
=&amp;gt; &amp;quot;404&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem is before the postgresql driver, as the query
generated is broken,&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
BorkedBinary Create (0.001279)   INSERT INTO &amp;quot;borked_binaries&amp;quot; (&amp;quot;created_at&amp;quot;, &amp;quot;updated_at&amp;quot;, &amp;quot;b_data&amp;quot;) VALUES('2008-09-17 07:49:54.316491', '2008-09-17 07:49:54.316491', E'404')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I've tried this with MySQL, PostgreSQL and SQLite3 adapters.
Only PostgreSQL is affected.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>To create the problem, you only need to do,

@@@
  rails my_app; cd my_app
  script/generate model BorkedBinary b_data:binary
@@@
  ... fix config/database.yml so rails can connect ...
@@@
  rake db:migrate
  script/console
     BorkedBinary.create( :b_data =&gt; '\404' )
@@@

if it works correctly, you'll get '\404'

unfortunately, where b = BorkedData object,

@@@
&gt;&gt; b.b_data = '\404'
=&gt; &quot;\\404&quot;
&gt;&gt; b.b_data
=&gt; &quot;404&quot;
@@@

The problem is before the postgresql driver, as the query generated is broken,

@@@
BorkedBinary Create (0.001279)   INSERT INTO &quot;borked_binaries&quot; (&quot;created_at&quot;, &quot;updated_at&quot;, &quot;b_data&quot;) VALUES('2008-09-17 07:49:54.316491', '2008-09-17 07:49:54.316491', E'404')
@@@

I've tried this with MySQL, PostgreSQL and SQLite3 adapters. Only PostgreSQL is affected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;To create the problem, you only need to do,&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  rails my_app; cd my_app
  script/generate model BorkedBinary b_data:binary
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;... fix config/database.yml so rails can connect ...&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  rake db:migrate
  script/console
     BorkedBinary.create( :b_data =&amp;gt; '\404' )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if it works correctly, you'll get '\404'&lt;/p&gt;
&lt;p&gt;unfortunately, where b = BorkedData object,&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;gt;&amp;gt; b.b_data = '\404'
=&amp;gt; &amp;quot;\\404&amp;quot;
&amp;gt;&amp;gt; b.b_data
=&amp;gt; &amp;quot;404&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem is before the postgresql driver, as the query
generated is broken,&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
BorkedBinary Create (0.001279)   INSERT INTO &amp;quot;borked_binaries&amp;quot; (&amp;quot;created_at&amp;quot;, &amp;quot;updated_at&amp;quot;, &amp;quot;b_data&amp;quot;) VALUES('2008-09-17 07:49:54.316491', '2008-09-17 07:49:54.316491', E'404')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I've tried this with MySQL, PostgreSQL and SQLite3 adapters.
Only PostgreSQL is affected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-17T16:53:53+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug postgresql</tag>
      <title>binary data broken with PostgreSQL adapter</title>
      <updated-at type="datetime">2008-09-17T16:53:58+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">1</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In addition, only binary data with \ followed by 3 numbers seems to be affected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In addition, only binary data with \ followed by 3 numbers seems
to be affected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-17T17:14:15+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug postgresql</tag>
      <title>binary data broken with PostgreSQL adapter</title>
      <updated-at type="datetime">2008-09-17T17:14:19+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">2</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Traced it back to the 

@@@
   self.binary_to_string(value)
@@@

in postgreSQL adapter. Basically, rails *assumes* that stored values are escaped by database and need unescaping!

@@@
self.binary_to_string( value )
return value
end
@@@

PGconn.unescape_bytea is ONLY to to be used to unescape *database* quoted stuff. It is NOT there to unescape PGconn.escape_byea !!

@@@
irb(main):002:0&gt; require 'pg'
=&gt; true
irb(main):003:0&gt; PGconn.escape_bytea( '\404' )
=&gt; &quot;\\\\\\\\404&quot;
irb(main):004:0&gt; '\404' == PGconn.unescape_bytea(PGconn.escape_bytea( '\404' ))
=&gt; false
irb(main):005:0&gt; PGconn.unescape_bytea(PGconn.escape_bytea( '\404' ))
=&gt; &quot;\\\\404&quot;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Traced it back to the&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
   self.binary_to_string(value)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in postgreSQL adapter. Basically, rails &lt;em&gt;assumes&lt;/em&gt; that
stored values are escaped by database and need unescaping!&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
self.binary_to_string( value )
return value
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;PGconn.unescape_bytea is ONLY to to be used to unescape
&lt;em&gt;database&lt;/em&gt; quoted stuff. It is NOT there to unescape
PGconn.escape_byea !!&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
irb(main):002:0&amp;gt; require 'pg'
=&amp;gt; true
irb(main):003:0&amp;gt; PGconn.escape_bytea( '\404' )
=&amp;gt; &amp;quot;\\\\\\\\404&amp;quot;
irb(main):004:0&amp;gt; '\404' == PGconn.unescape_bytea(PGconn.escape_bytea( '\404' ))
=&amp;gt; false
irb(main):005:0&amp;gt; PGconn.unescape_bytea(PGconn.escape_bytea( '\404' ))
=&amp;gt; &amp;quot;\\\\404&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-17T21:07:42+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug postgresql</tag>
      <title>binary data broken with PostgreSQL adapter</title>
      <updated-at type="datetime">2008-09-17T21:07:45+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">3</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Just an aside, ignoring unescaping bit makes my example of '\404' work but of course breaks on actual data fetch from database...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just an aside, ignoring unescaping bit makes my example of
'\404' work but of course breaks on actual data fetch from
database...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-17T21:09:53+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug postgresql</tag>
      <title>binary data broken with PostgreSQL adapter</title>
      <updated-at type="datetime">2008-09-17T21:09:54+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">4</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Checked 2.0.2, 2-1-stable branch and latest HEAD. As expected, same problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Checked 2.0.2, 2-1-stable branch and latest HEAD. As expected,
same problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-17T21:26:11+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord bug postgresql
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>binary data broken with PostgreSQL adapter</title>
      <updated-at type="datetime">2008-09-17T21:26:13+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">5</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-18T23:32:55+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- 
:title: binary data broken with PostgreSQL adapter
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-09-18T23:32:58+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">6</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Added patch,

http://git.debian.org/?p=collab-maint/rails.git;a=shortlog;h=refs/heads/for-upstream

The commit you want is which is at top and vs. edge as of now,
93199ad2ea35d8736a0db154e819583a6e4cf983

Please add unit tests, if you wish.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Added patch,&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://git.debian.org/?p=collab-maint&quot;&gt;http://git.debian.org/?p=collab-...&lt;/a&gt;/rails.git;a=shortlog;h=refs/heads/for-upstream&lt;/p&gt;
&lt;p&gt;The commit you want is which is at top and vs. edge as of now,
93199ad2ea35d8736a0db154e819583a6e4cf983&lt;/p&gt;
&lt;p&gt;Please add unit tests, if you wish.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-19T22:56:59+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-09-19T22:57:05+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">7</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[Proper link](http://git.debian.org/?p=collab-maint/rails.git;a=shortlog;h=refs/heads/for-upstream)

Ok, trying again with the link</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://git.debian.org/?p=collab-maint/rails.git%3Ba=shortlog%3Bh=refs/heads/for-upstream&quot;&gt;
Proper link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ok, trying again with the link&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-19T22:58:23+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- 
:title: binary data corruption in PostgreSQL adapter
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-09-19T22:58:27+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">8</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@
http://git.debian.org/?p=collab-maint/rails.git;a=shortlog;h=refs/heads/for-upstream
@@@

Just copy/paste it.</body>
      <body-html>&lt;div&gt;&lt;pre&gt;&lt;code&gt;
http://git.debian.org/?p=collab-maint/rails.git;a=shortlog;h=refs/heads/for-upstream
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Just copy/paste it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-19T22:59:14+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-09-19T22:59:19+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">9</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can you email the core list about this patch Adam, it'd be good to get a few more postgresql users reporting success or failure.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can you email the core list about this patch Adam, it'd be good
to get a few more postgresql users reporting success or
failure.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-23T18:03:14+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-23T18:03:19+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">10</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If i use binary fields with postgresql my models have no problems with it, but if i use the execute method the result doesnt get unescaped and i have to do it manually.

@@@ 
result = User.connection.execute &quot;SELECT test FROM users WHERE id = 1;&quot;
@@@

results in
@@@
#&lt;PGresult:0x432ce3c @result=[[&quot;\\240\\216\\323\\012E\\230\\216\\337\\243\\223\\352\\255\\331\\3722\\273&quot;]], @fields=[&quot;test&quot;],
@res=#&lt;PostgresPR::Connection::Result:0x432ce28 @rows=[[&quot;\\240\\216\\323\\012E\\230\\216\\337\\243\\223\\352\\255\\331\\3722\\273&quot;]], @fields=[#&lt;struct PostgresPR::RowD
escription::FieldInfo name=&quot;test&quot;, oid=29198, attr_nr=10, type_oid=17, typlen=-1, atttypmod=-1, formatcode=0&gt;], @cmd_tag=&quot;SELECT&quot;&gt;&gt;
@@@

and then i have to do this do get the correct data

@@@
value = ActiveRecord::ConnectionAdapters::PostgreSQLColumn.send(:binary_to_string, result.result.first.first)
@@@

does this patch also correct this problem by moving the binary escape/unescape from column to the driver or is this another issue? 
Maybe it isnt an issue at all and my useage is wrong, i dont have much knowlage of AR-internals.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If i use binary fields with postgresql my models have no
problems with it, but if i use the execute method the result doesnt
get unescaped and i have to do it manually.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
result = User.connection.execute &amp;quot;SELECT test FROM users WHERE id = 1;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;results in&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
#&amp;lt;PGresult:0x432ce3c @result=[[&amp;quot;\\240\\216\\323\\012E\\230\\216\\337\\243\\223\\352\\255\\331\\3722\\273&amp;quot;]], @fields=[&amp;quot;test&amp;quot;],
@res=#&amp;lt;PostgresPR::Connection::Result:0x432ce28 @rows=[[&amp;quot;\\240\\216\\323\\012E\\230\\216\\337\\243\\223\\352\\255\\331\\3722\\273&amp;quot;]], @fields=[#&amp;lt;struct PostgresPR::RowD
escription::FieldInfo name=&amp;quot;test&amp;quot;, oid=29198, attr_nr=10, type_oid=17, typlen=-1, atttypmod=-1, formatcode=0&amp;gt;], @cmd_tag=&amp;quot;SELECT&amp;quot;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then i have to do this do get the correct data&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
value = ActiveRecord::ConnectionAdapters::PostgreSQLColumn.send(:binary_to_string, result.result.first.first)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;does this patch also correct this problem by moving the binary
escape/unescape from column to the driver or is this another issue?
Maybe it isnt an issue at all and my useage is wrong, i dont have
much knowlage of AR-internals.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-24T14:20:40+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-24T14:20:45+01:00</updated-at>
      <user-id type="integer">33030</user-id>
      <version type="integer">11</version>
      <user-name>Kane</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes, it moves the escape/escape from column to driver. All binary data 
is unescaped when it is fetched from PostgreSQL driver and stored as 
binary inside ActiveRecord.

You may not necessarily see problems in binary data corruption as it 
only happens when binary data contains \123 type of ASCII string.

- Adam</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, it moves the escape/escape from column to driver. All
binary data is unescaped when it is fetched from PostgreSQL driver
and stored as binary inside ActiveRecord.&lt;/p&gt;
&lt;p&gt;You may not necessarily see problems in binary data corruption
as it only happens when binary data contains \123 type of ASCII
string.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adam&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-24T15:45:09+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-24T15:45:15+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">12</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Perhaps the best thing to do is describe a pattern we could use to see it affecting a running application?  

A simple test app or something?  Some test files?

As someone who never uses blobs, and hasn't touched postgres in a while, I'm really reluctant to pull the trigger on this without some examples...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Perhaps the best thing to do is describe a pattern we could use
to see it affecting a running application?&lt;/p&gt;
&lt;p&gt;A simple test app or something? Some test files?&lt;/p&gt;
&lt;p&gt;As someone who never uses blobs, and hasn't touched postgres in
a while, I'm really reluctant to pull the trigger on this without
some examples...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-24T20:42:35+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-24T20:42:35+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">13</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>BTW, regarding Kane's post, your usage is incorrect because,

  1. you are executing the query in the pg driver
  2. the result is PGresult - has nothing to do with AR
  3. you have to unescape the data because that's how PostgreSQL returns 
and AR should not meddle and change PGresult class. It would break 
existing application.

You should not be calling AR to unescape the string. The correct usage 
is to use pg driver directly to unescape (after you apply my patch).

    res = User.connection.execute( 'SELECT column FROM table ....' )
    User.connection.unescape_bytea( res[0]['column'] )

You know if you need to do this if

    # BYTEA type and format is escaped
    res.ftype(0) == 17 and res.fformat(0)==0


Of course, this is very anti-AR. To be correct in spirit of AR, the 
connector should return result as an array, not as a PGresult. But that 
is completely different problem.

- Adam

PS. To work correctly with other adapters, and assuming they return 
something different than escaped blobs,

   res = User.connection.execute( 'SELECT column FROM table ....' )
   data = res[0]['column']
   if res.is_a? PGresult and res.ftype(0) == 17 and res.fformat(0)==0
     data = User.connection.unescape_bytea( data )
   end</body>
      <body-html>&lt;div&gt;&lt;p&gt;BTW, regarding Kane's post, your usage is incorrect because,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;you are executing the query in the pg driver&lt;/li&gt;
&lt;li&gt;the result is PGresult - has nothing to do with AR&lt;/li&gt;
&lt;li&gt;you have to unescape the data because that's how PostgreSQL
returns and AR should not meddle and change PGresult class. It
would break existing application.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should not be calling AR to unescape the string. The correct
usage is to use pg driver directly to unescape (after you apply my
patch).&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;res = User.connection.execute( 'SELECT column FROM table ....' )
User.connection.unescape_bytea( res[0]['column'] )
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You know if you need to do this if&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# BYTEA type and format is escaped
res.ftype(0) == 17 and res.fformat(0)==0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Of course, this is very anti-AR. To be correct in spirit of AR,
the connector should return result as an array, not as a PGresult.
But that is completely different problem.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adam&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS. To work correctly with other adapters, and assuming they
return something different than escaped blobs,&lt;/p&gt;
&lt;p&gt;res = User.connection.execute( 'SELECT column FROM table ....' )
data = res[0]['column'] if res.is_a? PGresult and res.ftype(0) ==
17 and res.fformat(0)==0&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; data = User.connection.unescape_bytea( data )
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-24T22:25:06+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-24T22:25:09+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">14</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Err, see my first post to the report? That is the test case right there 
with a step-by-step guide how to reproduce it.


People generally do not do,

   model.blob_column = file
   model.md5_check = md5_sum( file )
   model.save

then when they fetch it, they do not check if model.blob_column is 
actually correct. They just dump it (mostly as images, I think) and if 
it works, it works. It fails, they assume something is wrong with 
initial images.


I actually store the md5_sum for blobs that are later dumped to file 
system with a cronjob. I do this as I *hate* giving out write access to 
the filesystem for webserver user!

- Adam

PS. Real-world examples for files that have lots of \123 (or &quot;\\\\123&quot; 
as a string) patters will be all Microsoft Office files and related, 
like .MSI (Windows Installer)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Err, see my first post to the report? That is the test case
right there with a step-by-step guide how to reproduce it.&lt;/p&gt;
&lt;p&gt;People generally do not do,&lt;/p&gt;
&lt;p&gt;model.blob_column = file model.md5_check = md5_sum( file )
model.save&lt;/p&gt;
&lt;p&gt;then when they fetch it, they do not check if model.blob_column
is actually correct. They just dump it (mostly as images, I think)
and if it works, it works. It fails, they assume something is wrong
with initial images.&lt;/p&gt;
&lt;p&gt;I actually store the md5_sum for blobs that are later dumped to
file system with a cronjob. I do this as I &lt;em&gt;hate&lt;/em&gt; giving out
write access to the filesystem for webserver user!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adam&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS. Real-world examples for files that have lots of \123 (or
&quot;\\123&quot; as a string) patters will be all Microsoft Office files and
related, like .MSI (Windows Installer)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-24T22:30:07+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-24T22:30:13+01:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">15</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [a3dd69da6d76fd8375e8d4da39ed254f8fcc3238]) Fix binary data corruption bug in PostgreSQL adaptor

  1. Move the binary escape/unescape from column to the driver - we should store binary data AR just like most other adaptors
  2. check to make sure we only unescape bytea data
     PGresult.ftype( column ) == 17
  that is passed to us in escaped format
     PGresult.fformat( column ) == 0

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
[#1063 state:committed]
http://github.com/rails/rails/commit/a3dd69da6d76fd8375e8d4da39ed254f8fcc3238</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [a3dd69da6d76fd8375e8d4da39ed254f8fcc3238]) Fix binary
data corruption bug in PostgreSQL adaptor&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Move the binary escape/unescape from column to the driver - we
should store binary data AR just like most other adaptors&lt;/li&gt;
&lt;li&gt;check to make sure we only unescape bytea data PGresult.ftype(
column ) == 17 that is passed to us in escaped format
PGresult.fformat( column ) == 0&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt; [&lt;a href=&quot;/projects/8994/tickets/1063&quot; title=&quot;Ticket #1063&quot;&gt;#1063&lt;/a&gt;
state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/a3dd69da6d76fd8375e8d4da39ed254f8fcc3238&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-25T11:57:28+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-25T11:57:32+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">16</version>
      <user-name>Repository</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [932dffc559ef188eb31d0223116e9da361833488]) Fix binary data corruption bug in PostgreSQL adaptor

  1. Move the binary escape/unescape from column to the driver - we should store binary data AR just like most other adaptors
  2. check to make sure we only unescape bytea data
     PGresult.ftype( column ) == 17
  that is passed to us in escaped format
     PGresult.fformat( column ) == 0

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
[#1063 state:committed]
http://github.com/rails/rails/commit/932dffc559ef188eb31d0223116e9da361833488</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [932dffc559ef188eb31d0223116e9da361833488]) Fix binary
data corruption bug in PostgreSQL adaptor&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Move the binary escape/unescape from column to the driver - we
should store binary data AR just like most other adaptors&lt;/li&gt;
&lt;li&gt;check to make sure we only unescape bytea data PGresult.ftype(
column ) == 17 that is passed to us in escaped format
PGresult.fformat( column ) == 0&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt; [&lt;a href=&quot;/projects/8994/tickets/1063&quot; title=&quot;Ticket #1063&quot;&gt;#1063&lt;/a&gt;
state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/932dffc559ef188eb31d0223116e9da361833488&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-25T11:57:33+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-25T11:57:37+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">17</version>
      <user-name>Repository</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Having an issue which I /think/ is related to this patch. Using PostgreSQL 8.3.3 and the postgres gem version 0.7.9.2008.01.28 and the Rails v2.2.0 tag (932dffc559ef188eb31d0223116e9da361833488).

Running either `rake db:create` or (after creating the database by hand) `rake db:migrate`, I get the following exception:

@@@
jwilger Vidar:~/projects/johnwilger.com [1061]% rake db:migrate --trace                                                                              (master)
(in /Users/jwilger/projects/johnwilger.com)
** Invoke db:migrate (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute db:migrate
rake aborted!
NoMethodError: undefined method `fformat' for #&lt;PGresult:0x22ee42c&gt;: SHOW client_min_messages
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:189:in `log'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:490:in `query'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:711:in `client_min_messages'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:257:in `supports_standard_conforming_strings?'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:942:in `connect'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:210:in `initialize'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:37:in `new'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:37:in `postgresql_connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:215:in `send'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:215:in `new_connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:237:in `checkout_new_connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:180:in `checkout'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:176:in `loop'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:176:in `checkout'
/usr/local/lib/ruby/1.8/monitor.rb:242:in `synchronize'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:175:in `checkout'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:90:in `connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:321:in `retrieve_connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_specification.rb:121:in `retrieve_connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_specification.rb:113:in `connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/migration.rb:429:in `initialize'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/migration.rb:394:in `new'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/migration.rb:394:in `up'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/migration.rb:377:in `migrate'
/Users/jwilger/projects/johnwilger.com/vendor/rails/railties/lib/tasks/databases.rake:111
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in `call'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in `execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in `execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:578:in `invoke_with_call_chain'
/usr/local/lib/ruby/1.8/monitor.rb:242:in `synchronize'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:571:in `invoke_with_call_chain'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:564:in `invoke'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2019:in `invoke_task'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in `standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1991:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1970:in `run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in `standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1967:in `run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/bin/rake:31
/usr/local/bin/rake:19:in `load'
/usr/local/bin/rake:19
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Having an issue which I /think/ is related to this patch. Using
PostgreSQL 8.3.3 and the postgres gem version 0.7.9.2008.01.28 and
the Rails v2.2.0 tag
(932dffc559ef188eb31d0223116e9da361833488).&lt;/p&gt;
&lt;p&gt;Running either &lt;code&gt;rake db:create&lt;/code&gt; or (after creating
the database by hand) &lt;code&gt;rake db:migrate&lt;/code&gt;, I get the
following exception:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
jwilger Vidar:~/projects/johnwilger.com [1061]% rake db:migrate --trace                                                                              (master)
(in /Users/jwilger/projects/johnwilger.com)
** Invoke db:migrate (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute db:migrate
rake aborted!
NoMethodError: undefined method `fformat' for #&amp;lt;PGresult:0x22ee42c&amp;gt;: SHOW client_min_messages
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:189:in `log'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:490:in `query'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:711:in `client_min_messages'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:257:in `supports_standard_conforming_strings?'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:942:in `connect'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:210:in `initialize'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:37:in `new'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:37:in `postgresql_connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:215:in `send'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:215:in `new_connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:237:in `checkout_new_connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:180:in `checkout'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:176:in `loop'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:176:in `checkout'
/usr/local/lib/ruby/1.8/monitor.rb:242:in `synchronize'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:175:in `checkout'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:90:in `connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:321:in `retrieve_connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_specification.rb:121:in `retrieve_connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_specification.rb:113:in `connection'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/migration.rb:429:in `initialize'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/migration.rb:394:in `new'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/migration.rb:394:in `up'
/Users/jwilger/projects/johnwilger.com/vendor/rails/activerecord/lib/active_record/migration.rb:377:in `migrate'
/Users/jwilger/projects/johnwilger.com/vendor/rails/railties/lib/tasks/databases.rake:111
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in `call'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:617:in `execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:612:in `execute'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:578:in `invoke_with_call_chain'
/usr/local/lib/ruby/1.8/monitor.rb:242:in `synchronize'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:571:in `invoke_with_call_chain'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:564:in `invoke'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2019:in `invoke_task'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `each'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1997:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in `standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1991:in `top_level'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1970:in `run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:2036:in `standard_exception_handling'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/lib/rake.rb:1967:in `run'
/usr/local/lib/ruby/gems/1.8/gems/rake-0.8.3/bin/rake:31
/usr/local/bin/rake:19:in `load'
/usr/local/bin/rake:19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-25T19:57:24+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-25T19:57:26+01:00</updated-at>
      <user-id type="integer">33222</user-id>
      <version type="integer">18</version>
      <user-name>John Wilger</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Also, just checked by reverting to the previous commit of Rails, and I no longer received this error.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also, just checked by reverting to the previous commit of Rails,
and I no longer received this error.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-25T20:00:59+01:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-25T20:01:00+01:00</updated-at>
      <user-id type="integer">33222</user-id>
      <version type="integer">19</version>
      <user-name>John Wilger</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Adam, your changes need to work with post postgres and pg gems,  PG works fine as that's what I have locally.

John, do you know what the equivalent calls are for the postgres gem?

+          unescape_col &lt;&lt; ( res.fformat(j)==0 and res.ftype(j)==17 )</body>
      <body-html>&lt;div&gt;&lt;p&gt;Adam, your changes need to work with post postgres and pg gems,
PG works fine as that's what I have locally.&lt;/p&gt;
&lt;p&gt;John, do you know what the equivalent calls are for the postgres
gem?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;
&lt;code&gt;   unescape_col &amp;lt;&amp;lt; ( res.fformat(j)==0 and res.ftype(j)==17 )
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-26T10:15:05+00:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- 
:state: committed
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-26T10:15:08+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">20</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Looking through the postgres gem source there does not appear to be any references to PQfformat which is what fformat() wraps, ftype however is there and should work the same way.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looking through the postgres gem source there does not appear to
be any references to PQfformat which is what fformat() wraps, ftype
however is there and should work the same way.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-26T10:21:15+00:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-26T10:21:20+00:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">21</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>OK, so if the behaviour can't be reproduced in the postgres gem,  hopefully there's a reasonable alternative (perhaps only using ftype?).

Failing that we can just return the result unmodified and log a warning.  Then document in the release notes for good blob support, upgrade to the pg gem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, so if the behaviour can't be reproduced in the postgres gem,
hopefully there's a reasonable alternative (perhaps only using
ftype?).&lt;/p&gt;
&lt;p&gt;Failing that we can just return the result unmodified and log a
warning. Then document in the release notes for good blob support,
upgrade to the pg gem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-26T18:08:41+00:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-26T18:08:47+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">22</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Only using ftype is good enough in current ActiveRecord implementation.
PostgreSQL will *always* return escapped binary on queries unless 
it is told so otherwise. And the only way to tell it to send unescape binary
data is explicitly through bound parameters - AR doesn't use them :(

 http://www.postgresql.org/docs/8.3/static/libpq-exec.html#LIBPQ-EXEC-MAIN

Basically, queries would have to go through PQexecParams or similar (see 
the description for the resultFormat parameter)

So, removing reference to fformat in the patch will not currently affect it.

Cheers,
Adam</body>
      <body-html>&lt;div&gt;&lt;p&gt;Only using ftype is good enough in current ActiveRecord
implementation. PostgreSQL will &lt;em&gt;always&lt;/em&gt; return escapped
binary on queries unless it is told so otherwise. And the only way
to tell it to send unescape binary data is explicitly through bound
parameters - AR doesn't use them :(&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.postgresql.org/docs/8.3/static/libpq-exec.html#LIBPQ-EXEC-MAIN&quot;&gt;
http://www.postgresql.org/docs/8...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Basically, queries would have to go through PQexecParams or
similar (see the description for the resultFormat parameter)&lt;/p&gt;
&lt;p&gt;So, removing reference to fformat in the patch will not
currently affect it.&lt;/p&gt;
&lt;p&gt;Cheers, Adam&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-26T19:00:07+00:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-26T19:00:10+00:00</updated-at>
      <user-id type="integer">32203</user-id>
      <version type="integer">23</version>
      <user-name>Adam Majer</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>OK, I've removed those references.  John, can you verify it works as you wanted now?

Adam, if you're interested in helping to tidy up our query generation (to add support for proper bound parameters) we can start looking into that after 2.2 is branched.

Basically it's a common refrain, but we've yet to get the critical mass required to dive into associations.rb</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, I've removed those references. John, can you verify it works
as you wanted now?&lt;/p&gt;
&lt;p&gt;Adam, if you're interested in helping to tidy up our query
generation (to add support for proper bound parameters) we can
start looking into that after 2.2 is branched.&lt;/p&gt;
&lt;p&gt;Basically it's a common refrain, but we've yet to get the
critical mass required to dive into associations.rb&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-26T19:07:12+00:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-26T19:07:16+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">24</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Commit 9e2bb2caff2b6fd4712ca3db258b68a588a69e9a seems to have fixed the issue I was having. Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Commit 9e2bb2caff2b6fd4712ca3db258b68a588a69e9a seems to have
fixed the issue I was having. Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-27T18:37:07+00:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-27T18:37:11+00:00</updated-at>
      <user-id type="integer">33222</user-id>
      <version type="integer">25</version>
      <user-name>John Wilger</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-27T18:39:34+00:00</created-at>
      <creator-id type="integer">32203</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1063</number>
      <permalink>binary-data-broken-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.0-stable 2.1 activerecord bug edge postgresql</tag>
      <title>[PATCH] binary data corruption in PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-27T18:39:38+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">26</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Adam Majer</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1063</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
</ticket>
