From 028c15f22cd3b5c934067e2ee1189f23279836d8 Mon Sep 17 00:00:00 2001
From: Andrew Greenberg <wizardwerdna@gmail.com>
Date: Sat, 18 Sep 2010 08:59:36 -0700
Subject: [PATCH 1/2] repair rails console autocompletion; Arel provided a deprecation notification by overriding Arel::Attributes::Predications.instance_methods, returning an array of symbols rather than the usual array of strings.  The patch corrects this bug, and further uses ActiveSupport.Deprecation instead of the routine logger.

---
 lib/arel/algebra/attributes/attribute.rb       |    4 ++--
 spec/algebra/unit/primitives/attribute_spec.rb |   10 ++++++++++
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/lib/arel/algebra/attributes/attribute.rb b/lib/arel/algebra/attributes/attribute.rb
index e829a54..1a1c058 100644
--- a/lib/arel/algebra/attributes/attribute.rb
+++ b/lib/arel/algebra/attributes/attribute.rb
@@ -101,8 +101,8 @@ module Arel
 
     Predications = Class.new do
       def self.instance_methods *args
-        warn "this module is deprecated, please use the PREDICATES constant"
-        PREDICATES
+        ActiveSupport::Deprecation.warn "this module is deprecated, please use the PREDICATES constant"
+        PREDICATES.collect(&:to_s)
       end
     end
 
diff --git a/spec/algebra/unit/primitives/attribute_spec.rb b/spec/algebra/unit/primitives/attribute_spec.rb
index 4026c0d..b484f8e 100644
--- a/spec/algebra/unit/primitives/attribute_spec.rb
+++ b/spec/algebra/unit/primitives/attribute_spec.rb
@@ -78,6 +78,16 @@ module Arel
       before do
         @attribute = Attribute.new(@relation, :name)
       end
+      
+      describe 'class.instance_methods' do
+        it "should use ActiveSupport deprecation logger" do
+          ActiveSupport::Deprecation.should_receive(:warn)
+          Attribute::Predications.instance_methods
+        end
+        it "should return a sortable list" do
+          lambda{Attribute::Predications.instance_methods.sort!}.should_not raise_error
+        end
+      end
 
       describe '#eq' do
         it "manufactures an equality predicate" do
-- 
1.7.2


From d35753cca7265da47f354d3ab2a4897906262b76 Mon Sep 17 00:00:00 2001
From: Andrew Greenberg <wizardwerdna@gmail.com>
Date: Sat, 18 Sep 2010 10:50:40 -0700
Subject: [PATCH 2/2] Converted Predications from class to module; removed deprecation warning on instance_methods; added deprecation warning on inclusion

---
 lib/arel/algebra/attributes/attribute.rb       |    6 ++++--
 spec/algebra/unit/primitives/attribute_spec.rb |   17 +++++++++++++----
 2 files changed, 17 insertions(+), 6 deletions(-)

diff --git a/lib/arel/algebra/attributes/attribute.rb b/lib/arel/algebra/attributes/attribute.rb
index 1a1c058..8b22575 100644
--- a/lib/arel/algebra/attributes/attribute.rb
+++ b/lib/arel/algebra/attributes/attribute.rb
@@ -99,11 +99,13 @@ module Arel
       :not_in_any, :not_in_all
     ]
 
-    Predications = Class.new do
+    Predications = Module.new do
       def self.instance_methods *args
-        ActiveSupport::Deprecation.warn "this module is deprecated, please use the PREDICATES constant"
         PREDICATES.collect(&:to_s)
       end
+      def self.included *args
+        ActiveSupport::Deprecation.warn "this module is deprecated, please use the PREDICATES constant"
+      end
     end
 
     def eq(other)
diff --git a/spec/algebra/unit/primitives/attribute_spec.rb b/spec/algebra/unit/primitives/attribute_spec.rb
index b484f8e..916c72b 100644
--- a/spec/algebra/unit/primitives/attribute_spec.rb
+++ b/spec/algebra/unit/primitives/attribute_spec.rb
@@ -80,13 +80,22 @@ module Arel
       end
       
       describe 'class.instance_methods' do
-        it "should use ActiveSupport deprecation logger" do
-          ActiveSupport::Deprecation.should_receive(:warn)
-          Attribute::Predications.instance_methods
+        it "should be a module" do
+          Attribute::Predications.class.should == Module
         end
-        it "should return a sortable list" do
+        it "should return a sortable list" do 
           lambda{Attribute::Predications.instance_methods.sort!}.should_not raise_error
         end
+        it "should use use log a Rails deprecation warning upon inclusion in any class" do
+          ActiveSupport::Deprecation.should_receive(:warn)
+          Class.new do
+            include Attribute::Predications
+          end
+        end
+        it "should not log warning in response to #instance_methods" do
+          ActiveSupport::Deprecation.should_not_receive(:warn)
+          Attribute::Predications.instance_methods
+        end
       end
 
       describe '#eq' do
-- 
1.7.2

