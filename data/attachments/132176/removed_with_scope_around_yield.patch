From b24ebc891d5d05ce42a3937e17ef62f10a9b19d2 Mon Sep 17 00:00:00 2001
From: Valentin Mihov <valentin.mihov@gmail.com>
Date: Thu, 11 Jun 2009 17:11:57 +0300
Subject: [PATCH 1/3] Added a unit test for catching the with_scope into the find_in_batches method.

---
 activerecord/test/cases/batches_test.rb |   11 +++++++++++
 1 files changed, 11 insertions(+), 0 deletions(-)

diff --git a/activerecord/test/cases/batches_test.rb b/activerecord/test/cases/batches_test.rb
index 5009a90..723e022 100644
--- a/activerecord/test/cases/batches_test.rb
+++ b/activerecord/test/cases/batches_test.rb
@@ -58,4 +58,15 @@ class EachTest < ActiveRecord::TestCase
       Post.find_in_batches(:batch_size => post_count + 1) {|batch| assert_kind_of Array, batch }
     end
   end
+  
+  def test_find_in_batched_should_not_put_scope_on_the_queries_in_it
+    Post.find_in_batches(:conditions => ["body = 'hello'"], :batch_size => 2) do |batch|
+      batch.each do |post|
+        Post.with_exclusive_scope do
+          @post_count_by_author = Post.find(:all, :conditions => { :author_id => post.read_attribute(:author_id) }).count
+        end
+        assert_equal Post.find(:all, :conditions => { :author_id => post.read_attribute(:author_id) }).count, @post_count_by_author
+      end
+    end
+  end
 end
\ No newline at end of file
-- 
1.6.1.3


From 0407f9bf219823beb4f18e36b03d4e924dddbcae Mon Sep 17 00:00:00 2001
From: Valentin Mihov <valentin.mihov@gmail.com>
Date: Thu, 11 Jun 2009 17:32:59 +0300
Subject: [PATCH 2/3] Added with_exclusive_scope around the find_in_batches method

---
 activerecord/lib/active_record/batches.rb |    4 +++-
 1 files changed, 3 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/batches.rb b/activerecord/lib/active_record/batches.rb
index e41d38f..1cab579 100644
--- a/activerecord/lib/active_record/batches.rb
+++ b/activerecord/lib/active_record/batches.rb
@@ -61,7 +61,9 @@ module ActiveRecord
           records = find(:all, :conditions => [ "#{table_name}.#{primary_key} >= ?", start ])
 
           while records.any?
-            yield records
+            with_exclusive_scope do
+              yield records
+            end
 
             break if records.size < batch_size
             records = find(:all, :conditions => [ "#{table_name}.#{primary_key} > ?", records.last.id ])
-- 
1.6.1.3


From 0a5e6c232116e323063e618d136c20465bc6d94a Mon Sep 17 00:00:00 2001
From: Valentin Mihov <valentin.mihov@gmail.com>
Date: Thu, 11 Jun 2009 19:12:25 +0300
Subject: [PATCH 3/3] Fix of the with_scope problem without with_exclusive_scope. That should be a much better solution.

---
 activerecord/lib/active_record/batches.rb |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/activerecord/lib/active_record/batches.rb b/activerecord/lib/active_record/batches.rb
index 1cab579..f0d2d7e 100644
--- a/activerecord/lib/active_record/batches.rb
+++ b/activerecord/lib/active_record/batches.rb
@@ -56,22 +56,22 @@ module ActiveRecord
 
         start = options.delete(:start).to_i
         batch_size = options.delete(:batch_size) || 1000
-
+        records = []
+        
         with_scope(:find => options.merge(:order => batch_order, :limit => batch_size)) do
           records = find(:all, :conditions => [ "#{table_name}.#{primary_key} >= ?", start ])
+        end
 
-          while records.any?
-            with_exclusive_scope do
-              yield records
-            end
+        while records.any?
+          yield records
 
-            break if records.size < batch_size
+          break if records.size < batch_size
+          with_scope(:find => options.merge(:order => batch_order, :limit => batch_size)) do
             records = find(:all, :conditions => [ "#{table_name}.#{primary_key} > ?", records.last.id ])
           end
         end
       end
       
-      
       private
         def batch_order
           "#{table_name}.#{primary_key} ASC"
-- 
1.6.1.3

