From 616416862dcdb2551a2372e7036940bc1d3db501 Mon Sep 17 00:00:00 2001
From: Prem Sichanugrist <s@sikachu.com>
Date: Wed, 23 Feb 2011 03:02:39 +0700
Subject: [PATCH 2/2] Always use ActionDispatch::ShowExceptions middleware [#6462 state:resolved]

This will make sure the application will raise `ActionController::RoutingError` in case "X-Cascade: pass" header was set, usually when there's no route match.
---
 railties/lib/rails/application.rb                  |    2 +-
 .../application/middleware/show_exceptions_test.rb |   37 ++++++++++++++++++++
 railties/test/application/middleware_test.rb       |    4 +-
 3 files changed, 40 insertions(+), 3 deletions(-)
 create mode 100644 railties/test/application/middleware/show_exceptions_test.rb

diff --git a/railties/lib/rails/application.rb b/railties/lib/rails/application.rb
index fb0f6fe..9481982 100644
--- a/railties/lib/rails/application.rb
+++ b/railties/lib/rails/application.rb
@@ -157,7 +157,7 @@ module Rails
         middleware.use ::Rack::Lock unless config.allow_concurrency
         middleware.use ::Rack::Runtime
         middleware.use ::Rails::Rack::Logger
-        middleware.use ::ActionDispatch::ShowExceptions, config.consider_all_requests_local if config.action_dispatch.show_exceptions
+        middleware.use ::ActionDispatch::ShowExceptions, config.consider_all_requests_local
         middleware.use ::ActionDispatch::RemoteIp, config.action_dispatch.ip_spoofing_check, config.action_dispatch.trusted_proxies
         middleware.use ::Rack::Sendfile, config.action_dispatch.x_sendfile_header
         middleware.use ::ActionDispatch::Reloader unless config.cache_classes
diff --git a/railties/test/application/middleware/show_exceptions_test.rb b/railties/test/application/middleware/show_exceptions_test.rb
new file mode 100644
index 0000000..5487e41
--- /dev/null
+++ b/railties/test/application/middleware/show_exceptions_test.rb
@@ -0,0 +1,37 @@
+require 'isolation/abstract_unit'
+
+module ApplicationTests
+  class ShowExceptionsTest < Test::Unit::TestCase
+    include ActiveSupport::Testing::Isolation
+
+    def setup
+      build_app
+      boot_rails
+      FileUtils.rm_rf "#{app_path}/config/environments"
+    end
+
+    def app
+      @app ||= Rails.application
+    end
+
+    test "unspecified route when set action_dispatch.show_exceptions to false" do
+      make_basic_app do |app|
+        app.config.action_dispatch.show_exceptions = false
+      end
+
+      assert_raise(ActionController::RoutingError) do
+        get '/foo'
+      end
+    end
+
+    test "unspecified route when set action_dispatch.show_exceptions to true" do
+      make_basic_app do |app|
+        app.config.action_dispatch.show_exceptions = true
+      end
+
+      assert_nothing_raised(ActionController::RoutingError) do
+        get '/foo'
+      end
+    end
+  end
+end
diff --git a/railties/test/application/middleware_test.rb b/railties/test/application/middleware_test.rb
index 44dd0bc..b314832 100644
--- a/railties/test/application/middleware_test.rb
+++ b/railties/test/application/middleware_test.rb
@@ -78,10 +78,10 @@ module ApplicationTests
       assert !middleware.include?("ActionDispatch::Static")
     end
 
-    test "removes show exceptions if action_dispatch.show_exceptions is disabled" do
+    test "includes show exceptions even action_dispatch.show_exceptions is disabled" do
       add_to_config "config.action_dispatch.show_exceptions = false"
       boot!
-      assert !middleware.include?("ActionDispatch::ShowExceptions")
+      assert middleware.include?("ActionDispatch::ShowExceptions")
     end
 
     test "removes ActionDispatch::Reloader if cache_classes is true" do
-- 
1.7.4.1

