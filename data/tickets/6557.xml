<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-10T22:01:39+00:00</created-at>
  <creator-id type="integer">124458</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6557</number>
  <permalink>symbol-duplication-error-in-parameterfilter-compiled_filter</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>actiondispatch rails3.0.3 symbol</tag>
  <title>Symbol duplication error in ParameterFilter compiled_filter</title>
  <updated-at type="datetime">2011-03-10T22:02:43+00:00</updated-at>
  <user-id type="integer">124458</user-id>
  <version type="integer">1</version>
  <user-name>Andrew</user-name>
  <creator-name>Andrew</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6557</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm using Rails 3.0.3, and I'm having a problem with passing a block to filter_parameters in application.rb. If I pass a block, an error occurs on line 38 of ActionDispatch::Http::ParameterFilter.compiled_filter: 
key = key.dup 
when key is a symbol. This happens because symbols are not duplicable. Here is the source: 

    def compiled_filter
        ...
        elsif blocks.present?
            key = key.dup
            value = value.dup if value.duplicable?
            blocks.each { |b| b.call(key, value) }
        end
        ...
    end

I'm not sure why there isn't a duplicable? check on key before dup is called, but if I add that my problem is resolved. I'm wondering if that is a safe change to make. I am worried that the original author left that out intentionally.

The symbol that causes the error is :action, and it occurs whenever an error-email is being processed (using the exception-notifier gem).</original-body>
  <latest-body>I'm using Rails 3.0.3, and I'm having a problem with passing a block to filter_parameters in application.rb. If I pass a block, an error occurs on line 38 of ActionDispatch::Http::ParameterFilter.compiled_filter: 
key = key.dup 
when key is a symbol. This happens because symbols are not duplicable. Here is the source: 

    def compiled_filter
        ...
        elsif blocks.present?
            key = key.dup
            value = value.dup if value.duplicable?
            blocks.each { |b| b.call(key, value) }
        end
        ...
    end

I'm not sure why there isn't a duplicable? check on key before dup is called, but if I add that my problem is resolved. I'm wondering if that is a safe change to make. I am worried that the original author left that out intentionally.

The symbol that causes the error is :action, and it occurs whenever an error-email is being processed (using the exception-notifier gem).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm using Rails 3.0.3, and I'm having a problem with passing a
block to filter_parameters in application.rb. If I pass a block, an
error occurs on line 38 of
ActionDispatch::Http::ParameterFilter.compiled_filter:&lt;br&gt;
key = key.dup&lt;br&gt;
when key is a symbol. This happens because symbols are not
duplicable. Here is the source:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def compiled_filter
    ...
    elsif blocks.present?
        key = key.dup
        value = value.dup if value.duplicable?
        blocks.each { |b| b.call(key, value) }
    end
    ...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm not sure why there isn't a duplicable? check on key before
dup is called, but if I add that my problem is resolved. I'm
wondering if that is a safe change to make. I am worried that the
original author left that out intentionally.&lt;/p&gt;
&lt;p&gt;The symbol that causes the error is :action, and it occurs
whenever an error-email is being processed (using the
exception-notifier gem).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm using Rails 3.0.3, and I'm having a problem with passing a block to filter_parameters in application.rb. If I pass a block, an error occurs on line 38 of ActionDispatch::Http::ParameterFilter.compiled_filter: 
key = key.dup 
when key is a symbol. This happens because symbols are not duplicable. Here is the source: 

    def compiled_filter
        ...
        elsif blocks.present?
            key = key.dup
            value = value.dup if value.duplicable?
            blocks.each { |b| b.call(key, value) }
        end
        ...
    end

I'm not sure why there isn't a duplicable? check on key before dup is called, but if I add that my problem is resolved. I'm wondering if that is a safe change to make. I am worried that the original author left that out intentionally.

The symbol that causes the error is :action, and it occurs whenever an error-email is being processed (using the exception-notifier gem).</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm using Rails 3.0.3, and I'm having a problem with passing a
block to filter_parameters in application.rb. If I pass a block, an
error occurs on line 38 of
ActionDispatch::Http::ParameterFilter.compiled_filter:&lt;br&gt;
key = key.dup&lt;br&gt;
when key is a symbol. This happens because symbols are not
duplicable. Here is the source:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def compiled_filter
    ...
    elsif blocks.present?
        key = key.dup
        value = value.dup if value.duplicable?
        blocks.each { |b| b.call(key, value) }
    end
    ...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm not sure why there isn't a duplicable? check on key before
dup is called, but if I add that my problem is resolved. I'm
wondering if that is a safe change to make. I am worried that the
original author left that out intentionally.&lt;/p&gt;
&lt;p&gt;The symbol that causes the error is :action, and it occurs
whenever an error-email is being processed (using the
exception-notifier gem).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-10T22:01:39+00:00</created-at>
      <creator-id type="integer">124458</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6557</number>
      <permalink>symbol-duplication-error-in-parameterfilter-compiled_filter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actiondispatch rails3.0.3 symbol</tag>
      <title>Symbol duplication error in ParameterFilter compiled_filter</title>
      <updated-at type="datetime">2011-03-10T22:02:43+00:00</updated-at>
      <user-id type="integer">124458</user-id>
      <version type="integer">1</version>
      <user-name>Andrew</user-name>
      <creator-name>Andrew</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6557</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
