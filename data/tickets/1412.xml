<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-19T10:01:27+00:00</created-at>
  <creator-id type="integer">10460</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1412</number>
  <permalink>dbmigrateredo-does-not-dump-the-schema-after-migrating-back-up</permalink>
  <priority type="integer">802</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>2.2.rc2 bug database databases.rake edge migrate patch schema</tag>
  <title>db:migrate:redo does not dump the schema after migrating back up</title>
  <updated-at type="datetime">2009-02-06T00:48:59+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">3</version>
  <user-name>Repository</user-name>
  <creator-name>Will Bryant</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1412</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>db:migrate:redo is implemented as db:migrate:down+db:migrate:up or db:rollback+db:migrate.

Each of those four subtasks does a db:schema:dump at the end.  However, this being rake, if db:schema:dump has already been run, it won't run again (Task#invoke, surprisingly, is just like a prerequisite in that respect).

End result, the db:migrate:down or db:rollback will dump the schema, and the db:migrate:up or db:migrate won't, so your schema is left inconsistent with the migrated state.  Quite confusing... the db doesn't clone properly for test, and further redos further bork the state.

The attached one-line patch makes db:schema:dump call reenable on its own task definition, so that it may be called invoked multiple times, which should fix this problem and any similar issues with people's own &quot;combo&quot; tasks calling db:schema:dump multiple times.  Applies to both 2-2-stable and master.

Task#reenable was introduced in Rake 0.8.2, but we already require Rake 0.8.3 for Rails 2.2 so no problem there.</original-body>
  <latest-body>db:migrate:redo is implemented as db:migrate:down+db:migrate:up or db:rollback+db:migrate.

Each of those four subtasks does a db:schema:dump at the end.  However, this being rake, if db:schema:dump has already been run, it won't run again (Task#invoke, surprisingly, is just like a prerequisite in that respect).

End result, the db:migrate:down or db:rollback will dump the schema, and the db:migrate:up or db:migrate won't, so your schema is left inconsistent with the migrated state.  Quite confusing... the db doesn't clone properly for test, and further redos further bork the state.

The attached one-line patch makes db:schema:dump call reenable on its own task definition, so that it may be called invoked multiple times, which should fix this problem and any similar issues with people's own &quot;combo&quot; tasks calling db:schema:dump multiple times.  Applies to both 2-2-stable and master.

Task#reenable was introduced in Rake 0.8.2, but we already require Rake 0.8.3 for Rails 2.2 so no problem there.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;db:migrate:redo is implemented as db:migrate:down+db:migrate:up
or db:rollback+db:migrate.&lt;/p&gt;
&lt;p&gt;Each of those four subtasks does a db:schema:dump at the end.
However, this being rake, if db:schema:dump has already been run,
it won't run again (Task#invoke, surprisingly, is just like a
prerequisite in that respect).&lt;/p&gt;
&lt;p&gt;End result, the db:migrate:down or db:rollback will dump the
schema, and the db:migrate:up or db:migrate won't, so your schema
is left inconsistent with the migrated state. Quite confusing...
the db doesn't clone properly for test, and further redos further
bork the state.&lt;/p&gt;
&lt;p&gt;The attached one-line patch makes db:schema:dump call reenable
on its own task definition, so that it may be called invoked
multiple times, which should fix this problem and any similar
issues with people's own &quot;combo&quot; tasks calling db:schema:dump
multiple times. Applies to both 2-2-stable and master.&lt;/p&gt;
&lt;p&gt;Task#reenable was introduced in Rake 0.8.2, but we already
require Rake 0.8.3 for Rails 2.2 so no problem there.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>db:migrate:redo is implemented as db:migrate:down+db:migrate:up or db:rollback+db:migrate.

Each of those four subtasks does a db:schema:dump at the end.  However, this being rake, if db:schema:dump has already been run, it won't run again (Task#invoke, surprisingly, is just like a prerequisite in that respect).

End result, the db:migrate:down or db:rollback will dump the schema, and the db:migrate:up or db:migrate won't, so your schema is left inconsistent with the migrated state.  Quite confusing... the db doesn't clone properly for test, and further redos further bork the state.

The attached one-line patch makes db:schema:dump call reenable on its own task definition, so that it may be called invoked multiple times, which should fix this problem and any similar issues with people's own &quot;combo&quot; tasks calling db:schema:dump multiple times.  Applies to both 2-2-stable and master.

Task#reenable was introduced in Rake 0.8.2, but we already require Rake 0.8.3 for Rails 2.2 so no problem there.</body>
      <body-html>&lt;div&gt;&lt;p&gt;db:migrate:redo is implemented as db:migrate:down+db:migrate:up
or db:rollback+db:migrate.&lt;/p&gt;
&lt;p&gt;Each of those four subtasks does a db:schema:dump at the end.
However, this being rake, if db:schema:dump has already been run,
it won't run again (Task#invoke, surprisingly, is just like a
prerequisite in that respect).&lt;/p&gt;
&lt;p&gt;End result, the db:migrate:down or db:rollback will dump the
schema, and the db:migrate:up or db:migrate won't, so your schema
is left inconsistent with the migrated state. Quite confusing...
the db doesn't clone properly for test, and further redos further
bork the state.&lt;/p&gt;
&lt;p&gt;The attached one-line patch makes db:schema:dump call reenable
on its own task definition, so that it may be called invoked
multiple times, which should fix this problem and any similar
issues with people's own &quot;combo&quot; tasks calling db:schema:dump
multiple times. Applies to both 2-2-stable and master.&lt;/p&gt;
&lt;p&gt;Task#reenable was introduced in Rake 0.8.2, but we already
require Rake 0.8.3 for Rails 2.2 so no problem there.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-19T10:01:28+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1412</number>
      <permalink>dbmigrateredo-does-not-dump-the-schema-after-migrating-back-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.rc2 bug database databases.rake edge migrate patch schema</tag>
      <title>db:migrate:redo does not dump the schema after migrating back up</title>
      <updated-at type="datetime">2008-11-19T10:01:31+00:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">1</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1412</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-27T00:35:09+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1412</number>
      <permalink>dbmigrateredo-does-not-dump-the-schema-after-migrating-back-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.rc2 bug database databases.rake edge migrate patch schema</tag>
      <title>db:migrate:redo does not dump the schema after migrating back up</title>
      <updated-at type="datetime">2008-11-27T00:35:13+00:00</updated-at>
      <user-id type="integer">38202</user-id>
      <version type="integer">2</version>
      <user-name>Roger Nesbitt</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1412</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [ba146a84d0ed8a886fdc6b6794ce99a9d37c0190]) re-enable db:schema:dump so db:migrate:redo dumps the schema after migrating back up

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
[#1412 state:committed]
http://github.com/rails/rails/commit/ba146a84d0ed8a886fdc6b6794ce99a9d37c0190</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [ba146a84d0ed8a886fdc6b6794ce99a9d37c0190]) re-enable
db:schema:dump so db:migrate:redo dumps the schema after migrating
back up&lt;/p&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt; [&lt;a href=&quot;/projects/8994/tickets/1412&quot; title=&quot;Ticket #1412&quot;&gt;#1412&lt;/a&gt;
state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/ba146a84d0ed8a886fdc6b6794ce99a9d37c0190&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-06T00:48:56+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1412</number>
      <permalink>dbmigrateredo-does-not-dump-the-schema-after-migrating-back-up</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.2.rc2 bug database databases.rake edge migrate patch schema</tag>
      <title>db:migrate:redo does not dump the schema after migrating back up</title>
      <updated-at type="datetime">2009-02-06T00:48:59+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1412</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>2bf9b3356b90ce8f846b9cadf72ac2935d9c21c4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-19T10:01:28+00:00</created-at>
      <filename>0001-re-enable-db-schema-dump-so-db-migrate-redo-dumps-th.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">63613</id>
      <size type="integer">872</size>
      <uploader-id type="integer">10460</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/63613/0001-re-enable-db-schema-dump-so-db-migrate-redo-dumps-th.patch</url>
    </attachment>
  </attachments>
</ticket>
