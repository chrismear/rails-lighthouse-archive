From 4864b736546b00a3e1bba551eb0a57b24e1f65c1 Mon Sep 17 00:00:00 2001
From: dolzenko <dolzenko@gmail.com>
Date: Thu, 5 Nov 2009 14:39:33 +0300
Subject: [PATCH] Fix I18n#normalize_translation_keys

---
 .../active_support/vendor/i18n-0.1.3/lib/i18n.rb   |    2 +-
 .../vendor/i18n-0.1.3/test/i18n_test.rb            |    4 +
 .../tzinfo-0.3.15/lib/tzinfo/ruby_core_support.rb  |  110 ++++++++++----------
 3 files changed, 60 insertions(+), 56 deletions(-)

diff --git a/activesupport/lib/active_support/vendor/i18n-0.1.3/lib/i18n.rb b/activesupport/lib/active_support/vendor/i18n-0.1.3/lib/i18n.rb
index 1b49deb..e194730 100755
--- a/activesupport/lib/active_support/vendor/i18n-0.1.3/lib/i18n.rb
+++ b/activesupport/lib/active_support/vendor/i18n-0.1.3/lib/i18n.rb
@@ -198,7 +198,7 @@ module I18n
     def normalize_translation_keys(locale, key, scope)
       keys = [locale] + Array(scope) + [key]
       keys = keys.map { |k| k.to_s.split(/\./) }
-      keys.flatten.map { |k| k.to_sym }
+      keys.flatten.map { |k| k.empty? ? nil : k.to_sym }.compact
     end
   end
 end
diff --git a/activesupport/lib/active_support/vendor/i18n-0.1.3/test/i18n_test.rb b/activesupport/lib/active_support/vendor/i18n-0.1.3/test/i18n_test.rb
index 2835ec4..457f42a 100644
--- a/activesupport/lib/active_support/vendor/i18n-0.1.3/test/i18n_test.rb
+++ b/activesupport/lib/active_support/vendor/i18n-0.1.3/test/i18n_test.rb
@@ -110,6 +110,10 @@ class I18nTest < Test::Unit::TestCase
   #   assert_equal "translation missing: en, no key", I18n.t
   # end
 
+  def test_translate_given_a_key_with_repeated_dots_raises_nothing
+    assert_nothing_raised { I18n.t(".1.") }
+  end
+      
   def test_translate_given_a_bogus_key_raises_missing_translation_data
     assert_equal "translation missing: en, bogus", I18n.t(:bogus)
   end
diff --git a/activesupport/lib/active_support/vendor/tzinfo-0.3.15/lib/tzinfo/ruby_core_support.rb b/activesupport/lib/active_support/vendor/tzinfo-0.3.15/lib/tzinfo/ruby_core_support.rb
index 9a04412..b65eeaa 100644
--- a/activesupport/lib/active_support/vendor/tzinfo-0.3.15/lib/tzinfo/ruby_core_support.rb
+++ b/activesupport/lib/active_support/vendor/tzinfo-0.3.15/lib/tzinfo/ruby_core_support.rb
@@ -1,56 +1,56 @@
-#--
-# Copyright (c) 2008 Philip Ross
-# 
-# Permission is hereby granted, free of charge, to any person obtaining a copy
-# of this software and associated documentation files (the "Software"), to deal
-# in the Software without restriction, including without limitation the rights
-# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-# copies of the Software, and to permit persons to whom the Software is
-# furnished to do so, subject to the following conditions:
-# 
-# The above copyright notice and this permission notice shall be included in all
-# copies or substantial portions of the Software.
-#
-# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-# THE SOFTWARE.
-#++
-
-require 'date'
-require 'rational'
-
-module TZInfo
-  
-  # Methods to support different versions of Ruby.
-  module RubyCoreSupport #:nodoc:
-  
-    # Use Rational.new! for performance reasons in Ruby 1.8.
-    # This has been removed from 1.9, but Rational performs better.        
-    if Rational.respond_to? :new!
-      def self.rational_new!(numerator, denominator = 1)
-        Rational.new!(numerator, denominator)
-      end
-    else
-      def self.rational_new!(numerator, denominator = 1)
-        Rational(numerator, denominator)
-      end
-    end
-    
-    # Ruby 1.8.6 introduced new! and deprecated new0.
-    # Ruby 1.9.0 removed new0.
-    # We still need to support new0 for older versions of Ruby.
-    if DateTime.respond_to? :new!
-      def self.datetime_new!(ajd = 0, of = 0, sg = Date::ITALY)
-        DateTime.new!(ajd, of, sg)
-      end
-    else
-      def self.datetime_new!(ajd = 0, of = 0, sg = Date::ITALY)
-        DateTime.new0(ajd, of, sg)
-      end
-    end
-  end
+#--
+# Copyright (c) 2008 Philip Ross
+# 
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to deal
+# in the Software without restriction, including without limitation the rights
+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+# copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+# 
+# The above copyright notice and this permission notice shall be included in all
+# copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+# THE SOFTWARE.
+#++
+
+require 'date'
+require 'rational'
+
+module TZInfo
+  
+  # Methods to support different versions of Ruby.
+  module RubyCoreSupport #:nodoc:
+  
+    # Use Rational.new! for performance reasons in Ruby 1.8.
+    # This has been removed from 1.9, but Rational performs better.        
+    if Rational.respond_to? :new!
+      def self.rational_new!(numerator, denominator = 1)
+        Rational.new!(numerator, denominator)
+      end
+    else
+      def self.rational_new!(numerator, denominator = 1)
+        Rational(numerator, denominator)
+      end
+    end
+    
+    # Ruby 1.8.6 introduced new! and deprecated new0.
+    # Ruby 1.9.0 removed new0.
+    # We still need to support new0 for older versions of Ruby.
+    if DateTime.respond_to? :new!
+      def self.datetime_new!(ajd = 0, of = 0, sg = Date::ITALY)
+        DateTime.new!(ajd, of, sg)
+      end
+    else
+      def self.datetime_new!(ajd = 0, of = 0, sg = Date::ITALY)
+        DateTime.new0(ajd, of, sg)
+      end
+    end
+  end
 end
\ No newline at end of file
-- 
1.6.4.msysgit.0

