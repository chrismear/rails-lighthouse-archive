From b098fccfa61ccce11f33faa508c25f2b75b82a61 Mon Sep 17 00:00:00 2001
From: Kieran Pilkington <kieran@katipo.co.nz>
Date: Mon, 10 Aug 2009 13:57:39 +1200
Subject: [PATCH] Provide a restful, non javascript dependent solution for record deletion.

---
 .../lib/action_controller/routing/resources.rb     |   71 +++++---
 actionpack/test/controller/resources_test.rb       |  196 +++++++++++---------
 .../generators/erb/scaffold/scaffold_generator.rb  |    4 +
 .../erb/scaffold/templates/delete.html.erb         |   11 +
 .../erb/scaffold/templates/index.html.erb          |    2 +-
 .../scaffold_controller/templates/controller.rb    |    5 +
 .../scaffold_controller_generator_test.rb          |    5 +
 .../test/generators/scaffold_generator_test.rb     |    5 +
 8 files changed, 184 insertions(+), 115 deletions(-)
 create mode 100644 railties/lib/generators/erb/scaffold/templates/delete.html.erb

diff --git a/actionpack/lib/action_controller/routing/resources.rb b/actionpack/lib/action_controller/routing/resources.rb
index 7fd3ffd..c1cf00f 100644
--- a/actionpack/lib/action_controller/routing/resources.rb
+++ b/actionpack/lib/action_controller/routing/resources.rb
@@ -48,7 +48,7 @@ module ActionController
     INHERITABLE_OPTIONS = :namespace, :shallow
 
     class Resource #:nodoc:
-      DEFAULT_ACTIONS = :index, :create, :new, :edit, :show, :update, :destroy
+      DEFAULT_ACTIONS = :index, :create, :new, :edit, :show, :update, :delete, :destroy
 
       attr_reader :collection_methods, :member_methods, :new_methods
       attr_reader :path_prefix, :name_prefix, :path_segment
@@ -135,6 +135,7 @@ module ActionController
         def add_default_actions
           add_default_action(member_methods, :get, :edit)
           add_default_action(new_methods, :get, :new)
+          add_default_action(member_methods, :get, :delete)
         end
 
         def set_allowed_actions
@@ -231,6 +232,12 @@ module ActionController
     #       # find and update a specific message
     #     end
     #
+    #     # GET delete_message_url(:id => 1)
+    #     def delete
+    #       # return an HTML form to confirm record deletion
+    #       # posting to destroy with method delete
+    #     end
+    #
     #     # DELETE message_url(:id => 1)
     #     def destroy
     #       # delete a specific message
@@ -240,19 +247,22 @@ module ActionController
     # Along with the routes themselves, +resources+ generates named routes for use in
     # controllers and views. <tt>map.resources :messages</tt> produces the following named routes and helpers:
     #
-    #   Named Route   Helpers
-    #   ============  =====================================================
-    #   messages      messages_url, hash_for_messages_url,
-    #                 messages_path, hash_for_messages_path
+    #   Named Route     Helpers
+    #   ============    =====================================================
+    #   messages        messages_url, hash_for_messages_url,
+    #                   messages_path, hash_for_messages_path
+    #
+    #   message         message_url(id), hash_for_message_url(id),
+    #                   message_path(id), hash_for_message_path(id)
     #
-    #   message       message_url(id), hash_for_message_url(id),
-    #                 message_path(id), hash_for_message_path(id)
+    #   new_message     new_message_url, hash_for_new_message_url,
+    #                   new_message_path, hash_for_new_message_path
     #
-    #   new_message   new_message_url, hash_for_new_message_url,
-    #                 new_message_path, hash_for_new_message_path
+    #   edit_message    edit_message_url(id), hash_for_edit_message_url(id),
+    #                   edit_message_path(id), hash_for_edit_message_path(id)
     #
-    #   edit_message  edit_message_url(id), hash_for_edit_message_url(id),
-    #                 edit_message_path(id), hash_for_edit_message_path(id)
+    #   delete_message  delete_message_url(id), hash_for_delete_message_url(id),
+    #                   delete_message_path(id), hash_for_delete_message_path(id)
     #
     # You can use these helpers instead of +url_for+ or methods that take +url_for+ parameters. For example:
     #
@@ -291,7 +301,7 @@ module ActionController
     # * <tt>:new</tt> - Same as <tt>:collection</tt>, but for actions that operate on the new \resource action.
     # * <tt>:controller</tt> - Specify the controller name for the routes.
     # * <tt>:singular</tt> - Specify the singular name used in the member routes.
-    # * <tt>:requirements</tt> - Set custom routing parameter requirements; this is a hash of either 
+    # * <tt>:requirements</tt> - Set custom routing parameter requirements; this is a hash of either
     #     regular expressions (which must match for the route to match) or extra parameters. For example:
     #
     #       map.resource :profile, :path_prefix => ':name', :requirements => { :name => /[a-zA-Z]+/, :extra => 'value' }
@@ -499,6 +509,12 @@ module ActionController
     #       # find and update the account
     #     end
     #
+    #     # GET delete_account_url
+    #     def delete
+    #       # return an HTML form to confirm record deletion
+    #       # posting to destroy with method delete
+    #     end
+    #
     #     # DELETE account_url
     #     def destroy
     #       # delete the account
@@ -509,16 +525,19 @@ module ActionController
     # use in controllers and views. <tt>map.resource :account</tt> produces
     # these named routes and helpers:
     #
-    #   Named Route   Helpers
-    #   ============  =============================================
-    #   account       account_url, hash_for_account_url,
-    #                 account_path, hash_for_account_path
+    #   Named Route     Helpers
+    #   ============    =============================================
+    #   account         account_url, hash_for_account_url,
+    #                   account_path, hash_for_account_path
+    #
+    #   new_account     new_account_url, hash_for_new_account_url,
+    #                   new_account_path, hash_for_new_account_path
     #
-    #   new_account   new_account_url, hash_for_new_account_url,
-    #                 new_account_path, hash_for_new_account_path
+    #   edit_account    edit_account_url, hash_for_edit_account_url,
+    #                   edit_account_path, hash_for_edit_account_path
     #
-    #   edit_account  edit_account_url, hash_for_edit_account_url,
-    #                 edit_account_path, hash_for_edit_account_path
+    #   delete_account  delete_account_url, hash_for_delete_account_url,
+    #                   delete_account_path, hash_for_delete_account_path
     def resource(*entities, &block)
       options = entities.extract_options!
       entities.each { |entity| map_singleton_resource(entity, options.dup, &block) }
@@ -673,12 +692,12 @@ module ActionController
         force_id = resource_options[:force_id] && !resource.kind_of?(SingletonResource)
 
         case default_options[:action]
-          when "index", "new"; default_options.merge(add_conditions_for(resource.conditions, method || :get)).merge(resource.requirements)
-          when "create";       default_options.merge(add_conditions_for(resource.conditions, method || :post)).merge(resource.requirements)
-          when "show", "edit"; default_options.merge(add_conditions_for(resource.conditions, method || :get)).merge(resource.requirements(require_id))
-          when "update";       default_options.merge(add_conditions_for(resource.conditions, method || :put)).merge(resource.requirements(require_id))
-          when "destroy";      default_options.merge(add_conditions_for(resource.conditions, method || :delete)).merge(resource.requirements(require_id))
-          else                 default_options.merge(add_conditions_for(resource.conditions, method)).merge(resource.requirements(force_id))
+          when "index", "new";           default_options.merge(add_conditions_for(resource.conditions, method || :get)).merge(resource.requirements)
+          when "create";                 default_options.merge(add_conditions_for(resource.conditions, method || :post)).merge(resource.requirements)
+          when "show", "edit", "delete"; default_options.merge(add_conditions_for(resource.conditions, method || :get)).merge(resource.requirements(require_id))
+          when "update";                 default_options.merge(add_conditions_for(resource.conditions, method || :put)).merge(resource.requirements(require_id))
+          when "destroy";                default_options.merge(add_conditions_for(resource.conditions, method || :delete)).merge(resource.requirements(require_id))
+          else                           default_options.merge(add_conditions_for(resource.conditions, method)).merge(resource.requirements(force_id))
         end
       end
   end
diff --git a/actionpack/test/controller/resources_test.rb b/actionpack/test/controller/resources_test.rb
index 0b639e3..393443a 100644
--- a/actionpack/test/controller/resources_test.rb
+++ b/actionpack/test/controller/resources_test.rb
@@ -46,11 +46,11 @@ class ResourcesTest < ActionController::TestCase
       :member     => { :rss => :get, :atom => :get, :upload => :post, :fix => :post },
       :new        => { :preview => :get, :draft => :get })
 
-    assert_resource_methods [:rss],                   resource, :collection, :get
-    assert_resource_methods [:csv, :reorder],         resource, :collection, :post
-    assert_resource_methods [:edit, :rss, :atom],     resource, :member,     :get
-    assert_resource_methods [:upload, :fix],          resource, :member,     :post
-    assert_resource_methods [:new, :preview, :draft], resource, :new,        :get
+    assert_resource_methods [:rss],                        resource, :collection, :get
+    assert_resource_methods [:csv, :reorder],              resource, :collection, :post
+    assert_resource_methods [:delete, :edit, :rss, :atom], resource, :member,     :get
+    assert_resource_methods [:upload, :fix],               resource, :member,     :post
+    assert_resource_methods [:new, :preview, :draft],      resource, :new,        :get
   end
 
   def test_should_resource_controller_name_equal_resource_name_by_default
@@ -122,8 +122,8 @@ class ResourcesTest < ActionController::TestCase
 
   def test_override_paths_for_default_restful_actions
     resource = ActionController::Resources::Resource.new(:messages,
-      :path_names => {:new => 'nuevo', :edit => 'editar'})
-    assert_equal resource.new_path, "#{resource.path}/nuevo"
+      :path_names => {:new => 'nuevo', :edit => 'editar', :delete => 'borrar'})
+    assert_equal resource.new_path,    "#{resource.path}/nuevo"
   end
 
   def test_multiple_default_restful_routes
@@ -281,7 +281,7 @@ class ResourcesTest < ActionController::TestCase
 
   def test_with_member_action_and_requirement
     expected_options = {:controller => 'messages', :action => 'mark', :id => '1.1.1'}
-  
+
     with_restful_routing(:messages, :requirements => {:id => /[0-9]\.[0-9]\.[0-9]/}, :member => { :mark => :get }) do
       assert_recognizes(expected_options, :path => 'messages/1.1.1/mark', :method => :get)
     end
@@ -306,13 +306,15 @@ class ResourcesTest < ActionController::TestCase
 
   def test_member_when_changed_default_restful_actions_and_path_names_not_specified
     default_path_names = ActionController::Base.resources_path_names
-    ActionController::Base.resources_path_names = {:new => 'nuevo', :edit => 'editar'}
+    ActionController::Base.resources_path_names = {:new => 'nuevo', :edit => 'editar', :delete => 'borrar'}
 
     with_restful_routing :messages do
       new_options = { :action => 'new', :controller => 'messages' }
       new_path = "/messages/nuevo"
       edit_options = { :action => 'edit', :id => '1', :controller => 'messages' }
       edit_path = "/messages/1/editar"
+      delete_options = { :action => 'delete', :id => '1', :controller => 'messages' }
+      delete_path = "/messages/1/borrar"
 
       assert_restful_routes_for :messages do |options|
         assert_recognizes(options.merge(new_options), :path => new_path, :method => :get)
@@ -321,6 +323,10 @@ class ResourcesTest < ActionController::TestCase
       assert_restful_routes_for :messages do |options|
         assert_recognizes(options.merge(edit_options), :path => edit_path, :method => :get)
       end
+
+      assert_restful_routes_for :messages do |options|
+        assert_recognizes(options.merge(delete_options), :path => delete_path, :method => :get)
+      end
     end
   ensure
     ActionController::Base.resources_path_names = default_path_names
@@ -898,8 +904,8 @@ class ResourcesTest < ActionController::TestCase
         map.resources :products, :only => :show
       end
 
-      assert_resource_allowed_routes('products', {},                    { :id => '1' }, :show, [:index, :new, :create, :edit, :update, :destroy])
-      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, :show, [:index, :new, :create, :edit, :update, :destroy])
+      assert_resource_allowed_routes('products', {},                    { :id => '1' }, :show, [:index, :new, :create, :edit, :update, :delete, :destroy])
+      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, :show, [:index, :new, :create, :edit, :update, :delete, :destroy])
     end
   end
 
@@ -909,8 +915,8 @@ class ResourcesTest < ActionController::TestCase
         map.resource :account, :only => :show
       end
 
-      assert_singleton_resource_allowed_routes('accounts', {},                    :show, [:index, :new, :create, :edit, :update, :destroy])
-      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  :show, [:index, :new, :create, :edit, :update, :destroy])
+      assert_singleton_resource_allowed_routes('accounts', {},                    :show, [:index, :new, :create, :edit, :update, :delete, :destroy])
+      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  :show, [:index, :new, :create, :edit, :update, :delete, :destroy])
     end
   end
 
@@ -920,8 +926,8 @@ class ResourcesTest < ActionController::TestCase
         map.resources :products, :except => :destroy
       end
 
-      assert_resource_allowed_routes('products', {},                    { :id => '1' }, [:index, :new, :create, :show, :edit, :update], :destroy)
-      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, [:index, :new, :create, :show, :edit, :update], :destroy)
+      assert_resource_allowed_routes('products', {},                    { :id => '1' }, [:index, :new, :create, :show, :edit, :update, :delete], :destroy)
+      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, [:index, :new, :create, :show, :edit, :update, :delete], :destroy)
     end
   end
 
@@ -931,8 +937,8 @@ class ResourcesTest < ActionController::TestCase
         map.resource :account, :except => :destroy
       end
 
-      assert_singleton_resource_allowed_routes('accounts', {},                    [:new, :create, :show, :edit, :update], :destroy)
-      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  [:new, :create, :show, :edit, :update], :destroy)
+      assert_singleton_resource_allowed_routes('accounts', {},                    [:new, :create, :show, :edit, :update, :delete], :destroy)
+      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  [:new, :create, :show, :edit, :update, :delete], :destroy)
     end
   end
 
@@ -942,8 +948,8 @@ class ResourcesTest < ActionController::TestCase
         map.resources :products, :only => :create
       end
 
-      assert_resource_allowed_routes('products', {},                    { :id => '1' }, :create, [:index, :new, :show, :edit, :update, :destroy])
-      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, :create, [:index, :new, :show, :edit, :update, :destroy])
+      assert_resource_allowed_routes('products', {},                    { :id => '1' }, :create, [:index, :new, :show, :edit, :update, :delete, :destroy])
+      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, :create, [:index, :new, :show, :edit, :update, :delete, :destroy])
 
       assert_not_nil set.named_routes[:products]
     end
@@ -955,8 +961,8 @@ class ResourcesTest < ActionController::TestCase
         map.resources :products, :only => :update
       end
 
-      assert_resource_allowed_routes('products', {},                    { :id => '1' }, :update, [:index, :new, :create, :show, :edit, :destroy])
-      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, :update, [:index, :new, :create, :show, :edit, :destroy])
+      assert_resource_allowed_routes('products', {},                    { :id => '1' }, :update, [:index, :new, :create, :show, :edit, :delete, :destroy])
+      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, :update, [:index, :new, :create, :show, :edit, :delete, :destroy])
 
       assert_not_nil set.named_routes[:product]
     end
@@ -968,8 +974,8 @@ class ResourcesTest < ActionController::TestCase
         map.resources :products, :only => :destroy
       end
 
-      assert_resource_allowed_routes('products', {},                    { :id => '1' }, :destroy, [:index, :new, :create, :show, :edit, :update])
-      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, :destroy, [:index, :new, :create, :show, :edit, :update])
+      assert_resource_allowed_routes('products', {},                    { :id => '1' }, :destroy, [:index, :new, :create, :show, :edit, :update, :delete])
+      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, :destroy, [:index, :new, :create, :show, :edit, :update, :delete])
 
       assert_not_nil set.named_routes[:product]
     end
@@ -981,8 +987,8 @@ class ResourcesTest < ActionController::TestCase
         map.resource :account, :only => :create
       end
 
-      assert_singleton_resource_allowed_routes('accounts', {},                    :create, [:new, :show, :edit, :update, :destroy])
-      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  :create, [:new, :show, :edit, :update, :destroy])
+      assert_singleton_resource_allowed_routes('accounts', {},                    :create, [:new, :show, :edit, :update, :delete, :destroy])
+      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  :create, [:new, :show, :edit, :update, :delete, :destroy])
 
       assert_not_nil set.named_routes[:account]
     end
@@ -994,8 +1000,8 @@ class ResourcesTest < ActionController::TestCase
         map.resource :account, :only => :update
       end
 
-      assert_singleton_resource_allowed_routes('accounts', {},                    :update, [:new, :create, :show, :edit, :destroy])
-      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  :update, [:new, :create, :show, :edit, :destroy])
+      assert_singleton_resource_allowed_routes('accounts', {},                    :update, [:new, :create, :show, :edit, :delete, :destroy])
+      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  :update, [:new, :create, :show, :edit, :delete, :destroy])
 
       assert_not_nil set.named_routes[:account]
     end
@@ -1007,8 +1013,8 @@ class ResourcesTest < ActionController::TestCase
         map.resource :account, :only => :destroy
       end
 
-      assert_singleton_resource_allowed_routes('accounts', {},                    :destroy, [:new, :create, :show, :edit, :update])
-      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  :destroy, [:new, :create, :show, :edit, :update])
+      assert_singleton_resource_allowed_routes('accounts', {},                    :destroy, [:new, :create, :show, :edit, :delete, :update])
+      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  :destroy, [:new, :create, :show, :edit, :delete, :update])
 
       assert_not_nil set.named_routes[:account]
     end
@@ -1020,8 +1026,8 @@ class ResourcesTest < ActionController::TestCase
         map.resources :products, :except => :all, :collection => { :sale => :get }
       end
 
-      assert_resource_allowed_routes('products', {},                    { :id => '1' }, [], [:index, :new, :create, :show, :edit, :update, :destroy])
-      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, [], [:index, :new, :create, :show, :edit, :update, :destroy])
+      assert_resource_allowed_routes('products', {},                    { :id => '1' }, [], [:index, :new, :create, :show, :edit, :update, :delete, :destroy])
+      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, [], [:index, :new, :create, :show, :edit, :update, :delete, :destroy])
 
       assert_recognizes({ :controller => 'products', :action => 'sale' },                   :path => 'products/sale',     :method => :get)
       assert_recognizes({ :controller => 'products', :action => 'sale', :format => 'xml' }, :path => 'products/sale.xml', :method => :get)
@@ -1034,8 +1040,8 @@ class ResourcesTest < ActionController::TestCase
         map.resources :products, :except => :all, :member => { :preview => :get }
       end
 
-      assert_resource_allowed_routes('products', {},                    { :id => '1' }, [], [:index, :new, :create, :show, :edit, :update, :destroy])
-      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, [], [:index, :new, :create, :show, :edit, :update, :destroy])
+      assert_resource_allowed_routes('products', {},                    { :id => '1' }, [], [:index, :new, :create, :show, :edit, :update, :delete, :destroy])
+      assert_resource_allowed_routes('products', { :format => 'xml' },  { :id => '1' }, [], [:index, :new, :create, :show, :edit, :update, :delete, :destroy])
 
       assert_recognizes({ :controller => 'products', :action => 'preview', :id => '1' },                    :path => 'products/1/preview',      :method => :get)
       assert_recognizes({ :controller => 'products', :action => 'preview', :id => '1', :format => 'xml' },  :path => 'products/1/preview.xml',  :method => :get)
@@ -1048,8 +1054,8 @@ class ResourcesTest < ActionController::TestCase
         map.resource :account, :except => :all, :member => { :signup => :get }
       end
 
-      assert_singleton_resource_allowed_routes('accounts', {},                    [], [:new, :create, :show, :edit, :update, :destroy])
-      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  [], [:new, :create, :show, :edit, :update, :destroy])
+      assert_singleton_resource_allowed_routes('accounts', {},                    [], [:new, :create, :show, :edit, :update, :delete, :destroy])
+      assert_singleton_resource_allowed_routes('accounts', { :format => 'xml' },  [], [:new, :create, :show, :edit, :update, :delete, :destroy])
 
       assert_recognizes({ :controller => 'accounts', :action => 'signup' },                   :path => 'account/signup',      :method => :get)
       assert_recognizes({ :controller => 'accounts', :action => 'signup', :format => 'xml' }, :path => 'account/signup.xml',  :method => :get)
@@ -1064,8 +1070,8 @@ class ResourcesTest < ActionController::TestCase
         end
       end
 
-      assert_resource_allowed_routes('images', { :product_id => '1' },                    { :id => '2' }, :show, [:index, :new, :create, :edit, :update, :destroy], 'products/1/images')
-      assert_resource_allowed_routes('images', { :product_id => '1', :format => 'xml' },  { :id => '2' }, :show, [:index, :new, :create, :edit, :update, :destroy], 'products/1/images')
+      assert_resource_allowed_routes('images', { :product_id => '1' },                    { :id => '2' }, :show, [:index, :new, :create, :edit, :update, :delete, :destroy], 'products/1/images')
+      assert_resource_allowed_routes('images', { :product_id => '1', :format => 'xml' },  { :id => '2' }, :show, [:index, :new, :create, :edit, :update, :delete, :destroy], 'products/1/images')
 
       assert_recognizes({ :controller => 'images', :action => 'thumbnail', :product_id => '1', :id => '2' },                    :path => 'products/1/images/2/thumbnail', :method => :get)
       assert_recognizes({ :controller => 'images', :action => 'thumbnail', :product_id => '1', :id => '2', :format => 'jpg' },  :path => 'products/1/images/2/thumbnail.jpg', :method => :get)
@@ -1080,8 +1086,8 @@ class ResourcesTest < ActionController::TestCase
         end
       end
 
-      assert_resource_allowed_routes('images', { :product_id => '1' },                    { :id => '2' }, [:index, :new, :create, :show, :edit, :update], :destroy, 'products/1/images')
-      assert_resource_allowed_routes('images', { :product_id => '1', :format => 'xml' },  { :id => '2' }, [:index, :new, :create, :show, :edit, :update], :destroy, 'products/1/images')
+      assert_resource_allowed_routes('images', { :product_id => '1' },                    { :id => '2' }, [:index, :new, :create, :show, :edit, :delete, :update], :destroy, 'products/1/images')
+      assert_resource_allowed_routes('images', { :product_id => '1', :format => 'xml' },  { :id => '2' }, [:index, :new, :create, :show, :edit, :delete, :update], :destroy, 'products/1/images')
     end
   end
 
@@ -1093,8 +1099,8 @@ class ResourcesTest < ActionController::TestCase
         end
       end
 
-      assert_resource_allowed_routes('images', { :product_id => '1' },                    { :id => '2' }, [:index, :new, :create, :show, :edit, :update, :destory], [], 'products/1/images')
-      assert_resource_allowed_routes('images', { :product_id => '1', :format => 'xml' },  { :id => '2' }, [:index, :new, :create, :show, :edit, :update, :destroy], [], 'products/1/images')
+      assert_resource_allowed_routes('images', { :product_id => '1' },                    { :id => '2' }, [:index, :new, :create, :show, :edit, :update, :delete, :destory], [], 'products/1/images')
+      assert_resource_allowed_routes('images', { :product_id => '1', :format => 'xml' },  { :id => '2' }, [:index, :new, :create, :show, :edit, :update, :delete, :destroy], [], 'products/1/images')
     end
   end
 
@@ -1106,8 +1112,8 @@ class ResourcesTest < ActionController::TestCase
         end
       end
 
-      assert_resource_allowed_routes('images', { :product_id => '1' },                    { :id => '2' }, :destroy, [:index, :new, :create, :show, :edit, :update], 'products/1/images')
-      assert_resource_allowed_routes('images', { :product_id => '1', :format => 'xml' },  { :id => '2' }, :destroy, [:index, :new, :create, :show, :edit, :update], 'products/1/images')
+      assert_resource_allowed_routes('images', { :product_id => '1' },                    { :id => '2' }, :destroy, [:index, :new, :create, :show, :edit, :update, :delete], 'products/1/images')
+      assert_resource_allowed_routes('images', { :product_id => '1', :format => 'xml' },  { :id => '2' }, :destroy, [:index, :new, :create, :show, :edit, :update, :delete], 'products/1/images')
     end
   end
 
@@ -1119,8 +1125,8 @@ class ResourcesTest < ActionController::TestCase
         end
       end
 
-      assert_resource_allowed_routes('images', { :product_id => '1' },                    { :id => '2' }, [:index, :new, :create, :show, :edit, :update, :destroy], [], 'products/1/images')
-      assert_resource_allowed_routes('images', { :product_id => '1', :format => 'xml' },  { :id => '2' }, [:index, :new, :create, :show, :edit, :update, :destroy], [], 'products/1/images')
+      assert_resource_allowed_routes('images', { :product_id => '1' },                    { :id => '2' }, [:index, :new, :create, :show, :edit, :update, :delete, :destroy], [], 'products/1/images')
+      assert_resource_allowed_routes('images', { :product_id => '1', :format => 'xml' },  { :id => '2' }, [:index, :new, :create, :show, :edit, :update, :delete, :destroy], [], 'products/1/images')
     end
   end
 
@@ -1173,9 +1179,11 @@ class ResourcesTest < ActionController::TestCase
 
       new_action    = ActionController::Base.resources_path_names[:new] || "new"
       edit_action   = ActionController::Base.resources_path_names[:edit] || "edit"
+      delete_action   = ActionController::Base.resources_path_names[:delete] || "delete"
       if options[:path_names]
-        new_action  = options[:path_names][:new] if options[:path_names][:new]
-        edit_action = options[:path_names][:edit] if options[:path_names][:edit]
+        new_action    = options[:path_names][:new] if options[:path_names][:new]
+        edit_action   = options[:path_names][:edit] if options[:path_names][:edit]
+        delete_action = options[:path_names][:delete] if options[:path_names][:delete]
       end
 
       path                       = "#{options[:as] || controller_name}"
@@ -1184,6 +1192,7 @@ class ResourcesTest < ActionController::TestCase
       member_path                = "#{shallow_path}/1"
       new_path                   = "#{collection_path}/#{new_action}"
       edit_member_path           = "#{member_path}/#{edit_action}"
+      delete_member_path         = "#{member_path}/#{delete_action}"
       formatted_edit_member_path = "#{member_path}/#{edit_action}.xml"
 
       with_options(options[:options]) do |controller|
@@ -1196,6 +1205,7 @@ class ResourcesTest < ActionController::TestCase
       with_options(options[:shallow_options]) do |controller|
         controller.assert_routing member_path,                :action => 'show', :id => '1'
         controller.assert_routing edit_member_path,           :action => 'edit', :id => '1'
+        controller.assert_routing delete_member_path,         :action => 'delete', :id => '1'
         controller.assert_routing "#{member_path}.xml",       :action => 'show', :id => '1', :format => 'xml'
         controller.assert_routing formatted_edit_member_path, :action => 'edit', :id => '1', :format => 'xml'
       end
@@ -1203,18 +1213,19 @@ class ResourcesTest < ActionController::TestCase
       assert_recognizes(options[:options].merge(:action => 'index'),               :path => collection_path,  :method => :get)
       assert_recognizes(options[:options].merge(:action => 'new'),                 :path => new_path,         :method => :get)
       assert_recognizes(options[:options].merge(:action => 'create'),              :path => collection_path,  :method => :post)
-      assert_recognizes(options[:shallow_options].merge(:action => 'show',    :id => '1'), :path => member_path,      :method => :get)
-      assert_recognizes(options[:shallow_options].merge(:action => 'edit',    :id => '1'), :path => edit_member_path, :method => :get)
-      assert_recognizes(options[:shallow_options].merge(:action => 'update',  :id => '1'), :path => member_path,      :method => :put)
-      assert_recognizes(options[:shallow_options].merge(:action => 'destroy', :id => '1'), :path => member_path,      :method => :delete)
+      assert_recognizes(options[:shallow_options].merge(:action => 'show',    :id => '1'), :path => member_path,        :method => :get)
+      assert_recognizes(options[:shallow_options].merge(:action => 'edit',    :id => '1'), :path => edit_member_path,   :method => :get)
+      assert_recognizes(options[:shallow_options].merge(:action => 'update',  :id => '1'), :path => member_path,        :method => :put)
+      assert_recognizes(options[:shallow_options].merge(:action => 'delete',  :id => '1'), :path => delete_member_path, :method => :get)
+      assert_recognizes(options[:shallow_options].merge(:action => 'destroy', :id => '1'), :path => member_path,        :method => :delete)
 
       assert_recognizes(options[:options].merge(:action => 'index',  :format => 'xml'), :path => "#{collection_path}.xml",   :method => :get)
       assert_recognizes(options[:options].merge(:action => 'new',    :format => 'xml'), :path => "#{new_path}.xml",          :method => :get)
       assert_recognizes(options[:options].merge(:action => 'create', :format => 'xml'), :path => "#{collection_path}.xml",   :method => :post)
-      assert_recognizes(options[:shallow_options].merge(:action => 'show',    :id => '1', :format => 'xml'), :path => "#{member_path}.xml",       :method => :get)
-      assert_recognizes(options[:shallow_options].merge(:action => 'edit',    :id => '1', :format => 'xml'), :path => formatted_edit_member_path, :method => :get)
-      assert_recognizes(options[:shallow_options].merge(:action => 'update',  :id => '1', :format => 'xml'), :path => "#{member_path}.xml",       :method => :put)
-      assert_recognizes(options[:shallow_options].merge(:action => 'destroy', :id => '1', :format => 'xml'), :path => "#{member_path}.xml",       :method => :delete)
+      assert_recognizes(options[:shallow_options].merge(:action => 'show',    :id => '1', :format => 'xml'), :path => "#{member_path}.xml",         :method => :get)
+      assert_recognizes(options[:shallow_options].merge(:action => 'edit',    :id => '1', :format => 'xml'), :path => formatted_edit_member_path,   :method => :get)
+      assert_recognizes(options[:shallow_options].merge(:action => 'update',  :id => '1', :format => 'xml'), :path => "#{member_path}.xml",         :method => :put)
+      assert_recognizes(options[:shallow_options].merge(:action => 'destroy', :id => '1', :format => 'xml'), :path => "#{member_path}.xml",         :method => :delete)
 
       yield options[:options] if block_given?
     end
@@ -1249,11 +1260,13 @@ class ResourcesTest < ActionController::TestCase
       name_prefix = options[:name_prefix]
       shallow_prefix = options[:shallow] ? options[:namespace].try(:gsub, /\//, '_') : options[:name_prefix]
 
-      new_action  = "new"
-      edit_action = "edit"
+      new_action    = "new"
+      edit_action   = "edit"
+      delete_action = "delete"
       if options[:path_names]
-        new_action  = options[:path_names][:new]  || "new"
-        edit_action = options[:path_names][:edit] || "edit"
+        new_action    = options[:path_names][:new]    || "new"
+        edit_action   = options[:path_names][:edit]   || "edit"
+        delete_action = options[:path_names][:delete] || "delete"
       end
 
       assert_named_route "#{full_path}", "#{name_prefix}#{controller_name}_path", options[:options]
@@ -1265,6 +1278,7 @@ class ResourcesTest < ActionController::TestCase
       assert_named_route "#{full_path}/#{new_action}.xml", "new_#{name_prefix}#{singular_name}_path", options[:options].merge(:format => 'xml')
       assert_named_route "#{shallow_path}/1/#{edit_action}", "edit_#{shallow_prefix}#{singular_name}_path", options[:shallow_options].merge(:id => '1')
       assert_named_route "#{shallow_path}/1/#{edit_action}.xml", "edit_#{shallow_prefix}#{singular_name}_path", options[:shallow_options].merge(:id => '1', :format => 'xml')
+      assert_named_route "#{shallow_path}/1/#{delete_action}", "delete_#{shallow_prefix}#{singular_name}_path", options[:shallow_options].merge(:id => '1')
 
       yield options[:options] if block_given?
     end
@@ -1276,30 +1290,33 @@ class ResourcesTest < ActionController::TestCase
       full_path           = "/#{options[:path_prefix]}#{options[:as] || singleton_name}"
       new_path            = "#{full_path}/new"
       edit_path           = "#{full_path}/edit"
+      delete_path         = "#{full_path}/delete"
       formatted_edit_path = "#{full_path}/edit.xml"
 
       with_options options[:options] do |controller|
         controller.assert_routing full_path,           :action => 'show'
         controller.assert_routing new_path,            :action => 'new'
         controller.assert_routing edit_path,           :action => 'edit'
+        controller.assert_routing delete_path,         :action => 'delete'
         controller.assert_routing "#{full_path}.xml",  :action => 'show', :format => 'xml'
         controller.assert_routing "#{new_path}.xml",   :action => 'new',  :format => 'xml'
         controller.assert_routing formatted_edit_path, :action => 'edit', :format => 'xml'
       end
 
-      assert_recognizes(options[:options].merge(:action => 'show'),    :path => full_path, :method => :get)
-      assert_recognizes(options[:options].merge(:action => 'new'),     :path => new_path,  :method => :get)
-      assert_recognizes(options[:options].merge(:action => 'edit'),    :path => edit_path, :method => :get)
-      assert_recognizes(options[:options].merge(:action => 'create'),  :path => full_path, :method => :post)
-      assert_recognizes(options[:options].merge(:action => 'update'),  :path => full_path, :method => :put)
-      assert_recognizes(options[:options].merge(:action => 'destroy'), :path => full_path, :method => :delete)
+      assert_recognizes(options[:options].merge(:action => 'show'),    :path => full_path,   :method => :get)
+      assert_recognizes(options[:options].merge(:action => 'new'),     :path => new_path,    :method => :get)
+      assert_recognizes(options[:options].merge(:action => 'edit'),    :path => edit_path,   :method => :get)
+      assert_recognizes(options[:options].merge(:action => 'create'),  :path => full_path,   :method => :post)
+      assert_recognizes(options[:options].merge(:action => 'update'),  :path => full_path,   :method => :put)
+      assert_recognizes(options[:options].merge(:action => 'delete'),  :path => delete_path, :method => :get)
+      assert_recognizes(options[:options].merge(:action => 'destroy'), :path => full_path,   :method => :delete)
 
-      assert_recognizes(options[:options].merge(:action => 'show',    :format => 'xml'), :path => "#{full_path}.xml",  :method => :get)
-      assert_recognizes(options[:options].merge(:action => 'new',     :format => 'xml'), :path => "#{new_path}.xml",   :method => :get)
-      assert_recognizes(options[:options].merge(:action => 'edit',    :format => 'xml'), :path => formatted_edit_path, :method => :get)
-      assert_recognizes(options[:options].merge(:action => 'create',  :format => 'xml'), :path => "#{full_path}.xml",  :method => :post)
-      assert_recognizes(options[:options].merge(:action => 'update',  :format => 'xml'), :path => "#{full_path}.xml",  :method => :put)
-      assert_recognizes(options[:options].merge(:action => 'destroy', :format => 'xml'), :path => "#{full_path}.xml",  :method => :delete)
+      assert_recognizes(options[:options].merge(:action => 'show',    :format => 'xml'), :path => "#{full_path}.xml",   :method => :get)
+      assert_recognizes(options[:options].merge(:action => 'new',     :format => 'xml'), :path => "#{new_path}.xml",    :method => :get)
+      assert_recognizes(options[:options].merge(:action => 'edit',    :format => 'xml'), :path => formatted_edit_path,  :method => :get)
+      assert_recognizes(options[:options].merge(:action => 'create',  :format => 'xml'), :path => "#{full_path}.xml",   :method => :post)
+      assert_recognizes(options[:options].merge(:action => 'update',  :format => 'xml'), :path => "#{full_path}.xml",   :method => :put)
+      assert_recognizes(options[:options].merge(:action => 'destroy', :format => 'xml'), :path => "#{full_path}.xml",   :method => :delete)
 
       yield options[:options] if block_given?
     end
@@ -1318,10 +1335,11 @@ class ResourcesTest < ActionController::TestCase
       assert_named_route "#{full_path}",          "#{name_prefix}#{singleton_name}_path",                options[:options]
       assert_named_route "#{full_path}.xml",      "#{name_prefix}#{singleton_name}_path",      options[:options].merge(:format => 'xml')
 
-      assert_named_route "#{full_path}/new",      "new_#{name_prefix}#{singleton_name}_path",            options[:options]
-      assert_named_route "#{full_path}/new.xml",  "new_#{name_prefix}#{singleton_name}_path",  options[:options].merge(:format => 'xml')
-      assert_named_route "#{full_path}/edit",     "edit_#{name_prefix}#{singleton_name}_path",           options[:options]
-      assert_named_route "#{full_path}/edit.xml", "edit_#{name_prefix}#{singleton_name}_path", options[:options].merge(:format => 'xml')
+      assert_named_route "#{full_path}/new",        "new_#{name_prefix}#{singleton_name}_path",            options[:options]
+      assert_named_route "#{full_path}/new.xml",    "new_#{name_prefix}#{singleton_name}_path",  options[:options].merge(:format => 'xml')
+      assert_named_route "#{full_path}/edit",       "edit_#{name_prefix}#{singleton_name}_path",           options[:options]
+      assert_named_route "#{full_path}/edit.xml",   "edit_#{name_prefix}#{singleton_name}_path", options[:options].merge(:format => 'xml')
+      assert_named_route "#{full_path}/delete",     "delete_#{name_prefix}#{singleton_name}_path",           options[:options]
     end
 
     def assert_named_route(expected, route, options)
@@ -1343,25 +1361,27 @@ class ResourcesTest < ActionController::TestCase
       options.merge!(:controller => controller)
       shallow_options.merge!(options)
 
-      assert_whether_allowed(allowed, not_allowed, options,         'index',    "#{path}#{format}",               :get)
-      assert_whether_allowed(allowed, not_allowed, options,         'new',      "#{path}/new#{format}",           :get)
-      assert_whether_allowed(allowed, not_allowed, options,         'create',   "#{path}#{format}",               :post)
-      assert_whether_allowed(allowed, not_allowed, shallow_options, 'show',     "#{shallow_path}#{format}",       :get)
-      assert_whether_allowed(allowed, not_allowed, shallow_options, 'edit',     "#{shallow_path}/edit#{format}",  :get)
-      assert_whether_allowed(allowed, not_allowed, shallow_options, 'update',   "#{shallow_path}#{format}",       :put)
-      assert_whether_allowed(allowed, not_allowed, shallow_options, 'destroy',  "#{shallow_path}#{format}",       :delete)
+      assert_whether_allowed(allowed, not_allowed, options,         'index',    "#{path}#{format}",                :get)
+      assert_whether_allowed(allowed, not_allowed, options,         'new',      "#{path}/new#{format}",            :get)
+      assert_whether_allowed(allowed, not_allowed, options,         'create',   "#{path}#{format}",                :post)
+      assert_whether_allowed(allowed, not_allowed, shallow_options, 'show',     "#{shallow_path}#{format}",        :get)
+      assert_whether_allowed(allowed, not_allowed, shallow_options, 'edit',     "#{shallow_path}/edit#{format}",   :get)
+      assert_whether_allowed(allowed, not_allowed, shallow_options, 'update',   "#{shallow_path}#{format}",        :put)
+      assert_whether_allowed(allowed, not_allowed, shallow_options, 'delete',   "#{shallow_path}/delete#{format}", :get)
+      assert_whether_allowed(allowed, not_allowed, shallow_options, 'destroy',  "#{shallow_path}#{format}",        :delete)
     end
 
     def assert_singleton_resource_allowed_routes(controller, options, allowed, not_allowed, path = controller.singularize)
       format = options[:format] && ".#{options[:format]}"
       options.merge!(:controller => controller)
 
-      assert_whether_allowed(allowed, not_allowed, options, 'new',      "#{path}/new#{format}",   :get)
-      assert_whether_allowed(allowed, not_allowed, options, 'create',   "#{path}#{format}",       :post)
-      assert_whether_allowed(allowed, not_allowed, options, 'show',     "#{path}#{format}",       :get)
-      assert_whether_allowed(allowed, not_allowed, options, 'edit',     "#{path}/edit#{format}",  :get)
-      assert_whether_allowed(allowed, not_allowed, options, 'update',   "#{path}#{format}",       :put)
-      assert_whether_allowed(allowed, not_allowed, options, 'destroy',  "#{path}#{format}",       :delete)
+      assert_whether_allowed(allowed, not_allowed, options, 'new',      "#{path}/new#{format}",    :get)
+      assert_whether_allowed(allowed, not_allowed, options, 'create',   "#{path}#{format}",        :post)
+      assert_whether_allowed(allowed, not_allowed, options, 'show',     "#{path}#{format}",        :get)
+      assert_whether_allowed(allowed, not_allowed, options, 'edit',     "#{path}/edit#{format}",   :get)
+      assert_whether_allowed(allowed, not_allowed, options, 'update',   "#{path}#{format}",        :put)
+      assert_whether_allowed(allowed, not_allowed, options, 'delete',   "#{path}/delete#{format}", :get)
+      assert_whether_allowed(allowed, not_allowed, options, 'destroy',  "#{path}#{format}",        :delete)
     end
 
     def assert_whether_allowed(allowed, not_allowed, options, action, path, method)
diff --git a/railties/lib/generators/erb/scaffold/scaffold_generator.rb b/railties/lib/generators/erb/scaffold/scaffold_generator.rb
index 955f221..5acafc9 100644
--- a/railties/lib/generators/erb/scaffold/scaffold_generator.rb
+++ b/railties/lib/generators/erb/scaffold/scaffold_generator.rb
@@ -32,6 +32,10 @@ module Erb
         copy_view :new
       end
 
+      def copy_delete_file
+        copy_view :delete
+      end
+
       def copy_form_file
         return unless options[:form]
         copy_view :_form
diff --git a/railties/lib/generators/erb/scaffold/templates/delete.html.erb b/railties/lib/generators/erb/scaffold/templates/delete.html.erb
new file mode 100644
index 0000000..448e2be
--- /dev/null
+++ b/railties/lib/generators/erb/scaffold/templates/delete.html.erb
@@ -0,0 +1,11 @@
+<h1>Are you sure you want to delete this <%= singular_name %>?</h1>
+
+<%% form_for(@<%= singular_name %>, :html => { :method => :delete }) do |f| %>
+  <%%= f.error_messages %>
+  <p>
+    <%%= f.submit "Yes, I'm sure." %>
+  </p>
+<%% end %>
+
+<%%= link_to 'Show', @<%= singular_name %> %> |
+<%%= link_to 'Back', <%= plural_name %>_path %>
\ No newline at end of file
diff --git a/railties/lib/generators/erb/scaffold/templates/index.html.erb b/railties/lib/generators/erb/scaffold/templates/index.html.erb
index 5e6a4af..bf72038 100644
--- a/railties/lib/generators/erb/scaffold/templates/index.html.erb
+++ b/railties/lib/generators/erb/scaffold/templates/index.html.erb
@@ -17,7 +17,7 @@
 <% end -%>
     <td><%%= link_to 'Show', <%= singular_name %> %></td>
     <td><%%= link_to 'Edit', edit_<%= singular_name %>_path(<%= singular_name %>) %></td>
-    <td><%%= link_to 'Destroy', <%= singular_name %>, :confirm => 'Are you sure?', :method => :delete %></td>
+    <td><%%= link_to 'Destroy', <%= singular_name %>, :confirm => 'Are you sure?', :method => :delete, :href => delete_<%= singular_name %>_path(<%= singular_name %>) %></td>
   </tr>
 <%% end %>
 </table>
diff --git a/railties/lib/generators/rails/scaffold_controller/templates/controller.rb b/railties/lib/generators/rails/scaffold_controller/templates/controller.rb
index 3cc8bbf..c1b1bca 100644
--- a/railties/lib/generators/rails/scaffold_controller/templates/controller.rb
+++ b/railties/lib/generators/rails/scaffold_controller/templates/controller.rb
@@ -73,6 +73,11 @@ class <%= controller_class_name %>Controller < ApplicationController
     end
   end
 
+  # GET /<%= table_name %>/1/delete
+  def delete
+    @<%= file_name %> = <%= orm_class.find(class_name, "params[:id]") %>
+  end
+
   # DELETE /<%= table_name %>/1
   # DELETE /<%= table_name %>/1.xml
   def destroy
diff --git a/railties/test/generators/scaffold_controller_generator_test.rb b/railties/test/generators/scaffold_controller_generator_test.rb
index 834e43e..a9a761d 100644
--- a/railties/test/generators/scaffold_controller_generator_test.rb
+++ b/railties/test/generators/scaffold_controller_generator_test.rb
@@ -38,6 +38,10 @@ class ScaffoldControllerGeneratorTest < GeneratorsTestCase
         assert_match /@user\.errors/, m
       end
 
+      assert_instance_method content, :delete do |m|
+        assert_match /@user = User\.find\(params\[:id\]\)/, m
+      end
+
       assert_instance_method content, :destroy do |m|
         assert_match /@user = User\.find\(params\[:id\]\)/, m
         assert_match /@user\.destroy/, m
@@ -59,6 +63,7 @@ class ScaffoldControllerGeneratorTest < GeneratorsTestCase
       edit
       new
       show
+      delete
     ).each { |view| assert_file "app/views/users/#{view}.html.erb" }
     assert_file "app/views/layouts/users.html.erb"
   end
diff --git a/railties/test/generators/scaffold_generator_test.rb b/railties/test/generators/scaffold_generator_test.rb
index 05eadd3..1c35a53 100644
--- a/railties/test/generators/scaffold_generator_test.rb
+++ b/railties/test/generators/scaffold_generator_test.rb
@@ -60,6 +60,10 @@ class ScaffoldGeneratorTest < GeneratorsTestCase
         assert_match /@product_line\.errors/, m
       end
 
+      assert_instance_method content, :delete do |m|
+        assert_match /@product_line = ProductLine\.find\(params\[:id\]\)/, m
+      end
+
       assert_instance_method content, :destroy do |m|
         assert_match /@product_line = ProductLine\.find\(params\[:id\]\)/, m
         assert_match /@product_line\.destroy/, m
@@ -75,6 +79,7 @@ class ScaffoldGeneratorTest < GeneratorsTestCase
       edit
       new
       show
+      delete
     ).each { |view| assert_file "app/views/product_lines/#{view}.html.erb" }
     assert_file "app/views/layouts/product_lines.html.erb"
 
-- 
1.6.3.3

