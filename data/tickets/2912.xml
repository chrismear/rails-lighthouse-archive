<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-07-15T22:43:16+01:00</created-at>
  <creator-id type="integer">20564</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2912</number>
  <permalink>has_one-through-fails-when-setter-is-overwritten-using-alias_method</permalink>
  <priority type="integer">1996</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.2.2 3.0.0.beta activerecord alias_method associations bugmash has_one_through patch update_attributes</tag>
  <title>has_one through doesn't work when going through a collection association</title>
  <updated-at type="datetime">2010-12-23T23:53:35+00:00</updated-at>
  <user-id type="integer">11330</user-id>
  <version type="integer">9</version>
  <user-name>Jon Leighton</user-name>
  <creator-name>Thomas Watson</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2912</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When using `alias_method` to override a setter method for a has_one :through association, an `undefined method` error occurs when the alias method is called:

@@@
undefined method `update_attributes' for #&lt;Class:0x3e4f298&gt;
@@@

This bug was introduced between Rails v2.2.1 and v2.2.2 in commit [a5609cd3cf3921cbd17b6314498318da7d522395](http://github.com/rails/rails/commit/a5609cd3cf3921cbd17b6314498318da7d522395 &quot;fix assignment to has_one :through associations.&quot;) in the file [has_one_through_association.rb](http://github.com/rails/rails/blob/a5609cd3cf3921cbd17b6314498318da7d522395/activerecord/lib/active_record/associations/has_one_through_association.rb &quot;Commit a5609cd3cf3921cbd17b6314498318da7d522395&quot;).

This code sets the stage:

@@@
class Foo &lt; ActiveRecord::Base
  has_many :foobars
  has_one :bar, :through =&gt; :foobars

  alias_method :orig_bar=, :bar=
  def bar=(value)
    self.orig_bar = value
  end
end

class Foobar &lt; ActiveRecord::Base
  belongs_to :foo
  belongs_to :bar
end

class Bar &lt; ActiveRecord::Base
end
@@@

Now just run this in your console to replicate the problem:

@@@
Foo.new.bar = Bar.new
@@@</original-body>
  <latest-body>When using `alias_method` to override a setter method for a has_one :through association, an `undefined method` error occurs when the alias method is called:

@@@
undefined method `update_attributes' for #&lt;Class:0x3e4f298&gt;
@@@

This bug was introduced between Rails v2.2.1 and v2.2.2 in commit [a5609cd3cf3921cbd17b6314498318da7d522395](http://github.com/rails/rails/commit/a5609cd3cf3921cbd17b6314498318da7d522395 &quot;fix assignment to has_one :through associations.&quot;) in the file [has_one_through_association.rb](http://github.com/rails/rails/blob/a5609cd3cf3921cbd17b6314498318da7d522395/activerecord/lib/active_record/associations/has_one_through_association.rb &quot;Commit a5609cd3cf3921cbd17b6314498318da7d522395&quot;).

This code sets the stage:

@@@
class Foo &lt; ActiveRecord::Base
  has_many :foobars
  has_one :bar, :through =&gt; :foobars

  alias_method :orig_bar=, :bar=
  def bar=(value)
    self.orig_bar = value
  end
end

class Foobar &lt; ActiveRecord::Base
  belongs_to :foo
  belongs_to :bar
end

class Bar &lt; ActiveRecord::Base
end
@@@

Now just run this in your console to replicate the problem:

@@@
Foo.new.bar = Bar.new
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When using &lt;code&gt;alias_method&lt;/code&gt; to override a setter method
for a has_one :through association, an &lt;code&gt;undefined
method&lt;/code&gt; error occurs when the alias method is called:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
undefined method `update_attributes' for #&amp;lt;Class:0x3e4f298&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This bug was introduced between Rails v2.2.1 and v2.2.2 in
commit &lt;a href=&quot;/projects/8994/changesets/a5609cd3cf3921cbd17b6314498318da7d522395&quot; title=&quot;Changeset 'a5609cd3cf3921cbd17b6314498318da7d522395'&quot;&gt;[a5609cd3cf3921cbd17b6314498318da7d522395]&lt;/a&gt;(&lt;a href=&quot;http://github.com/rails/rails/commit/a5609cd3cf3921cbd17b6314498318da7d522395&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&quot;fix assignment to has_one :through associations.&quot;) in the file
&lt;a href=&quot;http://github.com/rails/rails/blob/a5609cd3cf3921cbd17b6314498318da7d522395/activerecord/lib/active_record/associations/has_one_through_association.rb&quot; title=&quot;Commit a5609cd3cf3921cbd17b6314498318da7d522395&quot;&gt;has_one_through_association.rb&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This code sets the stage:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class Foo &amp;lt; ActiveRecord::Base
  has_many :foobars
  has_one :bar, :through =&amp;gt; :foobars

  alias_method :orig_bar=, :bar=
  def bar=(value)
    self.orig_bar = value
  end
end

class Foobar &amp;lt; ActiveRecord::Base
  belongs_to :foo
  belongs_to :bar
end

class Bar &amp;lt; ActiveRecord::Base
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now just run this in your console to replicate the problem:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
Foo.new.bar = Bar.new
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When using `alias_method` to override a setter method for a has_one :through association, an `undefined method` error occurs when the alias method is called:
@@@
undefined method `update_attributes' for #&lt;Class:0x3e4f298&gt;
@@@

This bug was introduced between Rails v2.2.1 and v2.2.2 in commit [a5609cd3cf3921cbd17b6314498318da7d522395] in the file [has_one_through_association.rb](http://github.com/rails/rails/blob/a5609cd3cf3921cbd17b6314498318da7d522395/activerecord/lib/active_record/associations/has_one_through_association.rb &quot;Commit a5609cd3cf3921cbd17b6314498318da7d522395&quot;).

This code sets the stage:
@@@ ruby
class Foo &lt; ActiveRecord::Base
  has_many :foobars
  has_one :bar, :through =&gt; :foobars

  alias_method :orig_bar=, :bar=
  def bar=(value)
    self.orig_bar = value
  end
end

class Foobar &lt; ActiveRecord::Base
  belongs_to :foo
  belongs_to :bar
end

class Bar &lt; ActiveRecord::Base
end
@@@

Now just run this in your console to replicate the problem:
@@@ ruby
Foo.new.bar = Bar.new
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;When using &lt;code&gt;alias_method&lt;/code&gt; to override a setter method
for a has_one :through association, an &lt;code&gt;undefined
method&lt;/code&gt; error occurs when the alias method is called:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method &lt;/code&gt;update_attributes' for #&amp;amp;lt;Class:0x3e4f298&amp;amp;gt;&amp;lt;/code&amp;gt;
&amp;lt;/pre&amp;gt;

&lt;br&gt;
This bug was introduced between Rails v2.2.1 and v2.2.2 in commit [a5609cd3cf3921cbd17b6314498318da7d522395] in the file &lt;a href=&quot;http://github.com/rails/rails/blob/a5609cd3cf3921cbd17b6314498318da7d522395/activerecord/lib/active_record/associations/has_one_through_association.rb&quot;
title=
&quot;Commit a5609cd3cf3921cbd17b6314498318da7d522395&quot;&gt;has_one_through_association.rb&lt;/a&gt;.

&lt;br&gt;
This code sets the stage:&lt;br&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Foo &amp;lt; ActiveRecord::Base
  has_many :foobars
  has_one :bar, :through =&amp;gt; :foobars&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
  alias_method :orig_bar=, :bar=
  def bar=(value)&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
Now just run this in your console to replicate the problem:&lt;br&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;Foo.new.bar = Bar.new&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;

&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&lt;code&gt;self.orig_bar = value&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
  end
end

&lt;br&gt;
class Foobar &amp;lt; ActiveRecord::Base
  belongs_to :foo
  belongs_to :bar
end

&lt;br&gt;
class Bar &amp;lt; ActiveRecord::Base
end
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-15T22:43:16+01:00</created-at>
      <creator-id type="integer">20564</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2912</number>
      <permalink>has_one-through-fails-when-setter-is-overwritten-using-alias_method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 activerecord alias_method associations has_one_through update_attributes</tag>
      <title>has_one through fails when setter is overridden using alias_method</title>
      <updated-at type="datetime">2009-07-15T23:04:41+01:00</updated-at>
      <user-id type="integer">20564</user-id>
      <version type="integer">1</version>
      <user-name>Thomas Watson</user-name>
      <creator-name>Thomas Watson</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2912</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:54+01:00</created-at>
      <creator-id type="integer">20564</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2912</number>
      <permalink>has_one-through-fails-when-setter-is-overwritten-using-alias_method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 activerecord alias_method associations has_one_through update_attributes</tag>
      <title>has_one through fails when setter is overridden using alias_method</title>
      <updated-at type="datetime">2010-05-04T18:48:54+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Thomas Watson</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2912</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>can a bugmasher review this against master?</body>
      <body-html>&lt;div&gt;&lt;p&gt;can a bugmasher review this against master?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-09T19:20:51+01:00</created-at>
      <creator-id type="integer">20564</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2.2 activerecord alias_method associations has_one_through update_attributes
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2912</number>
      <permalink>has_one-through-fails-when-setter-is-overwritten-using-alias_method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 activerecord alias_method associations bugmash has_one_through update_attributes</tag>
      <title>has_one through fails when setter is overridden using alias_method</title>
      <updated-at type="datetime">2010-05-09T19:20:53+01:00</updated-at>
      <user-id type="integer">22242</user-id>
      <version type="integer">3</version>
      <user-name>Dan Pickett</user-name>
      <creator-name>Thomas Watson</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2912</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It appears that this happens even if we don't use alias_method...

I have posted some code on github to try and help identify the issue. Check the readme for a quick overview.

http://github.com/ldenman/rails-bm-ticket-2912</body>
      <body-html>&lt;div&gt;&lt;p&gt;It appears that this happens even if we don't use
alias_method...&lt;/p&gt;
&lt;p&gt;I have posted some code on github to try and help identify the
issue. Check the readme for a quick overview.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/ldenman/rails-bm-ticket-2912&quot;&gt;http://github.com/ldenman/rails-bm-ticket-2912&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-14T22:49:21+01:00</created-at>
      <creator-id type="integer">20564</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2.2 activerecord alias_method associations bugmash has_one_through update_attributes
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2912</number>
      <permalink>has_one-through-fails-when-setter-is-overwritten-using-alias_method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 3.0.0.beta activerecord alias_method associations bugmash has_one_through update_attributes</tag>
      <title>has_one through fails when setter is overridden using alias_method</title>
      <updated-at type="datetime">2010-05-14T22:49:24+01:00</updated-at>
      <user-id type="integer">44801</user-id>
      <version type="integer">4</version>
      <user-name>Lake</user-name>
      <creator-name>Thomas Watson</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2912</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Verified with Thomas' code snippet against master and Lake's github repo (also, master).

And here's a cleaned up version of Thomas' code:

@@@
class Foo &lt; ActiveRecord::Base
  has_many :foobars
  has_one :bar, :through =&gt; :foobars

  alias_method :orig_bar=, :bar=
  
  def bar=(value)
    self.orig_bar = value
  end
end

class Foobar &lt; ActiveRecord::Base
  belongs_to :foo
  belongs_to :bar
end

class Bar &lt; ActiveRecord::Base
end
@@@

And run this in the console:

@@@
Foo.new.bar = Bar.new
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Verified with Thomas' code snippet against master and Lake's
github repo (also, master).&lt;/p&gt;
&lt;p&gt;And here's a cleaned up version of Thomas' code:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Foo &amp;lt; ActiveRecord::Base
  has_many :foobars
  has_one :bar, :through =&amp;gt; :foobars

  alias_method :orig_bar=, :bar=
  
  def bar=(value)
    self.orig_bar = value
  end
end

class Foobar &amp;lt; ActiveRecord::Base
  belongs_to :foo
  belongs_to :bar
end

class Bar &amp;lt; ActiveRecord::Base
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And run this in the console:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Foo.new.bar = Bar.new&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-15T16:56:07+01:00</created-at>
      <creator-id type="integer">20564</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2.2 3.0.0.beta activerecord alias_method associations bugmash has_one_through update_attributes
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2912</number>
      <permalink>has_one-through-fails-when-setter-is-overwritten-using-alias_method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 3.0.0.beta activerecord alias_method associations bugmash has_one_through update_attributes verified</tag>
      <title>has_one through fails when setter is overridden using alias_method</title>
      <updated-at type="datetime">2010-05-15T16:56:09+01:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">5</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Thomas Watson</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2912</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is not actually a problem with aliases at all.

The problem is with putting a `has_one` association `:through` a collection (i.e. `has_many`). `HasOneThroughAssociation#create_through_record` looks up the through association, and expects it to be a single record. On this assumption it uses `update_attributes`, which obviously isn't defined on a collection. Hence the problem.

My preferred solution is to make it invalid to put a `has_one` through a collection. If the user really wants to go through an association that could have many different records, they can explicitly add a `has_one` in place of the `has_many`, and use a combination of `:order`, `:conditions` etc to be specific about which record they want.

I've attached a tested patch which prohibits `has_one` associations going through collections.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is not actually a problem with aliases at all.&lt;/p&gt;
&lt;p&gt;The problem is with putting a &lt;code&gt;has_one&lt;/code&gt; association
&lt;code&gt;:through&lt;/code&gt; a collection (i.e. &lt;code&gt;has_many&lt;/code&gt;).
&lt;code&gt;HasOneThroughAssociation#create_through_record&lt;/code&gt; looks
up the through association, and expects it to be a single record.
On this assumption it uses &lt;code&gt;update_attributes&lt;/code&gt;, which
obviously isn't defined on a collection. Hence the problem.&lt;/p&gt;
&lt;p&gt;My preferred solution is to make it invalid to put a
&lt;code&gt;has_one&lt;/code&gt; through a collection. If the user really wants
to go through an association that could have many different
records, they can explicitly add a &lt;code&gt;has_one&lt;/code&gt; in place of
the &lt;code&gt;has_many&lt;/code&gt;, and use a combination of
&lt;code&gt;:order&lt;/code&gt;, &lt;code&gt;:conditions&lt;/code&gt; etc to be specific
about which record they want.&lt;/p&gt;
&lt;p&gt;I've attached a tested patch which prohibits
&lt;code&gt;has_one&lt;/code&gt; associations going through collections.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-19T14:19:28+00:00</created-at>
      <creator-id type="integer">20564</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2.2 3.0.0.beta activerecord alias_method associations bugmash has_one_through update_attributes verified
:title: has_one through fails when setter is overridden using alias_method
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2912</number>
      <permalink>has_one-through-fails-when-setter-is-overwritten-using-alias_method</permalink>
      <priority type="integer">1996</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 3.0.0.beta activerecord alias_method associations bugmash has_one_through patch update_attributes</tag>
      <title>has_one through doesn't work when going through a collection association</title>
      <updated-at type="datetime">2010-12-19T14:19:37+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">7</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Thomas Watson</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2912</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 @ Jon</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 @ Jon&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-19T14:39:51+00:00</created-at>
      <creator-id type="integer">20564</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2912</number>
      <permalink>has_one-through-fails-when-setter-is-overwritten-using-alias_method</permalink>
      <priority type="integer">1996</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 3.0.0.beta activerecord alias_method associations bugmash has_one_through patch update_attributes</tag>
      <title>has_one through doesn't work when going through a collection association</title>
      <updated-at type="datetime">2010-12-19T14:40:03+00:00</updated-at>
      <user-id type="integer">58475</user-id>
      <version type="integer">8</version>
      <user-name>blatyo</user-name>
      <creator-name>Thomas Watson</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2912</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-23T23:53:21+00:00</created-at>
      <creator-id type="integer">20564</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2912</number>
      <permalink>has_one-through-fails-when-setter-is-overwritten-using-alias_method</permalink>
      <priority type="integer">1996</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2.2 3.0.0.beta activerecord alias_method associations bugmash has_one_through patch update_attributes</tag>
      <title>has_one through doesn't work when going through a collection association</title>
      <updated-at type="datetime">2010-12-23T23:53:35+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">9</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Thomas Watson</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2912</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>90be4791264007cf9929ae43dfa10cef50bdb513</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-12-19T14:19:28+00:00</created-at>
      <filename>2976_dont_allow_has_one_through_collection.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">826320</id>
      <size type="integer">5455</size>
      <uploader-id type="integer">11330</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/826320/2976_dont_allow_has_one_through_collection.diff</url>
    </attachment>
  </attachments>
</ticket>
