<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">8</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-05-26T05:07:15+01:00</created-at>
  <creator-id type="integer">28640</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">2719</number>
  <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
  <priority type="integer">1693</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord association associations hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
  <title>has_many :through should work if the join model uses has_one relationship</title>
  <updated-at type="datetime">2009-08-10T02:15:24+01:00</updated-at>
  <user-id type="integer">7211</user-id>
  <version type="integer">20</version>
  <user-name>CancelProfileIsBroken</user-name>
  <creator-name>sbwoodside</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
  <priority-name nil="true"></priority-name>
  <original-body>Let's say you have User has_many Posts, and each Post has_one Photo. If you try to set a has_many :photos, :through :posts and then access user.photos you will get something like this:

@@@ActiveRecord::HasManyThroughSourceAssociationMacroError: Invalid source reflection macro :has_one for has_many :photos, :through =&gt; :posts.  Use :source to specify the source reflection.
@@@

Besides the fact that the error message isn't too helpful, it appears that this isn't actually support in Rails 2.3.2 or previously. It would be awfully nice to be able to, for example, list all of the Photos for a certain User, etc.

There is an [old bug in Rails Trac](http://dev.rubyonrails.org/ticket/4996) for this, which can no longer be modified.

It's not an uncommon problem: http://railsforum.com/viewtopic.php?pid=86321#p86321 and  http://railsforum.com/viewtopic.php?id=2295 and http://railsforum.com/viewtopic.php?id=265#p4120 and http://railsforum.com/viewtopic.php?pid=6388#p6388

Is there a suggested workaround? (Aside from hacking SQL...)</original-body>
  <latest-body>Let's say you have User has_many Posts, and each Post has_one Photo. If you try to set a has_many :photos, :through :posts and then access user.photos you will get something like this:

@@@ActiveRecord::HasManyThroughSourceAssociationMacroError: Invalid source reflection macro :has_one for has_many :photos, :through =&gt; :posts.  Use :source to specify the source reflection.
@@@

Besides the fact that the error message isn't too helpful, it appears that this isn't actually support in Rails 2.3.2 or previously. It would be awfully nice to be able to, for example, list all of the Photos for a certain User, etc.

There is an [old bug in Rails Trac](http://dev.rubyonrails.org/ticket/4996) for this, which can no longer be modified.

It's not an uncommon problem: http://railsforum.com/viewtopic.php?pid=86321#p86321 and  http://railsforum.com/viewtopic.php?id=2295 and http://railsforum.com/viewtopic.php?id=265#p4120 and http://railsforum.com/viewtopic.php?pid=6388#p6388

Is there a suggested workaround? (Aside from hacking SQL...)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Let's say you have User has_many Posts, and each Post has_one
Photo. If you try to set a has_many :photos, :through :posts and
then access user.photos you will get something like this:&lt;/p&gt;
&lt;p&gt;@@@ActiveRecord::HasManyThroughSourceAssociationMacroError:
Invalid source reflection macro :has_one for has_many :photos,
:through =&amp;gt; :posts. Use :source to specify the source
reflection.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;

Besides the fact that the error message isn't too helpful, it appears that this isn't actually support in Rails 2.3.2 or previously. It would be awfully nice to be able to, for example, list all of the Photos for a certain User, etc.

There is an [old bug in Rails Trac](http://dev.rubyonrails.org/ticket/4996) for this, which can no longer be modified.

It's not an uncommon problem: http://railsforum.com/viewtopic.php?pid=86321#p86321 and  http://railsforum.com/viewtopic.php?id=2295 and http://railsforum.com/viewtopic.php?id=265#p4120 and http://railsforum.com/viewtopic.php?pid=6388#p6388

Is there a suggested workaround? (Aside from hacking SQL...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Let's say you have User has_many Posts, and each Post has_one Photo. If you try to set a has_many :photos, :through :posts and then access user.photos you will get something like this:

@@@
ActiveRecord::HasManyThroughSourceAssociationMacroError: Invalid source reflection macro :has_one for has_many :photos, :through =&gt; :posts.  Use :source to specify the source reflection.
@@@

Besides the fact that the error message isn't too helpful, it appears that this isn't supported in Rails 2.3.2 or previously. It would be awfully nice to be able to, for example, list all of the Photos for a certain User, etc.

There is an [old bug in Rails Trac](http://dev.rubyonrails.org/ticket/4996) for this, which can no longer be modified.

It's not an uncommon problem: http://railsforum.com/viewtopic.php?pid=86321#p86321 and  http://railsforum.com/viewtopic.php?id=2295 and http://railsforum.com/viewtopic.php?id=265#p4120 and http://railsforum.com/viewtopic.php?pid=6388#p6388

Is there a suggested workaround? (Aside from hacking SQL...)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Let's say you have User has_many Posts, and each Post has_one
Photo. If you try to set a has_many :photos, :through :posts and
then access user.photos you will get something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::HasManyThroughSourceAssociationMacroError: Invalid source reflection macro :has_one for has_many :photos, :through =&amp;gt; :posts.  Use :source to specify the source reflection.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Besides the fact that the error message isn't too helpful, it
appears that this isn't supported in Rails 2.3.2 or previously. It
would be awfully nice to be able to, for example, list all of the
Photos for a certain User, etc.&lt;/p&gt;
&lt;p&gt;There is an &lt;a href=&quot;http://dev.rubyonrails.org/ticket/4996&quot;&gt;old
bug in Rails Trac&lt;/a&gt; for this, which can no longer be
modified.&lt;/p&gt;
&lt;p&gt;It's not an uncommon problem: &lt;a href=
&quot;http://railsforum.com/viewtopic.php?pid=86321#p86321&quot;&gt;http://railsforum.com/viewtopic.php?pid=86321#p86321&lt;/a&gt;
and &lt;a href=
&quot;http://railsforum.com/viewtopic.php?id=2295&quot;&gt;http://railsforum.com/viewtopic.php?id=2295&lt;/a&gt;
and &lt;a href=
&quot;http://railsforum.com/viewtopic.php?id=265#p4120&quot;&gt;http://railsforum.com/viewtopic.php?id=265#p4120&lt;/a&gt;
and &lt;a href=
&quot;http://railsforum.com/viewtopic.php?pid=6388#p6388&quot;&gt;http://railsforum.com/viewtopic.php?pid=6388#p6388&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Is there a suggested workaround? (Aside from hacking SQL...)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-26T05:07:15+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord association associations hasmanythroughsourceassociationmacroerror has_many has_one through</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-05-26T05:08:41+01:00</updated-at>
      <user-id type="integer">28640</user-id>
      <version type="integer">1</version>
      <user-name>sbwoodside</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This looks like a duplicate of #1149. Bottom line: hasn't ever worked, documented as not working on http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html. If you'd like to submit a patch and failing test case, I'm sure core team would consider. 

Potential workaround: change to Post has_many :photos, though obviously that changes the semantics and you'd have to enforce uniqueness in other code.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This looks like a duplicate of &lt;a href=
&quot;/projects/8994/tickets/1149&quot; title=&quot;Ticket #1149&quot;&gt;#1149&lt;/a&gt;.
Bottom line: hasn't ever worked, documented as not working on
&lt;a href=
&quot;http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html&quot;&gt;
http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassM...&lt;/a&gt;.
If you'd like to submit a patch and failing test case, I'm sure
core team would consider.&lt;/p&gt;
&lt;p&gt;Potential workaround: change to Post has_many :photos, though
obviously that changes the semantics and you'd have to enforce
uniqueness in other code.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-26T13:36:51+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord association associations hasmanythroughsourceassociationmacroerror has_many has_one through</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-05-26T13:36:56+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">2</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Is it not permissible to have a bug open on this as something to fix at some point? The workaround is not something I would like to do.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is it not permissible to have a bug open on this as something to
fix at some point? The workaround is not something I would like to
do.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-08T03:21:27+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord association associations hasmanythroughsourceassociationmacroerror has_many has_one through</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-06-08T03:21:30+01:00</updated-at>
      <user-id type="integer">28640</user-id>
      <version type="integer">3</version>
      <user-name>sbwoodside</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Well, this seems to work as a hackish work-around and relatively efficient if most of your posts have a photo. I'm not really an SQL guru so if someone could post better SQL that would be nice :-)

  @photos = @user.posts.map { |post| post.photo } .compact</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well, this seems to work as a hackish work-around and relatively
efficient if most of your posts have a photo. I'm not really an SQL
guru so if someone could post better SQL that would be nice :-)&lt;/p&gt;
&lt;p&gt;@photos = @user.posts.map { |post| post.photo } .compact&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-08T03:41:07+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord association associations hasmanythroughsourceassociationmacroerror has_many has_one through</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-06-08T03:41:12+01:00</updated-at>
      <user-id type="integer">28640</user-id>
      <version type="integer">4</version>
      <user-name>sbwoodside</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch seems to work for me, but I really don't know enough about the inner workings of associations to be sure.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch seems to work for me, but I really don't know enough
about the inner workings of associations to be sure.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-11T23:22:15+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord association associations hasmanythroughsourceassociationmacroerror has_many has_one through</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-07-11T23:22:23+01:00</updated-at>
      <user-id type="integer">20273</user-id>
      <version type="integer">5</version>
      <user-name>Josh Sharpe</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-04T20:15:02+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord association associations hasmanythroughsourceassociationmacroerror has_many has_one through
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-04T20:15:05+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">6</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>verified that the patch applies to 2-3-stable and tests pass for mysql/sqlite/postgres.  Going to look a little deeper now for potential problems...</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified that the patch applies to 2-3-stable and tests pass for
mysql/sqlite/postgres. Going to look a little deeper now for
potential problems...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T00:45:05+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-09T00:45:08+01:00</updated-at>
      <user-id type="integer">8505</user-id>
      <version type="integer">7</version>
      <user-name>Gabe da Silveira</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>After looking at this deeper the main problem is with inserting and deleting records via the has_many :through =&gt; has_one relationship.  However the main use case of this association is read-only anyway, so I think there is good value here, and I believe Josh's patch works smoothly because of support for has_many :through has_many.

I believe the proper thing to do here is add an exception similar to HasManyThroughCantAssociateThroughHasManyReflection to make the read-only functionality explicit and update the documentation.  I'm willing to do that now if there is agreement that this is the right approach.</body>
      <body-html>&lt;div&gt;&lt;p&gt;After looking at this deeper the main problem is with inserting
and deleting records via the has_many :through =&amp;gt; has_one
relationship. However the main use case of this association is
read-only anyway, so I think there is good value here, and I
believe Josh's patch works smoothly because of support for has_many
:through has_many.&lt;/p&gt;
&lt;p&gt;I believe the proper thing to do here is add an exception
similar to HasManyThroughCantAssociateThroughHasManyReflection to
make the read-only functionality explicit and update the
documentation. I'm willing to do that now if there is agreement
that this is the right approach.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T03:47:46+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-09T03:47:47+01:00</updated-at>
      <user-id type="integer">8505</user-id>
      <version type="integer">8</version>
      <user-name>Gabe da Silveira</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Okay, I've attached a patch.  This enabled has_many :through for use with a has_one reflection on the join model.  It's enabled as read-only with the same mechanics as has_many :through has_many.  I started with Josh's patch and added the read-only test + documentation updates.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Okay, I've attached a patch. This enabled has_many :through for
use with a has_one reflection on the join model. It's enabled as
read-only with the same mechanics as has_many :through has_many. I
started with Josh's patch and added the read-only test +
documentation updates.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T05:03:45+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-09T05:03:48+01:00</updated-at>
      <user-id type="integer">8505</user-id>
      <version type="integer">9</version>
      <user-name>Gabe da Silveira</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Oops, I left an unused Exception in there.  That is removed in this updated patch for 2-3-stable, and also I have a rebased version to apply to master.

I've attached a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops, I left an unused Exception in there. That is removed in
this updated patch for 2-3-stable, and also I have a rebased
version to apply to master.&lt;/p&gt;
&lt;p&gt;I've attached a patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T05:55:58+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-09T05:56:04+01:00</updated-at>
      <user-id type="integer">8505</user-id>
      <version type="integer">10</version>
      <user-name>Gabe da Silveira</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Per koz's request, here is an updated patch with an official deprection for the old exception for the 2-3 branch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Per koz's request, here is an updated patch with an official
deprection for the old exception for the 2-3 branch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T11:29:49+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-09T11:29:54+01:00</updated-at>
      <user-id type="integer">8505</user-id>
      <version type="integer">11</version>
      <user-name>Gabe da Silveira</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>+1 for the functionality. I could use this behavior one of my current projects.

Unfortunately, I wasn't able to apply your last version of the patch against 2-3-stable or master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 for the functionality. I could use this behavior one of my
current projects.&lt;/p&gt;
&lt;p&gt;Unfortunately, I wasn't able to apply your last version of the
patch against 2-3-stable or master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T20:31:24+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-09T20:31:28+01:00</updated-at>
      <user-id type="integer">10504</user-id>
      <version type="integer">12</version>
      <user-name>Josh Nichols</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>+1 Verified

Cleanly applies (apart from whitespace warning) and passes on master and 2-3-stable.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 Verified&lt;/p&gt;
&lt;p&gt;Cleanly applies (apart from whitespace warning) and passes on
master and 2-3-stable.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T20:33:05+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-09T20:33:10+01:00</updated-at>
      <user-id type="integer">17315</user-id>
      <version type="integer">13</version>
      <user-name>Tristan Dunn</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Sorry, doesn't apply on the latest versions as Josh pointed out.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, doesn't apply on the latest versions as Josh pointed
out.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T20:36:50+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-09T20:36:52+01:00</updated-at>
      <user-id type="integer">17315</user-id>
      <version type="integer">14</version>
      <user-name>Tristan Dunn</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Here are updated patches for 2-3-stable and master.  Handy-dandy one-stop location:</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here are updated patches for 2-3-stable and master. Handy-dandy
one-stop location:&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T20:57:20+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-09T20:57:23+01:00</updated-at>
      <user-id type="integer">8505</user-id>
      <version type="integer">15</version>
      <user-name>Gabe da Silveira</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">7</attachments-count>
      <body>Crap.  The deprecation snuck into master diff as well, which I don't think it should be according to my impression from koz.  Without the deprecation:</body>
      <body-html>&lt;div&gt;&lt;p&gt;Crap. The deprecation snuck into master diff as well, which I
don't think it should be according to my impression from koz.
Without the deprecation:&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T21:00:10+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-09T21:00:16+01:00</updated-at>
      <user-id type="integer">8505</user-id>
      <version type="integer">16</version>
      <user-name>Gabe da Silveira</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>Verified that the patch applies to 2-3-stable and master, and that the functionality works as expected through manual testing.

I ran these commands:

@@@
rails 2719-demo
cd 2719-demo
script/generate  model user
script/generate  model post user_id:integer
script/generate  model photo post_id:integer
rake db:create db:migrate
@@@


Then used these models:
@@@ ruby
class User &lt; ActiveRecord::Base
  has_many :posts
  has_many :photos, :through =&gt; :posts
end

class Post &lt; ActiveRecord::Base
  belongs_to :user
  has_one :photo
end


class Photo &lt; ActiveRecord::Base
  belongs_to :post
end
@@@

And then played around in script/console:

@@@
&gt;&gt; user = User.create!
=&gt; #&lt;User id: 2, created_at: &quot;2009-08-09 20:51:27&quot;, updated_at: &quot;2009-08-09 20:51:27&quot;&gt;
&gt;&gt; post = user.posts.create
=&gt; #&lt;Post id: 3, user_id: 2, created_at: &quot;2009-08-09 20:51:34&quot;, updated_at: &quot;2009-08-09 20:51:34&quot;&gt;
&gt;&gt; post.create_photo
=&gt; #&lt;Photo id: 3, post_id: 3, created_at: &quot;2009-08-09 20:51:37&quot;, updated_at: &quot;2009-08-09 20:51:37&quot;&gt;
&gt;&gt; user.photos
=&gt; [#&lt;Photo id: 3, post_id: 3, created_at: &quot;2009-08-09 20:51:37&quot;, updated_at: &quot;2009-08-09 20:51:37&quot;&gt;]
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Verified that the patch applies to 2-3-stable and master, and
that the functionality works as expected through manual
testing.&lt;/p&gt;
&lt;p&gt;I ran these commands:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rails 2719-demo
cd 2719-demo
script/generate  model user
script/generate  model post user_id:integer
script/generate  model photo post_id:integer
rake db:create db:migrate&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then used these models:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
  has_many :posts
  has_many :photos, :through =&amp;gt; :posts
end&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
class Post &amp;lt; ActiveRecord::Base
  belongs_to :user
  has_one :photo
end&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
class Photo &amp;lt; ActiveRecord::Base
  belongs_to :post
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And then played around in script/console:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; user = User.create!
=&amp;gt; #&amp;lt;User id: 2, created_at: &quot;2009-08-09 20:51:27&quot;, updated_at: &quot;2009-08-09 20:51:27&quot;&amp;gt;
&amp;gt;&amp;gt; post = user.posts.create
=&amp;gt; #&amp;lt;Post id: 3, user_id: 2, created_at: &quot;2009-08-09 20:51:34&quot;, updated_at: &quot;2009-08-09 20:51:34&quot;&amp;gt;
&amp;gt;&amp;gt; post.create_photo
=&amp;gt; #&amp;lt;Photo id: 3, post_id: 3, created_at: &quot;2009-08-09 20:51:37&quot;, updated_at: &quot;2009-08-09 20:51:37&quot;&amp;gt;
&amp;gt;&amp;gt; user.photos
=&amp;gt; [#&amp;lt;Photo id: 3, post_id: 3, created_at: &quot;2009-08-09 20:51:37&quot;, updated_at: &quot;2009-08-09 20:51:37&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T21:52:33+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-09T21:52:36+01:00</updated-at>
      <user-id type="integer">10504</user-id>
      <version type="integer">17</version>
      <user-name>Josh Nichols</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>(from [00d6c766608f90ce64f11feb98786cbc7f71b89d]) Enable has_many :through for going through a has_one association on the join model [#2719 state:resolved]

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/00d6c766608f90ce64f11feb98786cbc7f71b89d</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/00d6c766608f90ce64f11feb98786cbc7f71b89d&quot;
title=
&quot;Changeset [00d6c766608f90ce64f11feb98786cbc7f71b89d]&quot;&gt;[00d6c766608f90ce64f11feb98786cbc7f71b89d]&lt;/a&gt;)
Enable has_many :through for going through a has_one association on
the join model [&lt;a href=&quot;/projects/8994/tickets/2719&quot; title=
&quot;Ticket #2719&quot;&gt;#2719&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Pratik Naik &lt;a href=
&quot;mailto:pratiknaik@gmail.com&quot;&gt;pratiknaik@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/00d6c766608f90ce64f11feb98786cbc7f71b89d&quot;&gt;
http://github.com/rails/rails/commit/00d6c766608f90ce64f11feb98786c...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-10T00:44:25+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-10T00:44:27+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">18</version>
      <user-name>Repository</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>(from [b763858ed5faeda720035dd2178e7c44aa34240a]) Enable has_many :through for going through a has_one association on the join model [#2719 state:resolved]

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/b763858ed5faeda720035dd2178e7c44aa34240a</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/b763858ed5faeda720035dd2178e7c44aa34240a&quot;
title=
&quot;Changeset [b763858ed5faeda720035dd2178e7c44aa34240a]&quot;&gt;[b763858ed5faeda720035dd2178e7c44aa34240a]&lt;/a&gt;)
Enable has_many :through for going through a has_one association on
the join model [&lt;a href=&quot;/projects/8994/tickets/2719&quot; title=
&quot;Ticket #2719&quot;&gt;#2719&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Pratik Naik &lt;a href=
&quot;mailto:pratiknaik@gmail.com&quot;&gt;pratiknaik@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/b763858ed5faeda720035dd2178e7c44aa34240a&quot;&gt;
http://github.com/rails/rails/commit/b763858ed5faeda720035dd2178e7c...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-10T00:44:29+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-10T00:44:31+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">19</version>
      <user-name>Repository</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body nil="true"></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-10T02:15:18+01:00</created-at>
      <creator-id type="integer">28640</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord association associations bugmash hasmanythroughsourceassociationmacroerror has_many has_one through verified
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2719</number>
      <permalink>has_many-through-should-work-if-the-join-model-uses-has_one-relationship</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord association associations hasmanythroughsourceassociationmacroerror has_many has_one through verified</tag>
      <title>has_many :through should work if the join model uses has_one relationship</title>
      <updated-at type="datetime">2009-08-10T02:15:24+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">20</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>sbwoodside</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2719</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>990d53bc88105eb8f69183390f10285a5f543ea2</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-07-11T23:22:15+01:00</created-at>
      <filename>has_many_through_has_one_assoc_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">219111</id>
      <size type="integer">3402</size>
      <uploader-id type="integer">20273</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/219111/has_many_through_has_one_assoc_patch.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>85ee937114a2f1d7255268fa849f62cd255d982f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-09T05:03:45+01:00</created-at>
      <filename>enable_has_many_through_has_one_readonly.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239254</id>
      <size type="integer">10604</size>
      <uploader-id type="integer">8505</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239254/enable_has_many_through_has_one_readonly.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>d07a8940f9329d72fc0225ad95c91970b832181a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-09T05:55:58+01:00</created-at>
      <filename>enable_has_many_through_has_one_readonly.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239270</id>
      <size type="integer">10187</size>
      <uploader-id type="integer">8505</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239270/enable_has_many_through_has_one_readonly.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>dd85f359df89dc34a34e9efb985a9e87f6d602e6</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-09T05:55:58+01:00</created-at>
      <filename>enable_has_many_through_has_one_readonly_rebased_for_master.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239271</id>
      <size type="integer">9980</size>
      <uploader-id type="integer">8505</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239271/enable_has_many_through_has_one_readonly_rebased_for_master.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>f07d5d31b1f44f4f79c3f43e08ac12700aed12bc</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-09T11:29:49+01:00</created-at>
      <filename>enable_has_many_through_has_one_readonly.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239328</id>
      <size type="integer">10443</size>
      <uploader-id type="integer">8505</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239328/enable_has_many_through_has_one_readonly.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>f44271d604c8dd00bafb9cc25444fd2d6ba975ba</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-09T20:57:20+01:00</created-at>
      <filename>enable-has-many-through-one-2-3.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239404</id>
      <size type="integer">10432</size>
      <uploader-id type="integer">8505</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239404/enable-has-many-through-one-2-3.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>8b69c79490972f9c62d61b1a137d8912806bea67</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-09T20:57:20+01:00</created-at>
      <filename>enable-has-many-through-one-master.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239405</id>
      <size type="integer">10225</size>
      <uploader-id type="integer">8505</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239405/enable-has-many-through-one-master.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>a97d81df16090792e17f6089fcdcff947cf7e61e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-09T21:00:10+01:00</created-at>
      <filename>enable-has-many-through-one-master.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239408</id>
      <size type="integer">9969</size>
      <uploader-id type="integer">8505</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239408/enable-has-many-through-one-master.diff</url>
    </attachment>
  </attachments>
</ticket>
