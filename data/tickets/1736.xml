<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-12T13:03:22+00:00</created-at>
  <creator-id type="integer">20574</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1736</number>
  <permalink>now-explicit-serializated-objects-retuns-new-objects-when-nil</permalink>
  <priority type="integer">1045</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activerecord patch serialize</tag>
  <title>Now explicit serializated objects retuns new objects when nil </title>
  <updated-at type="datetime">2011-02-03T17:10:05+00:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">9</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>Guillermo &#193;lvarez</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1736</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Now explicit serializated objects retuns new objects when nil.
I think these is the expected behavior

@@@ ruby
    class Topic &lt; AR::Base
      serialize :content
      serialize :preferences, Hash
      serialize :properties, OpenStruct
    end
    
    t = Topic.new
    t.content.nil? =&gt; #true
    t.preferences # =&gt; Hash.new
    t.preferences[:sex] = true
    t.properties.rails = 3
@@@</original-body>
  <latest-body>Now explicit serializated objects retuns new objects when nil.
I think these is the expected behavior

@@@ ruby
    class Topic &lt; AR::Base
      serialize :content
      serialize :preferences, Hash
      serialize :properties, OpenStruct
    end
    
    t = Topic.new
    t.content.nil? =&gt; #true
    t.preferences # =&gt; Hash.new
    t.preferences[:sex] = true
    t.properties.rails = 3
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Now explicit serializated objects retuns new objects when nil. I
think these is the expected behavior&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
    class Topic &amp;lt; AR::Base
      serialize :content
      serialize :preferences, Hash
      serialize :properties, OpenStruct
    end
    
    t = Topic.new
    t.content.nil? =&amp;gt; #true
    t.preferences # =&amp;gt; Hash.new
    t.preferences[:sex] = true
    t.properties.rails = 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Now explicit serializated objects retuns new objects when nil.
I think these is the expected behavior

@@@ ruby
    class Topic &lt; AR::Base
      serialize :content
      serialize :preferences, Hash
      serialize :properties, OpenStruct
    end
    
    t = Topic.new
    t.content.nil? =&gt; #true
    t.preferences # =&gt; Hash.new
    t.preferences[:sex] = true
    t.properties.rails = 3
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Now explicit serializated objects retuns new objects when nil. I
think these is the expected behavior&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
    class Topic &amp;lt; AR::Base
      serialize :content
      serialize :preferences, Hash
      serialize :properties, OpenStruct
    end
    
    t = Topic.new
    t.content.nil? =&amp;gt; #true
    t.preferences # =&amp;gt; Hash.new
    t.preferences[:sex] = true
    t.properties.rails = 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-12T13:03:23+00:00</created-at>
      <creator-id type="integer">20574</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1736</number>
      <permalink>now-explicit-serializated-objects-retuns-new-objects-when-nil</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch serialize</tag>
      <title>Now explicit serializated objects retuns new objects when nil </title>
      <updated-at type="datetime">2009-01-12T13:03:26+00:00</updated-at>
      <user-id type="integer">20574</user-id>
      <version type="integer">1</version>
      <user-name>Guillermo &#193;lvarez</user-name>
      <creator-name>Guillermo &#193;lvarez</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1736</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This would mean that you can't save nil values for serialized attributes with a specific class anymore. Maybe an extra option :allow_nil or something would be a good solution?</body>
      <body-html>&lt;div&gt;&lt;p&gt;This would mean that you can't save nil values for serialized
attributes with a specific class anymore. Maybe an extra option
:allow_nil or something would be a good solution?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-12T13:16:57+00:00</created-at>
      <creator-id type="integer">20574</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1736</number>
      <permalink>now-explicit-serializated-objects-retuns-new-objects-when-nil</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch serialize</tag>
      <title>Now explicit serializated objects retuns new objects when nil </title>
      <updated-at type="datetime">2009-01-12T13:16:59+00:00</updated-at>
      <user-id type="integer">8407</user-id>
      <version type="integer">2</version>
      <user-name>Manfred Stienstra</user-name>
      <creator-name>Guillermo &#193;lvarez</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1736</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>No. These patch don't change the default behavior.

When you do something like these

@@@ ruby
  serialize :properties
@@@

The behaviour is the same. You can set nil to properties.

But if you say that properties is a hash, the empty value for a hash is an empty Hash.

@@@ ruby
class Topic &lt; AR::Base
  serialize :properties, Hash
end

t = Topic.new
t.properties['name'] = 'Guillermo'
t.save

t.properties.clear
t.save
@@@

Obviously you don't have to think or  initialize an uninizialize hash, openstruc, array, etc...

These reason of these ticket is that i have always do something like these

@@@ ruby
class User &lt; AR::Base
  serialize :preferences, OpenStruct
  def preferences
    read_attribute :preferences || OpenStruct.new
  end
@@@ 

I think about add something like allow_nil but i don't found any case where a prefere to save a nil value instead of a empty Hash, Array, OpenStruct.</body>
      <body-html>&lt;div&gt;&lt;p&gt;No. These patch don't change the default behavior.&lt;/p&gt;
&lt;p&gt;When you do something like these&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  serialize :properties
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The behaviour is the same. You can set nil to properties.&lt;/p&gt;
&lt;p&gt;But if you say that properties is a hash, the empty value for a
hash is an empty Hash.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Topic &amp;lt; AR::Base
  serialize :properties, Hash
end

t = Topic.new
t.properties['name'] = 'Guillermo'
t.save

t.properties.clear
t.save
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Obviously you don't have to think or initialize an uninizialize
hash, openstruc, array, etc...&lt;/p&gt;
&lt;p&gt;These reason of these ticket is that i have always do something
like these&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class User &amp;lt; AR::Base
  serialize :preferences, OpenStruct
  def preferences
    read_attribute :preferences || OpenStruct.new
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think about add something like allow_nil but i don't found any
case where a prefere to save a nil value instead of a empty Hash,
Array, OpenStruct.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-12T13:45:10+00:00</created-at>
      <creator-id type="integer">20574</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1736</number>
      <permalink>now-explicit-serializated-objects-retuns-new-objects-when-nil</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch serialize</tag>
      <title>Now explicit serializated objects retuns new objects when nil </title>
      <updated-at type="datetime">2009-01-12T13:45:16+00:00</updated-at>
      <user-id type="integer">20574</user-id>
      <version type="integer">3</version>
      <user-name>Guillermo &#193;lvarez</user-name>
      <creator-name>Guillermo &#193;lvarez</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1736</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Looks good to me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks good to me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-10T17:13:10+00:00</created-at>
      <creator-id type="integer">20574</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1736</number>
      <permalink>now-explicit-serializated-objects-retuns-new-objects-when-nil</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch serialize</tag>
      <title>Now explicit serializated objects retuns new objects when nil </title>
      <updated-at type="datetime">2009-03-10T17:13:30+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">4</version>
      <user-name>Pratik</user-name>
      <creator-name>Guillermo &#193;lvarez</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1736</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:38+01:00</created-at>
      <creator-id type="integer">20574</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1736</number>
      <permalink>now-explicit-serializated-objects-retuns-new-objects-when-nil</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord patch serialize</tag>
      <title>Now explicit serializated objects retuns new objects when nil </title>
      <updated-at type="datetime">2010-05-04T18:48:38+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Guillermo &#193;lvarez</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1736</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:41:58+00:00</created-at>
      <creator-id type="integer">20574</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1736</number>
      <permalink>now-explicit-serializated-objects-retuns-new-objects-when-nil</permalink>
      <priority type="integer">1045</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch serialize</tag>
      <title>Now explicit serializated objects retuns new objects when nil </title>
      <updated-at type="datetime">2011-02-02T17:42:29+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Guillermo &#193;lvarez</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1736</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:42:00+00:00</created-at>
      <creator-id type="integer">20574</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1736</number>
      <permalink>now-explicit-serializated-objects-retuns-new-objects-when-nil</permalink>
      <priority type="integer">1045</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord patch serialize</tag>
      <title>Now explicit serializated objects retuns new objects when nil </title>
      <updated-at type="datetime">2011-02-02T17:42:19+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Guillermo &#193;lvarez</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1736</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[state:open]

Update patch for rails 3.x

* Added some tests
* Added documentation</body>
      <body-html>&lt;div&gt;&lt;p&gt;[state:open]&lt;/p&gt;
&lt;p&gt;Update patch for rails 3.x&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added some tests&lt;/li&gt;
&lt;li&gt;Added documentation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T00:25:49+00:00</created-at>
      <creator-id type="integer">20574</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1736</number>
      <permalink>now-explicit-serializated-objects-retuns-new-objects-when-nil</permalink>
      <priority type="integer">1045</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch serialize</tag>
      <title>Now explicit serializated objects retuns new objects when nil </title>
      <updated-at type="datetime">2011-02-03T00:25:56+00:00</updated-at>
      <user-id type="integer">20574</user-id>
      <version type="integer">8</version>
      <user-name>Guillermo &#193;lvarez</user-name>
      <creator-name>Guillermo &#193;lvarez</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1736</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Applied and pushed.  Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Applied and pushed. Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-03T17:09:47+00:00</created-at>
      <creator-id type="integer">20574</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1736</number>
      <permalink>now-explicit-serializated-objects-retuns-new-objects-when-nil</permalink>
      <priority type="integer">1045</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord patch serialize</tag>
      <title>Now explicit serializated objects retuns new objects when nil </title>
      <updated-at type="datetime">2011-02-03T17:10:05+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">9</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Guillermo &#193;lvarez</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1736</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1759fb36c051b989590df6f899ec277afb0db528</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-12T13:03:23+00:00</created-at>
      <filename>0001-Now-explicit-serializated-objects-retuns-new-objects.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">77357</id>
      <size type="integer">2283</size>
      <uploader-id type="integer">20574</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/77357/0001-Now-explicit-serializated-objects-retuns-new-objects.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>05baa01719949cda0b5cd13ada08addbc85f9f29</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-03T00:25:49+00:00</created-at>
      <filename>0001-make-serialized-columns-with-explicit-object_type-re.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">892693</id>
      <size type="integer">5213</size>
      <uploader-id type="integer">20574</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/892693/0001-make-serialized-columns-with-explicit-object_type-re.patch</url>
    </attachment>
  </attachments>
</ticket>
