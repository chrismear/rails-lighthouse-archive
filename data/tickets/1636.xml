<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-26T02:28:55+00:00</created-at>
  <creator-id type="integer">29162</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1636</number>
  <permalink>rack_processrb-304-output-not-compatible-with-xmlhttprequest-spec</permalink>
  <priority type="integer">973</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.2 actionpack</tag>
  <title>RackResponse 304 output not compatible with XMLHTTPRequest spec</title>
  <updated-at type="datetime">2009-03-10T03:15:22+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">4</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Brian Johnson</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1636</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is the relevant section:

The XML response entity body is either a Document representing the response entity body or null. The XML response entity body is the return value of the following algorithm:

   1.

      If the response entity body is &quot;null&quot; terminate these steps and return null.
   2.

      If a Content-Type is present and it does not contain a MIME type (ignoring any parameters) that is text/xml, application/xml or ends in +xml terminate these steps and return null. (Do not terminate these steps if there is no Content-Type header at all.) 

The problem is that rack_process.rb deletes the content type and sets the output to [] which returns an empty response body. Because it removes the content-type header, XMLHTTPRequest will interpret the response as text/xml. An empty string is not valid XML and will produce a &quot;no element found&quot; error in Firefox. It seems that it should either set the content type to something like text/plain or return a response body of &quot;null&quot; for 304 status responses. 

We use AJAX calls to return JSON data to a grid and would like to be able to use etags to keep the load/traffic down on the server.</original-body>
  <latest-body>This is the relevant section:

The XML response entity body is either a Document representing the response entity body or null. The XML response entity body is the return value of the following algorithm:

   1.

      If the response entity body is &quot;null&quot; terminate these steps and return null.
   2.

      If a Content-Type is present and it does not contain a MIME type (ignoring any parameters) that is text/xml, application/xml or ends in +xml terminate these steps and return null. (Do not terminate these steps if there is no Content-Type header at all.) 

The problem is that rack_process.rb deletes the content type and sets the output to [] which returns an empty response body. Because it removes the content-type header, XMLHTTPRequest will interpret the response as text/xml. An empty string is not valid XML and will produce a &quot;no element found&quot; error in Firefox. It seems that it should either set the content type to something like text/plain or return a response body of &quot;null&quot; for 304 status responses. 

We use AJAX calls to return JSON data to a grid and would like to be able to use etags to keep the load/traffic down on the server.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is the relevant section:&lt;/p&gt;
&lt;p&gt;The XML response entity body is either a Document representing
the response entity body or null. The XML response entity body is
the return value of the following algorithm:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If the response entity body is &quot;null&quot; terminate these steps and
return null.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a Content-Type is present and it does not contain a MIME type
(ignoring any parameters) that is text/xml, application/xml or ends
in +xml terminate these steps and return null. (Do not terminate
these steps if there is no Content-Type header at all.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The problem is that rack_process.rb deletes the content type and
sets the output to [] which returns an empty response body. Because
it removes the content-type header, XMLHTTPRequest will interpret
the response as text/xml. An empty string is not valid XML and will
produce a &quot;no element found&quot; error in Firefox. It seems that it
should either set the content type to something like text/plain or
return a response body of &quot;null&quot; for 304 status responses.&lt;/p&gt;
&lt;p&gt;We use AJAX calls to return JSON data to a grid and would like
to be able to use etags to keep the load/traffic down on the
server.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is the relevant section:

The XML response entity body is either a Document representing the response entity body or null. The XML response entity body is the return value of the following algorithm:

   1.

      If the response entity body is &quot;null&quot; terminate these steps and return null.
   2.

      If a Content-Type is present and it does not contain a MIME type (ignoring any parameters) that is text/xml, application/xml or ends in +xml terminate these steps and return null. (Do not terminate these steps if there is no Content-Type header at all.) 

The problem is that rack_process.rb deletes the content type and sets the output to [] which returns an empty response body. Because it removes the content-type header, XMLHTTPRequest will interpret the response as text/xml. An empty string is not valid XML and will produce a &quot;no element found&quot; error in Firefox. It seems that the out/to_a method should set the content type to something like text/plain or return a response body of &quot;null&quot; for 304 status responses. 

We use AJAX calls to return JSON data to a grid and would like to be able to use etags to keep the load/traffic down on the server.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is the relevant section:&lt;/p&gt;
&lt;p&gt;The XML response entity body is either a Document representing
the response entity body or null. The XML response entity body is
the return value of the following algorithm:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If the response entity body is &quot;null&quot; terminate these steps and
return null.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a Content-Type is present and it does not contain a MIME type
(ignoring any parameters) that is text/xml, application/xml or ends
in +xml terminate these steps and return null. (Do not terminate
these steps if there is no Content-Type header at all.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The problem is that rack_process.rb deletes the content type and
sets the output to [] which returns an empty response body. Because
it removes the content-type header, XMLHTTPRequest will interpret
the response as text/xml. An empty string is not valid XML and will
produce a &quot;no element found&quot; error in Firefox. It seems that the
out/to_a method should set the content type to something like
text/plain or return a response body of &quot;null&quot; for 304 status
responses.&lt;/p&gt;
&lt;p&gt;We use AJAX calls to return JSON data to a grid and would like
to be able to use etags to keep the load/traffic down on the
server.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-26T02:28:55+00:00</created-at>
      <creator-id type="integer">29162</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1636</number>
      <permalink>rack_processrb-304-output-not-compatible-with-xmlhttprequest-spec</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 actionpack</tag>
      <title>RackResponse 304 output not compatible with XMLHTTPRequest spec</title>
      <updated-at type="datetime">2008-12-26T04:40:10+00:00</updated-at>
      <user-id type="integer">29162</user-id>
      <version type="integer">1</version>
      <user-name>Brian Johnson</user-name>
      <creator-name>Brian Johnson</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1636</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Seems to also be a problem with CgiResponse. If I do something like this

render :text =&gt; &quot;null&quot;, :status =&gt; :not_modified, :content_type =&gt; 'text/plain'

it still renders with an empty body and no content type</body>
      <body-html>&lt;div&gt;&lt;p&gt;Seems to also be a problem with CgiResponse. If I do something
like this&lt;/p&gt;
&lt;p&gt;render :text =&amp;gt; &quot;null&quot;, :status =&amp;gt; :not_modified,
:content_type =&amp;gt; 'text/plain'&lt;/p&gt;
&lt;p&gt;it still renders with an empty body and no content type&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-26T23:55:49+00:00</created-at>
      <creator-id type="integer">29162</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1636</number>
      <permalink>rack_processrb-304-output-not-compatible-with-xmlhttprequest-spec</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 actionpack</tag>
      <title>RackResponse 304 output not compatible with XMLHTTPRequest spec</title>
      <updated-at type="datetime">2008-12-26T23:55:51+00:00</updated-at>
      <user-id type="integer">29162</user-id>
      <version type="integer">2</version>
      <user-name>Brian Johnson</user-name>
      <creator-name>Brian Johnson</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1636</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-08T17:30:02+00:00</created-at>
      <creator-id type="integer">29162</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1636</number>
      <permalink>rack_processrb-304-output-not-compatible-with-xmlhttprequest-spec</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 actionpack</tag>
      <title>RackResponse 304 output not compatible with XMLHTTPRequest spec</title>
      <updated-at type="datetime">2009-03-08T17:30:05+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Brian Johnson</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1636</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think Rack is doing the correct thing, but I'm not entirely sure.

Anyway, this is something that needs to be fixed in Rack, not Rails. Please file a ticket on the Rack lighthouse. Assign the ticket to Ryan Tomayko, the HTTP caching expert.

http://rack.lighthouseapp.com/</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think Rack is doing the correct thing, but I'm not entirely
sure.&lt;/p&gt;
&lt;p&gt;Anyway, this is something that needs to be fixed in Rack, not
Rails. Please file a ticket on the Rack lighthouse. Assign the
ticket to Ryan Tomayko, the HTTP caching expert.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://rack.lighthouseapp.com/&quot;&gt;http://rack.lighthouseapp.com/&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-10T03:15:20+00:00</created-at>
      <creator-id type="integer">29162</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1636</number>
      <permalink>rack_processrb-304-output-not-compatible-with-xmlhttprequest-spec</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.2 actionpack</tag>
      <title>RackResponse 304 output not compatible with XMLHTTPRequest spec</title>
      <updated-at type="datetime">2009-03-10T03:15:22+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">4</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Brian Johnson</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1636</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
