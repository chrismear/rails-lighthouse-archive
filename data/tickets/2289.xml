<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-04-09T23:41:50+01:00</created-at>
  <creator-id type="integer">23653</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2289</number>
  <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
  <priority type="integer">1464</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>method middleware request xml</tag>
  <title>_method=put ignored for xhr and xml requests</title>
  <updated-at type="datetime">2011-04-25T20:03:09+01:00</updated-at>
  <user-id type="integer">20548</user-id>
  <version type="integer">23</version>
  <user-name>Michael Latta</user-name>
  <creator-name>Greg DeVore</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>In previous versions of Rails you could do something like this:

curl  -H &quot;Accept: text/xml&quot; 
       -H &quot;Content-type: application/xml&quot; 
        d &quot;_method=put&quot; 
        -X POST http://localhost.com:3000/posts/1

Rails would recognize the POST request as a put because of the _method=put param and your restful routes would work correctly.

In 2.3.2 this no longer works for xml requests. It does for html. So

curl d &quot;_method=put&quot;  -X POST http://localhost.com:3000/posts/1

will hit the update action.

But if you add hte Accpet: &quot;text/xml&quot; header then will interpret the request as a post request and map the request to the create method.

This is a problem with Ajax forms that want to use restful routes but can only issue GET and POST requests.</original-body>
  <latest-body>In previous versions of Rails you could do something like this:

curl  -H &quot;Accept: text/xml&quot; 
       -H &quot;Content-type: application/xml&quot; 
        d &quot;_method=put&quot; 
        -X POST http://localhost.com:3000/posts/1

Rails would recognize the POST request as a put because of the _method=put param and your restful routes would work correctly.

In 2.3.2 this no longer works for xml requests. It does for html. So

curl d &quot;_method=put&quot;  -X POST http://localhost.com:3000/posts/1

will hit the update action.

But if you add hte Accpet: &quot;text/xml&quot; header then will interpret the request as a post request and map the request to the create method.

This is a problem with Ajax forms that want to use restful routes but can only issue GET and POST requests.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In previous versions of Rails you could do something like
this:&lt;/p&gt;
&lt;p&gt;curl -H &quot;Accept: text/xml&quot;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;   -H &quot;Content-type: application/xml&quot;
    d &quot;_method=put&quot; 
    -X POST &lt;a href=&quot;http://localhost.com:3000/posts/1&quot;&gt;http://localhost.com:3000/posts/1&lt;/a&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Rails would recognize the POST request as a put because of the
_method=put param and your restful routes would work correctly.&lt;/p&gt;
&lt;p&gt;In 2.3.2 this no longer works for xml requests. It does for
html. So&lt;/p&gt;
&lt;p&gt;curl d &quot;_method=put&quot; -X POST &lt;a href=&quot;http://localhost.com:3000/posts/1&quot;&gt;http://localhost.com:3000/posts/1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;will hit the update action.&lt;/p&gt;
&lt;p&gt;But if you add hte Accpet: &quot;text/xml&quot; header then will interpret
the request as a post request and map the request to the create
method.&lt;/p&gt;
&lt;p&gt;This is a problem with Ajax forms that want to use restful
routes but can only issue GET and POST requests.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In previous versions of Rails you could do something like this:

curl  -H &quot;Accept: text/xml&quot; 
       -H &quot;Content-type: application/xml&quot; 
        d &quot;_method=put&quot; 
        -X POST http://localhost.com:3000/posts/1

Rails would recognize the POST request as a put because of the _method=put param and your restful routes would work correctly.

In 2.3.2 this no longer works for xml requests. It does for html. So

curl d &quot;_method=put&quot;  -X POST http://localhost.com:3000/posts/1

will hit the update action.

But if you add hte Accpet: &quot;text/xml&quot; header then will interpret the request as a post request and map the request to the create method.

This is a problem with Ajax forms that want to use restful routes but can only issue GET and POST requests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In previous versions of Rails you could do something like
this:&lt;/p&gt;
&lt;p&gt;curl -H &quot;Accept: text/xml&quot;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;   -H &quot;Content-type: application/xml&quot;
    d &quot;_method=put&quot; 
    -X POST &lt;a href=&quot;http://localhost.com:3000/posts/1&quot;&gt;http://localhost.com:3000/posts/1&lt;/a&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Rails would recognize the POST request as a put because of the
_method=put param and your restful routes would work correctly.&lt;/p&gt;
&lt;p&gt;In 2.3.2 this no longer works for xml requests. It does for
html. So&lt;/p&gt;
&lt;p&gt;curl d &quot;_method=put&quot; -X POST &lt;a href=&quot;http://localhost.com:3000/posts/1&quot;&gt;http://localhost.com:3000/posts/1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;will hit the update action.&lt;/p&gt;
&lt;p&gt;But if you add hte Accpet: &quot;text/xml&quot; header then will interpret
the request as a post request and map the request to the create
method.&lt;/p&gt;
&lt;p&gt;This is a problem with Ajax forms that want to use restful
routes but can only issue GET and POST requests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-18T18:11:34+00:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-03-18T18:11:39+00:00</updated-at>
      <user-id type="integer">23653</user-id>
      <version type="integer">1</version>
      <user-name>Greg DeVore</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Did some more investigating on this. If an xml request is made a _method=put in the params Rack::MethodOverride is never hit. You have to add an HTTP_X_HTTP_METHOD_OVERRIDE header. 

Is there is a reason why xml requests won't look at the _method param?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Did some more investigating on this. If an xml request is made a
_method=put in the params Rack::MethodOverride is never hit. You
have to add an HTTP_X_HTTP_METHOD_OVERRIDE header.&lt;/p&gt;
&lt;p&gt;Is there is a reason why xml requests won't look at the _method
param?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-18T19:50:15+00:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-03-18T19:50:21+00:00</updated-at>
      <user-id type="integer">23653</user-id>
      <version type="integer">2</version>
      <user-name>Greg DeVore</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>OK - I was going down the wrong path on this one. The real problem is that in previous versions of rails you could have from post data and pass _method=put as a query param.  The routing would recognize it as a put request.

In 2.3, if you don't put the _method=put into the form data, but into the query then it won't be recognized as a put request.  I have made a small change to the Rack::MethodOverride module that fixes this but I am not sure if there are any negative consequences for including it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK - I was going down the wrong path on this one. The real
problem is that in previous versions of rails you could have from
post data and pass _method=put as a query param. The routing would
recognize it as a put request.&lt;/p&gt;
&lt;p&gt;In 2.3, if you don't put the _method=put into the form data, but
into the query then it won't be recognized as a put request. I have
made a small change to the Rack::MethodOverride module that fixes
this but I am not sure if there are any negative consequences for
including it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-19T01:29:56+00:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-03-19T01:29:58+00:00</updated-at>
      <user-id type="integer">23653</user-id>
      <version type="integer">3</version>
      <user-name>Greg DeVore</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I have this same issue with posting JSON as the request body format.
From what I could find, it seems that the check for the METHOD_OVERRIDE_PARAM_KEY (which is set to &quot;_method&quot;) is being done on req.POST which is empty in my JSON request.
Changing that req.POST check to use req.env['action_controller.request.request_parameters'] fixes the problem for me.
I'm hesitant to submit this as a patch because I'm assuming it breaks the general nature of middleware that may want to avoid ActionController completely. But maybe this Rack::MethodOverride middleware comes so late in the chain it doesn't matter?

Anyway, this is around line 15 of methodoverride.rb in the bundled Rack 1.0 in Rails 2.3.2.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have this same issue with posting JSON as the request body
format. From what I could find, it seems that the check for the
METHOD_OVERRIDE_PARAM_KEY (which is set to &quot;_method&quot;) is being done
on req.POST which is empty in my JSON request. Changing that
req.POST check to use
req.env['action_controller.request.request_parameters'] fixes the
problem for me. I'm hesitant to submit this as a patch because I'm
assuming it breaks the general nature of middleware that may want
to avoid ActionController completely. But maybe this
Rack::MethodOverride middleware comes so late in the chain it
doesn't matter?&lt;/p&gt;
&lt;p&gt;Anyway, this is around line 15 of methodoverride.rb in the
bundled Rack 1.0 in Rails 2.3.2.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-23T19:25:30+00:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-03-23T19:25:32+00:00</updated-at>
      <user-id type="integer">51632</user-id>
      <version type="integer">4</version>
      <user-name>Brian Lopez</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>After thinking about it a little more, doing this change in Rack is a bad idea.
I think the actual fixable issue is that ActionController::ParamsParser sets env[&quot;action_controller.request.request_parameters&quot;] to the parsed params. But Rack sets up it's Request#POST hash based on env['rack.input'] (I think).

It seems like two things might have to change...
If ActionController::ParamsParser were to set the value of env[&quot;rack.request.form_hash&quot;] instead of env[&quot;action_controller.request.request_parameters&quot;], AND Rack were to check if  env[&quot;rack.request.form_hash&quot;] was already from other middleware in the chain?</body>
      <body-html>&lt;div&gt;&lt;p&gt;After thinking about it a little more, doing this change in Rack
is a bad idea. I think the actual fixable issue is that
ActionController::ParamsParser sets
env[&quot;action_controller.request.request_parameters&quot;] to the parsed
params. But Rack sets up it's Request#POST hash based on
env['rack.input'] (I think).&lt;/p&gt;
&lt;p&gt;It seems like two things might have to change... If
ActionController::ParamsParser were to set the value of
env[&quot;rack.request.form_hash&quot;] instead of
env[&quot;action_controller.request.request_parameters&quot;], AND Rack were
to check if env[&quot;rack.request.form_hash&quot;] was already from other
middleware in the chain?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-23T19:34:25+00:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-03-23T19:34:29+00:00</updated-at>
      <user-id type="integer">51632</user-id>
      <version type="integer">5</version>
      <user-name>Brian Lopez</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Forgot to mention, setting HTTP_X_HTTP_METHOD_OVERRIDE worked fine without any of my above mentioned changes as well.
I think I like this better anyway.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Forgot to mention, setting HTTP_X_HTTP_METHOD_OVERRIDE worked
fine without any of my above mentioned changes as well. I think I
like this better anyway.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-23T19:36:20+00:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-03-23T19:36:21+00:00</updated-at>
      <user-id type="integer">51632</user-id>
      <version type="integer">6</version>
      <user-name>Brian Lopez</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Do you still have this problem?

Recently after upgrading to Rails 2.3.2 suddenly in place editing plugin that we use stopped working giving &quot;only get, put and delete method allowed&quot; when requesting JSON using PUT method.

Thanks to you guys we managed to fix it by swapping Rack::MethodOverride with the patched version provided here (see http://guides.rubyonrails.org/rails_on_rack.html#swapping-a-middleware for swapping middlewares).

But later it turned out that this problem was caused by facebooker gem that we were using - it was inserting its own Rack middleware into the stack that caused this problem - updating it to 1.0.25 fixed this problem and we could remove our patched version of Rack::MethodOverride middleware.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Do you still have this problem?&lt;/p&gt;
&lt;p&gt;Recently after upgrading to Rails 2.3.2 suddenly in place
editing plugin that we use stopped working giving &quot;only get, put
and delete method allowed&quot; when requesting JSON using PUT
method.&lt;/p&gt;
&lt;p&gt;Thanks to you guys we managed to fix it by swapping
Rack::MethodOverride with the patched version provided here (see
&lt;a href=&quot;http://guides.rubyonrails.org/rails_on_rack.html#swapping-a-middleware&quot;&gt;
http://guides.rubyonrails.org/ra...&lt;/a&gt; for swapping
middlewares).&lt;/p&gt;
&lt;p&gt;But later it turned out that this problem was caused by
facebooker gem that we were using - it was inserting its own Rack
middleware into the stack that caused this problem - updating it to
1.0.25 fixed this problem and we could remove our patched version
of Rack::MethodOverride middleware.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-02T20:38:43+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-04-02T20:38:46+01:00</updated-at>
      <user-id type="integer">22106</user-id>
      <version type="integer">7</version>
      <user-name>Szymon Nowak</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm hitting up against this too, however, this just started happening when I created a metal app.

   http://gist.github.com/115937

At first I thought it might be related to the paths I've defined in my metal app, but even if I just declare a bare bones metal app(i.e., class MyMetalApp;end;) all restful update actions are broken and I get this error: 

   Only get, put, and delete requests are allowed.

This seems to be the only ticket related to this issue.  Not sure if I should file a new one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm hitting up against this too, however, this just started
happening when I created a metal app.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://gist.github.com/115937&quot;&gt;http://gist.github.com/115937&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At first I thought it might be related to the paths I've defined
in my metal app, but even if I just declare a bare bones metal
app(i.e., class MyMetalApp;end;) all restful update actions are
broken and I get this error:&lt;/p&gt;
&lt;p&gt;Only get, put, and delete requests are allowed.&lt;/p&gt;
&lt;p&gt;This seems to be the only ticket related to this issue. Not sure
if I should file a new one.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-22T06:14:37+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-05-22T06:14:38+01:00</updated-at>
      <user-id type="integer">15160</user-id>
      <version type="integer">8</version>
      <user-name>Rich</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Forgot to mention this is happening for standard text/html requests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Forgot to mention this is happening for standard text/html
requests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-22T06:15:21+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-05-22T06:15:22+01:00</updated-at>
      <user-id type="integer">15160</user-id>
      <version type="integer">9</version>
      <user-name>Rich</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've also stumbled into this problem when we upgraded our product to Rails version 2.3.2. It's a worry, because our app utilizes XML extensively.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've also stumbled into this problem when we upgraded our
product to Rails version 2.3.2. It's a worry, because our app
utilizes XML extensively.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-04T05:16:04+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-06-04T05:16:09+01:00</updated-at>
      <user-id type="integer">9650</user-id>
      <version type="integer">10</version>
      <user-name>Marcus Wyatt</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is also an issue when adding PUT links in active_scaffold</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is also an issue when adding PUT links in
active_scaffold&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-22T21:41:56+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-07-22T21:41:58+01:00</updated-at>
      <user-id type="integer">3138</user-id>
      <version type="integer">11</version>
      <user-name>Andy Watts</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm having the same problem here with XHR requests. I'm working on developing the gwt-on-rails plugin, but we don't seem to be able to PUT anything as it's simply being ignored via either XHR JSON or XML requests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm having the same problem here with XHR requests. I'm working
on developing the gwt-on-rails plugin, but we don't seem to be able
to PUT anything as it's simply being ignored via either XHR JSON or
XML requests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-13T12:00:09+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-08-13T12:00:16+01:00</updated-at>
      <user-id type="integer">66164</user-id>
      <version type="integer">12</version>
      <user-name>Sean Grove</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Fwiw, the actual request header to send is called X-Http-Method-Override. So in curl, to simulate a JSON PUT request that would be:

curl -H &quot;X-Http-Method-Override: put&quot; -H &quot;Content-Type: application/json&quot; -d &quot;{\&quot;user\&quot;:{\&quot;email\&quot;:\&quot;blah@example.com\&quot;}}&quot; www.example.com/users/username.json

Took me a few hours of research. Including &quot;_method&quot;:&quot;put&quot; in the JSON hash had no effect whatsoever though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fwiw, the actual request header to send is called
X-Http-Method-Override. So in curl, to simulate a JSON PUT request
that would be:&lt;/p&gt;
&lt;p&gt;curl -H &quot;X-Http-Method-Override: put&quot; -H &quot;Content-Type:
application/json&quot; -d &quot;{&lt;a href=&quot;{&quot;&gt;&lt;/a&gt;&lt;a href=
&quot;mailto:blah@example.com&quot;&gt;blah@example.com&lt;/a&gt;&quot;}}&quot;&quot;&amp;gt;user
&lt;a href=&quot;http://www.example.com/users/username.json&quot;&gt;www.example.com/users/username.json&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Took me a few hours of research. Including &lt;a href=
&quot;&quot;&gt;_method&lt;/a&gt; in the JSON hash had no effect whatsoever
though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-19T20:16:49+00:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2009-12-19T20:16:52+00:00</updated-at>
      <user-id type="integer">10656</user-id>
      <version type="integer">13</version>
      <user-name>joost baaij</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:42+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2010-05-04T18:48:42+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">14</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>In rails3 edge all the following three requests worked just fine for me.

@@@ ruby
$ curl -X POST -d &quot;user[name]=John&quot; -d &quot;_method=PUT&quot; http://localhost:3000/users/1
$ curl -X POST -d &quot;user[name]=John2&quot; &quot;Content-Type: text/xml&quot; -d &quot;_method=PUT&quot; http://localhost:3000/users/1
$ curl -X POST -d &quot;user[name]=John3&quot; &quot;Content-Type: application/json&quot; -d &quot;_method=PUT&quot; http://localhost:3000/users/1
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;In rails3 edge all the following three requests worked just fine
for me.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;$ curl -X POST -d &quot;user[name]=John&quot; -d &quot;_method=PUT&quot; http://localhost:3000/users/1
$ curl -X POST -d &quot;user[name]=John2&quot; &quot;Content-Type: text/xml&quot; -d &quot;_method=PUT&quot; http://localhost:3000/users/1
$ curl -X POST -d &quot;user[name]=John3&quot; &quot;Content-Type: application/json&quot; -d &quot;_method=PUT&quot; http://localhost:3000/users/1&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-28T18:12:40+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">1464</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2010-06-28T18:12:52+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">15</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Neeraj,

Those work for html requests, but if you try a JSON request _method=PUT param will fail. Although, sending the header HTTP_X_HTTP_METHOD_OVERRIDE=put does work for xhr.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Neeraj,&lt;/p&gt;
&lt;p&gt;Those work for html requests, but if you try a JSON request
_method=PUT param will fail. Although, sending the header
HTTP_X_HTTP_METHOD_OVERRIDE=put does work for xhr.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-06T23:21:25+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">1464</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2010-07-06T23:21:29+01:00</updated-at>
      <user-id type="integer">47545</user-id>
      <version type="integer">16</version>
      <user-name>Mike (at coverallcrew)</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Mike, how are you doing the request? Only POST requests will have their method overridden. Also the _put variable needs to be in the form data and not the query string. This is the simple Rack middleware that does the overriding:

@@@ ruby
module Rack
  class MethodOverride
    HTTP_METHODS = %w(GET HEAD PUT POST DELETE OPTIONS)

    METHOD_OVERRIDE_PARAM_KEY = &quot;_method&quot;.freeze
    HTTP_METHOD_OVERRIDE_HEADER = &quot;HTTP_X_HTTP_METHOD_OVERRIDE&quot;.freeze

    def initialize(app)
      @app = app
    end

    def call(env)
      if env[&quot;REQUEST_METHOD&quot;] == &quot;POST&quot;
        req = Request.new(env)
        method = req.POST[METHOD_OVERRIDE_PARAM_KEY] ||
          env[HTTP_METHOD_OVERRIDE_HEADER]
        method = method.to_s.upcase
        if HTTP_METHODS.include?(method)
          env[&quot;rack.methodoverride.original_method&quot;] = env[&quot;REQUEST_METHOD&quot;]
          env[&quot;REQUEST_METHOD&quot;] = method
        end
      end

      @app.call(env)
    end
  end
end
@@@

As you can see it's not a complicated bit of code so the way you build your JSON request is probably triggering the error. I think previously in the pre-Rack days the _method could either be in the query or the form data and that tends to catch people out.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Mike, how are you doing the request? Only POST requests will
have their method overridden. Also the _put variable needs to be in
the form data and not the query string. This is the simple Rack
middleware that does the overriding:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;module Rack
  class MethodOverride
    HTTP_METHODS = %w(GET HEAD PUT POST DELETE OPTIONS)

    METHOD_OVERRIDE_PARAM_KEY = &quot;_method&quot;.freeze
    HTTP_METHOD_OVERRIDE_HEADER = &quot;HTTP_X_HTTP_METHOD_OVERRIDE&quot;.freeze

    def initialize(app)
      @app = app
    end

    def call(env)
      if env[&quot;REQUEST_METHOD&quot;] == &quot;POST&quot;
        req = Request.new(env)
        method = req.POST[METHOD_OVERRIDE_PARAM_KEY] ||
          env[HTTP_METHOD_OVERRIDE_HEADER]
        method = method.to_s.upcase
        if HTTP_METHODS.include?(method)
          env[&quot;rack.methodoverride.original_method&quot;] = env[&quot;REQUEST_METHOD&quot;]
          env[&quot;REQUEST_METHOD&quot;] = method
        end
      end

      @app.call(env)
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see it's not a complicated bit of code so the way you
build your JSON request is probably triggering the error. I think
previously in the pre-Rack days the _method could either be in the
query or the form data and that tends to catch people out.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-07T04:56:52+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">1464</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2010-07-07T04:56:55+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">17</version>
      <user-name>Andrew White</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-20T06:43:37+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">1464</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2010-08-20T06:43:40+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">18</version>
      <user-name>Andrew White</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:59:43+00:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- 
:state: needs-more-info
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">1464</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2011-02-02T18:49:59+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">19</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:59:44+00:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">1464</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2011-02-02T18:50:26+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">20</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Our online shop can meet all the demands.It is the best source of buying Cheap 
&lt;a href=&quot;http://www.jerseysforsales.com&quot;&gt;NHL jerseys&lt;/a&gt; where you will come across unbelievable surprise. We have a big variety of jersey on sale in different styles and colors.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Our online shop can meet all the demands.It is the best source
of buying Cheap&lt;br&gt;
&lt;a href=&quot;http://www.jerseysforsales.com&quot;&gt;NHL jerseys&lt;/a&gt; where you
will come across unbelievable surprise. We have a big variety of
jersey on sale in different styles and colors.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-09T03:25:03+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">1464</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2011-04-09T23:41:50+01:00</updated-at>
      <user-id type="integer">144925</user-id>
      <version type="integer">21</version>
      <user-name>jerseysforsales</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is still an issue with 3.0.6 and query parameters with _method=put for ajax requests.  I just ran into this today with porting 2.x code to the 3.x version of a site.  using jQuery.post to a URL that includes ?_mthod=put&amp;... does not get treated as a PUT request, but as a POST.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is still an issue with 3.0.6 and query parameters with
&lt;em&gt;method=put for ajax requests. I just ran into this today with
porting 2.x code to the 3.x version of a site. using jQuery.post to
a URL that includes ?&lt;/em&gt;mthod=put&amp;amp;... does not get treated as
a PUT request, but as a POST.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-25T19:33:25+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">1464</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2011-04-25T19:33:51+01:00</updated-at>
      <user-id type="integer">20548</user-id>
      <version type="integer">22</version>
      <user-name>Michael Latta</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>By changing the call from $.post to $.ajax with type 'PUT' this seems to resolve the issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;By changing the call from $.post to $.ajax with type 'PUT' this
seems to resolve the issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-25T20:02:46+01:00</created-at>
      <creator-id type="integer">23653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2289</number>
      <permalink>_methodput-ignored-for-xhr-and-xml-requests</permalink>
      <priority type="integer">1464</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>method middleware request xml</tag>
      <title>_method=put ignored for xhr and xml requests</title>
      <updated-at type="datetime">2011-04-25T20:03:09+01:00</updated-at>
      <user-id type="integer">20548</user-id>
      <version type="integer">23</version>
      <user-name>Michael Latta</user-name>
      <creator-name>Greg DeVore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2289</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5871de0f97f4eec5cc936b3f5b4612ed504ed149</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-03-19T01:29:57+00:00</created-at>
      <filename>put_method_in_query_params.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">101556</id>
      <size type="integer">1113</size>
      <uploader-id type="integer">23653</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/101556/put_method_in_query_params.diff</url>
    </attachment>
  </attachments>
</ticket>
