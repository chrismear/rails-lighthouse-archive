<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-15T23:51:24+01:00</created-at>
  <creator-id type="integer">28420</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2502</number>
  <permalink>patch-arbase-reverse-find_in_batches</permalink>
  <priority type="integer">1648</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>active_record batches enhancement patch</tag>
  <title>[patch] AR::Base Reverse find_in_batches.</title>
  <updated-at type="datetime">2009-08-08T03:22:31+01:00</updated-at>
  <user-id type="integer">141</user-id>
  <version type="integer">5</version>
  <user-name>Michael Koziarski</user-name>
  <creator-name>Tom Lea</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2502</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I wanted to find the most recent 200 items that matched a function (could not be done in the DB). Hits where fairly sparse, so it could mean scanning the whole database (millions of rows), and still not hitting that magic 200.

find_each fitted the bill perfectly.

Apart from it would only work in ascending order.

So I monkey patched find_in_batches, it worked, I was happy.

I wanted others to be happy, so I did a patch, and made it respect limits too.

Anyone fancy taking it for a test drive? Is this useful to anyone but me?

Thanks
   - Tom

(patch was against 2-3-stable)</original-body>
  <latest-body>I wanted to find the most recent 200 items that matched a function (could not be done in the DB). Hits where fairly sparse, so it could mean scanning the whole database (millions of rows), and still not hitting that magic 200.

find_each fitted the bill perfectly.

Apart from it would only work in ascending order.

So I monkey patched find_in_batches, it worked, I was happy.

I wanted others to be happy, so I did a patch, and made it respect limits too.

Anyone fancy taking it for a test drive? Is this useful to anyone but me?

Thanks
   - Tom

(patch was against 2-3-stable)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I wanted to find the most recent 200 items that matched a
function (could not be done in the DB). Hits where fairly sparse,
so it could mean scanning the whole database (millions of rows),
and still not hitting that magic 200.&lt;/p&gt;
&lt;p&gt;find_each fitted the bill perfectly.&lt;/p&gt;
&lt;p&gt;Apart from it would only work in ascending order.&lt;/p&gt;
&lt;p&gt;So I monkey patched find_in_batches, it worked, I was happy.&lt;/p&gt;
&lt;p&gt;I wanted others to be happy, so I did a patch, and made it
respect limits too.&lt;/p&gt;
&lt;p&gt;Anyone fancy taking it for a test drive? Is this useful to
anyone but me?&lt;/p&gt;
&lt;p&gt;Thanks - Tom&lt;/p&gt;
&lt;p&gt;(patch was against 2-3-stable)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I wanted to find the most recent 200 items that matched a function (could not be done in the DB). Hits where fairly sparse, so it could mean scanning the whole database (millions of rows), and still not hitting that magic 200.

find_each fitted the bill perfectly.

Apart from it would only work in ascending order.

So I monkey patched find_in_batches, it worked, I was happy.

I wanted others to be happy, so I did a patch, and made it respect limits too.

Anyone fancy taking it for a test drive? Is this useful to anyone but me?

Thanks
   - Tom

(patch was against 2-3-stable)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I wanted to find the most recent 200 items that matched a
function (could not be done in the DB). Hits where fairly sparse,
so it could mean scanning the whole database (millions of rows),
and still not hitting that magic 200.&lt;/p&gt;
&lt;p&gt;find_each fitted the bill perfectly.&lt;/p&gt;
&lt;p&gt;Apart from it would only work in ascending order.&lt;/p&gt;
&lt;p&gt;So I monkey patched find_in_batches, it worked, I was happy.&lt;/p&gt;
&lt;p&gt;I wanted others to be happy, so I did a patch, and made it
respect limits too.&lt;/p&gt;
&lt;p&gt;Anyone fancy taking it for a test drive? Is this useful to
anyone but me?&lt;/p&gt;
&lt;p&gt;Thanks - Tom&lt;/p&gt;
&lt;p&gt;(patch was against 2-3-stable)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-15T23:51:25+01:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2502</number>
      <permalink>patch-arbase-reverse-find_in_batches</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record batches enhancement patch</tag>
      <title>[patch] AR::Base Reverse find_in_batches.</title>
      <updated-at type="datetime">2009-04-15T23:51:29+01:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">1</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Tom Lea</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2502</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-06T13:46:25+01:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_record batches enhancement patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2502</number>
      <permalink>patch-arbase-reverse-find_in_batches</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record batches bugmash enhancement patch</tag>
      <title>[patch] AR::Base Reverse find_in_batches.</title>
      <updated-at type="datetime">2009-08-06T13:46:26+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">2</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Tom Lea</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2502</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>i see the point of the order thing, but not of the limit - there is already a batch size ?

tested with mysql - the tests run, but i would add test with :order =&gt; :asc too.  I know that's the default too, but someone's bound to specify it if the option exists (in the foolproof category).

tested the (only slightly) modified patch with 
mysql
postgresql
sqlite3

with ruby1.8.6

for ruby1.9.1:
activerecord/lib/active_record/attribute_methods/read.rb:15:in `undef_method': undefined method `id' for class `ActiveRecord::Base' (NameError)
probably due to something else, and it occurs with all above dbs.</body>
      <body-html>&lt;div&gt;&lt;p&gt;i see the point of the order thing, but not of the limit - there
is already a batch size ?&lt;/p&gt;
&lt;p&gt;tested with mysql - the tests run, but i would add test with
:order =&amp;gt; :asc too. I know that's the default too, but someone's
bound to specify it if the option exists (in the foolproof
category).&lt;/p&gt;
&lt;p&gt;tested the (only slightly) modified patch with&lt;br&gt;
mysql&lt;br&gt;
postgresql&lt;br&gt;
sqlite3&lt;/p&gt;
&lt;p&gt;with ruby1.8.6&lt;/p&gt;
&lt;p&gt;for ruby1.9.1:&lt;br&gt;
activerecord/lib/active_record/attribute_methods/read.rb:15:in
&lt;code&gt;undef_method': undefined method&lt;/code&gt;id' for class
&lt;code&gt;ActiveRecord::Base' (NameError)&amp;lt;br/&amp;gt; probably due to
something else, and it occurs with all above dbs.&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-07T21:55:52+01:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2502</number>
      <permalink>patch-arbase-reverse-find_in_batches</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record batches bugmash enhancement patch</tag>
      <title>[patch] AR::Base Reverse find_in_batches.</title>
      <updated-at type="datetime">2009-08-07T21:55:58+01:00</updated-at>
      <user-id type="integer">36650</user-id>
      <version type="integer">3</version>
      <user-name>Elise Huard</user-name>
      <creator-name>Tom Lea</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2502</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This function is deliberately limited to primary_key order because those values don't change.  If you order by title and manipulate the title in your block, you'll get nonsense / repeated options back.

It's only intended for iterating over the whole collection in primary_key order.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This function is deliberately limited to primary_key order
because those values don't change. If you order by title and
manipulate the title in your block, you'll get nonsense / repeated
options back.&lt;/p&gt;
&lt;p&gt;It's only intended for iterating over the whole collection in
primary_key order.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T03:22:15+01:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2502</number>
      <permalink>patch-arbase-reverse-find_in_batches</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_record batches bugmash enhancement patch</tag>
      <title>[patch] AR::Base Reverse find_in_batches.</title>
      <updated-at type="datetime">2009-08-08T03:22:20+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Tom Lea</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2502</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T03:22:25+01:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_record batches bugmash enhancement patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2502</number>
      <permalink>patch-arbase-reverse-find_in_batches</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_record batches enhancement patch</tag>
      <title>[patch] AR::Base Reverse find_in_batches.</title>
      <updated-at type="datetime">2009-08-08T03:22:31+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">5</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Tom Lea</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2502</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>ccf1bb264403084c18c9fbfb289af783d2112b9b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-15T23:51:25+01:00</created-at>
      <filename>find_in_batches_sorting.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">111681</id>
      <size type="integer">10001</size>
      <uploader-id type="integer">28420</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/111681/find_in_batches_sorting.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>499110e6133f541dcf537ccffb8134eaca5b50e2</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-07T21:55:52+01:00</created-at>
      <filename>find_in_batches_sorting.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">238772</id>
      <size type="integer">11014</size>
      <uploader-id type="integer">36650</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/238772/find_in_batches_sorting.diff</url>
    </attachment>
  </attachments>
</ticket>
