<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-24T16:15:21+00:00</created-at>
  <creator-id type="integer">138600</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6466</number>
  <permalink>has_many-through-before_destroy-is-not-triggered</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>has_many :through, before_destroy is not triggered</title>
  <updated-at type="datetime">2011-02-24T16:15:23+00:00</updated-at>
  <user-id type="integer">138600</user-id>
  <version type="integer">1</version>
  <user-name>Bente Pieck</user-name>
  <creator-name>Bente Pieck</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6466</url>
  <priority-name nil="true"></priority-name>
  <original-body>Running rails 3.0.4
My modelstructure is something like:

    class Domain &lt; ActiveRecord::Base
      has_many :domain_server_connectors, :dependent =&gt; :destroy
      has_many :servers, :through =&gt; :domain_server_connectors
    end
    
    class Server &lt; ActiveRecord::Base
      has_many :domain_server_connectors, :dependent =&gt; :destroy
      has_many :domains, :through =&gt; :domain_server_connectors
    end
    
    class DomainServerConnector &lt; ActiveRecord::Base
      belongs_to :domain
      belongs_to :server
      before_save :create_something
      before_destroy :destroy_something
    end



if I use
@domain.servers &lt;&lt; server :create_something will be triggered

@domain.servers.delete server
the domain_server_connector between is deleted, but the before_destroy callback :destroy_something is not triggered
the same with @domain.server_ids = 
All new ids will trigger :create_something, all missing ids won't trigger :destroy_something (but domain_server_connector will be deleted correctly)

if I use
@domain.domain_server_connectors.delete DomainServerConnector.find_by_domain_id_and_server_id(@domain.id, server.id)
the callback is triggered.

I think it should be triggered in both cases, like the before_save-callback is triggered.</original-body>
  <latest-body>Running rails 3.0.4
My modelstructure is something like:

    class Domain &lt; ActiveRecord::Base
      has_many :domain_server_connectors, :dependent =&gt; :destroy
      has_many :servers, :through =&gt; :domain_server_connectors
    end
    
    class Server &lt; ActiveRecord::Base
      has_many :domain_server_connectors, :dependent =&gt; :destroy
      has_many :domains, :through =&gt; :domain_server_connectors
    end
    
    class DomainServerConnector &lt; ActiveRecord::Base
      belongs_to :domain
      belongs_to :server
      before_save :create_something
      before_destroy :destroy_something
    end



if I use
@domain.servers &lt;&lt; server :create_something will be triggered

@domain.servers.delete server
the domain_server_connector between is deleted, but the before_destroy callback :destroy_something is not triggered
the same with @domain.server_ids = 
All new ids will trigger :create_something, all missing ids won't trigger :destroy_something (but domain_server_connector will be deleted correctly)

if I use
@domain.domain_server_connectors.delete DomainServerConnector.find_by_domain_id_and_server_id(@domain.id, server.id)
the callback is triggered.

I think it should be triggered in both cases, like the before_save-callback is triggered.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Running rails 3.0.4&lt;br&gt;
My modelstructure is something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Domain &amp;lt; ActiveRecord::Base
  has_many :domain_server_connectors, :dependent =&amp;gt; :destroy
  has_many :servers, :through =&amp;gt; :domain_server_connectors
end

class Server &amp;lt; ActiveRecord::Base
  has_many :domain_server_connectors, :dependent =&amp;gt; :destroy
  has_many :domains, :through =&amp;gt; :domain_server_connectors
end

class DomainServerConnector &amp;lt; ActiveRecord::Base
  belongs_to :domain
  belongs_to :server
  before_save :create_something
  before_destroy :destroy_something
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;if I use&lt;br&gt;
@domain.servers &amp;lt;&amp;lt; server :create_something will be
triggered&lt;/p&gt;
&lt;p&gt;@domain.servers.delete server the domain_server_connector
between is deleted, but the before_destroy callback
:destroy_something is not triggered&lt;br&gt;
the same with @domain.server_ids =&lt;br&gt;
All new ids will trigger :create_something, all missing ids won't
trigger :destroy_something (but domain_server_connector will be
deleted correctly)&lt;/p&gt;
&lt;p&gt;if I use&lt;br&gt;
@domain.domain_server_connectors.delete
DomainServerConnector.find_by_domain_id_and_server_id(@domain.id,
server.id) the callback is triggered.&lt;/p&gt;
&lt;p&gt;I think it should be triggered in both cases, like the
before_save-callback is triggered.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Running rails 3.0.4
My modelstructure is something like:

    class Domain &lt; ActiveRecord::Base
      has_many :domain_server_connectors, :dependent =&gt; :destroy
      has_many :servers, :through =&gt; :domain_server_connectors
    end
    
    class Server &lt; ActiveRecord::Base
      has_many :domain_server_connectors, :dependent =&gt; :destroy
      has_many :domains, :through =&gt; :domain_server_connectors
    end
    
    class DomainServerConnector &lt; ActiveRecord::Base
      belongs_to :domain
      belongs_to :server
      before_save :create_something
      before_destroy :destroy_something
    end



if I use
@domain.servers &lt;&lt; server :create_something will be triggered

@domain.servers.delete server
the domain_server_connector between is deleted, but the before_destroy callback :destroy_something is not triggered
the same with @domain.server_ids = 
All new ids will trigger :create_something, all missing ids won't trigger :destroy_something (but domain_server_connector will be deleted correctly)

if I use
@domain.domain_server_connectors.delete DomainServerConnector.find_by_domain_id_and_server_id(@domain.id, server.id)
the callback is triggered.

I think it should be triggered in both cases, like the before_save-callback is triggered.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Running rails 3.0.4&lt;br&gt;
My modelstructure is something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Domain &amp;lt; ActiveRecord::Base
  has_many :domain_server_connectors, :dependent =&amp;gt; :destroy
  has_many :servers, :through =&amp;gt; :domain_server_connectors
end

class Server &amp;lt; ActiveRecord::Base
  has_many :domain_server_connectors, :dependent =&amp;gt; :destroy
  has_many :domains, :through =&amp;gt; :domain_server_connectors
end

class DomainServerConnector &amp;lt; ActiveRecord::Base
  belongs_to :domain
  belongs_to :server
  before_save :create_something
  before_destroy :destroy_something
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;if I use&lt;br&gt;
@domain.servers &amp;lt;&amp;lt; server :create_something will be
triggered&lt;/p&gt;
&lt;p&gt;@domain.servers.delete server the domain_server_connector
between is deleted, but the before_destroy callback
:destroy_something is not triggered&lt;br&gt;
the same with @domain.server_ids =&lt;br&gt;
All new ids will trigger :create_something, all missing ids won't
trigger :destroy_something (but domain_server_connector will be
deleted correctly)&lt;/p&gt;
&lt;p&gt;if I use&lt;br&gt;
@domain.domain_server_connectors.delete
DomainServerConnector.find_by_domain_id_and_server_id(@domain.id,
server.id) the callback is triggered.&lt;/p&gt;
&lt;p&gt;I think it should be triggered in both cases, like the
before_save-callback is triggered.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-24T16:15:21+00:00</created-at>
      <creator-id type="integer">138600</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6466</number>
      <permalink>has_many-through-before_destroy-is-not-triggered</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has_many :through, before_destroy is not triggered</title>
      <updated-at type="datetime">2011-02-24T16:15:23+00:00</updated-at>
      <user-id type="integer">138600</user-id>
      <version type="integer">1</version>
      <user-name>Bente Pieck</user-name>
      <creator-name>Bente Pieck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6466</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
