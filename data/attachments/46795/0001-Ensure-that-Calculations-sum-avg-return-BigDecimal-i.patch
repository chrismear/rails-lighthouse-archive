From 06f1bfb061957e61d5f050d4354cebb9061ac557 Mon Sep 17 00:00:00 2001
From: Marcus Crafter <crafterm@redartisan.com>
Date: Thu, 18 Sep 2008 17:38:13 +1000
Subject: [PATCH] Ensure that Calculations sum/avg return BigDecimal instances rather than Floats. Update tests to validate.

---
 activerecord/lib/active_record/calculations.rb |    4 ++--
 activerecord/test/cases/calculations_test.rb   |   10 +++++++---
 2 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/activerecord/lib/active_record/calculations.rb b/activerecord/lib/active_record/calculations.rb
index 80992dd..95aef48 100644
--- a/activerecord/lib/active_record/calculations.rb
+++ b/activerecord/lib/active_record/calculations.rb
@@ -285,8 +285,8 @@ module ActiveRecord
           operation = operation.to_s.downcase
           case operation
             when 'count' then value.to_i
-            when 'sum'   then value =~ /\./ ? value.to_f : value.to_i
-            when 'avg'   then value && value.to_f
+            when 'sum'   then value =~ /\./ ? value.to_d : value.to_i
+            when 'avg'   then value && value.to_d
             else column ? column.type_cast(value) : value
           end
         end
diff --git a/activerecord/test/cases/calculations_test.rb b/activerecord/test/cases/calculations_test.rb
index 754fd58..10a7e58 100644
--- a/activerecord/test/cases/calculations_test.rb
+++ b/activerecord/test/cases/calculations_test.rb
@@ -13,13 +13,17 @@ class CalculationsTest < ActiveRecord::TestCase
   fixtures :companies, :accounts, :topics
 
   def test_should_sum_field
-    assert_equal 318, Account.sum(:credit_limit)
+    NumericData.create(:bank_balance => 19.83)
+    NumericData.create(:bank_balance => 25.61)
+    value = NumericData.sum(:bank_balance)
+    assert_kind_of BigDecimal, value
+    assert_equal BigDecimal.new('45.44'), value
   end
 
   def test_should_average_field
     value = Account.average(:credit_limit)
-    assert_kind_of Float, value
-    assert_in_delta 53.0, value, 0.001
+    assert_kind_of BigDecimal, value
+    assert_equal BigDecimal.new('53.0'), value
   end
 
   def test_should_return_nil_as_average
-- 
1.6.0.1

