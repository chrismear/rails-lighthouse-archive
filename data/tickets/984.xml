<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-06T17:24:59+01:00</created-at>
  <creator-id type="integer">17949</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">984</number>
  <permalink>make-it-possible-to-alias-delegation-methods</permalink>
  <priority type="integer">426</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activesupport patch</tag>
  <title>Make it possible to prefix delegation methods</title>
  <updated-at type="datetime">2008-10-19T12:44:00+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">19</version>
  <user-name>Repository</user-name>
  <creator-name>Daniel Schierbeck</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This patch allows one give delegate methods a different name than the one it's delegating for, e.g.

  class Invoice
    attr_accessor :client
    delegate :name, :to =&gt; :client, :as =&gt; :client_name
  end

which would create `Invoice#client_name`.</original-body>
  <latest-body>This patch allows one give delegate methods a different name than the one it's delegating for, e.g.

  class Invoice
    attr_accessor :client
    delegate :name, :to =&gt; :client, :as =&gt; :client_name
  end

which would create `Invoice#client_name`.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This patch allows one give delegate methods a different name
than the one it's delegating for, e.g.&lt;/p&gt;
&lt;p&gt;class Invoice&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;attr_accessor :client
delegate :name, :to =&amp;gt; :client, :as =&amp;gt; :client_name
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;which would create &lt;code&gt;Invoice#client_name&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch allows one to prefix delegation methods, either with a custom string or with the name of the delegation target.

    class Invoice

      attr_accessor :client
      
      # Creates #client_name and #client_address
      delegate :name, :address :to =&gt; :client, :prefix =&gt; true

      # Creates #customer_name and #customer_address
      delegate :name, :address :to =&gt; :client, :prefix =&gt; :customer

    end</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch allows one to prefix delegation methods, either with
a custom string or with the name of the delegation target.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Invoice

  attr_accessor :client

  # Creates #client_name and #client_address
  delegate :name, :address :to =&amp;gt; :client, :prefix =&amp;gt; true

  # Creates #customer_name and #customer_address
  delegate :name, :address :to =&amp;gt; :client, :prefix =&amp;gt; :customer

end
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-06T17:24:59+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-10-03T16:00:19+01:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">1</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It appears that your patch to add :as doesn't add support for when multiple methods are being delegated to an object, such as

@@@
delegate :name, :address, :to =&gt; :client
@@@

Do you think we should account for this case to make this patch/feature more complete?</body>
      <body-html>&lt;div&gt;&lt;p&gt;It appears that your patch to add :as doesn't add support for
when multiple methods are being delegated to an object, such as&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
delegate :name, :address, :to =&amp;gt; :client
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Do you think we should account for this case to make this
patch/feature more complete?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-13T19:54:50+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-13T19:55:00+01:00</updated-at>
      <user-id type="integer">7638</user-id>
      <version type="integer">2</version>
      <user-name>Chad Pytel</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Don't really think this is a very useful feature. I might as well just write &quot;def client_name;client.name;end&quot;. delegate is useful as a shortcut when you are delegating a bunch of methods to the same object.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Don't really think this is a very useful feature. I might as
well just write &quot;def client_name;client.name;end&quot;. delegate is
useful as a shortcut when you are delegating a bunch of methods to
the same object.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-13T20:22:06+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-13T20:22:15+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I ran into this when I was exploring how best to fix Law of Demeter violations.  While you can certainly do &quot;def client_name;client.name;end&quot;, your model ends up being littered with these methods, one for each method you're delegating.

I'd propose that in real world usage, the problem you're trying to solve with this :as option is to resolve either ambiguity in naming, or actual conflicts in naming.  I think, therefore, that a better solution might be instead of :as, to add something like a :prefix option (that defaults to false for backwards compatibility) that will take either a boolean on a string/symbol, for the following functionality.

@@@
class Invoice
  belongs_to :client
  delegate :name, :to =&gt; :client, :prefix =&gt; true
end
@@@

results in

@@@
Invoice#client_name
@@@

This would work for delegating multiple methods:

@@@
class Invoice
  belongs_to :client
  delegate :name, :street, :to =&gt; :client, :prefix =&gt; true
end
@@@

results in

@@@
Invoice#client_name
Invoice#client_street
@@@

and finally, I could also provide a custom prefix

@@@
class Invoice
  belongs_to :client
  delegate :name, :street, :to =&gt; :client, :prefix =&gt; :customer
end
@@@

results in

@@@
Invoice#customer_name
Invoice#customer_street
@@@

If it weren't for breaking code that's already using delegate, I'd say that using :prefix =&gt; true would actually be a sensible default.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I ran into this when I was exploring how best to fix Law of
Demeter violations. While you can certainly do &quot;def
client_name;client.name;end&quot;, your model ends up being littered
with these methods, one for each method you're delegating.&lt;/p&gt;
&lt;p&gt;I'd propose that in real world usage, the problem you're trying
to solve with this :as option is to resolve either ambiguity in
naming, or actual conflicts in naming. I think, therefore, that a
better solution might be instead of :as, to add something like a
:prefix option (that defaults to false for backwards compatibility)
that will take either a boolean on a string/symbol, for the
following functionality.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class Invoice
  belongs_to :client
  delegate :name, :to =&amp;gt; :client, :prefix =&amp;gt; true
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;results in&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
Invoice#client_name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This would work for delegating multiple methods:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class Invoice
  belongs_to :client
  delegate :name, :street, :to =&amp;gt; :client, :prefix =&amp;gt; true
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;results in&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
Invoice#client_name
Invoice#client_street
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and finally, I could also provide a custom prefix&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class Invoice
  belongs_to :client
  delegate :name, :street, :to =&amp;gt; :client, :prefix =&amp;gt; :customer
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;results in&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
Invoice#customer_name
Invoice#customer_street
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If it weren't for breaking code that's already using delegate,
I'd say that using :prefix =&amp;gt; true would actually be a sensible
default.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-13T20:34:06+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-13T20:34:15+01:00</updated-at>
      <user-id type="integer">7638</user-id>
      <version type="integer">4</version>
      <user-name>Chad Pytel</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>:prefix does sound like a good idea.</body>
      <body-html>&lt;div&gt;&lt;p&gt;:prefix does sound like a good idea.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-13T20:36:18+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-13T20:36:28+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Chad's approach seems a lot more sensible than using the `:to` option. Is someone working on this? Otherwise, I could give it a stab later this week.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Chad's approach seems a lot more sensible than using the
&lt;code&gt;:to&lt;/code&gt; option. Is someone working on this? Otherwise, I
could give it a stab later this week.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-14T21:25:47+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-14T21:26:00+01:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">6</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Daniel, I think you mean more sensible than the @@@:as@@@ option?  If so, I probably won't have a chance to do this soon, so feel free to take a go at it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Daniel, I think you mean more sensible than the @@@:as@@@
option? If so, I probably won't have a chance to do this soon, so
feel free to take a go at it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-15T12:41:38+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-15T12:43:11+01:00</updated-at>
      <user-id type="integer">7638</user-id>
      <version type="integer">7</version>
      <user-name>Chad Pytel</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've added tests and an implementation of what has been discussed here.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've added tests and an implementation of what has been
discussed here.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-21T14:01:32+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activesupport patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-21T14:01:35+01:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">8</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Found out I could have it all in one file, sorry about the patch spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Found out I could have it all in one file, sorry about the patch
spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-21T14:07:46+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-21T14:07:47+01:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">9</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Added documentation and simplified the implementation a bit.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Added documentation and simplified the implementation a bit.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-21T14:31:56+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-21T14:31:57+01:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">10</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>One question though -- what if the methods are delegated to something other than a method? A custom prefix still makes sense, but I'm not sure what the `true` value should do. Perhaps disallow it in such a case?</body>
      <body-html>&lt;div&gt;&lt;p&gt;One question though -- what if the methods are delegated to
something other than a method? A custom prefix still makes sense,
but I'm not sure what the &lt;code&gt;true&lt;/code&gt; value should do.
Perhaps disallow it in such a case?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-21T14:34:36+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-21T14:34:39+01:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">11</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm not sure I follow your question, or see what using the prefix of :to doesn't work in that case?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure I follow your question, or see what using the
prefix of :to doesn't work in that case?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-22T14:47:00+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-22T14:47:06+01:00</updated-at>
      <user-id type="integer">7638</user-id>
      <version type="integer">12</version>
      <user-name>Chad Pytel</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Chad: here's a scenario:

    class Invoice
      
      def initialize(client)
        @client = client
      end
      
      delegate :name, :address, :to =&gt; :@client, :prefix =&gt; true
      
    end

In this case, what method names should be generated? `#client_name` and `#client_address`? What if the value of `:to` was a constant, e.g. `SOME_CLIENT` - should we lowercase the constant name?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Chad: here's a scenario:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Invoice

  def initialize(client)
    @client = client
  end

  delegate :name, :address, :to =&amp;gt; :@client, :prefix =&amp;gt; true

end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In this case, what method names should be generated?
&lt;code&gt;#client_name&lt;/code&gt; and &lt;code&gt;#client_address&lt;/code&gt;? What if
the value of &lt;code&gt;:to&lt;/code&gt; was a constant, e.g.
&lt;code&gt;SOME_CLIENT&lt;/code&gt; - should we lowercase the constant
name?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-22T17:12:01+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-22T17:12:03+01:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">13</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I created a patch which was a duplicate of this one (http://rails.lighthouseapp.com/projects/8994/tickets/1080-patch-more-options-to-make-delegate-more-flexible), except for the :allow_nil option, which covers a regular pattern:

@@@ ruby
def name
  person &amp;&amp; person.name
end
@@@

Just in case you find it useful, I added it to this one.

@@@ ruby
  # If the object in which you delegate can be nil, you may want to use the
  # :allow_nil option. In that case, it returns nil instead of raising a
  # NoMethodError exception:
  #
  #  class Foo
  #    def initialize(bar = nil)
  #      @bar = bar
  #    end
  #    delegate :zoo, :to =&gt; :bar
  #  end
  #  
  #  Foo.new.zoo   # raises NoMethodError exception (you called nil.zoo)
  #  
  #  class Foo
  #    def initialize(bar = nil)
  #      @bar = bar
  #    end
  #    delegate :zoo, :to =&gt; :bar, :allow_nil =&gt; true
  #  end
  #  
  #  Foo.new.zoo   # returns nil
@@@

By the way, I'm not sure :allow_nil is the right name for this option, have you any suggestion?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I created a patch which was a duplicate of this one (&lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/1080-patch-more-options-to-make-delegate-more-flexible)&quot;&gt;http://rails.lighthouseapp.com/p...&lt;/a&gt;,
except for the :allow_nil option, which covers a regular
pattern:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
def name
  person &amp;amp;&amp;amp; person.name
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Just in case you find it useful, I added it to this one.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  # If the object in which you delegate can be nil, you may want to use the
  # :allow_nil option. In that case, it returns nil instead of raising a
  # NoMethodError exception:
  #
  #  class Foo
  #    def initialize(bar = nil)
  #      @bar = bar
  #    end
  #    delegate :zoo, :to =&amp;gt; :bar
  #  end
  #
  #  Foo.new.zoo   # raises NoMethodError exception (you called nil.zoo)
  #
  #  class Foo
  #    def initialize(bar = nil)
  #      @bar = bar
  #    end
  #    delegate :zoo, :to =&amp;gt; :bar, :allow_nil =&amp;gt; true
  #  end
  #
  #  Foo.new.zoo   # returns nil
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By the way, I'm not sure :allow_nil is the right name for this
option, have you any suggestion?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-24T23:19:36+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-24T23:19:40+01:00</updated-at>
      <user-id type="integer">19153</user-id>
      <version type="integer">14</version>
      <user-name>porras</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry, I uploaded the wrong patch. This one is right.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, I uploaded the wrong patch. This one is right.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-24T23:22:06+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-24T23:22:11+01:00</updated-at>
      <user-id type="integer">19153</user-id>
      <version type="integer">15</version>
      <user-name>porras</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>porras: I like your patch, but I think it should be separated from this one, so that comments and disagreements can be better targeted. These are effectively two different change propositions, and should be handled as such. You should add your change, with mine extracted, on top of the master branch, and submit it as a new ticket. I'd very much like to review and vote for your change. but keeping matters separate is always a good things, especially when your change doesn't depend one mine.</body>
      <body-html>&lt;div&gt;&lt;p&gt;porras: I like your patch, but I think it should be separated
from this one, so that comments and disagreements can be better
targeted. These are effectively two different change propositions,
and should be handled as such. You should add your change, with
mine extracted, on top of the master branch, and submit it as a new
ticket. I'd very much like to review and vote for your change. but
keeping matters separate is always a good things, especially when
your change doesn't depend one mine.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-25T10:51:53+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-25T10:51:58+01:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">16</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>daniel: you're completely right. I've already done that (http://rails.lighthouseapp.com/projects/8994/tickets/1127-allow_nil-option-for-delegate), and deleted my patch from this ticket. I'm sorry for the inconvenience =:-S</body>
      <body-html>&lt;div&gt;&lt;p&gt;daniel: you're completely right. I've already done that
(&lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/1127-allow_nil-option-for-delegate)&quot;&gt;http://rails.lighthouseapp.com/p...&lt;/a&gt;,
and deleted my patch from this ticket. I'm sorry for the
inconvenience =:-S&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-29T12:46:39+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to alias delegation methods</title>
      <updated-at type="datetime">2008-09-29T12:46:43+01:00</updated-at>
      <user-id type="integer">19153</user-id>
      <version type="integer">17</version>
      <user-name>porras</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-11T20:02:29+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Make it possible to alias delegation methods
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to prefix delegation methods</title>
      <updated-at type="datetime">2008-10-11T20:02:31+01:00</updated-at>
      <user-id type="integer">17949</user-id>
      <version type="integer">18</version>
      <user-name>Daniel Schierbeck</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [de0ed534f6055c365d05c685582edeceef1eafa6]) Simplified the implementation of the :prefix option.

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
[#984 state:committed]
http://github.com/rails/rails/commit/de0ed534f6055c365d05c685582edeceef1eafa6</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [de0ed534f6055c365d05c685582edeceef1eafa6]) Simplified the
implementation of the :prefix option.&lt;/p&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt; [&lt;a href=&quot;/projects/8994/tickets/984&quot; title=&quot;Ticket #984&quot;&gt;#984&lt;/a&gt;
state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/de0ed534f6055c365d05c685582edeceef1eafa6&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-19T12:43:54+01:00</created-at>
      <creator-id type="integer">17949</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">984</number>
      <permalink>make-it-possible-to-alias-delegation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activesupport patch</tag>
      <title>Make it possible to prefix delegation methods</title>
      <updated-at type="datetime">2008-10-19T12:44:00+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">19</version>
      <user-name>Repository</user-name>
      <creator-name>Daniel Schierbeck</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/984</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1afdcaa969b0ee75ef2f7c7ce194e0195a2dd5da</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-21T14:31:56+01:00</created-at>
      <filename>delegation-prefix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">47472</id>
      <size type="integer">9556</size>
      <uploader-id type="integer">17949</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/47472/delegation-prefix.diff</url>
    </attachment>
  </attachments>
</ticket>
