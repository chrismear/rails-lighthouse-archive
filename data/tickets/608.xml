<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-13T04:14:27+01:00</created-at>
  <creator-id type="integer">24191</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">608</number>
  <permalink>dirty-checking-is-broken-for-string-join</permalink>
  <priority type="integer">96</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activerecord</tag>
  <title>Dirty checking is broken for string join</title>
  <updated-at type="datetime">2008-07-31T21:00:57+01:00</updated-at>
  <user-id type="integer">6262</user-id>
  <version type="integer">10</version>
  <user-name>Zach Holman</user-name>
  <creator-name>quake wang</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/608</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Rails 2.1:
create_table :topics do |t|
  t.string :title
end

class Topic &lt; ActiveRecord::Base
end

in console:
&gt;&gt; t = Topic.find(1)
&gt;&gt; t.title = t.title &lt;&lt; &quot;new&quot;
&gt;&gt; t.changed?
=&gt; false</original-body>
  <latest-body>Rails 2.1:
create_table :topics do |t|
  t.string :title
end

class Topic &lt; ActiveRecord::Base
end

in console:
&gt;&gt; t = Topic.find(1)
&gt;&gt; t.title = t.title &lt;&lt; &quot;new&quot;
&gt;&gt; t.changed?
=&gt; false</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Rails 2.1:
&lt;/p&gt;&lt;p&gt;
create_table :topics do |t|
&lt;/p&gt;&lt;p&gt;
t.string :title
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Topic &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
in console:
&lt;/p&gt;&lt;p&gt;
&gt;&gt; t = Topic.find(1)
&lt;/p&gt;&lt;p&gt;
&gt;&gt; t.title = t.title &amp;lt;&amp;lt; &quot;new&quot;
&lt;/p&gt;&lt;p&gt;
&gt;&gt; t.changed?
&lt;/p&gt;&lt;p&gt;
=&gt; false
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails 2.1:
create_table :topics do |t|
  t.string :title
end

class Topic &lt; ActiveRecord::Base
end

in console:
&gt;&gt; t = Topic.find(1)
&gt;&gt; t.title = t.title &lt;&lt; &quot;new&quot;
&gt;&gt; t.changed?
=&gt; false</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Rails 2.1:
&lt;/p&gt;&lt;p&gt;
create_table :topics do |t|
&lt;/p&gt;&lt;p&gt;
t.string :title
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Topic &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
in console:
&lt;/p&gt;&lt;p&gt;
&gt;&gt; t = Topic.find(1)
&lt;/p&gt;&lt;p&gt;
&gt;&gt; t.title = t.title &amp;lt;&amp;lt; &quot;new&quot;
&lt;/p&gt;&lt;p&gt;
&gt;&gt; t.changed?
&lt;/p&gt;&lt;p&gt;
=&gt; false
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-13T04:14:27+01:00</created-at>
      <creator-id type="integer">24191</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">608</number>
      <permalink>dirty-checking-is-broken-for-string-join</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dirty checking is broken for string join</title>
      <updated-at type="datetime">2008-07-13T04:14:27+01:00</updated-at>
      <user-id type="integer">24191</user-id>
      <version type="integer">1</version>
      <user-name>quake wang</user-name>
      <creator-name>quake wang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/608</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Don't see an easy fix, but a workaround is s/&lt;&lt;/+=/</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Don't see an easy fix, but a workaround is s/&amp;lt;&amp;lt;/+=/
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-14T17:30:25+01:00</created-at>
      <creator-id type="integer">24191</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">608</number>
      <permalink>dirty-checking-is-broken-for-string-join</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dirty checking is broken for string join</title>
      <updated-at type="datetime">2008-07-14T17:30:25+01:00</updated-at>
      <user-id type="integer">19763</user-id>
      <version type="integer">2</version>
      <user-name>Jason Dew</user-name>
      <creator-name>quake wang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/608</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is the same problem as http://rails.lighthouseapp.com/projects/8994/tickets/360-dirty-tracking-on-serialized-columns-is-broken</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This is the same problem as &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/360-dirty-tracking-on-serialized-columns-is-broken&quot;&gt;http://rails.lighthouseapp.com/p...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-14T19:09:54+01:00</created-at>
      <creator-id type="integer">24191</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">608</number>
      <permalink>dirty-checking-is-broken-for-string-join</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dirty checking is broken for string join</title>
      <updated-at type="datetime">2008-07-14T19:09:54+01:00</updated-at>
      <user-id type="integer">19763</user-id>
      <version type="integer">3</version>
      <user-name>Jason Dew</user-name>
      <creator-name>quake wang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/608</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This ticket is invalid.  Dirty checking will only currently work if you replace an attribute with a new value, not edit it in place.

Instead you should do:

@@@ ruby
t = Topic.find(1)
t.title_will_change!
t.title = t.title &lt;&lt; &quot;new&quot;
t.changed?
# =&gt; true
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This ticket is invalid.  Dirty checking will only currently work if you replace an attribute with a new value, not edit it in place.
&lt;/p&gt;&lt;p&gt;
Instead you should do:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;t = Topic.find(1)
t.title_will_change!
t.title = t.title &amp;lt;&amp;lt; &amp;quot;new&amp;quot;
t.changed?
# =&amp;gt; true&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-25T12:26:59+01:00</created-at>
      <creator-id type="integer">24191</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">608</number>
      <permalink>dirty-checking-is-broken-for-string-join</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Dirty checking is broken for string join</title>
      <updated-at type="datetime">2008-07-25T12:26:59+01:00</updated-at>
      <user-id type="integer">14288</user-id>
      <version type="integer">4</version>
      <user-name>Tom Ward</user-name>
      <creator-name>quake wang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/608</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree with Tom. It is known that all changes that don't go through standard assignment with = will not mark the attribute as changed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I agree with Tom. It is known that all changes that don't go through standard assignment with = will not mark the attribute as changed.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-25T14:22:33+01:00</created-at>
      <creator-id type="integer">24191</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;&quot;
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">608</number>
      <permalink>dirty-checking-is-broken-for-string-join</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Dirty checking is broken for string join</title>
      <updated-at type="datetime">2008-07-25T14:22:33+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">5</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>quake wang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/608</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I know will_change can resolve this issue as a temp solution, however, how to explain the inconsistent of string / numeric field?

create_table :topics do |t|
t.string :title
t.integer :score
end 

t = Topic.find(1)
t.title = t.title.contact(33)
t.changed?
# =&gt; false
t.score = t.score.*(33)
t.changed?
# =&gt; true</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I know will_change can resolve this issue as a temp solution, however, how to explain the inconsistent of string / numeric field?
&lt;/p&gt;&lt;p&gt;
create_table :topics do |t|
&lt;/p&gt;&lt;p&gt;
t.string :title
&lt;/p&gt;&lt;p&gt;
t.integer :score
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
t = Topic.find(1)
&lt;/p&gt;&lt;p&gt;
t.title = t.title.contact(33)
&lt;/p&gt;&lt;p&gt;
t.changed?
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
=&gt; false
&lt;/li&gt;&lt;/ol&gt;
&lt;p&gt;
t.score = t.score.*(33)
&lt;/p&gt;&lt;p&gt;
t.changed?
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
=&gt; true
&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-26T02:26:20+01:00</created-at>
      <creator-id type="integer">24191</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">608</number>
      <permalink>dirty-checking-is-broken-for-string-join</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Dirty checking is broken for string join</title>
      <updated-at type="datetime">2008-07-26T02:26:20+01:00</updated-at>
      <user-id type="integer">24191</user-id>
      <version type="integer">6</version>
      <user-name>quake wang</user-name>
      <creator-name>quake wang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/608</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What does t.title.contact(33) do?

If you set the title to the same value it was before, changed? will return false.  
If you set it to a new value, it should return true.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
What does t.title.contact(33) do?
&lt;/p&gt;&lt;p&gt;
If you set the title to the same value it was before, changed? will return false.
&lt;/p&gt;&lt;p&gt;
If you set it to a new value, it should return true.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-26T10:30:10+01:00</created-at>
      <creator-id type="integer">24191</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">608</number>
      <permalink>dirty-checking-is-broken-for-string-join</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Dirty checking is broken for string join</title>
      <updated-at type="datetime">2008-07-26T10:30:10+01:00</updated-at>
      <user-id type="integer">14288</user-id>
      <version type="integer">7</version>
      <user-name>Tom Ward</user-name>
      <creator-name>quake wang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/608</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Patch please.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Patch please.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-26T15:19:14+01:00</created-at>
      <creator-id type="integer">24191</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">608</number>
      <permalink>dirty-checking-is-broken-for-string-join</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord</tag>
      <title>Dirty checking is broken for string join</title>
      <updated-at type="datetime">2008-07-26T15:19:14+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">8</version>
      <user-name>Pratik</user-name>
      <creator-name>quake wang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/608</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've tested this and I can confirm it.

A little something to think about before someone actually spends time on creating a patch that isn't really necessary:

With t.title &lt;&lt; &quot;new&quot;, I would actually think that the title changes. t.title = t.title &lt;&lt; &quot;new&quot; looks intriguing to me because it looks like it does the actual assignment twice. IMO you shouldn't &quot;reassign&quot; the variable when using the &lt;&lt; operator.

What would make sense, though, is having something like t.title = t.title + &quot;new&quot; or its short form, t.title += &quot;new&quot;. Both of them actually work perfectly fine and t.title_changed? returns true.

The important question to ask is whether one should use something misleading like t.title = t.title &lt;&lt; &quot;new&quot; when there's two valid ways around that even look more logical. One is, as I said, t.title += &quot;new&quot; and the other would be to use t.title_will_change! t.title &lt;&lt; &quot;new&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I've tested this and I can confirm it.
&lt;/p&gt;&lt;p&gt;
A little something to think about before someone actually spends time on creating a patch that isn't really necessary:
&lt;/p&gt;&lt;p&gt;
With t.title &amp;lt;&amp;lt; &quot;new&quot;, I would actually think that the title changes. t.title = t.title &amp;lt;&amp;lt; &quot;new&quot; looks intriguing to me because it looks like it does the actual assignment twice. IMO you shouldn't &quot;reassign&quot; the variable when using the &amp;lt;&amp;lt; operator.
&lt;/p&gt;&lt;p&gt;
What would make sense, though, is having something like t.title = t.title + &quot;new&quot; or its short form, t.title += &quot;new&quot;. Both of them actually work perfectly fine and t.title_changed? returns true.
&lt;/p&gt;&lt;p&gt;
The important question to ask is whether one should use something misleading like t.title = t.title &amp;lt;&amp;lt; &quot;new&quot; when there's two valid ways around that even look more logical. One is, as I said, t.title += &quot;new&quot; and the other would be to use t.title_will_change! t.title &amp;lt;&amp;lt; &quot;new&quot;.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-26T15:29:55+01:00</created-at>
      <creator-id type="integer">24191</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">608</number>
      <permalink>dirty-checking-is-broken-for-string-join</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord</tag>
      <title>Dirty checking is broken for string join</title>
      <updated-at type="datetime">2008-07-26T15:29:55+01:00</updated-at>
      <user-id type="integer">18096</user-id>
      <version type="integer">9</version>
      <user-name>Clemens Kofler</user-name>
      <creator-name>quake wang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/608</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can confirm this as well.

There's some discussion on whether something is &quot;changed&quot; if the contents are changed. To me that seems like a valid case. I was working on a serialized array to a model, and if I do something like:

@
my_model.serialized_array &lt;&lt; 'new pushed element'
my_model.changed # intuitively this should return [&quot;serialized_array&quot;]
@

I feel that this is a common scenario where a serialized array needs modification, and the very idea of something being modified is, well, a change.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I can confirm this as well.
&lt;/p&gt;&lt;p&gt;
There's some discussion on whether something is &quot;changed&quot; if the contents are changed. To me that seems like a valid case. I was working on a serialized array to a model, and if I do something like:
&lt;/p&gt;&lt;p&gt;
@
&lt;/p&gt;&lt;p&gt;
my_model.serialized_array &amp;lt;&amp;lt; 'new pushed element'
&lt;/p&gt;&lt;p&gt;
my_model.changed # intuitively this should return [&quot;serialized_array&quot;]
&lt;/p&gt;&lt;p&gt;
@
&lt;/p&gt;&lt;p&gt;
I feel that this is a common scenario where a serialized array needs modification, and the very idea of something being modified is, well, a change.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-31T21:00:57+01:00</created-at>
      <creator-id type="integer">24191</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">608</number>
      <permalink>dirty-checking-is-broken-for-string-join</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord</tag>
      <title>Dirty checking is broken for string join</title>
      <updated-at type="datetime">2008-07-31T21:00:57+01:00</updated-at>
      <user-id type="integer">6262</user-id>
      <version type="integer">10</version>
      <user-name>Zach Holman</user-name>
      <creator-name>quake wang</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/608</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
