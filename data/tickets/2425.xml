<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-05T20:48:58+01:00</created-at>
  <creator-id type="integer">53009</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">2425</number>
  <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
  <priority type="integer">1434</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
  <updated-at type="datetime">2009-08-09T01:36:34+01:00</updated-at>
  <user-id type="integer">53009</user-id>
  <version type="integer">13</version>
  <user-name>avijayr (at gmail)</user-name>
  <creator-name>avijayr (at gmail)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
  <priority-name nil="true"></priority-name>
  <original-body>hi,
In many of my projects that deal with serializing an active record (usually to xml), we have to evaluate whether associated objects exist or not. If they do exist, then a separate call is made to fetch the associated objects (usually in a paged scenario). Rather than define the Proc inside the to_xml method, it would be better if the method is defined automatically in the AssociationReflection class. This patch will define a method with the question mark, and another to be used for the xml serialization.</original-body>
  <latest-body>hi,
In many of my projects that deal with serializing an active record (usually to xml), we have to evaluate whether associated objects exist or not. If they do exist, then a separate call is made to fetch the associated objects (usually in a paged scenario). Rather than define the Proc inside the to_xml method, it would be better if the method is defined automatically in the AssociationReflection class. This patch will define a method with the question mark, and another to be used for the xml serialization.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;hi, In many of my projects that deal with serializing an active
record (usually to xml), we have to evaluate whether associated
objects exist or not. If they do exist, then a separate call is
made to fetch the associated objects (usually in a paged scenario).
Rather than define the Proc inside the to_xml method, it would be
better if the method is defined automatically in the
AssociationReflection class. This patch will define a method with
the question mark, and another to be used for the xml
serialization.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>hi,
In many of my projects that deal with serializing an active record (usually to xml), we have to evaluate whether associated objects exist or not. If they do exist, then a separate call is made to fetch the associated objects (usually in a paged scenario). Rather than define the Proc inside the to_xml method, it would be better if the method is defined automatically in the AssociationReflection class. This patch will define a method with the question mark, and another to be used for the xml serialization.</body>
      <body-html>&lt;div&gt;&lt;p&gt;hi, In many of my projects that deal with serializing an active
record (usually to xml), we have to evaluate whether associated
objects exist or not. If they do exist, then a separate call is
made to fetch the associated objects (usually in a paged scenario).
Rather than define the Proc inside the to_xml method, it would be
better if the method is defined automatically in the
AssociationReflection class. This patch will define a method with
the question mark, and another to be used for the xml
serialization.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-05T20:48:58+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-04-05T20:49:00+01:00</updated-at>
      <user-id type="integer">53009</user-id>
      <version type="integer">1</version>
      <user-name>avijayr (at gmail)</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-06T13:00:35+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash</tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-06T13:00:39+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">2</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 patch verified and all tests pass.

It appears that this method would be very handy, when needed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 patch verified and all tests pass.&lt;/p&gt;
&lt;p&gt;It appears that this method would be very handy, when
needed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-08T18:40:48+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash</tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-08T18:40:51+01:00</updated-at>
      <user-id type="integer">32315</user-id>
      <version type="integer">3</version>
      <user-name>pjammer</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>-1, I don't like the `alias_method` to `has_#{name}` and it seems that keeping a similar api to the dirty methods would be better. For example, if a Post has many Comments:

@@@ ruby
post = Post.new
post.comments?
@@@

instead of

@@@ ruby
post = Post.new
post.has_comments?
@@@

would be a lot cleaner.</body>
      <body-html>&lt;div&gt;&lt;p&gt;-1, I don't like the &lt;code&gt;alias_method&lt;/code&gt; to
&lt;code&gt;has_#{name}&lt;/code&gt; and it seems that keeping a similar api to
the dirty methods would be better. For example, if a Post has many
Comments:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;post = Post.new
post.comments?&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;instead of&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;post = Post.new
post.has_comments?&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;would be a lot cleaner.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-08T18:58:43+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash</tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-08T18:58:46+01:00</updated-at>
      <user-id type="integer">31296</user-id>
      <version type="integer">4</version>
      <user-name>Nick Quaranto</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 on the feature, -1 on the implementation.

I agree with Nick on excluding has for the methods, ie comments? instead of has_comments?. This would be more in line with what you get from normal attributes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 on the feature, -1 on the implementation.&lt;/p&gt;
&lt;p&gt;I agree with Nick on excluding has for the methods, ie comments?
instead of has_comments?. This would be more in line with what you
get from normal attributes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-08T19:00:32+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash</tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-08T19:00:39+01:00</updated-at>
      <user-id type="integer">10504</user-id>
      <version type="integer">5</version>
      <user-name>Josh Nichols</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think post.comments.any? is a more consistent API.  IMO it's better to keep the number of generated methods on the base class to a minimum, and layer this kind of behavior onto the association proxy object.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think post.comments.any? is a more consistent API. IMO it's
better to keep the number of generated methods on the base class to
a minimum, and layer this kind of behavior onto the association
proxy object.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-08T19:26:57+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash</tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-08T19:27:04+01:00</updated-at>
      <user-id type="integer">11372</user-id>
      <version type="integer">6</version>
      <user-name>Josh Susser</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>-1 on the implementation

I agree with Nick on this as well.

note that #49 was similar and denied - although this has more to do with verifying that the collection is empty or object exists</body>
      <body-html>&lt;div&gt;&lt;p&gt;-1 on the implementation&lt;/p&gt;
&lt;p&gt;I agree with Nick on this as well.&lt;/p&gt;
&lt;p&gt;note that &lt;a href=&quot;/projects/8994/tickets/49&quot; title=
&quot;Ticket #49&quot;&gt;#49&lt;/a&gt; was similar and denied - although this has
more to do with verifying that the collection is empty or object
exists&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-08T19:27:51+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash</tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-08T19:27:56+01:00</updated-at>
      <user-id type="integer">22242</user-id>
      <version type="integer">7</version>
      <user-name>Dan Pickett</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Enumerable's already got the goods here, so let's not introduce a new overlapping API that only works with AR assocations.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Enumerable's already got the goods here, so let's not introduce
a new overlapping API that only works with AR assocations.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T22:36:03+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>bugmash</tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-08T22:36:06+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here's a patch for 2-3-stable removing the has_#{name} methods and keeps only the #{name}? methods.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a patch for 2-3-stable removing the has_#{name} methods
and keeps only the #{name}? methods.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T22:45:24+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>bugmash</tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-08T22:45:29+01:00</updated-at>
      <user-id type="integer">10379</user-id>
      <version type="integer">9</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>forgot to mention that the patch is applied on master too.</body>
      <body-html>&lt;div&gt;&lt;p&gt;forgot to mention that the patch is applied on master too.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T22:46:36+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>bugmash</tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-08T22:46:42+01:00</updated-at>
      <user-id type="integer">10379</user-id>
      <version type="integer">10</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>verified.

+1 Patch works perfectly in master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified.&lt;/p&gt;
&lt;p&gt;+1 Patch works perfectly in master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T22:51:15+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>bugmash</tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-08T22:51:19+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">11</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body nil="true"></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T23:08:23+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
:tag: bugmash
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-08T23:08:27+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">12</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I would like to point out two things:
1) The usage scenario described was for serialization to xml so that a corresponding ActiveResource could then be queried in a simple(shallow?) way before making a nested call. That is the reason why the implementation has the 'has_'. In the context of a ARecord, the method with '?' makes sense (to be compatible with Rails' notion of asking a question), but when you want to serialize the same, in my case in the to_xml method on ARecord, the '?' has to be treated specially - which is why I provided an alias without the '?'.

As far as the presence of the 'has_' - this is present to differentiate between the query to retrieve the associated objects vs the presence of these associated objects.

I hope I made myself clear as to why the implementation was the way it was.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I would like to point out two things:&lt;br&gt;
1) The usage scenario described was for serialization to xml so
that a corresponding ActiveResource could then be queried in a
simple(shallow?) way before making a nested call. That is the
reason why the implementation has the 'has_'. In the context of a
ARecord, the method with '?' makes sense (to be compatible with
Rails' notion of asking a question), but when you want to serialize
the same, in my case in the to_xml method on ARecord, the '?' has
to be treated specially - which is why I provided an alias without
the '?'.&lt;/p&gt;
&lt;p&gt;As far as the presence of the 'has_' - this is present to
differentiate between the query to retrieve the associated objects
vs the presence of these associated objects.&lt;/p&gt;
&lt;p&gt;I hope I made myself clear as to why the implementation was the
way it was.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-09T01:36:31+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2425</number>
      <permalink>patch-add-methods-on-active-record-to-denote-whether-any-associated-objects-exist-for-that-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>[PATCH] Add methods on active record to denote whether any associated objects exist for that association</title>
      <updated-at type="datetime">2009-08-09T01:36:34+01:00</updated-at>
      <user-id type="integer">53009</user-id>
      <version type="integer">13</version>
      <user-name>avijayr (at gmail)</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2425</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>233349f91ecceb695768082d3edd2e41f82de4ca</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-05T20:48:58+01:00</created-at>
      <filename>adding_has_associated_obj_exist.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">108120</id>
      <size type="integer">2869</size>
      <uploader-id type="integer">53009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/108120/adding_has_associated_obj_exist.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>1f027af7399a33aba6b9f0d3a37f6e02c0058f10</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-08T22:45:24+01:00</created-at>
      <filename>no_has_empty_denotation_for_ar_associations_2-3-stable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239186</id>
      <size type="integer">2531</size>
      <uploader-id type="integer">10379</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239186/no_has_empty_denotation_for_ar_associations_2-3-stable.diff</url>
    </attachment>
  </attachments>
</ticket>
