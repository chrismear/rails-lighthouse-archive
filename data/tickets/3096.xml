<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">8406</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-08-25T22:53:12+01:00</created-at>
  <creator-id type="integer">47334</creator-id>
  <milestone-due-on type="datetime">2010-01-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">50064</milestone-id>
  <number type="integer">3096</number>
  <permalink>problem-with-combined-use-of-touch-and-autosave-options</permalink>
  <priority type="integer">134880</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>problem with combined use of touch and autosave options </title>
  <updated-at type="datetime">2010-01-12T13:52:44+00:00</updated-at>
  <user-id type="integer">47334</user-id>
  <version type="integer">8</version>
  <user-name>Florent2</user-name>
  <creator-name>Florent2</creator-name>
  <assigned-user-name>Eloy Duran</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3096</url>
  <milestone-title>2.3.6</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>In certain circumstances the combined use of :touch and :autosave options provokes updates in the database of objects that have not changed. 

Here is an example:

class User &lt; ActiveRecord::Base
  has_many :memberships, :dependent =&gt; :destroy, :autosave =&gt; true
end
class Group &lt; ActiveRecord::Base
  has_many :memberships, :dependent =&gt; :destroy, :autosave =&gt; true
end
class Membership &lt; ActiveRecord::Base
  belongs_to :user, :touch =&gt; true
  belongs_to :group, :touch =&gt; true
end

Having a user Joe, a group Soccerteam and a membership between Joe and Soccerteam, if 
1. I call the user 'memberships' method, 
2. then update an attribute of the user (for instance if name)
the group Soccerteam will be updated in the database tough none of its own attributes has changed.

Here a console illustrative sequence: 
http://pastie.org/594701

This bug does not occur if I do not call the user 'memberships' method before updating one of its attribute. It does not occur either without the :touch option, or without the :autosave option.</original-body>
  <latest-body>In certain circumstances the combined use of :touch and :autosave options provokes updates in the database of objects that have not changed. 

Here is an example:

class User &lt; ActiveRecord::Base
  has_many :memberships, :dependent =&gt; :destroy, :autosave =&gt; true
end
class Group &lt; ActiveRecord::Base
  has_many :memberships, :dependent =&gt; :destroy, :autosave =&gt; true
end
class Membership &lt; ActiveRecord::Base
  belongs_to :user, :touch =&gt; true
  belongs_to :group, :touch =&gt; true
end

Having a user Joe, a group Soccerteam and a membership between Joe and Soccerteam, if 
1. I call the user 'memberships' method, 
2. then update an attribute of the user (for instance if name)
the group Soccerteam will be updated in the database tough none of its own attributes has changed.

Here a console illustrative sequence: 
http://pastie.org/594701

This bug does not occur if I do not call the user 'memberships' method before updating one of its attribute. It does not occur either without the :touch option, or without the :autosave option.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In certain circumstances the combined use of :touch and
:autosave options provokes updates in the database of objects that
have not changed.&lt;/p&gt;
&lt;p&gt;Here is an example:&lt;/p&gt;
&lt;p&gt;class User &amp;lt; ActiveRecord::Base has_many :memberships,
:dependent =&amp;gt; :destroy, :autosave =&amp;gt; true end class Group
&amp;lt; ActiveRecord::Base has_many :memberships, :dependent =&amp;gt;
:destroy, :autosave =&amp;gt; true end class Membership &amp;lt;
ActiveRecord::Base belongs_to :user, :touch =&amp;gt; true belongs_to
:group, :touch =&amp;gt; true end&lt;/p&gt;
&lt;p&gt;Having a user Joe, a group Soccerteam and a membership between
Joe and Soccerteam, if 1. I call the user 'memberships' method, 2.
then update an attribute of the user (for instance if name) the
group Soccerteam will be updated in the database tough none of its
own attributes has changed.&lt;/p&gt;
&lt;p&gt;Here a console illustrative sequence: &lt;a href=&quot;http://pastie.org/594701&quot;&gt;http://pastie.org/594701&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This bug does not occur if I do not call the user 'memberships'
method before updating one of its attribute. It does not occur
either without the :touch option, or without the :autosave
option.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In certain circumstances the combined use of :touch and :autosave options provokes updates in the database of objects that have not changed. 

Here is an example:

@@@ ruby
class User &lt; ActiveRecord::Base
  has_many :memberships, :dependent =&gt; :destroy, :autosave =&gt; true
end
class Group &lt; ActiveRecord::Base
  has_many :memberships, :dependent =&gt; :destroy, :autosave =&gt; true
end
class Membership &lt; ActiveRecord::Base
  belongs_to :user, :touch =&gt; true
  belongs_to :group, :touch =&gt; true
end
@@@

Having a user Joe, a group Soccerteam and a membership between Joe and Soccerteam, if 
1. I call the user 'memberships' method, 
2. then update an attribute of the user (for instance if name)
the group Soccerteam will be updated in the database tough none of its own attributes has changed.

Here a console illustrative sequence: 
http://pastie.org/594701

This bug does not occur if I do not call the user 'memberships' method before updating one of its attribute. It does not occur either without the :touch option, or without the :autosave option.

Tested with Rails 2.3.3</body>
      <body-html>&lt;div&gt;&lt;p&gt;In certain circumstances the combined use of :touch and
:autosave options provokes updates in the database of objects that
have not changed.&lt;/p&gt;
&lt;p&gt;Here is an example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
  has_many :memberships, :dependent =&amp;gt; :destroy, :autosave =&amp;gt; true
end
class Group &amp;lt; ActiveRecord::Base
  has_many :memberships, :dependent =&amp;gt; :destroy, :autosave =&amp;gt; true
end
class Membership &amp;lt; ActiveRecord::Base
  belongs_to :user, :touch =&amp;gt; true
  belongs_to :group, :touch =&amp;gt; true
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Having a user Joe, a group Soccerteam and a membership between
Joe and Soccerteam, if&lt;br&gt;
1. I call the user 'memberships' method,&lt;br&gt;
2. then update an attribute of the user (for instance if name)&lt;br&gt;
the group Soccerteam will be updated in the database tough none of
its own attributes has changed.&lt;/p&gt;
&lt;p&gt;Here a console illustrative sequence:&lt;br&gt;
&lt;a href=&quot;http://pastie.org/594701&quot;&gt;http://pastie.org/594701&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This bug does not occur if I do not call the user 'memberships'
method before updating one of its attribute. It does not occur
either without the :touch option, or without the :autosave
option.&lt;/p&gt;
&lt;p&gt;Tested with Rails 2.3.3&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-25T22:53:12+01:00</created-at>
      <creator-id type="integer">47334</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3096</number>
      <permalink>problem-with-combined-use-of-touch-and-autosave-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>problem with combined use of touch and autosave options </title>
      <updated-at type="datetime">2009-08-26T00:34:48+01:00</updated-at>
      <user-id type="integer">47334</user-id>
      <version type="integer">1</version>
      <user-name>Florent2</user-name>
      <creator-name>Florent2</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3096</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This behavior seems correct - calling the user.memberships touches the group (updating one of it's attributes) and then the autosave falls back down through the associations to find that the group has been changed, thus updating it's attribute.

Nothing wrong here.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This behavior seems correct - calling the user.memberships
touches the group (updating one of it's attributes) and then the
autosave falls back down through the associations to find that the
group has been changed, thus updating it's attribute.&lt;/p&gt;
&lt;p&gt;Nothing wrong here.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-26T10:47:43+01:00</created-at>
      <creator-id type="integer">47334</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3096</number>
      <permalink>problem-with-combined-use-of-touch-and-autosave-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>problem with combined use of touch and autosave options </title>
      <updated-at type="datetime">2009-08-26T10:47:44+01:00</updated-at>
      <user-id type="integer">46472</user-id>
      <version type="integer">2</version>
      <user-name>Jamie Rumbelow</user-name>
      <creator-name>Florent2</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3096</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Jamie I am not sure I understand what you wrote.

From what I see in my console sequence, calling &quot;user.memberships&quot; does not touch the group, it just loads the membership associated to the user. When I save the user, the membership is not updated in the DB as it has not changed itself. As the membership record does not change in the database, I don't understand why the group is updated in the database.

Sounds like a bug for me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jamie I am not sure I understand what you wrote.&lt;/p&gt;
&lt;p&gt;From what I see in my console sequence, calling
&quot;user.memberships&quot; does not touch the group, it just loads the
membership associated to the user. When I save the user, the
membership is not updated in the DB as it has not changed itself.
As the membership record does not change in the database, I don't
understand why the group is updated in the database.&lt;/p&gt;
&lt;p&gt;Sounds like a bug for me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-26T17:14:30+01:00</created-at>
      <creator-id type="integer">47334</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3096</number>
      <permalink>problem-with-combined-use-of-touch-and-autosave-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>problem with combined use of touch and autosave options </title>
      <updated-at type="datetime">2009-08-26T17:14:33+01:00</updated-at>
      <user-id type="integer">47334</user-id>
      <version type="integer">3</version>
      <user-name>Florent2</user-name>
      <creator-name>Florent2</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3096</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've looked in ActiveRecord code and now I think I understand what you mean Jamie.

:autosave option calls the save method of the loaded association records. In my case the association (membership) has not changed so when its save method is called, the DB record is not changed.

But calling this save method is enough for the touch mechanism to occur, that's why the group is updated in the database. This is because touch is implemented as a after_save callback.

I could &quot;fix&quot; my problem by changing the autosave code so that it calls the association save method only if the association itself has changed. In activerecord-2.3.3/lib/active_record, method save_collection_association I changed the last condition
@@@ ruby
elsif autosave
  record.save(false)
end
@@@
into
@@@ ruby
elsif autosave &amp;&amp; record.changed?
  record.save(false)
end

I am not familiar with Rails internals and structure, so before going further and submitting a patch with tests, I would like to know if it the right way to fix this issue. Any indication would appreciated :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've looked in ActiveRecord code and now I think I understand
what you mean Jamie.&lt;/p&gt;
&lt;p&gt;:autosave option calls the save method of the loaded association
records. In my case the association (membership) has not changed so
when its save method is called, the DB record is not changed.&lt;/p&gt;
&lt;p&gt;But calling this save method is enough for the touch mechanism
to occur, that's why the group is updated in the database. This is
because touch is implemented as a after_save callback.&lt;/p&gt;
&lt;p&gt;I could &quot;fix&quot; my problem by changing the autosave code so that
it calls the association save method only if the association itself
has changed. In activerecord-2.3.3/lib/active_record, method
save_collection_association I changed the last condition&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;elsif autosave
  record.save(false)
end&lt;/code&gt;
&lt;/pre&gt;
into&lt;br&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;elsif autosave &amp;amp;&amp;amp; record.changed?
  record.save(false)
end&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
I am not familiar with Rails internals and structure, so before going further and submitting a patch with tests, I would like to know if it the right way to fix this issue. Any indication would appreciated :)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-26T18:18:30+01:00</created-at>
      <creator-id type="integer">47334</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3096</number>
      <permalink>problem-with-combined-use-of-touch-and-autosave-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>problem with combined use of touch and autosave options </title>
      <updated-at type="datetime">2009-08-26T18:18:32+01:00</updated-at>
      <user-id type="integer">47334</user-id>
      <version type="integer">4</version>
      <user-name>Florent2</user-name>
      <creator-name>Florent2</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3096</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>only saving the record when it changed seems fine with me and should be done even if it would work with your touch example.
if somebody needs to save all associated records every time for what ever he might need touch for has_many.

i thought of a case where people validate the association record with stuff from the parent, say association.name must be present if parent is in state open or something like this. but that wouldnt be affected cause validations would still be done.

so +1 from me for adding &quot;&amp;&amp; record.changed?&quot;</body>
      <body-html>&lt;div&gt;&lt;p&gt;only saving the record when it changed seems fine with me and
should be done even if it would work with your touch example.&lt;br&gt;
if somebody needs to save all associated records every time for
what ever he might need touch for has_many.&lt;/p&gt;
&lt;p&gt;i thought of a case where people validate the association record
with stuff from the parent, say association.name must be present if
parent is in state open or something like this. but that wouldnt be
affected cause validations would still be done.&lt;/p&gt;
&lt;p&gt;so +1 from me for adding &quot;&amp;amp;&amp;amp; record.changed?&quot;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-28T16:38:40+01:00</created-at>
      <creator-id type="integer">47334</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3096</number>
      <permalink>problem-with-combined-use-of-touch-and-autosave-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>problem with combined use of touch and autosave options </title>
      <updated-at type="datetime">2009-08-28T16:38:45+01:00</updated-at>
      <user-id type="integer">33030</user-id>
      <version type="integer">5</version>
      <user-name>Kane</user-name>
      <creator-name>Florent2</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3096</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-30T19:42:16+00:00</created-at>
      <creator-id type="integer">47334</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3096</number>
      <permalink>problem-with-combined-use-of-touch-and-autosave-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>problem with combined use of touch and autosave options </title>
      <updated-at type="datetime">2009-12-30T19:42:17+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">6</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Florent2</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3096</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This has been fixed in our repo, which will be merged shortly:

2-3-stable: http://github.com/Fingertips/rails/commit/aa29cdf57f5ed57db8e4e3ec1f5f7681ed172130
master: http://github.com/Fingertips/rails/commit/e75d92a749f9464b95868e353b3ab92460dfd50c

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;This has been fixed in our repo, which will be merged
shortly:&lt;/p&gt;
&lt;p&gt;2-3-stable: &lt;a href=
&quot;http://github.com/Fingertips/rails/commit/aa29cdf57f5ed57db8e4e3ec1f5f7681ed172130&quot;&gt;
http://github.com/Fingertips/rails/commit/aa29cdf57f5ed57db8e4e3ec1...&lt;/a&gt;&lt;br&gt;
master: &lt;a href=
&quot;http://github.com/Fingertips/rails/commit/e75d92a749f9464b95868e353b3ab92460dfd50c&quot;&gt;
http://github.com/Fingertips/rails/commit/e75d92a749f9464b95868e353...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-08T11:21:58+00:00</created-at>
      <creator-id type="integer">47334</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3096</number>
      <permalink>problem-with-combined-use-of-touch-and-autosave-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>problem with combined use of touch and autosave options </title>
      <updated-at type="datetime">2010-01-08T11:22:02+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">7</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Florent2</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3096</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-12T13:52:39+00:00</created-at>
      <creator-id type="integer">47334</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3096</number>
      <permalink>problem-with-combined-use-of-touch-and-autosave-options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>problem with combined use of touch and autosave options </title>
      <updated-at type="datetime">2010-01-12T13:52:44+00:00</updated-at>
      <user-id type="integer">47334</user-id>
      <version type="integer">8</version>
      <user-name>Florent2</user-name>
      <creator-name>Florent2</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3096</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
