<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-15T17:58:10+00:00</created-at>
  <creator-id type="integer">50629</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6584</number>
  <permalink>actionmailerbase-has-an-undocumented-public-attribute-leading-to-confusion</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>actionmailer</tag>
  <title>ActionMailer::Base has an undocumented public attribute, leading to confusion</title>
  <updated-at type="datetime">2011-03-19T10:44:45+00:00</updated-at>
  <user-id type="integer">94575</user-id>
  <version type="integer">2</version>
  <user-name>ifesdjeen</user-name>
  <creator-name>andrew.hay.kurtz (at gmail)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6584</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm on rails 3.0.5. ActionMailer::Base has an internal attribute created with the name 'message', and this fact is not documented. If you happen to try to define a delivery method called 'message' on one of your mailers, fun things happen. It is documented that there is a message object available to a mailer view. However, I do not think of the view and controller as being the exact same context (though they share instance vars), so it did not occur to me that I am not allowed to 'def message' inside a mailer.

Steps to reproduce:
1. create a new mailer
2. define two delivery methods, call one of them 'message'. Make it accept an argument or three for extra confusion.
3. Try to send an email with the method that isn't called 'message'.
4. Read the exception.

Gist of my mailer:
https://gist.github.com/871136

Gist of exception from my rspec test:
https://gist.github.com/871143

Thanks a lot!</original-body>
  <latest-body>I'm on rails 3.0.5. ActionMailer::Base has an internal attribute created with the name 'message', and this fact is not documented. If you happen to try to define a delivery method called 'message' on one of your mailers, fun things happen. It is documented that there is a message object available to a mailer view. However, I do not think of the view and controller as being the exact same context (though they share instance vars), so it did not occur to me that I am not allowed to 'def message' inside a mailer.

Steps to reproduce:
1. create a new mailer
2. define two delivery methods, call one of them 'message'. Make it accept an argument or three for extra confusion.
3. Try to send an email with the method that isn't called 'message'.
4. Read the exception.

Gist of my mailer:
https://gist.github.com/871136

Gist of exception from my rspec test:
https://gist.github.com/871143

Thanks a lot!</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm on rails 3.0.5. ActionMailer::Base has an internal attribute
created with the name 'message', and this fact is not documented.
If you happen to try to define a delivery method called 'message'
on one of your mailers, fun things happen. It is documented that
there is a message object available to a mailer view. However, I do
not think of the view and controller as being the exact same
context (though they share instance vars), so it did not occur to
me that I am not allowed to 'def message' inside a mailer.&lt;/p&gt;
&lt;p&gt;Steps to reproduce:&lt;br&gt;
1. create a new mailer&lt;br&gt;
2. define two delivery methods, call one of them 'message'. Make it
accept an argument or three for extra confusion.&lt;br&gt;
3. Try to send an email with the method that isn't called
'message'.&lt;br&gt;
4. Read the exception.&lt;/p&gt;
&lt;p&gt;Gist of my mailer:&lt;br&gt;
&lt;a href=
&quot;https://gist.github.com/871136&quot;&gt;https://gist.github.com/871136&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gist of exception from my rspec test:&lt;br&gt;
&lt;a href=
&quot;https://gist.github.com/871143&quot;&gt;https://gist.github.com/871143&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks a lot!&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm on rails 3.0.5. ActionMailer::Base has an internal attribute created with the name 'message', and this fact is not documented. If you happen to try to define a delivery method called 'message' on one of your mailers, fun things happen. It is documented that there is a message object available to a mailer view. However, I do not think of the view and controller as being the exact same context (though they share instance vars), so it did not occur to me that I am not allowed to 'def message' inside a mailer.

Steps to reproduce:
1. create a new mailer
2. define two delivery methods, call one of them 'message'. Make it accept an argument or three for extra confusion.
3. Try to send an email with the method that isn't called 'message'.
4. Read the exception.

Gist of my mailer:
https://gist.github.com/871136

Gist of exception from my rspec test:
https://gist.github.com/871143

Thanks a lot!</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm on rails 3.0.5. ActionMailer::Base has an internal attribute
created with the name 'message', and this fact is not documented.
If you happen to try to define a delivery method called 'message'
on one of your mailers, fun things happen. It is documented that
there is a message object available to a mailer view. However, I do
not think of the view and controller as being the exact same
context (though they share instance vars), so it did not occur to
me that I am not allowed to 'def message' inside a mailer.&lt;/p&gt;
&lt;p&gt;Steps to reproduce:&lt;br&gt;
1. create a new mailer&lt;br&gt;
2. define two delivery methods, call one of them 'message'. Make it
accept an argument or three for extra confusion.&lt;br&gt;
3. Try to send an email with the method that isn't called
'message'.&lt;br&gt;
4. Read the exception.&lt;/p&gt;
&lt;p&gt;Gist of my mailer:&lt;br&gt;
&lt;a href=
&quot;https://gist.github.com/871136&quot;&gt;https://gist.github.com/871136&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gist of exception from my rspec test:&lt;br&gt;
&lt;a href=
&quot;https://gist.github.com/871143&quot;&gt;https://gist.github.com/871143&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks a lot!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-15T17:58:10+00:00</created-at>
      <creator-id type="integer">50629</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6584</number>
      <permalink>actionmailerbase-has-an-undocumented-public-attribute-leading-to-confusion</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActionMailer::Base has an undocumented public attribute, leading to confusion</title>
      <updated-at type="datetime">2011-03-15T17:58:15+00:00</updated-at>
      <user-id type="integer">50629</user-id>
      <version type="integer">1</version>
      <user-name>andrew.hay.kurtz (at gmail)</user-name>
      <creator-name>andrew.hay.kurtz (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6584</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It's not a direct part of ActionMailer::Base. It's more a part of MailHelper (actionmailer/lib/action_mailer/mail_helper.rb). 

It's an accessor to @_message instance variable. 

Naming things is one of the biggest problems, actually :) If you say it's a delivery method, you should probably call it &quot;deliver_message&quot; and the other one would become &quot;deliver reply&quot;.

So, having message method is completely legitimate in that particular case. If you want to change a message accessor itself, feel free to override it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's not a direct part of ActionMailer::Base. It's more a part
of MailHelper (actionmailer/lib/action_mailer/mail_helper.rb).&lt;/p&gt;
&lt;p&gt;It's an accessor to @_message instance variable.&lt;/p&gt;
&lt;p&gt;Naming things is one of the biggest problems, actually :) If you
say it's a delivery method, you should probably call it
&quot;deliver_message&quot; and the other one would become &quot;deliver
reply&quot;.&lt;/p&gt;
&lt;p&gt;So, having message method is completely legitimate in that
particular case. If you want to change a message accessor itself,
feel free to override it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-19T10:44:44+00:00</created-at>
      <creator-id type="integer">50629</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6584</number>
      <permalink>actionmailerbase-has-an-undocumented-public-attribute-leading-to-confusion</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionmailer</tag>
      <title>ActionMailer::Base has an undocumented public attribute, leading to confusion</title>
      <updated-at type="datetime">2011-03-19T10:44:45+00:00</updated-at>
      <user-id type="integer">94575</user-id>
      <version type="integer">2</version>
      <user-name>ifesdjeen</user-name>
      <creator-name>andrew.hay.kurtz (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6584</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
