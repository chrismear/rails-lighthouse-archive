<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-10T06:31:13+01:00</created-at>
  <creator-id type="integer">46643</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5340</number>
  <permalink>rails-3-actionview-is-not-thread-safe</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>Rails 3 ActionView is not thread-safe</title>
  <updated-at type="datetime">2011-05-05T01:01:11+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">9</version>
  <user-name>rails</user-name>
  <creator-name>thedarkone</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5340</url>
  <priority-name>Low</priority-name>
  <original-body>`ActionView::Resolver` relies on pure Ruby `Hash`es for caching template look-ups (http://github.com/rails/rails/blob/master/actionpack/lib/action_view/template/resolver.rb#L9) and since its instances are used as a global thread-shared objects they are not thread-safe.

This is a new Rails 3 development, Rails 2 template look-up code is thread-safe.</original-body>
  <latest-body>`ActionView::Resolver` relies on pure Ruby `Hash`es for caching template look-ups (http://github.com/rails/rails/blob/master/actionpack/lib/action_view/template/resolver.rb#L9) and since its instances are used as a global thread-shared objects they are not thread-safe.

This is a new Rails 3 development, Rails 2 template look-up code is thread-safe.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;&lt;code&gt;ActionView::Resolver&lt;/code&gt; relies on pure Ruby
&lt;code&gt;Hash&lt;/code&gt;es for caching template look-ups (&lt;a href=
&quot;http://github.com/rails/rails/blob/master/actionpack/lib/action_view/template/resolver.rb#L9&quot;&gt;http://github.com/rails/rails/blob/master/actionpack/lib/action_vie...&lt;/a&gt;)
and since its instances are used as a global thread-shared objects
they are not thread-safe.&lt;/p&gt;
&lt;p&gt;This is a new Rails 3 development, Rails 2 template look-up code
is thread-safe.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>`ActionView::Resolver` relies on pure Ruby `Hash`es for caching template look-ups (http://github.com/rails/rails/blob/master/actionpack/lib/action_view/template/resolver.rb#L9) and since its instances are used as a global thread-shared objects they are not thread-safe.

This is a new Rails 3 development, Rails 2 template look-up code is thread-safe.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;code&gt;ActionView::Resolver&lt;/code&gt; relies on pure Ruby
&lt;code&gt;Hash&lt;/code&gt;es for caching template look-ups (&lt;a href=
&quot;http://github.com/rails/rails/blob/master/actionpack/lib/action_view/template/resolver.rb#L9&quot;&gt;http://github.com/rails/rails/blob/master/actionpack/lib/action_vie...&lt;/a&gt;)
and since its instances are used as a global thread-shared objects
they are not thread-safe.&lt;/p&gt;
&lt;p&gt;This is a new Rails 3 development, Rails 2 template look-up code
is thread-safe.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-09T19:34:21+01:00</created-at>
      <creator-id type="integer">46643</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5340</number>
      <permalink>rails-3-actionview-is-not-thread-safe</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview rails3rc threadsafety</tag>
      <title>Rails 3 ActionView is not thread-safe</title>
      <updated-at type="datetime">2010-08-09T19:34:22+01:00</updated-at>
      <user-id type="integer">46643</user-id>
      <version type="integer">1</version>
      <user-name>thedarkone</user-name>
      <creator-name>thedarkone</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5340</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hey mate!

The worse scenario is that two threads would hit nil at the same time and we would do two lookups. I believe this is completely fine, you won't end up with garbage data.

Or am I missing something?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey mate!&lt;/p&gt;
&lt;p&gt;The worse scenario is that two threads would hit nil at the same
time and we would do two lookups. I believe this is completely
fine, you won't end up with garbage data.&lt;/p&gt;
&lt;p&gt;Or am I missing something?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-10T18:30:07+01:00</created-at>
      <creator-id type="integer">46643</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5340</number>
      <permalink>rails-3-actionview-is-not-thread-safe</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview rails3rc threadsafety</tag>
      <title>Rails 3 ActionView is not thread-safe</title>
      <updated-at type="datetime">2010-10-10T18:30:11+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">2</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>thedarkone</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5340</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hey,

no, what you are describing would be the worst case scenario **if `Hash` were thread-safe**. The only guarantees for example JRuby makes for concurrent modification of `Hash`es is that you shouldn't be able to segfault JVM.

Otherwise worst-case scenarios right now are `IndexOutOfBound` exceptions or some threads stuck in an infinite loops resizing corrupted `Hash` instances. Of course you need to be pretty unlucky to run into these issues, but that's how it is with threads.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey,&lt;/p&gt;
&lt;p&gt;no, what you are describing would be the worst case scenario
&lt;strong&gt;if &lt;code&gt;Hash&lt;/code&gt; were thread-safe&lt;/strong&gt;. The only
guarantees for example JRuby makes for concurrent modification of
&lt;code&gt;Hash&lt;/code&gt;es is that you shouldn't be able to segfault
JVM.&lt;/p&gt;
&lt;p&gt;Otherwise worst-case scenarios right now are
&lt;code&gt;IndexOutOfBound&lt;/code&gt; exceptions or some threads stuck in an
infinite loops resizing corrupted &lt;code&gt;Hash&lt;/code&gt; instances. Of
course you need to be pretty unlucky to run into these issues, but
that's how it is with threads.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-10T23:48:56+01:00</created-at>
      <creator-id type="integer">46643</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5340</number>
      <permalink>rails-3-actionview-is-not-thread-safe</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview rails3rc threadsafety</tag>
      <title>Rails 3 ActionView is not thread-safe</title>
      <updated-at type="datetime">2010-10-10T23:48:58+01:00</updated-at>
      <user-id type="integer">46643</user-id>
      <version type="integer">3</version>
      <user-name>thedarkone</user-name>
      <creator-name>thedarkone</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5340</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T08:23:58+01:00</created-at>
      <creator-id type="integer">46643</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: actionview rails3rc threadsafety
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5340</number>
      <permalink>rails-3-actionview-is-not-thread-safe</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3 ActionView is not thread-safe</title>
      <updated-at type="datetime">2010-10-19T08:24:03+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">5</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>thedarkone</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5340</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree with @thedarkone on this one. JRuby's hash implementation requires synchronization around a shared data structure like a hash or array. The worst that can happen in JRuby's case is that we will raise a ConcurrencyError if the hash is modified by two different threads in a short timeframe. Unfortunately, the code is probably not prepared for this possibility and the error may end up blowing up the whole request.

I haven't looked at the code and am not prepared to suggest an alternative. I'd like to think that there's a way to do this without using a mutex around cache accesses, but I'm not sure. At the very least protecting against errors while reading and/or modifying the cache would be a good start.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree with @thedarkone on this one. JRuby's hash
implementation requires synchronization around a shared data
structure like a hash or array. The worst that can happen in
JRuby's case is that we will raise a ConcurrencyError if the hash
is modified by two different threads in a short timeframe.
Unfortunately, the code is probably not prepared for this
possibility and the error may end up blowing up the whole
request.&lt;/p&gt;
&lt;p&gt;I haven't looked at the code and am not prepared to suggest an
alternative. I'd like to think that there's a way to do this
without using a mutex around cache accesses, but I'm not sure. At
the very least protecting against errors while reading and/or
modifying the cache would be a good start.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-19T17:37:11+00:00</created-at>
      <creator-id type="integer">46643</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5340</number>
      <permalink>rails-3-actionview-is-not-thread-safe</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3 ActionView is not thread-safe</title>
      <updated-at type="datetime">2010-11-19T17:37:13+00:00</updated-at>
      <user-id type="integer">17057</user-id>
      <version type="integer">6</version>
      <user-name>Nick Sieger</user-name>
      <creator-name>thedarkone</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5340</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>No, `ConcurencyError` exception is unfortunately not the worst thing that can happen on JRuby (or on any Ruby VM with real threads for that matter). Modifying non thread-safe data structures in parallel threads is like [parsing HTML with regular expressions](http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags#1732454). I wouldn't be surprised that it's possible to even get it to mix-up key-value pairs (I haven't read the source code, so I might be wrong). My simple testing however showed threads stuck in infinite loops are nothing out of the ordinary.</body>
      <body-html>&lt;div&gt;&lt;p&gt;No, &lt;code&gt;ConcurencyError&lt;/code&gt; exception is unfortunately not
the worst thing that can happen on JRuby (or on any Ruby VM with
real threads for that matter). Modifying non thread-safe data
structures in parallel threads is like &lt;a href=
&quot;http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags#1732454&quot;&gt;
parsing HTML with regular expressions&lt;/a&gt;. I wouldn't be surprised
that it's possible to even get it to mix-up key-value pairs (I
haven't read the source code, so I might be wrong). My simple
testing however showed threads stuck in infinite loops are nothing
out of the ordinary.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-04T22:04:39+00:00</created-at>
      <creator-id type="integer">46643</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5340</number>
      <permalink>rails-3-actionview-is-not-thread-safe</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails 3 ActionView is not thread-safe</title>
      <updated-at type="datetime">2011-02-04T22:04:51+00:00</updated-at>
      <user-id type="integer">46643</user-id>
      <version type="integer">7</version>
      <user-name>thedarkone</user-name>
      <creator-name>thedarkone</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5340</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-05-05T01:00:06+01:00</created-at>
      <creator-id type="integer">46643</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5340</number>
      <permalink>rails-3-actionview-is-not-thread-safe</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Rails 3 ActionView is not thread-safe</title>
      <updated-at type="datetime">2011-05-05T01:00:21+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">8</version>
      <user-name>rails</user-name>
      <creator-name>thedarkone</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5340</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-05-05T01:00:06+01:00</created-at>
      <creator-id type="integer">46643</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5340</number>
      <permalink>rails-3-actionview-is-not-thread-safe</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Rails 3 ActionView is not thread-safe</title>
      <updated-at type="datetime">2011-05-05T01:01:11+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">9</version>
      <user-name>rails</user-name>
      <creator-name>thedarkone</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5340</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
