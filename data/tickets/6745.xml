<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-26T04:28:46+01:00</created-at>
  <creator-id type="integer">20273</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6745</number>
  <permalink>patch-full_messages-generates-lame-messages-for-associations</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>&quot;activerecord autosave_association&quot; err error_messages</tag>
  <title>[PATCH] full_messages generates lame messages for associations</title>
  <updated-at type="datetime">2011-04-26T04:33:19+01:00</updated-at>
  <user-id type="integer">20273</user-id>
  <version type="integer">3</version>
  <user-name>Josh Sharpe</user-name>
  <creator-name>Josh Sharpe</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6745</url>
  <priority-name nil="true"></priority-name>
  <original-body>Imagine you're a User and you accepts_nested_attributes for Profile.  And your fun developer goes and does something like this:

@u = User.new
@u.build_profile
@u.save

...and then

`&lt;%= @u.errors.full_messages.each{|e| &quot;&lt;p&gt;#{e}&lt;/p&gt;&quot;} %&gt;`

... or something like that, which dumps this nonsense to the screen:

Profile first name can't be blank
Profile last name can't be blank

Ahh, omg, what is a Profile first name??  Egad, must. get. rid. of. that.

************

There's no good reason that I can think of that the class name should be in the error message.  Sometimes it makes phonetic sense (like in the test suite), but more often than not it ends up just being confusing for end users.  I suggest the error messages in the above case simply be:

First name can't be blank
Last name can't be blank

Note that this has nothing to do with the error's key name, which remains &quot;profile.first_name&quot;.  Form helpers will continue to wrap labels in an error class.</original-body>
  <latest-body>Imagine you're a User and you accepts_nested_attributes for Profile.  And your fun developer goes and does something like this:

@u = User.new
@u.build_profile
@u.save

...and then

`&lt;%= @u.errors.full_messages.each{|e| &quot;&lt;p&gt;#{e}&lt;/p&gt;&quot;} %&gt;`

... or something like that, which dumps this nonsense to the screen:

Profile first name can't be blank
Profile last name can't be blank

Ahh, omg, what is a Profile first name??  Egad, must. get. rid. of. that.

************

There's no good reason that I can think of that the class name should be in the error message.  Sometimes it makes phonetic sense (like in the test suite), but more often than not it ends up just being confusing for end users.  I suggest the error messages in the above case simply be:

First name can't be blank
Last name can't be blank

Note that this has nothing to do with the error's key name, which remains &quot;profile.first_name&quot;.  Form helpers will continue to wrap labels in an error class.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Imagine you're a User and you accepts_nested_attributes for
Profile. And your fun developer goes and does something like
this:&lt;/p&gt;
&lt;p&gt;@u = User.new @u.build_profile @u.save&lt;/p&gt;
&lt;p&gt;...and then&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;%= @u.errors.full_messages.each{|e|
&quot;&amp;lt;p&amp;gt;#{e}&amp;lt;/p&amp;gt;&quot;} %&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;... or something like that, which dumps this nonsense to the
screen:&lt;/p&gt;
&lt;p&gt;Profile first name can't be blank&lt;br&gt;
Profile last name can't be blank&lt;/p&gt;
&lt;p&gt;Ahh, omg, what is a Profile first name?? Egad, must. get. rid.
of. that.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;There's no good reason that I can think of that the class name
should be in the error message. Sometimes it makes phonetic sense
(like in the test suite), but more often than not it ends up just
being confusing for end users. I suggest the error messages in the
above case simply be:&lt;/p&gt;
&lt;p&gt;First name can't be blank&lt;br&gt;
Last name can't be blank&lt;/p&gt;
&lt;p&gt;Note that this has nothing to do with the error's key name,
which remains &quot;profile.first_name&quot;. Form helpers will continue to
wrap labels in an error class.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Imagine you're a User and you accepts_nested_attributes for Profile.  And your fun developer goes and does something like this:

@u = User.new
@u.build_profile
@u.save

...and then

`&lt;%= @u.errors.full_messages.each{|e| &quot;&lt;p&gt;#{e}&lt;/p&gt;&quot;} %&gt;`

... or something like that, which dumps this nonsense to the screen:

Profile first name can't be blank
Profile last name can't be blank

Ahh, omg, what is a Profile first name??  Egad, must. get. rid. of. that.

************

There's no good reason that I can think of that the class name should be in the error message.  Sometimes it makes phonetic sense (like in the test suite), but more often than not it ends up just being confusing for end users.  I suggest the error messages in the above case simply be:

First name can't be blank
Last name can't be blank

Note that this has nothing to do with the error's key name, which remains &quot;profile.first_name&quot;.  Form helpers will continue to wrap labels in an error class.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Imagine you're a User and you accepts_nested_attributes for
Profile. And your fun developer goes and does something like
this:&lt;/p&gt;
&lt;p&gt;@u = User.new @u.build_profile @u.save&lt;/p&gt;
&lt;p&gt;...and then&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;%= @u.errors.full_messages.each{|e|
&quot;&amp;lt;p&amp;gt;#{e}&amp;lt;/p&amp;gt;&quot;} %&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;... or something like that, which dumps this nonsense to the
screen:&lt;/p&gt;
&lt;p&gt;Profile first name can't be blank&lt;br&gt;
Profile last name can't be blank&lt;/p&gt;
&lt;p&gt;Ahh, omg, what is a Profile first name?? Egad, must. get. rid.
of. that.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;There's no good reason that I can think of that the class name
should be in the error message. Sometimes it makes phonetic sense
(like in the test suite), but more often than not it ends up just
being confusing for end users. I suggest the error messages in the
above case simply be:&lt;/p&gt;
&lt;p&gt;First name can't be blank&lt;br&gt;
Last name can't be blank&lt;/p&gt;
&lt;p&gt;Note that this has nothing to do with the error's key name,
which remains &quot;profile.first_name&quot;. Form helpers will continue to
wrap labels in an error class.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-26T04:28:46+01:00</created-at>
      <creator-id type="integer">20273</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6745</number>
      <permalink>patch-full_messages-generates-lame-messages-for-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord autosave_association&quot; err error_messages</tag>
      <title>[PATCH] full_messages generates lame messages for associations</title>
      <updated-at type="datetime">2011-04-26T04:28:48+01:00</updated-at>
      <user-id type="integer">20273</user-id>
      <version type="integer">1</version>
      <user-name>Josh Sharpe</user-name>
      <creator-name>Josh Sharpe</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6745</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>okay, seriously, lighthouse won't accept my patch. no error, nothing:

http://pastebin.com/qVeRBp3R</body>
      <body-html>&lt;div&gt;&lt;p&gt;okay, seriously, lighthouse won't accept my patch. no error,
nothing:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://pastebin.com/qVeRBp3R&quot;&gt;http://pastebin.com/qVeRBp3R&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-26T04:31:45+01:00</created-at>
      <creator-id type="integer">20273</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6745</number>
      <permalink>patch-full_messages-generates-lame-messages-for-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord autosave_association&quot; err error_messages</tag>
      <title>[PATCH] full_messages generates lame messages for associations</title>
      <updated-at type="datetime">2011-04-26T04:31:47+01:00</updated-at>
      <user-id type="integer">20273</user-id>
      <version type="integer">2</version>
      <user-name>Josh Sharpe</user-name>
      <creator-name>Josh Sharpe</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6745</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>okay... fail.  maybe this will work</body>
      <body-html>&lt;div&gt;&lt;p&gt;okay... fail. maybe this will work&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-26T04:33:17+01:00</created-at>
      <creator-id type="integer">20273</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6745</number>
      <permalink>patch-full_messages-generates-lame-messages-for-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord autosave_association&quot; err error_messages</tag>
      <title>[PATCH] full_messages generates lame messages for associations</title>
      <updated-at type="datetime">2011-04-26T04:33:19+01:00</updated-at>
      <user-id type="integer">20273</user-id>
      <version type="integer">3</version>
      <user-name>Josh Sharpe</user-name>
      <creator-name>Josh Sharpe</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6745</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4f4a7ec7230ab9d39c3a096838e7ae2a91059ead</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-04-26T04:33:17+01:00</created-at>
      <filename>error_messages.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">1031776</id>
      <size type="integer">1790</size>
      <uploader-id type="integer">20273</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/1031776/error_messages.diff</url>
    </attachment>
  </attachments>
</ticket>
