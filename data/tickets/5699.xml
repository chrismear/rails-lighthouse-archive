<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-02T10:55:41+01:00</created-at>
  <creator-id type="integer">6693</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5699</number>
  <permalink>fix-broken-module-namespacing-in-activeresource-when-using-ruby-19</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activeresource active_resource module namespace namespacing patch ruby1.9</tag>
  <title>Fix broken module namespacing in ActiveResource when using Ruby 1.9</title>
  <updated-at type="datetime">2010-10-02T10:55:41+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">5</version>
  <user-name>Repository</user-name>
  <creator-name>Matthijs Langenberg</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5699</url>
  <priority-name nil="true"></priority-name>
  <original-body>Following namespacing use case is broken when using Ruby 1.9:

    class Author &lt; ActiveRecord::Base
    end

    module Api
      class Book &lt; ActiveResouce::Base
      end
    end

Let's say XML contains `&lt;book&gt;&lt;author&gt;&lt;name&gt;John&lt;/name&gt;&lt;/author&gt;....`

    Api::Book.first.author.class.to_s #=&gt;
      Ruby 1.8.7: &quot;Api::Book::Author&quot; (namespaced, correct),
      Ruby 1.9: &quot;Author&quot; (toplevel, broken)

This is caused by differences in the implementation of mod.const_get? and mod.const_defined? between Ruby 1.8 and 1.9.
  
  - http://railsapi.com/doc/ruby-v1.8/classes/Module.html#M000994
  - http://railsapi.com/doc/ruby-v1.9.2/classes/Module.html#M001257

Also, see http://eigenclass.org/hiki/Changes+in+Ruby+1.9#l33 for more background information.

This patch fixes this by passing the 2nd `inherit` argument as `false` for mod.const_get? and mod.const_defined? when trying to lookup an existing resource, in the case of Ruby 1.9.</original-body>
  <latest-body>Following namespacing use case is broken when using Ruby 1.9:

    class Author &lt; ActiveRecord::Base
    end

    module Api
      class Book &lt; ActiveResouce::Base
      end
    end

Let's say XML contains `&lt;book&gt;&lt;author&gt;&lt;name&gt;John&lt;/name&gt;&lt;/author&gt;....`

    Api::Book.first.author.class.to_s #=&gt;
      Ruby 1.8.7: &quot;Api::Book::Author&quot; (namespaced, correct),
      Ruby 1.9: &quot;Author&quot; (toplevel, broken)

This is caused by differences in the implementation of mod.const_get? and mod.const_defined? between Ruby 1.8 and 1.9.
  
  - http://railsapi.com/doc/ruby-v1.8/classes/Module.html#M000994
  - http://railsapi.com/doc/ruby-v1.9.2/classes/Module.html#M001257

Also, see http://eigenclass.org/hiki/Changes+in+Ruby+1.9#l33 for more background information.

This patch fixes this by passing the 2nd `inherit` argument as `false` for mod.const_get? and mod.const_defined? when trying to lookup an existing resource, in the case of Ruby 1.9.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Following namespacing use case is broken when using Ruby
1.9:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Author &amp;lt; ActiveRecord::Base
end

module Api
  class Book &amp;lt; ActiveResouce::Base
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's say XML contains
&lt;code&gt;&amp;lt;book&amp;gt;&amp;lt;author&amp;gt;&amp;lt;name&amp;gt;John&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;....&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Api::Book.first.author.class.to_s #=&amp;gt;
  Ruby 1.8.7: &quot;Api::Book::Author&quot; (namespaced, correct),
  Ruby 1.9: &quot;Author&quot; (toplevel, broken)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is caused by differences in the implementation of
mod.const_get? and mod.const_defined? between Ruby 1.8 and
1.9.&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=
&quot;http://railsapi.com/doc/ruby-v1.8/classes/Module.html#M000994&quot;&gt;http://railsapi.com/doc/ruby-v1.8/classes/Module.html#M000994&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=
&quot;http://railsapi.com/doc/ruby-v1.9.2/classes/Module.html#M001257&quot;&gt;http://railsapi.com/doc/ruby-v1.9.2/classes/Module.html#M001257&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, see &lt;a href=
&quot;http://eigenclass.org/hiki/Changes+in+Ruby+1.9#l33&quot;&gt;http://eigenclass.org/hiki/Changes+in+Ruby+1.9#l33&lt;/a&gt;
for more background information.&lt;/p&gt;
&lt;p&gt;This patch fixes this by passing the 2nd &lt;code&gt;inherit&lt;/code&gt;
argument as &lt;code&gt;false&lt;/code&gt; for mod.const_get? and
mod.const_defined? when trying to lookup an existing resource, in
the case of Ruby 1.9.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Following namespacing use case is broken when using Ruby 1.9:

    class Author &lt; ActiveRecord::Base
    end

    module Api
      class Book &lt; ActiveResouce::Base
      end
    end

Let's say XML contains `&lt;book&gt;&lt;author&gt;&lt;name&gt;John&lt;/name&gt;&lt;/author&gt;....`

    Api::Book.first.author.class.to_s #=&gt;
      Ruby 1.8.7: &quot;Api::Book::Author&quot; (namespaced, correct),
      Ruby 1.9: &quot;Author&quot; (toplevel, broken)

This is caused by differences in the implementation of mod.const_get? and mod.const_defined? between Ruby 1.8 and 1.9.
  
  - http://railsapi.com/doc/ruby-v1.8/classes/Module.html#M000994
  - http://railsapi.com/doc/ruby-v1.9.2/classes/Module.html#M001257

Also, see http://eigenclass.org/hiki/Changes+in+Ruby+1.9#l33 for more background information.

This patch fixes this by passing the 2nd `inherit` argument as `false` for mod.const_get? and mod.const_defined? when trying to lookup an existing resource, in the case of Ruby 1.9.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Following namespacing use case is broken when using Ruby
1.9:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Author &amp;lt; ActiveRecord::Base
end

module Api
  class Book &amp;lt; ActiveResouce::Base
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Let's say XML contains
&lt;code&gt;&amp;lt;book&amp;gt;&amp;lt;author&amp;gt;&amp;lt;name&amp;gt;John&amp;lt;/name&amp;gt;&amp;lt;/author&amp;gt;....&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Api::Book.first.author.class.to_s #=&amp;gt;
  Ruby 1.8.7: &quot;Api::Book::Author&quot; (namespaced, correct),
  Ruby 1.9: &quot;Author&quot; (toplevel, broken)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is caused by differences in the implementation of
mod.const_get? and mod.const_defined? between Ruby 1.8 and
1.9.&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=
&quot;http://railsapi.com/doc/ruby-v1.8/classes/Module.html#M000994&quot;&gt;http://railsapi.com/doc/ruby-v1.8/classes/Module.html#M000994&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=
&quot;http://railsapi.com/doc/ruby-v1.9.2/classes/Module.html#M001257&quot;&gt;http://railsapi.com/doc/ruby-v1.9.2/classes/Module.html#M001257&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, see &lt;a href=
&quot;http://eigenclass.org/hiki/Changes+in+Ruby+1.9#l33&quot;&gt;http://eigenclass.org/hiki/Changes+in+Ruby+1.9#l33&lt;/a&gt;
for more background information.&lt;/p&gt;
&lt;p&gt;This patch fixes this by passing the 2nd &lt;code&gt;inherit&lt;/code&gt;
argument as &lt;code&gt;false&lt;/code&gt; for mod.const_get? and
mod.const_defined? when trying to lookup an existing resource, in
the case of Ruby 1.9.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-24T22:26:30+01:00</created-at>
      <creator-id type="integer">6693</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5699</number>
      <permalink>fix-broken-module-namespacing-in-activeresource-when-using-ruby-19</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource active_resource module namespace namespacing patch ruby1.9</tag>
      <title>Fix broken module namespacing in ActiveResource when using Ruby 1.9</title>
      <updated-at type="datetime">2010-09-24T22:26:35+01:00</updated-at>
      <user-id type="integer">6693</user-id>
      <version type="integer">1</version>
      <user-name>Matthijs Langenberg</user-name>
      <creator-name>Matthijs Langenberg</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5699</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Verified. The problem does exists and patch does fixes it. But the patch can't be applied cleanly to master, hence please create and submit a new patch.

I have the updated patch, but I will have rather original submitter submitting it again.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Verified. The problem does exists and patch does fixes it. But
the patch can't be applied cleanly to master, hence please create
and submit a new patch.&lt;/p&gt;
&lt;p&gt;I have the updated patch, but I will have rather original
submitter submitting it again.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-26T05:26:49+01:00</created-at>
      <creator-id type="integer">6693</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5699</number>
      <permalink>fix-broken-module-namespacing-in-activeresource-when-using-ruby-19</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource active_resource module namespace namespacing patch ruby1.9</tag>
      <title>Fix broken module namespacing in ActiveResource when using Ruby 1.9</title>
      <updated-at type="datetime">2010-09-26T05:26:51+01:00</updated-at>
      <user-id type="integer">2053</user-id>
      <version type="integer">2</version>
      <user-name>gnufied</user-name>
      <creator-name>Matthijs Langenberg</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5699</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Another option would be perhaps to check for arity of the methods rather than `RUBY_VERSION`, but that results in somewhat more code.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Another option would be perhaps to check for arity of the
methods rather than &lt;code&gt;RUBY_VERSION&lt;/code&gt;, but that results in
somewhat more code.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-26T05:35:58+01:00</created-at>
      <creator-id type="integer">6693</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5699</number>
      <permalink>fix-broken-module-namespacing-in-activeresource-when-using-ruby-19</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource active_resource module namespace namespacing patch ruby1.9</tag>
      <title>Fix broken module namespacing in ActiveResource when using Ruby 1.9</title>
      <updated-at type="datetime">2010-09-26T05:36:02+01:00</updated-at>
      <user-id type="integer">2053</user-id>
      <version type="integer">3</version>
      <user-name>gnufied</user-name>
      <creator-name>Matthijs Langenberg</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5699</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Updated the patch. Should apply cleanly to master now.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated the patch. Should apply cleanly to master now.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-26T19:56:56+01:00</created-at>
      <creator-id type="integer">6693</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5699</number>
      <permalink>fix-broken-module-namespacing-in-activeresource-when-using-ruby-19</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource active_resource module namespace namespacing patch ruby1.9</tag>
      <title>Fix broken module namespacing in ActiveResource when using Ruby 1.9</title>
      <updated-at type="datetime">2010-09-26T19:56:58+01:00</updated-at>
      <user-id type="integer">6693</user-id>
      <version type="integer">4</version>
      <user-name>Matthijs Langenberg</user-name>
      <creator-name>Matthijs Langenberg</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5699</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [67a838574be000f329c0f340474bc9cec1aeca16]) Fix broken module namespacing in ActiveResource with Ruby 1.9 [#5699 state:resolved]

Following namespace use case was broken with Ruby 1.9:

  class Author &lt; ActiveRecord::Base
    ...
  end

  module Api
    class Book &lt; ActiveResouce::Base
    end
  end

Let's say XML contains &lt;book&gt;&lt;author&gt;&lt;name&gt;John&lt;/name&gt;&lt;/author&gt;....

  Api::Book.first.author.class.to_s #=&gt;
    Ruby 1.8.7: &quot;Api::Book::Author&quot; (namespaced, correct),
    Ruby 1.9: &quot;Author&quot; (toplevel, broken)

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/67a838574be000f329c0f340474bc9cec1aeca16</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/67a838574be000f329c0f340474bc9cec1aeca16&quot;
title=
&quot;Changeset [67a838574be000f329c0f340474bc9cec1aeca16]&quot;&gt;[67a838574be000f329c0f340474bc9cec1aeca16]&lt;/a&gt;)
Fix broken module namespacing in ActiveResource with Ruby 1.9
[&lt;a href=&quot;/projects/8994/tickets/5699&quot; title=
&quot;Ticket #5699&quot;&gt;#5699&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Following namespace use case was broken with Ruby 1.9:&lt;/p&gt;
&lt;p&gt;class Author &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;module Api&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Book &amp;lt; ActiveResouce::Base
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;Let's say XML contains John....&lt;/p&gt;
&lt;p&gt;Api::Book.first.author.class.to_s #=&amp;gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Ruby 1.8.7: &quot;Api::Book::Author&quot; (namespaced, correct),
Ruby 1.9: &quot;Author&quot; (toplevel, broken)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a href=
&quot;mailto:jose.valim@gmail.com&quot;&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/67a838574be000f329c0f340474bc9cec1aeca16&quot;&gt;
http://github.com/rails/rails/commit/67a838574be000f329c0f340474bc9...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-27T22:12:34+01:00</created-at>
      <creator-id type="integer">6693</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5699</number>
      <permalink>fix-broken-module-namespacing-in-activeresource-when-using-ruby-19</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activeresource active_resource module namespace namespacing patch ruby1.9</tag>
      <title>Fix broken module namespacing in ActiveResource when using Ruby 1.9</title>
      <updated-at type="datetime">2010-09-27T22:12:35+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Matthijs Langenberg</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5699</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>2a95373be2ddf38b34027eec8c9f7c12dbe70d7d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-26T19:56:56+01:00</created-at>
      <filename>fix_activeresource_1_9_namespacing.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">691309</id>
      <size type="integer">4082</size>
      <uploader-id type="integer">6693</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/691309/fix_activeresource_1_9_namespacing.diff</url>
    </attachment>
  </attachments>
</ticket>
