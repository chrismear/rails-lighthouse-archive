<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-03T09:07:35+00:00</created-at>
  <creator-id type="integer">39634</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1512</number>
  <permalink>enhance-if-argument-for-activerecord-validation-methods</permalink>
  <priority type="integer">875</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>Enhance :if argument for ActiveRecord validation methods</title>
  <updated-at type="datetime">2008-12-03T17:34:14+00:00</updated-at>
  <user-id type="integer">39634</user-id>
  <version type="integer">3</version>
  <user-name>Gerald Boersma</user-name>
  <creator-name>Gerald Boersma</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1512</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is an enhancement request.

The provided ActiveRecord validation methods (e.g. validates_presence_of) accept :if as a parameter. However, it only accepts a single symbol (or a Proc or string). 

I have a case where I want the validation rule to fire in one of a number of possible cases. Rather than having to define additional methods that combine the tests into one method call (in order to identify as single symbol), or a verbose and not clean-looking Proc method, I would like to pass an array of symbols. If any one of the parameters returns true, the validation fires.

e.g.

# Only fire the validation rule for the first page of new form, second page of edit form, or if not in a form (i.e. all other cases).
validates_presence_of :name, :if =&gt; [:not_in_form?, :in_form?(&quot;new&quot;, 1), :in_form?(&quot;new&quot;, 2)]</original-body>
  <latest-body>This is an enhancement request.

The provided ActiveRecord validation methods (e.g. validates_presence_of) accept :if as a parameter. However, it only accepts a single symbol (or a Proc or string). 

I have a case where I want the validation rule to fire in one of a number of possible cases. Rather than having to define additional methods that combine the tests into one method call (in order to identify as single symbol), or a verbose and not clean-looking Proc method, I would like to pass an array of symbols. If any one of the parameters returns true, the validation fires.

e.g.

# Only fire the validation rule for the first page of new form, second page of edit form, or if not in a form (i.e. all other cases).
validates_presence_of :name, :if =&gt; [:not_in_form?, :in_form?(&quot;new&quot;, 1), :in_form?(&quot;new&quot;, 2)]</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is an enhancement request.&lt;/p&gt;
&lt;p&gt;The provided ActiveRecord validation methods (e.g.
validates_presence_of) accept :if as a parameter. However, it only
accepts a single symbol (or a Proc or string).&lt;/p&gt;
&lt;p&gt;I have a case where I want the validation rule to fire in one of
a number of possible cases. Rather than having to define additional
methods that combine the tests into one method call (in order to
identify as single symbol), or a verbose and not clean-looking Proc
method, I would like to pass an array of symbols. If any one of the
parameters returns true, the validation fires.&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;h1&gt;Only fire the validation rule for the first page of new form,
second page of edit form, or if not in a form (i.e. all other
cases).&lt;/h1&gt;
&lt;p&gt;validates_presence_of :name, :if =&amp;gt; [:not_in_form?,
:in_form?(&quot;new&quot;, 1), :in_form?(&quot;new&quot;, 2)]&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is an enhancement request.

The provided ActiveRecord validation methods (e.g. validates_presence_of) accept :if as a parameter. However, it only accepts a single symbol (or a Proc or string). 

I have a case where I want the validation rule to fire in one of a number of possible cases. Rather than having to define additional methods that combine the tests into one method call (in order to identify as single symbol), or a verbose and not clean-looking Proc method, I would like to pass an array of symbols. If any one of the parameters returns true, the validation fires.

e.g.

# Only fire the validation rule for the first page of new form, second page of edit form, or if not in a form (i.e. all other cases).
validates_presence_of :name, :if =&gt; [:not_in_form?, :in_form?(&quot;new&quot;, 1), :in_form?(&quot;new&quot;, 2)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is an enhancement request.&lt;/p&gt;
&lt;p&gt;The provided ActiveRecord validation methods (e.g.
validates_presence_of) accept :if as a parameter. However, it only
accepts a single symbol (or a Proc or string).&lt;/p&gt;
&lt;p&gt;I have a case where I want the validation rule to fire in one of
a number of possible cases. Rather than having to define additional
methods that combine the tests into one method call (in order to
identify as single symbol), or a verbose and not clean-looking Proc
method, I would like to pass an array of symbols. If any one of the
parameters returns true, the validation fires.&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;h1&gt;Only fire the validation rule for the first page of new form,
second page of edit form, or if not in a form (i.e. all other
cases).&lt;/h1&gt;
&lt;p&gt;validates_presence_of :name, :if =&amp;gt; [:not_in_form?,
:in_form?(&quot;new&quot;, 1), :in_form?(&quot;new&quot;, 2)]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-03T09:07:35+00:00</created-at>
      <creator-id type="integer">39634</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1512</number>
      <permalink>enhance-if-argument-for-activerecord-validation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Enhance :if argument for ActiveRecord validation methods</title>
      <updated-at type="datetime">2008-12-03T09:07:38+00:00</updated-at>
      <user-id type="integer">39634</user-id>
      <version type="integer">1</version>
      <user-name>Gerald Boersma</user-name>
      <creator-name>Gerald Boersma</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1512</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I don't think those symbols with arguments are valid ruby syntax.

I would suggest just going the simple route and doing something like this,

@@@ ruby
validates_presence_of :name, :if =&gt; :in_correct_form

def in_correct_form
  ...
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't think those symbols with arguments are valid ruby
syntax.&lt;/p&gt;
&lt;p&gt;I would suggest just going the simple route and doing something
like this,&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
validates_presence_of :name, :if =&amp;gt; :in_correct_form

def in_correct_form
  ...
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-03T15:39:47+00:00</created-at>
      <creator-id type="integer">39634</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1512</number>
      <permalink>enhance-if-argument-for-activerecord-validation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Enhance :if argument for ActiveRecord validation methods</title>
      <updated-at type="datetime">2008-12-03T15:39:49+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Gerald Boersma</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1512</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Joshua:

Of course. That won't work! I agree with your resolution for this one. 

Just getting to know my way around Ruby, so I missed that one. Thanks for your help.

Cheers,
Gerald</body>
      <body-html>&lt;div&gt;&lt;p&gt;Joshua:&lt;/p&gt;
&lt;p&gt;Of course. That won't work! I agree with your resolution for
this one.&lt;/p&gt;
&lt;p&gt;Just getting to know my way around Ruby, so I missed that one.
Thanks for your help.&lt;/p&gt;
&lt;p&gt;Cheers, Gerald&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-03T17:34:11+00:00</created-at>
      <creator-id type="integer">39634</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1512</number>
      <permalink>enhance-if-argument-for-activerecord-validation-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Enhance :if argument for ActiveRecord validation methods</title>
      <updated-at type="datetime">2008-12-03T17:34:14+00:00</updated-at>
      <user-id type="integer">39634</user-id>
      <version type="integer">3</version>
      <user-name>Gerald Boersma</user-name>
      <creator-name>Gerald Boersma</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1512</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
