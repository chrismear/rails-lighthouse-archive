<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-24T08:21:22+00:00</created-at>
  <creator-id type="integer">142628</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6615</number>
  <permalink>rails-238-accepts_nested_attributes_for-and-attributes-broken</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>rails 2.3.8 : accepts_nested_attributes_for and attributes= broken</title>
  <updated-at type="datetime">2011-03-24T08:21:24+00:00</updated-at>
  <user-id type="integer">142628</user-id>
  <version type="integer">1</version>
  <user-name>ajoulie</user-name>
  <creator-name>ajoulie</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6615</url>
  <priority-name nil="true"></priority-name>
  <original-body>It seems that combinaison of accepts_nested_attributes_for and attributes= is broken into rails 2.3.8. 
The problem occurs whith following models : 

@@@
class Book &lt; ActiveRecord::Base
  has_many :authors
  accepts_nested_attributes_for authors
end

class Author &lt; ActiveRecord::Base
  belongs_to :book
end
@@@
and a params hash like this : 
@@@
params = {:name=&gt;&quot;a great book&quot;, &quot;authors_attributes&quot;=&gt;{&quot;1&quot;=&gt;{:id&quot;=&gt;&quot;2&quot;, &quot;_destroy&quot;=&gt;&quot;&quot;, :name =&gt; &quot;Boney M&quot;}}}
@@@
Calling 
@@@ 
book.attributes=params 
@@@
do not set @loaded to true into authors AssociationProxy of object book. So the next call to 
@@@ 
book.authors
@@@ 
will reload author objects from database.

This was not the case in rails 2.3.5, What is the normal behaviour ? 

ps : I saw ticket 2646 and it seems to me to be a different problem.</original-body>
  <latest-body>It seems that combinaison of accepts_nested_attributes_for and attributes= is broken into rails 2.3.8. 
The problem occurs whith following models : 

@@@
class Book &lt; ActiveRecord::Base
  has_many :authors
  accepts_nested_attributes_for authors
end

class Author &lt; ActiveRecord::Base
  belongs_to :book
end
@@@
and a params hash like this : 
@@@
params = {:name=&gt;&quot;a great book&quot;, &quot;authors_attributes&quot;=&gt;{&quot;1&quot;=&gt;{:id&quot;=&gt;&quot;2&quot;, &quot;_destroy&quot;=&gt;&quot;&quot;, :name =&gt; &quot;Boney M&quot;}}}
@@@
Calling 
@@@ 
book.attributes=params 
@@@
do not set @loaded to true into authors AssociationProxy of object book. So the next call to 
@@@ 
book.authors
@@@ 
will reload author objects from database.

This was not the case in rails 2.3.5, What is the normal behaviour ? 

ps : I saw ticket 2646 and it seems to me to be a different problem.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;It seems that combinaison of accepts_nested_attributes_for and
attributes= is broken into rails 2.3.8.&lt;br&gt;
The problem occurs whith following models :&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Book &amp;lt; ActiveRecord::Base
  has_many :authors
  accepts_nested_attributes_for authors
end

class Author &amp;lt; ActiveRecord::Base
  belongs_to :book
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and a params hash like this :&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;params = {:name=&amp;gt;&quot;a great book&quot;, &quot;authors_attributes&quot;=&amp;gt;{&quot;1&quot;=&amp;gt;{:id&quot;=&amp;gt;&quot;2&quot;, &quot;_destroy&quot;=&amp;gt;&quot;&quot;, :name =&amp;gt; &quot;Boney M&quot;}}}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Calling&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;book.attributes=params&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;do not set @loaded to true into authors AssociationProxy of
object book. So the next call to&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;book.authors&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will reload author objects from database.&lt;/p&gt;
&lt;p&gt;This was not the case in rails 2.3.5, What is the normal
behaviour ?&lt;/p&gt;
&lt;p&gt;ps : I saw ticket 2646 and it seems to me to be a different
problem.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It seems that combinaison of accepts_nested_attributes_for and attributes= is broken into rails 2.3.8. 
The problem occurs whith following models : 

@@@
class Book &lt; ActiveRecord::Base
  has_many :authors
  accepts_nested_attributes_for authors
end

class Author &lt; ActiveRecord::Base
  belongs_to :book
end
@@@
and a params hash like this : 
@@@
params = {:name=&gt;&quot;a great book&quot;, &quot;authors_attributes&quot;=&gt;{&quot;1&quot;=&gt;{:id&quot;=&gt;&quot;2&quot;, &quot;_destroy&quot;=&gt;&quot;&quot;, :name =&gt; &quot;Boney M&quot;}}}
@@@
Calling 
@@@ 
book.attributes=params 
@@@
do not set @loaded to true into authors AssociationProxy of object book. So the next call to 
@@@ 
book.authors
@@@ 
will reload author objects from database.

This was not the case in rails 2.3.5, What is the normal behaviour ? 

ps : I saw ticket 2646 and it seems to me to be a different problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It seems that combinaison of accepts_nested_attributes_for and
attributes= is broken into rails 2.3.8.&lt;br&gt;
The problem occurs whith following models :&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Book &amp;lt; ActiveRecord::Base
  has_many :authors
  accepts_nested_attributes_for authors
end

class Author &amp;lt; ActiveRecord::Base
  belongs_to :book
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and a params hash like this :&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;params = {:name=&amp;gt;&quot;a great book&quot;, &quot;authors_attributes&quot;=&amp;gt;{&quot;1&quot;=&amp;gt;{:id&quot;=&amp;gt;&quot;2&quot;, &quot;_destroy&quot;=&amp;gt;&quot;&quot;, :name =&amp;gt; &quot;Boney M&quot;}}}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Calling&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;book.attributes=params&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;do not set @loaded to true into authors AssociationProxy of
object book. So the next call to&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;book.authors&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;will reload author objects from database.&lt;/p&gt;
&lt;p&gt;This was not the case in rails 2.3.5, What is the normal
behaviour ?&lt;/p&gt;
&lt;p&gt;ps : I saw ticket 2646 and it seems to me to be a different
problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-24T08:21:22+00:00</created-at>
      <creator-id type="integer">142628</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6615</number>
      <permalink>rails-238-accepts_nested_attributes_for-and-attributes-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>rails 2.3.8 : accepts_nested_attributes_for and attributes= broken</title>
      <updated-at type="datetime">2011-03-24T08:21:24+00:00</updated-at>
      <user-id type="integer">142628</user-id>
      <version type="integer">1</version>
      <user-name>ajoulie</user-name>
      <creator-name>ajoulie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6615</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
