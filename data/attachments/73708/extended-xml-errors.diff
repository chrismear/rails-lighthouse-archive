From eaa5806d5a8a81828b84c275da72c918f6248325 Mon Sep 17 00:00:00 2001
From: Scott Becker <becker.scott@gmail.com>
Date: Tue, 23 Dec 2008 17:16:13 -0800
Subject: [PATCH] Add an "extended" option to the to_xml method for active record errors. This breaks out the attribute and message into individual tags for machine readability

---
 activerecord/lib/active_record/validations.rb |   34 ++++++++++++++++++++++++-
 activerecord/test/cases/validations_test.rb   |    9 ++++++
 2 files changed, 42 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/validations.rb b/activerecord/lib/active_record/validations.rb
index 6a9690b..e358dd6 100644
--- a/activerecord/lib/active_record/validations.rb
+++ b/activerecord/lib/active_record/validations.rb
@@ -244,14 +244,46 @@ module ActiveRecord
     #   #       <error>Name can't be blank</error>
     #   #       <error>Address can't be blank</error>
     #   #     </errors>
+    #
+    # You may also return an 'extended' version which breaks out the attribute
+    # and message into individual tags for machine readability.
+    #
+    #   company = Company.create(:address => '123 First St.')
+    #   company.errors.to_xml(:extended => true)
+    #   # =>  <?xml version="1.0" encoding="UTF-8"?>
+    #   #     <errors>
+    #   #       <error>
+    #   #         <attribute>name</attribute>
+    #   #         <message>is too short (minimum is 5 characters)</message>
+    #   #       </error>
+    #   #       <error>
+    #   #         <attribute>name</attribute>
+    #   #         <message>can't be blank</message>
+    #   #       </error>
+    #   #       <error>
+    #   #         <attribute>address</attribute>
+    #   #         <message>can't be blank</message>
+    #   #       </error>
+    #   #     </errors>
+    #
     def to_xml(options={})
       options[:root] ||= "errors"
       options[:indent] ||= 2
+      options[:extended] ||= false
       options[:builder] ||= Builder::XmlMarkup.new(:indent => options[:indent])
 
       options[:builder].instruct! unless options.delete(:skip_instruct)
       options[:builder].errors do |e|
-        full_messages.each { |msg| e.error(msg) }
+        if options[:extended]
+          each { |attribute, message|
+            e.error {
+              e.attribute(attribute)
+              e.message(message)
+            }
+          }
+        else
+          full_messages.each { |msg| e.error(msg) }
+        end
       end
     end
     
diff --git a/activerecord/test/cases/validations_test.rb b/activerecord/test/cases/validations_test.rb
index 380d8ac..ca99e2a 100644
--- a/activerecord/test/cases/validations_test.rb
+++ b/activerecord/test/cases/validations_test.rb
@@ -1399,6 +1399,15 @@ class ValidationsTest < ActiveRecord::TestCase
     assert xml.include?("<error>Content Empty</error>")
   end
 
+  def test_errors_to_xml_extended
+    r = Reply.new :title => "Wrong Create"
+    assert !r.valid?
+    xml = r.errors.to_xml(:skip_instruct => true, :extended => true)
+    assert_equal "<errors>", xml.first(8)
+    assert xml.include?("<error>\n    <attribute>title</attribute>\n    <message>is Wrong Create</message>\n  </error>")
+    assert xml.include?("<error>\n    <attribute>content</attribute>\n    <message>Empty</message>\n  </error>")
+  end
+
   def test_validation_order
      Topic.validates_presence_of :title
      Topic.validates_length_of :title, :minimum => 2
-- 
1.5.4.3

