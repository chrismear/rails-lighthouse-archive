<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-03-25T06:19:30+00:00</created-at>
  <creator-id type="integer">24170</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">4265</number>
  <permalink>unable-to-specify-default-values-for-params-hash</permalink>
  <priority type="integer">2</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>3.0 bug router</tag>
  <title>[PATCH] Defaults support for the new Router DSL</title>
  <updated-at type="datetime">2010-10-15T23:01:49+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">7</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>VirtualFunction</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4265</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Medium</priority-name>
  <original-body>There is not way to be able to set default values for the params hash in Rails 3.0

In Rails 2.x I had something like this

@@@
  map.with_options :controller =&gt; 'pages', :action =&gt; 'show' do |info|
    info.home_page '/', :id =&gt; 'about'
    [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
      info.__send__ &quot;#{page}_page&quot;, &quot;/#{page}&quot;, :id =&gt; page
    end
  end
@@@

As you can see, I'm supplying a default value for the :id in the params hash. (Yes, I know it's pretty ugly given it's use of __send__, but it work nicely)

In Rails 3.0 there is no way I can do this. 

I can do something like:

@@@
  [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
    match page =&gt; 'pages#show', :as =&gt; &quot;#{page}_page&quot;
  end
@@@

Which sets up named routes that I can use, but there is no way the :id param can be passed into the controller

or I can do something like:

@@@
  match &quot;:id&quot; =&gt; 'pages#show', :constraints =&gt; { :id =&gt; /services|support|podcasts|partners|disclaimer|privacy|design|public/ }
@@@

This allows me to pass :id properly via the constraints option, but doesn't allow me to create friendly named routes.

It seems I can have one or the other, but not both.

Would it not be possible to do something like:

@@@
  [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
    match page =&gt; 'pages#show', :as =&gt; &quot;#{page}_page&quot;, :defaults =&gt; { :id =&gt; page }
  end
@@@

I see internally there is still support for defaults as the :to =&gt; 'controller#action' notation is translated internally by ActionDispatch::Routing::Mapper::Mapping#defaults</original-body>
  <latest-body>There is not way to be able to set default values for the params hash in Rails 3.0

In Rails 2.x I had something like this

@@@
  map.with_options :controller =&gt; 'pages', :action =&gt; 'show' do |info|
    info.home_page '/', :id =&gt; 'about'
    [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
      info.__send__ &quot;#{page}_page&quot;, &quot;/#{page}&quot;, :id =&gt; page
    end
  end
@@@

As you can see, I'm supplying a default value for the :id in the params hash. (Yes, I know it's pretty ugly given it's use of __send__, but it work nicely)

In Rails 3.0 there is no way I can do this. 

I can do something like:

@@@
  [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
    match page =&gt; 'pages#show', :as =&gt; &quot;#{page}_page&quot;
  end
@@@

Which sets up named routes that I can use, but there is no way the :id param can be passed into the controller

or I can do something like:

@@@
  match &quot;:id&quot; =&gt; 'pages#show', :constraints =&gt; { :id =&gt; /services|support|podcasts|partners|disclaimer|privacy|design|public/ }
@@@

This allows me to pass :id properly via the constraints option, but doesn't allow me to create friendly named routes.

It seems I can have one or the other, but not both.

Would it not be possible to do something like:

@@@
  [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
    match page =&gt; 'pages#show', :as =&gt; &quot;#{page}_page&quot;, :defaults =&gt; { :id =&gt; page }
  end
@@@

I see internally there is still support for defaults as the :to =&gt; 'controller#action' notation is translated internally by ActionDispatch::Routing::Mapper::Mapping#defaults</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;There is not way to be able to set default values for the params
hash in Rails 3.0&lt;/p&gt;
&lt;p&gt;In Rails 2.x I had something like this&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  map.with_options :controller =&amp;gt; 'pages', :action =&amp;gt; 'show' do |info|
    info.home_page '/', :id =&amp;gt; 'about'
    [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
      info.__send__ &quot;#{page}_page&quot;, &quot;/#{page}&quot;, :id =&amp;gt; page
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see, I'm supplying a default value for the :id in the
params hash. (Yes, I know it's pretty ugly given it's use of
&lt;strong&gt;send&lt;/strong&gt;, but it work nicely)&lt;/p&gt;
&lt;p&gt;In Rails 3.0 there is no way I can do this.&lt;/p&gt;
&lt;p&gt;I can do something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
    match page =&amp;gt; 'pages#show', :as =&amp;gt; &quot;#{page}_page&quot;
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Which sets up named routes that I can use, but there is no way
the :id param can be passed into the controller&lt;/p&gt;
&lt;p&gt;or I can do something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  match &quot;:id&quot; =&amp;gt; 'pages#show', :constraints =&amp;gt; { :id =&amp;gt; /services|support|podcasts|partners|disclaimer|privacy|design|public/ }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This allows me to pass :id properly via the constraints option,
but doesn't allow me to create friendly named routes.&lt;/p&gt;
&lt;p&gt;It seems I can have one or the other, but not both.&lt;/p&gt;
&lt;p&gt;Would it not be possible to do something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
    match page =&amp;gt; 'pages#show', :as =&amp;gt; &quot;#{page}_page&quot;, :defaults =&amp;gt; { :id =&amp;gt; page }
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I see internally there is still support for defaults as the :to
=&amp;gt; 'controller#action' notation is translated internally by
ActionDispatch::Routing::Mapper::Mapping#defaults&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is not way to be able to set default values for the params hash in Rails 3.0

In Rails 2.x I had something like this

@@@
  map.with_options :controller =&gt; 'pages', :action =&gt; 'show' do |info|
    info.home_page '/', :id =&gt; 'about'
    [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
      info.__send__ &quot;#{page}_page&quot;, &quot;/#{page}&quot;, :id =&gt; page
    end
  end
@@@

As you can see, I'm supplying a default value for the :id in the params hash. (Yes, I know it's pretty ugly given it's use of __send__, but it work nicely)

In Rails 3.0 there is no way I can do this. 

I can do something like:

@@@
  [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
    match page =&gt; 'pages#show', :as =&gt; &quot;#{page}_page&quot;
  end
@@@

Which sets up named routes that I can use, but there is no way the :id param can be passed into the controller

or I can do something like:

@@@
  match &quot;:id&quot; =&gt; 'pages#show', :constraints =&gt; { :id =&gt; /services|support|podcasts|partners|disclaimer|privacy|design|public/ }
@@@

This allows me to pass :id properly via the constraints option, but doesn't allow me to create friendly named routes.

It seems I can have one or the other, but not both.

Would it not be possible to do something like:

@@@
  [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
    match page =&gt; 'pages#show', :as =&gt; &quot;#{page}_page&quot;, :defaults =&gt; { :id =&gt; page }
  end
@@@

I see internally there is still support for defaults as the :to =&gt; 'controller#action' notation is translated internally by ActionDispatch::Routing::Mapper::Mapping#defaults</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is not way to be able to set default values for the params
hash in Rails 3.0&lt;/p&gt;
&lt;p&gt;In Rails 2.x I had something like this&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  map.with_options :controller =&amp;gt; 'pages', :action =&amp;gt; 'show' do |info|
    info.home_page '/', :id =&amp;gt; 'about'
    [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
      info.__send__ &quot;#{page}_page&quot;, &quot;/#{page}&quot;, :id =&amp;gt; page
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see, I'm supplying a default value for the :id in the
params hash. (Yes, I know it's pretty ugly given it's use of
&lt;strong&gt;send&lt;/strong&gt;, but it work nicely)&lt;/p&gt;
&lt;p&gt;In Rails 3.0 there is no way I can do this.&lt;/p&gt;
&lt;p&gt;I can do something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
    match page =&amp;gt; 'pages#show', :as =&amp;gt; &quot;#{page}_page&quot;
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Which sets up named routes that I can use, but there is no way
the :id param can be passed into the controller&lt;/p&gt;
&lt;p&gt;or I can do something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  match &quot;:id&quot; =&amp;gt; 'pages#show', :constraints =&amp;gt; { :id =&amp;gt; /services|support|podcasts|partners|disclaimer|privacy|design|public/ }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This allows me to pass :id properly via the constraints option,
but doesn't allow me to create friendly named routes.&lt;/p&gt;
&lt;p&gt;It seems I can have one or the other, but not both.&lt;/p&gt;
&lt;p&gt;Would it not be possible to do something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  [ 'services', 'support', 'podcasts', 'partners', 'disclaimer', 'privacy', 'design', 'public' ].each do |page|
    match page =&amp;gt; 'pages#show', :as =&amp;gt; &quot;#{page}_page&quot;, :defaults =&amp;gt; { :id =&amp;gt; page }
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I see internally there is still support for defaults as the :to
=&amp;gt; 'controller#action' notation is translated internally by
ActionDispatch::Routing::Mapper::Mapping#defaults&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-25T06:19:30+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4265</number>
      <permalink>unable-to-specify-default-values-for-params-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Unable to specify default values for params hash</title>
      <updated-at type="datetime">2010-03-25T06:19:31+00:00</updated-at>
      <user-id type="integer">24170</user-id>
      <version type="integer">1</version>
      <user-name>VirtualFunction</user-name>
      <creator-name>VirtualFunction</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4265</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yep, I can confirm this. It also means you can't do routes with optional params, e.g:

@@@
# Old style
map.page 'pages/:id', :controller =&gt; 'pages', :action =&gt; 'show', :id =&gt; 'default'
# GET /pages -&gt; { :controller =&gt; 'pages', :action =&gt; 'show', :id =&gt; 'default' }

# New style
match 'pages/:id' =&gt; 'pages#show', :id =&gt; 'default'
# GET /pages -&gt; Routing Error
@@@

I thought it may be intentional but even if you tried to add a match for 'pages' you'd have to route it to a different action that set a default :id. I can come up with a patch but some feedback would be nice on whether only defaults in an explicit sub hash (e.g :defaults =&gt; { }) or any extra keys in the options hash as well. Regexp requirements can still be set in the options hash so I'm guessing that defaults should be the same.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yep, I can confirm this. It also means you can't do routes with
optional params, e.g:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# Old style
map.page 'pages/:id', :controller =&amp;gt; 'pages', :action =&amp;gt; 'show', :id =&amp;gt; 'default'
# GET /pages -&amp;gt; { :controller =&amp;gt; 'pages', :action =&amp;gt; 'show', :id =&amp;gt; 'default' }

# New style
match 'pages/:id' =&amp;gt; 'pages#show', :id =&amp;gt; 'default'
# GET /pages -&amp;gt; Routing Error&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I thought it may be intentional but even if you tried to add a
match for 'pages' you'd have to route it to a different action that
set a default :id. I can come up with a patch but some feedback
would be nice on whether only defaults in an explicit sub hash (e.g
:defaults =&amp;gt; { }) or any extra keys in the options hash as well.
Regexp requirements can still be set in the options hash so I'm
guessing that defaults should be the same.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-25T18:09:45+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4265</number>
      <permalink>unable-to-specify-default-values-for-params-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Unable to specify default values for params hash</title>
      <updated-at type="datetime">2010-03-25T18:09:47+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>VirtualFunction</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4265</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Oops - optional params are now specified using parentheses, so I take that back about not being able to specify them.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops - optional params are now specified using parentheses, so I
take that back about not being able to specify them.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-26T07:36:34+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4265</number>
      <permalink>unable-to-specify-default-values-for-params-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Unable to specify default values for params hash</title>
      <updated-at type="datetime">2010-03-26T07:36:37+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">3</version>
      <user-name>Andrew White</user-name>
      <creator-name>VirtualFunction</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4265</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Okay the attached patch adds defaults support to the new routing DSL allowing the following:

@@@
  root :to =&gt; 'pages#show', :id =&gt; 'home'

  %w(about contact services).each do |page|
    match page =&gt; 'pages#show', :as =&gt; &quot;#{page}_page&quot;, :id =&gt; page
  end
@@@

It supports specifying defaults in the options hash, in a defaults hash as part of the options hash and also as a scope.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Okay the attached patch adds defaults support to the new routing
DSL allowing the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  root :to =&amp;gt; 'pages#show', :id =&amp;gt; 'home'

  %w(about contact services).each do |page|
    match page =&amp;gt; 'pages#show', :as =&amp;gt; &quot;#{page}_page&quot;, :id =&amp;gt; page
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It supports specifying defaults in the options hash, in a
defaults hash as part of the options hash and also as a scope.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-26T12:49:02+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4265</number>
      <permalink>unable-to-specify-default-values-for-params-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Unable to specify default values for params hash</title>
      <updated-at type="datetime">2010-03-26T12:49:07+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">4</version>
      <user-name>Andrew White</user-name>
      <creator-name>VirtualFunction</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4265</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1

Patch applies cleanly and all tests pass. Fixes the issue. Nice work, Andrew.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;Patch applies cleanly and all tests pass. Fixes the issue. Nice
work, Andrew.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-26T13:56:10+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
:milestone: 
:title: Unable to specify default values for params hash
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4265</number>
      <permalink>unable-to-specify-default-values-for-params-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>3.0 bug router</tag>
      <title>[PATCH] Defaults support for the new Router DSL</title>
      <updated-at type="datetime">2010-03-26T13:56:13+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">5</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>VirtualFunction</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4265</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [3d746fcdb584767c476408f395320e934fd5383e]) Add parameter defaults support to new routing DSL [#4265 state:resolved]

Signed-off-by: wycats &lt;wycats@gmail.com&gt;
http://github.com/rails/rails/commit/3d746fcdb584767c476408f395320e934fd5383e</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/3d746fcdb584767c476408f395320e934fd5383e&quot;
title=
&quot;Changeset [3d746fcdb584767c476408f395320e934fd5383e]&quot;&gt;[3d746fcdb584767c476408f395320e934fd5383e]&lt;/a&gt;)
Add parameter defaults support to new routing DSL [&lt;a href=
&quot;/projects/8994/tickets/4265&quot; title=&quot;Ticket #4265&quot;&gt;#4265&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: wycats &lt;a href=
&quot;mailto:wycats@gmail.com&quot;&gt;wycats@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/3d746fcdb584767c476408f395320e934fd5383e&quot;&gt;
http://github.com/rails/rails/commit/3d746fcdb584767c476408f395320e...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-27T07:21:21+00:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- 
:state: verified
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4265</number>
      <permalink>unable-to-specify-default-values-for-params-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.0 bug router</tag>
      <title>[PATCH] Defaults support for the new Router DSL</title>
      <updated-at type="datetime">2010-03-27T07:21:22+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>VirtualFunction</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4265</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:49+01:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4265</number>
      <permalink>unable-to-specify-default-values-for-params-hash</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>3.0 bug router</tag>
      <title>[PATCH] Defaults support for the new Router DSL</title>
      <updated-at type="datetime">2010-10-15T23:01:49+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">7</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>VirtualFunction</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4265</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Medium</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a2344c507d3b06a21de953348161a547b8eefdd0</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-03-26T12:49:02+00:00</created-at>
      <filename>0001-add-defaults-support-to-new-mapper-dsl.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">460916</id>
      <size type="integer">3580</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/460916/0001-add-defaults-support-to-new-mapper-dsl.diff</url>
    </attachment>
  </attachments>
</ticket>
