<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-10-02T10:46:25+01:00</created-at>
  <creator-id type="integer">71516</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5742</number>
  <permalink>migrations-rollback-in-production-environment</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>activerecord migrations production rollback</tag>
  <title>Migrations rollback in production environment</title>
  <updated-at type="datetime">2011-02-08T09:43:44+00:00</updated-at>
  <user-id type="integer">71516</user-id>
  <version type="integer">6</version>
  <user-name>Bogdan Gusiev</user-name>
  <creator-name>Bogdan Gusiev</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5742</url>
  <priority-name>Low</priority-name>
  <original-body>Let's say we have batch of migrations in new production deployment.
One migration fails by some reason and deployment didn't occur.

In this case it would be great to rollback all already applied migrations in this deployment but not only the last one because the code will fall back to previous working version but database does not. 

As I know Postgres support rollback of structural changes but mysql does not (not sure about others). But implementing this at least for postgres heal us from a lot of pain.</original-body>
  <latest-body>Let's say we have batch of migrations in new production deployment.
One migration fails by some reason and deployment didn't occur.

In this case it would be great to rollback all already applied migrations in this deployment but not only the last one because the code will fall back to previous working version but database does not. 

As I know Postgres support rollback of structural changes but mysql does not (not sure about others). But implementing this at least for postgres heal us from a lot of pain.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Let's say we have batch of migrations in new production
deployment.&lt;br&gt;
One migration fails by some reason and deployment didn't occur.&lt;/p&gt;
&lt;p&gt;In this case it would be great to rollback all already applied
migrations in this deployment but not only the last one because the
code will fall back to previous working version but database does
not.&lt;/p&gt;
&lt;p&gt;As I know Postgres support rollback of structural changes but
mysql does not (not sure about others). But implementing this at
least for postgres heal us from a lot of pain.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Let's say we have batch of migrations in new production deployment.
One migration fails by some reason and deployment didn't occur.

In this case it would be great to rollback all already applied migrations in this deployment but not only the last one because the code will fall back to previous working version but database does not. 

As I know Postgres support rollback of structural changes but mysql does not (not sure about others). But implementing this at least for postgres heal us from a lot of pain.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Let's say we have batch of migrations in new production
deployment.&lt;br&gt;
One migration fails by some reason and deployment didn't occur.&lt;/p&gt;
&lt;p&gt;In this case it would be great to rollback all already applied
migrations in this deployment but not only the last one because the
code will fall back to previous working version but database does
not.&lt;/p&gt;
&lt;p&gt;As I know Postgres support rollback of structural changes but
mysql does not (not sure about others). But implementing this at
least for postgres heal us from a lot of pain.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-30T14:32:34+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5742</number>
      <permalink>migrations-rollback-in-production-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord migrations production rollback</tag>
      <title>Migrations rollback in production environment</title>
      <updated-at type="datetime">2010-09-30T14:32:36+01:00</updated-at>
      <user-id type="integer">71516</user-id>
      <version type="integer">1</version>
      <user-name>Bogdan Gusiev</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5742</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Please provide a patch (https://rails.lighthouseapp.com/projects/8994/sending-patches) with a fix and/or a failing test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please provide a patch (&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/sending-patches&quot;&gt;https://rails.lighthouseapp.com/projects/8994/sending-patches&lt;/a&gt;)
with a fix and/or a failing test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-09T16:20:21+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5742</number>
      <permalink>migrations-rollback-in-production-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord migrations production rollback</tag>
      <title>Migrations rollback in production environment</title>
      <updated-at type="datetime">2010-10-09T16:20:23+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">2</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5742</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:31:02+00:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5742</number>
      <permalink>migrations-rollback-in-production-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord migrations production rollback</tag>
      <title>Migrations rollback in production environment</title>
      <updated-at type="datetime">2011-02-02T16:48:01+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5742</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:31:03+00:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5742</number>
      <permalink>migrations-rollback-in-production-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord migrations production rollback</tag>
      <title>Migrations rollback in production environment</title>
      <updated-at type="datetime">2011-02-02T16:47:52+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5742</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[state:open]

Yes, I think this is important feature for rails.

It is connected with production releases and complex migrations when the data should be changed significantly.
All this process use to fail sometimes.

In this case if we could rollback the database to the state before migration - we would never have problems with failed deployments.

Will provide the failing test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;[state:open]&lt;/p&gt;
&lt;p&gt;Yes, I think this is important feature for rails.&lt;/p&gt;
&lt;p&gt;It is connected with production releases and complex migrations
when the data should be changed significantly.&lt;br&gt;
All this process use to fail sometimes.&lt;/p&gt;
&lt;p&gt;In this case if we could rollback the database to the state
before migration - we would never have problems with failed
deployments.&lt;/p&gt;
&lt;p&gt;Will provide the failing test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-08T08:54:31+00:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5742</number>
      <permalink>migrations-rollback-in-production-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord migrations production rollback</tag>
      <title>Migrations rollback in production environment</title>
      <updated-at type="datetime">2011-02-08T08:54:36+00:00</updated-at>
      <user-id type="integer">71516</user-id>
      <version type="integer">5</version>
      <user-name>Bogdan Gusiev</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5742</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Test and patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Test and patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-08T09:43:36+00:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5742</number>
      <permalink>migrations-rollback-in-production-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord migrations production rollback</tag>
      <title>Migrations rollback in production environment</title>
      <updated-at type="datetime">2011-02-08T09:43:44+00:00</updated-at>
      <user-id type="integer">71516</user-id>
      <version type="integer">6</version>
      <user-name>Bogdan Gusiev</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5742</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>e58bfd4da889eaa536b4e7ca4375e9af8a547446</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-08T09:43:36+00:00</created-at>
      <filename>0001-migrations-make-ddl-transaction-to-rollback-all-migr.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">901041</id>
      <size type="integer">4113</size>
      <uploader-id type="integer">71516</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/901041/0001-migrations-make-ddl-transaction-to-rollback-all-migr.patch</url>
    </attachment>
  </attachments>
</ticket>
