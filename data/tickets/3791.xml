<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-19T17:52:53+01:00</created-at>
  <creator-id type="integer">28432</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3791</number>
  <permalink>activerecordbaseexecute_callstack_for_multiparameter_attributes-doesnt-appear-to-handle-serialized-columns</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord multiparameter_attributes serialize</tag>
  <title>ActiveRecord::Base.execute_callstack_for_multiparameter_attributes doesn't appear to handle serialized columns</title>
  <updated-at type="datetime">2010-10-21T11:32:51+01:00</updated-at>
  <user-id type="integer">17433</user-id>
  <version type="integer">6</version>
  <user-name>Aditya Sanghi</user-name>
  <creator-name>Mike Summers</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3791</url>
  <priority-name>Low</priority-name>
  <original-body>I'm getting &quot;... error(s) on assignment of multiparameter attributes&quot; out of execute_callstack_for_multiparameter_attribute on a serialized column that is a Time because column_for_attributes returns String.

This line inserted after the call to column_for_attributes (line #3055 in base.rb for 2.3.5) is my take at fixing things up:
&lt;code&gt;
klass = (Time.is_a?(self.class.serialized_attributes[name]) ? Time : 
        (Date.is_a?(self.class.serialized_attributes[name]) ? Date : self.class.serialized_attributes[name])) if self.class.serialized_attributes.key?(name)

My column is serialized generically as an Object which leads to the is_a? 's</original-body>
  <latest-body>I'm getting &quot;... error(s) on assignment of multiparameter attributes&quot; out of execute_callstack_for_multiparameter_attribute on a serialized column that is a Time because column_for_attributes returns String.

This line inserted after the call to column_for_attributes (line #3055 in base.rb for 2.3.5) is my take at fixing things up:
&lt;code&gt;
klass = (Time.is_a?(self.class.serialized_attributes[name]) ? Time : 
        (Date.is_a?(self.class.serialized_attributes[name]) ? Date : self.class.serialized_attributes[name])) if self.class.serialized_attributes.key?(name)

My column is serialized generically as an Object which leads to the is_a? 's</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm getting &quot;... error(s) on assignment of multiparameter
attributes&quot; out of execute_callstack_for_multiparameter_attribute
on a serialized column that is a Time because column_for_attributes
returns String.&lt;/p&gt;
&lt;p&gt;This line inserted after the call to column_for_attributes (line
&lt;a href=&quot;/projects/8994/tickets/3055&quot; title=
&quot;Ticket #3055&quot;&gt;#3055&lt;/a&gt; in base.rb for 2.3.5) is my take at fixing
things up:&lt;br&gt;
&lt;code&gt;&lt;br&gt;
klass = (Time.is_a?(self.class.serialized_attributes[name]) ? Time
:&lt;br&gt;&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    (Date.is_a?(self.class.serialized_attributes[name]) ? Date : self.class.serialized_attributes[name])) if self.class.serialized_attributes.key?(name)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;My column is serialized generically as an Object which leads to
the is_a? 's&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm getting &quot;... error(s) on assignment of multiparameter attributes&quot; out of execute_callstack_for_multiparameter_attribute on a serialized column that is a Time because column_for_attributes returns String.

This line inserted after the call to column_for_attributes (line #3055 in base.rb for 2.3.5) is my take at fixing things up:
&lt;code&gt;
klass = (Time.is_a?(self.class.serialized_attributes[name]) ? Time : 
        (Date.is_a?(self.class.serialized_attributes[name]) ? Date : self.class.serialized_attributes[name])) if self.class.serialized_attributes.key?(name)

My column is serialized generically as an Object which leads to the is_a? 's</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm getting &quot;... error(s) on assignment of multiparameter
attributes&quot; out of execute_callstack_for_multiparameter_attribute
on a serialized column that is a Time because column_for_attributes
returns String.&lt;/p&gt;
&lt;p&gt;This line inserted after the call to column_for_attributes (line
&lt;a href=&quot;/projects/8994/tickets/3055&quot; title=
&quot;Ticket #3055&quot;&gt;#3055&lt;/a&gt; in base.rb for 2.3.5) is my take at fixing
things up:&lt;br&gt;
&lt;code&gt;&lt;br&gt;
klass = (Time.is_a?(self.class.serialized_attributes[name]) ? Time
:&lt;br&gt;&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    (Date.is_a?(self.class.serialized_attributes[name]) ? Date : self.class.serialized_attributes[name])) if self.class.serialized_attributes.key?(name)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;My column is serialized generically as an Object which leads to
the is_a? 's&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-26T21:57:34+00:00</created-at>
      <creator-id type="integer">28432</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3791</number>
      <permalink>activerecordbaseexecute_callstack_for_multiparameter_attributes-doesnt-appear-to-handle-serialized-columns</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord multiparameter_attributes serialize</tag>
      <title>ActiveRecord::Base.execute_callstack_for_multiparameter_attributes doesn't appear to handle serialized columns</title>
      <updated-at type="datetime">2010-01-26T22:03:53+00:00</updated-at>
      <user-id type="integer">28432</user-id>
      <version type="integer">1</version>
      <user-name>Mike Summers</user-name>
      <creator-name>Mike Summers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3791</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-26T21:58:18+00:00</created-at>
      <creator-id type="integer">28432</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3791</number>
      <permalink>activerecordbaseexecute_callstack_for_multiparameter_attributes-doesnt-appear-to-handle-serialized-columns</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord multiparameter_attributes serialize</tag>
      <title>ActiveRecord::Base.execute_callstack_for_multiparameter_attributes doesn't appear to handle serialized columns</title>
      <updated-at type="datetime">2010-01-26T21:58:20+00:00</updated-at>
      <user-id type="integer">28432</user-id>
      <version type="integer">2</version>
      <user-name>Mike Summers</user-name>
      <creator-name>Mike Summers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3791</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

Do you still see this bug on current 3.0.1? Could you provide a failing test case?

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;Do you still see this bug on current 3.0.1? Could you provide a
failing test case?&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-17T17:36:19+01:00</created-at>
      <creator-id type="integer">28432</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3791</number>
      <permalink>activerecordbaseexecute_callstack_for_multiparameter_attributes-doesnt-appear-to-handle-serialized-columns</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord multiparameter_attributes serialize</tag>
      <title>ActiveRecord::Base.execute_callstack_for_multiparameter_attributes doesn't appear to handle serialized columns</title>
      <updated-at type="datetime">2010-10-17T17:36:20+01:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">3</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Mike Summers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3791</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi Mike,

We're currently discussing refactoring of the multiparameter assignment in ticket 4346. You may want to have a look at that thread too but although that issue is related to multiparameter and time class, it is not dealing specifically with serialized attributes. 

Additionally, i think the solution you are suggesting is only for serialized attributes which although an edge use case, it not the usual way to do things.

Currently the klass of the attribute is determined by reflection over an association OR by column_for_attribute(name_of_column). The class is finally determined by sending the method &quot;klass&quot; on the returned object. You need to update your model, to ensure that column_for_attribute(your_serialized_column) returns a Time Column object, so that running &quot;klass&quot; on it returns &quot;Time&quot;, then you're set to go.

The code below should get you started.

@@@ ruby
  class YourModel &lt; ActiveRecord::Base
    columns_hash[&quot;your_serialized_time_column&quot;] = ActiveRecord::ConnectionAdapters::Column.new(&quot;your_serialized_time_column&quot;, nil, &quot;time&quot;)
  end
@@@

Do let us know if this helps you.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Mike,&lt;/p&gt;
&lt;p&gt;We're currently discussing refactoring of the multiparameter
assignment in ticket 4346. You may want to have a look at that
thread too but although that issue is related to multiparameter and
time class, it is not dealing specifically with serialized
attributes.&lt;/p&gt;
&lt;p&gt;Additionally, i think the solution you are suggesting is only
for serialized attributes which although an edge use case, it not
the usual way to do things.&lt;/p&gt;
&lt;p&gt;Currently the klass of the attribute is determined by reflection
over an association OR by column_for_attribute(name_of_column). The
class is finally determined by sending the method &quot;klass&quot; on the
returned object. You need to update your model, to ensure that
column_for_attribute(your_serialized_column) returns a Time Column
object, so that running &quot;klass&quot; on it returns &quot;Time&quot;, then you're
set to go.&lt;/p&gt;
&lt;p&gt;The code below should get you started.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class YourModel &amp;lt; ActiveRecord::Base
    columns_hash[&quot;your_serialized_time_column&quot;] = ActiveRecord::ConnectionAdapters::Column.new(&quot;your_serialized_time_column&quot;, nil, &quot;time&quot;)
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Do let us know if this helps you.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-17T18:54:02+01:00</created-at>
      <creator-id type="integer">28432</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3791</number>
      <permalink>activerecordbaseexecute_callstack_for_multiparameter_attributes-doesnt-appear-to-handle-serialized-columns</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord multiparameter_attributes serialize</tag>
      <title>ActiveRecord::Base.execute_callstack_for_multiparameter_attributes doesn't appear to handle serialized columns</title>
      <updated-at type="datetime">2010-10-17T18:54:05+01:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">4</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Mike Summers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3791</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>We're currently discussing refactoring of the multiparameter &lt;a href=&quot;http://www.weddinginthebox.com/blog/informal-ivory-wedding-dress.html&quot;&gt;ivory informal wedding gown&lt;/a&gt; in ticket 4346. You may want to have a look at that thread too but although that issue is related to multiparameter and time class, it is not dealing specifically with serialized attributes.Additionally, i think the &lt;a href=&quot;http://www.weddinginthebox.com/blog/informal-ivory-wedding-dress.html&quot;&gt;informal ivory wedding dress&lt;/a&gt; you are suggesting is only for serialized attributes which although an edge use case, it not the usual way to do things.</body>
      <body-html>&lt;div&gt;&lt;p&gt;We're currently discussing refactoring of the multiparameter
&lt;a href=
&quot;http://www.weddinginthebox.com/blog/informal-ivory-wedding-dress.html&quot;&gt;
ivory informal wedding gown&lt;/a&gt; in ticket 4346. You may want to
have a look at that thread too but although that issue is related
to multiparameter and time class, it is not dealing specifically
with serialized attributes.Additionally, i think the &lt;a href=
&quot;http://www.weddinginthebox.com/blog/informal-ivory-wedding-dress.html&quot;&gt;
informal ivory wedding dress&lt;/a&gt; you are suggesting is only for
serialized attributes which although an edge use case, it not the
usual way to do things.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T06:20:44+01:00</created-at>
      <creator-id type="integer">28432</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3791</number>
      <permalink>activerecordbaseexecute_callstack_for_multiparameter_attributes-doesnt-appear-to-handle-serialized-columns</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord multiparameter_attributes serialize</tag>
      <title>ActiveRecord::Base.execute_callstack_for_multiparameter_attributes doesn't appear to handle serialized columns</title>
      <updated-at type="datetime">2010-10-19T17:52:53+01:00</updated-at>
      <user-id type="integer">120610</user-id>
      <version type="integer">5</version>
      <user-name>koukou</user-name>
      <creator-name>Mike Summers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3791</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Not sure if there is any clean way to determine the class of the serialized attribute. Closing this ticket as wontfix given that the above solution should work. Can re-open if the solution above doesnt work.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Not sure if there is any clean way to determine the class of the
serialized attribute. Closing this ticket as wontfix given that the
above solution should work. Can re-open if the solution above
doesnt work.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-21T11:32:45+01:00</created-at>
      <creator-id type="integer">28432</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3791</number>
      <permalink>activerecordbaseexecute_callstack_for_multiparameter_attributes-doesnt-appear-to-handle-serialized-columns</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord multiparameter_attributes serialize</tag>
      <title>ActiveRecord::Base.execute_callstack_for_multiparameter_attributes doesn't appear to handle serialized columns</title>
      <updated-at type="datetime">2010-10-21T11:32:51+01:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">6</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Mike Summers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3791</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
