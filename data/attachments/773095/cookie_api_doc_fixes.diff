From 41455cf6a9847b50a9a1f6b4b5b249f24b05403b Mon Sep 17 00:00:00 2001
From: Doug Ireton <dougireton@gmail.com>
Date: Tue, 16 Nov 2010 07:19:28 -0800
Subject: [PATCH] Update Cookies API documentation.

Clarify Cookie API examples.
Remove references to deprecated "cookie_verifier_secret".
---
 .../lib/action_dispatch/middleware/cookies.rb      |   13 ++++++++++---
 1 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/actionpack/lib/action_dispatch/middleware/cookies.rb b/actionpack/lib/action_dispatch/middleware/cookies.rb
index c4c2e1a..b0a4e3d 100644
--- a/actionpack/lib/action_dispatch/middleware/cookies.rb
+++ b/actionpack/lib/action_dispatch/middleware/cookies.rb
@@ -16,17 +16,23 @@ module ActionDispatch
   # Examples for writing:
   #
   #   # Sets a simple session cookie.
+  #   # This cookie will be deleted when the user's browser is closed.
   #   cookies[:user_name] = "david"
   #
+  #   # Assign an array of values to a cookie.
+  #   cookies[:lat_lon] = [47.68, -122.37]
+  #
   #   # Sets a cookie that expires in 1 hour.
   #   cookies[:login] = { :value => "XJ-122", :expires => 1.hour.from_now }
   #
   #   # Sets a signed cookie, which prevents a user from tampering with its value.
-  #   # You must specify a value in ActionController::Base.cookie_verifier_secret.
-  #   cookies.signed[:remember_me] = [current_user.id, current_user.salt]
+  #   # The cookie is signed by your app's <tt>config.secret_token</tt> value.
+  #   # Rails generates this value by default when you create a new Rails app.
+  #   cookies.signed[:user_id] = current_user.id
   #
   #   # Sets a "permanent" cookie (which expires in 20 years from now).
   #   cookies.permanent[:login] = "XJ-122"
+  #
   #   # You can also chain these methods:
   #   cookies.permanent.signed[:login] = "XJ-122"
   #
@@ -34,6 +40,7 @@ module ActionDispatch
   #
   #   cookies[:user_name] # => "david"
   #   cookies.size        # => 2
+  #   cookies[:lat_lon]   # => [47.68, -122.37]
   #
   # Example for deleting:
   #
@@ -275,7 +282,7 @@ module ActionDispatch
             "integrity hash for cookie session data. Use " +
             "config.secret_token = \"some secret phrase of at " +
             "least #{SECRET_MIN_LENGTH} characters\"" +
-            "in config/application.rb"
+            "in config/initializers/secret_token.rb"
         end
 
         if secret.length < SECRET_MIN_LENGTH
-- 
1.7.2.1

