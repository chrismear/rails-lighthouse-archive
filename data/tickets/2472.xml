<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">14998</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-09-16T11:34:50+01:00</created-at>
  <creator-id type="integer">53520</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2472</number>
  <permalink>timenowto_sdb-forces-utc</permalink>
  <priority type="integer">1621</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>6.days.from_now.to_s(:db) forces utc</title>
  <updated-at type="datetime">2011-04-04T13:57:51+01:00</updated-at>
  <user-id type="integer">96693</user-id>
  <version type="integer">9</version>
  <user-name>Kevin Kohrt</user-name>
  <creator-name>ekolve</creator-name>
  <assigned-user-name>Ryan Bigg</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2472</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Time.now.to_s(:db) always returns UTC - this is used quite frequently in our fixtures and elsewhere in our code.  We aren't interested in moving our entire DB to UTC just yet, so we want to be able to.  Would it be possible to add a configuration option that allows an app to store/work with Time in the timezone they prefer without conversion?  I suppose the other option is a custom format like :db_local.  I guess the only other issue I have is that now to_s is actually performing some timezone conversion and no longer does just formatting.  If you want UTC, you could always do Time.now.utc.to_s(:db).</original-body>
  <latest-body>Time.now.to_s(:db) always returns UTC - this is used quite frequently in our fixtures and elsewhere in our code.  We aren't interested in moving our entire DB to UTC just yet, so we want to be able to.  Would it be possible to add a configuration option that allows an app to store/work with Time in the timezone they prefer without conversion?  I suppose the other option is a custom format like :db_local.  I guess the only other issue I have is that now to_s is actually performing some timezone conversion and no longer does just formatting.  If you want UTC, you could always do Time.now.utc.to_s(:db).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Time.now.to_s(:db) always returns UTC - this is used quite
frequently in our fixtures and elsewhere in our code. We aren't
interested in moving our entire DB to UTC just yet, so we want to
be able to. Would it be possible to add a configuration option that
allows an app to store/work with Time in the timezone they prefer
without conversion? I suppose the other option is a custom format
like :db_local. I guess the only other issue I have is that now
to_s is actually performing some timezone conversion and no longer
does just formatting. If you want UTC, you could always do
Time.now.utc.to_s(:db).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>6.days.from_now.to_s(:db) (ActiveSupport::TimeWithZone) always returns UTC - this type of call is used quite frequently in our fixtures and elsewhere in our code.  We aren't interested in moving our entire DB to UTC just yet, so we want to be able to receive the local time.  Would it be possible to add a configuration option that allows an app to store/work with Time in the timezone they prefer without conversion?  I suppose the other option is a custom format like :db_local.  I guess the only other issue I have is that now to_s is actually performing some timezone conversion and no longer does just formatting.  If you want UTC, you could always do 6.days.from_now.utc.to_s(:db).</body>
      <body-html>&lt;div&gt;&lt;p&gt;6.days.from_now.to_s(:db) (ActiveSupport::TimeWithZone) always
returns UTC - this type of call is used quite frequently in our
fixtures and elsewhere in our code. We aren't interested in moving
our entire DB to UTC just yet, so we want to be able to receive the
local time. Would it be possible to add a configuration option that
allows an app to store/work with Time in the timezone they prefer
without conversion? I suppose the other option is a custom format
like :db_local. I guess the only other issue I have is that now
to_s is actually performing some timezone conversion and no longer
does just formatting. If you want UTC, you could always do
6.days.from_now.utc.to_s(:db).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-10T03:56:42+01:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2472</number>
      <permalink>timenowto_sdb-forces-utc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>6.days.from_now.to_s(:db) forces utc</title>
      <updated-at type="datetime">2009-04-10T04:01:24+01:00</updated-at>
      <user-id type="integer">53520</user-id>
      <version type="integer">1</version>
      <user-name>ekolve</user-name>
      <creator-name>ekolve</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2472</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In your environment.rb, are you setting config.time_zone? This setting currently only works when your database stores UTC times -- if you want to store in local time, you have to remove this config setting from environment.rb.

Ideally, I'd like config.time_zone to work with non-UTC persistence -- still need to figure out the best way to accomplish this. See https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2479-inconsistant-time-zone-handling for a related discussion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In your environment.rb, are you setting config.time_zone? This
setting currently only works when your database stores UTC times --
if you want to store in local time, you have to remove this config
setting from environment.rb.&lt;/p&gt;
&lt;p&gt;Ideally, I'd like config.time_zone to work with non-UTC
persistence -- still need to figure out the best way to accomplish
this. See &lt;a href=&quot;https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/2479-inconsistant-time-zone-handling&quot;&gt;
https://rails.lighthouseapp.com/...&lt;/a&gt; for a related
discussion.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-11T14:45:21+01:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2472</number>
      <permalink>timenowto_sdb-forces-utc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>6.days.from_now.to_s(:db) forces utc</title>
      <updated-at type="datetime">2009-04-11T14:45:26+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">2</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>ekolve</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2472</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>config.time_zone will not effect this as its being formatted for output to the DB, which is always UTC. should be marked as wontfix as it is not a bug and can likely be worked around easily using Time::DATE_FORMATS</body>
      <body-html>&lt;div&gt;&lt;p&gt;config.time_zone will not effect this as its being formatted for
output to the DB, which is always UTC. should be marked as wontfix
as it is not a bug and can likely be worked around easily using
Time::DATE_FORMATS&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-16T00:49:40+01:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2472</number>
      <permalink>timenowto_sdb-forces-utc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>6.days.from_now.to_s(:db) forces utc</title>
      <updated-at type="datetime">2010-04-16T00:49:43+01:00</updated-at>
      <user-id type="integer">65576</user-id>
      <version type="integer">3</version>
      <user-name>Steve St. Martin</user-name>
      <creator-name>ekolve</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2472</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:46+01:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2472</number>
      <permalink>timenowto_sdb-forces-utc</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>6.days.from_now.to_s(:db) forces utc</title>
      <updated-at type="datetime">2010-05-04T18:48:46+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>ekolve</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2472</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>i was running into the same issue as ekolve and figured out what was going on. i had my Time.zone set to pacific but anytime i ran something like 5.minutes.from_now it would give me a utc time back. the to_s(:db) format doesn't have any impact.

what is going on is that from_now takes an argument but it defaults to Time.current, which does not consider the time zone, it just returns utc. Time.now, however, does respect the Time.zone setting. The confusing part is that since and from_now are aliases but you normally write the following.

5.minutes.from_now 

or

5.minutes.since(Time.now)

These will actually give you different results if you're outside UTC. Seems to me all these methods should be respecting time zones by using Time.now as the default arg.

-h</body>
      <body-html>&lt;div&gt;&lt;p&gt;i was running into the same issue as ekolve and figured out what
was going on. i had my Time.zone set to pacific but anytime i ran
something like 5.minutes.from_now it would give me a utc time back.
the to_s(:db) format doesn't have any impact.&lt;/p&gt;
&lt;p&gt;what is going on is that from_now takes an argument but it
defaults to Time.current, which does not consider the time zone, it
just returns utc. Time.now, however, does respect the Time.zone
setting. The confusing part is that since and from_now are aliases
but you normally write the following.&lt;/p&gt;
&lt;p&gt;5.minutes.from_now&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;5.minutes.since(Time.now)&lt;/p&gt;
&lt;p&gt;These will actually give you different results if you're outside
UTC. Seems to me all these methods should be respecting time zones
by using Time.now as the default arg.&lt;/p&gt;
&lt;p&gt;-h&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-03T08:01:44+01:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2472</number>
      <permalink>timenowto_sdb-forces-utc</permalink>
      <priority type="integer">1621</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>6.days.from_now.to_s(:db) forces utc</title>
      <updated-at type="datetime">2010-08-03T08:01:47+01:00</updated-at>
      <user-id type="integer">82716</user-id>
      <version type="integer">5</version>
      <user-name>huberto</user-name>
      <creator-name>ekolve</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2472</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Time.now is a standard Ruby Time object and Time.current is an ActiveSupport::TimeWithZone.

If you're using Time.current everywhere in your code, all time zones in your application will match and be adjusted by config.time_zone.  However, if you use a combination of Time.now and Time.current (including methods that rely on Time.current), consistency will be compromised.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Time.now is a standard Ruby Time object and Time.current is an
ActiveSupport::TimeWithZone.&lt;/p&gt;
&lt;p&gt;If you're using Time.current everywhere in your code, all time
zones in your application will match and be adjusted by
config.time_zone. However, if you use a combination of Time.now and
Time.current (including methods that rely on Time.current),
consistency will be compromised.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-15T06:32:00+01:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2472</number>
      <permalink>timenowto_sdb-forces-utc</permalink>
      <priority type="integer">1621</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>6.days.from_now.to_s(:db) forces utc</title>
      <updated-at type="datetime">2010-09-15T06:32:02+01:00</updated-at>
      <user-id type="integer">115919</user-id>
      <version type="integer">6</version>
      <user-name>jamiegaskins</user-name>
      <creator-name>ekolve</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2472</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:31:28+00:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2472</number>
      <permalink>timenowto_sdb-forces-utc</permalink>
      <priority type="integer">1621</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>6.days.from_now.to_s(:db) forces utc</title>
      <updated-at type="datetime">2011-02-02T16:50:30+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>ekolve</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2472</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:31:30+00:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2472</number>
      <permalink>timenowto_sdb-forces-utc</permalink>
      <priority type="integer">1621</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>6.days.from_now.to_s(:db) forces utc</title>
      <updated-at type="datetime">2011-02-02T16:50:01+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>ekolve</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2472</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A solution I have seen used to sychronize Time.now and Rails ActiveSupport is to use the TZ environment variable, e.g.

@@@
ENV['TZ'] = 'UTC'
@@@

This may require the TZInfo gem, though. I have not tested without it, so if it does not seem to be working, try adding that gem into the mix. This is for Rails 2.3.x apps, rather than 3.x apps (for which I do not have an environment set up to test with, sadly).</body>
      <body-html>&lt;div&gt;&lt;p&gt;A solution I have seen used to sychronize Time.now and Rails
ActiveSupport is to use the TZ environment variable, e.g.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ENV['TZ'] = 'UTC'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This may require the TZInfo gem, though. I have not tested
without it, so if it does not seem to be working, try adding that
gem into the mix. This is for Rails 2.3.x apps, rather than 3.x
apps (for which I do not have an environment set up to test with,
sadly).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-04T13:57:40+01:00</created-at>
      <creator-id type="integer">53520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2472</number>
      <permalink>timenowto_sdb-forces-utc</permalink>
      <priority type="integer">1621</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>6.days.from_now.to_s(:db) forces utc</title>
      <updated-at type="datetime">2011-04-04T13:57:51+01:00</updated-at>
      <user-id type="integer">96693</user-id>
      <version type="integer">9</version>
      <user-name>Kevin Kohrt</user-name>
      <creator-name>ekolve</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2472</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
