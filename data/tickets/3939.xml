<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-17T06:48:12+00:00</created-at>
  <creator-id type="integer">38796</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">3939</number>
  <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activerecord patch &quot;rails 3&quot;</tag>
  <title>'type' field not filled when created from hierarchy</title>
  <updated-at type="datetime">2011-02-17T06:48:12+00:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">23</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>trevor</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>this is a test case, so the has_many / belongs_to logic is off.

behavior i'm seeing is the 'type' field is automatically filled in with 'create', but not when called from a nested model. (in this example there's only one 'Second', but there should be two.)

@@@
% cat db/migrate/001_create_entries.rb 
class CreateEntries &lt; ActiveRecord::Migration
  def self.up
    create_table :entries do |t|
      t.string :type
      t.integer :parent_id
      t.timestamps
    end
  end
end

% cat app/models/first.rb 
class First &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'First'}
  has_many :seconds, :foreign_key =&gt; :parent_id
end

% cat app/models/second.rb 
class Second &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'Second'}
end

% rc
Loading development environment (Rails 3.0.0.beta)
irb(main):001:0&gt; a = First.create
=&gt; #&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:34&quot;, updated_at: &quot;2010-02-12 05:40:34&quot;&gt;
irb(main):002:0&gt; a.seconds
=&gt; []
irb(main):003:0&gt; a.seconds.create
=&gt; #&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-02-12 05:40:44&quot;, updated_at: &quot;2010-02-12 05:40:44&quot;&gt;
irb(main):004:0&gt; a.seconds
=&gt; [#&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-02-12 05:40:44&quot;, updated_at: &quot;2010-02-12 05:40:44&quot;&gt;]
irb(main):005:0&gt; b = Second.create
=&gt; #&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:59&quot;, updated_at: &quot;2010-02-12 05:40:59&quot;&gt;
irb(main):006:0&gt; Second.all
=&gt; [#&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:59&quot;, updated_at: &quot;2010-02-12 05:40:59&quot;&gt;]
@@@</original-body>
  <latest-body>this is a test case, so the has_many / belongs_to logic is off.

behavior i'm seeing is the 'type' field is automatically filled in with 'create', but not when called from a nested model. (in this example there's only one 'Second', but there should be two.)

@@@
% cat db/migrate/001_create_entries.rb 
class CreateEntries &lt; ActiveRecord::Migration
  def self.up
    create_table :entries do |t|
      t.string :type
      t.integer :parent_id
      t.timestamps
    end
  end
end

% cat app/models/first.rb 
class First &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'First'}
  has_many :seconds, :foreign_key =&gt; :parent_id
end

% cat app/models/second.rb 
class Second &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'Second'}
end

% rc
Loading development environment (Rails 3.0.0.beta)
irb(main):001:0&gt; a = First.create
=&gt; #&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:34&quot;, updated_at: &quot;2010-02-12 05:40:34&quot;&gt;
irb(main):002:0&gt; a.seconds
=&gt; []
irb(main):003:0&gt; a.seconds.create
=&gt; #&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-02-12 05:40:44&quot;, updated_at: &quot;2010-02-12 05:40:44&quot;&gt;
irb(main):004:0&gt; a.seconds
=&gt; [#&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-02-12 05:40:44&quot;, updated_at: &quot;2010-02-12 05:40:44&quot;&gt;]
irb(main):005:0&gt; b = Second.create
=&gt; #&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:59&quot;, updated_at: &quot;2010-02-12 05:40:59&quot;&gt;
irb(main):006:0&gt; Second.all
=&gt; [#&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:59&quot;, updated_at: &quot;2010-02-12 05:40:59&quot;&gt;]
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;this is a test case, so the has_many / belongs_to logic is
off.&lt;/p&gt;
&lt;p&gt;behavior i'm seeing is the 'type' field is automatically filled
in with 'create', but not when called from a nested model. (in this
example there's only one 'Second', but there should be two.)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;% cat db/migrate/001_create_entries.rb 
class CreateEntries &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :entries do |t|
      t.string :type
      t.integer :parent_id
      t.timestamps
    end
  end
end

% cat app/models/first.rb 
class First &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'First'}
  has_many :seconds, :foreign_key =&amp;gt; :parent_id
end

% cat app/models/second.rb 
class Second &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'Second'}
end

% rc
Loading development environment (Rails 3.0.0.beta)
irb(main):001:0&amp;gt; a = First.create
=&amp;gt; #&amp;lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:34&quot;, updated_at: &quot;2010-02-12 05:40:34&quot;&amp;gt;
irb(main):002:0&amp;gt; a.seconds
=&amp;gt; []
irb(main):003:0&amp;gt; a.seconds.create
=&amp;gt; #&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-02-12 05:40:44&quot;, updated_at: &quot;2010-02-12 05:40:44&quot;&amp;gt;
irb(main):004:0&amp;gt; a.seconds
=&amp;gt; [#&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-02-12 05:40:44&quot;, updated_at: &quot;2010-02-12 05:40:44&quot;&amp;gt;]
irb(main):005:0&amp;gt; b = Second.create
=&amp;gt; #&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:59&quot;, updated_at: &quot;2010-02-12 05:40:59&quot;&amp;gt;
irb(main):006:0&amp;gt; Second.all
=&amp;gt; [#&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:59&quot;, updated_at: &quot;2010-02-12 05:40:59&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>this is a test case, so the has_many / belongs_to logic is off.

behavior i'm seeing is the 'type' field is automatically filled in with 'create', but not when called from a nested model. (in this example there's only one 'Second', but there should be two.)

@@@
% cat db/migrate/001_create_entries.rb 
class CreateEntries &lt; ActiveRecord::Migration
  def self.up
    create_table :entries do |t|
      t.string :type
      t.integer :parent_id
      t.timestamps
    end
  end
end

% cat app/models/first.rb 
class First &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'First'}
  has_many :seconds, :foreign_key =&gt; :parent_id
end

% cat app/models/second.rb 
class Second &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'Second'}
end

% rc
Loading development environment (Rails 3.0.0.beta)
irb(main):001:0&gt; a = First.create
=&gt; #&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:34&quot;, updated_at: &quot;2010-02-12 05:40:34&quot;&gt;
irb(main):002:0&gt; a.seconds
=&gt; []
irb(main):003:0&gt; a.seconds.create
=&gt; #&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-02-12 05:40:44&quot;, updated_at: &quot;2010-02-12 05:40:44&quot;&gt;
irb(main):004:0&gt; a.seconds
=&gt; [#&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-02-12 05:40:44&quot;, updated_at: &quot;2010-02-12 05:40:44&quot;&gt;]
irb(main):005:0&gt; b = Second.create
=&gt; #&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:59&quot;, updated_at: &quot;2010-02-12 05:40:59&quot;&gt;
irb(main):006:0&gt; Second.all
=&gt; [#&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:59&quot;, updated_at: &quot;2010-02-12 05:40:59&quot;&gt;]
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;this is a test case, so the has_many / belongs_to logic is
off.&lt;/p&gt;
&lt;p&gt;behavior i'm seeing is the 'type' field is automatically filled
in with 'create', but not when called from a nested model. (in this
example there's only one 'Second', but there should be two.)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;% cat db/migrate/001_create_entries.rb 
class CreateEntries &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :entries do |t|
      t.string :type
      t.integer :parent_id
      t.timestamps
    end
  end
end

% cat app/models/first.rb 
class First &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'First'}
  has_many :seconds, :foreign_key =&amp;gt; :parent_id
end

% cat app/models/second.rb 
class Second &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'Second'}
end

% rc
Loading development environment (Rails 3.0.0.beta)
irb(main):001:0&amp;gt; a = First.create
=&amp;gt; #&amp;lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:34&quot;, updated_at: &quot;2010-02-12 05:40:34&quot;&amp;gt;
irb(main):002:0&amp;gt; a.seconds
=&amp;gt; []
irb(main):003:0&amp;gt; a.seconds.create
=&amp;gt; #&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-02-12 05:40:44&quot;, updated_at: &quot;2010-02-12 05:40:44&quot;&amp;gt;
irb(main):004:0&amp;gt; a.seconds
=&amp;gt; [#&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-02-12 05:40:44&quot;, updated_at: &quot;2010-02-12 05:40:44&quot;&amp;gt;]
irb(main):005:0&amp;gt; b = Second.create
=&amp;gt; #&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:59&quot;, updated_at: &quot;2010-02-12 05:40:59&quot;&amp;gt;
irb(main):006:0&amp;gt; Second.all
=&amp;gt; [#&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-02-12 05:40:59&quot;, updated_at: &quot;2010-02-12 05:40:59&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-12T05:51:51+00:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-02-12T05:51:52+00:00</updated-at>
      <user-id type="integer">38796</user-id>
      <version type="integer">1</version>
      <user-name>trevor</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What happens if you set `self.inheritance_column` nil at the top of the Second model? type is a protected field.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What happens if you set &lt;code&gt;self.inheritance_column&lt;/code&gt; nil
at the top of the Second model? type is a protected field.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-25T12:48:24+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-05-25T12:48:27+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">2</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40263</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@trevor can you check if the attached patch fixes your problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@trevor can you check if the attached patch fixes your
problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-13T02:42:12+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:priority: 0
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-13T02:42:15+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Neeraj Singh</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I discussed this ticket briefly with Mr. Valim. Assigning it to him.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I discussed this ticket briefly with Mr. Valim. Assigning it to
him.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-15T16:07:31+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord &quot;rails 3&quot;
:milestone: 
:assigned_user: 40263
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-15T16:07:33+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">4</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Let's wait Trevor confirm if the patch really fixed the bug for him before applying it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Let's wait Trevor confirm if the patch really fixed the bug for
him before applying it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-15T20:41:01+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-15T20:41:03+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">5</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>applied the patch, but still seeing the type being set to 'nil'.

@@@
irb(main):003:0&gt; a.seconds.create
=&gt; #&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-16 16:02:32&quot;, updated_at: &quot;2010-08-16 16:02:32&quot;&gt;
irb(main):004:0&gt; a.seconds
=&gt; [#&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-16 16:02:32&quot;, updated_at: &quot;2010-08-16 16:02:32&quot;&gt;]
@@@

per Ryan - setting &lt;code&gt;self.inheritance_column = nil&lt;/code&gt; in the Second model has no effect.</body>
      <body-html>&lt;div&gt;&lt;p&gt;applied the patch, but still seeing the type being set to
'nil'.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;irb(main):003:0&amp;gt; a.seconds.create
=&amp;gt; #&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-16 16:02:32&quot;, updated_at: &quot;2010-08-16 16:02:32&quot;&amp;gt;
irb(main):004:0&amp;gt; a.seconds
=&amp;gt; [#&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-16 16:02:32&quot;, updated_at: &quot;2010-08-16 16:02:32&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;per Ryan - setting &lt;code&gt;self.inheritance_column = nil&lt;/code&gt; in
the Second model has no effect.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-16T17:11:49+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-16T17:11:52+01:00</updated-at>
      <user-id type="integer">38796</user-id>
      <version type="integer">6</version>
      <user-name>trevor</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Checked again and works for me.

Here is what I did

- checkout rails master
- applied patch
- execute First.lab

@@@ ruby
class CreateEntries &lt; ActiveRecord::Migration
  def self.up
    create_table :entries do |t|
      t.string :type
      t.integer :parent_id
      t.timestamps
    end
  end
end

class Second &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'Second'}
end

class First &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'First'}
  has_many :seconds, :foreign_key =&gt; :parent_id

  def self.lab
    a = First.create
    puts a.inspect

    b = Second.create
    puts b.inspect

    b1 = a.seconds.create
    puts b1.inspect 
  end

end


$ rails runner First.lab
#&lt;First id: 19, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-17 16:55:03&quot;, updated_at: &quot;2010-08-17 16:55:03&quot;&gt;
#&lt;Second id: 20, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-17 16:55:03&quot;, updated_at: &quot;2010-08-17 16:55:03&quot;&gt;
#&lt;Second id: 21, type: &quot;Second&quot;, parent_id: 19, created_at: &quot;2010-08-17 16:55:03&quot;, updated_at: &quot;2010-08-17 16:55:03&quot;&gt;

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Checked again and works for me.&lt;/p&gt;
&lt;p&gt;Here is what I did&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;checkout rails master&lt;/li&gt;
&lt;li&gt;applied patch&lt;/li&gt;
&lt;li&gt;execute First.lab&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class CreateEntries &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :entries do |t|
      t.string :type
      t.integer :parent_id
      t.timestamps
    end
  end
end

class Second &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'Second'}
end

class First &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'First'}
  has_many :seconds, :foreign_key =&amp;gt; :parent_id

  def self.lab
    a = First.create
    puts a.inspect

    b = Second.create
    puts b.inspect

    b1 = a.seconds.create
    puts b1.inspect 
  end

end


$ rails runner First.lab
#&amp;lt;First id: 19, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-17 16:55:03&quot;, updated_at: &quot;2010-08-17 16:55:03&quot;&amp;gt;
#&amp;lt;Second id: 20, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-17 16:55:03&quot;, updated_at: &quot;2010-08-17 16:55:03&quot;&amp;gt;
#&amp;lt;Second id: 21, type: &quot;Second&quot;, parent_id: 19, created_at: &quot;2010-08-17 16:55:03&quot;, updated_at: &quot;2010-08-17 16:55:03&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-17T18:05:49+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-17T18:05:51+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>this is interesting. note that i monkey-patched RC, this is the behavior that i'm seeing - please see if you can reproduce. it works correctly as soon as there's a Second type existing in the database, but not before.

@@@
% rake db:drop; rake db:migrate

% rc
Loading development environment (Rails 3.0.0.rc)
irb(main):001:0&gt; a = First.create
=&gt; #&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-17 17:19:31&quot;, updated_at: &quot;2010-08-17 17:19:31&quot;&gt;
irb(main):002:0&gt; a.seconds.create
=&gt; #&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-17 17:19:36&quot;, updated_at: &quot;2010-08-17 17:19:36&quot;&gt;
irb(main):003:0&gt; Second.create
=&gt; #&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-17 17:19:45&quot;, updated_at: &quot;2010-08-17 17:19:45&quot;&gt;
irb(main):004:0&gt; a.seconds.create
=&gt; #&lt;Second id: 4, type: &quot;Second&quot;, parent_id: 1, created_at: &quot;2010-08-17 17:19:59&quot;, updated_at: &quot;2010-08-17 17:19:59&quot;&gt;
irb(main):005:0&gt; a.seconds
=&gt; [#&lt;Second id: 4, type: &quot;Second&quot;, parent_id: 1, created_at: &quot;2010-08-17 17:19:59&quot;, updated_at: &quot;2010-08-17 17:19:59&quot;&gt;, #&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-17 17:19:36&quot;, updated_at: &quot;2010-08-17 17:19:36&quot;&gt;]
irb(main):006:0&gt; exit

% rc
Loading development environment (Rails 3.0.0.rc)
irb(main):001:0&gt; a = First.create
=&gt; #&lt;First id: 5, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-17 17:20:23&quot;, updated_at: &quot;2010-08-17 17:20:23&quot;&gt;
irb(main):002:0&gt; a.seconds.create
=&gt; #&lt;Second id: 6, type: &quot;Second&quot;, parent_id: 5, created_at: &quot;2010-08-17 17:20:29&quot;, updated_at: &quot;2010-08-17 17:20:29&quot;&gt;
irb(main):003:0&gt;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;this is interesting. note that i monkey-patched RC, this is the
behavior that i'm seeing - please see if you can reproduce. it
works correctly as soon as there's a Second type existing in the
database, but not before.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;% rake db:drop; rake db:migrate

% rc
Loading development environment (Rails 3.0.0.rc)
irb(main):001:0&amp;gt; a = First.create
=&amp;gt; #&amp;lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-17 17:19:31&quot;, updated_at: &quot;2010-08-17 17:19:31&quot;&amp;gt;
irb(main):002:0&amp;gt; a.seconds.create
=&amp;gt; #&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-17 17:19:36&quot;, updated_at: &quot;2010-08-17 17:19:36&quot;&amp;gt;
irb(main):003:0&amp;gt; Second.create
=&amp;gt; #&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-17 17:19:45&quot;, updated_at: &quot;2010-08-17 17:19:45&quot;&amp;gt;
irb(main):004:0&amp;gt; a.seconds.create
=&amp;gt; #&amp;lt;Second id: 4, type: &quot;Second&quot;, parent_id: 1, created_at: &quot;2010-08-17 17:19:59&quot;, updated_at: &quot;2010-08-17 17:19:59&quot;&amp;gt;
irb(main):005:0&amp;gt; a.seconds
=&amp;gt; [#&amp;lt;Second id: 4, type: &quot;Second&quot;, parent_id: 1, created_at: &quot;2010-08-17 17:19:59&quot;, updated_at: &quot;2010-08-17 17:19:59&quot;&amp;gt;, #&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-17 17:19:36&quot;, updated_at: &quot;2010-08-17 17:19:36&quot;&amp;gt;]
irb(main):006:0&amp;gt; exit

% rc
Loading development environment (Rails 3.0.0.rc)
irb(main):001:0&amp;gt; a = First.create
=&amp;gt; #&amp;lt;First id: 5, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-17 17:20:23&quot;, updated_at: &quot;2010-08-17 17:20:23&quot;&amp;gt;
irb(main):002:0&amp;gt; a.seconds.create
=&amp;gt; #&amp;lt;Second id: 6, type: &quot;Second&quot;, parent_id: 5, created_at: &quot;2010-08-17 17:20:29&quot;, updated_at: &quot;2010-08-17 17:20:29&quot;&amp;gt;
irb(main):003:0&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-17T18:25:20+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-17T18:25:22+01:00</updated-at>
      <user-id type="integer">38796</user-id>
      <version type="integer">8</version>
      <user-name>trevor</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Trevor Will it be possible for you to try the patch on rails edge instead of your monkey-patched version of RC. A lot has changed since RC.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Trevor Will it be possible for you to try the patch on rails
edge instead of your monkey-patched version of RC. A lot has
changed since RC.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-17T20:00:35+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-17T20:00:37+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">9</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>trying patch with edge now, still seeing issue, try switching b1 with b in your example on a clean database.

@@@
## First-bug.lab

class Second &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'Second'}
end

class First &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'First'}
  has_many :seconds, :foreign_key =&gt; :parent_id
end

def lab
  a = First.create
  puts a.inspect

  b1 = a.seconds.create
  puts b1.inspect

  b = Second.create
  puts b.inspect
end

lab
@@@


bug apparent when database is fresh, goes away when a 'Second' type exists -

@@@
% rake db:drop; rake db:migrate

% rails runner First-bug.lab
#&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:01:11&quot;, updated_at: &quot;2010-08-18 19:01:11&quot;&gt;
#&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-18 19:01:11&quot;, updated_at: &quot;2010-08-18 19:01:11&quot;&gt;
#&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:01:11&quot;, updated_at: &quot;2010-08-18 19:01:11&quot;&gt;

% rails runner First-bug.lab
#&lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:01:25&quot;, updated_at: &quot;2010-08-18 19:01:25&quot;&gt;
#&lt;Second id: 5, type: &quot;Second&quot;, parent_id: 4, created_at: &quot;2010-08-18 19:01:25&quot;, updated_at: &quot;2010-08-18 19:01:25&quot;&gt;
#&lt;Second id: 6, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:01:25&quot;, updated_at: &quot;2010-08-18 19:01:25&quot;&gt;

% rake db:drop; rake db:migrate

% rails runner First-bug.lab
#&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:03:17&quot;, updated_at: &quot;2010-08-18 19:03:17&quot;&gt;
#&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-18 19:03:17&quot;, updated_at: &quot;2010-08-18 19:03:17&quot;&gt;
#&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:03:17&quot;, updated_at: &quot;2010-08-18 19:03:17&quot;&gt;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;trying patch with edge now, still seeing issue, try switching b1
with b in your example on a clean database.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;## First-bug.lab

class Second &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'Second'}
end

class First &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'First'}
  has_many :seconds, :foreign_key =&amp;gt; :parent_id
end

def lab
  a = First.create
  puts a.inspect

  b1 = a.seconds.create
  puts b1.inspect

  b = Second.create
  puts b.inspect
end

lab&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;bug apparent when database is fresh, goes away when a 'Second'
type exists -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;% rake db:drop; rake db:migrate

% rails runner First-bug.lab
#&amp;lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:01:11&quot;, updated_at: &quot;2010-08-18 19:01:11&quot;&amp;gt;
#&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-18 19:01:11&quot;, updated_at: &quot;2010-08-18 19:01:11&quot;&amp;gt;
#&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:01:11&quot;, updated_at: &quot;2010-08-18 19:01:11&quot;&amp;gt;

% rails runner First-bug.lab
#&amp;lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:01:25&quot;, updated_at: &quot;2010-08-18 19:01:25&quot;&amp;gt;
#&amp;lt;Second id: 5, type: &quot;Second&quot;, parent_id: 4, created_at: &quot;2010-08-18 19:01:25&quot;, updated_at: &quot;2010-08-18 19:01:25&quot;&amp;gt;
#&amp;lt;Second id: 6, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:01:25&quot;, updated_at: &quot;2010-08-18 19:01:25&quot;&amp;gt;

% rake db:drop; rake db:migrate

% rails runner First-bug.lab
#&amp;lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:03:17&quot;, updated_at: &quot;2010-08-18 19:03:17&quot;&amp;gt;
#&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-18 19:03:17&quot;, updated_at: &quot;2010-08-18 19:03:17&quot;&amp;gt;
#&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-18 19:03:17&quot;, updated_at: &quot;2010-08-18 19:03:17&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-18T20:09:26+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-18T20:09:29+01:00</updated-at>
      <user-id type="integer">38796</user-id>
      <version type="integer">10</version>
      <user-name>trevor</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I just did rake db:drop; rake db:migrate and everything works for me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just did rake db:drop; rake db:migrate and everything works
for me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T11:12:42+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-19T11:12:46+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">11</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>did you switch the creation order as well?

here's how i'm reproducing the issue, with CreateEntries as the migration. the issue is apparent with B.lab

@@@ ruby
### A.lab

class Second &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'Second'}
end

class First &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'First'}
  has_many :seconds, :foreign_key =&gt; :parent_id
end

def lab
  a = First.create
  puts a.inspect

  b = Second.create
  puts b.inspect

  child = a.seconds.create
  puts child.inspect
end

lab
puts '---again---'
lab
@@@

@@@ ruby
### B.lab
class Second &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'Second'}
end

class First &lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&gt; {:type =&gt; 'First'}
  has_many :seconds, :foreign_key =&gt; :parent_id
end

def lab
  a = First.create
  puts a.inspect

  child = a.seconds.create
  puts child.inspect

  b = Second.create
  puts b.inspect
end

lab
puts '---again---'
lab
@@@


### running with edge and patch ###
B.lab demonstrates if a child is created before a database entry of that child's type has yet to exist, it's type is set to nil.

@@@
% rake db:drop; rake db:migrate; rails runner A.lab
#&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&gt;
#&lt;Second id: 2, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&gt;
#&lt;Second id: 3, type: &quot;Second&quot;, parent_id: 1, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&gt;
---again---
#&lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&gt;
#&lt;Second id: 5, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&gt;
#&lt;Second id: 6, type: &quot;Second&quot;, parent_id: 4, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&gt;
@@@

@@@
% rake db:drop; rake db:migrate; rails runner B.lab
#&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&gt;
#&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&gt;
#&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&gt;
---again---
#&lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&gt;
#&lt;Second id: 5, type: &quot;Second&quot;, parent_id: 4, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&gt;
#&lt;Second id: 6, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&gt;
@@@


### running unpatched 3.0RC ###
comparison to show what the patch has fixed.

@@@
% rake db:drop; rake db:migrate; rails runner A.lab
#&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&gt;
#&lt;Second id: 2, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&gt;
#&lt;Second id: 3, type: nil, parent_id: 1, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&gt;
---again---
#&lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&gt;
#&lt;Second id: 5, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&gt;
#&lt;Second id: 6, type: nil, parent_id: 4, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&gt;
@@@

@@@
% rake db:drop; rake db:migrate; rails runner B.lab
#&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&gt;
#&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&gt;
#&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&gt;
---again---
#&lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&gt;
#&lt;Second id: 5, type: nil, parent_id: 4, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&gt;
#&lt;Second id: 6, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&gt;
@@@


if B.lab works fine for you on a clean database, then it may be specific to my system. it'd be good if we could reproduce it in the tests so it may be noticed by others.

@@@
% ruby -v
ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-darwin10.4.0]
% sqlite3 --version
3.7.0.1
% gem list sqlite3

*** LOCAL GEMS ***

sqlite3-ruby (1.3.1)
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;did you switch the creation order as well?&lt;/p&gt;
&lt;p&gt;here's how i'm reproducing the issue, with CreateEntries as the
migration. the issue is apparent with B.lab&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;### A.lab

class Second &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'Second'}
end

class First &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'First'}
  has_many :seconds, :foreign_key =&amp;gt; :parent_id
end

def lab
  a = First.create
  puts a.inspect

  b = Second.create
  puts b.inspect

  child = a.seconds.create
  puts child.inspect
end

lab
puts '---again---'
lab&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;### B.lab
class Second &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'Second'}
end

class First &amp;lt; ActiveRecord::Base
  set_table_name 'entries'
  default_scope :conditions =&amp;gt; {:type =&amp;gt; 'First'}
  has_many :seconds, :foreign_key =&amp;gt; :parent_id
end

def lab
  a = First.create
  puts a.inspect

  child = a.seconds.create
  puts child.inspect

  b = Second.create
  puts b.inspect
end

lab
puts '---again---'
lab&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;running with edge and patch&lt;/h3&gt;
&lt;p&gt;B.lab demonstrates if a child is created before a database entry
of that child's type has yet to exist, it's type is set to nil.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;% rake db:drop; rake db:migrate; rails runner A.lab
#&amp;lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&amp;gt;
#&amp;lt;Second id: 2, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&amp;gt;
#&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: 1, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&amp;gt;
---again---
#&amp;lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&amp;gt;
#&amp;lt;Second id: 5, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&amp;gt;
#&amp;lt;Second id: 6, type: &quot;Second&quot;, parent_id: 4, created_at: &quot;2010-08-19 15:30:47&quot;, updated_at: &quot;2010-08-19 15:30:47&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;% rake db:drop; rake db:migrate; rails runner B.lab
#&amp;lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&amp;gt;
#&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&amp;gt;
#&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&amp;gt;
---again---
#&amp;lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&amp;gt;
#&amp;lt;Second id: 5, type: &quot;Second&quot;, parent_id: 4, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&amp;gt;
#&amp;lt;Second id: 6, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:31:49&quot;, updated_at: &quot;2010-08-19 15:31:49&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;running unpatched 3.0RC&lt;/h3&gt;
&lt;p&gt;comparison to show what the patch has fixed.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;% rake db:drop; rake db:migrate; rails runner A.lab
#&amp;lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&amp;gt;
#&amp;lt;Second id: 2, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&amp;gt;
#&amp;lt;Second id: 3, type: nil, parent_id: 1, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&amp;gt;
---again---
#&amp;lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&amp;gt;
#&amp;lt;Second id: 5, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&amp;gt;
#&amp;lt;Second id: 6, type: nil, parent_id: 4, created_at: &quot;2010-08-19 15:38:37&quot;, updated_at: &quot;2010-08-19 15:38:37&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;% rake db:drop; rake db:migrate; rails runner B.lab
#&amp;lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&amp;gt;
#&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&amp;gt;
#&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&amp;gt;
---again---
#&amp;lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&amp;gt;
#&amp;lt;Second id: 5, type: nil, parent_id: 4, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&amp;gt;
#&amp;lt;Second id: 6, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 15:41:41&quot;, updated_at: &quot;2010-08-19 15:41:41&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;if B.lab works fine for you on a clean database, then it may be
specific to my system. it'd be good if we could reproduce it in the
tests so it may be noticed by others.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;% ruby -v
ruby 1.9.2p0 (2010-08-18 revision 29036) [x86_64-darwin10.4.0]
% sqlite3 --version
3.7.0.1
% gem list sqlite3

*** LOCAL GEMS ***

sqlite3-ruby (1.3.1)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T16:52:16+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-19T16:52:18+01:00</updated-at>
      <user-id type="integer">38796</user-id>
      <version type="integer">12</version>
      <user-name>trevor</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I am able to reproduce it. Thanks for your patience.

The reason why in B.lab you are getting 'type' as nil is class 'Second' is not loaded. 

Everything works if class Second is loaded.

It is a known issue and it is documented. I tried to look for the documentation but am not able to find it here. Will add the link later when I find it.

Once again for Rails to work properly if STI is being used then all the STI classes should be pre loaded. This is an issue in development mode only. It will never happen in production.

Do notice that without the patch if you have class 'Second' loaded then alos I was getting nil.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am able to reproduce it. Thanks for your patience.&lt;/p&gt;
&lt;p&gt;The reason why in B.lab you are getting 'type' as nil is class
'Second' is not loaded.&lt;/p&gt;
&lt;p&gt;Everything works if class Second is loaded.&lt;/p&gt;
&lt;p&gt;It is a known issue and it is documented. I tried to look for
the documentation but am not able to find it here. Will add the
link later when I find it.&lt;/p&gt;
&lt;p&gt;Once again for Rails to work properly if STI is being used then
all the STI classes should be pre loaded. This is an issue in
development mode only. It will never happen in production.&lt;/p&gt;
&lt;p&gt;Do notice that without the patch if you have class 'Second'
loaded then alos I was getting nil.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T17:11:52+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-19T17:11:54+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">13</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>okay, i'm good then. thanks for the patch and all your effort!

out of curiosity, how could i pre load the class in development?

for example i would have thought doing something like Second.new would take care of it -

@@@ ruby
def lab
  a = First.create
  puts a.inspect

  x = Second.new
  puts x

  child = a.seconds.create
  puts child.inspect

  b = Second.create
  puts b.inspect
end
@@@


@@@
#&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&gt;
#&lt;Second:0x000001025f8428&gt;
#&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&gt;
#&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&gt;
---again---
#&lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&gt;
#&lt;Second:0x00000102570050&gt;
#&lt;Second id: 5, type: &quot;Second&quot;, parent_id: 4, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&gt;
#&lt;Second id: 6, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&gt;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;okay, i'm good then. thanks for the patch and all your
effort!&lt;/p&gt;
&lt;p&gt;out of curiosity, how could i pre load the class in
development?&lt;/p&gt;
&lt;p&gt;for example i would have thought doing something like Second.new
would take care of it -&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def lab
  a = First.create
  puts a.inspect

  x = Second.new
  puts x

  child = a.seconds.create
  puts child.inspect

  b = Second.create
  puts b.inspect
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;#&amp;lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&amp;gt;
#&amp;lt;Second:0x000001025f8428&amp;gt;
#&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&amp;gt;
#&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&amp;gt;
---again---
#&amp;lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&amp;gt;
#&amp;lt;Second:0x00000102570050&amp;gt;
#&amp;lt;Second id: 5, type: &quot;Second&quot;, parent_id: 4, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&amp;gt;
#&amp;lt;Second id: 6, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:21:49&quot;, updated_at: &quot;2010-08-19 16:21:49&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T17:24:06+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-19T17:24:09+01:00</updated-at>
      <user-id type="integer">38796</user-id>
      <version type="integer">14</version>
      <user-name>trevor</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>... and i meant that as -

@@@
#&lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&gt;
#&lt;Second id: nil, type: &quot;Second&quot;, parent_id: nil, created_at: nil, updated_at: nil&gt;
#&lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&gt;
#&lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&gt;
---again---
#&lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&gt;
#&lt;Second id: nil, type: &quot;Second&quot;, parent_id: nil, created_at: nil, updated_at: nil&gt;
#&lt;Second id: 5, type: &quot;Second&quot;, parent_id: 4, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&gt;
#&lt;Second id: 6, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&gt;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;... and i meant that as -&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#&amp;lt;First id: 1, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&amp;gt;
#&amp;lt;Second id: nil, type: &quot;Second&quot;, parent_id: nil, created_at: nil, updated_at: nil&amp;gt;
#&amp;lt;Second id: 2, type: nil, parent_id: 1, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&amp;gt;
#&amp;lt;Second id: 3, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&amp;gt;
---again---
#&amp;lt;First id: 4, type: &quot;First&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&amp;gt;
#&amp;lt;Second id: nil, type: &quot;Second&quot;, parent_id: nil, created_at: nil, updated_at: nil&amp;gt;
#&amp;lt;Second id: 5, type: &quot;Second&quot;, parent_id: 4, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&amp;gt;
#&amp;lt;Second id: 6, type: &quot;Second&quot;, parent_id: nil, created_at: &quot;2010-08-19 16:24:48&quot;, updated_at: &quot;2010-08-19 16:24:48&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T17:26:07+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-19T17:26:10+01:00</updated-at>
      <user-id type="integer">38796</user-id>
      <version type="integer">15</version>
      <user-name>trevor</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is case where First and Second use 'type' but they are not subclass of any other model. For this case I would have just do

Class First
Second #loading Second for STI purpose
end

class Second
First #loading First for STI purpose
end

If they were subclases of another model called say 'Ranking' Then you could have used Ranking.descendants.each {|r| r }</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is case where First and Second use 'type' but they are not
subclass of any other model. For this case I would have just do&lt;/p&gt;
&lt;p&gt;Class First&lt;br&gt;
Second #loading Second for STI purpose&lt;br&gt;
end&lt;/p&gt;
&lt;p&gt;class Second&lt;br&gt;
First #loading First for STI purpose&lt;br&gt;
end&lt;/p&gt;
&lt;p&gt;If they were subclases of another model called say 'Ranking'
Then you could have used Ranking.descendants.each {|r| r }&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T18:11:47+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-19T18:11:50+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">16</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>just tried that a few different ways and couldn't get it to take - weird bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;just tried that a few different ways and couldn't get it to take
- weird bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T18:30:32+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-19T18:30:35+01:00</updated-at>
      <user-id type="integer">38796</user-id>
      <version type="integer">17</version>
      <user-name>trevor</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Confirm. In order for STI to work, all clases should be loaded before hand and I believe this is properly documented.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Confirm. In order for STI to work, all clases should be loaded
before hand and I believe this is properly documented.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-19T18:31:25+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-19T18:31:28+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">18</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Setting the status to open.

The patch is still valid and the patch works for Trevor. It was not working only when he was not loading Second before hand.

:-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Setting the status to open.&lt;/p&gt;
&lt;p&gt;The patch is still valid and the patch works for Trevor. It was
not working only when he was not loading Second before hand.&lt;/p&gt;
&lt;p&gt;:-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T18:34:04+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- 
:state: invalid
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-19T18:34:06+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">19</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Without the patch post.comments.create will create the new comment record without the default scope applied for Comment.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Without the patch post.comments.create will create the new
comment record without the default scope applied for Comment.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T18:35:18+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-19T18:35:22+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">20</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 agreed - patch works and fixes issue. small edge case related bug with STI.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 agreed - patch works and fixes issue. small edge case related
bug with STI.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-19T18:38:04+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-19T18:38:06+01:00</updated-at>
      <user-id type="integer">38796</user-id>
      <version type="integer">21</version>
      <user-name>trevor</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>can this patch be added to 3.0 final?</body>
      <body-html>&lt;div&gt;&lt;p&gt;can this patch be added to 3.0 final?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-24T04:40:11+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-24T04:40:13+01:00</updated-at>
      <user-id type="integer">38796</user-id>
      <version type="integer">22</version>
      <user-name>trevor</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It was already applied. A typo in the commit message did not allow it to be reported back it here:

http://github.com/rails/rails/commit/2e455429427a4078d2888cc39305f951bdf1e643</body>
      <body-html>&lt;div&gt;&lt;p&gt;It was already applied. A typo in the commit message did not
allow it to be reported back it here:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/2e455429427a4078d2888cc39305f951bdf1e643&quot;&gt;
http://github.com/rails/rails/commit/2e455429427a4078d2888cc39305f9...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-24T04:43:36+01:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-08-24T04:43:39+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">23</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:23:35+00:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2010-11-08T23:12:10+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">24</version>
      <user-name>jim123456</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T06:12:28+00:00</created-at>
      <creator-id type="integer">38796</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">3939</number>
      <permalink>type-field-not-filled-when-created-from-hierarchy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord patch &quot;rails 3&quot;</tag>
      <title>'type' field not filled when created from hierarchy</title>
      <updated-at type="datetime">2011-02-17T06:48:12+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">25</version>
      <user-name>gfh</user-name>
      <creator-name>trevor</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1495ba53d1888c5b582236eee6bc834c6abd274d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-13T02:42:12+01:00</created-at>
      <filename>3939_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">626976</id>
      <size type="integer">5307</size>
      <uploader-id type="integer">40263</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/626976/3939_patch.diff</url>
    </attachment>
  </attachments>
</ticket>
