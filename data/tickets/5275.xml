<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-02T19:06:47+01:00</created-at>
  <creator-id type="integer">15704</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5275</number>
  <permalink>activesupportcachememorystore-should-support-expires_in-patch</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2-3-stable activesupport caching patch testing</tag>
  <title>ActiveSupport::Cache::MemoryStore should support expires_in [PATCH]</title>
  <updated-at type="datetime">2011-02-02T16:42:11+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">5</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Gaius Centus Novus</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5275</url>
  <priority-name nil="true"></priority-name>
  <original-body>The in-memory cache is often used for testing, and proper usage of @expires_in@ is good to test. This is a patch to support that parameter in the in-memory cache (as well as the synchronized subclass version). It applies to 2-3-stable and includes test cases.</original-body>
  <latest-body>The in-memory cache is often used for testing, and proper usage of @expires_in@ is good to test. This is a patch to support that parameter in the in-memory cache (as well as the synchronized subclass version). It applies to 2-3-stable and includes test cases.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The in-memory cache is often used for testing, and proper usage
of &lt;code&gt;expires_in&lt;/code&gt; is good to test. This is a patch to
support that parameter in the in-memory cache (as well as the
synchronized subclass version). It applies to 2-3-stable and
includes test cases.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The in-memory cache is often used for testing, and proper usage of @expires_in@ is good to test. This is a patch to support that parameter in the in-memory cache (as well as the synchronized subclass version). It applies to 2-3-stable and includes test cases.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The in-memory cache is often used for testing, and proper usage
of &lt;code&gt;expires_in&lt;/code&gt; is good to test. This is a patch to
support that parameter in the in-memory cache (as well as the
synchronized subclass version). It applies to 2-3-stable and
includes test cases.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-02T19:06:47+01:00</created-at>
      <creator-id type="integer">15704</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5275</number>
      <permalink>activesupportcachememorystore-should-support-expires_in-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport caching patch testing</tag>
      <title>ActiveSupport::Cache::MemoryStore should support expires_in [PATCH]</title>
      <updated-at type="datetime">2010-08-02T19:06:48+01:00</updated-at>
      <user-id type="integer">15704</user-id>
      <version type="integer">1</version>
      <user-name>Gaius Centus Novus</user-name>
      <creator-name>Gaius Centus Novus</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5275</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-16T23:32:04+01:00</created-at>
      <creator-id type="integer">15704</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activesupport caching patch testing
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5275</number>
      <permalink>activesupportcachememorystore-should-support-expires_in-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.x activesupport caching patch testing</tag>
      <title>ActiveSupport::Cache::MemoryStore should support expires_in [PATCH]</title>
      <updated-at type="datetime">2010-10-16T23:32:07+01:00</updated-at>
      <user-id type="integer">81551</user-id>
      <version type="integer">2</version>
      <user-name>Andrea Campi</user-name>
      <creator-name>Gaius Centus Novus</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5275</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-16T23:32:44+01:00</created-at>
      <creator-id type="integer">15704</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.x activesupport caching patch testing
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5275</number>
      <permalink>activesupportcachememorystore-should-support-expires_in-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activesupport caching patch testing</tag>
      <title>ActiveSupport::Cache::MemoryStore should support expires_in [PATCH]</title>
      <updated-at type="datetime">2010-10-16T23:32:46+01:00</updated-at>
      <user-id type="integer">81551</user-id>
      <version type="integer">3</version>
      <user-name>Andrea Campi</user-name>
      <creator-name>Gaius Centus Novus</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5275</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:30:00+00:00</created-at>
      <creator-id type="integer">15704</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5275</number>
      <permalink>activesupportcachememorystore-should-support-expires_in-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activesupport caching patch testing</tag>
      <title>ActiveSupport::Cache::MemoryStore should support expires_in [PATCH]</title>
      <updated-at type="datetime">2011-02-02T16:41:46+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Gaius Centus Novus</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5275</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:30:01+00:00</created-at>
      <creator-id type="integer">15704</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5275</number>
      <permalink>activesupportcachememorystore-should-support-expires_in-patch</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable activesupport caching patch testing</tag>
      <title>ActiveSupport::Cache::MemoryStore should support expires_in [PATCH]</title>
      <updated-at type="datetime">2011-02-02T16:42:11+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Gaius Centus Novus</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5275</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>e92151c531d21ff2ad6c202583d5cc79ef7739ea</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-02T19:06:47+01:00</created-at>
      <filename>memory_cache_supports_expires_in.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">611881</id>
      <size type="integer">4831</size>
      <uploader-id type="integer">15704</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/611881/memory_cache_supports_expires_in.diff</url>
    </attachment>
  </attachments>
</ticket>
