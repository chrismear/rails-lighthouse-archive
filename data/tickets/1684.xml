<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-02T00:23:38+00:00</created-at>
  <creator-id type="integer">42312</creator-id>
  <milestone-due-on type="datetime">2009-01-31T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1684</number>
  <permalink>routing-errors-wont-get-rescued-properly</permalink>
  <priority type="integer">90</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.3 rescue routing</tag>
  <title>Routing Errors won't get rescued properly</title>
  <updated-at type="datetime">2009-01-02T16:44:03+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">5</version>
  <user-name>Repository</user-name>
  <creator-name>LacKac</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1684</url>
  <priority-name nil="true"></priority-name>
  <original-body>When requesting an uri with no matching route the application raises the following exception:

@@@
      You have a nil object when you didn't expect it!
The error occurred while evaluating nil.request=
    /Users/LacKac/Working/Lab/test/vendor/rails/actionpack/lib/action_controller/base.rb:518:in `process_without_filters'
@@@

Reproducing the error is simple:

* create a blank application
* fire up script/server
* visit http://localhost:3000/wrong_uri
* check you development.log

The problem is that the `call_with_exception` method won't find the original request and response objects in the `env` hash because they're not yet set. I attached a patch which solves the problem by creating new request and response objects if they're not set. It's basically the same as in this commit by josh: http://github.com/rails/rails/commit/5d89605c11cc54acadfdd76ccd226d38989ec600#L0R386

I couldn't come up with a test since not having those two env keys set will create new request and response objects wich will make it impossible to test based on changes made to a TestResponse instance.</original-body>
  <latest-body>When requesting an uri with no matching route the application raises the following exception:

@@@
      You have a nil object when you didn't expect it!
The error occurred while evaluating nil.request=
    /Users/LacKac/Working/Lab/test/vendor/rails/actionpack/lib/action_controller/base.rb:518:in `process_without_filters'
@@@

Reproducing the error is simple:

* create a blank application
* fire up script/server
* visit http://localhost:3000/wrong_uri
* check you development.log

The problem is that the `call_with_exception` method won't find the original request and response objects in the `env` hash because they're not yet set. I attached a patch which solves the problem by creating new request and response objects if they're not set. It's basically the same as in this commit by josh: http://github.com/rails/rails/commit/5d89605c11cc54acadfdd76ccd226d38989ec600#L0R386

I couldn't come up with a test since not having those two env keys set will create new request and response objects wich will make it impossible to test based on changes made to a TestResponse instance.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When requesting an uri with no matching route the application
raises the following exception:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
      You have a nil object when you didn't expect it!
The error occurred while evaluating nil.request=
    /Users/LacKac/Working/Lab/test/vendor/rails/actionpack/lib/action_controller/base.rb:518:in `process_without_filters'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reproducing the error is simple:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create a blank application&lt;/li&gt;
&lt;li&gt;fire up script/server&lt;/li&gt;
&lt;li&gt;visit &lt;a href=&quot;http://localhost:3000/wrong_uri&quot;&gt;http://localhost:3000/wrong_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;check you development.log&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The problem is that the &lt;code&gt;call_with_exception&lt;/code&gt; method
won't find the original request and response objects in the
&lt;code&gt;env&lt;/code&gt; hash because they're not yet set. I attached a
patch which solves the problem by creating new request and response
objects if they're not set. It's basically the same as in this
commit by josh: &lt;a href=&quot;http://github.com/rails/rails/commit/5d89605c11cc54acadfdd76ccd226d38989ec600#L0R386&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I couldn't come up with a test since not having those two env
keys set will create new request and response objects wich will
make it impossible to test based on changes made to a TestResponse
instance.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When requesting an uri with no matching route the application raises the following exception:

@@@
      You have a nil object when you didn't expect it!
The error occurred while evaluating nil.request=
    /Users/LacKac/Working/Lab/test/vendor/rails/actionpack/lib/action_controller/base.rb:518:in `process_without_filters'
@@@

Reproducing the error is simple:

* create a blank application
* fire up script/server
* visit http://localhost:3000/wrong_uri
* check you development.log

The problem is that the `call_with_exception` method won't find the original request and response objects in the `env` hash because they're not yet set. I attached a patch which solves the problem by creating new request and response objects if they're not set. It's basically the same as in this commit by josh: http://github.com/rails/rails/commit/5d89605c11cc54acadfdd76ccd226d38989ec600#L0R386

I couldn't come up with a test since not having those two env keys set will create new request and response objects wich will make it impossible to test based on changes made to a TestResponse instance.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When requesting an uri with no matching route the application
raises the following exception:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
      You have a nil object when you didn't expect it!
The error occurred while evaluating nil.request=
    /Users/LacKac/Working/Lab/test/vendor/rails/actionpack/lib/action_controller/base.rb:518:in `process_without_filters'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reproducing the error is simple:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create a blank application&lt;/li&gt;
&lt;li&gt;fire up script/server&lt;/li&gt;
&lt;li&gt;visit &lt;a href=&quot;http://localhost:3000/wrong_uri&quot;&gt;http://localhost:3000/wrong_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;check you development.log&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The problem is that the &lt;code&gt;call_with_exception&lt;/code&gt; method
won't find the original request and response objects in the
&lt;code&gt;env&lt;/code&gt; hash because they're not yet set. I attached a
patch which solves the problem by creating new request and response
objects if they're not set. It's basically the same as in this
commit by josh: &lt;a href=&quot;http://github.com/rails/rails/commit/5d89605c11cc54acadfdd76ccd226d38989ec600#L0R386&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I couldn't come up with a test since not having those two env
keys set will create new request and response objects wich will
make it impossible to test based on changes made to a TestResponse
instance.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-02T00:23:38+00:00</created-at>
      <creator-id type="integer">42312</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1684</number>
      <permalink>routing-errors-wont-get-rescued-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 rescue routing</tag>
      <title>Routing Errors won't get rescued properly</title>
      <updated-at type="datetime">2009-01-02T00:23:39+00:00</updated-at>
      <user-id type="integer">42312</user-id>
      <version type="integer">1</version>
      <user-name>LacKac</user-name>
      <creator-name>LacKac</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1684</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-02T03:49:53+00:00</created-at>
      <creator-id type="integer">42312</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 9903
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1684</number>
      <permalink>routing-errors-wont-get-rescued-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3 rescue routing</tag>
      <title>Routing Errors won't get rescued properly</title>
      <updated-at type="datetime">2009-01-02T03:49:56+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>LacKac</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1684</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ugh, I knew this was going to causes problems. Thanks for catching it and making the proper patch.

Any chance I could bother you to create some unit tests to go with it? :)

I don't want this to accidently break again.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ugh, I knew this was going to causes problems. Thanks for
catching it and making the proper patch.&lt;/p&gt;
&lt;p&gt;Any chance I could bother you to create some unit tests to go
with it? :)&lt;/p&gt;
&lt;p&gt;I don't want this to accidently break again.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-02T03:56:26+00:00</created-at>
      <creator-id type="integer">42312</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1684</number>
      <permalink>routing-errors-wont-get-rescued-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3 rescue routing</tag>
      <title>Routing Errors won't get rescued properly</title>
      <updated-at type="datetime">2009-01-02T03:56:27+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>LacKac</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1684</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It was tricky since all of the `@controller`, `@request` and `@response` instance variables are ignored when `call_with_exception` is called but eventually I came up with a test which is based on the return value of the method.

It's attached. This also includes the fix so ignore my previous patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It was tricky since all of the &lt;code&gt;@controller&lt;/code&gt;,
&lt;code&gt;@request&lt;/code&gt; and &lt;code&gt;@response&lt;/code&gt; instance variables
are ignored when &lt;code&gt;call_with_exception&lt;/code&gt; is called but
eventually I came up with a test which is based on the return value
of the method.&lt;/p&gt;
&lt;p&gt;It's attached. This also includes the fix so ignore my previous
patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-02T05:04:10+00:00</created-at>
      <creator-id type="integer">42312</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1684</number>
      <permalink>routing-errors-wont-get-rescued-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3 rescue routing</tag>
      <title>Routing Errors won't get rescued properly</title>
      <updated-at type="datetime">2009-01-02T05:04:11+00:00</updated-at>
      <user-id type="integer">42312</user-id>
      <version type="integer">4</version>
      <user-name>LacKac</user-name>
      <creator-name>LacKac</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1684</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [606176a55b90c27687ae17f40fd1af0a86b62246]) Fixed call_with_exception for Routing Errors [#1684 state:resolved]

Signed-off-by: Joshua Peek &lt;josh@joshpeek.com&gt;
http://github.com/rails/rails/commit/606176a55b90c27687ae17f40fd1af0a86b62246</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [606176a55b90c27687ae17f40fd1af0a86b62246]) Fixed
call_with_exception for Routing Errors [&lt;a href=&quot;/projects/8994/tickets/1684&quot; title=&quot;Ticket #1684&quot;&gt;#1684&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Joshua Peek &lt;a href=&quot;mailto:josh@joshpeek.com&quot;&gt;josh@joshpeek.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/606176a55b90c27687ae17f40fd1af0a86b62246&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-02T16:44:02+00:00</created-at>
      <creator-id type="integer">42312</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1684</number>
      <permalink>routing-errors-wont-get-rescued-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 rescue routing</tag>
      <title>Routing Errors won't get rescued properly</title>
      <updated-at type="datetime">2009-01-02T16:44:03+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>LacKac</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1684</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a0108e7c7fbbf890c3f9d1352a4d993e13f7c880</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-02T00:23:38+00:00</created-at>
      <filename>fix_routing_exception_rescue.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">74856</id>
      <size type="integer">1067</size>
      <uploader-id type="integer">42312</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/74856/fix_routing_exception_rescue.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>3fd73ff96c17d3656bea4e232946e91778471301</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-02T05:04:10+00:00</created-at>
      <filename>fix_routing_exception_rescue.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">74865</id>
      <size type="integer">2233</size>
      <uploader-id type="integer">42312</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/74865/fix_routing_exception_rescue.diff</url>
    </attachment>
  </attachments>
</ticket>
