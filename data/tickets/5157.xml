<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-20T10:25:13+01:00</created-at>
  <creator-id type="integer">5480</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">5157</number>
  <permalink>routing-bug-when-using-constraints</permalink>
  <priority type="integer">1</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>parameters &quot;rails 3.0&quot; routing</tag>
  <title>Routing bug when using :constraints</title>
  <updated-at type="datetime">2010-10-15T23:01:58+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">8</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Fouad Mardini</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5157</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>High</priority-name>
  <original-body>When matching a request fails due to a constraints proc, the next routes gets params with names as in the failing previous routing rule
Steps to recreate are below

rails new routing_bug -O --edge
cd routing_bug
rails g controller home
rm public/index.html

@@@ ruby
## edit config/routes.rb to the following
RoutingBug::Application.routes.draw do
  scope &quot;/:country&quot;, :constraints =&gt; Proc.new { |req| %w[all France Italy Spain].include?(req.symbolized_path_parameters[:country]) } do
    match &quot;/&quot;,       :to =&gt; &quot;home#index&quot;
    match &quot;/cities&quot;, :to =&gt; &quot;home#cities&quot;
  end

  match '/:invalid_country(/*other)', :to =&gt; redirect { |params, req|
    Rails.logger.warn(&quot;~~~~ &quot; + params.inspect)
    # &quot;/all&quot; + params[:other]
    &quot;/all&quot;
  }
end

## Edit app/controllers/home_controller.rb to the following
class HomeController &lt; ApplicationController
  def index
    render :text =&gt; params.inspect
  end
  def cities
    render :text =&gt; params.inspect
  end
end
@@@

$ curl -I localhost:3000/France
HTTP/1.1 200 OK 
Etag: &quot;e85a20831b64f267c5f41eef6356c95b&quot;
Connection: Keep-Alive
Content-Type: text/html; charset=utf-8
Date: Tue, 20 Jul 2010 09:09:38 GMT
Server: WEBrick/1.3.1 (Ruby/1.8.7/2009-06-12)
X-Runtime: 0.012149
Content-Length: 0
Cache-Control: max-age=0, private, must-revalidate

$ curl -I localhost:3000/Germany
HTTP/1.1 301 Moved Permanently 
Location: http://localhost:3000/all
Connection: Keep-Alive
Content-Type: text/html
Date: Tue, 20 Jul 2010 09:09:45 GMT
Server: WEBrick/1.3.1 (Ruby/1.8.7/2009-06-12)
X-Runtime: 0.000981
Content-Length: 17

But I would get this in the log
~~~~ {:controller=&gt;&quot;home&quot;, :action=&gt;&quot;index&quot;, :country=&gt;&quot;Germany&quot;}
The behavior I'm trying to achieve is to redirect the users to /all/REST_OF_URL whenever they go to an invalid country
I hacked around it by playing with req.path</original-body>
  <latest-body>When matching a request fails due to a constraints proc, the next routes gets params with names as in the failing previous routing rule
Steps to recreate are below

rails new routing_bug -O --edge
cd routing_bug
rails g controller home
rm public/index.html

@@@ ruby
## edit config/routes.rb to the following
RoutingBug::Application.routes.draw do
  scope &quot;/:country&quot;, :constraints =&gt; Proc.new { |req| %w[all France Italy Spain].include?(req.symbolized_path_parameters[:country]) } do
    match &quot;/&quot;,       :to =&gt; &quot;home#index&quot;
    match &quot;/cities&quot;, :to =&gt; &quot;home#cities&quot;
  end

  match '/:invalid_country(/*other)', :to =&gt; redirect { |params, req|
    Rails.logger.warn(&quot;~~~~ &quot; + params.inspect)
    # &quot;/all&quot; + params[:other]
    &quot;/all&quot;
  }
end

## Edit app/controllers/home_controller.rb to the following
class HomeController &lt; ApplicationController
  def index
    render :text =&gt; params.inspect
  end
  def cities
    render :text =&gt; params.inspect
  end
end
@@@

$ curl -I localhost:3000/France
HTTP/1.1 200 OK 
Etag: &quot;e85a20831b64f267c5f41eef6356c95b&quot;
Connection: Keep-Alive
Content-Type: text/html; charset=utf-8
Date: Tue, 20 Jul 2010 09:09:38 GMT
Server: WEBrick/1.3.1 (Ruby/1.8.7/2009-06-12)
X-Runtime: 0.012149
Content-Length: 0
Cache-Control: max-age=0, private, must-revalidate

$ curl -I localhost:3000/Germany
HTTP/1.1 301 Moved Permanently 
Location: http://localhost:3000/all
Connection: Keep-Alive
Content-Type: text/html
Date: Tue, 20 Jul 2010 09:09:45 GMT
Server: WEBrick/1.3.1 (Ruby/1.8.7/2009-06-12)
X-Runtime: 0.000981
Content-Length: 17

But I would get this in the log
~~~~ {:controller=&gt;&quot;home&quot;, :action=&gt;&quot;index&quot;, :country=&gt;&quot;Germany&quot;}
The behavior I'm trying to achieve is to redirect the users to /all/REST_OF_URL whenever they go to an invalid country
I hacked around it by playing with req.path</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When matching a request fails due to a constraints proc, the
next routes gets params with names as in the failing previous
routing rule&lt;br&gt;
Steps to recreate are below&lt;/p&gt;
&lt;p&gt;rails new routing_bug -O --edge&lt;br&gt;
cd routing_bug&lt;br&gt;
rails g controller home&lt;br&gt;
rm public/index.html&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;## edit config/routes.rb to the following
RoutingBug::Application.routes.draw do
  scope &quot;/:country&quot;, :constraints =&amp;gt; Proc.new { |req| %w[all France Italy Spain].include?(req.symbolized_path_parameters[:country]) } do
    match &quot;/&quot;,       :to =&amp;gt; &quot;home#index&quot;
    match &quot;/cities&quot;, :to =&amp;gt; &quot;home#cities&quot;
  end

  match '/:invalid_country(/*other)', :to =&amp;gt; redirect { |params, req|
    Rails.logger.warn(&quot;~~~~ &quot; + params.inspect)
    # &quot;/all&quot; + params[:other]
    &quot;/all&quot;
  }
end

## Edit app/controllers/home_controller.rb to the following
class HomeController &amp;lt; ApplicationController
  def index
    render :text =&amp;gt; params.inspect
  end
  def cities
    render :text =&amp;gt; params.inspect
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;$ curl -I localhost:3000/France HTTP/1.1 200 OK&lt;br&gt;
Etag: &quot;e85a20831b64f267c5f41eef6356c95b&quot;&lt;br&gt;
Connection: Keep-Alive&lt;br&gt;
Content-Type: text/html; charset=utf-8&lt;br&gt;
Date: Tue, 20 Jul 2010 09:09:38 GMT&lt;br&gt;
Server: WEBrick/1.3.1 (Ruby/1.8.7/2009-06-12)&lt;br&gt;
X-Runtime: 0.012149&lt;br&gt;
Content-Length: 0&lt;br&gt;
Cache-Control: max-age=0, private, must-revalidate&lt;/p&gt;
&lt;p&gt;$ curl -I localhost:3000/Germany HTTP/1.1 301 Moved
Permanently&lt;br&gt;
Location: &lt;a href=
&quot;http://localhost:3000/all&quot;&gt;http://localhost:3000/all&lt;/a&gt;&lt;br&gt;
Connection: Keep-Alive&lt;br&gt;
Content-Type: text/html&lt;br&gt;
Date: Tue, 20 Jul 2010 09:09:45 GMT&lt;br&gt;
Server: WEBrick/1.3.1 (Ruby/1.8.7/2009-06-12)&lt;br&gt;
X-Runtime: 0.000981&lt;br&gt;
Content-Length: 17&lt;/p&gt;
&lt;p&gt;But I would get this in the log&lt;br&gt;
~~~~ {:controller=&amp;gt;&quot;home&quot;, :action=&amp;gt;&quot;index&quot;,
:country=&amp;gt;&quot;Germany&quot;} The behavior I'm trying to achieve is to
redirect the users to /all/REST_OF_URL whenever they go to an
invalid country&lt;br&gt;
I hacked around it by playing with req.path&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When matching a request fails due to a constraints proc, the next routes gets params with names as in the failing previous routing rule
Steps to recreate are below

rails new routing_bug -O --edge
cd routing_bug
rails g controller home
rm public/index.html

@@@ ruby
## edit config/routes.rb to the following
RoutingBug::Application.routes.draw do
  scope &quot;/:country&quot;, :constraints =&gt; Proc.new { |req| %w[all France Italy Spain].include?(req.symbolized_path_parameters[:country]) } do
    match &quot;/&quot;,       :to =&gt; &quot;home#index&quot;
    match &quot;/cities&quot;, :to =&gt; &quot;home#cities&quot;
  end

  match '/:invalid_country(/*other)', :to =&gt; redirect { |params, req|
    Rails.logger.warn(&quot;~~~~ &quot; + params.inspect)
    # &quot;/all&quot; + params[:other]
    &quot;/all&quot;
  }
end

## Edit app/controllers/home_controller.rb to the following
class HomeController &lt; ApplicationController
  def index
    render :text =&gt; params.inspect
  end
  def cities
    render :text =&gt; params.inspect
  end
end
@@@

$ curl -I localhost:3000/France
HTTP/1.1 200 OK 
Etag: &quot;e85a20831b64f267c5f41eef6356c95b&quot;
Connection: Keep-Alive
Content-Type: text/html; charset=utf-8
Date: Tue, 20 Jul 2010 09:09:38 GMT
Server: WEBrick/1.3.1 (Ruby/1.8.7/2009-06-12)
X-Runtime: 0.012149
Content-Length: 0
Cache-Control: max-age=0, private, must-revalidate

$ curl -I localhost:3000/Germany
HTTP/1.1 301 Moved Permanently 
Location: http://localhost:3000/all
Connection: Keep-Alive
Content-Type: text/html
Date: Tue, 20 Jul 2010 09:09:45 GMT
Server: WEBrick/1.3.1 (Ruby/1.8.7/2009-06-12)
X-Runtime: 0.000981
Content-Length: 17

But I would get this in the log
~~~~ {:controller=&gt;&quot;home&quot;, :action=&gt;&quot;index&quot;, :country=&gt;&quot;Germany&quot;}
The behavior I'm trying to achieve is to redirect the users to /all/REST_OF_URL whenever they go to an invalid country
I hacked around it by playing with req.path</body>
      <body-html>&lt;div&gt;&lt;p&gt;When matching a request fails due to a constraints proc, the
next routes gets params with names as in the failing previous
routing rule&lt;br&gt;
Steps to recreate are below&lt;/p&gt;
&lt;p&gt;rails new routing_bug -O --edge&lt;br&gt;
cd routing_bug&lt;br&gt;
rails g controller home&lt;br&gt;
rm public/index.html&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;## edit config/routes.rb to the following
RoutingBug::Application.routes.draw do
  scope &quot;/:country&quot;, :constraints =&amp;gt; Proc.new { |req| %w[all France Italy Spain].include?(req.symbolized_path_parameters[:country]) } do
    match &quot;/&quot;,       :to =&amp;gt; &quot;home#index&quot;
    match &quot;/cities&quot;, :to =&amp;gt; &quot;home#cities&quot;
  end

  match '/:invalid_country(/*other)', :to =&amp;gt; redirect { |params, req|
    Rails.logger.warn(&quot;~~~~ &quot; + params.inspect)
    # &quot;/all&quot; + params[:other]
    &quot;/all&quot;
  }
end

## Edit app/controllers/home_controller.rb to the following
class HomeController &amp;lt; ApplicationController
  def index
    render :text =&amp;gt; params.inspect
  end
  def cities
    render :text =&amp;gt; params.inspect
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;$ curl -I localhost:3000/France HTTP/1.1 200 OK&lt;br&gt;
Etag: &quot;e85a20831b64f267c5f41eef6356c95b&quot;&lt;br&gt;
Connection: Keep-Alive&lt;br&gt;
Content-Type: text/html; charset=utf-8&lt;br&gt;
Date: Tue, 20 Jul 2010 09:09:38 GMT&lt;br&gt;
Server: WEBrick/1.3.1 (Ruby/1.8.7/2009-06-12)&lt;br&gt;
X-Runtime: 0.012149&lt;br&gt;
Content-Length: 0&lt;br&gt;
Cache-Control: max-age=0, private, must-revalidate&lt;/p&gt;
&lt;p&gt;$ curl -I localhost:3000/Germany HTTP/1.1 301 Moved
Permanently&lt;br&gt;
Location: &lt;a href=
&quot;http://localhost:3000/all&quot;&gt;http://localhost:3000/all&lt;/a&gt;&lt;br&gt;
Connection: Keep-Alive&lt;br&gt;
Content-Type: text/html&lt;br&gt;
Date: Tue, 20 Jul 2010 09:09:45 GMT&lt;br&gt;
Server: WEBrick/1.3.1 (Ruby/1.8.7/2009-06-12)&lt;br&gt;
X-Runtime: 0.000981&lt;br&gt;
Content-Length: 17&lt;/p&gt;
&lt;p&gt;But I would get this in the log&lt;br&gt;
~~~~ {:controller=&amp;gt;&quot;home&quot;, :action=&amp;gt;&quot;index&quot;,
:country=&amp;gt;&quot;Germany&quot;} The behavior I'm trying to achieve is to
redirect the users to /all/REST_OF_URL whenever they go to an
invalid country&lt;br&gt;
I hacked around it by playing with req.path&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-20T10:25:13+01:00</created-at>
      <creator-id type="integer">5480</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5157</number>
      <permalink>routing-bug-when-using-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Routing bug when using :constraints</title>
      <updated-at type="datetime">2010-07-20T10:27:53+01:00</updated-at>
      <user-id type="integer">5480</user-id>
      <version type="integer">1</version>
      <user-name>Fouad Mardini</user-name>
      <creator-name>Fouad Mardini</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5157</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-20T10:26:12+01:00</created-at>
      <creator-id type="integer">5480</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5157</number>
      <permalink>routing-bug-when-using-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Routing bug when using :constraints</title>
      <updated-at type="datetime">2010-07-20T10:26:15+01:00</updated-at>
      <user-id type="integer">5480</user-id>
      <version type="integer">2</version>
      <user-name>Fouad Mardini</user-name>
      <creator-name>Fouad Mardini</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5157</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What's happening is that the symbolized path parameters are getting cached in the rack environment hash so when you use them in your redirect you get the params from the first route that matches. As a workaround the routes below do what you want them to do.

@@@ ruby
RoutingBug::Application.routes.draw do
  scope &quot;/:country&quot;, :country =&gt; /all|France|Italy|Spain/ do
    match &quot;/&quot;,       :to =&gt; &quot;home#index&quot;
    match &quot;/cities&quot;, :to =&gt; &quot;home#cities&quot;
  end

  match '/:invalid_country', :to =&gt; redirect(&quot;/all&quot;)
  match '/:invalid_country/cities', :to =&gt; redirect(&quot;/all/cities&quot;)
end
@@@

The string key path parameters hash is correct so you could use that.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What's happening is that the symbolized path parameters are
getting cached in the rack environment hash so when you use them in
your redirect you get the params from the first route that matches.
As a workaround the routes below do what you want them to do.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;RoutingBug::Application.routes.draw do
  scope &quot;/:country&quot;, :country =&amp;gt; /all|France|Italy|Spain/ do
    match &quot;/&quot;,       :to =&amp;gt; &quot;home#index&quot;
    match &quot;/cities&quot;, :to =&amp;gt; &quot;home#cities&quot;
  end

  match '/:invalid_country', :to =&amp;gt; redirect(&quot;/all&quot;)
  match '/:invalid_country/cities', :to =&amp;gt; redirect(&quot;/all/cities&quot;)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The string key path parameters hash is correct so you could use
that.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-20T07:42:44+01:00</created-at>
      <creator-id type="integer">5480</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
:milestone: 
:tag: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5157</number>
      <permalink>routing-bug-when-using-constraints</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>parameters &quot;rails 3.0&quot; routing</tag>
      <title>Routing bug when using :constraints</title>
      <updated-at type="datetime">2010-08-20T07:42:48+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">3</version>
      <user-name>Andrew White</user-name>
      <creator-name>Fouad Mardini</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5157</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thanks Andrew! Unfortunately, my logic is a bit more involved and the regexp won't do</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks Andrew! Unfortunately, my logic is a bit more involved
and the regexp won't do&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-21T15:27:43+01:00</created-at>
      <creator-id type="integer">5480</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5157</number>
      <permalink>routing-bug-when-using-constraints</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>parameters &quot;rails 3.0&quot; routing</tag>
      <title>Routing bug when using :constraints</title>
      <updated-at type="datetime">2010-08-21T15:27:48+01:00</updated-at>
      <user-id type="integer">5480</user-id>
      <version type="integer">4</version>
      <user-name>Fouad Mardini</user-name>
      <creator-name>Fouad Mardini</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5157</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Attached patch fixes the issue by caching the symbolized path parameters in the request object rather than the environment hash.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached patch fixes the issue by caching the symbolized path
parameters in the request object rather than the environment
hash.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-22T18:58:42+01:00</created-at>
      <creator-id type="integer">5480</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 7697
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5157</number>
      <permalink>routing-bug-when-using-constraints</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>parameters &quot;rails 3.0&quot; routing</tag>
      <title>Routing bug when using :constraints</title>
      <updated-at type="datetime">2010-08-22T18:58:47+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">5</version>
      <user-name>Andrew White</user-name>
      <creator-name>Fouad Mardini</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5157</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [ae2c60734a0f71593709608710a0c7507bb8699e]) Cache the symbolized path parameters using a instance variable in the request object rather than the environment hash. This it to prevent stale parameters in later routing constraints/redirects as only the normal path parameters are set by Rack::Mount.

Also if a constraint proc arity is more than one, pass the symbolized path parameters
as the first argument to match redirect proc args and provide easier access.

[#5157 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/ae2c60734a0f71593709608710a0c7507bb8699e</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/ae2c60734a0f71593709608710a0c7507bb8699e&quot;
title=
&quot;Changeset [ae2c60734a0f71593709608710a0c7507bb8699e]&quot;&gt;[ae2c60734a0f71593709608710a0c7507bb8699e]&lt;/a&gt;)
Cache the symbolized path parameters using a instance variable in
the request object rather than the environment hash. This it to
prevent stale parameters in later routing constraints/redirects as
only the normal path parameters are set by Rack::Mount.&lt;/p&gt;
&lt;p&gt;Also if a constraint proc arity is more than one, pass the
symbolized path parameters&lt;br&gt;
as the first argument to match redirect proc args and provide
easier access.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/5157&quot; title=
&quot;Ticket #5157&quot;&gt;#5157&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/ae2c60734a0f71593709608710a0c7507bb8699e&quot;&gt;
http://github.com/rails/rails/commit/ae2c60734a0f71593709608710a0c7...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-22T20:17:55+01:00</created-at>
      <creator-id type="integer">5480</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5157</number>
      <permalink>routing-bug-when-using-constraints</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>parameters &quot;rails 3.0&quot; routing</tag>
      <title>Routing bug when using :constraints</title>
      <updated-at type="datetime">2010-08-22T20:17:56+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>Fouad Mardini</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5157</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [df0a7bfb8fa3f0255fe4ab082863f27c43c278d9]) Cache the symbolized path parameters using a instance variable in the request object rather than the environment hash. This it to prevent stale parameters in later routing constraints/redirects as only the normal path parameters are set by Rack::Mount.

Also if a constraint proc arity is more than one, pass the symbolized path parameters
as the first argument to match redirect proc args and provide easier access.

[#5157 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/df0a7bfb8fa3f0255fe4ab082863f27c43c278d9</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/df0a7bfb8fa3f0255fe4ab082863f27c43c278d9&quot;
title=
&quot;Changeset [df0a7bfb8fa3f0255fe4ab082863f27c43c278d9]&quot;&gt;[df0a7bfb8fa3f0255fe4ab082863f27c43c278d9]&lt;/a&gt;)
Cache the symbolized path parameters using a instance variable in
the request object rather than the environment hash. This it to
prevent stale parameters in later routing constraints/redirects as
only the normal path parameters are set by Rack::Mount.&lt;/p&gt;
&lt;p&gt;Also if a constraint proc arity is more than one, pass the
symbolized path parameters&lt;br&gt;
as the first argument to match redirect proc args and provide
easier access.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/5157&quot; title=
&quot;Ticket #5157&quot;&gt;#5157&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a href=
&quot;mailto:jose.valim@gmail.com&quot;&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/df0a7bfb8fa3f0255fe4ab082863f27c43c278d9&quot;&gt;
http://github.com/rails/rails/commit/df0a7bfb8fa3f0255fe4ab082863f2...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-22T20:18:53+01:00</created-at>
      <creator-id type="integer">5480</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5157</number>
      <permalink>routing-bug-when-using-constraints</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>parameters &quot;rails 3.0&quot; routing</tag>
      <title>Routing bug when using :constraints</title>
      <updated-at type="datetime">2010-08-22T20:18:55+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>Fouad Mardini</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5157</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>High</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:58+01:00</created-at>
      <creator-id type="integer">5480</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5157</number>
      <permalink>routing-bug-when-using-constraints</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>parameters &quot;rails 3.0&quot; routing</tag>
      <title>Routing bug when using :constraints</title>
      <updated-at type="datetime">2010-10-15T23:01:58+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Fouad Mardini</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5157</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>High</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>f8db0b9bc8a20d9e804abfd897d08031e4c831d9</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-22T18:58:42+01:00</created-at>
      <filename>0001-cache-symbolized-path-parameters-in-request.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">639842</id>
      <size type="integer">4338</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/639842/0001-cache-symbolized-path-parameters-in-request.diff</url>
    </attachment>
  </attachments>
</ticket>
