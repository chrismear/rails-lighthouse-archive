<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-06T09:10:18+01:00</created-at>
  <creator-id type="integer">52024</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5314</number>
  <permalink>rails3-rc-schemarb-file-does-not-contain-all-indexes-created-with-migration-in-postgresql-postgres</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;active record&quot; add_index migrations &quot;multicolumn index&quot; postgres postgresql schema.rb schema_dumper</tag>
  <title>Rails3 RC - Schema.rb file does not contain all indexes created with migration in postgresql (postgres)</title>
  <updated-at type="datetime">2010-10-10T14:32:34+01:00</updated-at>
  <user-id type="integer">52024</user-id>
  <version type="integer">5</version>
  <user-name>Robert Pankowecki</user-name>
  <creator-name>Robert Pankowecki</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5314</url>
  <priority-name>Low</priority-name>
  <original-body>Steps to reproduce:

a) run given migrations

@@@
class CreateTable &lt; ActiveRecord::Migration
  def self.up
    create_table :business_object_type_functions do |t|
      t.string :name
      t.string :function_id
      t.string :business_object_type_id

    end
  end
end

class AddMultiColumnIndex &lt; ActiveRecord::Migration

  def self.up
    add_index(:business_object_type_functions, :business_object_type_id)
    add_index(:business_object_type_functions, [:function_id, :business_object_type_id], :unique =&gt; true)
  end

end

@@@

b) watch the schema.rb file. It looks like this:

@@@
ActiveRecord::Schema.define(:version =&gt; 20100806074816) do

  create_table &quot;business_object_type_functions&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.string   &quot;function_id&quot;
    t.string   &quot;business_object_type_id&quot;
  end

  add_index &quot;business_object_type_functions&quot;, [&quot;business_object_type_id&quot;], :name =&gt; &quot;index_business_object_type_functions_on_business_object_type_id&quot;

end

@@@

As you can see the schema.rb is missing the second multicolumn index that was added in the migration. I guess this might happen because of its long name. But that's just my guess.</original-body>
  <latest-body>Steps to reproduce:

a) run given migrations

@@@
class CreateTable &lt; ActiveRecord::Migration
  def self.up
    create_table :business_object_type_functions do |t|
      t.string :name
      t.string :function_id
      t.string :business_object_type_id

    end
  end
end

class AddMultiColumnIndex &lt; ActiveRecord::Migration

  def self.up
    add_index(:business_object_type_functions, :business_object_type_id)
    add_index(:business_object_type_functions, [:function_id, :business_object_type_id], :unique =&gt; true)
  end

end

@@@

b) watch the schema.rb file. It looks like this:

@@@
ActiveRecord::Schema.define(:version =&gt; 20100806074816) do

  create_table &quot;business_object_type_functions&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.string   &quot;function_id&quot;
    t.string   &quot;business_object_type_id&quot;
  end

  add_index &quot;business_object_type_functions&quot;, [&quot;business_object_type_id&quot;], :name =&gt; &quot;index_business_object_type_functions_on_business_object_type_id&quot;

end

@@@

As you can see the schema.rb is missing the second multicolumn index that was added in the migration. I guess this might happen because of its long name. But that's just my guess.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Steps to reproduce:&lt;/p&gt;
&lt;p&gt;a) run given migrations&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class CreateTable &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :business_object_type_functions do |t|
      t.string :name
      t.string :function_id
      t.string :business_object_type_id

    end
  end
end

class AddMultiColumnIndex &amp;lt; ActiveRecord::Migration

  def self.up
    add_index(:business_object_type_functions, :business_object_type_id)
    add_index(:business_object_type_functions, [:function_id, :business_object_type_id], :unique =&amp;gt; true)
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;b) watch the schema.rb file. It looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100806074816) do

  create_table &quot;business_object_type_functions&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.string   &quot;function_id&quot;
    t.string   &quot;business_object_type_id&quot;
  end

  add_index &quot;business_object_type_functions&quot;, [&quot;business_object_type_id&quot;], :name =&amp;gt; &quot;index_business_object_type_functions_on_business_object_type_id&quot;

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see the schema.rb is missing the second multicolumn
index that was added in the migration. I guess this might happen
because of its long name. But that's just my guess.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Steps to reproduce:

a) run given migrations

@@@
class CreateTable &lt; ActiveRecord::Migration
  def self.up
    create_table :business_object_type_functions do |t|
      t.string :name
      t.string :function_id
      t.string :business_object_type_id

    end
  end
end

class AddMultiColumnIndex &lt; ActiveRecord::Migration

  def self.up
    add_index(:business_object_type_functions, :business_object_type_id)
    add_index(:business_object_type_functions, [:function_id, :business_object_type_id], :unique =&gt; true)
  end

end

@@@

b) watch the schema.rb file. It looks like this:

@@@
ActiveRecord::Schema.define(:version =&gt; 20100806074816) do

  create_table &quot;business_object_type_functions&quot;, :force =&gt; true do |t|
    t.string   &quot;name&quot;
    t.string   &quot;function_id&quot;
    t.string   &quot;business_object_type_id&quot;
  end

  add_index &quot;business_object_type_functions&quot;, [&quot;business_object_type_id&quot;], :name =&gt; &quot;index_business_object_type_functions_on_business_object_type_id&quot;

end

@@@

As you can see the schema.rb is missing the second multicolumn index that was added in the migration. I guess this might happen because of its long name. But that's just my guess.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Steps to reproduce:&lt;/p&gt;
&lt;p&gt;a) run given migrations&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class CreateTable &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :business_object_type_functions do |t|
      t.string :name
      t.string :function_id
      t.string :business_object_type_id

    end
  end
end

class AddMultiColumnIndex &amp;lt; ActiveRecord::Migration

  def self.up
    add_index(:business_object_type_functions, :business_object_type_id)
    add_index(:business_object_type_functions, [:function_id, :business_object_type_id], :unique =&amp;gt; true)
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;b) watch the schema.rb file. It looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Schema.define(:version =&amp;gt; 20100806074816) do

  create_table &quot;business_object_type_functions&quot;, :force =&amp;gt; true do |t|
    t.string   &quot;name&quot;
    t.string   &quot;function_id&quot;
    t.string   &quot;business_object_type_id&quot;
  end

  add_index &quot;business_object_type_functions&quot;, [&quot;business_object_type_id&quot;], :name =&amp;gt; &quot;index_business_object_type_functions_on_business_object_type_id&quot;

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see the schema.rb is missing the second multicolumn
index that was added in the migration. I guess this might happen
because of its long name. But that's just my guess.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-06T09:10:18+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5314</number>
      <permalink>rails3-rc-schemarb-file-does-not-contain-all-indexes-created-with-migration-in-postgresql-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; add_index migrations &quot;multicolumn index&quot; postgres postgresql schema.rb schema_dumper</tag>
      <title>Rails3 RC - Schema.rb file does not contain all indexes created with migration in postgresql (postgres)</title>
      <updated-at type="datetime">2010-08-06T09:10:22+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">1</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5314</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Robert, yes, this is because there is a limit of 64 chars per index name - &lt;a href=&quot;http://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/abstract/database_limits.rb#L21&quot;&gt;database_limits.rb:21&lt;/a&gt;

And here is a exception which must be raise, but i think in migrations it doesn't - &lt;a href=&quot;http://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb#L341&quot;&gt;schema_statements.rb:341&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Robert, yes, this is because there is a limit of 64 chars per
index name - &lt;a href=
&quot;http://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/abstract/database_limits.rb#L21&quot;&gt;
database_limits.rb:21&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here is a exception which must be raise, but i think in
migrations it doesn't - &lt;a href=
&quot;http://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb#L341&quot;&gt;
schema_statements.rb:341&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-10T11:41:21+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5314</number>
      <permalink>rails3-rc-schemarb-file-does-not-contain-all-indexes-created-with-migration-in-postgresql-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; add_index migrations &quot;multicolumn index&quot; postgres postgresql schema.rb schema_dumper</tag>
      <title>Rails3 RC - Schema.rb file does not contain all indexes created with migration in postgresql (postgres)</title>
      <updated-at type="datetime">2010-10-10T11:41:26+01:00</updated-at>
      <user-id type="integer">119143</user-id>
      <version type="integer">2</version>
      <user-name>codemanki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5314</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This ticket can be closed, i suppose. I tested these migrations and got
&lt;code&gt;
/Users/codemanki/projects/misc/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:341:in `add_index': Index name 'index_business_object_type_functions_on_function_id_and_business_object_type_id' on table 'business_object_type_functions' is too long; the limit is 64 characters (ArgumentError)
&lt;/code&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;This ticket can be closed, i suppose. I tested these migrations
and got&lt;br&gt;
&lt;code&gt;&lt;br&gt;
/Users/codemanki/projects/misc/rails/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:341:in&lt;/code&gt;
add_index': Index name
'index_business_object_type_functions_on_function_id_and_business_object_type_id'
on table 'business_object_type_functions' is too long; the limit is
64 characters (ArgumentError) &amp;lt;/code&amp;gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-10T11:51:54+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5314</number>
      <permalink>rails3-rc-schemarb-file-does-not-contain-all-indexes-created-with-migration-in-postgresql-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; add_index migrations &quot;multicolumn index&quot; postgres postgresql schema.rb schema_dumper</tag>
      <title>Rails3 RC - Schema.rb file does not contain all indexes created with migration in postgresql (postgres)</title>
      <updated-at type="datetime">2010-10-10T11:51:55+01:00</updated-at>
      <user-id type="integer">119143</user-id>
      <version type="integer">3</version>
      <user-name>codemanki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5314</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-10T14:16:54+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5314</number>
      <permalink>rails3-rc-schemarb-file-does-not-contain-all-indexes-created-with-migration-in-postgresql-postgres</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;active record&quot; add_index migrations &quot;multicolumn index&quot; postgres postgresql schema.rb schema_dumper</tag>
      <title>Rails3 RC - Schema.rb file does not contain all indexes created with migration in postgresql (postgres)</title>
      <updated-at type="datetime">2010-10-10T14:16:58+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">4</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5314</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Which rails version raises the exception during migration. What database did you use during the test ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Which rails version raises the exception during migration. What
database did you use during the test ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-10T14:32:31+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5314</number>
      <permalink>rails3-rc-schemarb-file-does-not-contain-all-indexes-created-with-migration-in-postgresql-postgres</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;active record&quot; add_index migrations &quot;multicolumn index&quot; postgres postgresql schema.rb schema_dumper</tag>
      <title>Rails3 RC - Schema.rb file does not contain all indexes created with migration in postgresql (postgres)</title>
      <updated-at type="datetime">2010-10-10T14:32:34+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">5</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5314</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
