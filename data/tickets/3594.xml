<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">16138</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-12-17T18:13:56+00:00</created-at>
  <creator-id type="integer">16138</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3594</number>
  <permalink>activerecordrelationto_a-should-be-cachable</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord arel performance</tag>
  <title>ActiveRecord::Relation#to_a should be cachable</title>
  <updated-at type="datetime">2010-06-13T23:03:12+01:00</updated-at>
  <user-id type="integer">16138</user-id>
  <version type="integer">3</version>
  <user-name>Emilio Tagua</user-name>
  <creator-name>Emilio Tagua</creator-name>
  <assigned-user-name>Emilio Tagua</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3594</url>
  <priority-name>Low</priority-name>
  <original-body>Hey,

Right now there's performance issue in ActiveRecord::Relation#to_a:

@posts = Post.all { ... }

Returns a relation. Ok, then if we do something like:

@posts.map { ... } 

Relation#to_a gets called and the records are initialized and loaded, this is ok, but if we do:

@posts.each { ... }

The records will be initialized all over again. This patch fixes this by adding memoization to Relation#to_a and unmemoizing when Base#all gets called.

@posts = Post.all

@posts.map { ... } # All records

@posts = Post.all :limit =&gt; 1

@posts.map { ... } # Only the first record</original-body>
  <latest-body>Hey,

Right now there's performance issue in ActiveRecord::Relation#to_a:

@posts = Post.all { ... }

Returns a relation. Ok, then if we do something like:

@posts.map { ... } 

Relation#to_a gets called and the records are initialized and loaded, this is ok, but if we do:

@posts.each { ... }

The records will be initialized all over again. This patch fixes this by adding memoization to Relation#to_a and unmemoizing when Base#all gets called.

@posts = Post.all

@posts.map { ... } # All records

@posts = Post.all :limit =&gt; 1

@posts.map { ... } # Only the first record</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hey,&lt;/p&gt;
&lt;p&gt;Right now there's performance issue in
ActiveRecord::Relation#to_a:&lt;/p&gt;
&lt;p&gt;@posts = Post.all { ... }&lt;/p&gt;
&lt;p&gt;Returns a relation. Ok, then if we do something like:&lt;/p&gt;
&lt;p&gt;@posts.map { ... }&lt;/p&gt;
&lt;p&gt;Relation#to_a gets called and the records are initialized and
loaded, this is ok, but if we do:&lt;/p&gt;
&lt;p&gt;@posts.each { ... }&lt;/p&gt;
&lt;p&gt;The records will be initialized all over again. This patch fixes
this by adding memoization to Relation#to_a and unmemoizing when
Base#all gets called.&lt;/p&gt;
&lt;p&gt;@posts = Post.all&lt;/p&gt;
&lt;p&gt;@posts.map { ... } # All records&lt;/p&gt;
&lt;p&gt;@posts = Post.all :limit =&amp;gt; 1&lt;/p&gt;
&lt;p&gt;@posts.map { ... } # Only the first record&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hey,

Right now there's performance issue in ActiveRecord::Relation#to_a:

@posts = Post.all { ... }

Returns a relation. Ok, then if we do something like:

@posts.map { ... } 

Relation#to_a gets called and the records are initialized and loaded, this is ok, but if we do:

@posts.each { ... }

The records will be initialized all over again. This patch fixes this by adding memoization to Relation#to_a and unmemoizing when Base#all gets called.

@posts = Post.all

@posts.map { ... } # All records

@posts = Post.all :limit =&gt; 1

@posts.map { ... } # Only the first record</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey,&lt;/p&gt;
&lt;p&gt;Right now there's performance issue in
ActiveRecord::Relation#to_a:&lt;/p&gt;
&lt;p&gt;@posts = Post.all { ... }&lt;/p&gt;
&lt;p&gt;Returns a relation. Ok, then if we do something like:&lt;/p&gt;
&lt;p&gt;@posts.map { ... }&lt;/p&gt;
&lt;p&gt;Relation#to_a gets called and the records are initialized and
loaded, this is ok, but if we do:&lt;/p&gt;
&lt;p&gt;@posts.each { ... }&lt;/p&gt;
&lt;p&gt;The records will be initialized all over again. This patch fixes
this by adding memoization to Relation#to_a and unmemoizing when
Base#all gets called.&lt;/p&gt;
&lt;p&gt;@posts = Post.all&lt;/p&gt;
&lt;p&gt;@posts.map { ... } # All records&lt;/p&gt;
&lt;p&gt;@posts = Post.all :limit =&amp;gt; 1&lt;/p&gt;
&lt;p&gt;@posts.map { ... } # Only the first record&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-17T18:13:56+00:00</created-at>
      <creator-id type="integer">16138</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3594</number>
      <permalink>activerecordrelationto_a-should-be-cachable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord arel performance</tag>
      <title>ActiveRecord::Relation#to_a should be cachable</title>
      <updated-at type="datetime">2009-12-17T18:15:25+00:00</updated-at>
      <user-id type="integer">16138</user-id>
      <version type="integer">1</version>
      <user-name>Emilio Tagua</user-name>
      <creator-name>Emilio Tagua</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3594</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This has been solved - not by using memoization though:

@@@ ruby
def to_a
  return @records if loaded?

  @records = eager_loading? ? find_with_associations : @klass.find_by_sql(arel.to_sql)

  # ...

  @loaded = true
  @records
end

def loaded?
  @loaded
end
@@@

This ticket can be closed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This has been solved - not by using memoization though:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def to_a
  return @records if loaded?

  @records = eager_loading? ? find_with_associations : @klass.find_by_sql(arel.to_sql)

  # ...

  @loaded = true
  @records
end

def loaded?
  @loaded
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This ticket can be closed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-13T20:02:03+01:00</created-at>
      <creator-id type="integer">16138</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3594</number>
      <permalink>activerecordrelationto_a-should-be-cachable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord arel performance</tag>
      <title>ActiveRecord::Relation#to_a should be cachable</title>
      <updated-at type="datetime">2010-06-13T20:02:06+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">2</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Emilio Tagua</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3594</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">16138</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-13T23:03:06+01:00</created-at>
      <creator-id type="integer">16138</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 14998
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3594</number>
      <permalink>activerecordrelationto_a-should-be-cachable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord arel performance</tag>
      <title>ActiveRecord::Relation#to_a should be cachable</title>
      <updated-at type="datetime">2010-06-13T23:03:12+01:00</updated-at>
      <user-id type="integer">16138</user-id>
      <version type="integer">3</version>
      <user-name>Emilio Tagua</user-name>
      <creator-name>Emilio Tagua</creator-name>
      <assigned-user-name>Emilio Tagua</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3594</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>53d7275a282bfdd3307cdcd636ff4c07cab97ae4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-12-17T18:13:56+00:00</created-at>
      <filename>memoize_ar_relation_to_a.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">356714</id>
      <size type="integer">2010</size>
      <uploader-id type="integer">16138</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/356714/memoize_ar_relation_to_a.diff</url>
    </attachment>
  </attachments>
</ticket>
