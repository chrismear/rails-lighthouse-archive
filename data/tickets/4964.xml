<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:18+00:00</created-at>
  <creator-id type="integer">19611</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4964</number>
  <permalink>validators-bleeding-from-one-model-into-another</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>rails3 validations</tag>
  <title>Validators bleeding from one model into another.</title>
  <updated-at type="datetime">2011-02-19T09:28:18+00:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">10</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>jdwyah</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
  <priority-name nil="true"></priority-name>
  <original-body>My User model has 11 validations.

However:
1) User.validators.count = 42
2) User.validators.map{|v| v.instance_variable_get('@klass')}
returns lots of classes that aren't the User class.

3) I have another model: MembershipRequest. Formtastic does some reflection on this model. This creates an error because it is finding a validation on the User class but trying to run it on an instance of MembershipRequest.

user.rb
  validates_numericality_of :zip_code, :phone_number, :if =&gt; Proc.new { |user| user.signup_step &gt; 0 }

Error from formtastic:
undefined method `signup_step' for #&lt;MembershipRequest:0x4bcd050&gt;</original-body>
  <latest-body>My User model has 11 validations.

However:
1) User.validators.count = 42
2) User.validators.map{|v| v.instance_variable_get('@klass')}
returns lots of classes that aren't the User class.

3) I have another model: MembershipRequest. Formtastic does some reflection on this model. This creates an error because it is finding a validation on the User class but trying to run it on an instance of MembershipRequest.

user.rb
  validates_numericality_of :zip_code, :phone_number, :if =&gt; Proc.new { |user| user.signup_step &gt; 0 }

Error from formtastic:
undefined method `signup_step' for #&lt;MembershipRequest:0x4bcd050&gt;</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;My User model has 11 validations.&lt;/p&gt;
&lt;p&gt;However:&lt;br&gt;
1) User.validators.count = 42&lt;br&gt;
2) User.validators.map{|v| v.instance_variable_get('@klass')}&lt;br&gt;
returns lots of classes that aren't the User class.&lt;/p&gt;
&lt;p&gt;3) I have another model: MembershipRequest. Formtastic does some
reflection on this model. This creates an error because it is
finding a validation on the User class but trying to run it on an
instance of MembershipRequest.&lt;/p&gt;
&lt;p&gt;user.rb&lt;br&gt;
validates_numericality_of :zip_code, :phone_number, :if =&amp;gt;
Proc.new { |user| user.signup_step &amp;gt; 0 }&lt;/p&gt;
&lt;p&gt;Error from formtastic:&lt;br&gt;
undefined method &lt;code&gt;signup_step' for
#&amp;lt;MembershipRequest:0x4bcd050&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>My User model has 11 validations.

However:
1) User.validators.count = 42
2) User.validators.map{|v| v.instance_variable_get('@klass')}
returns lots of classes that aren't the User class.

3) I have another model: MembershipRequest. Formtastic does some reflection on this model. This creates an error because it is finding a validation on the User class but trying to run it on an instance of MembershipRequest.

user.rb
  validates_numericality_of :zip_code, :phone_number, :if =&gt; Proc.new { |user| user.signup_step &gt; 0 }

Error from formtastic:
undefined method `signup_step' for #&lt;MembershipRequest:0x4bcd050&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;My User model has 11 validations.&lt;/p&gt;
&lt;p&gt;However:&lt;br&gt;
1) User.validators.count = 42&lt;br&gt;
2) User.validators.map{|v| v.instance_variable_get('@klass')}&lt;br&gt;
returns lots of classes that aren't the User class.&lt;/p&gt;
&lt;p&gt;3) I have another model: MembershipRequest. Formtastic does some
reflection on this model. This creates an error because it is
finding a validation on the User class but trying to run it on an
instance of MembershipRequest.&lt;/p&gt;
&lt;p&gt;user.rb&lt;br&gt;
validates_numericality_of :zip_code, :phone_number, :if =&amp;gt;
Proc.new { |user| user.signup_step &amp;gt; 0 }&lt;/p&gt;
&lt;p&gt;Error from formtastic:&lt;br&gt;
undefined method &lt;code&gt;signup_step' for
#&amp;lt;MembershipRequest:0x4bcd050&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T03:14:45+01:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2010-06-25T03:14:50+01:00</updated-at>
      <user-id type="integer">19611</user-id>
      <version type="integer">1</version>
      <user-name>jdwyah</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>can you list all your 11 validations. I randomly added 5 validations and I am getting the count as 5.</body>
      <body-html>&lt;div&gt;&lt;p&gt;can you list all your 11 validations. I randomly added 5
validations and I am getting the count as 5.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T04:18:58+01:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2010-06-25T04:19:02+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>validates_presence_of     :first_name, :last_name, :address1, :city, :state, :zip_code, :phone_number,
                                :if =&gt; Proc.new { |user| user.signup_step &gt; 0 }
  validates_numericality_of :zip_code, :phone_number,
                                :if =&gt; Proc.new { |user| user.signup_step &gt; 0 }

How's this for weird:
(rdb:3) p Piece.validators.count
40
(rdb:3) p User.validators.count
40
(rdb:3) p MembershipRequest.validators.count
40
(rdb:3) p Artist.validators.count
41
(rdb:3) p MembershipRequest.validators.count
41

!?</body>
      <body-html>&lt;div&gt;&lt;p&gt;validates_presence_of :first_name, :last_name, :address1, :city,
:state, :zip_code, :phone_number,&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;                            :if =&amp;gt; Proc.new { |user| user.signup_step &amp;gt; 0 }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;validates_numericality_of :zip_code, :phone_number,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;                            :if =&amp;gt; Proc.new { |user| user.signup_step &amp;gt; 0 }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;How's this for weird:&lt;br&gt;
(rdb:3) p Piece.validators.count 40&lt;br&gt;
(rdb:3) p User.validators.count 40&lt;br&gt;
(rdb:3) p MembershipRequest.validators.count 40&lt;br&gt;
(rdb:3) p Artist.validators.count 41&lt;br&gt;
(rdb:3) p MembershipRequest.validators.count 41&lt;/p&gt;
&lt;p&gt;!?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T04:33:56+01:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2010-06-25T04:34:00+01:00</updated-at>
      <user-id type="integer">19611</user-id>
      <version type="integer">3</version>
      <user-name>jdwyah</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Neeraj, did you try two models, five validations each?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Neeraj, did you try two models, five validations each?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T04:39:12+01:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2010-06-25T04:39:16+01:00</updated-at>
      <user-id type="integer">19611</user-id>
      <version type="integer">4</version>
      <user-name>jdwyah</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>what version of rails you are using?</body>
      <body-html>&lt;div&gt;&lt;p&gt;what version of rails you are using?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T04:42:46+01:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2010-06-25T04:42:53+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">5</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>works fine for me

@@@ ruby
ruby-1.8.7-p249 &gt; User.validators.count
 =&gt; 2 
ruby-1.8.7-p249 &gt; Comment.validators.count
 =&gt; 2 
 ActiveRecord::Schema.define(:version =&gt; 20100625031507) do

   create_table &quot;comments&quot;, :force =&gt; true do |t|
     t.string &quot;first_name&quot;
     t.string &quot;last_name&quot;
     t.string &quot;address1&quot;
     t.string &quot;city&quot;
     t.string &quot;state&quot;
     t.string &quot;zip_code&quot;
     t.string &quot;phone_number&quot;
   end

   create_table &quot;users&quot;, :force =&gt; true do |t|
     t.string &quot;first_name&quot;
     t.string &quot;last_name&quot;
     t.string &quot;address1&quot;
     t.string &quot;city&quot;
     t.string &quot;state&quot;
     t.string &quot;zip_code&quot;
     t.string &quot;phone_number&quot;
   end

 end
 class Comment &lt; ActiveRecord::Base
   validates_presence_of :first_name, :last_name, :address1, :city, :state, :zip_code, :phone_number,:if =&gt; Proc.new { |user| user.signup_step &gt; 0 }

   validates_numericality_of :zip_code, :phone_number,
   :if =&gt; Proc.new { |user| user.signup_step &gt; 0 }

 end
 class User &lt; ActiveRecord::Base
   validates_presence_of :first_name, :last_name, :address1, :city, :state, :zip_code, :phone_number,:if =&gt; Proc.new { |user| user.signup_step &gt; 0 }

   validates_numericality_of :zip_code, :phone_number,
   :if =&gt; Proc.new { |user| user.signup_step &gt; 0 }

 end
 #rails -v : Rails 3.0.0.beta4
 #ruby -v : ruby 1.8.7 (2010-01-10 patchlevel 249) [i686-darwin10.3.0]
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;works fine for me&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;ruby-1.8.7-p249 &amp;gt; User.validators.count
 =&amp;gt; 2 
ruby-1.8.7-p249 &amp;gt; Comment.validators.count
 =&amp;gt; 2 
 ActiveRecord::Schema.define(:version =&amp;gt; 20100625031507) do

   create_table &quot;comments&quot;, :force =&amp;gt; true do |t|
     t.string &quot;first_name&quot;
     t.string &quot;last_name&quot;
     t.string &quot;address1&quot;
     t.string &quot;city&quot;
     t.string &quot;state&quot;
     t.string &quot;zip_code&quot;
     t.string &quot;phone_number&quot;
   end

   create_table &quot;users&quot;, :force =&amp;gt; true do |t|
     t.string &quot;first_name&quot;
     t.string &quot;last_name&quot;
     t.string &quot;address1&quot;
     t.string &quot;city&quot;
     t.string &quot;state&quot;
     t.string &quot;zip_code&quot;
     t.string &quot;phone_number&quot;
   end

 end
 class Comment &amp;lt; ActiveRecord::Base
   validates_presence_of :first_name, :last_name, :address1, :city, :state, :zip_code, :phone_number,:if =&amp;gt; Proc.new { |user| user.signup_step &amp;gt; 0 }

   validates_numericality_of :zip_code, :phone_number,
   :if =&amp;gt; Proc.new { |user| user.signup_step &amp;gt; 0 }

 end
 class User &amp;lt; ActiveRecord::Base
   validates_presence_of :first_name, :last_name, :address1, :city, :state, :zip_code, :phone_number,:if =&amp;gt; Proc.new { |user| user.signup_step &amp;gt; 0 }

   validates_numericality_of :zip_code, :phone_number,
   :if =&amp;gt; Proc.new { |user| user.signup_step &amp;gt; 0 }

 end
 #rails -v : Rails 3.0.0.beta4
 #ruby -v : ruby 1.8.7 (2010-01-10 patchlevel 249) [i686-darwin10.3.0]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T05:04:08+01:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2010-06-25T05:04:11+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">6</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@
(rdb:1) p User._validators == MembershipRequest._validators
true
@@@

Seems like that's the root of the issue. I see that this uses the new `class_attribute :_validators`

It makes sense that if this class_attribute subclassing were to malfunction I would see the errors I'm getting. Obviously it works for you, but I can't pinpoint what else I may have done to break class_attribute.

I get the same results for 3.0.0.beta4 &amp; 3.0.0.beta3</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;(rdb:1) p User._validators == MembershipRequest._validators
true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Seems like that's the root of the issue. I see that this uses
the new &lt;code&gt;class_attribute :_validators&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It makes sense that if this class_attribute subclassing were to
malfunction I would see the errors I'm getting. Obviously it works
for you, but I can't pinpoint what else I may have done to break
class_attribute.&lt;/p&gt;
&lt;p&gt;I get the same results for 3.0.0.beta4 &amp;amp; 3.0.0.beta3&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T15:27:32+01:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2010-06-25T15:27:36+01:00</updated-at>
      <user-id type="integer">19611</user-id>
      <version type="integer">7</version>
      <user-name>jdwyah</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If you look at the very bottom of validators.rb in AM you will see this

@@@ ruby
     # Copy validators on inheritance.
      def inherited(base)
        dup = _validators.dup
        base._validators = dup.each { |k, v| dup[k] = v.dup }
        super
      end
@@@

It means each model is getting its own copy of _validators. This is what I am getting

@@@ ruby
ruby-1.8.7-p249 &gt; p User._validators == Comment._validators
false
 =&gt; nil 
ruby-1.8.7-p249 &gt; p User._validators.equal? Comment._validators
false
 =&gt; nil 
@@@

I am running rails edge. YOu mentioned beta4. Can you try with edge?</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you look at the very bottom of validators.rb in AM you will
see this&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;     # Copy validators on inheritance.
      def inherited(base)
        dup = _validators.dup
        base._validators = dup.each { |k, v| dup[k] = v.dup }
        super
      end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It means each model is getting its own copy of _validators. This
is what I am getting&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ruby-1.8.7-p249 &amp;gt; p User._validators == Comment._validators
false
 =&amp;gt; nil 
ruby-1.8.7-p249 &amp;gt; p User._validators.equal? Comment._validators
false
 =&amp;gt; nil&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I am running rails edge. YOu mentioned beta4. Can you try with
edge?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T15:39:56+01:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: validations
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3 validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2010-06-25T15:40:09+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">8</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Looks like that did it! Rest of my gems aren't happy with edge so can't test the actual failure, but at least the objects aren't sharing validators.


Yikes. That was a scary one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks like that did it! Rest of my gems aren't happy with edge
so can't test the actual failure, but at least the objects aren't
sharing validators.&lt;/p&gt;
&lt;p&gt;Yikes. That was a scary one.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T16:57:33+01:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3 validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2010-06-25T16:58:22+01:00</updated-at>
      <user-id type="integer">19611</user-id>
      <version type="integer">9</version>
      <user-name>jdwyah</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Now I remember. This issue was raised earlier and I patched it http://github.com/rails/rails/commit/e11bb95d56ed77b10d54d9dfe5a3cc4aa48b3a61 . Later Mr. Valim changed it further.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Now I remember. This issue was raised earlier and I patched it
&lt;a href=
&quot;http://github.com/rails/rails/commit/e11bb95d56ed77b10d54d9dfe5a3cc4aa48b3a61&quot;&gt;
http://github.com/rails/rails/commit/e11bb95d56ed77b10d54d9dfe5a3cc...&lt;/a&gt;
. Later Mr. Valim changed it further.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-25T17:02:31+01:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>rails3 validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2010-06-25T17:02:37+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">10</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-16T06:55:59+00:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>rails3 validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2011-02-16T07:20:09+00:00</updated-at>
      <user-id type="integer">137258</user-id>
      <version type="integer">11</version>
      <user-name>fgfhnmn</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:21:59+00:00</created-at>
      <creator-id type="integer">19611</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4964</number>
      <permalink>validators-bleeding-from-one-model-into-another</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>rails3 validations</tag>
      <title>Validators bleeding from one model into another.</title>
      <updated-at type="datetime">2011-02-19T09:28:18+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">12</version>
      <user-name>mklo</user-name>
      <creator-name>jdwyah</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4964</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
