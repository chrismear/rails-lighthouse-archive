<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-04T18:49:49+00:00</created-at>
  <creator-id type="integer">71123</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6524</number>
  <permalink>strange-behaviour-with-select-and-model-method</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>strange behaviour with select and model method</title>
  <updated-at type="datetime">2011-03-26T02:09:03+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">2</version>
  <user-name>bingbing</user-name>
  <creator-name>Chris Anderson</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6524</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm tracking down performance issues in my app with Rails 3/Ruby 1.8.7. Found a strange issue with a select helper.

In my Job model...

@@@
def self.provinces
  [&quot;AB&quot;, &quot;BC&quot;, &quot;SK&quot;]
end
@@@

In my view I have in a single form...

@@@
&lt;%= select 'time', 'class_code', Job.provinces, {:prompt =&gt; true}, {:class =&gt; &quot;quick_entry_field&quot;} %&gt;
@@@

Results in...

@@@
Completed 200 OK in 2481ms (Views: 2312.6ms | ActiveRecord: 3.3ms | Sphinx: 0.0ms)
@@@

If I comment out the select I get...

@@@
Completed 200 OK in 435ms (Views: 265.0ms | ActiveRecord: 2.6ms | Sphinx: 0.0ms)
@@@

If I change the select to...

@@@
&lt;%= select 'time', 'class_code', [&quot;AB, &quot;BC&quot;, &quot;SK&quot;], {:prompt =&gt; true}, {:class =&gt; &quot;quick_entry_field&quot;} %&gt;
@@@

I get...

@@@
Completed 200 OK in 460ms (Views: 185.4ms | ActiveRecord: 2.7ms | Sphinx: 0.0ms)
@@@

So I see a 2 second increase in the time to fetch a simple array from the Job model. I freely admit I'm not a super experienced developer but I didn't see this issue in Rails 2.3.8 so it's baffling to me.

Thanks,

Chris</original-body>
  <latest-body>I'm tracking down performance issues in my app with Rails 3/Ruby 1.8.7. Found a strange issue with a select helper.

In my Job model...

@@@
def self.provinces
  [&quot;AB&quot;, &quot;BC&quot;, &quot;SK&quot;]
end
@@@

In my view I have in a single form...

@@@
&lt;%= select 'time', 'class_code', Job.provinces, {:prompt =&gt; true}, {:class =&gt; &quot;quick_entry_field&quot;} %&gt;
@@@

Results in...

@@@
Completed 200 OK in 2481ms (Views: 2312.6ms | ActiveRecord: 3.3ms | Sphinx: 0.0ms)
@@@

If I comment out the select I get...

@@@
Completed 200 OK in 435ms (Views: 265.0ms | ActiveRecord: 2.6ms | Sphinx: 0.0ms)
@@@

If I change the select to...

@@@
&lt;%= select 'time', 'class_code', [&quot;AB, &quot;BC&quot;, &quot;SK&quot;], {:prompt =&gt; true}, {:class =&gt; &quot;quick_entry_field&quot;} %&gt;
@@@

I get...

@@@
Completed 200 OK in 460ms (Views: 185.4ms | ActiveRecord: 2.7ms | Sphinx: 0.0ms)
@@@

So I see a 2 second increase in the time to fetch a simple array from the Job model. I freely admit I'm not a super experienced developer but I didn't see this issue in Rails 2.3.8 so it's baffling to me.

Thanks,

Chris</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm tracking down performance issues in my app with Rails 3/Ruby
1.8.7. Found a strange issue with a select helper.&lt;/p&gt;
&lt;p&gt;In my Job model...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def self.provinces
  [&quot;AB&quot;, &quot;BC&quot;, &quot;SK&quot;]
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In my view I have in a single form...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= select 'time', 'class_code', Job.provinces, {:prompt =&amp;gt; true}, {:class =&amp;gt; &quot;quick_entry_field&quot;} %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Results in...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Completed 200 OK in 2481ms (Views: 2312.6ms | ActiveRecord: 3.3ms | Sphinx: 0.0ms)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If I comment out the select I get...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Completed 200 OK in 435ms (Views: 265.0ms | ActiveRecord: 2.6ms | Sphinx: 0.0ms)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If I change the select to...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= select 'time', 'class_code', [&quot;AB, &quot;BC&quot;, &quot;SK&quot;], {:prompt =&amp;gt; true}, {:class =&amp;gt; &quot;quick_entry_field&quot;} %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I get...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Completed 200 OK in 460ms (Views: 185.4ms | ActiveRecord: 2.7ms | Sphinx: 0.0ms)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So I see a 2 second increase in the time to fetch a simple array
from the Job model. I freely admit I'm not a super experienced
developer but I didn't see this issue in Rails 2.3.8 so it's
baffling to me.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Chris&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm tracking down performance issues in my app with Rails 3/Ruby 1.8.7. Found a strange issue with a select helper.

In my Job model...

@@@
def self.provinces
  [&quot;AB&quot;, &quot;BC&quot;, &quot;SK&quot;]
end
@@@

In my view I have in a single form...

@@@
&lt;%= select 'time', 'class_code', Job.provinces, {:prompt =&gt; true}, {:class =&gt; &quot;quick_entry_field&quot;} %&gt;
@@@

Results in...

@@@
Completed 200 OK in 2481ms (Views: 2312.6ms | ActiveRecord: 3.3ms | Sphinx: 0.0ms)
@@@

If I comment out the select I get...

@@@
Completed 200 OK in 435ms (Views: 265.0ms | ActiveRecord: 2.6ms | Sphinx: 0.0ms)
@@@

If I change the select to...

@@@
&lt;%= select 'time', 'class_code', [&quot;AB, &quot;BC&quot;, &quot;SK&quot;], {:prompt =&gt; true}, {:class =&gt; &quot;quick_entry_field&quot;} %&gt;
@@@

I get...

@@@
Completed 200 OK in 460ms (Views: 185.4ms | ActiveRecord: 2.7ms | Sphinx: 0.0ms)
@@@

So I see a 2 second increase in the time to fetch a simple array from the Job model. I freely admit I'm not a super experienced developer but I didn't see this issue in Rails 2.3.8 so it's baffling to me.

Thanks,

Chris</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm tracking down performance issues in my app with Rails 3/Ruby
1.8.7. Found a strange issue with a select helper.&lt;/p&gt;
&lt;p&gt;In my Job model...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def self.provinces
  [&quot;AB&quot;, &quot;BC&quot;, &quot;SK&quot;]
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In my view I have in a single form...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= select 'time', 'class_code', Job.provinces, {:prompt =&amp;gt; true}, {:class =&amp;gt; &quot;quick_entry_field&quot;} %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Results in...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Completed 200 OK in 2481ms (Views: 2312.6ms | ActiveRecord: 3.3ms | Sphinx: 0.0ms)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If I comment out the select I get...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Completed 200 OK in 435ms (Views: 265.0ms | ActiveRecord: 2.6ms | Sphinx: 0.0ms)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If I change the select to...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= select 'time', 'class_code', [&quot;AB, &quot;BC&quot;, &quot;SK&quot;], {:prompt =&amp;gt; true}, {:class =&amp;gt; &quot;quick_entry_field&quot;} %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I get...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Completed 200 OK in 460ms (Views: 185.4ms | ActiveRecord: 2.7ms | Sphinx: 0.0ms)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So I see a 2 second increase in the time to fetch a simple array
from the Job model. I freely admit I'm not a super experienced
developer but I didn't see this issue in Rails 2.3.8 so it's
baffling to me.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Chris&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-04T18:49:49+00:00</created-at>
      <creator-id type="integer">71123</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6524</number>
      <permalink>strange-behaviour-with-select-and-model-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>strange behaviour with select and model method</title>
      <updated-at type="datetime">2011-03-04T18:49:51+00:00</updated-at>
      <user-id type="integer">71123</user-id>
      <version type="integer">1</version>
      <user-name>Chris Anderson</user-name>
      <creator-name>Chris Anderson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6524</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-26T01:54:50+00:00</created-at>
      <creator-id type="integer">71123</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6524</number>
      <permalink>strange-behaviour-with-select-and-model-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>strange behaviour with select and model method</title>
      <updated-at type="datetime">2011-03-26T02:09:03+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">2</version>
      <user-name>bingbing</user-name>
      <creator-name>Chris Anderson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6524</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
