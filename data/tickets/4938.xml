<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">5</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-16T07:20:13+00:00</created-at>
  <creator-id type="integer">20509</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">73534</milestone-id>
  <number type="integer">4938</number>
  <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
  <updated-at type="datetime">2011-02-16T07:20:13+00:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">23</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>Michael Lovitt</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
  <milestone-title>2.3.9</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>This patch resolves two issues with Rails session behavior: 

**1) Sessions should not be created until written to**

The implementation of Rails lazy-loading sessions (starting in Rails 2.3) is suboptimal -- specifically, Rails creates a new session, if one doesn't already exists, as soon as the session hash is accessed. So in a simple case where a session-less user requests an action like this:

@@@ 
def test
  render :text =&gt; session[:foo]
end
@@@

A new session will be created.

This create-on-read behavior is not ideal. Many Rails applications spread session reads all over the place (for example, by checking flash[:error] in layouts); in these cases, sessions are often created when they're not actually used, which diminishes the benefits of lazy-loading. To make things worse, the facility for disabling session creation on a controller-by-controller basis has been removed (starting in 2.3). So it's very difficult in Rails right now to ensure that sessions are only created when they're actually needed.

This issue is probably not a big deal for applications that use the cookie store -- though even in that case, eager session creation can interfere with page or reverse proxy caching schemes that check HTTP headers -- but for applications that use the server-side stores (ActiveRecord, Memcache), it's inefficient to execute writes and consume space on the server for sessions that are never used. 

There are several open issues in Lighthouse related to this eager session-creating behavior:

* https://rails.lighthouseapp.com/projects/8994/tickets/2449-actioncontrollerflashinstancemethodsflash-triggers-the-lazy-sessions
* https://rails.lighthouseapp.com/projects/8994/tickets/2571-rails-232-and-lazy-sessions-issue
* https://rails.lighthouseapp.com/projects/8994/tickets/2427-verify-always-loads-session
* https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_after-option-on-session-forces-session-creation-on-each-and-every-action

It seems like a better approach is to create a session only when data is put into the session hash. A read against a non-existent session (i.e., a session associated with a request that contains no session id cookie) should not cause a session to be created. So, for a session-less user:

@@@
def test
  session[:foo]         # no session created
  session[:foo] = &quot;bar&quot; # session created!
end
@@@

The patch makes this change and includes tests for the new behavior. 

**2) Session data should be destroyed on session reset**

One side-effect of the 2.3 session changes is that, for server-based session stores, the reset_session method does not delete session data from the server. The session cookie is cleared, and a new session hash is created, but the data in the underlying session store is left alone.

Of course, server-based session stores must clean up expired sessions anyway, so these garbage sessions are ultimately purged, but it's surprising and problematic that invalid sessions are not simply deleted. A user who fiddles with his cookies, for example, could start re-using a session that the application thinks has been destroyed. 

This patch changes the behavior to the following: when a session is destroyed, the associated session data is removed from the store. 

Note that this change requires that session stores implement a #destroy method. I've done so for all the built-in stores -- CookieStore (where destroy is noop), MemCacheStore, and ActiveRecord::SessionStore. (ActiveRecord::SessionStore.destroy simply calls destroy on the ActiveRecord.session_class; implementers such as ActiveRecord::SessionStore::Session and ActiveRecord::SessionStore::SqlBypass are already required, per the docs, to provide a destroy method.)</original-body>
  <latest-body>This patch resolves two issues with Rails session behavior: 

**1) Sessions should not be created until written to**

The implementation of Rails lazy-loading sessions (starting in Rails 2.3) is suboptimal -- specifically, Rails creates a new session, if one doesn't already exists, as soon as the session hash is accessed. So in a simple case where a session-less user requests an action like this:

@@@ 
def test
  render :text =&gt; session[:foo]
end
@@@

A new session will be created.

This create-on-read behavior is not ideal. Many Rails applications spread session reads all over the place (for example, by checking flash[:error] in layouts); in these cases, sessions are often created when they're not actually used, which diminishes the benefits of lazy-loading. To make things worse, the facility for disabling session creation on a controller-by-controller basis has been removed (starting in 2.3). So it's very difficult in Rails right now to ensure that sessions are only created when they're actually needed.

This issue is probably not a big deal for applications that use the cookie store -- though even in that case, eager session creation can interfere with page or reverse proxy caching schemes that check HTTP headers -- but for applications that use the server-side stores (ActiveRecord, Memcache), it's inefficient to execute writes and consume space on the server for sessions that are never used. 

There are several open issues in Lighthouse related to this eager session-creating behavior:

* https://rails.lighthouseapp.com/projects/8994/tickets/2449-actioncontrollerflashinstancemethodsflash-triggers-the-lazy-sessions
* https://rails.lighthouseapp.com/projects/8994/tickets/2571-rails-232-and-lazy-sessions-issue
* https://rails.lighthouseapp.com/projects/8994/tickets/2427-verify-always-loads-session
* https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_after-option-on-session-forces-session-creation-on-each-and-every-action

It seems like a better approach is to create a session only when data is put into the session hash. A read against a non-existent session (i.e., a session associated with a request that contains no session id cookie) should not cause a session to be created. So, for a session-less user:

@@@
def test
  session[:foo]         # no session created
  session[:foo] = &quot;bar&quot; # session created!
end
@@@

The patch makes this change and includes tests for the new behavior. 

**2) Session data should be destroyed on session reset**

One side-effect of the 2.3 session changes is that, for server-based session stores, the reset_session method does not delete session data from the server. The session cookie is cleared, and a new session hash is created, but the data in the underlying session store is left alone.

Of course, server-based session stores must clean up expired sessions anyway, so these garbage sessions are ultimately purged, but it's surprising and problematic that invalid sessions are not simply deleted. A user who fiddles with his cookies, for example, could start re-using a session that the application thinks has been destroyed. 

This patch changes the behavior to the following: when a session is destroyed, the associated session data is removed from the store. 

Note that this change requires that session stores implement a #destroy method. I've done so for all the built-in stores -- CookieStore (where destroy is noop), MemCacheStore, and ActiveRecord::SessionStore. (ActiveRecord::SessionStore.destroy simply calls destroy on the ActiveRecord.session_class; implementers such as ActiveRecord::SessionStore::Session and ActiveRecord::SessionStore::SqlBypass are already required, per the docs, to provide a destroy method.)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This patch resolves two issues with Rails session behavior:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1) Sessions should not be created until written
to&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The implementation of Rails lazy-loading sessions (starting in
Rails 2.3) is suboptimal -- specifically, Rails creates a new
session, if one doesn't already exists, as soon as the session hash
is accessed. So in a simple case where a session-less user requests
an action like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test
  render :text =&amp;gt; session[:foo]
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A new session will be created.&lt;/p&gt;
&lt;p&gt;This create-on-read behavior is not ideal. Many Rails
applications spread session reads all over the place (for example,
by checking flash[:error] in layouts); in these cases, sessions are
often created when they're not actually used, which diminishes the
benefits of lazy-loading. To make things worse, the facility for
disabling session creation on a controller-by-controller basis has
been removed (starting in 2.3). So it's very difficult in Rails
right now to ensure that sessions are only created when they're
actually needed.&lt;/p&gt;
&lt;p&gt;This issue is probably not a big deal for applications that use
the cookie store -- though even in that case, eager session
creation can interfere with page or reverse proxy caching schemes
that check HTTP headers -- but for applications that use the
server-side stores (ActiveRecord, Memcache), it's inefficient to
execute writes and consume space on the server for sessions that
are never used.&lt;/p&gt;
&lt;p&gt;There are several open issues in Lighthouse related to this
eager session-creating behavior:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2449-actioncontrollerflashinstancemethodsflash-triggers-the-lazy-sessions&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/2449-actionco...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2571-rails-232-and-lazy-sessions-issue&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/2571-rails-23...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2427-verify-always-loads-session&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/2427-verify-a...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_after-option-on-session-forces-session-creation-on-each-and-every-action&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_a...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It seems like a better approach is to create a session only when
data is put into the session hash. A read against a non-existent
session (i.e., a session associated with a request that contains no
session id cookie) should not cause a session to be created. So,
for a session-less user:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test
  session[:foo]         # no session created
  session[:foo] = &quot;bar&quot; # session created!
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The patch makes this change and includes tests for the new
behavior.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) Session data should be destroyed on session
reset&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;One side-effect of the 2.3 session changes is that, for
server-based session stores, the reset_session method does not
delete session data from the server. The session cookie is cleared,
and a new session hash is created, but the data in the underlying
session store is left alone.&lt;/p&gt;
&lt;p&gt;Of course, server-based session stores must clean up expired
sessions anyway, so these garbage sessions are ultimately purged,
but it's surprising and problematic that invalid sessions are not
simply deleted. A user who fiddles with his cookies, for example,
could start re-using a session that the application thinks has been
destroyed.&lt;/p&gt;
&lt;p&gt;This patch changes the behavior to the following: when a session
is destroyed, the associated session data is removed from the
store.&lt;/p&gt;
&lt;p&gt;Note that this change requires that session stores implement a
#destroy method. I've done so for all the built-in stores --
CookieStore (where destroy is noop), MemCacheStore, and
ActiveRecord::SessionStore. (ActiveRecord::SessionStore.destroy
simply calls destroy on the ActiveRecord.session_class;
implementers such as ActiveRecord::SessionStore::Session and
ActiveRecord::SessionStore::SqlBypass are already required, per the
docs, to provide a destroy method.)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch resolves two issues with Rails session behavior: 

**1) Sessions should not be created until written to**

The implementation of Rails lazy-loading sessions (starting in Rails 2.3) is suboptimal -- specifically, Rails creates a new session, if one doesn't already exists, as soon as the session hash is accessed. So in a simple case where a session-less user requests an action like this:

@@@ 
def test
  render :text =&gt; session[:foo]
end
@@@

A new session will be created.

This create-on-read behavior is not ideal. Many Rails applications spread session reads all over the place (for example, by checking flash[:error] in layouts); in these cases, sessions are often created when they're not actually used, which diminishes the benefits of lazy-loading. To make things worse, the facility for disabling session creation on a controller-by-controller basis has been removed (starting in 2.3). So it's very difficult in Rails right now to ensure that sessions are only created when they're actually needed.

This issue is probably not a big deal for applications that use the cookie store -- though even in that case, eager session creation can interfere with page or reverse proxy caching schemes that check HTTP headers -- but for applications that use the server-side stores (ActiveRecord, Memcache), it's inefficient to execute writes and consume space on the server for sessions that are never used. 

There are several open issues in Lighthouse related to this eager session-creating behavior:

* https://rails.lighthouseapp.com/projects/8994/tickets/2449-actioncontrollerflashinstancemethodsflash-triggers-the-lazy-sessions
* https://rails.lighthouseapp.com/projects/8994/tickets/2571-rails-232-and-lazy-sessions-issue
* https://rails.lighthouseapp.com/projects/8994/tickets/2427-verify-always-loads-session
* https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_after-option-on-session-forces-session-creation-on-each-and-every-action

It seems like a better approach is to create a session only when data is put into the session hash. A read against a non-existent session (i.e., a session associated with a request that contains no session id cookie) should not cause a session to be created. So, for a session-less user:

@@@
def test
  session[:foo]         # no session created
  session[:foo] = &quot;bar&quot; # session created!
end
@@@

The patch makes this change and includes tests for the new behavior. 

**2) Session data should be destroyed on session reset**

One side-effect of the 2.3 session changes is that, for server-based session stores, the reset_session method does not delete session data from the server. The session cookie is cleared, and a new session hash is created, but the data in the underlying session store is left alone.

Of course, server-based session stores must clean up expired sessions anyway, so these garbage sessions are ultimately purged, but it's surprising and problematic that invalid sessions are not simply deleted. A user who fiddles with his cookies, for example, could start re-using a session that the application thinks has been destroyed. 

This patch changes the behavior to the following: when a session is destroyed, the associated session data is removed from the store. 

Note that this change requires that session stores implement a #destroy method. I've done so for all the built-in stores -- CookieStore (where destroy is noop), MemCacheStore, and ActiveRecord::SessionStore. (ActiveRecord::SessionStore.destroy simply calls destroy on the ActiveRecord.session_class; implementers such as ActiveRecord::SessionStore::Session and ActiveRecord::SessionStore::SqlBypass are already required, per the docs, to provide a destroy method.)</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch resolves two issues with Rails session behavior:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1) Sessions should not be created until written
to&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The implementation of Rails lazy-loading sessions (starting in
Rails 2.3) is suboptimal -- specifically, Rails creates a new
session, if one doesn't already exists, as soon as the session hash
is accessed. So in a simple case where a session-less user requests
an action like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test
  render :text =&amp;gt; session[:foo]
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A new session will be created.&lt;/p&gt;
&lt;p&gt;This create-on-read behavior is not ideal. Many Rails
applications spread session reads all over the place (for example,
by checking flash[:error] in layouts); in these cases, sessions are
often created when they're not actually used, which diminishes the
benefits of lazy-loading. To make things worse, the facility for
disabling session creation on a controller-by-controller basis has
been removed (starting in 2.3). So it's very difficult in Rails
right now to ensure that sessions are only created when they're
actually needed.&lt;/p&gt;
&lt;p&gt;This issue is probably not a big deal for applications that use
the cookie store -- though even in that case, eager session
creation can interfere with page or reverse proxy caching schemes
that check HTTP headers -- but for applications that use the
server-side stores (ActiveRecord, Memcache), it's inefficient to
execute writes and consume space on the server for sessions that
are never used.&lt;/p&gt;
&lt;p&gt;There are several open issues in Lighthouse related to this
eager session-creating behavior:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2449-actioncontrollerflashinstancemethodsflash-triggers-the-lazy-sessions&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/2449-actionco...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2571-rails-232-and-lazy-sessions-issue&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/2571-rails-23...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2427-verify-always-loads-session&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/2427-verify-a...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_after-option-on-session-forces-session-creation-on-each-and-every-action&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/4450-expire_a...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It seems like a better approach is to create a session only when
data is put into the session hash. A read against a non-existent
session (i.e., a session associated with a request that contains no
session id cookie) should not cause a session to be created. So,
for a session-less user:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test
  session[:foo]         # no session created
  session[:foo] = &quot;bar&quot; # session created!
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The patch makes this change and includes tests for the new
behavior.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) Session data should be destroyed on session
reset&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;One side-effect of the 2.3 session changes is that, for
server-based session stores, the reset_session method does not
delete session data from the server. The session cookie is cleared,
and a new session hash is created, but the data in the underlying
session store is left alone.&lt;/p&gt;
&lt;p&gt;Of course, server-based session stores must clean up expired
sessions anyway, so these garbage sessions are ultimately purged,
but it's surprising and problematic that invalid sessions are not
simply deleted. A user who fiddles with his cookies, for example,
could start re-using a session that the application thinks has been
destroyed.&lt;/p&gt;
&lt;p&gt;This patch changes the behavior to the following: when a session
is destroyed, the associated session data is removed from the
store.&lt;/p&gt;
&lt;p&gt;Note that this change requires that session stores implement a
#destroy method. I've done so for all the built-in stores --
CookieStore (where destroy is noop), MemCacheStore, and
ActiveRecord::SessionStore. (ActiveRecord::SessionStore.destroy
simply calls destroy on the ActiveRecord.session_class;
implementers such as ActiveRecord::SessionStore::Session and
ActiveRecord::SessionStore::SqlBypass are already required, per the
docs, to provide a destroy method.)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-22T23:33:36+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-23T03:48:24+01:00</updated-at>
      <user-id type="integer">20509</user-id>
      <version type="integer">1</version>
      <user-name>Michael Lovitt</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-22T23:49:40+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-22T23:49:59+01:00</updated-at>
      <user-id type="integer">20509</user-id>
      <version type="integer">2</version>
      <user-name>Michael Lovitt</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-22T23:53:00+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: patch
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-22T23:53:03+01:00</updated-at>
      <user-id type="integer">20509</user-id>
      <version type="integer">3</version>
      <user-name>Michael Lovitt</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-23T03:34:26+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-23T03:34:28+01:00</updated-at>
      <user-id type="integer">20509</user-id>
      <version type="integer">4</version>
      <user-name>Michael Lovitt</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Great patch, Michael. Could you backport to 2-3-stable as well?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Great patch, Michael. Could you backport to 2-3-stable as
well?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-23T20:01:59+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-23T20:02:01+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [49f52c3d910c8f183afc3a54ea2ae9667f23085e]) Sessions should not be created until written to and session data should be destroyed on reset.

[#4938]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/49f52c3d910c8f183afc3a54ea2ae9667f23085e</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/49f52c3d910c8f183afc3a54ea2ae9667f23085e&quot;
title=
&quot;Changeset [49f52c3d910c8f183afc3a54ea2ae9667f23085e]&quot;&gt;[49f52c3d910c8f183afc3a54ea2ae9667f23085e]&lt;/a&gt;)
Sessions should not be created until written to and session data
should be destroyed on reset.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/4938&quot; title=
&quot;Ticket #4938&quot;&gt;#4938&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/49f52c3d910c8f183afc3a54ea2ae9667f23085e&quot;&gt;
http://github.com/rails/rails/commit/49f52c3d910c8f183afc3a54ea2ae9...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-23T20:02:46+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-23T20:02:49+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Jeremy, a backported patch for 2-3-stable is attached. Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jeremy, a backported patch for 2-3-stable is attached.
Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-24T17:02:43+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-24T17:02:53+01:00</updated-at>
      <user-id type="integer">20509</user-id>
      <version type="integer">7</version>
      <user-name>Michael Lovitt</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>See also http://github.com/rails/rails/commit/d69ebb849a78c07a4efc869789c4bc90e8741482 - needs test coverage.</body>
      <body-html>&lt;div&gt;&lt;p&gt;See also &lt;a href=
&quot;http://github.com/rails/rails/commit/d69ebb849a78c07a4efc869789c4bc90e8741482&quot;&gt;
http://github.com/rails/rails/commit/d69ebb849a78c07a4efc869789c4bc...&lt;/a&gt;
- needs test coverage.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-24T19:04:34+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-24T19:04:38+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Jos&#233; Valim tells me that the repro steps for his issue are to store a class in the session when using the cookie store; problems were occurring during deserialization. I'll attempt to repro myself and add some test coverage, and will submit an updated patch (incorporating Jos&#233;'s changes) for 2-3-stable.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jos&amp;eacute; Valim tells me that the repro steps for his issue
are to store a class in the session when using the cookie store;
problems were occurring during deserialization. I'll attempt to
repro myself and add some test coverage, and will submit an updated
patch (incorporating Jos&amp;eacute;'s changes) for 2-3-stable.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-24T20:29:21+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-24T20:29:23+01:00</updated-at>
      <user-id type="integer">20509</user-id>
      <version type="integer">9</version>
      <user-name>Michael Lovitt</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Jos&#233; committed a revised fix for the deserialization issue:

http://github.com/rails/rails/commit/21c99e93883c1cf32474ad65a507e69e373a380c

The specific error condition: the cookie store contains a serialized object of a class that has not yet been loaded into the environment. Auto-loading missing classes is generally handled for all stores within the abstract store, but was failing to happen under certain conditions in the case of the cookie store.

While adding test coverage for Jos&#233;'s fix, I discovered one more broken case: when the cookie store contains a serialized object of an unloaded class, an error occurs if the session id is read before the session data is read. I've attached a patch for this, which also tidies up some of the related code, and includes test coverage for all of the above, so hopefully this behavior won't get broken again. 

To come: a revised 2-3-master patch that includes my original improvements plus these latest fixes and tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jos&amp;eacute; committed a revised fix for the deserialization
issue:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/21c99e93883c1cf32474ad65a507e69e373a380c&quot;&gt;
http://github.com/rails/rails/commit/21c99e93883c1cf32474ad65a507e6...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The specific error condition: the cookie store contains a
serialized object of a class that has not yet been loaded into the
environment. Auto-loading missing classes is generally handled for
all stores within the abstract store, but was failing to happen
under certain conditions in the case of the cookie store.&lt;/p&gt;
&lt;p&gt;While adding test coverage for Jos&amp;eacute;'s fix, I discovered
one more broken case: when the cookie store contains a serialized
object of an unloaded class, an error occurs if the session id is
read before the session data is read. I've attached a patch for
this, which also tidies up some of the related code, and includes
test coverage for all of the above, so hopefully this behavior
won't get broken again.&lt;/p&gt;
&lt;p&gt;To come: a revised 2-3-master patch that includes my original
improvements plus these latest fixes and tests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-27T20:29:29+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-27T20:29:40+01:00</updated-at>
      <user-id type="integer">20509</user-id>
      <version type="integer">10</version>
      <user-name>Michael Lovitt</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-27T21:15:09+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-27T21:15:21+01:00</updated-at>
      <user-id type="integer">20509</user-id>
      <version type="integer">11</version>
      <user-name>Michael Lovitt</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [ebee77a28a7267d5f23a28ba23c1eb88a2d7d527]) Fixed that an ArgumentError is thrown when request.session_options[:id] is read in the following scenario: when the cookie store is used, and the session contains a serialized object of an unloaded class, and no session data accesses have occurred yet. Pushed the stale_session_check responsibility out of the SessionHash and down into the session store, closer to where the deserialization actually occurs. Added some test coverage for this case and others related to deserialization of unloaded types.

[#4938]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/ebee77a28a7267d5f23a28ba23c1eb88a2d7d527</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/ebee77a28a7267d5f23a28ba23c1eb88a2d7d527&quot;
title=
&quot;Changeset [ebee77a28a7267d5f23a28ba23c1eb88a2d7d527]&quot;&gt;[ebee77a28a7267d5f23a28ba23c1eb88a2d7d527]&lt;/a&gt;)
Fixed that an ArgumentError is thrown when
request.session_options[:id] is read in the following scenario:
when the cookie store is used, and the session contains a
serialized object of an unloaded class, and no session data
accesses have occurred yet. Pushed the stale_session_check
responsibility out of the SessionHash and down into the session
store, closer to where the deserialization actually occurs. Added
some test coverage for this case and others related to
deserialization of unloaded types.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/4938&quot; title=
&quot;Ticket #4938&quot;&gt;#4938&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/ebee77a28a7267d5f23a28ba23c1eb88a2d7d527&quot;&gt;
http://github.com/rails/rails/commit/ebee77a28a7267d5f23a28ba23c1eb...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-27T21:39:43+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-27T21:39:47+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">12</version>
      <user-name>Repository</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Thanks Michael!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks Michael!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-27T22:00:54+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-27T22:00:58+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">13</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Ok, an updated 2-3-stable patch is attached. It includes all the original session improvements and associated tests, plus the work Jos&#233; and I both did on the cookie store deserialization issues.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, an updated 2-3-stable patch is attached. It includes all the
original session improvements and associated tests, plus the work
Jos&amp;eacute; and I both did on the cookie store deserialization
issues.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-28T04:52:49+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 3.x patch
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.x 3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-28T04:53:00+01:00</updated-at>
      <user-id type="integer">20509</user-id>
      <version type="integer">14</version>
      <user-name>Michael Lovitt</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T01:54:16+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.x 3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-30T01:54:22+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">15</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Michael, after applying your patch I get three failures on Ruby 1.9.2. Could you please investigate? Thanks a lot!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Michael, after applying your patch I get three failures on Ruby
1.9.2. Could you please investigate? Thanks a lot!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-30T12:26:59+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.x 3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-06-30T12:27:07+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">16</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Michael, I saw your comment on #4450 that it's fixed by this patch.

By reading (and applying) the patch I can't see how.
Are you planning on fixing that bug as well or did you just misunderstood the case?

Please also see my comment on #4450. Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Michael, I saw your comment on &lt;a href=
&quot;/projects/8994/tickets/4450&quot; title=&quot;Ticket #4450&quot;&gt;#4450&lt;/a&gt; that
it's fixed by this patch.&lt;/p&gt;
&lt;p&gt;By reading (and applying) the patch I can't see how.&lt;br&gt;
Are you planning on fixing that bug as well or did you just
misunderstood the case?&lt;/p&gt;
&lt;p&gt;Please also see my comment on &lt;a href=
&quot;/projects/8994/tickets/4450&quot; title=&quot;Ticket #4450&quot;&gt;#4450&lt;/a&gt;.
Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-12T01:00:30+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.x 3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-07-12T01:00:33+01:00</updated-at>
      <user-id type="integer">106793</user-id>
      <version type="integer">17</version>
      <user-name>Fotos Georgiadis</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>**Jos&#233;:** I was unable to reproduce the failures you mentioned. After applying the patch, all actionpack tests pass for me on both Ruby 1.9.2 and 1.8.7. 

But the patch no longer applies cleanly to 2-3-stable, due to some recent unrelated session commits, so I've attached a new one. Jos&#233;, if you still get failures with this patch, could you tell me the specific failures you're seeing as well as the specific 1.9.2 release you're using?

**Fotos:** I will take a closer look at #4450 and will respond in the case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Jos&amp;eacute;:&lt;/strong&gt; I was unable to reproduce the
failures you mentioned. After applying the patch, all actionpack
tests pass for me on both Ruby 1.9.2 and 1.8.7.&lt;/p&gt;
&lt;p&gt;But the patch no longer applies cleanly to 2-3-stable, due to
some recent unrelated session commits, so I've attached a new one.
Jos&amp;eacute;, if you still get failures with this patch, could you
tell me the specific failures you're seeing as well as the specific
1.9.2 release you're using?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fotos:&lt;/strong&gt; I will take a closer look at &lt;a href=
&quot;/projects/8994/tickets/4450&quot; title=&quot;Ticket #4450&quot;&gt;#4450&lt;/a&gt; and
will respond in the case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-13T18:57:02+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.x 3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-07-13T18:57:05+01:00</updated-at>
      <user-id type="integer">20509</user-id>
      <version type="integer">18</version>
      <user-name>Michael Lovitt</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>(from [257a29d3cca91913325a8bfef0f06b7ec6c4654b]) Sessions should not be created until written to and session data should be destroyed on reset. [#4938 state:resolved]

Signed-off-by: Jos&#233; Valim &lt;jose.valim@gmail.com&gt;
http://github.com/rails/rails/commit/257a29d3cca91913325a8bfef0f06b7ec6c4654b</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/257a29d3cca91913325a8bfef0f06b7ec6c4654b&quot;
title=
&quot;Changeset [257a29d3cca91913325a8bfef0f06b7ec6c4654b]&quot;&gt;[257a29d3cca91913325a8bfef0f06b7ec6c4654b]&lt;/a&gt;)
Sessions should not be created until written to and session data
should be destroyed on reset. [&lt;a href=
&quot;/projects/8994/tickets/4938&quot; title=&quot;Ticket #4938&quot;&gt;#4938&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jos&amp;eacute; Valim &lt;a href=
&quot;mailto:jose.valim@gmail.com&quot;&gt;jose.valim@gmail.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/257a29d3cca91913325a8bfef0f06b7ec6c4654b&quot;&gt;
http://github.com/rails/rails/commit/257a29d3cca91913325a8bfef0f06b...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-14T07:13:32+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.x 3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-07-14T07:13:34+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">19</version>
      <user-name>Repository</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>stige and &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com&quot;&gt;handbags sale&lt;/a&gt;&lt;/b&gt; high fashion of Louis &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com/collection/chanel-classic-handbags.html&quot;&gt;cheap Chanel Classic Handbags&lt;/a&gt;&lt;/b&gt; Vuitton handbags and luggage &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com&quot;&gt;handbags sale&lt;/a&gt;&lt;/b&gt; at an affordable value. &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com&quot;&gt;louis vuitton latest bags&lt;/a&gt;&lt;/b&gt; Our meticulous replica Louis &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com&quot;&gt;replica handbags sale&lt;/a&gt;&lt;/b&gt; Vuitton purses and Louis &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com&quot;&gt;louis vuitton fake&lt;/a&gt;&lt;/b&gt; Vuitton wallets are crafted &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com/collection/2008-fall-winter-handbags.html&quot;&gt;wholesale 2008 Fall-Winter Handbags&lt;/a&gt;&lt;/b&gt; to exacting standards of &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com&quot;&gt;fake designet replica handbags&lt;/a&gt;&lt;/b&gt; quality, longevityFind Article, and &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com&quot;&gt;replica handbags&lt;/a&gt;&lt;/b&gt; cutting-edge design. ? Hardware &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com/collection/taiga-leather.html&quot;&gt;Taiga Leather&lt;/a&gt;&lt;/b&gt; protection is vitally important when buy</body>
      <body-html>&lt;div&gt;&lt;p&gt;stige and &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-replicas.com&quot;&gt;handbags sale&lt;/a&gt;&lt;/b&gt; high
fashion of Louis &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-replicas.com/collection/chanel-classic-handbags.html&quot;&gt;
cheap Chanel Classic Handbags&lt;/a&gt;&lt;/b&gt; Vuitton handbags and luggage
&lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com&quot;&gt;handbags
sale&lt;/a&gt;&lt;/b&gt; at an affordable value. &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-replicas.com&quot;&gt;louis vuitton latest
bags&lt;/a&gt;&lt;/b&gt; Our meticulous replica Louis &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-replicas.com&quot;&gt;replica handbags
sale&lt;/a&gt;&lt;/b&gt; Vuitton purses and Louis &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-replicas.com&quot;&gt;louis vuitton fake&lt;/a&gt;&lt;/b&gt;
Vuitton wallets are crafted &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-replicas.com/collection/2008-fall-winter-handbags.html&quot;&gt;
wholesale 2008 Fall-Winter Handbags&lt;/a&gt;&lt;/b&gt; to exacting standards
of &lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com&quot;&gt;fake designet
replica handbags&lt;/a&gt;&lt;/b&gt; quality, longevityFind Article, and
&lt;b&gt;&lt;a href=&quot;http://www.louisvuitton-replicas.com&quot;&gt;replica
handbags&lt;/a&gt;&lt;/b&gt; cutting-edge design. ? Hardware &lt;b&gt;&lt;a href=
&quot;http://www.louisvuitton-replicas.com/collection/taiga-leather.html&quot;&gt;
Taiga Leather&lt;/a&gt;&lt;/b&gt; protection is vitally important when buy&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-20T02:26:59+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.x 3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-07-20T05:22:00+01:00</updated-at>
      <user-id type="integer">107926</user-id>
      <version type="integer">20</version>
      <user-name>echo</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Hi!

I'm calling 2 times reset_session in the same controller action (in a specific condition), but after update my up from 2.3.8 to 2.3.9, I'm getting the following error:

undefined method `destroy' for {}:Hash

Inside ActionController::Request#reset_session

Any advice?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi!&lt;/p&gt;
&lt;p&gt;I'm calling 2 times reset_session in the same controller action
(in a specific condition), but after update my up from 2.3.8 to
2.3.9, I'm getting the following error:&lt;/p&gt;
&lt;p&gt;undefined method &lt;code&gt;destroy' for {}:Hash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Inside ActionController::Request#reset_session&lt;/p&gt;
&lt;p&gt;Any advice?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-11T11:49:39+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.x 3.x patch</tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-09-11T11:49:43+01:00</updated-at>
      <user-id type="integer">48525</user-id>
      <version type="integer">21</version>
      <user-name>PacoGuzman</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T21:47:53+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.x 3.x patch
</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-10-09T21:47:54+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">23</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>With the high-tech&lt;a href=&quot;http://www.egacn.com/Watches-Mens Rolex Replica.aspx&quot;&gt;Mens Rolex Replica&lt;/a&gt; technology and unique colorways design,&lt;a href=&quot;http://www.egacn.com/Watches-Ladies Rolex Replica.aspx&quot;&gt;Ladies Rolex Replica&lt;/a&gt;can make you more special in the crowd. Now you can choose whatever you like on our life. &lt;a href=&quot;http://www.egacn.com/Watches-Mens Breitling Replica.aspx&quot;&gt;Mens Breitling Replica&lt;/a&gt;, the colorway of shoes is just right, which can stimulate your passion for sport availably. Those great quality but &lt;a href=&quot;http://www.egacn.com/Watches-Ladies Breitling Replica.aspx&quot;&gt;Ladies Breitling Replica&lt;/a&gt; are waiting for you right now. There will always be one pair of shoes appropriated for you on our Supra Sneakers&lt;a href=&quot;http://www.egacn.com/Watches-Mens Cartier Replica.aspx&quot;&gt;Mens Cartier Replica&lt;/a&gt; store.If you are looking for a pair of pretty &lt;a href=&quot;http://www.egacn.com/Watches-Ladies Cartier Replica.aspx&quot;&gt;Ladies Cartier Replica&lt;/a&gt;, you shouldn't miss this chance for purchasing &lt;a href=&quot;http://www.egacn.com/Watches-Mens Longines Replica.aspx&quot;&gt;Mens Longines Replica&lt;/a&gt; this season in our shop. &lt;a href=&quot;http://www.egacn.com/Watches-Ladies Longines Replica.aspx&quot;&gt;Ladies Longines Replica&lt;/a&gt;would give people such a deep impression. &lt;a href=&quot;http://www.egacn.com/Watches-Mens Omega Replica.aspx&quot;&gt;Mens Omega Replica&lt;/a&gt;appreciate it not only by the high quality with steady innovations but also by its stylish designs. There is no doubt that it could go well with you casual outfits. There are many kinds of&lt;a href=&quot;http://www.egacn.com/Watches-Ladies Omega Replica.aspx&quot;&gt;Ladies Omega Replica&lt;/a&gt; for different ages and tastes online. So pick up your own&lt;a href=&quot;http://www.egacn.com/Watches-Mens Tag Heuer Replica.aspx&quot;&gt;Mens Tag Heuer Replica&lt;/a&gt;now.It is named &lt;a href=&quot;http://www.egacn.com/Watches-Mens Oris Replica.aspx&quot;&gt;Mens Oris Replica&lt;/a&gt;for the reason that man who create &lt;a href=&quot;http://www.egacn.com/Watches-Ladies Tag Heuer Replica.aspx&quot;&gt;Ladies Tag Heuer Replica&lt;/a&gt;. At the same time, it's helpful to reduce the risk of injury for the player. If you think your feet should be protected well during the strenuous exercise,the&lt;a href=&quot;http://www.egacn.com/Watches-Ladies Oris Replica.aspx&quot;&gt;Ladies Oris Replica&lt;/a&gt;are the right choice .
There are many Cheap &lt;a href=&quot;http://www.egacn.com/Watches-Mens Raymond Weil Replica.aspx&quot;&gt;Mens Raymond Weil Replica&lt;/a&gt; from our shop. If you want to learn more informations of those &lt;a href=&quot;http://www.egacn.com/Watches-Ladies Raymond Weil Replica.asp&quot;&gt;Ladies Raymond Weil Replica&lt;/a&gt;, please visite our website . Are you looking for a comfortable shoes? We are ready for you to give you great discount&lt;a href=&quot;http://www.egacn.com/Watches-Mens Ulysse-Nardin Replica.aspx&quot;&gt;Mens Ulysse-Nardin Replica&lt;/a&gt; and best service.A interesting article,thank you for sharing.Then I will share my website &lt;a href=&quot;http://www.egacn.com/Watches-Ladies Ulysse-Nardin Replica.aspx&quot;&gt;Ladies Ulysse-Nardin Replica&lt;/a&gt;with you too.On our&lt;a href=&quot;http://www.egacn.com/Watches-Mens Ulysse-Nardin Replica.aspx&quot;&gt;Mens Ulysse-Nardin Replica&lt;/a&gt; there are so many new style &lt;a href=&quot;http://www.egacn.com/Watches-Ladies Ulysse-Nardin Replica.aspx&quot;&gt;Ladies Ulysse-Nardin Replica&lt;/a&gt; in 2010,E.g.Welcom to our&lt;a href=&quot;http://www.egacn.com/Watches-Mens Vacheron Constantin Replica.aspx&quot;&gt;Mens Vacheron Constantin Replica&lt;/a&gt; whenever!Give yourself a new&lt;a href=&quot;http://www.egacn.com/Watches-Ladies Vacheron Constantin Replica.aspx&quot;&gt;Ladies Vacheron Constantin Replica&lt;/a&gt; and give us a chance to make you satisfied.We will do our best to give you professional service.It's a interesting news,i like it.Additionally,wellcome to my &lt;a href=&quot;http://www.egacn.com/Watches-Mens Zenith Replica.aspx&quot;&gt;Mens Zenith Replica&lt;/a&gt;.There are so many&lt;a href=&quot;http://www.egacn.com/Watches-Ladies Zenith Replica.aspx&quot;&gt;Ladies Zenith Replica&lt;/a&gt; such as:&lt;a href=&quot;http://www.egacn.com/Watches-Mens Panerai Replica.aspx&quot;&gt;Mens Panerai Replica&lt;/a&gt;There are so much style of &lt;a href=&quot;http://www.egacn.com/Watches-Ladies Panerai Replica.aspx&quot;&gt;Ladies Panerai Replica&lt;/a&gt;,so once you go to my &lt;a href=&quot;http://www.egacn.com/Watches-Mens Jaeger-LeCoultre Replica.aspx&quot;&gt;Mens Jaeger-LeCoultre Replica&lt;/a&gt; you will be very surprise.Welcome to the &lt;a href=&quot;http://www.egacn.com/Watches-Ladies Jaeger-LeCoultre Replica.aspx&quot;&gt;Ladies Jaeger-LeCoultre Replica&lt;/a&gt;, the following is our&lt;a href=&quot;http://www.egacn.com/Watches-Mens Chopard Replica.aspx&quot;&gt;reMens Chopard Replica&lt;/a&gt;, free shipping.</body>
      <body-html>&lt;div&gt;&lt;p&gt;With the high-tech&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Rolex%20Replica.aspx&quot;&gt;Mens
Rolex Replica&lt;/a&gt; technology and unique colorways design,&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Rolex%20Replica.aspx&quot;&gt;Ladies
Rolex Replica&lt;/a&gt;can make you more special in the crowd. Now you
can choose whatever you like on our life. &lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Breitling%20Replica.aspx&quot;&gt;Mens
Breitling Replica&lt;/a&gt;, the colorway of shoes is just right, which
can stimulate your passion for sport availably. Those great quality
but &lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Breitling%20Replica.aspx&quot;&gt;Ladies
Breitling Replica&lt;/a&gt; are waiting for you right now. There will
always be one pair of shoes appropriated for you on our Supra
Sneakers&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Cartier%20Replica.aspx&quot;&gt;Mens
Cartier Replica&lt;/a&gt; store.If you are looking for a pair of pretty
&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Cartier%20Replica.aspx&quot;&gt;Ladies
Cartier Replica&lt;/a&gt;, you shouldn't miss this chance for purchasing
&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Longines%20Replica.aspx&quot;&gt;Mens
Longines Replica&lt;/a&gt; this season in our shop. &lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Longines%20Replica.aspx&quot;&gt;Ladies
Longines Replica&lt;/a&gt;would give people such a deep impression.
&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Omega%20Replica.aspx&quot;&gt;Mens
Omega Replica&lt;/a&gt;appreciate it not only by the high quality with
steady innovations but also by its stylish designs. There is no
doubt that it could go well with you casual outfits. There are many
kinds of&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Omega%20Replica.aspx&quot;&gt;Ladies
Omega Replica&lt;/a&gt; for different ages and tastes online. So pick up
your own&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Tag%20Heuer%20Replica.aspx&quot;&gt;Mens
Tag Heuer Replica&lt;/a&gt;now.It is named &lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Oris%20Replica.aspx&quot;&gt;Mens Oris
Replica&lt;/a&gt;for the reason that man who create &lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Tag%20Heuer%20Replica.aspx&quot;&gt;Ladies
Tag Heuer Replica&lt;/a&gt;. At the same time, it's helpful to reduce the
risk of injury for the player. If you think your feet should be
protected well during the strenuous exercise,the&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Oris%20Replica.aspx&quot;&gt;Ladies
Oris Replica&lt;/a&gt;are the right choice .&lt;br&gt;
There are many Cheap &lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Raymond%20Weil%20Replica.aspx&quot;&gt;
Mens Raymond Weil Replica&lt;/a&gt; from our shop. If you want to learn
more informations of those &lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Raymond%20Weil%20Replica.asp&quot;&gt;
Ladies Raymond Weil Replica&lt;/a&gt;, please visite our website . Are
you looking for a comfortable shoes? We are ready for you to give
you great discount&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Ulysse-Nardin%20Replica.aspx&quot;&gt;Mens
Ulysse-Nardin Replica&lt;/a&gt; and best service.A interesting
article,thank you for sharing.Then I will share my website &lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Ulysse-Nardin%20Replica.aspx&quot;&gt;
Ladies Ulysse-Nardin Replica&lt;/a&gt;with you too.On our&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Ulysse-Nardin%20Replica.aspx&quot;&gt;Mens
Ulysse-Nardin Replica&lt;/a&gt; there are so many new style &lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Ulysse-Nardin%20Replica.aspx&quot;&gt;
Ladies Ulysse-Nardin Replica&lt;/a&gt; in 2010,E.g.Welcom to our&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Vacheron%20Constantin%20Replica.aspx&quot;&gt;Mens
Vacheron Constantin Replica&lt;/a&gt; whenever!Give yourself a
new&lt;a href=&quot;http://www.egacn.com/Watches-Ladies%20Vacheron%20Constantin%20Replica.aspx&quot;&gt;Ladies
Vacheron Constantin Replica&lt;/a&gt; and give us a chance to make you
satisfied.We will do our best to give you professional service.It's
a interesting news,i like it.Additionally,wellcome to my &lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Zenith%20Replica.aspx&quot;&gt;Mens
Zenith Replica&lt;/a&gt;.There are so many&lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Zenith%20Replica.aspx&quot;&gt;Ladies
Zenith Replica&lt;/a&gt; such as:&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Panerai%20Replica.aspx&quot;&gt;Mens
Panerai Replica&lt;/a&gt;There are so much style of &lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Panerai%20Replica.aspx&quot;&gt;Ladies
Panerai Replica&lt;/a&gt;,so once you go to my &lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Jaeger-LeCoultre%20Replica.aspx&quot;&gt;
Mens Jaeger-LeCoultre Replica&lt;/a&gt; you will be very surprise.Welcome
to the &lt;a href=
&quot;http://www.egacn.com/Watches-Ladies%20Jaeger-LeCoultre%20Replica.aspx&quot;&gt;
Ladies Jaeger-LeCoultre Replica&lt;/a&gt;, the following is our&lt;a href=
&quot;http://www.egacn.com/Watches-Mens%20Chopard%20Replica.aspx&quot;&gt;reMens
Chopard Replica&lt;/a&gt;, free shipping.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-25T00:25:57+01:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-10-25T03:19:10+01:00</updated-at>
      <user-id type="integer">121592</user-id>
      <version type="integer">24</version>
      <user-name>weifeng</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:14:34+00:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-11-08T23:12:06+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">25</version>
      <user-name>jim123456</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-28T03:01:54+00:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2010-12-28T03:36:15+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">26</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T02:24:45+00:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2011-02-14T05:41:54+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">27</version>
      <user-name>xixi</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T09:30:07+00:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2011-02-14T09:36:20+00:00</updated-at>
      <user-id type="integer">136894</user-id>
      <version type="integer">28</version>
      <user-name>tdfgd</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-16T07:13:12+00:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">73534</milestone-id>
      <number type="integer">4938</number>
      <permalink>patch-session-fixes-sessions-should-not-be-created-until-written-to-and-session-data-should-be-destroyed-on-session-reset</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[PATCH] Session fixes: sessions should not be created until written to; and session data should be destroyed on session reset</title>
      <updated-at type="datetime">2011-02-16T07:20:13+00:00</updated-at>
      <user-id type="integer">137258</user-id>
      <version type="integer">29</version>
      <user-name>fgfhnmn</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4938</url>
      <milestone-title>2.3.9</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>9cc558a0fec4b6cea36dd27470ae8cf08bc21884</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-23T03:34:26+01:00</created-at>
      <filename>session_fixes.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">569884</id>
      <size type="integer">16818</size>
      <uploader-id type="integer">20509</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/569884/session_fixes.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>0e08e9a22cb2ddfbd35b3e6f685436f475db161a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-24T17:02:43+01:00</created-at>
      <filename>session_fixes_2-3-stable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">572304</id>
      <size type="integer">18852</size>
      <uploader-id type="integer">20509</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/572304/session_fixes_2-3-stable.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>f05d8bce7c38c4f92e48b9669ad8ecf876818960</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-27T21:15:09+01:00</created-at>
      <filename>session_deserialization_fixes_and_tests.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">577872</id>
      <size type="integer">11077</size>
      <uploader-id type="integer">20509</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/577872/session_deserialization_fixes_and_tests.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>ab5d412074e84260b025d43d748cc9006f5931cf</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-28T04:52:49+01:00</created-at>
      <filename>session_fixes_2-3-stable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">578020</id>
      <size type="integer">26360</size>
      <uploader-id type="integer">20509</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/578020/session_fixes_2-3-stable.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>ef70effc51ba408c07e527c838635070604c47ef</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-13T18:57:02+01:00</created-at>
      <filename>session_fixes_2-3-stable_07132010.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">592189</id>
      <size type="integer">26482</size>
      <uploader-id type="integer">20509</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/592189/session_fixes_2-3-stable_07132010.diff</url>
    </attachment>
  </attachments>
</ticket>
