<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-05T08:34:10+01:00</created-at>
  <creator-id type="integer">21255</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">336</number>
  <permalink>missing-somemodel-id-after-reset_subclasses</permalink>
  <priority type="integer">17299</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.0-stable activerecord bug edge patch</tag>
  <title>missing SomeModel#id after reset_subclasses</title>
  <updated-at type="datetime">2008-10-07T21:59:53+01:00</updated-at>
  <user-id type="integer">33844</user-id>
  <version type="integer">6</version>
  <user-name>ogryb</user-name>
  <creator-name>Kazuhiro Nishiyama</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/336</url>
  <priority-name nil="true"></priority-name>
  <original-body>Removing auto defined methods should use remove_method instead of undef_method.
Because undef_method removes SomeModel#id and hides ActiveRecord::Base#id.</original-body>
  <latest-body>Removing auto defined methods should use remove_method instead of undef_method.
Because undef_method removes SomeModel#id and hides ActiveRecord::Base#id.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Removing auto defined methods should use remove_method instead of undef_method.
&lt;/p&gt;&lt;p&gt;
Because undef_method removes SomeModel#id and hides ActiveRecord::Base#id.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Removing auto defined methods should use remove_method instead of undef_method.
Because undef_method removes SomeModel#id and hides ActiveRecord::Base#id.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Removing auto defined methods should use remove_method instead of undef_method.
&lt;/p&gt;&lt;p&gt;
Because undef_method removes SomeModel#id and hides ActiveRecord::Base#id.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-05T08:34:10+01:00</created-at>
      <creator-id type="integer">21255</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">336</number>
      <permalink>missing-somemodel-id-after-reset_subclasses</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>missing SomeModel#id after reset_subclasses</title>
      <updated-at type="datetime">2008-06-05T08:34:10+01:00</updated-at>
      <user-id type="integer">21255</user-id>
      <version type="integer">1</version>
      <user-name>Kazuhiro Nishiyama</user-name>
      <creator-name>Kazuhiro Nishiyama</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/336</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The attached test case scirpt is an individual script, because test environment is with config.cache_classes = true, but the problem occurs with config.cache_classes = false.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The attached test case scirpt is an individual script, because test environment is with config.cache_classes = true, but the problem occurs with config.cache_classes = false.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-05T08:34:25+01:00</created-at>
      <creator-id type="integer">21255</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">336</number>
      <permalink>missing-somemodel-id-after-reset_subclasses</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>missing SomeModel#id after reset_subclasses</title>
      <updated-at type="datetime">2008-06-05T08:34:25+01:00</updated-at>
      <user-id type="integer">21255</user-id>
      <version type="integer">2</version>
      <user-name>Kazuhiro Nishiyama</user-name>
      <creator-name>Kazuhiro Nishiyama</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/336</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Why are you calling reset_subclasses ? Can you not just call ActiveSupport::Dependencies.clear ?

Anyone has thoughts on how to test this ?

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Why are you calling reset_subclasses ? Can you not just call ActiveSupport::Dependencies.clear ?
&lt;/p&gt;&lt;p&gt;
Anyone has thoughts on how to test this ?
&lt;/p&gt;&lt;p&gt;
Thanks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-12T01:38:34+01:00</created-at>
      <creator-id type="integer">21255</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">336</number>
      <permalink>missing-somemodel-id-after-reset_subclasses</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.0-stable activerecord bug edge patch</tag>
      <title>missing SomeModel#id after reset_subclasses</title>
      <updated-at type="datetime">2008-07-12T01:38:34+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Kazuhiro Nishiyama</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/336</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Calling reset_subclasses is a minimal case.
I met this problem with passenger-1.0.5 and rails-2.0.2.
I do not reproduce the problem with passenger-2.0.1 and rails-2.1.0.
Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Calling reset_subclasses is a minimal case.
&lt;/p&gt;&lt;p&gt;
I met this problem with passenger-1.0.5 and rails-2.0.2.
&lt;/p&gt;&lt;p&gt;
I do not reproduce the problem with passenger-2.0.1 and rails-2.1.0.
&lt;/p&gt;&lt;p&gt;
Thanks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-14T06:26:50+01:00</created-at>
      <creator-id type="integer">21255</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">336</number>
      <permalink>missing-somemodel-id-after-reset_subclasses</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.0-stable activerecord bug edge patch</tag>
      <title>missing SomeModel#id after reset_subclasses</title>
      <updated-at type="datetime">2008-07-14T06:26:50+01:00</updated-at>
      <user-id type="integer">21255</user-id>
      <version type="integer">4</version>
      <user-name>Kazuhiro Nishiyama</user-name>
      <creator-name>Kazuhiro Nishiyama</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/336</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm having a bigger problem with 'reset_subclasses' in the following scenario:

1. Class A is derived from ActiveRecord
2. Class B is derived from A

Class B looks OK when it's created first time. After reset_subclasses is called all methods of class B get deleted, but methods of class A are still there. Next time when class B is used I'm getting exceptions because all methods of class B and 'id' are still missing. It happens only if caching is off (config.cache_classes = false).

I need to fix it somehow. Please let me know what code is responsible for re-creating a class after it was processed by reset_subclasses. Probably I'll fix it there. 

It happens in Rails 2.0.2 and 2.1.1 with both ruby 1.8.7 and 1.8.6.

If you know any other &quot;work around&quot; please let me know too.

Below is the piece of code that cripples my classes:

def self.reset_subclasses #:nodoc:
....

        klass.instance_methods(false).each { |m| klass.send :undef_method, m }</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm having a bigger problem with 'reset_subclasses' in the
following scenario:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Class A is derived from ActiveRecord&lt;/li&gt;
&lt;li&gt;Class B is derived from A&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Class B looks OK when it's created first time. After
reset_subclasses is called all methods of class B get deleted, but
methods of class A are still there. Next time when class B is used
I'm getting exceptions because all methods of class B and 'id' are
still missing. It happens only if caching is off
(config.cache_classes = false).&lt;/p&gt;
&lt;p&gt;I need to fix it somehow. Please let me know what code is
responsible for re-creating a class after it was processed by
reset_subclasses. Probably I'll fix it there.&lt;/p&gt;
&lt;p&gt;It happens in Rails 2.0.2 and 2.1.1 with both ruby 1.8.7 and
1.8.6.&lt;/p&gt;
&lt;p&gt;If you know any other &quot;work around&quot; please let me know too.&lt;/p&gt;
&lt;p&gt;Below is the piece of code that cripples my classes:&lt;/p&gt;
&lt;p&gt;def self.reset_subclasses #:nodoc: ....&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    klass.instance_methods(false).each { |m| klass.send :undef_method, m }
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-06T04:56:25+01:00</created-at>
      <creator-id type="integer">21255</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.0-stable activerecord bug edge patch
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">336</number>
      <permalink>missing-somemodel-id-after-reset_subclasses</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>&quot;2.0-stable&quot; activerecord bug edge patch</tag>
      <title>missing SomeModel#id after reset_subclasses</title>
      <updated-at type="datetime">2008-10-06T04:56:29+01:00</updated-at>
      <user-id type="integer">33844</user-id>
      <version type="integer">5</version>
      <user-name>ogryb</user-name>
      <creator-name>Kazuhiro Nishiyama</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/336</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I've changed undef_method to remove_method, but it didn't help - I'm still getting NoMethodError for the methods that are defined in class B.

Any other ideas?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've changed undef_method to remove_method, but it didn't help -
I'm still getting NoMethodError for the methods that are defined in
class B.&lt;/p&gt;
&lt;p&gt;Any other ideas?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-07T21:59:48+01:00</created-at>
      <creator-id type="integer">21255</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">336</number>
      <permalink>missing-somemodel-id-after-reset_subclasses</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>&quot;2.0-stable&quot; activerecord bug edge patch</tag>
      <title>missing SomeModel#id after reset_subclasses</title>
      <updated-at type="datetime">2008-10-07T21:59:53+01:00</updated-at>
      <user-id type="integer">33844</user-id>
      <version type="integer">6</version>
      <user-name>ogryb</user-name>
      <creator-name>Kazuhiro Nishiyama</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/336</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4b9f4295008ec94d07f8bb8055f7b276c8baa6bd</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-05T08:34:10+01:00</created-at>
      <filename>reset_subclasses.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">26032</id>
      <size type="integer">668</size>
      <uploader-id type="integer">21255</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/26032/reset_subclasses.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>cf5f47bd208acd3c2d13203955a12b3661319d38</code>
      <content-type>application/octet-stream</content-type>
      <created-at type="datetime">2008-06-05T08:34:25+01:00</created-at>
      <filename>reset_test.sh</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">26033</id>
      <size type="integer">721</size>
      <uploader-id type="integer">21255</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/26033/reset_test.sh</url>
    </attachment>
  </attachments>
</ticket>
