<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-29T05:29:22+00:00</created-at>
  <creator-id type="integer">37309</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1815</number>
  <permalink>patch-add-or_if_blank-to-object</permalink>
  <priority type="integer">1105</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.3 core_ext or_if_blank</tag>
  <title>Add or_if_blank to Object</title>
  <updated-at type="datetime">2009-01-30T11:41:14+00:00</updated-at>
  <user-id type="integer">2031</user-id>
  <version type="integer">13</version>
  <user-name>tf</user-name>
  <creator-name>Ryan Angilly</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>A utility method so that instead of having to write:

  self.association_proxy.email.blank? ? self.name : self.association_proxy.email

all over the place, you can just write:

  self.association_proxy.email.or_if_blank self.name

Works wherever blank? is defined.

Discussed on this thread: http://groups.google.com/group/rubyonrails-core/browse_thread/thread/309c47cdf924718c</original-body>
  <latest-body>A utility method so that instead of having to write:

  self.association_proxy.email.blank? ? self.name : self.association_proxy.email

all over the place, you can just write:

  self.association_proxy.email.or_if_blank self.name

Works wherever blank? is defined.

Discussed on this thread: http://groups.google.com/group/rubyonrails-core/browse_thread/thread/309c47cdf924718c</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;A utility method so that instead of having to write:&lt;/p&gt;
&lt;p&gt;self.association_proxy.email.blank? ? self.name :
self.association_proxy.email&lt;/p&gt;
&lt;p&gt;all over the place, you can just write:&lt;/p&gt;
&lt;p&gt;self.association_proxy.email.or_if_blank self.name&lt;/p&gt;
&lt;p&gt;Works wherever blank? is defined.&lt;/p&gt;
&lt;p&gt;Discussed on this thread: &lt;a href=&quot;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/309c47cdf924718c&quot;&gt;
http://groups.google.com/group/r...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A utility method so that instead of having to write:

  self.association_proxy.email.blank? ? self.name : self.association_proxy.email

all over the place, you can just write:

  self.association_proxy.email.or_if_blank self.name

Works wherever blank? is defined.

Discussed on this thread: http://groups.google.com/group/rubyonrails-core/browse_thread/thread/309c47cdf924718c</body>
      <body-html>&lt;div&gt;&lt;p&gt;A utility method so that instead of having to write:&lt;/p&gt;
&lt;p&gt;self.association_proxy.email.blank? ? self.name :
self.association_proxy.email&lt;/p&gt;
&lt;p&gt;all over the place, you can just write:&lt;/p&gt;
&lt;p&gt;self.association_proxy.email.or_if_blank self.name&lt;/p&gt;
&lt;p&gt;Works wherever blank? is defined.&lt;/p&gt;
&lt;p&gt;Discussed on this thread: &lt;a href=&quot;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/309c47cdf924718c&quot;&gt;
http://groups.google.com/group/r...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T05:29:22+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>[PATCH] Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-29T05:29:26+00:00</updated-at>
      <user-id type="integer">37309</user-id>
      <version type="integer">1</version>
      <user-name>Ryan Angilly</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm not sure if its good idea, because there's a significant difference with '||'. Usual 'or' is short-circuiting, while this method cannot work that way.

I think that this should at least be noted in the documentation of this method, so that people don't try things like '&lt;do something&gt;.or_if_blank? raise', or
'&lt;do something&gt;.or_if_blank? &lt;do_something_else_expensive&gt;'

And BTW some time ago my co-worked showed me some blog post where some dude proposed '|' for same operation. You might want to consider this syntax, although I think that will be worse, because of the above mentioned non-short-circuiting behavior.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure if its good idea, because there's a significant
difference with '||'. Usual 'or' is short-circuiting, while this
method cannot work that way.&lt;/p&gt;
&lt;p&gt;I think that this should at least be noted in the documentation
of this method, so that people don't try things like '.or_if_blank?
raise', or '.or_if_blank? &amp;lt;do_something_else_expensive&amp;gt;'&lt;/p&gt;
&lt;p&gt;And BTW some time ago my co-worked showed me some blog post
where some dude proposed '|' for same operation. You might want to
consider this syntax, although I think that will be worse, because
of the above mentioned non-short-circuiting behavior.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T06:43:28+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>[PATCH] Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-29T06:43:31+00:00</updated-at>
      <user-id type="integer">24327</user-id>
      <version type="integer">2</version>
      <user-name>Aliaksey Kandratsenka</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The only way I could see to get short-circuit behavior would be to pass a block; it would look kind of weird:

object.param.or_if_blank { object.other_param }

Just a thought.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The only way I could see to get short-circuit behavior would be
to pass a block; it would look kind of weird:&lt;/p&gt;
&lt;p&gt;object.param.or_if_blank { object.other_param }&lt;/p&gt;
&lt;p&gt;Just a thought.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T07:01:21+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>[PATCH] Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-29T07:01:23+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">3</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Had a thought just after posting - it wouldn't be as generic as the above, but what about an operator like _or_ ?

So the above would be:

@@@ ruby
object.param._or_.other_param
@@@

There'd be some interesting trickery needed (see the implementation of SafeNil for ideas), but it would be pretty clear. Of course, I'm a little biased as I've gotten spoiled by hobosupport's _? operator (equivalent to try).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Had a thought just after posting - it wouldn't be as generic as
the above, but what about an operator like &lt;em&gt;or&lt;/em&gt; ?&lt;/p&gt;
&lt;p&gt;So the above would be:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
object.param._or_.other_param
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There'd be some interesting trickery needed (see the
implementation of SafeNil for ideas), but it would be pretty clear.
Of course, I'm a little biased as I've gotten spoiled by
hobosupport's _? operator (equivalent to try).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T07:07:17+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>[PATCH] Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-29T07:07:20+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">4</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I was going to suggest the block as an option.  It's easy to do:

def or_if_blank(other=nil)
  self.blank? ? (other || yield) : self
end

Then you can call it with either an immediate value or a block to get the value with a deferred computation.

person.nickname.or_if_blank(person.full_name)

person.nickname.or_if_blank { person.full_name }</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was going to suggest the block as an option. It's easy to
do:&lt;/p&gt;
&lt;p&gt;def or_if_blank(other=nil) self.blank? ? (other || yield) : self
end&lt;/p&gt;
&lt;p&gt;Then you can call it with either an immediate value or a block
to get the value with a deferred computation.&lt;/p&gt;
&lt;p&gt;person.nickname.or_if_blank(person.full_name)&lt;/p&gt;
&lt;p&gt;person.nickname.or_if_blank { person.full_name }&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T07:40:47+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>[PATCH] Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-29T07:40:49+00:00</updated-at>
      <user-id type="integer">11372</user-id>
      <version type="integer">5</version>
      <user-name>Josh Susser</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I really like the idea of adding lazy evaluation by passing a block. A little note in the docs can point out the difference between &quot;? :&quot; and or_if_blank.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I really like the idea of adding lazy evaluation by passing a
block. A little note in the docs can point out the difference
between &quot;? :&quot; and or_if_blank.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T12:16:10+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>[PATCH] Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-29T12:16:11+00:00</updated-at>
      <user-id type="integer">2031</user-id>
      <version type="integer">6</version>
      <user-name>tf</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Interesting.

But I like my BumbleBee approach,
which is inline with how :try is implemented

@@@ ruby
person.try(:nickname) || person.full_name #&#160;if you care about a :nil? nickname
person.bumblebee(:nickname, :full_name) # if you care about a :blank? nickname
@@@

or with fuller defaulting

@@@ ruby
person.bumblebee(:nickname, :full_name) || &quot;unknown&quot;
@@@

My full gist on the matter is here;
http://gist.github.com/54501</body>
      <body-html>&lt;div&gt;&lt;p&gt;Interesting.&lt;/p&gt;
&lt;p&gt;But I like my BumbleBee approach, which is inline with how :try
is implemented&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
person.try(:nickname) || person.full_name #&#160;if you care about a :nil? nickname
person.bumblebee(:nickname, :full_name) # if you care about a :blank? nickname
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with fuller defaulting&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
person.bumblebee(:nickname, :full_name) || &amp;quot;unknown&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;My full gist on the matter is here; &lt;a href=&quot;http://gist.github.com/54501&quot;&gt;http://gist.github.com/54501&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T12:16:38+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>[PATCH] Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-29T12:16:43+00:00</updated-at>
      <user-id type="integer">21403</user-id>
      <version type="integer">7</version>
      <user-name>MatthewRudy</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(notably the bumblebee doesn't know anything about args or blocks, which :try does)</body>
      <body-html>&lt;div&gt;&lt;p&gt;(notably the bumblebee doesn't know anything about args or
blocks, which :try does)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T12:17:17+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>[PATCH] Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-29T12:17:19+00:00</updated-at>
      <user-id type="integer">21403</user-id>
      <version type="integer">8</version>
      <user-name>MatthewRudy</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The bumblebee is kind of cool. Still it does not cover slightly more complex cases:
@@@ ruby
person.hometown.or_if_blank { person.address.town }
@@@
Silly example. You get the idea.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The bumblebee is kind of cool. Still it does not cover slightly
more complex cases:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
person.hometown.or_if_blank { person.address.town }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Silly example. You get the idea.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T12:33:52+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>[PATCH] Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-29T12:33:54+00:00</updated-at>
      <user-id type="integer">2031</user-id>
      <version type="integer">9</version>
      <user-name>tf</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yeah I really like the block idea.  Patch updated.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah I really like the block idea. Patch updated.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-29T13:06:39+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>[PATCH] Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-29T13:06:42+00:00</updated-at>
      <user-id type="integer">37309</user-id>
      <version type="integer">10</version>
      <user-name>Ryan Angilly</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I don't really think we need to add any of these methods. try() is for a common pattern inside the views. or_if_blank seems like code smell.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't really think we need to add any of these methods. try()
is for a common pattern inside the views. or_if_blank seems like
code smell.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-29T18:16:24+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:title: &quot;[PATCH] Add or_if_blank to Object&quot;
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-29T18:16:27+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">11</version>
      <user-name>Pratik</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>try() doesn't help with blank strings, which was the whole point of what I was suggesting.

And out of curiosity, what's the relevance of try()'s usage in views?  I use my own version of or_if_blank in models, controllers, and helpers just as much as in views.</body>
      <body-html>&lt;div&gt;&lt;p&gt;try() doesn't help with blank strings, which was the whole point
of what I was suggesting.&lt;/p&gt;
&lt;p&gt;And out of curiosity, what's the relevance of try()'s usage in
views? I use my own version of or_if_blank in models, controllers,
and helpers just as much as in views.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-30T02:31:10+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-30T02:31:13+00:00</updated-at>
      <user-id type="integer">37309</user-id>
      <version type="integer">12</version>
      <user-name>Ryan Angilly</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>If this functionality is not wanted - for whatever reason - I'd consider packaging it up as a gem. Still I have to agree that I do not see how try could be of any help in this use case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If this functionality is not wanted - for whatever reason - I'd
consider packaging it up as a gem. Still I have to agree that I do
not see how try could be of any help in this use case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-30T11:41:10+00:00</created-at>
      <creator-id type="integer">37309</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1815</number>
      <permalink>patch-add-or_if_blank-to-object</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3 core_ext or_if_blank</tag>
      <title>Add or_if_blank to Object</title>
      <updated-at type="datetime">2009-01-30T11:41:14+00:00</updated-at>
      <user-id type="integer">2031</user-id>
      <version type="integer">13</version>
      <user-name>tf</user-name>
      <creator-name>Ryan Angilly</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1815</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>cc36720302e466f88db87ac7b828718040afa5e9</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-29T05:29:22+00:00</created-at>
      <filename>or_if_blank.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">82776</id>
      <size type="integer">2985</size>
      <uploader-id type="integer">37309</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/82776/or_if_blank.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>979f933735bce4bce88f62d4441739e0dfe6e4fa</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-29T13:06:39+00:00</created-at>
      <filename>or_if_blank_block_option.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">82847</id>
      <size type="integer">5718</size>
      <uploader-id type="integer">37309</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/82847/or_if_blank_block_option.diff</url>
    </attachment>
  </attachments>
</ticket>
