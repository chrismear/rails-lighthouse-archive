<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-07T00:02:42+01:00</created-at>
  <creator-id type="integer">21652</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">988</number>
  <permalink>is-postgres-pr-driver-no-longer-supported-problem-with-new-transaction_active-method</permalink>
  <priority type="integer">430</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>is postgres-pr driver no longer supported? (problem with new transaction_active? method)</title>
  <updated-at type="datetime">2008-09-18T06:30:55+01:00</updated-at>
  <user-id type="integer">21652</user-id>
  <version type="integer">4</version>
  <user-name>azimux</user-name>
  <creator-name>azimux</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/988</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I've noticed that recently the following method was added:

@@@
def transaction_active?
        @connection.transaction_status != PQTRANS_IDLE
end
@@@

postgres-pr doesn't have a transaction_status method.  The closest I notice in the postgres-pr code is:

@@@
class ReadyForQuery &lt; Message
  register_message_type ?Z
  fields :backend_transaction_status_indicator

  def dump
    super(1) do |buffer|
      buffer.write_byte(@backend_transaction_status_indicator)
    end
  end

  def parse(buffer)
    super do
      @backend_transaction_status_indicator = buffer.read_byte
    end
  end
end
@@@
  
however I can't figure out how best to use this snippet of code, I can't find anything that calls this method to see how it's used.</original-body>
  <latest-body>I've noticed that recently the following method was added:

@@@
def transaction_active?
        @connection.transaction_status != PQTRANS_IDLE
end
@@@

postgres-pr doesn't have a transaction_status method.  The closest I notice in the postgres-pr code is:

@@@
class ReadyForQuery &lt; Message
  register_message_type ?Z
  fields :backend_transaction_status_indicator

  def dump
    super(1) do |buffer|
      buffer.write_byte(@backend_transaction_status_indicator)
    end
  end

  def parse(buffer)
    super do
      @backend_transaction_status_indicator = buffer.read_byte
    end
  end
end
@@@
  
however I can't figure out how best to use this snippet of code, I can't find anything that calls this method to see how it's used.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I've noticed that recently the following method was added:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
def transaction_active?
        @connection.transaction_status != PQTRANS_IDLE
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;postgres-pr doesn't have a transaction_status method. The
closest I notice in the postgres-pr code is:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class ReadyForQuery &amp;lt; Message
  register_message_type ?Z
  fields :backend_transaction_status_indicator

  def dump
    super(1) do |buffer|
      buffer.write_byte(@backend_transaction_status_indicator)
    end
  end

  def parse(buffer)
    super do
      @backend_transaction_status_indicator = buffer.read_byte
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;however I can't figure out how best to use this snippet of code,
I can't find anything that calls this method to see how it's
used.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've noticed that recently the following method was added:

@@@
def transaction_active?
        @connection.transaction_status != PQTRANS_IDLE
end
@@@

postgres-pr doesn't have a transaction_status method.  The closest I notice in the postgres-pr code is:

@@@
class ReadyForQuery &lt; Message
  register_message_type ?Z
  fields :backend_transaction_status_indicator

  def dump
    super(1) do |buffer|
      buffer.write_byte(@backend_transaction_status_indicator)
    end
  end

  def parse(buffer)
    super do
      @backend_transaction_status_indicator = buffer.read_byte
    end
  end
end
@@@
  
however I can't figure out how best to use this snippet of code, I can't find anything that calls this method to see how it's used.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've noticed that recently the following method was added:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
def transaction_active?
        @connection.transaction_status != PQTRANS_IDLE
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;postgres-pr doesn't have a transaction_status method. The
closest I notice in the postgres-pr code is:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
class ReadyForQuery &amp;lt; Message
  register_message_type ?Z
  fields :backend_transaction_status_indicator

  def dump
    super(1) do |buffer|
      buffer.write_byte(@backend_transaction_status_indicator)
    end
  end

  def parse(buffer)
    super do
      @backend_transaction_status_indicator = buffer.read_byte
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;however I can't figure out how best to use this snippet of code,
I can't find anything that calls this method to see how it's
used.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-07T00:02:42+01:00</created-at>
      <creator-id type="integer">21652</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">988</number>
      <permalink>is-postgres-pr-driver-no-longer-supported-problem-with-new-transaction_active-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>is postgres-pr driver no longer supported? (problem with new transaction_active? method)</title>
      <updated-at type="datetime">2008-09-07T00:02:50+01:00</updated-at>
      <user-id type="integer">21652</user-id>
      <version type="integer">1</version>
      <user-name>azimux</user-name>
      <creator-name>azimux</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/988</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>One thing worth mentioning: I brought this up on rubyforge and learned that postgres-pr is not really being actively maintained at the moment and hasn't been for some time.  So I've gone ahead and moved to ruby-postgres which is slightly annoying for a few minor reasons, but certainly doable.

So perhaps supporting postgres-pr isn't a big deal, although ruby-postgres doesn't seem to be very actively maintained either...</body>
      <body-html>&lt;div&gt;&lt;p&gt;One thing worth mentioning: I brought this up on rubyforge and
learned that postgres-pr is not really being actively maintained at
the moment and hasn't been for some time. So I've gone ahead and
moved to ruby-postgres which is slightly annoying for a few minor
reasons, but certainly doable.&lt;/p&gt;
&lt;p&gt;So perhaps supporting postgres-pr isn't a big deal, although
ruby-postgres doesn't seem to be very actively maintained
either...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-07T08:45:41+01:00</created-at>
      <creator-id type="integer">21652</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">988</number>
      <permalink>is-postgres-pr-driver-no-longer-supported-problem-with-new-transaction_active-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>is postgres-pr driver no longer supported? (problem with new transaction_active? method)</title>
      <updated-at type="datetime">2008-09-07T08:45:47+01:00</updated-at>
      <user-id type="integer">21652</user-id>
      <version type="integer">2</version>
      <user-name>azimux</user-name>
      <creator-name>azimux</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/988</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[ruby-pg](http://rubyforge.org/projects/ruby-pg/) is being maintained, and the author also maintains the old ruby-postgres gem. I guess postgres-pr is really old enough not to be worth supporting when there are so many newer alternatives.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://rubyforge.org/projects/ruby-pg/&quot;&gt;ruby-pg&lt;/a&gt; is
being maintained, and the author also maintains the old
ruby-postgres gem. I guess postgres-pr is really old enough not to
be worth supporting when there are so many newer alternatives.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-18T04:20:31+01:00</created-at>
      <creator-id type="integer">21652</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">988</number>
      <permalink>is-postgres-pr-driver-no-longer-supported-problem-with-new-transaction_active-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>is postgres-pr driver no longer supported? (problem with new transaction_active? method)</title>
      <updated-at type="datetime">2008-09-18T04:20:33+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">3</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>azimux</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/988</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Indeed, although ruby-pg doesn't build on windows

ruby-postgres does work on windows but requires some .dll's to be copied around to use it with &gt; 8.0  It also seems it hasn't had any changes since January

The thing that was nice about postgres-pr is it was platform independent.  It's a shame postgres-pr went inactive.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Indeed, although ruby-pg doesn't build on windows&lt;/p&gt;
&lt;p&gt;ruby-postgres does work on windows but requires some .dll's to
be copied around to use it with &amp;gt; 8.0 It also seems it hasn't
had any changes since January&lt;/p&gt;
&lt;p&gt;The thing that was nice about postgres-pr is it was platform
independent. It's a shame postgres-pr went inactive.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-18T06:30:54+01:00</created-at>
      <creator-id type="integer">21652</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">988</number>
      <permalink>is-postgres-pr-driver-no-longer-supported-problem-with-new-transaction_active-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>is postgres-pr driver no longer supported? (problem with new transaction_active? method)</title>
      <updated-at type="datetime">2008-09-18T06:30:55+01:00</updated-at>
      <user-id type="integer">21652</user-id>
      <version type="integer">4</version>
      <user-name>azimux</user-name>
      <creator-name>azimux</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/988</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
