<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-04-09T23:41:49+01:00</created-at>
  <creator-id type="integer">24538</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4655</number>
  <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
  <title>add _delete key for accepts_nested_attributes_for ?</title>
  <updated-at type="datetime">2011-04-09T23:41:49+01:00</updated-at>
  <user-id type="integer">33030</user-id>
  <version type="integer">15</version>
  <user-name>Kane</user-name>
  <creator-name>Jan Xie</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
  <priority-name nil="true"></priority-name>
  <original-body>There is a **_destroy** key for nested model now, which indicates to **destroy** the associated object when set to true. It would be great if rails can also add a **_delete** key, which will **delete** the object when set to true. (The difference between **destroy** and **delete**, according to rails documentation: associated_collection#destroy will destroy the endpoint, while associated_collection#delete will destroy the join model only.)

e.g.
@@@
class Post
  has_many :post_tags
  has_many :tags, :through =&gt; :post_tags
  accept_nested_attributes_for :tags, :allow_destroy =&gt; true
end
@@@

In this case, most people want to unlink post with tags only, instead of destroying tags (I guess).</original-body>
  <latest-body>There is a **_destroy** key for nested model now, which indicates to **destroy** the associated object when set to true. It would be great if rails can also add a **_delete** key, which will **delete** the object when set to true. (The difference between **destroy** and **delete**, according to rails documentation: associated_collection#destroy will destroy the endpoint, while associated_collection#delete will destroy the join model only.)

e.g.
@@@
class Post
  has_many :post_tags
  has_many :tags, :through =&gt; :post_tags
  accept_nested_attributes_for :tags, :allow_destroy =&gt; true
end
@@@

In this case, most people want to unlink post with tags only, instead of destroying tags (I guess).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;There is a &lt;strong&gt;_destroy&lt;/strong&gt; key for nested model now,
which indicates to &lt;strong&gt;destroy&lt;/strong&gt; the associated object
when set to true. It would be great if rails can also add a
&lt;strong&gt;_delete&lt;/strong&gt; key, which will &lt;strong&gt;delete&lt;/strong&gt;
the object when set to true. (The difference between
&lt;strong&gt;destroy&lt;/strong&gt; and &lt;strong&gt;delete&lt;/strong&gt;, according to
rails documentation: associated_collection#destroy will destroy the
endpoint, while associated_collection#delete will destroy the join
model only.)&lt;/p&gt;
&lt;p&gt;e.g.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Post
  has_many :post_tags
  has_many :tags, :through =&amp;gt; :post_tags
  accept_nested_attributes_for :tags, :allow_destroy =&amp;gt; true
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In this case, most people want to unlink post with tags only,
instead of destroying tags (I guess).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is a **_destroy** key for nested model now, which indicates to **destroy** the associated object when set to true. It would be great if rails can also add a **_delete** key, which will **delete** the object when set to true. (The difference between **destroy** and **delete**, according to rails documentation: associated_collection#destroy will destroy the endpoint, while associated_collection#delete will destroy the join model only.)

e.g.
@@@
class Post
  has_many :post_tags
  has_many :tags, :through =&gt; :post_tags
  accept_nested_attributes_for :tags, :allow_destroy =&gt; true
end
@@@

In this case, most people want to unlink post with tags only, instead of destroying tags (I guess).</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is a &lt;strong&gt;_destroy&lt;/strong&gt; key for nested model now,
which indicates to &lt;strong&gt;destroy&lt;/strong&gt; the associated object
when set to true. It would be great if rails can also add a
&lt;strong&gt;_delete&lt;/strong&gt; key, which will &lt;strong&gt;delete&lt;/strong&gt;
the object when set to true. (The difference between
&lt;strong&gt;destroy&lt;/strong&gt; and &lt;strong&gt;delete&lt;/strong&gt;, according to
rails documentation: associated_collection#destroy will destroy the
endpoint, while associated_collection#delete will destroy the join
model only.)&lt;/p&gt;
&lt;p&gt;e.g.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Post
  has_many :post_tags
  has_many :tags, :through =&amp;gt; :post_tags
  accept_nested_attributes_for :tags, :allow_destroy =&amp;gt; true
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In this case, most people want to unlink post with tags only,
instead of destroying tags (I guess).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-20T04:19:05+01:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2010-05-20T04:21:00+01:00</updated-at>
      <user-id type="integer">24538</user-id>
      <version type="integer">1</version>
      <user-name>Jan Xie</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I wouldn't be sure there's the need for two different attributes. The behavior of the nested model depends of the relation configuration.
Here, you don't want the tag to be deleted when it's relation with the post is.

Then you set your relation with a `:dependent` option to delete.

    has_many :tags, :through =&gt; :post_tags, :dependent =&gt; :delete

I guess every time you want to delete a nested relation, you want to do it the same way.
Or at least if at some point, you want to delete the tag, it's not an interface implementation but a logic one. So it should remain in the activerecord's relation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I wouldn't be sure there's the need for two different
attributes. The behavior of the nested model depends of the
relation configuration.&lt;br&gt;
Here, you don't want the tag to be deleted when it's relation with
the post is.&lt;/p&gt;
&lt;p&gt;Then you set your relation with a &lt;code&gt;:dependent&lt;/code&gt; option
to delete.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;has_many :tags, :through =&amp;gt; :post_tags, :dependent =&amp;gt; :delete&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I guess every time you want to delete a nested relation, you
want to do it the same way.&lt;br&gt;
Or at least if at some point, you want to delete the tag, it's not
an interface implementation but a logic one. So it should remain in
the activerecord's relation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-20T08:25:45+01:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2010-05-20T08:25:47+01:00</updated-at>
      <user-id type="integer">39092</user-id>
      <version type="integer">2</version>
      <user-name>Damien MATHIEU</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I tried this way (and many other ways) of using :dependent, I think it doesn't work (I'm using rails on github). And in rails code it says:

@@@
#   *Warning:* This option is ignored when used with &lt;tt&gt;:through&lt;/tt&gt; option.
@@@

ref: http://github.com/rails/rails/blob/master/activerecord/lib/active_record/associations.rb#L845

If this does work, then yes my proposal is needless.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I tried this way (and many other ways) of using :dependent, I
think it doesn't work (I'm using rails on github). And in rails
code it says:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#   *Warning:* This option is ignored when used with &amp;lt;tt&amp;gt;:through&amp;lt;/tt&amp;gt; option.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;ref: &lt;a href=
&quot;http://github.com/rails/rails/blob/master/activerecord/lib/active_record/associations.rb#L845&quot;&gt;
http://github.com/rails/rails/blob/master/activerecord/lib/active_r...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If this does work, then yes my proposal is needless.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-20T10:43:27+01:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2010-05-20T10:43:29+01:00</updated-at>
      <user-id type="integer">24538</user-id>
      <version type="integer">3</version>
      <user-name>Jan Xie</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-21T00:43:16+01:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2010-05-21T00:43:25+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">4</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ng unique &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/36038-replica-3064.html&quot;&gt;36038 replica&lt;/a&gt;&lt;/b&gt; ropes the vend but &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-oris-watches.html&quot;&gt;quality replica Oris&lt;/a&gt;&lt;/b&gt; if does not appeaal &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/wj1116-ba0570-replica-2787.html&quot;&gt;WJ1116.BA0570 replica&lt;/a&gt;&lt;/b&gt; to her style; right &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; consign symbolize a wilderness &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/coutura-replica.html&quot;&gt;cheap Coutura replica watches&lt;/a&gt;&lt;/b&gt; of time. Ebay is &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/naut05-replica-1501.html&quot;&gt;Technomarine NAUT05 Replica&lt;/a&gt;&lt;/b&gt; in fact a woorld &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-franck-muller-watches.html&quot;&gt;Replica Franck Muller Watches&lt;/a&gt;&lt;/b&gt; of it's acquiesce salt &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-louis-vuitton-watches.html&quot;&gt;Replica Louis Vuitton&lt;/a&gt;&lt;/b&gt; away a comprehend of &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/t33-7-688-81-replica-1307.html&quot;&gt;T33.7.688.81 replica&lt;/a&gt;&lt;/b&gt; rues further policies you &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; commitment push on by considering a membre or you entrust acquisition your account suspended or</body>
      <body-html>&lt;div&gt;&lt;p&gt;ng unique &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/36038-replica-3064.html&quot;&gt;36038
replica&lt;/a&gt;&lt;/b&gt; ropes the vend but &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-oris-watches.html&quot;&gt;
quality replica Oris&lt;/a&gt;&lt;/b&gt; if does not appeaal &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/wj1116-ba0570-replica-2787.html&quot;&gt;
WJ1116.BA0570 replica&lt;/a&gt;&lt;/b&gt; to her style; right &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; consign
symbolize a wilderness &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/coutura-replica.html&quot;&gt;cheap
Coutura replica watches&lt;/a&gt;&lt;/b&gt; of time. Ebay is &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/naut05-replica-1501.html&quot;&gt;Technomarine
NAUT05 Replica&lt;/a&gt;&lt;/b&gt; in fact a woorld &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-franck-muller-watches.html&quot;&gt;
Replica Franck Muller Watches&lt;/a&gt;&lt;/b&gt; of it's acquiesce salt
&lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-louis-vuitton-watches.html&quot;&gt;
Replica Louis Vuitton&lt;/a&gt;&lt;/b&gt; away a comprehend of &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/t33-7-688-81-replica-1307.html&quot;&gt;
T33.7.688.81 replica&lt;/a&gt;&lt;/b&gt; rues further policies you &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; commitment
push on by considering a membre or you entrust acquisition your
account suspended or&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-20T07:43:28+01:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2010-07-20T08:08:04+01:00</updated-at>
      <user-id type="integer">107927</user-id>
      <version type="integer">5</version>
      <user-name>a4490302sc</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-08T01:06:46+00:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2010-11-08T23:12:01+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">6</version>
      <user-name>jim123456</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-09T00:31:48+00:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2011-02-09T00:33:42+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-09T00:31:49+00:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2011-02-09T00:33:35+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T07:24:03+00:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2011-02-17T07:38:06+00:00</updated-at>
      <user-id type="integer">137451</user-id>
      <version type="integer">9</version>
      <user-name>fghgghjg</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:02:19+00:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2011-03-26T02:15:55+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">10</version>
      <user-name>bingbing</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This request seems to have sense to me, since I agree with you there is no simple way (i.e. without using before_save hooks) to just delete the relationship without destroying the object. I would like to have the ticket re-opened or to see some more explanation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This request seems to have sense to me, since I agree with you
there is no simple way (i.e. without using before_save hooks) to
just delete the relationship without destroying the object. I would
like to have the ticket re-opened or to see some more
explanation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-05T19:32:56+01:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2011-04-05T19:33:05+01:00</updated-at>
      <user-id type="integer">144390</user-id>
      <version type="integer">11</version>
      <user-name>alberto</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>P.S. the same is true if you have an HABTM relation instead of an has_many :through.</body>
      <body-html>&lt;div&gt;&lt;p&gt;P.S. the same is true if you have an HABTM relation instead of
an has_many :through.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-05T19:34:53+01:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2011-04-05T19:35:03+01:00</updated-at>
      <user-id type="integer">144390</user-id>
      <version type="integer">12</version>
      <user-name>alberto</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>alberto
&gt; This request seems to have sense to me, since I agree with you there is no simple way

This request does not make any sense to me.
it does what it says, it destroys the tag.

the so call &quot;no simple way&quot;

@@@
 some_post.tags.clear
@@@

you may want to simply stick to associations instead of nested attributes for your use case.
or simply use has_and_belongs_to_many if your join model needs no logic.

Jan Xie
&gt; In this case, most people want to unlink post with tags only, instead of destroying tags (I guess).

if you want this you may simply want to use the shown method.
Also you probably want to define dependent destroy for the join model, so you dont leave orphans behind if you destroy a tag or a post.

@@@
class Post
  has_many :post_tags, :dependent =&gt; :destroy
end

class Tag
  has_many :post_tags, :dependent =&gt; :destroy
end
@@@

please set this to invalid.</body>
      <body-html>&lt;div&gt;&lt;p&gt;alberto&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This request seems to have sense to me, since I agree with you
there is no simple way&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This request does not make any sense to me.&lt;br&gt;
it does what it says, it destroys the tag.&lt;/p&gt;
&lt;p&gt;the so call &quot;no simple way&quot;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; some_post.tags.clear&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;you may want to simply stick to associations instead of nested
attributes for your use case.&lt;br&gt;
or simply use has_and_belongs_to_many if your join model needs no
logic.&lt;/p&gt;
&lt;p&gt;Jan Xie&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case, most people want to unlink post with tags only,
instead of destroying tags (I guess).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;if you want this you may simply want to use the shown
method.&lt;br&gt;
Also you probably want to define dependent destroy for the join
model, so you dont leave orphans behind if you destroy a tag or a
post.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Post
  has_many :post_tags, :dependent =&amp;gt; :destroy
end

class Tag
  has_many :post_tags, :dependent =&amp;gt; :destroy
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;please set this to invalid.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-06T00:30:39+01:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2011-04-06T00:30:52+01:00</updated-at>
      <user-id type="integer">33030</user-id>
      <version type="integer">13</version>
      <user-name>Kane</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree with almost everything. The only arguable thing is:

&gt; you may want to simply stick to associations instead of nested attributes for your use case.

If this is the philosophy behind nested attributes (i.e. &#171;you simply CAN'T do this with nested attributes, manage the associations by your self, you moron!&#187;) than it's ok. But I don't see any reason why one shouldn't want this non-destructive behavior while still using nested attributes.

Btw, my &quot;no simple way&quot; referred to the fact that standard forms (e.g. nested_form_for) rely on the product.tags_attributes array. If you want to use them (and they're great to keep your views clean) and NOT destroy associated objects, you have to do something like

@@@ ruby
before_safe god_save_the_tags!
private
  def god_save_the_tags!
    tags.select(&amp;:marked_for_detruction?).each do |tag|
      tag.reload # Notice that there is no &quot;unmark_for_destruction&quot; right now,
                 # but I'm pretty sure I saw a related ticket somewhere here
      tags.delete(tag)
    end
  end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree with almost everything. The only arguable thing is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;you may want to simply stick to associations instead of nested
attributes for your use case.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If this is the philosophy behind nested attributes (i.e.
&amp;laquo;you simply CAN'T do this with nested attributes, manage the
associations by your self, you moron!&amp;raquo;) than it's ok. But I
don't see any reason why one shouldn't want this non-destructive
behavior while still using nested attributes.&lt;/p&gt;
&lt;p&gt;Btw, my &quot;no simple way&quot; referred to the fact that standard forms
(e.g. nested_form_for) rely on the product.tags_attributes array.
If you want to use them (and they're great to keep your views
clean) and NOT destroy associated objects, you have to do something
like&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;before_safe god_save_the_tags!
private
  def god_save_the_tags!
    tags.select(&amp;amp;:marked_for_detruction?).each do |tag|
      tag.reload # Notice that there is no &quot;unmark_for_destruction&quot; right now,
                 # but I'm pretty sure I saw a related ticket somewhere here
      tags.delete(tag)
    end
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-06T00:44:35+01:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2011-04-06T00:44:47+01:00</updated-at>
      <user-id type="integer">144390</user-id>
      <version type="integer">14</version>
      <user-name>alberto</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I see. 

It would be nive if :_destroy and :_delete would behave exactly as calling the corresponding methods on the association.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I see.&lt;/p&gt;
&lt;p&gt;It would be nive if :&lt;em&gt;destroy and :&lt;/em&gt;delete would behave
exactly as calling the corresponding methods on the
association.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-06T16:26:44+01:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2011-04-06T16:26:56+01:00</updated-at>
      <user-id type="integer">33030</user-id>
      <version type="integer">15</version>
      <user-name>Kane</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Our online shop can meet all the demands.It is the best source of buying Cheap 
&lt;a href=&quot;http://www.jerseysforsales.com&quot;&gt;NHL jerseys&lt;/a&gt; where you will come across unbelievable surprise. We have a big variety of jersey on sale in different styles and colors.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Our online shop can meet all the demands.It is the best source
of buying Cheap&lt;br&gt;
&lt;a href=&quot;http://www.jerseysforsales.com&quot;&gt;NHL jerseys&lt;/a&gt; where you
will come across unbelievable surprise. We have a big variety of
jersey on sale in different styles and colors.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-09T03:22:43+01:00</created-at>
      <creator-id type="integer">24538</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4655</number>
      <permalink>add-_delete-key-for-accepts_nested_attributes_for</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>delete destroy has_many_through &quot;nested attributes&quot;</tag>
      <title>add _delete key for accepts_nested_attributes_for ?</title>
      <updated-at type="datetime">2011-04-09T23:41:49+01:00</updated-at>
      <user-id type="integer">144925</user-id>
      <version type="integer">16</version>
      <user-name>jerseysforsales</user-name>
      <creator-name>Jan Xie</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4655</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
