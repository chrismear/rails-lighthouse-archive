<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-11T01:55:19+00:00</created-at>
  <creator-id type="integer">10460</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1935</number>
  <permalink>arraywrap-handling-of-association-collections</permalink>
  <priority type="integer">1196</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>2.3 active_support array</tag>
  <title>Array.wrap handling of association collections</title>
  <updated-at type="datetime">2009-02-11T02:03:44+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">2</version>
  <user-name>Repository</user-name>
  <creator-name>Will Bryant</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1935</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>doesn't DWIM with associations:

&gt;&gt; Array.wrap(Icp.find(16).registers)
=&gt; [[#&lt;Register ...&gt;]]

&gt;&gt; Array.wrap(DisputedRead.unresolved)
=&gt; [[#&lt;DisputedRead ...&gt;, #&lt;DisputedRead ...&gt;]]

ie. array-like collections and scopes aren't getting treated as arrays
and are being wrapped again.

The attached patch checks if the given object responds to to_ary, and if so returns that.</original-body>
  <latest-body>doesn't DWIM with associations:

&gt;&gt; Array.wrap(Icp.find(16).registers)
=&gt; [[#&lt;Register ...&gt;]]

&gt;&gt; Array.wrap(DisputedRead.unresolved)
=&gt; [[#&lt;DisputedRead ...&gt;, #&lt;DisputedRead ...&gt;]]

ie. array-like collections and scopes aren't getting treated as arrays
and are being wrapped again.

The attached patch checks if the given object responds to to_ary, and if so returns that.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;doesn't DWIM with associations:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Array.wrap(Icp.find(16).registers) =&amp;gt; [[#]]&lt;/p&gt;
&lt;p&gt;Array.wrap(DisputedRead.unresolved) =&amp;gt; [[#, #]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;ie. array-like collections and scopes aren't getting treated as
arrays and are being wrapped again.&lt;/p&gt;
&lt;p&gt;The attached patch checks if the given object responds to
to_ary, and if so returns that.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Array.wrap doesn't DWIM with associations:

&gt;&gt; Array.wrap(Icp.find(16).registers)
=&gt; [[#&amp;lt;Register ...&amp;gt;]]

&gt;&gt; Array.wrap(DisputedRead.unresolved)
=&gt; [[#&amp;lt;DisputedRead ...&amp;gt;, #&amp;lt;DisputedRead ...&amp;gt;]]

ie. array-like collections and scopes aren't getting treated as arrays
and are being wrapped again.

The attached patch checks if the given object responds to to_ary, and if so returns that.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Array.wrap doesn't DWIM with associations:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Array.wrap(Icp.find(16).registers) =&amp;gt; [[#&amp;lt;Register
...&amp;gt;]]&lt;/p&gt;
&lt;p&gt;Array.wrap(DisputedRead.unresolved) =&amp;gt; [[#&amp;lt;DisputedRead
...&amp;gt;, #&amp;lt;DisputedRead ...&amp;gt;]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;ie. array-like collections and scopes aren't getting treated as
arrays and are being wrapped again.&lt;/p&gt;
&lt;p&gt;The attached patch checks if the given object responds to
to_ary, and if so returns that.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-11T01:55:19+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1935</number>
      <permalink>arraywrap-handling-of-association-collections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3 active_support array</tag>
      <title>Array.wrap handling of association collections</title>
      <updated-at type="datetime">2009-02-11T01:57:52+00:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">1</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1935</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [1a2a71333f197e98d1cd7fe380d613cbada4446b]) Array#wrap should use #to_ary so association collections and named scopes are not re-wrapped

[#1935 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/1a2a71333f197e98d1cd7fe380d613cbada4446b</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [1a2a71333f197e98d1cd7fe380d613cbada4446b]) Array#wrap
should use #to_ary so association collections and named scopes are
not re-wrapped&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/1935&quot; title=&quot;Ticket #1935&quot;&gt;#1935&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/1a2a71333f197e98d1cd7fe380d613cbada4446b&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-11T02:03:43+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1935</number>
      <permalink>arraywrap-handling-of-association-collections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.3 active_support array</tag>
      <title>Array.wrap handling of association collections</title>
      <updated-at type="datetime">2009-02-11T02:03:44+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>Will Bryant</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1935</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>2ebdccf114abdc6d56c65bcc2bba94e8efdf809b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-02-11T01:55:19+00:00</created-at>
      <filename>0001-Array-wrap-should-use-to_ary-so-association-collect.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">87429</id>
      <size type="integer">2265</size>
      <uploader-id type="integer">10460</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/87429/0001-Array-wrap-should-use-to_ary-so-association-collect.patch</url>
    </attachment>
  </attachments>
</ticket>
