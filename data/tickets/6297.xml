<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-18T08:52:34+00:00</created-at>
  <creator-id type="integer">65953</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6297</number>
  <permalink>patch-default-scopes-cant-be-merged-with-something-that-responds_to-call</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>active_record bug default_scope patch &quot;rails edge&quot;</tag>
  <title>[PATCH] Default scopes can't be merged with something that responds_to call </title>
  <updated-at type="datetime">2011-04-26T01:00:39+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">8</version>
  <user-name>rails</user-name>
  <creator-name>2kan</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6297</url>
  <priority-name nil="true"></priority-name>
  <original-body>When we have something like this:

@@@
class A &lt; ActiveRecord::Base
 default_scope where('salary &gt;= 10000')
 default_scope lambda { order('salary DESC') }
end
@@@

or 

@@@
class A &lt; ActiveRecord::Base
 default_scope lambda { order('salary DESC') }
 default_scope where('salary &gt;= 10000')
end
@@@

an internal exception will be thrown:

@@@
undefined method `includes_values' for #&lt;Proc:0x108af63c0&gt;
@@@

or 

@@@
undefined method `merge' for #&lt;Proc:0x108af8058&gt;
@@@

I think that we can't really merge here:
1) we can't merge them because it is wrong to call default_scope argument when default_scope is defined (as we can't for scopes, for example there could be Time.now) and should call when we apply default_scope.
2) we can't merge them when we apply default_scope because when we have 

@@@
default_scope lambda {...}
default_scope where(...)
@@@

when 'where' executes it is executes through the 'scoped' method where we merge relation with 'current_scoped_methods' which now is the first default_scope. But we should not execute first default_scope and merge here because we are working with the default_scope argument. This mean that we can't separate situations where we are defining the default_scope and when we are applying the default_scope.

So I think we should raise an exception here.</original-body>
  <latest-body>When we have something like this:

@@@
class A &lt; ActiveRecord::Base
 default_scope where('salary &gt;= 10000')
 default_scope lambda { order('salary DESC') }
end
@@@

or 

@@@
class A &lt; ActiveRecord::Base
 default_scope lambda { order('salary DESC') }
 default_scope where('salary &gt;= 10000')
end
@@@

an internal exception will be thrown:

@@@
undefined method `includes_values' for #&lt;Proc:0x108af63c0&gt;
@@@

or 

@@@
undefined method `merge' for #&lt;Proc:0x108af8058&gt;
@@@

I think that we can't really merge here:
1) we can't merge them because it is wrong to call default_scope argument when default_scope is defined (as we can't for scopes, for example there could be Time.now) and should call when we apply default_scope.
2) we can't merge them when we apply default_scope because when we have 

@@@
default_scope lambda {...}
default_scope where(...)
@@@

when 'where' executes it is executes through the 'scoped' method where we merge relation with 'current_scoped_methods' which now is the first default_scope. But we should not execute first default_scope and merge here because we are working with the default_scope argument. This mean that we can't separate situations where we are defining the default_scope and when we are applying the default_scope.

So I think we should raise an exception here.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When we have something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class A &amp;lt; ActiveRecord::Base
 default_scope where('salary &amp;gt;= 10000')
 default_scope lambda { order('salary DESC') }
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class A &amp;lt; ActiveRecord::Base
 default_scope lambda { order('salary DESC') }
 default_scope where('salary &amp;gt;= 10000')
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;an internal exception will be thrown:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `includes_values' for #&amp;lt;Proc:0x108af63c0&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `merge' for #&amp;lt;Proc:0x108af8058&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think that we can't really merge here:&lt;br&gt;
1) we can't merge them because it is wrong to call default_scope
argument when default_scope is defined (as we can't for scopes, for
example there could be Time.now) and should call when we apply
default_scope.&lt;br&gt;
2) we can't merge them when we apply default_scope because when we
have&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;default_scope lambda {...}
default_scope where(...)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;when 'where' executes it is executes through the 'scoped' method
where we merge relation with 'current_scoped_methods' which now is
the first default_scope. But we should not execute first
default_scope and merge here because we are working with the
default_scope argument. This mean that we can't separate situations
where we are defining the default_scope and when we are applying
the default_scope.&lt;/p&gt;
&lt;p&gt;So I think we should raise an exception here.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When we have something like this:

@@@
class A &lt; ActiveRecord::Base
 default_scope where('salary &gt;= 10000')
 default_scope lambda { order('salary DESC') }
end
@@@

or 

@@@
class A &lt; ActiveRecord::Base
 default_scope lambda { order('salary DESC') }
 default_scope where('salary &gt;= 10000')
end
@@@

an internal exception will be thrown:

@@@
undefined method `includes_values' for #&lt;Proc:0x108af63c0&gt;
@@@

or 

@@@
undefined method `merge' for #&lt;Proc:0x108af8058&gt;
@@@

I think that we can't really merge here:
1) we can't merge them because it is wrong to call default_scope argument when default_scope is defined (as we can't for scopes, for example there could be Time.now) and should call when we apply default_scope.
2) we can't merge them when we apply default_scope because when we have 

@@@
default_scope lambda {...}
default_scope where(...)
@@@

when 'where' executes it is executes through the 'scoped' method where we merge relation with 'current_scoped_methods' which now is the first default_scope. But we should not execute first default_scope and merge here because we are working with the default_scope argument. This mean that we can't separate situations where we are defining the default_scope and when we are applying the default_scope.

So I think we should raise an exception here.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When we have something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class A &amp;lt; ActiveRecord::Base
 default_scope where('salary &amp;gt;= 10000')
 default_scope lambda { order('salary DESC') }
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class A &amp;lt; ActiveRecord::Base
 default_scope lambda { order('salary DESC') }
 default_scope where('salary &amp;gt;= 10000')
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;an internal exception will be thrown:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `includes_values' for #&amp;lt;Proc:0x108af63c0&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `merge' for #&amp;lt;Proc:0x108af8058&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think that we can't really merge here:&lt;br&gt;
1) we can't merge them because it is wrong to call default_scope
argument when default_scope is defined (as we can't for scopes, for
example there could be Time.now) and should call when we apply
default_scope.&lt;br&gt;
2) we can't merge them when we apply default_scope because when we
have&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;default_scope lambda {...}
default_scope where(...)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;when 'where' executes it is executes through the 'scoped' method
where we merge relation with 'current_scoped_methods' which now is
the first default_scope. But we should not execute first
default_scope and merge here because we are working with the
default_scope argument. This mean that we can't separate situations
where we are defining the default_scope and when we are applying
the default_scope.&lt;/p&gt;
&lt;p&gt;So I think we should raise an exception here.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-17T01:13:51+00:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6297</number>
      <permalink>patch-default-scopes-cant-be-merged-with-something-that-responds_to-call</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record default_scope &quot;rails edge&quot;</tag>
      <title>[PATCH] Default scopes can't be merged with something that responds_to call </title>
      <updated-at type="datetime">2011-01-17T01:13:56+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">1</version>
      <user-name>2kan</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6297</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here is my patch (with test) that raises exception in such situations.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is my patch (with test) that raises exception in such
situations.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-17T01:21:04+00:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_record default_scope &quot;rails edge&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6297</number>
      <permalink>patch-default-scopes-cant-be-merged-with-something-that-responds_to-call</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record bug default_scope patch &quot;rails edge&quot;</tag>
      <title>[PATCH] Default scopes can't be merged with something that responds_to call </title>
      <updated-at type="datetime">2011-01-17T01:21:09+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">2</version>
      <user-name>2kan</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6297</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Although if it is appropriate dress is ivory color &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-mermaid-wedding-dresses-7&quot;&gt;Wholesale Mermaid Wedding Dresses&lt;/a&gt;&lt;/b&gt; wholesale? Put on a bridal gown in ivory can be compared to wearing jewelry. Due to the misinterpretation of clothes, you can seem really old-liners. You can also choose if you have black skin cream. In addition, to avoid this color if you have a connotation quite white. In addition, there are many different shades of &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-off-the-shoulder-wedding-dresses-48&quot;&gt;Off the shoulder Wedding Dresses&lt;/a&gt;&lt;/b&gt;to yellow color intensity the higher the score for you for pickup.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Although if it is appropriate dress is ivory color &lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-mermaid-wedding-dresses-7&quot;&gt;Wholesale
Mermaid Wedding Dresses&lt;/a&gt;&lt;/b&gt; wholesale? Put on a bridal gown in
ivory can be compared to wearing jewelry. Due to the
misinterpretation of clothes, you can seem really old-liners. You
can also choose if you have black skin cream. In addition, to avoid
this color if you have a connotation quite white. In addition,
there are many different shades of &lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-off-the-shoulder-wedding-dresses-48&quot;&gt;
Off the shoulder Wedding Dresses&lt;/a&gt;&lt;/b&gt;to yellow color intensity
the higher the score for you for pickup.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-18T08:45:18+00:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6297</number>
      <permalink>patch-default-scopes-cant-be-merged-with-something-that-responds_to-call</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record bug default_scope patch &quot;rails edge&quot;</tag>
      <title>[PATCH] Default scopes can't be merged with something that responds_to call </title>
      <updated-at type="datetime">2011-01-18T08:52:34+00:00</updated-at>
      <user-id type="integer">133048</user-id>
      <version type="integer">3</version>
      <user-name>mary01</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6297</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>There is an open ticket to enable proc handling for default scope. It contains a patch that enables lambda default scopes instead of raising an exception on receiving one.

https://rails.lighthouseapp.com/projects/8994/tickets/1812-default_scope-cant-take-procs</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is an open ticket to enable proc handling for default
scope. It contains a patch that enables lambda default scopes
instead of raising an exception on receiving one.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/1812-default_scope-cant-take-procs&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/1812-default_...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-25T13:39:01+00:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6297</number>
      <permalink>patch-default-scopes-cant-be-merged-with-something-that-responds_to-call</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record bug default_scope patch &quot;rails edge&quot;</tag>
      <title>[PATCH] Default scopes can't be merged with something that responds_to call </title>
      <updated-at type="datetime">2011-01-25T13:39:10+00:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">4</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6297</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Adam, Looks like are familiar with those ticket and patches. What are the current status? Are they working for edge rails? I mean that as I see you can define default_scope with lambda now and it works correct. But what about merging two default_scopes where one uses lambda and one hash or AR::Relation? Does it work correct and lambda evaluates when we apply default_scopes but not when we are define them?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Adam, Looks like are familiar with those ticket and patches.
What are the current status? Are they working for edge rails? I
mean that as I see you can define default_scope with lambda now and
it works correct. But what about merging two default_scopes where
one uses lambda and one hash or AR::Relation? Does it work correct
and lambda evaluates when we apply default_scopes but not when we
are define them?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-25T14:02:16+00:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6297</number>
      <permalink>patch-default-scopes-cant-be-merged-with-something-that-responds_to-call</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record bug default_scope patch &quot;rails edge&quot;</tag>
      <title>[PATCH] Default scopes can't be merged with something that responds_to call </title>
      <updated-at type="datetime">2011-01-25T14:02:25+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">5</version>
      <user-name>2kan</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6297</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It's currently waiting to be reviewed by Aaron and hopefully merged into edge for a release in 3.1. And yes - that code allows one to call default_scope multiple times and merges finders and lambdas calling the latter at the time of database fetch rather than default_scope definition.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's currently waiting to be reviewed by Aaron and hopefully
merged into edge for a release in 3.1. And yes - that code allows
one to call default_scope multiple times and merges finders and
lambdas calling the latter at the time of database fetch rather
than default_scope definition.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-25T14:07:00+00:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6297</number>
      <permalink>patch-default-scopes-cant-be-merged-with-something-that-responds_to-call</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record bug default_scope patch &quot;rails edge&quot;</tag>
      <title>[PATCH] Default scopes can't be merged with something that responds_to call </title>
      <updated-at type="datetime">2011-01-25T14:07:10+00:00</updated-at>
      <user-id type="integer">122134</user-id>
      <version type="integer">6</version>
      <user-name>Adam Wr&#243;bel</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6297</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-26T01:00:07+01:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6297</number>
      <permalink>patch-default-scopes-cant-be-merged-with-something-that-responds_to-call</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record bug default_scope patch &quot;rails edge&quot;</tag>
      <title>[PATCH] Default scopes can't be merged with something that responds_to call </title>
      <updated-at type="datetime">2011-04-26T01:00:30+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">7</version>
      <user-name>rails</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6297</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-26T01:00:07+01:00</created-at>
      <creator-id type="integer">65953</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6297</number>
      <permalink>patch-default-scopes-cant-be-merged-with-something-that-responds_to-call</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>active_record bug default_scope patch &quot;rails edge&quot;</tag>
      <title>[PATCH] Default scopes can't be merged with something that responds_to call </title>
      <updated-at type="datetime">2011-04-26T01:00:39+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">8</version>
      <user-name>rails</user-name>
      <creator-name>2kan</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6297</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>fa0d96370e3934e95beed33db7351bf30fc4f41e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-01-17T01:21:04+00:00</created-at>
      <filename>6297-fix-against-rails-edge.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">863402</id>
      <size type="integer">2293</size>
      <uploader-id type="integer">65953</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/863402/6297-fix-against-rails-edge.diff</url>
    </attachment>
  </attachments>
</ticket>
