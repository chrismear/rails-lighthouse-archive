<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-16T17:49:42+01:00</created-at>
  <creator-id type="integer">264</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">208</number>
  <permalink>pqserverversion-not-supported-by-this-client-version</permalink>
  <priority type="integer">13243</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activerecord bug connection postgresql</tag>
  <title>PQserverVersion not supported by this client version</title>
  <updated-at type="datetime">2008-05-16T19:37:38+01:00</updated-at>
  <user-id type="integer">1</user-id>
  <version type="integer">4</version>
  <user-name>Rick</user-name>
  <creator-name>Robby Russell</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/208</url>
  <priority-name nil="true"></priority-name>
  <original-body>Just upgraded to edge Rails and started to see this. It looks like the connection responds to server_version but libpq doesn't on my machine. Saw a few mentions of this on the old Rails Trac as well.

** Execute db:abort_if_pending_migrations
rake aborted!
PQserverVersion not supported by this client version.

vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:795:in `server_version'</original-body>
  <latest-body>Just upgraded to edge Rails and started to see this. It looks like the connection responds to server_version but libpq doesn't on my machine. Saw a few mentions of this on the old Rails Trac as well.

** Execute db:abort_if_pending_migrations
rake aborted!
PQserverVersion not supported by this client version.

vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:795:in `server_version'</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Just upgraded to edge Rails and started to see this. It looks like the connection responds to server_version but libpq doesn't on my machine. Saw a few mentions of this on the old Rails Trac as well.
&lt;/p&gt;&lt;p&gt;
** Execute db:abort_if_pending_migrations
&lt;/p&gt;&lt;p&gt;
rake aborted!
&lt;/p&gt;&lt;p&gt;
PQserverVersion not supported by this client version.
&lt;/p&gt;&lt;p&gt;
vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:795:in `server_version'
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Just upgraded to edge Rails and started to see this. It looks like the connection responds to server_version but libpq doesn't on my machine. Saw a few mentions of this on the old Rails Trac as well.

** Execute db:abort_if_pending_migrations
rake aborted!
PQserverVersion not supported by this client version.

vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:795:in `server_version'</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Just upgraded to edge Rails and started to see this. It looks like the connection responds to server_version but libpq doesn't on my machine. Saw a few mentions of this on the old Rails Trac as well.
&lt;/p&gt;&lt;p&gt;
** Execute db:abort_if_pending_migrations
&lt;/p&gt;&lt;p&gt;
rake aborted!
&lt;/p&gt;&lt;p&gt;
PQserverVersion not supported by this client version.
&lt;/p&gt;&lt;p&gt;
vendor/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:795:in `server_version'
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-16T17:49:42+01:00</created-at>
      <creator-id type="integer">264</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">208</number>
      <permalink>pqserverversion-not-supported-by-this-client-version</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>PQserverVersion not supported by this client version</title>
      <updated-at type="datetime">2008-05-16T17:49:42+01:00</updated-at>
      <user-id type="integer">264</user-id>
      <version type="integer">1</version>
      <user-name>Robby Russell</user-name>
      <creator-name>Robby Russell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/208</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm running PostgreSQL 8.2.6 via MacPorts on Leopard.

Gem: postgres (0.7.9.2008.01.09)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm running PostgreSQL 8.2.6 via MacPorts on Leopard.
&lt;/p&gt;&lt;p&gt;
Gem: postgres (0.7.9.2008.01.09)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-16T18:01:49+01:00</created-at>
      <creator-id type="integer">264</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">208</number>
      <permalink>pqserverversion-not-supported-by-this-client-version</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>PQserverVersion not supported by this client version</title>
      <updated-at type="datetime">2008-05-16T18:01:49+01:00</updated-at>
      <user-id type="integer">264</user-id>
      <version type="integer">2</version>
      <user-name>Robby Russell</user-name>
      <creator-name>Robby Russell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/208</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The error you're seeing should only exist in ruby-pg and not the postgres gem. The error is only compiled into ruby-pg if it determines your postgresql version to be older than 8.0. So you may want to make sure that you don't compile ruby-pg against an old version of libpq or just that you recompile ruby-pg.

Note that if you have both postgres and ruby-pg gems rails will prefer ruby-pg, I believe ruby-pg is the more actively developed one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The error you're seeing should only exist in ruby-pg and not the postgres gem. The error is only compiled into ruby-pg if it determines your postgresql version to be older than 8.0. So you may want to make sure that you don't compile ruby-pg against an old version of libpq or just that you recompile ruby-pg.
&lt;/p&gt;&lt;p&gt;
Note that if you have both postgres and ruby-pg gems rails will prefer ruby-pg, I believe ruby-pg is the more actively developed one.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-16T19:19:12+01:00</created-at>
      <creator-id type="integer">264</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">208</number>
      <permalink>pqserverversion-not-supported-by-this-client-version</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>PQserverVersion not supported by this client version</title>
      <updated-at type="datetime">2008-05-16T19:19:12+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">3</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Robby Russell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/208</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Closed at Tarmo's request.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Closed at Tarmo's request.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-16T19:37:38+01:00</created-at>
      <creator-id type="integer">264</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">208</number>
      <permalink>pqserverversion-not-supported-by-this-client-version</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>PQserverVersion not supported by this client version</title>
      <updated-at type="datetime">2008-05-16T19:37:38+01:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">4</version>
      <user-name>Rick</user-name>
      <creator-name>Robby Russell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/208</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
