From ee0d9a4590a5bfa55a27e848c8802dad7b208e1c Mon Sep 17 00:00:00 2001
From: Timothy N. Tsvetkov <timothy.tsvetkov@gmail.com>
Date: Sun, 19 Dec 2010 16:03:21 +0300
Subject: [PATCH] try to cut index name when it is too long, if index with short name is already exists raise an exception

---
 .../abstract/schema_statements.rb                  |   11 ++++++++---
 activerecord/test/cases/migration_test.rb          |   11 ++++++++---
 2 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb b/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb
index 5b9c48b..68e2541 100644
--- a/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb
+++ b/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb
@@ -337,12 +337,17 @@ module ActiveRecord
           index_type = options
         end
 
-        if index_name.length > index_name_length
-          raise ArgumentError, "Index name '#{index_name}' on table '#{table_name}' is too long; the limit is #{index_name_length} characters"
-        end
         if index_name_exists?(table_name, index_name, false)
           raise ArgumentError, "Index name '#{index_name}' on table '#{table_name}' already exists"
         end
+        
+        if index_name.length > index_name_length
+          cutted_index_name = index_name.slice(0, index_name_length)
+          if index_name_exists?(table_name, cutted_index_name, false)
+            raise ArgumentError, "Index name '#{index_name}' on table '#{table_name}' is too long; the limit is #{index_name_length} characters; Cutted to #{index_name_length} '#{cutted_index_name}' already exists"
+          end
+          index_name = cutted_index_name
+        end
         quoted_column_names = quoted_columns_for_index(column_names, options).join(", ")
 
         execute "CREATE #{index_type} INDEX #{quote_column_name(index_name)} ON #{quote_table_name(table_name)} (#{quoted_column_names})"
diff --git a/activerecord/test/cases/migration_test.rb b/activerecord/test/cases/migration_test.rb
index 1a65045..aab2fe5 100644
--- a/activerecord/test/cases/migration_test.rb
+++ b/activerecord/test/cases/migration_test.rb
@@ -133,11 +133,16 @@ if ActiveRecord::Base.connection.supports_migrations?
     def test_add_index_length_limit
       good_index_name = 'x' * Person.connection.index_name_length
       too_long_index_name = good_index_name + 'x'
-      assert_raise(ArgumentError)  { Person.connection.add_index("people", "first_name", :name => too_long_index_name) }
-      assert !Person.connection.index_name_exists?("people", too_long_index_name, false)
-      assert_nothing_raised { Person.connection.add_index("people", "first_name", :name => good_index_name) }
+      assert_nothing_raised { Person.connection.add_index("people", "first_name", :name => too_long_index_name) }
+      assert Person.connection.index_name_exists?("people", good_index_name, false)
+      too_long_index_name_cutted_exists = too_long_index_name + 'x'
+      assert_raise(ArgumentError)  { Person.connection.add_index("people", "first_name", :name => too_long_index_name_cutted_exists) }
+      assert !Person.connection.index_name_exists?("people", too_long_index_name_cutted_exists, false)
+      new_good_index_name = 'y' * Person.connection.index_name_length
+      assert_nothing_raised { Person.connection.add_index("people", "first_name", :name => new_good_index_name) }
       assert Person.connection.index_name_exists?("people", good_index_name, false)
       Person.connection.remove_index("people", :name => good_index_name)
+      Person.connection.remove_index("people", :name => new_good_index_name)
     end
 
     def test_remove_nonexistent_index
-- 
1.7.1

