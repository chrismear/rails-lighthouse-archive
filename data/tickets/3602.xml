<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-12-21T00:46:58+00:00</created-at>
  <creator-id type="integer">6571</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3602</number>
  <permalink>activerecord-ignoring-distinct-for-postgres-in-named-scope-for-count-size</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag nil="true"></tag>
  <title>Activerecord ignoring Distinct for Postgres in named scope for count / size</title>
  <updated-at type="datetime">2009-12-21T01:10:59+00:00</updated-at>
  <user-id type="integer">7211</user-id>
  <version type="integer">2</version>
  <user-name>CancelProfileIsBroken</user-name>
  <creator-name>Thomas Sinclair</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3602</url>
  <priority-name nil="true"></priority-name>
  <original-body>Just spotted this one in rspec, I hope this is descriptive enough:

Competitor_spec.rb
`  it &quot;should automatically take out duplicate email addresses under the newsletter_subscribers scope&quot; do
    5.times do Competitor.make(:newsletter =&gt; true) end
    Competitor.create!(@valid_attributes)
    Competitor.create!(@valid_attributes)
    Competitor.create!(@valid_attributes)
    Competitor.count.should eql(8)
    p Competitor.newsletter_subscribers
    Competitor.newsletter_subscribers.size.should eql(6)
  end`

Competitor.rb
`named_scope :newsletter_subscribers, :select =&gt; &quot;DISTINCT Competitors.email&quot;, :conditions =&gt; ['competitors.newsletter = ?', true]`

And the sql logs:
`Competitor Load (0.5ms)   SELECT DISTINCT Competitors.email FROM &quot;competitors&quot; WHERE (competitors.newsletter = 't') 
SQL (0.4ms)   SELECT count(*) AS count_all FROM &quot;competitors&quot; WHERE (competitors.newsletter = 't') `

As you can see it's ignoring the distinct when doing a count or size on the named scope.

Cheers!</original-body>
  <latest-body>Just spotted this one in rspec, I hope this is descriptive enough:

Competitor_spec.rb
`  it &quot;should automatically take out duplicate email addresses under the newsletter_subscribers scope&quot; do
    5.times do Competitor.make(:newsletter =&gt; true) end
    Competitor.create!(@valid_attributes)
    Competitor.create!(@valid_attributes)
    Competitor.create!(@valid_attributes)
    Competitor.count.should eql(8)
    p Competitor.newsletter_subscribers
    Competitor.newsletter_subscribers.size.should eql(6)
  end`

Competitor.rb
`named_scope :newsletter_subscribers, :select =&gt; &quot;DISTINCT Competitors.email&quot;, :conditions =&gt; ['competitors.newsletter = ?', true]`

And the sql logs:
`Competitor Load (0.5ms)   SELECT DISTINCT Competitors.email FROM &quot;competitors&quot; WHERE (competitors.newsletter = 't') 
SQL (0.4ms)   SELECT count(*) AS count_all FROM &quot;competitors&quot; WHERE (competitors.newsletter = 't') `

As you can see it's ignoring the distinct when doing a count or size on the named scope.

Cheers!</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Just spotted this one in rspec, I hope this is descriptive
enough:&lt;/p&gt;
&lt;p&gt;Competitor_spec.rb&lt;br&gt;
&lt;code&gt;it &quot;should automatically take out duplicate email addresses
under the newsletter_subscribers scope&quot; do&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;5.times do Competitor.make(:newsletter =&amp;gt; true) end
Competitor.create!(@valid_attributes)
Competitor.create!(@valid_attributes)
Competitor.create!(@valid_attributes)
Competitor.count.should eql(8)
p Competitor.newsletter_subscribers
Competitor.newsletter_subscribers.size.should eql(6)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;Competitor.rb&lt;br&gt;
&lt;code&gt;named_scope :newsletter_subscribers, :select =&amp;gt; &quot;DISTINCT
Competitors.email&quot;, :conditions =&amp;gt; ['competitors.newsletter =
?', true]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And the sql logs:&lt;br&gt;
&lt;code&gt;Competitor Load (0.5ms) SELECT DISTINCT Competitors.email
FROM &quot;competitors&quot; WHERE (competitors.newsletter = 't') SQL (0.4ms)
SELECT count(*) AS count_all FROM &quot;competitors&quot; WHERE
(competitors.newsletter = 't')&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;As you can see it's ignoring the distinct when doing a count or
size on the named scope.&lt;/p&gt;
&lt;p&gt;Cheers!&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Just spotted this one in rspec, I hope this is descriptive enough:

Competitor_spec.rb
`  it &quot;should automatically take out duplicate email addresses under the newsletter_subscribers scope&quot; do
    5.times do Competitor.make(:newsletter =&gt; true) end
    Competitor.create!(@valid_attributes)
    Competitor.create!(@valid_attributes)
    Competitor.create!(@valid_attributes)
    Competitor.count.should eql(8)
    p Competitor.newsletter_subscribers
    Competitor.newsletter_subscribers.size.should eql(6)
  end`

Competitor.rb
`named_scope :newsletter_subscribers, :select =&gt; &quot;DISTINCT Competitors.email&quot;, :conditions =&gt; ['competitors.newsletter = ?', true]`

And the sql logs:
`Competitor Load (0.5ms)   SELECT DISTINCT Competitors.email FROM &quot;competitors&quot; WHERE (competitors.newsletter = 't') 
SQL (0.4ms)   SELECT count(*) AS count_all FROM &quot;competitors&quot; WHERE (competitors.newsletter = 't') `

As you can see it's ignoring the distinct when doing a count or size on the named scope.

Cheers!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just spotted this one in rspec, I hope this is descriptive
enough:&lt;/p&gt;
&lt;p&gt;Competitor_spec.rb&lt;br&gt;
&lt;code&gt;it &quot;should automatically take out duplicate email addresses
under the newsletter_subscribers scope&quot; do&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;5.times do Competitor.make(:newsletter =&amp;gt; true) end
Competitor.create!(@valid_attributes)
Competitor.create!(@valid_attributes)
Competitor.create!(@valid_attributes)
Competitor.count.should eql(8)
p Competitor.newsletter_subscribers
Competitor.newsletter_subscribers.size.should eql(6)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;Competitor.rb&lt;br&gt;
&lt;code&gt;named_scope :newsletter_subscribers, :select =&amp;gt; &quot;DISTINCT
Competitors.email&quot;, :conditions =&amp;gt; ['competitors.newsletter =
?', true]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And the sql logs:&lt;br&gt;
&lt;code&gt;Competitor Load (0.5ms) SELECT DISTINCT Competitors.email
FROM &quot;competitors&quot; WHERE (competitors.newsletter = 't') SQL (0.4ms)
SELECT count(*) AS count_all FROM &quot;competitors&quot; WHERE
(competitors.newsletter = 't')&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;As you can see it's ignoring the distinct when doing a count or
size on the named scope.&lt;/p&gt;
&lt;p&gt;Cheers!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-21T00:46:58+00:00</created-at>
      <creator-id type="integer">6571</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3602</number>
      <permalink>activerecord-ignoring-distinct-for-postgres-in-named-scope-for-count-size</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Activerecord ignoring Distinct for Postgres in named scope for count / size</title>
      <updated-at type="datetime">2009-12-21T00:47:02+00:00</updated-at>
      <user-id type="integer">6571</user-id>
      <version type="integer">1</version>
      <user-name>Thomas Sinclair</user-name>
      <creator-name>Thomas Sinclair</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3602</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Dupe of #1334</body>
      <body-html>&lt;div&gt;&lt;p&gt;Dupe of &lt;a href=&quot;/projects/8994/tickets/1334&quot; title=
&quot;Ticket #1334&quot;&gt;#1334&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-12-21T01:10:58+00:00</created-at>
      <creator-id type="integer">6571</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3602</number>
      <permalink>activerecord-ignoring-distinct-for-postgres-in-named-scope-for-count-size</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag nil="true"></tag>
      <title>Activerecord ignoring Distinct for Postgres in named scope for count / size</title>
      <updated-at type="datetime">2009-12-21T01:10:59+00:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">2</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Thomas Sinclair</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3602</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
