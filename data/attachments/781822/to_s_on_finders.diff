From 0a9053463a2fe917f8070755741986cd5a7b3eb8 Mon Sep 17 00:00:00 2001
From: Jeff Pollard <jeff.pollard@gmail.com>
Date: Sun, 21 Nov 2010 10:15:19 -0800
Subject: [PATCH] Allow finders to work with subclasses of String by calling .to_s on the string before passing off to Arel.

---
 .../active_record/relation/predicate_builder.rb    |    2 ++
 activerecord/test/cases/relations_test.rb          |   14 ++++++++++++++
 2 files changed, 16 insertions(+), 0 deletions(-)

diff --git a/activerecord/lib/active_record/relation/predicate_builder.rb b/activerecord/lib/active_record/relation/predicate_builder.rb
index 32c7d08..c966fc6 100644
--- a/activerecord/lib/active_record/relation/predicate_builder.rb
+++ b/activerecord/lib/active_record/relation/predicate_builder.rb
@@ -30,6 +30,8 @@ module ActiveRecord
           when Class
             # FIXME: I think we need to deprecate this behavior
             attribute.eq(value.name)
+          when String
+            attribute.eq(value.to_s)
           else
             attribute.eq(value)
           end
diff --git a/activerecord/test/cases/relations_test.rb b/activerecord/test/cases/relations_test.rb
index 535bcd4..72fc375 100644
--- a/activerecord/test/cases/relations_test.rb
+++ b/activerecord/test/cases/relations_test.rb
@@ -437,6 +437,20 @@ class RelationTest < ActiveRecord::TestCase
     authors = Author.find([author])
     assert_equal author, authors.first
   end
+  
+  class SubclassString < String; end
+  
+  def test_where_with_subclass_of_string
+    other_string = SubclassString.new("David")
+    authors = Author.where(:name => other_string)
+    assert_equal "David", authors.first.name
+  end
+  
+  def test_dynamic_find_with_subclass_of_string
+    other_string = SubclassString.new("David")
+    authors = Author.find_by_name(other_string)
+    assert_equal "David", authors.name
+  end
 
   class Mary < Author; end
 
-- 
1.7.2.1

