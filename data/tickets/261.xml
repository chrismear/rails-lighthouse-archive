<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-22T08:32:33+00:00</created-at>
  <creator-id type="integer">21405</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">261</number>
  <permalink>argumenterror-using-fixtures-named-test</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>Fixtures names can't start with 'test'</title>
  <updated-at type="datetime">2011-03-26T02:36:59+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">24</version>
  <user-name>bingbing</user-name>
  <creator-name>Menno</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
  <priority-name>Low</priority-name>
  <original-body>After moving from Rails 1.2 to 2.0.2 using fixtures whose name starts with 'test' fails. Running 'rake' when having fixture test_whatevers.yml results in an

  1) Error:
test_whatevers(ActionController::TestCase):
ArgumentError: wrong number of arguments (0 for 1)
    /var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `initialize'
    /var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `new'
    /var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `setup_without_fixtures'
    /var/lib/gems/1.8/gems/activerecord-2.0.2/lib/active_record/fixtures.rb:979:in `full_setup'
    /var/lib/gems/1.8/gems/activesupport-2.0.2/lib/active_support/testing/default.rb:7:in `run'

To reproduce
* Create new project: 'rails foo'
* In foo, create a model TestWhatever: 'script/generate model TestWhatever'
* Migrate: 'rake db:migrate'
* Run tests: 'rake'
* See expection above.

All is fine when the model is named 'TesxWhatever' or 'WhateverTest'.</original-body>
  <latest-body>After moving from Rails 1.2 to 2.0.2 using fixtures whose name starts with 'test' fails. Running 'rake' when having fixture test_whatevers.yml results in an

  1) Error:
test_whatevers(ActionController::TestCase):
ArgumentError: wrong number of arguments (0 for 1)
    /var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `initialize'
    /var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `new'
    /var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `setup_without_fixtures'
    /var/lib/gems/1.8/gems/activerecord-2.0.2/lib/active_record/fixtures.rb:979:in `full_setup'
    /var/lib/gems/1.8/gems/activesupport-2.0.2/lib/active_support/testing/default.rb:7:in `run'

To reproduce
* Create new project: 'rails foo'
* In foo, create a model TestWhatever: 'script/generate model TestWhatever'
* Migrate: 'rake db:migrate'
* Run tests: 'rake'
* See expection above.

All is fine when the model is named 'TesxWhatever' or 'WhateverTest'.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
After moving from Rails 1.2 to 2.0.2 using fixtures whose name starts with 'test' fails. Running 'rake' when having fixture test_whatevers.yml results in an
&lt;/p&gt;&lt;p&gt;
1) Error:
&lt;/p&gt;&lt;p&gt;
test_whatevers(ActionController::TestCase):
&lt;/p&gt;&lt;p&gt;
ArgumentError: wrong number of arguments (0 for 1)
&lt;/p&gt;&lt;p&gt;
/var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `initialize'
&lt;/p&gt;&lt;p&gt;
/var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `new'
&lt;/p&gt;&lt;p&gt;
/var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `setup_without_fixtures'
&lt;/p&gt;&lt;p&gt;
/var/lib/gems/1.8/gems/activerecord-2.0.2/lib/active_record/fixtures.rb:979:in `full_setup'
&lt;/p&gt;&lt;p&gt;
/var/lib/gems/1.8/gems/activesupport-2.0.2/lib/active_support/testing/default.rb:7:in `run'
&lt;/p&gt;&lt;p&gt;
To reproduce
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
Create new project: 'rails foo'
&lt;/li&gt;&lt;li&gt;
In foo, create a model TestWhatever: 'script/generate model TestWhatever'
&lt;/li&gt;&lt;li&gt;
Migrate: 'rake db:migrate'
&lt;/li&gt;&lt;li&gt;
Run tests: 'rake'
&lt;/li&gt;&lt;li&gt;
See expection above.
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
All is fine when the model is named 'TesxWhatever' or 'WhateverTest'.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>After moving from Rails 1.2 to 2.0.2 using fixtures whose name starts with 'test' fails. Running 'rake' when having fixture test_whatevers.yml results in an

  1) Error:
test_whatevers(ActionController::TestCase):
ArgumentError: wrong number of arguments (0 for 1)
    /var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `initialize'
    /var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `new'
    /var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `setup_without_fixtures'
    /var/lib/gems/1.8/gems/activerecord-2.0.2/lib/active_record/fixtures.rb:979:in `full_setup'
    /var/lib/gems/1.8/gems/activesupport-2.0.2/lib/active_support/testing/default.rb:7:in `run'

To reproduce
* Create new project: 'rails foo'
* In foo, create a model TestWhatever: 'script/generate model TestWhatever'
* Migrate: 'rake db:migrate'
* Run tests: 'rake'
* See expection above.

All is fine when the model is named 'TesxWhatever' or 'WhateverTest'.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
After moving from Rails 1.2 to 2.0.2 using fixtures whose name starts with 'test' fails. Running 'rake' when having fixture test_whatevers.yml results in an
&lt;/p&gt;&lt;p&gt;
1) Error:
&lt;/p&gt;&lt;p&gt;
test_whatevers(ActionController::TestCase):
&lt;/p&gt;&lt;p&gt;
ArgumentError: wrong number of arguments (0 for 1)
&lt;/p&gt;&lt;p&gt;
/var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `initialize'
&lt;/p&gt;&lt;p&gt;
/var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `new'
&lt;/p&gt;&lt;p&gt;
/var/lib/gems/1.8/gems/actionpack-2.0.2/lib/action_controller/test_case.rb:48:in `setup_without_fixtures'
&lt;/p&gt;&lt;p&gt;
/var/lib/gems/1.8/gems/activerecord-2.0.2/lib/active_record/fixtures.rb:979:in `full_setup'
&lt;/p&gt;&lt;p&gt;
/var/lib/gems/1.8/gems/activesupport-2.0.2/lib/active_support/testing/default.rb:7:in `run'
&lt;/p&gt;&lt;p&gt;
To reproduce
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
Create new project: 'rails foo'
&lt;/li&gt;&lt;li&gt;
In foo, create a model TestWhatever: 'script/generate model TestWhatever'
&lt;/li&gt;&lt;li&gt;
Migrate: 'rake db:migrate'
&lt;/li&gt;&lt;li&gt;
Run tests: 'rake'
&lt;/li&gt;&lt;li&gt;
See expection above.
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
All is fine when the model is named 'TesxWhatever' or 'WhateverTest'.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-27T15:15:54+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ArgumentError using fixtures named test...</title>
      <updated-at type="datetime">2008-05-27T15:15:54+01:00</updated-at>
      <user-id type="integer">21405</user-id>
      <version type="integer">1</version>
      <user-name>Menno</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-27T15:18:01+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- 
:title: ArgumentError using fixtures named test...
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ArgumentError using fixtures named test*</title>
      <updated-at type="datetime">2008-05-27T15:18:01+01:00</updated-at>
      <user-id type="integer">21405</user-id>
      <version type="integer">2</version>
      <user-name>Menno</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It turns out things are messed up by line 54 of Ruby 1.8.6's test/unit/testcase.rb:
@@@ ruby
tests = method_names.delete_if {|method_name| method_name !~ /^test./}
@@@
This is in the self.suite method which &quot;Rolls up all of the test* methods in the fixture into one suite, creating a new instance of the fixture for each method.&quot;

When you remove your fixture names from method_names, i.e. add a line tests.delete(&quot;test_whatevers&quot;) after line 54, all is fine again. But obviously this is no solution.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
It turns out things are messed up by line 54 of Ruby 1.8.6's test/unit/testcase.rb:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;tests = method_names.delete_if {|method_name| method_name !~ /^test./}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This is in the self.suite method which &quot;Rolls up all of the test* methods in the fixture into one suite, creating a new instance of the fixture for each method.&quot;
&lt;/p&gt;&lt;p&gt;
When you remove your fixture names from method_names, i.e. add a line tests.delete(&quot;test_whatevers&quot;) after line 54, all is fine again. But obviously this is no solution.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-30T16:12:04+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ArgumentError using fixtures named test*</title>
      <updated-at type="datetime">2008-05-30T16:12:04+01:00</updated-at>
      <user-id type="integer">21405</user-id>
      <version type="integer">3</version>
      <user-name>Menno</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-30T17:54:41+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- 
:title: ArgumentError using fixtures named test*
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2008-05-30T17:54:41+01:00</updated-at>
      <user-id type="integer">21405</user-id>
      <version type="integer">4</version>
      <user-name>Menno</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>wouldn't it be better (instead of checking the method_name string) to check the module/class hierarchy for the testing module..?  checking the string/name assumes that _everyone_ is going to follow the conventions.  we know that's not true, likely, or maybe even possible.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
wouldn't it be better (instead of checking the method_name string) to check the module/class hierarchy for the testing module..?  checking the string/name assumes that &lt;em&gt;everyone&lt;/em&gt; is going to follow the conventions.  we know that's not true, likely, or maybe even possible.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-30T18:43:01+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2008-05-30T18:43:01+01:00</updated-at>
      <user-id type="integer">21740</user-id>
      <version type="integer">5</version>
      <user-name>oddlyzen</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-17T02:08:14+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.0-stable actionpack activerecord bug</tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2008-07-17T02:08:14+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">6</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thanks for the update. Should I interpret the tags as &quot;fixed in 2.1&quot;?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Thanks for the update. Should I interpret the tags as &quot;fixed in 2.1&quot;?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-17T09:36:45+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.0-stable actionpack activerecord bug</tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2008-07-17T09:36:45+01:00</updated-at>
      <user-id type="integer">21405</user-id>
      <version type="integer">7</version>
      <user-name>Menno</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Issue still present in Rails 2.1.1</body>
      <body-html>&lt;div&gt;&lt;p&gt;Issue still present in Rails 2.1.1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-18T10:45:27+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.0-stable actionpack activerecord bug
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.0-stable actionpack activerecord bug</tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2008-09-18T10:45:32+01:00</updated-at>
      <user-id type="integer">21405</user-id>
      <version type="integer">8</version>
      <user-name>Menno</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm getting this bug as a result of having a model called &quot;Testimonial&quot;. It seems that I can't have fixtures at all for this model because of this bug. Surely we can handle these things more intelligently than this!</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm getting this bug as a result of having a model called
&quot;Testimonial&quot;. It seems that I can't have fixtures at all for this
model because of this bug. Surely we can handle these things more
intelligently than this!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-02T12:00:33+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>&quot;2.0-stable&quot; actionpack activerecord bug</tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2008-10-02T12:00:38+01:00</updated-at>
      <user-id type="integer">33579</user-id>
      <version type="integer">9</version>
      <user-name>Rob Lucas</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails apparently regards &quot;Test&quot; as a reserved name for controllers, probably for this kind of reason. When trying to generate a controller just called &quot;Test&quot;, I get the following response in Rails 2.1.1: 

---

The name 'Test' is either already used in your application or reserved by Ruby on Rails.

Please choose an alternative and run this generator again.

Suggestions:  

trial
trial run
tryout
mental test
mental testing
psychometric test
examination
exam
run
prove
try
try out
examine
essay
screen
quiz
---

But models with names such as &quot;testimonial&quot;, &quot;testament&quot; etc should certainly still be possible, and I can't really see why something like &quot;test_driver&quot; shouldn't work either. I've managed to get around this problem by hacking the line of **test/unit/testcase.rb** that is mentioned by Menno above. Rather than going in and hacking the actual original file, I'm overriding it by requiring a file in my troubled unit tests like:

@@@
module Test
  module Unit
    class TestCase
        # Require this file in any unit tests for models starting with the letters &quot;test&quot;.
        # Overrides the suite method in Ruby's test/unit/testcase.rb so that we don't end 
        # up trying to run a spurious unit test method of the same name as our model
        def self.suite
          method_names = public_instance_methods(true)
          tests = method_names.delete_if {|method_name| method_name !~ /^test./ || method_name == &quot;test_whatevers&quot;}
          suite = TestSuite.new(name)
          tests.sort.each do
            |test|
            catch(:invalid_test) do
              suite &lt;&lt; new(test)
            end
          end
          if (suite.empty?)
            catch(:invalid_test) do
              suite &lt;&lt; new(&quot;default_test&quot;)
            end
          end
          return suite
        end
    end
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails apparently regards &quot;Test&quot; as a reserved name for
controllers, probably for this kind of reason. When trying to
generate a controller just called &quot;Test&quot;, I get the following
response in Rails 2.1.1:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The name 'Test' is either already used in your application or
reserved by Ruby on Rails.&lt;/p&gt;
&lt;p&gt;Please choose an alternative and run this generator again.&lt;/p&gt;
&lt;p&gt;Suggestions:&lt;/p&gt;
&lt;p&gt;trial trial run tryout mental test mental testing psychometric
test examination exam run prove try try out examine essay
screen&lt;/p&gt;
&lt;h2&gt;quiz&lt;/h2&gt;
&lt;p&gt;But models with names such as &quot;testimonial&quot;, &quot;testament&quot; etc
should certainly still be possible, and I can't really see why
something like &quot;test_driver&quot; shouldn't work either. I've managed to
get around this problem by hacking the line of
&lt;strong&gt;test/unit/testcase.rb&lt;/strong&gt; that is mentioned by Menno
above. Rather than going in and hacking the actual original file,
I'm overriding it by requiring a file in my troubled unit tests
like:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
module Test
  module Unit
    class TestCase
        # Require this file in any unit tests for models starting with the letters &amp;quot;test&amp;quot;.
        # Overrides the suite method in Ruby's test/unit/testcase.rb so that we don't end
        # up trying to run a spurious unit test method of the same name as our model
        def self.suite
          method_names = public_instance_methods(true)
          tests = method_names.delete_if {|method_name| method_name !~ /^test./ || method_name == &amp;quot;test_whatevers&amp;quot;}
          suite = TestSuite.new(name)
          tests.sort.each do
            |test|
            catch(:invalid_test) do
              suite &amp;lt;&amp;lt; new(test)
            end
          end
          if (suite.empty?)
            catch(:invalid_test) do
              suite &amp;lt;&amp;lt; new(&amp;quot;default_test&amp;quot;)
            end
          end
          return suite
        end
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-02T17:07:00+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>&quot;2.0-stable&quot; actionpack activerecord bug</tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2008-10-02T17:07:02+01:00</updated-at>
      <user-id type="integer">33579</user-id>
      <version type="integer">10</version>
      <user-name>Rob Lucas</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails apparently regards &quot;Test&quot; as a reserved name for controllers, probably for this kind of reason. When trying to generate a controller just called &quot;Test&quot;, I get the following response in Rails 2.1.1: 

---

The name 'Test' is either already used in your application or reserved by Ruby on Rails.

Please choose an alternative and run this generator again.

Suggestions:  

trial
trial run
tryout
mental test
mental testing
psychometric test
examination
exam
run
prove
try
try out
examine
essay
screen
quiz

---

But models with names such as &quot;testimonial&quot;, &quot;testament&quot; etc should certainly still be possible, and I can't really see why something like &quot;test_driver&quot; shouldn't work either. I've managed to get around this problem by hacking the line of **test/unit/testcase.rb** that is mentioned by Menno above. Rather than going in and hacking the actual original file, I'm overriding it by requiring a file in my troubled unit tests like:

@@@
module Test
  module Unit
    class TestCase
        # Require this file in any unit tests for models starting with the letters &quot;test&quot;.
        # Overrides the suite method in Ruby's test/unit/testcase.rb so that we don't end 
        # up trying to run a spurious unit test method of the same name as our model
        def self.suite
          method_names = public_instance_methods(true)
          tests = method_names.delete_if {|method_name| method_name !~ /^test./ || method_name == &quot;test_whatevers&quot;}
          suite = TestSuite.new(name)
          tests.sort.each do
            |test|
            catch(:invalid_test) do
              suite &lt;&lt; new(test)
            end
          end
          if (suite.empty?)
            catch(:invalid_test) do
              suite &lt;&lt; new(&quot;default_test&quot;)
            end
          end
          return suite
        end
    end
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails apparently regards &quot;Test&quot; as a reserved name for
controllers, probably for this kind of reason. When trying to
generate a controller just called &quot;Test&quot;, I get the following
response in Rails 2.1.1:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The name 'Test' is either already used in your application or
reserved by Ruby on Rails.&lt;/p&gt;
&lt;p&gt;Please choose an alternative and run this generator again.&lt;/p&gt;
&lt;p&gt;Suggestions:&lt;/p&gt;
&lt;p&gt;trial trial run tryout mental test mental testing psychometric
test examination exam run prove try try out examine essay screen
quiz&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;But models with names such as &quot;testimonial&quot;, &quot;testament&quot; etc
should certainly still be possible, and I can't really see why
something like &quot;test_driver&quot; shouldn't work either. I've managed to
get around this problem by hacking the line of
&lt;strong&gt;test/unit/testcase.rb&lt;/strong&gt; that is mentioned by Menno
above. Rather than going in and hacking the actual original file,
I'm overriding it by requiring a file in my troubled unit tests
like:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
module Test
  module Unit
    class TestCase
        # Require this file in any unit tests for models starting with the letters &amp;quot;test&amp;quot;.
        # Overrides the suite method in Ruby's test/unit/testcase.rb so that we don't end
        # up trying to run a spurious unit test method of the same name as our model
        def self.suite
          method_names = public_instance_methods(true)
          tests = method_names.delete_if {|method_name| method_name !~ /^test./ || method_name == &amp;quot;test_whatevers&amp;quot;}
          suite = TestSuite.new(name)
          tests.sort.each do
            |test|
            catch(:invalid_test) do
              suite &amp;lt;&amp;lt; new(test)
            end
          end
          if (suite.empty?)
            catch(:invalid_test) do
              suite &amp;lt;&amp;lt; new(&amp;quot;default_test&amp;quot;)
            end
          end
          return suite
        end
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-02T17:08:07+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>&quot;2.0-stable&quot; actionpack activerecord bug</tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2008-10-02T17:08:09+01:00</updated-at>
      <user-id type="integer">33579</user-id>
      <version type="integer">11</version>
      <user-name>Rob Lucas</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is still a problem in Rails 2.3.5 with creating a model beginning with 'Test'.

rails myapp
cd myapp
script/generate model testimonial name:string comment:text
rake db:migrate
rake test:units

  1) Error:
testimonials(ActionView::TestCase):
TypeError: wrong argument type Class (expected Module)
    

8 tests, 1 assertions, 0 failures, 1 errors
rake aborted!</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is still a problem in Rails 2.3.5 with creating a model
beginning with 'Test'.&lt;/p&gt;
&lt;p&gt;rails myapp&lt;br&gt;
cd myapp&lt;br&gt;
script/generate model testimonial name:string comment:text&lt;br&gt;
rake db:migrate&lt;br&gt;
rake test:units&lt;/p&gt;
&lt;p&gt;1) Error: testimonials(ActionView::TestCase):&lt;br&gt;
TypeError: wrong argument type Class (expected Module)&lt;br&gt;&lt;/p&gt;
&lt;p&gt;8 tests, 1 assertions, 0 failures, 1 errors&lt;br&gt;
rake aborted!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-31T15:30:08+00:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;2.0-stable\&quot; actionpack activerecord bug&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.0-stable actionpack activerecord bug</tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2010-01-31T15:30:09+00:00</updated-at>
      <user-id type="integer">17465</user-id>
      <version type="integer">12</version>
      <user-name>Mike Boone</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi, I found the fix for rails 3 and test-unit using minitest. It is minitest bug :

In minitest/unit.rb

      def self.test_methods
        methods = public_instance_methods(true).grep(/^test/).map { |m|
          m.to_s
        }.sort

        if self.test_order == :random then
          max = methods.size
          methods = methods.sort_by { rand(max) }
        end

        methods
      end

You just have to patch your test/test_helper.rb 

    class ActiveSupport::TestCase
      # Setup all fixtures in test/fixtures/*.(yml|csv) for all tests in alphabetical order.
      #
      # Note: You'll currently still have to declare fixtures explicitly in integration tests
      # -- they do not yet inherit this setting
      fixtures :all
    
      # Fix minitest bug : all public methods beginning with 'test' are considered as test_methods ... that is not true if we have a resource called testimony
      # testimony_path will not be found and tests will fail!
      def self.test_methods
        methods = public_instance_methods(true).grep(/^test$|^test_/).map { |m|
          m.to_s
        }.sort
    
        if self.test_order == :random then
          max = methods.size
          methods = methods.sort_by { rand(max) }
        end
    
        methods
      end
    
      # Add more helper methods to be used by all tests here...
    
    end

Should it be included in ActiveSupport::TestCase ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi, I found the fix for rails 3 and test-unit using minitest. It
is minitest bug :&lt;/p&gt;
&lt;p&gt;In minitest/unit.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  def self.test_methods
    methods = public_instance_methods(true).grep(/^test/).map { |m|
      m.to_s
    }.sort

    if self.test_order == :random then
      max = methods.size
      methods = methods.sort_by { rand(max) }
    end

    methods
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You just have to patch your test/test_helper.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class ActiveSupport::TestCase
  # Setup all fixtures in test/fixtures/*.(yml|csv) for all tests in alphabetical order.
  #
  # Note: You'll currently still have to declare fixtures explicitly in integration tests
  # -- they do not yet inherit this setting
  fixtures :all

  # Fix minitest bug : all public methods beginning with 'test' are considered as test_methods ... that is not true if we have a resource called testimony
  # testimony_path will not be found and tests will fail!
  def self.test_methods
    methods = public_instance_methods(true).grep(/^test$|^test_/).map { |m|
      m.to_s
    }.sort

    if self.test_order == :random then
      max = methods.size
      methods = methods.sort_by { rand(max) }
    end

    methods
  end

  # Add more helper methods to be used by all tests here...

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Should it be included in ActiveSupport::TestCase ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-23T10:02:53+00:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.0-stable actionpack activerecord bug
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.0-stable actionpack activerecord activesupport bug testcase</tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2010-03-23T10:02:57+00:00</updated-at>
      <user-id type="integer">58368</user-id>
      <version type="integer">13</version>
      <user-name>Hery</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>you of &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; the good quality replica &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;lady rolex watches&lt;/a&gt;&lt;/b&gt; watches backed up by &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;gucciwatches&lt;/a&gt;&lt;/b&gt; transparent guarantee policies. Our &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; helpdesk is eager to &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;replica rolex watch&lt;/a&gt;&lt;/b&gt; assist you in making &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;omega watches&lt;/a&gt;&lt;/b&gt; the right choice. We &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;lady's rolex watch&lt;/a&gt;&lt;/b&gt; also have very flexible &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; return policy in case &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;discount rolex watches&lt;/a&gt;&lt;/b&gt; you are not satisfied &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;knockoff rolex watch&lt;/a&gt;&lt;/b&gt; with the merchandise. Replica watches will make you popular and a good-looking p</body>
      <body-html>&lt;div&gt;&lt;p&gt;you of &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;rolex
watches&lt;/a&gt;&lt;/b&gt; the good quality replica &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;lady rolex watches&lt;/a&gt;&lt;/b&gt;
watches backed up by &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;gucciwatches&lt;/a&gt;&lt;/b&gt; transparent
guarantee policies. Our &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; helpdesk is
eager to &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;replica rolex
watch&lt;/a&gt;&lt;/b&gt; assist you in making &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;omega watches&lt;/a&gt;&lt;/b&gt; the right
choice. We &lt;b&gt;&lt;a href=&quot;http://www.discountwatchmvp.com&quot;&gt;lady's
rolex watch&lt;/a&gt;&lt;/b&gt; also have very flexible &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;rolex watches&lt;/a&gt;&lt;/b&gt; return
policy in case &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;discount rolex watches&lt;/a&gt;&lt;/b&gt;
you are not satisfied &lt;b&gt;&lt;a href=
&quot;http://www.discountwatchmvp.com&quot;&gt;knockoff rolex watch&lt;/a&gt;&lt;/b&gt; with
the merchandise. Replica watches will make you popular and a
good-looking p&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-20T07:41:05+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">14307</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.0-stable actionpack activerecord activesupport bug testcase</tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2010-07-20T08:07:46+01:00</updated-at>
      <user-id type="integer">107926</user-id>
      <version type="integer">14</version>
      <user-name>echo</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Workaround is pretty easy. Just rename your fixtures file, then associate that odd name with the proper class.

**testimonials.yml =&gt; atestimonials.yml**

and in **test/test_helper.rb**


@@@ 
class ActiveSupport::TestCase
  ...
  set_fixture_class :atestimonials =&gt; Testimonial
  ...
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Workaround is pretty easy. Just rename your fixtures file, then
associate that odd name with the proper class.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;testimonials.yml =&amp;gt; atestimonials.yml&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;and in &lt;strong&gt;test/test_helper.rb&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class ActiveSupport::TestCase
  ...
  set_fixture_class :atestimonials =&amp;gt; Testimonial
  ...
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-16T10:55:25+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.0-stable actionpack activerecord activesupport bug testcase</tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2010-08-16T10:55:26+01:00</updated-at>
      <user-id type="integer">24394</user-id>
      <version type="integer">15</version>
      <user-name>chris finne</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Chris, thanks for the workaround. I tried it and it works.

I still don't understand why this is a &quot;wontfix&quot;. Seems a legitimate bug. Unless there is documentation that states &quot;don't name models with any word that begins with 'Test'&quot;?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Chris, thanks for the workaround. I tried it and it works.&lt;/p&gt;
&lt;p&gt;I still don't understand why this is a &quot;wontfix&quot;. Seems a
legitimate bug. Unless there is documentation that states &quot;don't
name models with any word that begins with 'Test'&quot;?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-28T15:36:33+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.0-stable actionpack activerecord activesupport bug testcase</tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2010-08-28T15:36:35+01:00</updated-at>
      <user-id type="integer">17465</user-id>
      <version type="integer">16</version>
      <user-name>Mike Boone</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T21:44:07+01:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:tag: 2.0-stable actionpack activerecord activesupport bug testcase
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2010-10-09T21:44:10+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">18</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-07T16:53:58+00:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2010-11-07T16:53:59+00:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">20</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-28T02:36:19+00:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2010-12-28T03:36:08+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">21</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-16T06:29:42+00:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2011-02-22T08:32:33+00:00</updated-at>
      <user-id type="integer">137256</user-id>
      <version type="integer">22</version>
      <user-name>gfsd</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:35:22+00:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2011-02-19T09:28:18+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">23</version>
      <user-name>mklo</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:10:56+00:00</created-at>
      <creator-id type="integer">21405</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">261</number>
      <permalink>argumenterror-using-fixtures-named-test</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Fixtures names can't start with 'test'</title>
      <updated-at type="datetime">2011-03-26T02:36:59+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">24</version>
      <user-name>bingbing</user-name>
      <creator-name>Menno</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/261</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
