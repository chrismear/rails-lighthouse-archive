<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-12-29T21:39:32+00:00</created-at>
  <creator-id type="integer">7382</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3630</number>
  <permalink>patch-activerecord-does-not-write-invalid-datetime-and-timestamp-data-when-enable-time-zone-support</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2-3-stable</tag>
  <title>[PATCH] ActiveRecord does not write invalid datetime and timestamp data when enable time zone support</title>
  <updated-at type="datetime">2010-10-08T12:32:59+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">3</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>ihower</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3630</url>
  <priority-name>Low</priority-name>
  <original-body>Suppose I have a model &quot;Event&quot; with datetime and timestamp attributes, and we assign invalid data to them:

    ActiveRecord::Base.time_zone_aware_attributes
    =&gt; true
    e = Event.new( :datetime =&gt; &quot;AAA&quot;, :timestamp =&gt; &quot;BBB&quot;, :integer =&gt; &quot;CCC&quot; )
    e.attributes_before_type_cast
    =&gt; { &quot;datetime&quot; =&gt; nil, &quot;timestamp&quot; =&gt; nil, &quot;integer&quot; =&gt; &quot;CCC&quot; }

Expect:

    =&gt; { &quot;datetime&quot; =&gt; &quot;AAA&quot;, &quot;timestamp&quot; =&gt; &quot;BBB&quot;, &quot;integer&quot; =&gt; &quot;CCC }

BTW, the result is right if we disable time zone support:

    ActiveRecord::Base.time_zone_aware_attributes = false
    e = Event.new( :datetime =&gt; &quot;AAA&quot;, :timestamp =&gt; &quot;BBB&quot;, :integer =&gt; &quot;CCC&quot; )
    e.attributes_before_type_cast
    =&gt; { &quot;datetime&quot; =&gt; &quot;AAA&quot;, &quot;timestamp&quot; =&gt; &quot;BBB&quot;, &quot;integer&quot; =&gt; &quot;CCC }</original-body>
  <latest-body>Suppose I have a model &quot;Event&quot; with datetime and timestamp attributes, and we assign invalid data to them:

    ActiveRecord::Base.time_zone_aware_attributes
    =&gt; true
    e = Event.new( :datetime =&gt; &quot;AAA&quot;, :timestamp =&gt; &quot;BBB&quot;, :integer =&gt; &quot;CCC&quot; )
    e.attributes_before_type_cast
    =&gt; { &quot;datetime&quot; =&gt; nil, &quot;timestamp&quot; =&gt; nil, &quot;integer&quot; =&gt; &quot;CCC&quot; }

Expect:

    =&gt; { &quot;datetime&quot; =&gt; &quot;AAA&quot;, &quot;timestamp&quot; =&gt; &quot;BBB&quot;, &quot;integer&quot; =&gt; &quot;CCC }

BTW, the result is right if we disable time zone support:

    ActiveRecord::Base.time_zone_aware_attributes = false
    e = Event.new( :datetime =&gt; &quot;AAA&quot;, :timestamp =&gt; &quot;BBB&quot;, :integer =&gt; &quot;CCC&quot; )
    e.attributes_before_type_cast
    =&gt; { &quot;datetime&quot; =&gt; &quot;AAA&quot;, &quot;timestamp&quot; =&gt; &quot;BBB&quot;, &quot;integer&quot; =&gt; &quot;CCC }</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Suppose I have a model &quot;Event&quot; with datetime and timestamp
attributes, and we assign invalid data to them:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Base.time_zone_aware_attributes
=&amp;gt; true
e = Event.new( :datetime =&amp;gt; &quot;AAA&quot;, :timestamp =&amp;gt; &quot;BBB&quot;, :integer =&amp;gt; &quot;CCC&quot; )
e.attributes_before_type_cast
=&amp;gt; { &quot;datetime&quot; =&amp;gt; nil, &quot;timestamp&quot; =&amp;gt; nil, &quot;integer&quot; =&amp;gt; &quot;CCC&quot; }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Expect:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;=&amp;gt; { &quot;datetime&quot; =&amp;gt; &quot;AAA&quot;, &quot;timestamp&quot; =&amp;gt; &quot;BBB&quot;, &quot;integer&quot; =&amp;gt; &quot;CCC }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;BTW, the result is right if we disable time zone support:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Base.time_zone_aware_attributes = false
e = Event.new( :datetime =&amp;gt; &quot;AAA&quot;, :timestamp =&amp;gt; &quot;BBB&quot;, :integer =&amp;gt; &quot;CCC&quot; )
e.attributes_before_type_cast
=&amp;gt; { &quot;datetime&quot; =&amp;gt; &quot;AAA&quot;, &quot;timestamp&quot; =&amp;gt; &quot;BBB&quot;, &quot;integer&quot; =&amp;gt; &quot;CCC }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Suppose I have a model &quot;Event&quot; with datetime and timestamp attributes, and we assign invalid data to them:

    ActiveRecord::Base.time_zone_aware_attributes
    =&gt; true
    e = Event.new( :datetime =&gt; &quot;AAA&quot;, :timestamp =&gt; &quot;BBB&quot;, :integer =&gt; &quot;CCC&quot; )
    e.attributes_before_type_cast
    =&gt; { &quot;datetime&quot; =&gt; nil, &quot;timestamp&quot; =&gt; nil, &quot;integer&quot; =&gt; &quot;CCC&quot; }

Expect:

    =&gt; { &quot;datetime&quot; =&gt; &quot;AAA&quot;, &quot;timestamp&quot; =&gt; &quot;BBB&quot;, &quot;integer&quot; =&gt; &quot;CCC }

BTW, the result is right if we disable time zone support:

    ActiveRecord::Base.time_zone_aware_attributes = false
    e = Event.new( :datetime =&gt; &quot;AAA&quot;, :timestamp =&gt; &quot;BBB&quot;, :integer =&gt; &quot;CCC&quot; )
    e.attributes_before_type_cast
    =&gt; { &quot;datetime&quot; =&gt; &quot;AAA&quot;, &quot;timestamp&quot; =&gt; &quot;BBB&quot;, &quot;integer&quot; =&gt; &quot;CCC }</body>
      <body-html>&lt;div&gt;&lt;p&gt;Suppose I have a model &quot;Event&quot; with datetime and timestamp
attributes, and we assign invalid data to them:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Base.time_zone_aware_attributes
=&amp;gt; true
e = Event.new( :datetime =&amp;gt; &quot;AAA&quot;, :timestamp =&amp;gt; &quot;BBB&quot;, :integer =&amp;gt; &quot;CCC&quot; )
e.attributes_before_type_cast
=&amp;gt; { &quot;datetime&quot; =&amp;gt; nil, &quot;timestamp&quot; =&amp;gt; nil, &quot;integer&quot; =&amp;gt; &quot;CCC&quot; }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Expect:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;=&amp;gt; { &quot;datetime&quot; =&amp;gt; &quot;AAA&quot;, &quot;timestamp&quot; =&amp;gt; &quot;BBB&quot;, &quot;integer&quot; =&amp;gt; &quot;CCC }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;BTW, the result is right if we disable time zone support:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Base.time_zone_aware_attributes = false
e = Event.new( :datetime =&amp;gt; &quot;AAA&quot;, :timestamp =&amp;gt; &quot;BBB&quot;, :integer =&amp;gt; &quot;CCC&quot; )
e.attributes_before_type_cast
=&amp;gt; { &quot;datetime&quot; =&amp;gt; &quot;AAA&quot;, &quot;timestamp&quot; =&amp;gt; &quot;BBB&quot;, &quot;integer&quot; =&amp;gt; &quot;CCC }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-29T21:39:32+00:00</created-at>
      <creator-id type="integer">7382</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3630</number>
      <permalink>patch-activerecord-does-not-write-invalid-datetime-and-timestamp-data-when-enable-time-zone-support</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[PATCH] ActiveRecord does not write invalid datetime and timestamp data when enable time zone support</title>
      <updated-at type="datetime">2009-12-29T21:42:21+00:00</updated-at>
      <user-id type="integer">7382</user-id>
      <version type="integer">1</version>
      <user-name>ihower</user-name>
      <creator-name>ihower</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3630</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-29T21:46:33+00:00</created-at>
      <creator-id type="integer">7382</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3630</number>
      <permalink>patch-activerecord-does-not-write-invalid-datetime-and-timestamp-data-when-enable-time-zone-support</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable</tag>
      <title>[PATCH] ActiveRecord does not write invalid datetime and timestamp data when enable time zone support</title>
      <updated-at type="datetime">2009-12-29T21:46:36+00:00</updated-at>
      <user-id type="integer">7382</user-id>
      <version type="integer">2</version>
      <user-name>ihower</user-name>
      <creator-name>ihower</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3630</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-08T12:32:58+01:00</created-at>
      <creator-id type="integer">7382</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3630</number>
      <permalink>patch-activerecord-does-not-write-invalid-datetime-and-timestamp-data-when-enable-time-zone-support</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable</tag>
      <title>[PATCH] ActiveRecord does not write invalid datetime and timestamp data when enable time zone support</title>
      <updated-at type="datetime">2010-10-08T12:32:59+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>ihower</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3630</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>139ecc1093507d172ce59e4f495bb72aecc06b49</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-12-29T21:39:32+00:00</created-at>
      <filename>fix_missing_invalid_datatime_data.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">364225</id>
      <size type="integer">2526</size>
      <uploader-id type="integer">7382</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/364225/fix_missing_invalid_datatime_data.diff</url>
    </attachment>
  </attachments>
</ticket>
