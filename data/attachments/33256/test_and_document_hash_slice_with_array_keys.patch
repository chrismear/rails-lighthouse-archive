From adc752f9093b0acbe78f1f7e6bf918c4c23c65d6 Mon Sep 17 00:00:00 2001
From: MatthewRudy <MatthewRudyJacobs@gmail.com>
Date: Thu, 17 Jul 2008 13:58:42 +0100
Subject: [PATCH] added extra tests to ensure Hash#slice works with an array as a key

---
 activesupport/test/core_ext/hash_ext_test.rb |   21 +++++++++++++++++++++
 1 files changed, 21 insertions(+), 0 deletions(-)

diff --git a/activesupport/test/core_ext/hash_ext_test.rb b/activesupport/test/core_ext/hash_ext_test.rb
index 5d2053f..268afcf 100644
--- a/activesupport/test/core_ext/hash_ext_test.rb
+++ b/activesupport/test/core_ext/hash_ext_test.rb
@@ -306,6 +306,27 @@ class HashExtTest < Test::Unit::TestCase
     assert_equal expected, original
   end
 
+  def test_slice_with_an_array_key
+    original = { :a => 'x', :b => 'y', :c => 10, [:a, :b] => "an array key" }
+    expected = { [:a, :b] => "an array key", :c => 10 }
+
+    # Should return a new hash with only the given keys when given an array key.
+    assert_equal expected, original.slice([:a, :b], :c)
+    assert_not_equal expected, original
+
+    # Should replace the hash with only the given keys when given an array key.
+    assert_equal expected, original.slice!([:a, :b], :c)
+    assert_equal expected, original
+  end
+
+  def test_slice_with_splatted_keys
+    original = { :a => 'x', :b => 'y', :c => 10, [:a, :b] => "an array key" }
+    expected = { :a => 'x', :b => "y" }
+
+    # Should grab each of the splatted keys.
+    assert_equal expected, original.slice(*[:a, :b])
+  end
+
   def test_indifferent_slice
     original = { :a => 'x', :b => 'y', :c => 10 }.with_indifferent_access
     expected = { :a => 'x', :b => 'y' }.with_indifferent_access
-- 
1.5.5.3


From a7f500dfad1302fb8595b136606838653e06f1ca Mon Sep 17 00:00:00 2001
From: MatthewRudy <MatthewRudyJacobs@gmail.com>
Date: Thu, 17 Jul 2008 15:07:43 +0100
Subject: [PATCH] document how to use splat for Hash#slice

---
 .../lib/active_support/core_ext/hash/slice.rb      |    5 +++++
 1 files changed, 5 insertions(+), 0 deletions(-)

diff --git a/activesupport/lib/active_support/core_ext/hash/slice.rb b/activesupport/lib/active_support/core_ext/hash/slice.rb
index d3837d2..735c9f7 100644
--- a/activesupport/lib/active_support/core_ext/hash/slice.rb
+++ b/activesupport/lib/active_support/core_ext/hash/slice.rb
@@ -9,6 +9,11 @@ module ActiveSupport #:nodoc:
       #   end
       #
       #   search(options.slice(:mass, :velocity, :time))
+      #
+      # If you have an array of keys you want to limit to, you should splat them:
+      #
+      #   valid_keys = [:mass, :velocity, :time]
+      #   search(options.slice(*valid_keys))
       module Slice
         # Returns a new hash with only the given keys.
         def slice(*keys)
-- 
1.5.5.3

