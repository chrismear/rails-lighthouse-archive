<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">14998</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-08T23:12:06+00:00</created-at>
  <creator-id type="integer">46484</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3812</number>
  <permalink>collection-root-for-enumerable-to_json</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;json to_json&quot;</tag>
  <title>Collection Root for Enumerable to_json </title>
  <updated-at type="datetime">2010-11-08T23:12:06+00:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">4</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>Stephen Blackstone</creator-name>
  <assigned-user-name>Ryan Bigg</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3812</url>
  <priority-name nil="true"></priority-name>
  <original-body>Came across a problem today working with YUI which seems to *insist* that an array of JSON objects has a defined root which points to the collection

Starting from here:
        render :json =&gt; @transactions.to_json(:only =&gt; [:id, :scheduled],
                                              :methods =&gt; [:amount_total, :overview_status],
                                              :include =&gt; {
                                                 :actor =&gt; { :methods =&gt; :display_name },
                                                 :fund  =&gt; { :only =&gt; [:id,:name]      }
                                             })


I wanted to create { &quot;results&quot; : [ ... regular array of objects ... ] }


One might be tempted to try 

render :json =&gt; { :results =&gt; @transactions.to_jsoin } 

...but this fails because render :json will turn it into a string!


You Could do this..

render :json =&gt; { :results =&gt; @transactions  }

... but then you loose the ability to pass filtering options to to_json.



Another solution is to do something like

render :text =&gt; &quot;{ \&quot;results\&quot; : #{@transactions.to_json} }&quot; 

....but that makes me want to throw up in my mouth a little.


So I propose that we add a feature to to_json for arrays called :collection_root.  


        render :json =&gt; @transactions.to_json(:collection_root =&gt; &quot;results&quot;,
                                              :only =&gt; [:id, :scheduled],
                                              :methods =&gt; [:amount_total, :overview_status],
                                              :include =&gt; {
                                                 :actor =&gt; { :methods =&gt; :display_name },
                                                 :fund  =&gt; { :only =&gt; [:id,:name]      }
                                             })

Which would then generate:

{ 'results' : [ blah, blah,blah] }

and your json-created objects can then obey your filtering.


Note:  Patch is against Rail3 pre and includes test case.</original-body>
  <latest-body>Came across a problem today working with YUI which seems to *insist* that an array of JSON objects has a defined root which points to the collection

Starting from here:
        render :json =&gt; @transactions.to_json(:only =&gt; [:id, :scheduled],
                                              :methods =&gt; [:amount_total, :overview_status],
                                              :include =&gt; {
                                                 :actor =&gt; { :methods =&gt; :display_name },
                                                 :fund  =&gt; { :only =&gt; [:id,:name]      }
                                             })


I wanted to create { &quot;results&quot; : [ ... regular array of objects ... ] }


One might be tempted to try 

render :json =&gt; { :results =&gt; @transactions.to_jsoin } 

...but this fails because render :json will turn it into a string!


You Could do this..

render :json =&gt; { :results =&gt; @transactions  }

... but then you loose the ability to pass filtering options to to_json.



Another solution is to do something like

render :text =&gt; &quot;{ \&quot;results\&quot; : #{@transactions.to_json} }&quot; 

....but that makes me want to throw up in my mouth a little.


So I propose that we add a feature to to_json for arrays called :collection_root.  


        render :json =&gt; @transactions.to_json(:collection_root =&gt; &quot;results&quot;,
                                              :only =&gt; [:id, :scheduled],
                                              :methods =&gt; [:amount_total, :overview_status],
                                              :include =&gt; {
                                                 :actor =&gt; { :methods =&gt; :display_name },
                                                 :fund  =&gt; { :only =&gt; [:id,:name]      }
                                             })

Which would then generate:

{ 'results' : [ blah, blah,blah] }

and your json-created objects can then obey your filtering.


Note:  Patch is against Rail3 pre and includes test case.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Came across a problem today working with YUI which seems to
&lt;em&gt;insist&lt;/em&gt; that an array of JSON objects has a defined root
which points to the collection&lt;/p&gt;
&lt;p&gt;Starting from here:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    render :json =&amp;gt; @transactions.to_json(:only =&amp;gt; [:id, :scheduled],
                                          :methods =&amp;gt; [:amount_total, :overview_status],
                                          :include =&amp;gt; {
                                             :actor =&amp;gt; { :methods =&amp;gt; :display_name },
                                             :fund  =&amp;gt; { :only =&amp;gt; [:id,:name]      }
                                         })&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I wanted to create { &quot;results&quot; : [ ... regular array of objects
... ] }&lt;/p&gt;
&lt;p&gt;One might be tempted to try&lt;/p&gt;
&lt;p&gt;render :json =&amp;gt; { :results =&amp;gt; @transactions.to_jsoin }&lt;/p&gt;
&lt;p&gt;...but this fails because render :json will turn it into a
string!&lt;/p&gt;
&lt;p&gt;You Could do this..&lt;/p&gt;
&lt;p&gt;render :json =&amp;gt; { :results =&amp;gt; @transactions }&lt;/p&gt;
&lt;p&gt;... but then you loose the ability to pass filtering options to
to_json.&lt;/p&gt;
&lt;p&gt;Another solution is to do something like&lt;/p&gt;
&lt;p&gt;render :text =&amp;gt; &quot;{ &quot;results&quot; : #{@transactions.to_json}
}&quot;&lt;/p&gt;
&lt;p&gt;....but that makes me want to throw up in my mouth a little.&lt;/p&gt;
&lt;p&gt;So I propose that we add a feature to to_json for arrays called
:collection_root.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    render :json =&amp;gt; @transactions.to_json(:collection_root =&amp;gt; &quot;results&quot;,
                                          :only =&amp;gt; [:id, :scheduled],
                                          :methods =&amp;gt; [:amount_total, :overview_status],
                                          :include =&amp;gt; {
                                             :actor =&amp;gt; { :methods =&amp;gt; :display_name },
                                             :fund  =&amp;gt; { :only =&amp;gt; [:id,:name]      }
                                         })&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Which would then generate:&lt;/p&gt;
&lt;p&gt;{ 'results' : [ blah, blah,blah] }&lt;/p&gt;
&lt;p&gt;and your json-created objects can then obey your filtering.&lt;/p&gt;
&lt;p&gt;Note: Patch is against Rail3 pre and includes test case.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Came across a problem today working with YUI which seems to *insist* that an array of JSON objects has a defined root which points to the collection

Starting from here:
        render :json =&gt; @transactions.to_json(:only =&gt; [:id, :scheduled],
                                              :methods =&gt; [:amount_total, :overview_status],
                                              :include =&gt; {
                                                 :actor =&gt; { :methods =&gt; :display_name },
                                                 :fund  =&gt; { :only =&gt; [:id,:name]      }
                                             })


I wanted to create { &quot;results&quot; : [ ... regular array of objects ... ] }


One might be tempted to try 

render :json =&gt; { :results =&gt; @transactions.to_jsoin } 

...but this fails because render :json will turn it into a string!


You Could do this..

render :json =&gt; { :results =&gt; @transactions  }

... but then you loose the ability to pass filtering options to to_json.



Another solution is to do something like

render :text =&gt; &quot;{ \&quot;results\&quot; : #{@transactions.to_json} }&quot; 

....but that makes me want to throw up in my mouth a little.


So I propose that we add a feature to to_json for arrays called :collection_root.  


        render :json =&gt; @transactions.to_json(:collection_root =&gt; &quot;results&quot;,
                                              :only =&gt; [:id, :scheduled],
                                              :methods =&gt; [:amount_total, :overview_status],
                                              :include =&gt; {
                                                 :actor =&gt; { :methods =&gt; :display_name },
                                                 :fund  =&gt; { :only =&gt; [:id,:name]      }
                                             })

Which would then generate:

{ 'results' : [ blah, blah,blah] }

and your json-created objects can then obey your filtering.


Note:  Patch is against Rail3 pre and includes test case.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Came across a problem today working with YUI which seems to
&lt;em&gt;insist&lt;/em&gt; that an array of JSON objects has a defined root
which points to the collection&lt;/p&gt;
&lt;p&gt;Starting from here:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    render :json =&amp;gt; @transactions.to_json(:only =&amp;gt; [:id, :scheduled],
                                          :methods =&amp;gt; [:amount_total, :overview_status],
                                          :include =&amp;gt; {
                                             :actor =&amp;gt; { :methods =&amp;gt; :display_name },
                                             :fund  =&amp;gt; { :only =&amp;gt; [:id,:name]      }
                                         })&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I wanted to create { &quot;results&quot; : [ ... regular array of objects
... ] }&lt;/p&gt;
&lt;p&gt;One might be tempted to try&lt;/p&gt;
&lt;p&gt;render :json =&amp;gt; { :results =&amp;gt; @transactions.to_jsoin }&lt;/p&gt;
&lt;p&gt;...but this fails because render :json will turn it into a
string!&lt;/p&gt;
&lt;p&gt;You Could do this..&lt;/p&gt;
&lt;p&gt;render :json =&amp;gt; { :results =&amp;gt; @transactions }&lt;/p&gt;
&lt;p&gt;... but then you loose the ability to pass filtering options to
to_json.&lt;/p&gt;
&lt;p&gt;Another solution is to do something like&lt;/p&gt;
&lt;p&gt;render :text =&amp;gt; &quot;{ &quot;results&quot; : #{@transactions.to_json}
}&quot;&lt;/p&gt;
&lt;p&gt;....but that makes me want to throw up in my mouth a little.&lt;/p&gt;
&lt;p&gt;So I propose that we add a feature to to_json for arrays called
:collection_root.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    render :json =&amp;gt; @transactions.to_json(:collection_root =&amp;gt; &quot;results&quot;,
                                          :only =&amp;gt; [:id, :scheduled],
                                          :methods =&amp;gt; [:amount_total, :overview_status],
                                          :include =&amp;gt; {
                                             :actor =&amp;gt; { :methods =&amp;gt; :display_name },
                                             :fund  =&amp;gt; { :only =&amp;gt; [:id,:name]      }
                                         })&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Which would then generate:&lt;/p&gt;
&lt;p&gt;{ 'results' : [ blah, blah,blah] }&lt;/p&gt;
&lt;p&gt;and your json-created objects can then obey your filtering.&lt;/p&gt;
&lt;p&gt;Note: Patch is against Rail3 pre and includes test case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-29T22:56:12+00:00</created-at>
      <creator-id type="integer">46484</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3812</number>
      <permalink>collection-root-for-enumerable-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;json to_json&quot;</tag>
      <title>Collection Root for Enumerable to_json </title>
      <updated-at type="datetime">2010-01-29T23:11:47+00:00</updated-at>
      <user-id type="integer">46484</user-id>
      <version type="integer">1</version>
      <user-name>Stephen Blackstone</user-name>
      <creator-name>Stephen Blackstone</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3812</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Please nevermind this patch - this issue is dealt with in 3.0 with the .as_json infrastructure.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please nevermind this patch - this issue is dealt with in 3.0
with the .as_json infrastructure.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-09T16:33:05+00:00</created-at>
      <creator-id type="integer">46484</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3812</number>
      <permalink>collection-root-for-enumerable-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;json to_json&quot;</tag>
      <title>Collection Root for Enumerable to_json </title>
      <updated-at type="datetime">2010-02-09T16:33:09+00:00</updated-at>
      <user-id type="integer">46484</user-id>
      <version type="integer">2</version>
      <user-name>Stephen Blackstone</user-name>
      <creator-name>Stephen Blackstone</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3812</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-15T22:22:25+01:00</created-at>
      <creator-id type="integer">46484</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3812</number>
      <permalink>collection-root-for-enumerable-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;json to_json&quot;</tag>
      <title>Collection Root for Enumerable to_json </title>
      <updated-at type="datetime">2010-04-15T22:22:29+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">3</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Stephen Blackstone</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3812</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Fixed in 3.0.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fixed in 3.0.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-15T22:28:08+01:00</created-at>
      <creator-id type="integer">46484</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3812</number>
      <permalink>collection-root-for-enumerable-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;json to_json&quot;</tag>
      <title>Collection Root for Enumerable to_json </title>
      <updated-at type="datetime">2010-04-15T22:28:10+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">4</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Stephen Blackstone</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3812</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>ca can &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega watches&lt;/a&gt;&lt;/b&gt; have is definitely as &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/collection/baume-mercier-diamant.html&quot;&gt;Baume Mercier diamant watches&lt;/a&gt;&lt;/b&gt; powerful as that of &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/watches/longines-classic-watch-9-mens-watch-2965-2180.html&quot;&gt;Longines Longines classic classic 9 mens-2965&lt;/a&gt;&lt;/b&gt; the original. Because of &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/watches/chopard-happy-sport-diamond-ladies-watch-288965-23w-2431-1588.html&quot;&gt;Chopard Happy Sport Happy Sport Diamond Ladies 288965-23W-2431&lt;/a&gt;&lt;/b&gt; their increase in technolo &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/watches/longines-hydro-conquest-quartz-mens-watch-l3-647-4-56-6-3077-2305.html&quot;&gt;fake Hydro Conquest Quartz Mens L3.647.4.56.6-3077&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/collection/girard-perregaux-girard-perregaux.html&quot;&gt;cheap Girard-Perregaux Girard-Perregaux watches&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega watches sale&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega replica&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/collection/concord-watches.html&quot;&gt;Concord watches&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;ca can &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega
watches&lt;/a&gt;&lt;/b&gt; have is definitely as &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/collection/baume-mercier-diamant.html&quot;&gt;
Baume Mercier diamant watches&lt;/a&gt;&lt;/b&gt; powerful as that of
&lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/watches/longines-classic-watch-9-mens-watch-2965-2180.html&quot;&gt;
Longines Longines classic classic 9 mens-2965&lt;/a&gt;&lt;/b&gt; the original.
Because of &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/watches/chopard-happy-sport-diamond-ladies-watch-288965-23w-2431-1588.html&quot;&gt;
Chopard Happy Sport Happy Sport Diamond Ladies
288965-23W-2431&lt;/a&gt;&lt;/b&gt; their increase in technolo &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/watches/longines-hydro-conquest-quartz-mens-watch-l3-647-4-56-6-3077-2305.html&quot;&gt;
fake Hydro Conquest Quartz Mens L3.647.4.56.6-3077&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/collection/girard-perregaux-girard-perregaux.html&quot;&gt;
cheap Girard-Perregaux Girard-Perregaux watches&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com&quot;&gt;omega watches sale&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega
replica&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/collection/concord-watches.html&quot;&gt;
Concord watches&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com&quot;&gt;omega watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T08:10:22+01:00</created-at>
      <creator-id type="integer">46484</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3812</number>
      <permalink>collection-root-for-enumerable-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;json to_json&quot;</tag>
      <title>Collection Root for Enumerable to_json </title>
      <updated-at type="datetime">2010-07-21T01:46:04+01:00</updated-at>
      <user-id type="integer">107771</user-id>
      <version type="integer">5</version>
      <user-name>zhuzhu</user-name>
      <creator-name>Stephen Blackstone</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3812</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:16:28+00:00</created-at>
      <creator-id type="integer">46484</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3812</number>
      <permalink>collection-root-for-enumerable-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;json to_json&quot;</tag>
      <title>Collection Root for Enumerable to_json </title>
      <updated-at type="datetime">2010-11-08T23:12:06+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">6</version>
      <user-name>jim123456</user-name>
      <creator-name>Stephen Blackstone</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3812</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4962c98da29658bb99e45901a53bf4d90a992625</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-29T22:56:12+00:00</created-at>
      <filename>collection_to_json.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">395464</id>
      <size type="integer">1348</size>
      <uploader-id type="integer">46484</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/395464/collection_to_json.patch</url>
    </attachment>
  </attachments>
</ticket>
