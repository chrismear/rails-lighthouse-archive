<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-04T14:37:43+01:00</created-at>
  <creator-id type="integer">64313</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5756</number>
  <permalink>activerecord-fails-to-handle-to_many-relations-sanely-during-myarmodelnew</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>ActiveRecord fails to handle to_many relations sanely during MyArModel.new()</title>
  <updated-at type="datetime">2011-02-02T16:33:52+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">9</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>John Franklin</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5756</url>
  <priority-name>Low</priority-name>
  <original-body>Rails can create XML such as this:

    &lt;my-ar-model&gt;
        &lt;foo type='float'&gt;124.0&lt;/foo&gt;
        &lt;bar type='float'&gt;0.0&lt;/bar&gt;
        &lt;created-at type='datetime'&gt;2010-10-04T10:50:59Z&lt;/created-at&gt;
        &lt;id type='integer'&gt;23&lt;/id&gt;
        &lt;updated-at type='datetime'&gt;2010-10-04T10:50:59Z&lt;/updated-at&gt;
        &lt;images type='array'&gt;
            &lt;image&gt;
                &lt;id type='integer'&gt;15&lt;/id&gt;
            &lt;/image&gt;
            &lt;image&gt;
                &lt;id type='integer'&gt;16&lt;/id&gt;
            &lt;/image&gt;
            &lt;image&gt;
                &lt;id type='integer'&gt;17&lt;/id&gt;
            &lt;/image&gt;
        &lt;/images&gt;
    &lt;/my-ar-model&gt;

Feed it back into Rails, and it'll create a hash like:

    {&quot;my-ar-model&quot;=&gt;{&quot;foo&quot;=&gt;124.0, &quot;bar&quot;=&gt;0.0, &quot;images&quot;=&gt;[{&quot;id&quot;=&gt;15},{&quot;id&quot;=&gt;16},{&quot;id&quot;=&gt;17}], ...}

Yes, there are bits left out.  The hash for the images to_many relation is at issue.  When using this hash to create a new AR record, this dies with the following (partial) backtrace:

    ActiveRecord::AssociationTypeMismatch (Image(#70247453816860) expected, got HashWithIndifferentAccess(#70247494361020)):
        /vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:256:in `raise_on_type_mismatch'
        /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `replace'
        /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `each'
        /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `replace'
        /vendor/rails/activerecord/lib/active_record/associations.rb:1322:in `images='
        /vendor/rails/activerecord/lib/active_record/base.rb:2589:in `send'
        /vendor/rails/activerecord/lib/active_record/base.rb:2589:in `attributes='
        /vendor/rails/activerecord/lib/active_record/base.rb:2585:in `each'


The expected behavior is for Rails look up the Images by ID and add them to MyArModel's : images to_many relationship.

Environment:
Ubuntu 9.10 (using Ubuntu's ruby1.8 and rails packages)
Ruby 1.8
Rails 2.2.3</original-body>
  <latest-body>Rails can create XML such as this:

    &lt;my-ar-model&gt;
        &lt;foo type='float'&gt;124.0&lt;/foo&gt;
        &lt;bar type='float'&gt;0.0&lt;/bar&gt;
        &lt;created-at type='datetime'&gt;2010-10-04T10:50:59Z&lt;/created-at&gt;
        &lt;id type='integer'&gt;23&lt;/id&gt;
        &lt;updated-at type='datetime'&gt;2010-10-04T10:50:59Z&lt;/updated-at&gt;
        &lt;images type='array'&gt;
            &lt;image&gt;
                &lt;id type='integer'&gt;15&lt;/id&gt;
            &lt;/image&gt;
            &lt;image&gt;
                &lt;id type='integer'&gt;16&lt;/id&gt;
            &lt;/image&gt;
            &lt;image&gt;
                &lt;id type='integer'&gt;17&lt;/id&gt;
            &lt;/image&gt;
        &lt;/images&gt;
    &lt;/my-ar-model&gt;

Feed it back into Rails, and it'll create a hash like:

    {&quot;my-ar-model&quot;=&gt;{&quot;foo&quot;=&gt;124.0, &quot;bar&quot;=&gt;0.0, &quot;images&quot;=&gt;[{&quot;id&quot;=&gt;15},{&quot;id&quot;=&gt;16},{&quot;id&quot;=&gt;17}], ...}

Yes, there are bits left out.  The hash for the images to_many relation is at issue.  When using this hash to create a new AR record, this dies with the following (partial) backtrace:

    ActiveRecord::AssociationTypeMismatch (Image(#70247453816860) expected, got HashWithIndifferentAccess(#70247494361020)):
        /vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:256:in `raise_on_type_mismatch'
        /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `replace'
        /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `each'
        /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `replace'
        /vendor/rails/activerecord/lib/active_record/associations.rb:1322:in `images='
        /vendor/rails/activerecord/lib/active_record/base.rb:2589:in `send'
        /vendor/rails/activerecord/lib/active_record/base.rb:2589:in `attributes='
        /vendor/rails/activerecord/lib/active_record/base.rb:2585:in `each'


The expected behavior is for Rails look up the Images by ID and add them to MyArModel's : images to_many relationship.

Environment:
Ubuntu 9.10 (using Ubuntu's ruby1.8 and rails packages)
Ruby 1.8
Rails 2.2.3</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Rails can create XML such as this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;my-ar-model&amp;gt;
    &amp;lt;foo type='float'&amp;gt;124.0&amp;lt;/foo&amp;gt;
    &amp;lt;bar type='float'&amp;gt;0.0&amp;lt;/bar&amp;gt;
    &amp;lt;created-at type='datetime'&amp;gt;2010-10-04T10:50:59Z&amp;lt;/created-at&amp;gt;
    &amp;lt;id type='integer'&amp;gt;23&amp;lt;/id&amp;gt;
    &amp;lt;updated-at type='datetime'&amp;gt;2010-10-04T10:50:59Z&amp;lt;/updated-at&amp;gt;
    &amp;lt;images type='array'&amp;gt;
        &amp;lt;image&amp;gt;
            &amp;lt;id type='integer'&amp;gt;15&amp;lt;/id&amp;gt;
        &amp;lt;/image&amp;gt;
        &amp;lt;image&amp;gt;
            &amp;lt;id type='integer'&amp;gt;16&amp;lt;/id&amp;gt;
        &amp;lt;/image&amp;gt;
        &amp;lt;image&amp;gt;
            &amp;lt;id type='integer'&amp;gt;17&amp;lt;/id&amp;gt;
        &amp;lt;/image&amp;gt;
    &amp;lt;/images&amp;gt;
&amp;lt;/my-ar-model&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Feed it back into Rails, and it'll create a hash like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;{&quot;my-ar-model&quot;=&amp;gt;{&quot;foo&quot;=&amp;gt;124.0, &quot;bar&quot;=&amp;gt;0.0, &quot;images&quot;=&amp;gt;[{&quot;id&quot;=&amp;gt;15},{&quot;id&quot;=&amp;gt;16},{&quot;id&quot;=&amp;gt;17}], ...}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Yes, there are bits left out. The hash for the images to_many
relation is at issue. When using this hash to create a new AR
record, this dies with the following (partial) backtrace:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::AssociationTypeMismatch (Image(#70247453816860) expected, got HashWithIndifferentAccess(#70247494361020)):
    /vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:256:in `raise_on_type_mismatch'
    /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `replace'
    /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `each'
    /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `replace'
    /vendor/rails/activerecord/lib/active_record/associations.rb:1322:in `images='
    /vendor/rails/activerecord/lib/active_record/base.rb:2589:in `send'
    /vendor/rails/activerecord/lib/active_record/base.rb:2589:in `attributes='
    /vendor/rails/activerecord/lib/active_record/base.rb:2585:in `each'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The expected behavior is for Rails look up the Images by ID and
add them to MyArModel's : images to_many relationship.&lt;/p&gt;
&lt;p&gt;Environment:&lt;br&gt;
Ubuntu 9.10 (using Ubuntu's ruby1.8 and rails packages)&lt;br&gt;
Ruby 1.8&lt;br&gt;
Rails 2.2.3&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails can create XML such as this:

    &lt;my-ar-model&gt;
        &lt;foo type='float'&gt;124.0&lt;/foo&gt;
        &lt;bar type='float'&gt;0.0&lt;/bar&gt;
        &lt;created-at type='datetime'&gt;2010-10-04T10:50:59Z&lt;/created-at&gt;
        &lt;id type='integer'&gt;23&lt;/id&gt;
        &lt;updated-at type='datetime'&gt;2010-10-04T10:50:59Z&lt;/updated-at&gt;
        &lt;images type='array'&gt;
            &lt;image&gt;
                &lt;id type='integer'&gt;15&lt;/id&gt;
            &lt;/image&gt;
            &lt;image&gt;
                &lt;id type='integer'&gt;16&lt;/id&gt;
            &lt;/image&gt;
            &lt;image&gt;
                &lt;id type='integer'&gt;17&lt;/id&gt;
            &lt;/image&gt;
        &lt;/images&gt;
    &lt;/my-ar-model&gt;

Feed it back into Rails, and it'll create a hash like:

    {&quot;my-ar-model&quot;=&gt;{&quot;foo&quot;=&gt;124.0, &quot;bar&quot;=&gt;0.0, &quot;images&quot;=&gt;[{&quot;id&quot;=&gt;15},{&quot;id&quot;=&gt;16},{&quot;id&quot;=&gt;17}], ...}

Yes, there are bits left out.  The hash for the images to_many relation is at issue.  When using this hash to create a new AR record, this dies with the following (partial) backtrace:

    ActiveRecord::AssociationTypeMismatch (Image(#70247453816860) expected, got HashWithIndifferentAccess(#70247494361020)):
        /vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:256:in `raise_on_type_mismatch'
        /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `replace'
        /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `each'
        /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `replace'
        /vendor/rails/activerecord/lib/active_record/associations.rb:1322:in `images='
        /vendor/rails/activerecord/lib/active_record/base.rb:2589:in `send'
        /vendor/rails/activerecord/lib/active_record/base.rb:2589:in `attributes='
        /vendor/rails/activerecord/lib/active_record/base.rb:2585:in `each'


The expected behavior is for Rails look up the Images by ID and add them to MyArModel's : images to_many relationship.

Environment:
Ubuntu 9.10 (using Ubuntu's ruby1.8 and rails packages)
Ruby 1.8
Rails 2.2.3</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails can create XML such as this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;my-ar-model&amp;gt;
    &amp;lt;foo type='float'&amp;gt;124.0&amp;lt;/foo&amp;gt;
    &amp;lt;bar type='float'&amp;gt;0.0&amp;lt;/bar&amp;gt;
    &amp;lt;created-at type='datetime'&amp;gt;2010-10-04T10:50:59Z&amp;lt;/created-at&amp;gt;
    &amp;lt;id type='integer'&amp;gt;23&amp;lt;/id&amp;gt;
    &amp;lt;updated-at type='datetime'&amp;gt;2010-10-04T10:50:59Z&amp;lt;/updated-at&amp;gt;
    &amp;lt;images type='array'&amp;gt;
        &amp;lt;image&amp;gt;
            &amp;lt;id type='integer'&amp;gt;15&amp;lt;/id&amp;gt;
        &amp;lt;/image&amp;gt;
        &amp;lt;image&amp;gt;
            &amp;lt;id type='integer'&amp;gt;16&amp;lt;/id&amp;gt;
        &amp;lt;/image&amp;gt;
        &amp;lt;image&amp;gt;
            &amp;lt;id type='integer'&amp;gt;17&amp;lt;/id&amp;gt;
        &amp;lt;/image&amp;gt;
    &amp;lt;/images&amp;gt;
&amp;lt;/my-ar-model&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Feed it back into Rails, and it'll create a hash like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;{&quot;my-ar-model&quot;=&amp;gt;{&quot;foo&quot;=&amp;gt;124.0, &quot;bar&quot;=&amp;gt;0.0, &quot;images&quot;=&amp;gt;[{&quot;id&quot;=&amp;gt;15},{&quot;id&quot;=&amp;gt;16},{&quot;id&quot;=&amp;gt;17}], ...}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Yes, there are bits left out. The hash for the images to_many
relation is at issue. When using this hash to create a new AR
record, this dies with the following (partial) backtrace:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::AssociationTypeMismatch (Image(#70247453816860) expected, got HashWithIndifferentAccess(#70247494361020)):
    /vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:256:in `raise_on_type_mismatch'
    /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `replace'
    /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `each'
    /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:310:in `replace'
    /vendor/rails/activerecord/lib/active_record/associations.rb:1322:in `images='
    /vendor/rails/activerecord/lib/active_record/base.rb:2589:in `send'
    /vendor/rails/activerecord/lib/active_record/base.rb:2589:in `attributes='
    /vendor/rails/activerecord/lib/active_record/base.rb:2585:in `each'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The expected behavior is for Rails look up the Images by ID and
add them to MyArModel's : images to_many relationship.&lt;/p&gt;
&lt;p&gt;Environment:&lt;br&gt;
Ubuntu 9.10 (using Ubuntu's ruby1.8 and rails packages)&lt;br&gt;
Ruby 1.8&lt;br&gt;
Rails 2.2.3&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-04T14:37:43+01:00</created-at>
      <creator-id type="integer">64313</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5756</number>
      <permalink>activerecord-fails-to-handle-to_many-relations-sanely-during-myarmodelnew</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord from_xml hash new to_many</tag>
      <title>ActiveRecord fails to handle to_many relations sanely during MyArModel.new()</title>
      <updated-at type="datetime">2010-10-04T14:37:46+01:00</updated-at>
      <user-id type="integer">64313</user-id>
      <version type="integer">1</version>
      <user-name>John Franklin</user-name>
      <creator-name>John Franklin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5756</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think this should be marked as wontfix, but can you show us some code? That'll make it easier to understand and reproduce your problem. :)

Putting this one on needs-more-info for now.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think this should be marked as wontfix, but can you show us
some code? That'll make it easier to understand and reproduce your
problem. :)&lt;/p&gt;
&lt;p&gt;Putting this one on needs-more-info for now.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-06T16:58:36+01:00</created-at>
      <creator-id type="integer">64313</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5756</number>
      <permalink>activerecord-fails-to-handle-to_many-relations-sanely-during-myarmodelnew</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord from_xml hash new to_many</tag>
      <title>ActiveRecord fails to handle to_many relations sanely during MyArModel.new()</title>
      <updated-at type="datetime">2010-10-06T16:58:39+01:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">2</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>John Franklin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5756</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-11T10:58:06+01:00</created-at>
      <creator-id type="integer">64313</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord from_xml hash new to_many
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5756</number>
      <permalink>activerecord-fails-to-handle-to_many-relations-sanely-during-myarmodelnew</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag nil="true"></tag>
      <title>ActiveRecord fails to handle to_many relations sanely during MyArModel.new()</title>
      <updated-at type="datetime">2010-10-11T10:58:08+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">4</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>John Franklin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5756</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T08:25:36+01:00</created-at>
      <creator-id type="integer">64313</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5756</number>
      <permalink>activerecord-fails-to-handle-to_many-relations-sanely-during-myarmodelnew</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag nil="true"></tag>
      <title>ActiveRecord fails to handle to_many relations sanely during MyArModel.new()</title>
      <updated-at type="datetime">2010-10-19T08:25:38+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">6</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>John Franklin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5756</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>More info is coming, but obligations with hard deadlines are trumping.</body>
      <body-html>&lt;div&gt;&lt;p&gt;More info is coming, but obligations with hard deadlines are
trumping.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-20T16:15:13+01:00</created-at>
      <creator-id type="integer">64313</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5756</number>
      <permalink>activerecord-fails-to-handle-to_many-relations-sanely-during-myarmodelnew</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag nil="true"></tag>
      <title>ActiveRecord fails to handle to_many relations sanely during MyArModel.new()</title>
      <updated-at type="datetime">2010-10-20T16:15:15+01:00</updated-at>
      <user-id type="integer">64313</user-id>
      <version type="integer">7</version>
      <user-name>John Franklin</user-name>
      <creator-name>John Franklin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5756</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:28:35+00:00</created-at>
      <creator-id type="integer">64313</creator-id>
      <diffable-attributes type="yaml">--- 
:state: needs-more-info
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5756</number>
      <permalink>activerecord-fails-to-handle-to_many-relations-sanely-during-myarmodelnew</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>ActiveRecord fails to handle to_many relations sanely during MyArModel.new()</title>
      <updated-at type="datetime">2011-02-02T16:33:28+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>John Franklin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5756</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:28:37+00:00</created-at>
      <creator-id type="integer">64313</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5756</number>
      <permalink>activerecord-fails-to-handle-to_many-relations-sanely-during-myarmodelnew</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>ActiveRecord fails to handle to_many relations sanely during MyArModel.new()</title>
      <updated-at type="datetime">2011-02-02T16:33:52+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>John Franklin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5756</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
