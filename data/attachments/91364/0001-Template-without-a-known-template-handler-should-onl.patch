From 99c9aa5e5157da2f36a0bddeaedac00482c26254 Mon Sep 17 00:00:00 2001
From: thedarkone <nobody>
Date: Sat, 21 Feb 2009 01:14:29 +0100
Subject: [PATCH] Template without a known template handler should only be reachable through its exact path. [#2027 state:resolved]

---
 actionpack/lib/action_view/template.rb             |   23 +++++++++++++-------
 .../fixtures/test/malformed/malformed.en.html.erb~ |    1 +
 .../test/fixtures/test/malformed/malformed.erb~    |    1 +
 .../fixtures/test/malformed/malformed.html.erb~    |    1 +
 actionpack/test/template/render_test.rb            |   10 ++++++++
 5 files changed, 28 insertions(+), 8 deletions(-)
 create mode 100644 actionpack/test/fixtures/test/malformed/malformed.en.html.erb~
 create mode 100644 actionpack/test/fixtures/test/malformed/malformed.erb~
 create mode 100644 actionpack/test/fixtures/test/malformed/malformed.html.erb~

diff --git a/actionpack/lib/action_view/template.rb b/actionpack/lib/action_view/template.rb
index ea838b9..0dd3a7e 100644
--- a/actionpack/lib/action_view/template.rb
+++ b/actionpack/lib/action_view/template.rb
@@ -103,12 +103,12 @@ module ActionView #:nodoc:
       @@exempt_from_layout.merge(regexps)
     end
 
-    attr_accessor :filename, :load_path, :base_path
+    attr_accessor :template_path, :filename, :load_path, :base_path
     attr_accessor :locale, :name, :format, :extension
     delegate :to_s, :to => :path
 
     def initialize(template_path, load_path)
-      template_path = template_path.dup
+      @template_path = template_path.dup
       @load_path, @filename = load_path, File.join(load_path, template_path)
       @base_path, @name, @locale, @format, @extension = split(template_path)
       @base_path.to_s.gsub!(/\/$/, '') # Push to split method
@@ -119,13 +119,20 @@ module ActionView #:nodoc:
 
     def accessible_paths
       paths = []
-      paths << path
-      paths << path_without_extension
-      if multipart?
-        formats = format.split(".")
-        paths << "#{path_without_format_and_extension}.#{formats.first}"
-        paths << "#{path_without_format_and_extension}.#{formats.second}"
+
+      if valid_extension?(extension)
+        paths << path
+        paths << path_without_extension
+        if multipart?
+          formats = format.split(".")
+          paths << "#{path_without_format_and_extension}.#{formats.first}"
+          paths << "#{path_without_format_and_extension}.#{formats.second}"
+        end
+      else
+        # template without explicit template handler should only be reachable through its exact path
+        paths << template_path
       end
+
       paths
     end
 
diff --git a/actionpack/test/fixtures/test/malformed/malformed.en.html.erb~ b/actionpack/test/fixtures/test/malformed/malformed.en.html.erb~
new file mode 100644
index 0000000..d009950
--- /dev/null
+++ b/actionpack/test/fixtures/test/malformed/malformed.en.html.erb~
@@ -0,0 +1 @@
+Don't render me!
\ No newline at end of file
diff --git a/actionpack/test/fixtures/test/malformed/malformed.erb~ b/actionpack/test/fixtures/test/malformed/malformed.erb~
new file mode 100644
index 0000000..d009950
--- /dev/null
+++ b/actionpack/test/fixtures/test/malformed/malformed.erb~
@@ -0,0 +1 @@
+Don't render me!
\ No newline at end of file
diff --git a/actionpack/test/fixtures/test/malformed/malformed.html.erb~ b/actionpack/test/fixtures/test/malformed/malformed.html.erb~
new file mode 100644
index 0000000..d009950
--- /dev/null
+++ b/actionpack/test/fixtures/test/malformed/malformed.html.erb~
@@ -0,0 +1 @@
+Don't render me!
\ No newline at end of file
diff --git a/actionpack/test/template/render_test.rb b/actionpack/test/template/render_test.rb
index 107c625..de7fa3d 100644
--- a/actionpack/test/template/render_test.rb
+++ b/actionpack/test/template/render_test.rb
@@ -224,6 +224,16 @@ module RenderTestCases
     assert_equal 'source: Hello, <%= name %>!; locals: {:name=>"Josh"}', @view.render(:inline => "Hello, <%= name %>!", :locals => { :name => "Josh" }, :type => :foo)
   end
 
+  def test_render_ignores_templates_with_malformed_template_handlers
+    %w(malformed malformed.erb malformed.html.erb malformed.en.html.erb).each do |name|
+      assert_raise(ActionView::MissingTemplate) { @view.render(:file => "test/malformed/#{name}") }
+    end
+  end
+
+  def test_template_with_malformed_template_handler_is_reachable_trough_its_exact_filename
+    assert_equal "Don't render me!", @view.render(:file => 'test/malformed/malformed.html.erb~')
+  end
+
   def test_render_with_layout
     assert_equal %(<title></title>\nHello world!\n),
       @view.render(:file => "test/hello_world.erb", :layout => "layouts/yield")
-- 
1.6.0.1

