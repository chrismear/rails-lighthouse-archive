<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-18T19:20:28+01:00</created-at>
  <creator-id type="integer">17499</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6715</number>
  <permalink>activerecordobserverobserved_classes-doesnt-get-redefined-properly</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>observer observers &quot;rails3 observers&quot;</tag>
  <title>ActiveRecord::Observer.observed_classes doesn't get redefined properly</title>
  <updated-at type="datetime">2011-04-18T19:20:30+01:00</updated-at>
  <user-id type="integer">17499</user-id>
  <version type="integer">1</version>
  <user-name>Grant Hutchins</user-name>
  <creator-name>Grant Hutchins</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6715</url>
  <priority-name nil="true"></priority-name>
  <original-body>@@@ ruby

class Foo &lt; ActiveRecord::Base
end

class BarObserver &lt; ActiveRecord::Observer
  observe :foo
end

ruby-1.8.7-p174 &gt; BarObserver.observed_classes
NameError: uninitialized constant Bar
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:113:in `constantize'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:112:in `each'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:112:in `constantize'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/core_ext/string/inflections.rb:43:in `constantize'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activemodel-3.0.6/lib/active_model/observing.rb:182:in `observed_class'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activemodel-3.0.6/lib/active_model/observing.rb:175:in `observed_classes'
	from (irb):1

@@@

By reading the implementation at https://github.com/rails/rails/blob/v3.0.6/activemodel/lib/active_model/observing.rb#L158-163 I would expect BarObserver's observed_classes method to have been redefined to return [Foo] without trying to find the non-existant Bar class.</original-body>
  <latest-body>@@@ ruby

class Foo &lt; ActiveRecord::Base
end

class BarObserver &lt; ActiveRecord::Observer
  observe :foo
end

ruby-1.8.7-p174 &gt; BarObserver.observed_classes
NameError: uninitialized constant Bar
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:113:in `constantize'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:112:in `each'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:112:in `constantize'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/core_ext/string/inflections.rb:43:in `constantize'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activemodel-3.0.6/lib/active_model/observing.rb:182:in `observed_class'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activemodel-3.0.6/lib/active_model/observing.rb:175:in `observed_classes'
	from (irb):1

@@@

By reading the implementation at https://github.com/rails/rails/blob/v3.0.6/activemodel/lib/active_model/observing.rb#L158-163 I would expect BarObserver's observed_classes method to have been redefined to return [Foo] without trying to find the non-existant Bar class.</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class Foo &amp;lt; ActiveRecord::Base
end

class BarObserver &amp;lt; ActiveRecord::Observer
  observe :foo
end

ruby-1.8.7-p174 &amp;gt; BarObserver.observed_classes
NameError: uninitialized constant Bar
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:113:in `constantize'
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:112:in `each'
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:112:in `constantize'
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/core_ext/string/inflections.rb:43:in `constantize'
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activemodel-3.0.6/lib/active_model/observing.rb:182:in `observed_class'
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activemodel-3.0.6/lib/active_model/observing.rb:175:in `observed_classes'
    from (irb):1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;By reading the implementation at &lt;a href=
&quot;https://github.com/rails/rails/blob/v3.0.6/activemodel/lib/active_model/observing.rb#L158-163&quot;&gt;
https://github.com/rails/rails/blob/v3.0.6/activemodel/lib/active_m...&lt;/a&gt;
I would expect BarObserver's observed_classes method to have been
redefined to return &lt;a href=&quot;/projects/8994/changesets/Foo&quot; title=
&quot;Changeset [Foo]&quot;&gt;[Foo]&lt;/a&gt; without trying to find the non-existant
Bar class.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@ ruby

class Foo &lt; ActiveRecord::Base
end

class BarObserver &lt; ActiveRecord::Observer
  observe :foo
end

ruby-1.8.7-p174 &gt; BarObserver.observed_classes
NameError: uninitialized constant Bar
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:113:in `constantize'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:112:in `each'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:112:in `constantize'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/core_ext/string/inflections.rb:43:in `constantize'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activemodel-3.0.6/lib/active_model/observing.rb:182:in `observed_class'
	from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activemodel-3.0.6/lib/active_model/observing.rb:175:in `observed_classes'
	from (irb):1

@@@

By reading the implementation at https://github.com/rails/rails/blob/v3.0.6/activemodel/lib/active_model/observing.rb#L158-163 I would expect BarObserver's observed_classes method to have been redefined to return [Foo] without trying to find the non-existant Bar class.</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;
class Foo &amp;lt; ActiveRecord::Base
end

class BarObserver &amp;lt; ActiveRecord::Observer
  observe :foo
end

ruby-1.8.7-p174 &amp;gt; BarObserver.observed_classes
NameError: uninitialized constant Bar
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:113:in `constantize'
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:112:in `each'
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/inflector/methods.rb:112:in `constantize'
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activesupport-3.0.6/lib/active_support/core_ext/string/inflections.rb:43:in `constantize'
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activemodel-3.0.6/lib/active_model/observing.rb:182:in `observed_class'
    from /Users/pivotal/.rvm/gems/ruby-1.8.7-p174/gems/activemodel-3.0.6/lib/active_model/observing.rb:175:in `observed_classes'
    from (irb):1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;By reading the implementation at &lt;a href=
&quot;https://github.com/rails/rails/blob/v3.0.6/activemodel/lib/active_model/observing.rb#L158-163&quot;&gt;
https://github.com/rails/rails/blob/v3.0.6/activemodel/lib/active_m...&lt;/a&gt;
I would expect BarObserver's observed_classes method to have been
redefined to return &lt;a href=&quot;/projects/8994/changesets/Foo&quot; title=
&quot;Changeset [Foo]&quot;&gt;[Foo]&lt;/a&gt; without trying to find the non-existant
Bar class.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-18T19:20:28+01:00</created-at>
      <creator-id type="integer">17499</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6715</number>
      <permalink>activerecordobserverobserved_classes-doesnt-get-redefined-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>observer observers &quot;rails3 observers&quot;</tag>
      <title>ActiveRecord::Observer.observed_classes doesn't get redefined properly</title>
      <updated-at type="datetime">2011-04-18T19:20:30+01:00</updated-at>
      <user-id type="integer">17499</user-id>
      <version type="integer">1</version>
      <user-name>Grant Hutchins</user-name>
      <creator-name>Grant Hutchins</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6715</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
