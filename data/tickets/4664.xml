<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-22T03:07:01+01:00</created-at>
  <creator-id type="integer">100241</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4664</number>
  <permalink>inconsistent-escaping-in-xml-rendering</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;xml rendering escaping partial xss&quot;</tag>
  <title>Inconsistent escaping in xml rendering</title>
  <updated-at type="datetime">2011-02-02T17:24:55+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Elijah Smith</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4664</url>
  <priority-name nil="true"></priority-name>
  <original-body>_foo.xml.builder:
@@@ ruby
xml.script('alert(&quot;Pwned&quot;);')
@@@

index.html.erb:
@@@ ruby
&lt;%= render :partial=&gt;'foo.xml' %&gt;
&lt;%= render :partial=&gt;'foo.xml', :collection=&gt;[{}] %&gt;
@@@

output:
@@@ html
&amp;lt;script&amp;gt;alert(&amp;quot;Pwned&amp;quot;);&amp;lt;/script&amp;gt;
&lt;script&gt;alert(&quot;Pwned&quot;);&lt;/script&gt; 
@@@


what's happening is that the second render call is triggering the render_collection codepath, which isn't returning the XML escaped like the first call is.

I guess I'm not even sure which behavior is preferable but consistency would be good.  

I wish I could give more in terms of solution &amp; testing but this is about as far as my knowledge goes.</original-body>
  <latest-body>_foo.xml.builder:
@@@ ruby
xml.script('alert(&quot;Pwned&quot;);')
@@@

index.html.erb:
@@@ ruby
&lt;%= render :partial=&gt;'foo.xml' %&gt;
&lt;%= render :partial=&gt;'foo.xml', :collection=&gt;[{}] %&gt;
@@@

output:
@@@ html
&amp;lt;script&amp;gt;alert(&amp;quot;Pwned&amp;quot;);&amp;lt;/script&amp;gt;
&lt;script&gt;alert(&quot;Pwned&quot;);&lt;/script&gt; 
@@@


what's happening is that the second render call is triggering the render_collection codepath, which isn't returning the XML escaped like the first call is.

I guess I'm not even sure which behavior is preferable but consistency would be good.  

I wish I could give more in terms of solution &amp; testing but this is about as far as my knowledge goes.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;_foo.xml.builder:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;xml.script('alert(&quot;Pwned&quot;);')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;index.html.erb:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;lt;%= render :partial=&amp;gt;'foo.xml' %&amp;gt;
&amp;lt;%= render :partial=&amp;gt;'foo.xml', :collection=&amp;gt;[{}] %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;output:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;html&quot;&gt;&amp;amp;lt;script&amp;amp;gt;alert(&amp;amp;quot;Pwned&amp;amp;quot;);&amp;amp;lt;/script&amp;amp;gt;
&amp;lt;script&amp;gt;alert(&quot;Pwned&quot;);&amp;lt;/script&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;what's happening is that the second render call is triggering
the render_collection codepath, which isn't returning the XML
escaped like the first call is.&lt;/p&gt;
&lt;p&gt;I guess I'm not even sure which behavior is preferable but
consistency would be good.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I wish I could give more in terms of solution &amp;amp; testing but
this is about as far as my knowledge goes.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>_foo.xml.builder:
@@@ ruby
xml.script('alert(&quot;Pwned&quot;);')
@@@

index.html.erb:
@@@ ruby
&lt;%= render :partial=&gt;'foo.xml' %&gt;
&lt;%= render :partial=&gt;'foo.xml', :collection=&gt;[{}] %&gt;
@@@

output:
@@@ html
&amp;lt;script&amp;gt;alert(&amp;quot;Pwned&amp;quot;);&amp;lt;/script&amp;gt;
&lt;script&gt;alert(&quot;Pwned&quot;);&lt;/script&gt; 
@@@


what's happening is that the second render call is triggering the render_collection codepath, which isn't returning the XML escaped like the first call is.

I guess I'm not even sure which behavior is preferable but consistency would be good.  

I wish I could give more in terms of solution &amp; testing but this is about as far as my knowledge goes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;_foo.xml.builder:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;xml.script('alert(&quot;Pwned&quot;);')&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;index.html.erb:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;&amp;lt;%= render :partial=&amp;gt;'foo.xml' %&amp;gt;
&amp;lt;%= render :partial=&amp;gt;'foo.xml', :collection=&amp;gt;[{}] %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;output:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;html&quot;&gt;&amp;amp;lt;script&amp;amp;gt;alert(&amp;amp;quot;Pwned&amp;amp;quot;);&amp;amp;lt;/script&amp;amp;gt;
&amp;lt;script&amp;gt;alert(&quot;Pwned&quot;);&amp;lt;/script&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;what's happening is that the second render call is triggering
the render_collection codepath, which isn't returning the XML
escaped like the first call is.&lt;/p&gt;
&lt;p&gt;I guess I'm not even sure which behavior is preferable but
consistency would be good.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I wish I could give more in terms of solution &amp;amp; testing but
this is about as far as my knowledge goes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-22T03:07:01+01:00</created-at>
      <creator-id type="integer">100241</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4664</number>
      <permalink>inconsistent-escaping-in-xml-rendering</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;xml rendering escaping partial xss&quot;</tag>
      <title>Inconsistent escaping in xml rendering</title>
      <updated-at type="datetime">2010-05-22T03:07:06+01:00</updated-at>
      <user-id type="integer">100241</user-id>
      <version type="integer">1</version>
      <user-name>Elijah Smith</user-name>
      <creator-name>Elijah Smith</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4664</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:38:19+00:00</created-at>
      <creator-id type="integer">100241</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4664</number>
      <permalink>inconsistent-escaping-in-xml-rendering</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;xml rendering escaping partial xss&quot;</tag>
      <title>Inconsistent escaping in xml rendering</title>
      <updated-at type="datetime">2011-02-02T17:24:35+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Elijah Smith</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4664</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:38:20+00:00</created-at>
      <creator-id type="integer">100241</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4664</number>
      <permalink>inconsistent-escaping-in-xml-rendering</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;xml rendering escaping partial xss&quot;</tag>
      <title>Inconsistent escaping in xml rendering</title>
      <updated-at type="datetime">2011-02-02T17:24:55+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Elijah Smith</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4664</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
