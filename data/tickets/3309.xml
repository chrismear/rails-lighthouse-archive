<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-17T06:48:17+00:00</created-at>
  <creator-id type="integer">71642</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3309</number>
  <permalink>merging-joins-when-chaining-scopes-requires-same-case-in-join-expression</permalink>
  <priority type="integer">156141</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2.3.4 :joins activerecord named_scope patch</tag>
  <title>[PATCH] Merging JOINs when chaining scopes requires same case in JOIN expression</title>
  <updated-at type="datetime">2011-03-30T21:23:47+01:00</updated-at>
  <user-id type="integer">143611</user-id>
  <version type="integer">5</version>
  <user-name>erik landerholm</user-name>
  <creator-name>Matthias</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3309</url>
  <priority-name nil="true"></priority-name>
  <original-body>Affects: 2.3.4

Symptoms:
When chaining two scopes which contain the exact same JOIN expression (same tables, same join columns), then the merge fails if the SQL keywords used in the join expression are not of the same case.

Steps to reproduce:
Model.scoped(:joins =&gt; &quot;JOIN x on a.id = b.id&quot;).scoped(:joins =&gt; &quot;JOIN x ON a.id = b.id&quot;).scope(:find)
(note the different character case of the ON keyword)

Expected output:
=&gt; {:readonly=&gt;true, :joins=&gt;[&quot;JOIN x on a.id = b.id&quot;]}

Actual output:
=&gt; {:readonly=&gt;true, :joins=&gt;[&quot;JOIN x ON a.id = b.id&quot;, &quot;JOIN x on a.id = b.id&quot;]}

Solution:
do a case insensitive comparison on join expressions when merging scopes.</original-body>
  <latest-body>Affects: 2.3.4

Symptoms:
When chaining two scopes which contain the exact same JOIN expression (same tables, same join columns), then the merge fails if the SQL keywords used in the join expression are not of the same case.

Steps to reproduce:
Model.scoped(:joins =&gt; &quot;JOIN x on a.id = b.id&quot;).scoped(:joins =&gt; &quot;JOIN x ON a.id = b.id&quot;).scope(:find)
(note the different character case of the ON keyword)

Expected output:
=&gt; {:readonly=&gt;true, :joins=&gt;[&quot;JOIN x on a.id = b.id&quot;]}

Actual output:
=&gt; {:readonly=&gt;true, :joins=&gt;[&quot;JOIN x ON a.id = b.id&quot;, &quot;JOIN x on a.id = b.id&quot;]}

Solution:
do a case insensitive comparison on join expressions when merging scopes.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Affects: 2.3.4&lt;/p&gt;
&lt;p&gt;Symptoms:&lt;br&gt;
When chaining two scopes which contain the exact same JOIN
expression (same tables, same join columns), then the merge fails
if the SQL keywords used in the join expression are not of the same
case.&lt;/p&gt;
&lt;p&gt;Steps to reproduce:&lt;br&gt;
Model.scoped(:joins =&amp;gt; &quot;JOIN x on a.id = b.id&quot;).scoped(:joins
=&amp;gt; &quot;JOIN x ON a.id = b.id&quot;).scope(:find)&lt;br&gt;
(note the different character case of the ON keyword)&lt;/p&gt;
&lt;p&gt;Expected output:&lt;br&gt;
=&amp;gt; {:readonly=&amp;gt;true, :joins=&amp;gt;[&quot;JOIN x on a.id =
b.id&quot;]}&lt;/p&gt;
&lt;p&gt;Actual output:&lt;br&gt;
=&amp;gt; {:readonly=&amp;gt;true, :joins=&amp;gt;[&quot;JOIN x ON a.id = b.id&quot;,
&quot;JOIN x on a.id = b.id&quot;]}&lt;/p&gt;
&lt;p&gt;Solution:&lt;br&gt;
do a case insensitive comparison on join expressions when merging
scopes.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Affects: 2.3.4

Symptoms:
When chaining two scopes which contain the exact same JOIN expression (same tables, same join columns), then the merge fails if the SQL keywords used in the join expression are not of the same case.

Steps to reproduce:
Model.scoped(:joins =&gt; &quot;JOIN x on a.id = b.id&quot;).scoped(:joins =&gt; &quot;JOIN x ON a.id = b.id&quot;).scope(:find)
(note the different character case of the ON keyword)

Expected output:
=&gt; {:readonly=&gt;true, :joins=&gt;[&quot;JOIN x on a.id = b.id&quot;]}

Actual output:
=&gt; {:readonly=&gt;true, :joins=&gt;[&quot;JOIN x ON a.id = b.id&quot;, &quot;JOIN x on a.id = b.id&quot;]}

Solution:
do a case insensitive comparison on join expressions when merging scopes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Affects: 2.3.4&lt;/p&gt;
&lt;p&gt;Symptoms:&lt;br&gt;
When chaining two scopes which contain the exact same JOIN
expression (same tables, same join columns), then the merge fails
if the SQL keywords used in the join expression are not of the same
case.&lt;/p&gt;
&lt;p&gt;Steps to reproduce:&lt;br&gt;
Model.scoped(:joins =&amp;gt; &quot;JOIN x on a.id = b.id&quot;).scoped(:joins
=&amp;gt; &quot;JOIN x ON a.id = b.id&quot;).scope(:find)&lt;br&gt;
(note the different character case of the ON keyword)&lt;/p&gt;
&lt;p&gt;Expected output:&lt;br&gt;
=&amp;gt; {:readonly=&amp;gt;true, :joins=&amp;gt;[&quot;JOIN x on a.id =
b.id&quot;]}&lt;/p&gt;
&lt;p&gt;Actual output:&lt;br&gt;
=&amp;gt; {:readonly=&amp;gt;true, :joins=&amp;gt;[&quot;JOIN x ON a.id = b.id&quot;,
&quot;JOIN x on a.id = b.id&quot;]}&lt;/p&gt;
&lt;p&gt;Solution:&lt;br&gt;
do a case insensitive comparison on join expressions when merging
scopes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-01T11:09:44+01:00</created-at>
      <creator-id type="integer">71642</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3309</number>
      <permalink>merging-joins-when-chaining-scopes-requires-same-case-in-join-expression</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 :joins activerecord named_scope</tag>
      <title>Merging JOINs when chaining scopes requires same case in JOIN expression</title>
      <updated-at type="datetime">2009-10-01T11:09:48+01:00</updated-at>
      <user-id type="integer">71642</user-id>
      <version type="integer">1</version>
      <user-name>Matthias</user-name>
      <creator-name>Matthias</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3309</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Fixed with the patch attached. Pls check solution and test...

Comparison algorithm may slow down the process, see for different approaches (including mine)
 http://stackoverflow.com/questions/1103327/how-to-uniq-an-array-case-insensitive/1508576#1508576

Cheers, Tobi</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fixed with the patch attached. Pls check solution and
test...&lt;/p&gt;
&lt;p&gt;Comparison algorithm may slow down the process, see for
different approaches (including mine)&lt;br&gt;
&lt;a href=
&quot;http://stackoverflow.com/questions/1103327/how-to-uniq-an-array-case-insensitive/1508576#1508576&quot;&gt;
http://stackoverflow.com/questions/1103327/how-to-uniq-an-array-cas...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cheers, Tobi&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-02T10:47:07+01:00</created-at>
      <creator-id type="integer">71642</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.4 :joins activerecord named_scope
:title: Merging JOINs when chaining scopes requires same case in JOIN expression
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3309</number>
      <permalink>merging-joins-when-chaining-scopes-requires-same-case-in-join-expression</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 :joins activerecord named_scope patch</tag>
      <title>[PATCH] Merging JOINs when chaining scopes requires same case in JOIN expression</title>
      <updated-at type="datetime">2009-10-02T11:43:05+01:00</updated-at>
      <user-id type="integer">32492</user-id>
      <version type="integer">2</version>
      <user-name>Tobi</user-name>
      <creator-name>Matthias</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3309</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T06:41:30+01:00</created-at>
      <creator-id type="integer">71642</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3309</number>
      <permalink>merging-joins-when-chaining-scopes-requires-same-case-in-join-expression</permalink>
      <priority type="integer">156141</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.3.4 :joins activerecord named_scope patch</tag>
      <title>[PATCH] Merging JOINs when chaining scopes requires same case in JOIN expression</title>
      <updated-at type="datetime">2010-10-06T06:41:32+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Matthias</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3309</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T06:28:57+00:00</created-at>
      <creator-id type="integer">71642</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3309</number>
      <permalink>merging-joins-when-chaining-scopes-requires-same-case-in-join-expression</permalink>
      <priority type="integer">156141</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.3.4 :joins activerecord named_scope patch</tag>
      <title>[PATCH] Merging JOINs when chaining scopes requires same case in JOIN expression</title>
      <updated-at type="datetime">2011-02-17T06:48:17+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">4</version>
      <user-name>gfh</user-name>
      <creator-name>Matthias</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3309</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I would recommend changing the Hash.new into an OrderedHash.  I know this works in rails 2.3.8.  mysql is specific about the order of it's joins.  using a hash could result into random failures if you are using joins in your scope.

for 2.3.8 change
joins.flatten.inject(Hash.new)....

to
joins.flatten.inject(ActiveSupport::OrderedHash.new)

thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I would recommend changing the Hash.new into an OrderedHash. I
know this works in rails 2.3.8. mysql is specific about the order
of it's joins. using a hash could result into random failures if
you are using joins in your scope.&lt;/p&gt;
&lt;p&gt;for 2.3.8 change&lt;br&gt;
joins.flatten.inject(Hash.new)....&lt;/p&gt;
&lt;p&gt;to&lt;br&gt;
joins.flatten.inject(ActiveSupport::OrderedHash.new)&lt;/p&gt;
&lt;p&gt;thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-30T21:23:33+01:00</created-at>
      <creator-id type="integer">71642</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3309</number>
      <permalink>merging-joins-when-chaining-scopes-requires-same-case-in-join-expression</permalink>
      <priority type="integer">156141</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.3.4 :joins activerecord named_scope patch</tag>
      <title>[PATCH] Merging JOINs when chaining scopes requires same case in JOIN expression</title>
      <updated-at type="datetime">2011-03-30T21:23:47+01:00</updated-at>
      <user-id type="integer">143611</user-id>
      <version type="integer">5</version>
      <user-name>erik landerholm</user-name>
      <creator-name>Matthias</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3309</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d090cbfe9610e77aa0eea58122ecb375e716e614</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-02T10:47:07+01:00</created-at>
      <filename>0001-fixed-bug-where-join-statement-was-merge-casesensiti.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">284615</id>
      <size type="integer">1794</size>
      <uploader-id type="integer">32492</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/284615/0001-fixed-bug-where-join-statement-was-merge-casesensiti.patch</url>
    </attachment>
  </attachments>
</ticket>
