<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-08T19:38:30+01:00</created-at>
  <creator-id type="integer">53331</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2458</number>
  <permalink>memory-store-session</permalink>
  <priority type="integer">1607</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>memory store session</title>
  <updated-at type="datetime">2009-08-06T13:36:00+01:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">2</version>
  <user-name>Pratik</user-name>
  <creator-name>samur araujo</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2458</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Dear all, I could not understand the reasons to remove memory_store from rails 2.3 sessions. 

It is simple and applicable in several situations. 

For example, I am working with semantic web application that did not  demand a database because all data is accessed over a SPARQL endpoint, however it is still important to store users' sessions. The nature of my app do not allow store session on cookies and configure a database or a cache server for this , it is out of question. 

Do I have other option for that?

I strongly suggest that you release a memory_session on future rails versions.

Msc. Samur Araujo</original-body>
  <latest-body>Dear all, I could not understand the reasons to remove memory_store from rails 2.3 sessions. 

It is simple and applicable in several situations. 

For example, I am working with semantic web application that did not  demand a database because all data is accessed over a SPARQL endpoint, however it is still important to store users' sessions. The nature of my app do not allow store session on cookies and configure a database or a cache server for this , it is out of question. 

Do I have other option for that?

I strongly suggest that you release a memory_session on future rails versions.

Msc. Samur Araujo</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Dear all, I could not understand the reasons to remove
memory_store from rails 2.3 sessions.&lt;/p&gt;
&lt;p&gt;It is simple and applicable in several situations.&lt;/p&gt;
&lt;p&gt;For example, I am working with semantic web application that did
not demand a database because all data is accessed over a SPARQL
endpoint, however it is still important to store users' sessions.
The nature of my app do not allow store session on cookies and
configure a database or a cache server for this , it is out of
question.&lt;/p&gt;
&lt;p&gt;Do I have other option for that?&lt;/p&gt;
&lt;p&gt;I strongly suggest that you release a memory_session on future
rails versions.&lt;/p&gt;
&lt;p&gt;Msc. Samur Araujo&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Dear all, I could not understand the reasons to remove memory_store from rails 2.3 sessions. 

It is simple and applicable in several situations. 

For example, I am working with semantic web application that did not  demand a database because all data is accessed over a SPARQL endpoint, however it is still important to store users' sessions. The nature of my app do not allow store session on cookies and configure a database or a cache server for this , it is out of question. 

Do I have other option for that?

I strongly suggest that you release a memory_session on future rails versions.

Msc. Samur Araujo</body>
      <body-html>&lt;div&gt;&lt;p&gt;Dear all, I could not understand the reasons to remove
memory_store from rails 2.3 sessions.&lt;/p&gt;
&lt;p&gt;It is simple and applicable in several situations.&lt;/p&gt;
&lt;p&gt;For example, I am working with semantic web application that did
not demand a database because all data is accessed over a SPARQL
endpoint, however it is still important to store users' sessions.
The nature of my app do not allow store session on cookies and
configure a database or a cache server for this , it is out of
question.&lt;/p&gt;
&lt;p&gt;Do I have other option for that?&lt;/p&gt;
&lt;p&gt;I strongly suggest that you release a memory_session on future
rails versions.&lt;/p&gt;
&lt;p&gt;Msc. Samur Araujo&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-08T19:38:30+01:00</created-at>
      <creator-id type="integer">53331</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2458</number>
      <permalink>memory-store-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>memory store session</title>
      <updated-at type="datetime">2009-04-08T19:38:33+01:00</updated-at>
      <user-id type="integer">53331</user-id>
      <version type="integer">1</version>
      <user-name>samur araujo</user-name>
      <creator-name>samur araujo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2458</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think you should just put memory session in your application and ask Rails to use that.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think you should just put memory session in your application
and ask Rails to use that.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-06T13:35:55+01:00</created-at>
      <creator-id type="integer">53331</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2458</number>
      <permalink>memory-store-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>memory store session</title>
      <updated-at type="datetime">2009-08-06T13:36:00+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>samur araujo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2458</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
