<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-06-12T20:35:21+01:00</created-at>
  <creator-id type="integer">19965</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2795</number>
  <permalink>has_one-with-a-belongs_to-as-source-association</permalink>
  <priority type="integer">1812</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>has_one with a belongs_to as source association</title>
  <updated-at type="datetime">2009-08-08T12:11:06+01:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">2</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>Jos&#233; Valim</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2795</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This patches allow you to use a has_one association with a belongs_to as source. Assuming that House belongs to City that belongs to Country:

@@@ ruby
  class House
    belongs_to :city
    has_one :country, :through =&gt; :city
  end

  class City
    belongs_to :country
  end

  class Country
  end
@@@

The following works in Rails current versions (preload case):

@@@ ruby
  House.all(:include =&gt; :country)
@@@

The following DOES NOT work on Rails current version and is fixed by this patch (non-preload case):

@@@ ruby
  House.all(:include =&gt; :country, :conditions =&gt; [&quot;countries.name = ?&quot;, &quot;Brazil&quot;])
@@@

However, as I talked with Pratik and Koz on IRC, we could simply do this:

@@@ ruby
  House.all(:include =&gt; { :city =&gt; :country }, :conditions =&gt; [&quot;countries.name = ?&quot;, &quot;Brazil&quot;])
@@@

I've created the patch because I've needed this behavior in geokit-rails, which was later fixed to work with the { :city =&gt; :country } case, but currently it has no use and it should not be applied until someone comes up with a use case for it.

This ticket is just to document the patch.</original-body>
  <latest-body>This patches allow you to use a has_one association with a belongs_to as source. Assuming that House belongs to City that belongs to Country:

@@@ ruby
  class House
    belongs_to :city
    has_one :country, :through =&gt; :city
  end

  class City
    belongs_to :country
  end

  class Country
  end
@@@

The following works in Rails current versions (preload case):

@@@ ruby
  House.all(:include =&gt; :country)
@@@

The following DOES NOT work on Rails current version and is fixed by this patch (non-preload case):

@@@ ruby
  House.all(:include =&gt; :country, :conditions =&gt; [&quot;countries.name = ?&quot;, &quot;Brazil&quot;])
@@@

However, as I talked with Pratik and Koz on IRC, we could simply do this:

@@@ ruby
  House.all(:include =&gt; { :city =&gt; :country }, :conditions =&gt; [&quot;countries.name = ?&quot;, &quot;Brazil&quot;])
@@@

I've created the patch because I've needed this behavior in geokit-rails, which was later fixed to work with the { :city =&gt; :country } case, but currently it has no use and it should not be applied until someone comes up with a use case for it.

This ticket is just to document the patch.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This patches allow you to use a has_one association with a
belongs_to as source. Assuming that House belongs to City that
belongs to Country:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  class House
    belongs_to :city
    has_one :country, :through =&amp;gt; :city
  end

  class City
    belongs_to :country
  end

  class Country
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following works in Rails current versions (preload
case):&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  House.all(:include =&amp;gt; :country)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following DOES NOT work on Rails current version and is
fixed by this patch (non-preload case):&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  House.all(:include =&amp;gt; :country, :conditions =&amp;gt; [&amp;quot;countries.name = ?&amp;quot;, &amp;quot;Brazil&amp;quot;])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, as I talked with Pratik and Koz on IRC, we could simply
do this:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  House.all(:include =&amp;gt; { :city =&amp;gt; :country }, :conditions =&amp;gt; [&amp;quot;countries.name = ?&amp;quot;, &amp;quot;Brazil&amp;quot;])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I've created the patch because I've needed this behavior in
geokit-rails, which was later fixed to work with the { :city =&amp;gt;
:country } case, but currently it has no use and it should not be
applied until someone comes up with a use case for it.&lt;/p&gt;
&lt;p&gt;This ticket is just to document the patch.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patches allow you to use a has_one association with a belongs_to as source. Assuming that House belongs to City that belongs to Country:

@@@ ruby
  class House
    belongs_to :city
    has_one :country, :through =&gt; :city
  end

  class City
    belongs_to :country
  end

  class Country
  end
@@@

The following works in Rails current versions (preload case):

@@@ ruby
  House.all(:include =&gt; :country)
@@@

The following DOES NOT work on Rails current version and is fixed by this patch (non-preload case):

@@@ ruby
  House.all(:include =&gt; :country, :conditions =&gt; [&quot;countries.name = ?&quot;, &quot;Brazil&quot;])
@@@

However, as I talked with Pratik and Koz on IRC, we could simply do this:

@@@ ruby
  House.all(:include =&gt; { :city =&gt; :country }, :conditions =&gt; [&quot;countries.name = ?&quot;, &quot;Brazil&quot;])
@@@

I've created the patch because I've needed this behavior in geokit-rails, which was later fixed to work with the { :city =&gt; :country } case, but currently it has no use and it should not be applied until someone comes up with a use case for it.

This ticket is just to document the patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patches allow you to use a has_one association with a
belongs_to as source. Assuming that House belongs to City that
belongs to Country:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class House
    belongs_to :city
    has_one :country, :through =&amp;gt; :city
  end

  class City
    belongs_to :country
  end

  class Country
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The following works in Rails current versions (preload
case):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  House.all(:include =&amp;gt; :country)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The following DOES NOT work on Rails current version and is
fixed by this patch (non-preload case):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  House.all(:include =&amp;gt; :country, :conditions =&amp;gt; [&quot;countries.name = ?&quot;, &quot;Brazil&quot;])&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, as I talked with Pratik and Koz on IRC, we could simply
do this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  House.all(:include =&amp;gt; { :city =&amp;gt; :country }, :conditions =&amp;gt; [&quot;countries.name = ?&quot;, &quot;Brazil&quot;])&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I've created the patch because I've needed this behavior in
geokit-rails, which was later fixed to work with the { :city =&amp;gt;
:country } case, but currently it has no use and it should not be
applied until someone comes up with a use case for it.&lt;/p&gt;
&lt;p&gt;This ticket is just to document the patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-12T20:35:24+01:00</created-at>
      <creator-id type="integer">19965</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2795</number>
      <permalink>has_one-with-a-belongs_to-as-source-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has_one with a belongs_to as source association</title>
      <updated-at type="datetime">2009-06-12T20:35:24+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">1</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Jos&#233; Valim</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2795</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T12:11:02+01:00</created-at>
      <creator-id type="integer">19965</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2795</number>
      <permalink>has_one-with-a-belongs_to-as-source-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>has_one with a belongs_to as source association</title>
      <updated-at type="datetime">2009-08-08T12:11:06+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">2</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Jos&#233; Valim</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2795</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>fbe2304abe818fd19ecfd289d864995a63d74f8b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-06-12T20:35:21+01:00</created-at>
      <filename>has_one_through_belongs_to.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">132819</id>
      <size type="integer">2977</size>
      <uploader-id type="integer">19965</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/132819/has_one_through_belongs_to.diff</url>
    </attachment>
  </attachments>
</ticket>
