From 5d95ea5e061874d085208b33b726024995b46a82 Mon Sep 17 00:00:00 2001
From: Carsten Nielsen <heycarsten@gmail.com>
Date: Thu, 5 Jun 2008 10:07:03 -0400
Subject: [PATCH] Enhanced ActionView::Helpers::TextHelper#pluralize to allow for output configuration. You can now wrap the count in a tag, or choose to hide the count.

---
 actionpack/lib/action_view/helpers/text_helper.rb |   49 ++++++++++++++++++---
 actionpack/test/template/text_helper_test.rb      |    4 ++
 2 files changed, 46 insertions(+), 7 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/text_helper.rb b/actionpack/lib/action_view/helpers/text_helper.rb
index 669a285..e487c48 100644
--- a/actionpack/lib/action_view/helpers/text_helper.rb
+++ b/actionpack/lib/action_view/helpers/text_helper.rb
@@ -149,22 +149,57 @@ module ActionView
 
       # Attempts to pluralize the +singular+ word unless +count+ is 1. If
       # +plural+ is supplied, it will use that when count is > 1, otherwise
-      # it will use the Inflector to determine the plural form
+      # it will use the Inflector to determine the plural form.
+      #
+      # The last argument can also be a Hash of options, set <tt>:plural</tt>
+      # to overide the default inflector when using this style. The count can
+      # be wrapped in a tag such as '<strong>' or '<em>' by specifing it in
+      # as the value to <tt>:count_tag</tt>. It is also possible to hide the
+      # count if you wish to display it in another location by setting
+      # <tt>:show_count</tt> to false.
+      #
       #
       # ==== Examples
       #   pluralize(1, 'person')
-      #   # => 1 person
+      #   # => "1 person"
       #
       #   pluralize(2, 'person')
-      #   # => 2 people
+      #   # => "2 people"
       #
       #   pluralize(3, 'person', 'users')
-      #   # => 3 users
+      #   # => "3 users"
       #
       #   pluralize(0, 'person')
-      #   # => 0 people
-      def pluralize(count, singular, plural = nil)
-        "#{count || 0} " + ((count == 1 || count == '1') ? singular : (plural || singular.pluralize))
+      #   # => "0 people"
+      #
+      #   pluralize(6, 'pickle', :count_tag => :strong)
+      #   # => "<strong>6</strong> pickles"
+      #
+      #   pluralize(4, 'fungus', :plural => 'fungi', :count_tag => :em)
+      #   # => "<em>4</em> fungi"
+      #
+      #   pluralize(2, 'lover', :show_count => false)
+      #   # => "lovers"
+      def pluralize(count, singular, options_or_plural = {})
+        setup = {
+          :plural => nil,
+          :count_tag => nil,
+          :show_count => true }
+        if options_or_plural.is_a?(String)
+          setup[:plural] = options_or_plural
+        elsif options_or_plural.is_a?(Hash)
+          setup.update(options_or_plural.symbolize_keys)
+        else
+          raise ArgumentError, "options_or_plural must be a String or Hash not #{options_or_plural.class}"
+        end
+        word = (count.to_s == '1') ? singular : (setup[:plural] || singular.pluralize)
+        count_text = if setup[:show_count]
+          count ||= '0'
+          setup[:count_tag] ? content_tag(setup[:count_tag], count) : count
+        else
+          ''
+        end
+        "#{count_text} #{word}".strip
       end
 
       # Wraps the +text+ into lines no longer than +line_width+ width. This method
diff --git a/actionpack/test/template/text_helper_test.rb b/actionpack/test/template/text_helper_test.rb
index 62cdca0..df4f864 100644
--- a/actionpack/test/template/text_helper_test.rb
+++ b/actionpack/test/template/text_helper_test.rb
@@ -169,6 +169,10 @@ class TextHelperTest < ActionView::TestCase
     assert_equal("10 buffaloes", pluralize(10, "buffalo"))
     assert_equal("1 berry", pluralize(1, "berry"))
     assert_equal("12 berries", pluralize(12, "berry"))
+    assert_equal("<em>8</em> tigers", pluralize(8, "tiger", :count_tag => :em))
+    assert_equal("apple", pluralize(1, "apple", :show_count => false))
+    assert_equal("19 fungi", pluralize(19, "fungus", :plural => "fungi"))
+    assert_equal("<em>0</em> apples", pluralize(nil, "apple", :count_tag => :em))
   end
 
   def test_auto_link_parsing
-- 
1.5.4.4

