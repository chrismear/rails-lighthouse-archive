<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">14998</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-10-26T20:45:02+00:00</created-at>
  <creator-id type="integer">74499</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3428</number>
  <permalink>association-collection-create-method-failing</permalink>
  <priority type="integer">167041</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activerecord</tag>
  <title>Association Collection Create Method Failing</title>
  <updated-at type="datetime">2010-04-15T12:45:48+01:00</updated-at>
  <user-id type="integer">14998</user-id>
  <version type="integer">3</version>
  <user-name>Ryan Bigg</user-name>
  <creator-name>Alexandre S</creator-name>
  <assigned-user-name>Ryan Bigg</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3428</url>
  <priority-name nil="true"></priority-name>
  <original-body>0  vote down  star
	

I have a Post class with a vote method which creates a Vote instance

This doesn't work

def vote(options)
   vote = self.votes.create(options)
   return vote if vote.valid?
   nil
end

This does work

def vote(options)
   options[:post] = self
   vote = self.votes.create(options)
   return vote if vote.valid?
   nil
end

Shouldn't the .create call automatically add the :post association?</original-body>
  <latest-body>0  vote down  star
	

I have a Post class with a vote method which creates a Vote instance

This doesn't work

def vote(options)
   vote = self.votes.create(options)
   return vote if vote.valid?
   nil
end

This does work

def vote(options)
   options[:post] = self
   vote = self.votes.create(options)
   return vote if vote.valid?
   nil
end

Shouldn't the .create call automatically add the :post association?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;0 vote down star&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I have a Post class with a vote method which creates a Vote
instance&lt;/p&gt;
&lt;p&gt;This doesn't work&lt;/p&gt;
&lt;p&gt;def vote(options)&lt;br&gt;
vote = self.votes.create(options) return vote if vote.valid? nil
end&lt;/p&gt;
&lt;p&gt;This does work&lt;/p&gt;
&lt;p&gt;def vote(options)&lt;br&gt;
options[:post] = self vote = self.votes.create(options) return vote
if vote.valid? nil end&lt;/p&gt;
&lt;p&gt;Shouldn't the .create call automatically add the :post
association?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a Post class with a vote method which creates a Vote instance

This doesn't work

@@@
def vote(options)
   vote = self.votes.create(options)
   return vote if vote.valid?
   nil
end
@@@

**This does work**

@@@
def vote(options)
   options[:post] = self
   vote = self.votes.create(options)
   return vote if vote.valid?
   nil
end
@@@

Shouldn't the .create call automatically add the :post association?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a Post class with a vote method which creates a Vote
instance&lt;/p&gt;
&lt;p&gt;This doesn't work&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def vote(options)
   vote = self.votes.create(options)
   return vote if vote.valid?
   nil
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;This does work&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def vote(options)
   options[:post] = self
   vote = self.votes.create(options)
   return vote if vote.valid?
   nil
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Shouldn't the .create call automatically add the :post
association?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-26T20:45:02+00:00</created-at>
      <creator-id type="integer">74499</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3428</number>
      <permalink>association-collection-create-method-failing</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Association Collection Create Method Failing</title>
      <updated-at type="datetime">2009-10-26T20:46:40+00:00</updated-at>
      <user-id type="integer">74499</user-id>
      <version type="integer">1</version>
      <user-name>Alexandre S</user-name>
      <creator-name>Alexandre S</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3428</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I was unable to duplicate this issue on edge Rails:

@@@
&#10140;  rails_bugs  ruby ../rails/bin/rails has_many_create --dev
...
&#10140;  rails_bugs  cd has_many_create 
&#10140;  has_many_create  ruby ../../rails/bin/rails g model post title:string
...
&#10140;  has_many_create  ruby ../../rails/bin/rails g model vote positive:boolean post_id:integer
...
&#10140;  has_many_create  rake db:migrate
(in /Users/dtrasbo/code/rails_bugs/has_many_create)
...
&#10140;  has_many_create  ruby ../../rails/bin/rails c
Loading development environment (Rails 3.0.0.beta3)
ruby-1.8.7-p249 &gt; p = Post.create(:title =&gt; 'Foo')
 =&gt; #&lt;Post id: 1, title: &quot;Foo&quot;, created_at: &quot;2010-04-15 11:08:41&quot;, updated_at: &quot;2010-04-15 11:08:41&quot;&gt; 
ruby-1.8.7-p249 &gt; p.vote(:positive =&gt; false)
 =&gt; #&lt;Vote id: 1, positive: false, post_id: 1, created_at: &quot;2010-04-15 11:08:48&quot;, updated_at: &quot;2010-04-15 11:08:48&quot;&gt; 
@@@

@@@ ruby
class Post &lt; ActiveRecord::Base
  has_many :votes

  def vote(attributes)
    vote = votes.create(attributes)
    vote if vote.valid?
  end
end
@@@

@@@ ruby
class Vote &lt; ActiveRecord::Base
  belongs_to :post
end
@@@

My guess is that this issue is caused by missing associations or foreign keys, e.g. Though I haven't tested to see if this issue exists in 2.3.5 I think this ticket can be marked as invalid - I've never had issues similar to the one described.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was unable to duplicate this issue on edge Rails:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;#10140;  rails_bugs  ruby ../rails/bin/rails has_many_create --dev
...
&amp;#10140;  rails_bugs  cd has_many_create 
&amp;#10140;  has_many_create  ruby ../../rails/bin/rails g model post title:string
...
&amp;#10140;  has_many_create  ruby ../../rails/bin/rails g model vote positive:boolean post_id:integer
...
&amp;#10140;  has_many_create  rake db:migrate
(in /Users/dtrasbo/code/rails_bugs/has_many_create)
...
&amp;#10140;  has_many_create  ruby ../../rails/bin/rails c
Loading development environment (Rails 3.0.0.beta3)
ruby-1.8.7-p249 &amp;gt; p = Post.create(:title =&amp;gt; 'Foo')
 =&amp;gt; #&amp;lt;Post id: 1, title: &quot;Foo&quot;, created_at: &quot;2010-04-15 11:08:41&quot;, updated_at: &quot;2010-04-15 11:08:41&quot;&amp;gt; 
ruby-1.8.7-p249 &amp;gt; p.vote(:positive =&amp;gt; false)
 =&amp;gt; #&amp;lt;Vote id: 1, positive: false, post_id: 1, created_at: &quot;2010-04-15 11:08:48&quot;, updated_at: &quot;2010-04-15 11:08:48&quot;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Post &amp;lt; ActiveRecord::Base
  has_many :votes

  def vote(attributes)
    vote = votes.create(attributes)
    vote if vote.valid?
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Vote &amp;lt; ActiveRecord::Base
  belongs_to :post
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;My guess is that this issue is caused by missing associations or
foreign keys, e.g. Though I haven't tested to see if this issue
exists in 2.3.5 I think this ticket can be marked as invalid - I've
never had issues similar to the one described.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-15T12:15:42+01:00</created-at>
      <creator-id type="integer">74499</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3428</number>
      <permalink>association-collection-create-method-failing</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Association Collection Create Method Failing</title>
      <updated-at type="datetime">2010-04-15T12:15:45+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">2</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Alexandre S</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3428</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Do not have a method for creating this, use the built-in helpers:

    post.votes.create(attrs)

Not a Rails bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Do not have a method for creating this, use the built-in
helpers:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;post.votes.create(attrs)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Not a Rails bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-15T12:45:45+01:00</created-at>
      <creator-id type="integer">74499</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3428</number>
      <permalink>association-collection-create-method-failing</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord</tag>
      <title>Association Collection Create Method Failing</title>
      <updated-at type="datetime">2010-04-15T12:45:48+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Alexandre S</creator-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3428</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
