<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-31T12:18:54+00:00</created-at>
  <creator-id type="integer">36132</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1309</number>
  <permalink>backslashes-doesnt-work-in-like-queries-with-postgresql-adapter</permalink>
  <priority type="integer">713</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.1.1 :conditions postgresql sql</tag>
  <title>Backslashes doesn't work in LIKE queries with PostgreSQL adapter</title>
  <updated-at type="datetime">2010-01-20T11:30:35+00:00</updated-at>
  <user-id type="integer">65556</user-id>
  <version type="integer">6</version>
  <user-name>Rizwan Reza</user-name>
  <creator-name>Lars Christensen</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1309</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>For example:

class Resource &lt; ActiveRecord::Base; end
Resource.create(:path =&gt; &quot;foo\\bar\\baz&quot;)
Resource.find(:all, :conditions =&gt; [ &quot;resources.path like ?&quot;, &quot;%ar\\ba%&quot; ] ).each { |rs|
  puts rs.path
}

This does not return any objects. It works with the SQLite3 adapter. 

Exact queries does actually work (&quot;resources.path = ?&quot;, ...). It is also possible to get the above working by escaping the backslash one more time:

Resource.find(:all, :conditions =&gt; [ &quot;resources.path like ?&quot;, &quot;%ar\\\\ba%&quot; ] ).each { |rs|
  puts rs.path
}

PostgreSQL version: 8.3.3.
ROR version: 2.1.1</original-body>
  <latest-body>For example:

class Resource &lt; ActiveRecord::Base; end
Resource.create(:path =&gt; &quot;foo\\bar\\baz&quot;)
Resource.find(:all, :conditions =&gt; [ &quot;resources.path like ?&quot;, &quot;%ar\\ba%&quot; ] ).each { |rs|
  puts rs.path
}

This does not return any objects. It works with the SQLite3 adapter. 

Exact queries does actually work (&quot;resources.path = ?&quot;, ...). It is also possible to get the above working by escaping the backslash one more time:

Resource.find(:all, :conditions =&gt; [ &quot;resources.path like ?&quot;, &quot;%ar\\\\ba%&quot; ] ).each { |rs|
  puts rs.path
}

PostgreSQL version: 8.3.3.
ROR version: 2.1.1</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;class Resource &amp;lt; ActiveRecord::Base; end
Resource.create(:path =&amp;gt; &quot;foo\bar\baz&quot;) Resource.find(:all,
:conditions =&amp;gt; [ &quot;resources.path like ?&quot;, &quot;%ar\ba%&quot; ] ).each {
|rs| puts rs.path }&lt;/p&gt;
&lt;p&gt;This does not return any objects. It works with the SQLite3
adapter.&lt;/p&gt;
&lt;p&gt;Exact queries does actually work (&quot;resources.path = ?&quot;, ...). It
is also possible to get the above working by escaping the backslash
one more time:&lt;/p&gt;
&lt;p&gt;Resource.find(:all, :conditions =&amp;gt; [ &quot;resources.path like ?&quot;,
&quot;%ar\\ba%&quot; ] ).each { |rs| puts rs.path }&lt;/p&gt;
&lt;p&gt;PostgreSQL version: 8.3.3. ROR version: 2.1.1&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>For example:

class Resource &lt; ActiveRecord::Base; end
Resource.create(:path =&gt; &quot;foo\\bar\\baz&quot;)
Resource.find(:all, :conditions =&gt; [ &quot;resources.path like ?&quot;, &quot;%ar\\ba%&quot; ] ).each { |rs|
  puts rs.path
}

This does not return any objects. It works with the SQLite3 adapter. 

Exact queries does actually work (&quot;resources.path = ?&quot;, ...). It is also possible to get the above working by escaping the backslash one more time:

Resource.find(:all, :conditions =&gt; [ &quot;resources.path like ?&quot;, &quot;%ar\\\\ba%&quot; ] ).each { |rs|
  puts rs.path
}

PostgreSQL version: 8.3.3.
ROR version: 2.1.1</body>
      <body-html>&lt;div&gt;&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;class Resource &amp;lt; ActiveRecord::Base; end
Resource.create(:path =&amp;gt; &quot;foo\bar\baz&quot;) Resource.find(:all,
:conditions =&amp;gt; [ &quot;resources.path like ?&quot;, &quot;%ar\ba%&quot; ] ).each {
|rs| puts rs.path }&lt;/p&gt;
&lt;p&gt;This does not return any objects. It works with the SQLite3
adapter.&lt;/p&gt;
&lt;p&gt;Exact queries does actually work (&quot;resources.path = ?&quot;, ...). It
is also possible to get the above working by escaping the backslash
one more time:&lt;/p&gt;
&lt;p&gt;Resource.find(:all, :conditions =&amp;gt; [ &quot;resources.path like ?&quot;,
&quot;%ar\\ba%&quot; ] ).each { |rs| puts rs.path }&lt;/p&gt;
&lt;p&gt;PostgreSQL version: 8.3.3. ROR version: 2.1.1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-31T12:18:55+00:00</created-at>
      <creator-id type="integer">36132</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1309</number>
      <permalink>backslashes-doesnt-work-in-like-queries-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1.1 :conditions postgresql sql</tag>
      <title>Backslashes doesn't work in LIKE queries with PostgreSQL adapter</title>
      <updated-at type="datetime">2008-10-31T12:18:55+00:00</updated-at>
      <user-id type="integer">36132</user-id>
      <version type="integer">1</version>
      <user-name>Lars Christensen</user-name>
      <creator-name>Lars Christensen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1309</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have realised that LIKE clauses require special escaping of %, _, and \. PostgreSQL defaults to having backslash as the escape operator, while SQLite default to NOT having an escape operator. Furthermore, PostgreSQL requires escaping of backslashes in strings in general, while SQLite does not.

To select strings containing &quot;%_\&quot; would in SQLite be:

select ... where name like '\%\_\\' ESCAPE '\'

and in PostgreSQL

select ... where name like E'\\%\\_\\\\' ESCAPE '\\';

A portable way seems to be:

filter.gsub!(/[\\%_]/, &quot;\\\\\\0&quot;)
Record.find(:all, 
  :conditions =&gt; [ &quot;name like ? escape ?&quot;, &quot;%#{filter}%&quot;, &quot;\\&quot; ]</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have realised that LIKE clauses require special escaping of %,
_, and . PostgreSQL defaults to having backslash as the escape
operator, while SQLite default to NOT having an escape operator.
Furthermore, PostgreSQL requires escaping of backslashes in strings
in general, while SQLite does not.&lt;/p&gt;
&lt;p&gt;To select strings containing &quot;%_&quot; would in SQLite be:&lt;/p&gt;
&lt;p&gt;select ... where name like '\%_\' ESCAPE ''&lt;/p&gt;
&lt;p&gt;and in PostgreSQL&lt;/p&gt;
&lt;p&gt;select ... where name like E'\%\_\\' ESCAPE '\';&lt;/p&gt;
&lt;p&gt;A portable way seems to be:&lt;/p&gt;
&lt;p&gt;filter.gsub!(/[\%_]/, &quot;\\\0&quot;) Record.find(:all, :conditions
=&amp;gt; [ &quot;name like ? escape ?&quot;, &quot;%#{filter}%&quot;, &quot;\&quot; ]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-05T08:28:30+00:00</created-at>
      <creator-id type="integer">36132</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1309</number>
      <permalink>backslashes-doesnt-work-in-like-queries-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1.1 :conditions postgresql sql</tag>
      <title>Backslashes doesn't work in LIKE queries with PostgreSQL adapter</title>
      <updated-at type="datetime">2008-11-05T08:28:33+00:00</updated-at>
      <user-id type="integer">36132</user-id>
      <version type="integer">2</version>
      <user-name>Lars Christensen</user-name>
      <creator-name>Lars Christensen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1309</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You should probably try to submit a failing test.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You should probably try to submit a failing test.&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-12T16:05:45+00:00</created-at>
      <creator-id type="integer">36132</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1309</number>
      <permalink>backslashes-doesnt-work-in-like-queries-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1.1 :conditions postgresql sql</tag>
      <title>Backslashes doesn't work in LIKE queries with PostgreSQL adapter</title>
      <updated-at type="datetime">2009-03-12T16:05:51+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Lars Christensen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1309</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-05T15:30:55+01:00</created-at>
      <creator-id type="integer">36132</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1.1 :conditions postgresql sql
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1309</number>
      <permalink>backslashes-doesnt-work-in-like-queries-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1.1 :conditions bugmash postgresql sql</tag>
      <title>Backslashes doesn't work in LIKE queries with PostgreSQL adapter</title>
      <updated-at type="datetime">2009-08-05T15:31:00+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">4</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Lars Christensen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1309</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>-1 tested with master on postgresql 8.3.5 with ruby1.8.6 and unable to reproduce
@@@
&gt;&gt; u = User.create(:name =&gt; 'tra/la/la')
=&gt; #&lt;User id: 3, name: &quot;tra/la/la&quot;, created_at: &quot;2009-08-09 22:19:01&quot;, updated_at: &quot;2009-08-09 22:19:01&quot;&gt;
&gt;&gt; User.find(:all,:conditions =&gt; [&quot;users.name like ?&quot;,&quot;%tra/la%&quot;])
=&gt; [#&lt;User id: 3, name: &quot;tra/la/la&quot;, created_at: &quot;2009-08-09 22:19:01&quot;, updated_at: &quot;2009-08-09 22:19:01&quot;&gt;]
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;-1 tested with master on postgresql 8.3.5 with ruby1.8.6 and
unable to reproduce&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; u = User.create(:name =&amp;gt; 'tra/la/la')
=&amp;gt; #&amp;lt;User id: 3, name: &quot;tra/la/la&quot;, created_at: &quot;2009-08-09 22:19:01&quot;, updated_at: &quot;2009-08-09 22:19:01&quot;&amp;gt;
&amp;gt;&amp;gt; User.find(:all,:conditions =&amp;gt; [&quot;users.name like ?&quot;,&quot;%tra/la%&quot;])
=&amp;gt; [#&amp;lt;User id: 3, name: &quot;tra/la/la&quot;, created_at: &quot;2009-08-09 22:19:01&quot;, updated_at: &quot;2009-08-09 22:19:01&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-09T23:22:52+01:00</created-at>
      <creator-id type="integer">36132</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1309</number>
      <permalink>backslashes-doesnt-work-in-like-queries-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>2.1.1 :conditions bugmash postgresql sql</tag>
      <title>Backslashes doesn't work in LIKE queries with PostgreSQL adapter</title>
      <updated-at type="datetime">2009-08-09T23:22:55+01:00</updated-at>
      <user-id type="integer">36650</user-id>
      <version type="integer">5</version>
      <user-name>Elise Huard</user-name>
      <creator-name>Lars Christensen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1309</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-20T11:30:30+00:00</created-at>
      <creator-id type="integer">36132</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1.1 :conditions bugmash postgresql sql
:state: incomplete
:assigned_user: 14890
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1309</number>
      <permalink>backslashes-doesnt-work-in-like-queries-with-postgresql-adapter</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.1.1 :conditions postgresql sql</tag>
      <title>Backslashes doesn't work in LIKE queries with PostgreSQL adapter</title>
      <updated-at type="datetime">2010-01-20T11:30:35+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">6</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Lars Christensen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1309</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
  </versions>
</ticket>
