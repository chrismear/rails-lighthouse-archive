<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">17477</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-19T23:36:07+01:00</created-at>
  <creator-id type="integer">31192</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1079</number>
  <permalink>belongs_to-dependent-destroy-should-destroy-self-before-assocation</permalink>
  <priority type="integer">501</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord bug patch</tag>
  <title>belongs_to :dependent =&gt; :destroy should destroy self before assocation</title>
  <updated-at type="datetime">2009-01-16T17:40:27+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">4</version>
  <user-name>Repository</user-name>
  <creator-name>Ben VandenBos</creator-name>
  <assigned-user-name>Frederick Cheung</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1079</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>:belongs_to :dependent =&gt; :destroy leaves the model open to foreign key constraint failure upon deletion.  This seems be due to it using before_destroy as opposed to after_destroy.  It can't destroy the associated model before it deletes itself because of the foreign key.  I believe the fix is to simply use after_destroy (patch attached) to destroy :belongs_to associations after it's destroyed itself.  

Example:

@@@ ruby
class Person &lt; ActiveRecord::Base
  belongs_to :person_address, :dependent =&gt; :destroy
end

class PersonAddress &lt; ActiveRecord::Base
  has_one :person
end
@@@

...and a foreign key on person_address_id on the person table to id on the person_address table.</original-body>
  <latest-body>:belongs_to :dependent =&gt; :destroy leaves the model open to foreign key constraint failure upon deletion.  This seems be due to it using before_destroy as opposed to after_destroy.  It can't destroy the associated model before it deletes itself because of the foreign key.  I believe the fix is to simply use after_destroy (patch attached) to destroy :belongs_to associations after it's destroyed itself.  

Example:

@@@ ruby
class Person &lt; ActiveRecord::Base
  belongs_to :person_address, :dependent =&gt; :destroy
end

class PersonAddress &lt; ActiveRecord::Base
  has_one :person
end
@@@

...and a foreign key on person_address_id on the person table to id on the person_address table.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;:belongs_to :dependent =&amp;gt; :destroy leaves the model open to
foreign key constraint failure upon deletion. This seems be due to
it using before_destroy as opposed to after_destroy. It can't
destroy the associated model before it deletes itself because of
the foreign key. I believe the fix is to simply use after_destroy
(patch attached) to destroy :belongs_to associations after it's
destroyed itself.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Person &amp;lt; ActiveRecord::Base
  belongs_to :person_address, :dependent =&amp;gt; :destroy
end

class PersonAddress &amp;lt; ActiveRecord::Base
  has_one :person
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;...and a foreign key on person_address_id on the person table to
id on the person_address table.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>:belongs_to :dependent =&gt; :destroy leaves the model open to foreign key constraint failure upon deletion.  This seems be due to it using before_destroy as opposed to after_destroy.  It can't destroy the associated model before it deletes itself because of the foreign key.  I believe the fix is to simply use after_destroy (patch attached) to destroy :belongs_to associations after it's destroyed itself.  

Example:

@@@ ruby
class Person &lt; ActiveRecord::Base
  belongs_to :person_address, :dependent =&gt; :destroy
end

class PersonAddress &lt; ActiveRecord::Base
  has_one :person
end
@@@

...and a foreign key on person_address_id on the person table to id on the person_address table.</body>
      <body-html>&lt;div&gt;&lt;p&gt;:belongs_to :dependent =&amp;gt; :destroy leaves the model open to
foreign key constraint failure upon deletion. This seems be due to
it using before_destroy as opposed to after_destroy. It can't
destroy the associated model before it deletes itself because of
the foreign key. I believe the fix is to simply use after_destroy
(patch attached) to destroy :belongs_to associations after it's
destroyed itself.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Person &amp;lt; ActiveRecord::Base
  belongs_to :person_address, :dependent =&amp;gt; :destroy
end

class PersonAddress &amp;lt; ActiveRecord::Base
  has_one :person
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;...and a foreign key on person_address_id on the person table to
id on the person_address table.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-19T23:36:07+01:00</created-at>
      <creator-id type="integer">31192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1079</number>
      <permalink>belongs_to-dependent-destroy-should-destroy-self-before-assocation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>belongs_to :dependent =&gt; :destroy should destroy self before assocation</title>
      <updated-at type="datetime">2008-09-19T23:36:13+01:00</updated-at>
      <user-id type="integer">31192</user-id>
      <version type="integer">1</version>
      <user-name>Ben VandenBos</user-name>
      <creator-name>Ben VandenBos</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1079</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Seems reasonable to me. Assigning to Fred to make sure I'm not missing anything. Will apply after his +1.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Seems reasonable to me. Assigning to Fred to make sure I'm not
missing anything. Will apply after his +1.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-05T18:57:42+00:00</created-at>
      <creator-id type="integer">31192</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord bug
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1079</number>
      <permalink>belongs_to-dependent-destroy-should-destroy-self-before-assocation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug patch</tag>
      <title>belongs_to :dependent =&gt; :destroy should destroy self before assocation</title>
      <updated-at type="datetime">2009-01-05T18:57:47+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Ben VandenBos</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1079</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Seems to resolve the issue for me. Can't think of an obviously bad side effect</body>
      <body-html>&lt;div&gt;&lt;p&gt;Seems to resolve the issue for me. Can't think of an obviously
bad side effect&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-05T19:34:43+00:00</created-at>
      <creator-id type="integer">31192</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1079</number>
      <permalink>belongs_to-dependent-destroy-should-destroy-self-before-assocation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug patch</tag>
      <title>belongs_to :dependent =&gt; :destroy should destroy self before assocation</title>
      <updated-at type="datetime">2009-01-05T19:35:33+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">3</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Ben VandenBos</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1079</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [0e92f67073079fe3d34acd141099cdad28b0ee00]) Make belongs_to :dependent =&gt; :destroy  destroy self before associated object [#1079 state:resolved]

If foreign key constraints are in place then deleteing the associated object first will cause a foreign key violation

Signed-off-by: Frederick Cheung &lt;frederick.cheung@gmail.com&gt;
http://github.com/rails/rails/commit/0e92f67073079fe3d34acd141099cdad28b0ee00</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [0e92f67073079fe3d34acd141099cdad28b0ee00]) Make
belongs_to :dependent =&amp;gt; :destroy destroy self before associated
object [&lt;a href=&quot;/projects/8994/tickets/1079&quot; title=&quot;Ticket #1079&quot;&gt;#1079&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;If foreign key constraints are in place then deleteing the
associated object first will cause a foreign key violation&lt;/p&gt;
&lt;p&gt;Signed-off-by: Frederick Cheung &lt;a href=&quot;mailto:frederick.cheung@gmail.com&quot;&gt;frederick.cheung@gmail.com&lt;/a&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/0e92f67073079fe3d34acd141099cdad28b0ee00&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-16T17:40:26+00:00</created-at>
      <creator-id type="integer">31192</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1079</number>
      <permalink>belongs_to-dependent-destroy-should-destroy-self-before-assocation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug patch</tag>
      <title>belongs_to :dependent =&gt; :destroy should destroy self before assocation</title>
      <updated-at type="datetime">2009-01-16T17:40:27+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Ben VandenBos</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1079</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5388f3593b5f8d6339041ff00c5e6de540dc0d48</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-19T23:36:08+01:00</created-at>
      <filename>0001-Fixing-foreign-key-problems-with-belongs_to-depende.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">47295</id>
      <size type="integer">2322</size>
      <uploader-id type="integer">31192</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/47295/0001-Fixing-foreign-key-problems-with-belongs_to-depende.patch</url>
    </attachment>
  </attachments>
</ticket>
