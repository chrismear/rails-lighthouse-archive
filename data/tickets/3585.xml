<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-12-16T19:58:35+00:00</created-at>
  <creator-id type="integer">79992</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3585</number>
  <permalink>count-query-with-include-generates-incorrect-sql</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>Count query with :include generates incorrect SQL</title>
  <updated-at type="datetime">2010-10-07T12:06:53+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">2</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Brian Moore</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3585</url>
  <priority-name>Low</priority-name>
  <original-body>Executing certain ActiveRecord count query with an :include option provided generates incorrect SQL.  For example: 

&gt;&gt; Thing.count('widgets.bar_id', :distinct =&gt; true, :conditions=&gt;&quot;frobs.name = 'asdf'&quot;, :include=&gt;[:widget, :frob])
  SQL (0.4ms)   SELECT count(DISTINCT &quot;things&quot;.id) AS count_widgets_bar_id FROM &quot;things&quot; LEFT OUTER JOIN &quot;widgets&quot; ON &quot;widgets&quot;.id = &quot;things&quot;.widget_id LEFT OUTER JOIN &quot;frobs&quot; ON &quot;frobs&quot;.id = &quot;things&quot;.frob_id WHERE (frobs.name = 'asdf') 
=&gt; 10

In summary:
&quot;Thing.count('widgets.bar_id', :distinct =&gt; true,&quot; is somehow getting turned into &quot;SELECT count(DISTINCT &quot;things&quot;.id)&quot; and leading to incorrect results.

Note: when a :joins is used instead, everything is as expected.

&gt;&gt; Thing.count('widgets.bar_id', :distinct =&gt; true, :conditions=&gt;&quot;frobs.name = 'asdf'&quot;, :joins=&gt;[:widget, :frob])
  SQL (0.2ms)   SELECT count(DISTINCT widgets.bar_id) AS count_widgets_bar_id FROM &quot;things&quot; INNER JOIN &quot;widgets&quot; ON &quot;widgets&quot;.id = &quot;things&quot;.widget_id INNER JOIN &quot;frobs&quot; ON &quot;frobs&quot;.id = &quot;things&quot;.frob_id WHERE (frobs.name = 'asdf') 
=&gt; 1
(which is correct)


This happens on Rails 2.3.4 and 2.3.5.  The rails project is attached.</original-body>
  <latest-body>Executing certain ActiveRecord count query with an :include option provided generates incorrect SQL.  For example: 

&gt;&gt; Thing.count('widgets.bar_id', :distinct =&gt; true, :conditions=&gt;&quot;frobs.name = 'asdf'&quot;, :include=&gt;[:widget, :frob])
  SQL (0.4ms)   SELECT count(DISTINCT &quot;things&quot;.id) AS count_widgets_bar_id FROM &quot;things&quot; LEFT OUTER JOIN &quot;widgets&quot; ON &quot;widgets&quot;.id = &quot;things&quot;.widget_id LEFT OUTER JOIN &quot;frobs&quot; ON &quot;frobs&quot;.id = &quot;things&quot;.frob_id WHERE (frobs.name = 'asdf') 
=&gt; 10

In summary:
&quot;Thing.count('widgets.bar_id', :distinct =&gt; true,&quot; is somehow getting turned into &quot;SELECT count(DISTINCT &quot;things&quot;.id)&quot; and leading to incorrect results.

Note: when a :joins is used instead, everything is as expected.

&gt;&gt; Thing.count('widgets.bar_id', :distinct =&gt; true, :conditions=&gt;&quot;frobs.name = 'asdf'&quot;, :joins=&gt;[:widget, :frob])
  SQL (0.2ms)   SELECT count(DISTINCT widgets.bar_id) AS count_widgets_bar_id FROM &quot;things&quot; INNER JOIN &quot;widgets&quot; ON &quot;widgets&quot;.id = &quot;things&quot;.widget_id INNER JOIN &quot;frobs&quot; ON &quot;frobs&quot;.id = &quot;things&quot;.frob_id WHERE (frobs.name = 'asdf') 
=&gt; 1
(which is correct)


This happens on Rails 2.3.4 and 2.3.5.  The rails project is attached.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Executing certain ActiveRecord count query with an :include
option provided generates incorrect SQL. For example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Thing.count('widgets.bar_id', :distinct =&amp;gt; true,
:conditions=&amp;gt;&quot;frobs.name = 'asdf'&quot;, :include=&amp;gt;[:widget,
:frob]) SQL (0.4ms) SELECT count(DISTINCT &quot;things&quot;.id) AS
count_widgets_bar_id FROM &quot;things&quot; LEFT OUTER JOIN &quot;widgets&quot; ON
&quot;widgets&quot;.id = &quot;things&quot;.widget_id LEFT OUTER JOIN &quot;frobs&quot; ON
&quot;frobs&quot;.id = &quot;things&quot;.frob_id WHERE (frobs.name = 'asdf') =&amp;gt;
10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;In summary:&lt;br&gt;
&quot;Thing.count('widgets.bar_id', :distinct =&amp;gt; true,&quot; is somehow
getting turned into &quot;SELECT count(DISTINCT &quot;things&quot;.id)&quot; and
leading to incorrect results.&lt;/p&gt;
&lt;p&gt;Note: when a :joins is used instead, everything is as
expected.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Thing.count('widgets.bar_id', :distinct =&amp;gt; true,
:conditions=&amp;gt;&quot;frobs.name = 'asdf'&quot;, :joins=&amp;gt;[:widget, :frob])
SQL (0.2ms) SELECT count(DISTINCT widgets.bar_id) AS
count_widgets_bar_id FROM &quot;things&quot; INNER JOIN &quot;widgets&quot; ON
&quot;widgets&quot;.id = &quot;things&quot;.widget_id INNER JOIN &quot;frobs&quot; ON &quot;frobs&quot;.id
= &quot;things&quot;.frob_id WHERE (frobs.name = 'asdf') =&amp;gt; 1 (which is
correct)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;This happens on Rails 2.3.4 and 2.3.5. The rails project is
attached.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Executing certain ActiveRecord count queries with an :include option provided generates incorrect SQL.  For example: 

@@@
&gt;&gt; Thing.count('widgets.bar_id', :distinct =&gt; true, :conditions=&gt;&quot;frobs.name = 'asdf'&quot;, :include=&gt;[:widget, :frob])
  SQL (0.4ms)   SELECT count(DISTINCT &quot;things&quot;.id) AS count_widgets_bar_id FROM &quot;things&quot; LEFT OUTER JOIN &quot;widgets&quot; ON &quot;widgets&quot;.id = &quot;things&quot;.widget_id LEFT OUTER JOIN &quot;frobs&quot; ON &quot;frobs&quot;.id = &quot;things&quot;.frob_id WHERE (frobs.name = 'asdf') 
=&gt; 10
@@@

In summary:
&quot;Thing.count('widgets.bar_id', :distinct =&gt; true,&quot; is somehow getting turned into &quot;SELECT count(DISTINCT &quot;things&quot;.id)&quot; and leading to incorrect results.

Note: when a :joins is used instead, everything is as expected.

@@@
&gt;&gt; Thing.count('widgets.bar_id', :distinct =&gt; true, :conditions=&gt;&quot;frobs.name = 'asdf'&quot;, :joins=&gt;[:widget, :frob])
  SQL (0.2ms)   SELECT count(DISTINCT widgets.bar_id) AS count_widgets_bar_id FROM &quot;things&quot; INNER JOIN &quot;widgets&quot; ON &quot;widgets&quot;.id = &quot;things&quot;.widget_id INNER JOIN &quot;frobs&quot; ON &quot;frobs&quot;.id = &quot;things&quot;.frob_id WHERE (frobs.name = 'asdf') 
=&gt; 1
@@@
(which is correct)


This happens on Rails 2.3.4 and 2.3.5.  The rails project is attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Executing certain ActiveRecord count queries with an :include
option provided generates incorrect SQL. For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; Thing.count('widgets.bar_id', :distinct =&amp;gt; true, :conditions=&amp;gt;&quot;frobs.name = 'asdf'&quot;, :include=&amp;gt;[:widget, :frob])
  SQL (0.4ms)   SELECT count(DISTINCT &quot;things&quot;.id) AS count_widgets_bar_id FROM &quot;things&quot; LEFT OUTER JOIN &quot;widgets&quot; ON &quot;widgets&quot;.id = &quot;things&quot;.widget_id LEFT OUTER JOIN &quot;frobs&quot; ON &quot;frobs&quot;.id = &quot;things&quot;.frob_id WHERE (frobs.name = 'asdf') 
=&amp;gt; 10&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In summary:&lt;br&gt;
&quot;Thing.count('widgets.bar_id', :distinct =&amp;gt; true,&quot; is somehow
getting turned into &quot;SELECT count(DISTINCT &quot;things&quot;.id)&quot; and
leading to incorrect results.&lt;/p&gt;
&lt;p&gt;Note: when a :joins is used instead, everything is as
expected.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; Thing.count('widgets.bar_id', :distinct =&amp;gt; true, :conditions=&amp;gt;&quot;frobs.name = 'asdf'&quot;, :joins=&amp;gt;[:widget, :frob])
  SQL (0.2ms)   SELECT count(DISTINCT widgets.bar_id) AS count_widgets_bar_id FROM &quot;things&quot; INNER JOIN &quot;widgets&quot; ON &quot;widgets&quot;.id = &quot;things&quot;.widget_id INNER JOIN &quot;frobs&quot; ON &quot;frobs&quot;.id = &quot;things&quot;.frob_id WHERE (frobs.name = 'asdf') 
=&amp;gt; 1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(which is correct)&lt;/p&gt;
&lt;p&gt;This happens on Rails 2.3.4 and 2.3.5. The rails project is
attached.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-16T19:58:35+00:00</created-at>
      <creator-id type="integer">79992</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3585</number>
      <permalink>count-query-with-include-generates-incorrect-sql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Count query with :include generates incorrect SQL</title>
      <updated-at type="datetime">2009-12-16T21:24:11+00:00</updated-at>
      <user-id type="integer">79992</user-id>
      <version type="integer">1</version>
      <user-name>Brian Moore</user-name>
      <creator-name>Brian Moore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3585</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-07T12:06:49+01:00</created-at>
      <creator-id type="integer">79992</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3585</number>
      <permalink>count-query-with-include-generates-incorrect-sql</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Count query with :include generates incorrect SQL</title>
      <updated-at type="datetime">2010-10-07T12:06:53+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">2</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Brian Moore</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3585</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>97abff8db2bd4bc0a75e4461c577c739dd204516</code>
      <content-type>application/zip</content-type>
      <created-at type="datetime">2009-12-16T19:58:35+00:00</created-at>
      <filename>simplecase.zip</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">355052</id>
      <size type="integer">102691</size>
      <uploader-id type="integer">79992</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/355052/simplecase.zip</url>
    </attachment>
  </attachments>
</ticket>
