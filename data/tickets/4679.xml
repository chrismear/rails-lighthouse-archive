<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-24T13:33:49+01:00</created-at>
  <creator-id type="integer">24325</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4679</number>
  <permalink>multiple-self-referencing-eager-loads-dont-join-properly</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>joindependency patch rails3 tests</tag>
  <title>Multiple self-referencing eager loads don't join properly</title>
  <updated-at type="datetime">2010-06-08T06:02:36+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">4</version>
  <user-name>Repository</user-name>
  <creator-name>Ernie Miller</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4679</url>
  <priority-name nil="true"></priority-name>
  <original-body>This is from #4463 -- decided it's probably better to create a new ticket than submit a fix to an already committed ticket. I made a small, silly error in the previously committed patch, checking is_a? instead of class equality. Since JoinAssociation inherits from JoinBase, this can cause a stashed association join to be grafted onto the JoinBase instead of a JoinAssociation in the edge case of multiple-self-joining eager loads. Patch with test included. Sorry about that!</original-body>
  <latest-body>This is from #4463 -- decided it's probably better to create a new ticket than submit a fix to an already committed ticket. I made a small, silly error in the previously committed patch, checking is_a? instead of class equality. Since JoinAssociation inherits from JoinBase, this can cause a stashed association join to be grafted onto the JoinBase instead of a JoinAssociation in the edge case of multiple-self-joining eager loads. Patch with test included. Sorry about that!</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is from &lt;a href=&quot;/projects/8994/tickets/4463&quot; title=
&quot;Ticket #4463&quot;&gt;#4463&lt;/a&gt; -- decided it's probably better to create
a new ticket than submit a fix to an already committed ticket. I
made a small, silly error in the previously committed patch,
checking is_a? instead of class equality. Since JoinAssociation
inherits from JoinBase, this can cause a stashed association join
to be grafted onto the JoinBase instead of a JoinAssociation in the
edge case of multiple-self-joining eager loads. Patch with test
included. Sorry about that!&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is from #4463 -- decided it's probably better to create a new ticket than submit a fix to an already committed ticket. I made a small, silly error in the previously committed patch, checking is_a? instead of class equality. Since JoinAssociation inherits from JoinBase, this can cause a stashed association join to be grafted onto the JoinBase instead of a JoinAssociation in the edge case of multiple-self-joining eager loads. Patch with test included. Sorry about that!</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is from &lt;a href=&quot;/projects/8994/tickets/4463&quot; title=
&quot;Ticket #4463&quot;&gt;#4463&lt;/a&gt; -- decided it's probably better to create
a new ticket than submit a fix to an already committed ticket. I
made a small, silly error in the previously committed patch,
checking is_a? instead of class equality. Since JoinAssociation
inherits from JoinBase, this can cause a stashed association join
to be grafted onto the JoinBase instead of a JoinAssociation in the
edge case of multiple-self-joining eager loads. Patch with test
included. Sorry about that!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-24T13:33:49+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4679</number>
      <permalink>multiple-self-referencing-eager-loads-dont-join-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>joindependency rails3</tag>
      <title>Multiple self-referencing eager loads don't join properly</title>
      <updated-at type="datetime">2010-05-24T13:33:54+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">1</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4679</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-24T14:18:47+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: joindependency rails3
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4679</number>
      <permalink>multiple-self-referencing-eager-loads-dont-join-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>joindependency patch rails3 tests</tag>
      <title>Multiple self-referencing eager loads don't join properly</title>
      <updated-at type="datetime">2010-05-24T14:18:48+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">2</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4679</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Pratik, sorry for sending this your way but I don't want to see Rails 3 release with this silly bug :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Pratik, sorry for sending this your way but I don't want to see
Rails 3 release with this silly bug :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-08T00:33:40+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4679</number>
      <permalink>multiple-self-referencing-eager-loads-dont-join-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>joindependency patch rails3 tests</tag>
      <title>Multiple self-referencing eager loads don't join properly</title>
      <updated-at type="datetime">2010-06-08T00:33:44+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">3</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4679</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [a4eaa1fd39f93eff975bfd8a5cc4c7dfc3f18aa7]) Fix multiple self-referencing eager loads failing to join multiple times

[#4679 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/a4eaa1fd39f93eff975bfd8a5cc4c7dfc3f18aa7</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/a4eaa1fd39f93eff975bfd8a5cc4c7dfc3f18aa7&quot;
title=
&quot;Changeset [a4eaa1fd39f93eff975bfd8a5cc4c7dfc3f18aa7]&quot;&gt;[a4eaa1fd39f93eff975bfd8a5cc4c7dfc3f18aa7]&lt;/a&gt;)
Fix multiple self-referencing eager loads failing to join multiple
times&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/4679&quot; title=
&quot;Ticket #4679&quot;&gt;#4679&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/a4eaa1fd39f93eff975bfd8a5cc4c7dfc3f18aa7&quot;&gt;
http://github.com/rails/rails/commit/a4eaa1fd39f93eff975bfd8a5cc4c7...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-08T06:02:32+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4679</number>
      <permalink>multiple-self-referencing-eager-loads-dont-join-properly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>joindependency patch rails3 tests</tag>
      <title>Multiple self-referencing eager loads don't join properly</title>
      <updated-at type="datetime">2010-06-08T06:02:36+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4679</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>aaaf69edb9afeaa9ac46cc46668d4fe1263552af</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-24T13:33:49+01:00</created-at>
      <filename>multi_self_referencing_eager_load.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">531727</id>
      <size type="integer">2984</size>
      <uploader-id type="integer">24325</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/531727/multi_self_referencing_eager_load.diff</url>
    </attachment>
  </attachments>
</ticket>
