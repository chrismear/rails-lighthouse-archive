<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-13T15:49:11+00:00</created-at>
  <creator-id type="integer">54726</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6425</number>
  <permalink>has-many-through-with-order-eager-loading-problem-in-rails-2311</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>has many through with order eager loading problem in rails 2.3.11</title>
  <updated-at type="datetime">2011-02-13T15:49:15+00:00</updated-at>
  <user-id type="integer">54726</user-id>
  <version type="integer">1</version>
  <user-name>Andrey Stikheev</user-name>
  <creator-name>Andrey Stikheev</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6425</url>
  <priority-name nil="true"></priority-name>
  <original-body>A has_many through relationship with order raise a exception in rails &gt;= 2.3.9 , in rails 2.3.8 it works fine. 

To replicate:

Apply the following patch to rails source:

@@@

diff --git a/activerecord/test/cases/associations/eager_test.rb b/activerecord/test/cases/associations/eager_test.rb
index b711719..52a9f85 100644
--- a/activerecord/test/cases/associations/eager_test.rb
+++ b/activerecord/test/cases/associations/eager_test.rb
@@ -328,6 +328,12 @@ class EagerAssociationTest &lt; ActiveRecord::TestCase
     assert_equal authors(:david), assert_no_queries { posts_with_comments_and_author.first.author }
   end
 
+  def test_eager_with_has_many_through_with_model_with_include_and_with_order
+    assert_nothing_raised do
+      Author.find(authors(:david).id, :include =&gt; {:posts =&gt; :tags})
+    end
+  end
+
   def test_eager_with_has_many_through_a_belongs_to_association
     author = authors(:mary)
     post = Post.create!(:author =&gt; author, :title =&gt; &quot;TITLE&quot;, :body =&gt; &quot;BODY&quot;)
diff --git a/activerecord/test/models/post.rb b/activerecord/test/models/post.rb
index cf69d04..daab631 100644
--- a/activerecord/test/models/post.rb
+++ b/activerecord/test/models/post.rb
@@ -46,7 +46,7 @@ class Post &lt; ActiveRecord::Base
   has_and_belongs_to_many :special_categories, :join_table =&gt; &quot;categories_posts&quot;, :association_foreign_key =&gt; 'category_id'
 
   has_many :taggings, :as =&gt; :taggable
-  has_many :tags, :through =&gt; :taggings do
+  has_many :tags, :through =&gt; :taggings, :order =&gt; 'tags.id' do
     def add_joins_and_select
       find :all, :select =&gt; 'tags.*, authors.id as author_id', :include =&gt; false,
         :joins =&gt; 'left outer join posts on taggings.taggable_id = posts.id left outer join authors on posts.author_id = authors.id'


@@@


Results of test:

@@@

sand:rails sand$ cd activerecord/
sand:activerecord sand$ rake  TEST=test/cases/associations/eager_test.rb 

...

  1) Failure:
test_eager_with_has_many_through_with_model_with_include_and_with_order(EagerAssociationTest)
    [./test/cases/associations/eager_test.rb:332:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run']:
Exception raised:
Class: &lt;ActiveRecord::StatementInvalid&gt;
Message: &lt;&quot;SQLite3::SQLException: no such column: tags.id: SELECT \&quot;taggings\&quot;.* FROM \&quot;taggings\&quot; WHERE (\&quot;taggings\&quot;.\&quot;taggable_id\&quot; IN (1,2,4,5,6) and \&quot;taggings\&quot;.\&quot;taggable_type\&quot; = 'Post')  ORDER BY tags.id&quot;&gt;
---Backtrace---
./test/cases/../../lib/active_record/connection_adapters/abstract_adapter.rb:227:in `log'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:172:in `execute_without_query_record'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:418:in `catch_schema_changes'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:172:in `execute_without_query_record'
./test/cases/helper.rb:36:in `execute'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:321:in `select'
./test/cases/../../lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
./test/cases/../../lib/active_record/connection_adapters/abstract/query_cache.rb:62:in `select_all'
./test/cases/../../lib/active_record/base.rb:665:in `find_by_sql'
./test/cases/../../lib/active_record/base.rb:1582:in `find_every'
./test/cases/../../lib/active_record/base.rb:619:in `find'
./test/cases/../../lib/active_record/association_preload.rb:379:in `find_associated_records'
./test/cases/../../lib/active_record/base.rb:2182:in `with_scope'
./test/cases/../../lib/active_record/base.rb:2190:in `with_exclusive_scope'
./test/cases/../../lib/active_record/association_preload.rb:378:in `find_associated_records'
./test/cases/../../lib/active_record/association_preload.rb:255:in `preload_has_many_association'
./test/cases/../../lib/active_record/association_preload.rb:120:in `send'
./test/cases/../../lib/active_record/association_preload.rb:120:in `preload_one_association'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../lib/active_record/association_preload.rb:114:in `preload_one_association'
./test/cases/../../lib/active_record/association_preload.rb:91:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:289:in `preload_through_records'
./test/cases/../../lib/active_record/association_preload.rb:243:in `preload_has_many_association'
./test/cases/../../lib/active_record/association_preload.rb:120:in `send'
./test/cases/../../lib/active_record/association_preload.rb:120:in `preload_one_association'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../lib/active_record/association_preload.rb:114:in `preload_one_association'
./test/cases/../../lib/active_record/association_preload.rb:91:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:99:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:93:in `each'
./test/cases/../../lib/active_record/association_preload.rb:93:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:90:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:90:in `each'
./test/cases/../../lib/active_record/association_preload.rb:90:in `preload_associations'
./test/cases/../../lib/active_record/base.rb:1584:in `find_every'
./test/cases/../../lib/active_record/base.rb:1617:in `find_one'
./test/cases/../../lib/active_record/base.rb:1603:in `find_from_ids'
./test/cases/../../lib/active_record/base.rb:620:in `find'
./test/cases/associations/eager_test.rb:333:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
./test/cases/associations/eager_test.rb:332:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run'
---------------

104 tests, 331 assertions, 1 failures, 0 errors


@@@



As I understood this problem appeared after the commit 0963774c0a6a58ba13ac (https://github.com/rails/rails/commit/0963774c0a6a58ba13ac0ff4763527ea7d994c0a)</original-body>
  <latest-body>A has_many through relationship with order raise a exception in rails &gt;= 2.3.9 , in rails 2.3.8 it works fine. 

To replicate:

Apply the following patch to rails source:

@@@

diff --git a/activerecord/test/cases/associations/eager_test.rb b/activerecord/test/cases/associations/eager_test.rb
index b711719..52a9f85 100644
--- a/activerecord/test/cases/associations/eager_test.rb
+++ b/activerecord/test/cases/associations/eager_test.rb
@@ -328,6 +328,12 @@ class EagerAssociationTest &lt; ActiveRecord::TestCase
     assert_equal authors(:david), assert_no_queries { posts_with_comments_and_author.first.author }
   end
 
+  def test_eager_with_has_many_through_with_model_with_include_and_with_order
+    assert_nothing_raised do
+      Author.find(authors(:david).id, :include =&gt; {:posts =&gt; :tags})
+    end
+  end
+
   def test_eager_with_has_many_through_a_belongs_to_association
     author = authors(:mary)
     post = Post.create!(:author =&gt; author, :title =&gt; &quot;TITLE&quot;, :body =&gt; &quot;BODY&quot;)
diff --git a/activerecord/test/models/post.rb b/activerecord/test/models/post.rb
index cf69d04..daab631 100644
--- a/activerecord/test/models/post.rb
+++ b/activerecord/test/models/post.rb
@@ -46,7 +46,7 @@ class Post &lt; ActiveRecord::Base
   has_and_belongs_to_many :special_categories, :join_table =&gt; &quot;categories_posts&quot;, :association_foreign_key =&gt; 'category_id'
 
   has_many :taggings, :as =&gt; :taggable
-  has_many :tags, :through =&gt; :taggings do
+  has_many :tags, :through =&gt; :taggings, :order =&gt; 'tags.id' do
     def add_joins_and_select
       find :all, :select =&gt; 'tags.*, authors.id as author_id', :include =&gt; false,
         :joins =&gt; 'left outer join posts on taggings.taggable_id = posts.id left outer join authors on posts.author_id = authors.id'


@@@


Results of test:

@@@

sand:rails sand$ cd activerecord/
sand:activerecord sand$ rake  TEST=test/cases/associations/eager_test.rb 

...

  1) Failure:
test_eager_with_has_many_through_with_model_with_include_and_with_order(EagerAssociationTest)
    [./test/cases/associations/eager_test.rb:332:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run']:
Exception raised:
Class: &lt;ActiveRecord::StatementInvalid&gt;
Message: &lt;&quot;SQLite3::SQLException: no such column: tags.id: SELECT \&quot;taggings\&quot;.* FROM \&quot;taggings\&quot; WHERE (\&quot;taggings\&quot;.\&quot;taggable_id\&quot; IN (1,2,4,5,6) and \&quot;taggings\&quot;.\&quot;taggable_type\&quot; = 'Post')  ORDER BY tags.id&quot;&gt;
---Backtrace---
./test/cases/../../lib/active_record/connection_adapters/abstract_adapter.rb:227:in `log'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:172:in `execute_without_query_record'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:418:in `catch_schema_changes'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:172:in `execute_without_query_record'
./test/cases/helper.rb:36:in `execute'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:321:in `select'
./test/cases/../../lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
./test/cases/../../lib/active_record/connection_adapters/abstract/query_cache.rb:62:in `select_all'
./test/cases/../../lib/active_record/base.rb:665:in `find_by_sql'
./test/cases/../../lib/active_record/base.rb:1582:in `find_every'
./test/cases/../../lib/active_record/base.rb:619:in `find'
./test/cases/../../lib/active_record/association_preload.rb:379:in `find_associated_records'
./test/cases/../../lib/active_record/base.rb:2182:in `with_scope'
./test/cases/../../lib/active_record/base.rb:2190:in `with_exclusive_scope'
./test/cases/../../lib/active_record/association_preload.rb:378:in `find_associated_records'
./test/cases/../../lib/active_record/association_preload.rb:255:in `preload_has_many_association'
./test/cases/../../lib/active_record/association_preload.rb:120:in `send'
./test/cases/../../lib/active_record/association_preload.rb:120:in `preload_one_association'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../lib/active_record/association_preload.rb:114:in `preload_one_association'
./test/cases/../../lib/active_record/association_preload.rb:91:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:289:in `preload_through_records'
./test/cases/../../lib/active_record/association_preload.rb:243:in `preload_has_many_association'
./test/cases/../../lib/active_record/association_preload.rb:120:in `send'
./test/cases/../../lib/active_record/association_preload.rb:120:in `preload_one_association'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../lib/active_record/association_preload.rb:114:in `preload_one_association'
./test/cases/../../lib/active_record/association_preload.rb:91:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:99:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:93:in `each'
./test/cases/../../lib/active_record/association_preload.rb:93:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:90:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:90:in `each'
./test/cases/../../lib/active_record/association_preload.rb:90:in `preload_associations'
./test/cases/../../lib/active_record/base.rb:1584:in `find_every'
./test/cases/../../lib/active_record/base.rb:1617:in `find_one'
./test/cases/../../lib/active_record/base.rb:1603:in `find_from_ids'
./test/cases/../../lib/active_record/base.rb:620:in `find'
./test/cases/associations/eager_test.rb:333:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
./test/cases/associations/eager_test.rb:332:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run'
---------------

104 tests, 331 assertions, 1 failures, 0 errors


@@@



As I understood this problem appeared after the commit 0963774c0a6a58ba13ac (https://github.com/rails/rails/commit/0963774c0a6a58ba13ac0ff4763527ea7d994c0a)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;A has_many through relationship with order raise a exception in
rails &amp;gt;= 2.3.9 , in rails 2.3.8 it works fine.&lt;/p&gt;
&lt;p&gt;To replicate:&lt;/p&gt;
&lt;p&gt;Apply the following patch to rails source:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
diff --git a/activerecord/test/cases/associations/eager_test.rb b/activerecord/test/cases/associations/eager_test.rb
index b711719..52a9f85 100644
--- a/activerecord/test/cases/associations/eager_test.rb
+++ b/activerecord/test/cases/associations/eager_test.rb
@@ -328,6 +328,12 @@ class EagerAssociationTest &amp;lt; ActiveRecord::TestCase
     assert_equal authors(:david), assert_no_queries { posts_with_comments_and_author.first.author }
   end
 
+  def test_eager_with_has_many_through_with_model_with_include_and_with_order
+    assert_nothing_raised do
+      Author.find(authors(:david).id, :include =&amp;gt; {:posts =&amp;gt; :tags})
+    end
+  end
+
   def test_eager_with_has_many_through_a_belongs_to_association
     author = authors(:mary)
     post = Post.create!(:author =&amp;gt; author, :title =&amp;gt; &quot;TITLE&quot;, :body =&amp;gt; &quot;BODY&quot;)
diff --git a/activerecord/test/models/post.rb b/activerecord/test/models/post.rb
index cf69d04..daab631 100644
--- a/activerecord/test/models/post.rb
+++ b/activerecord/test/models/post.rb
@@ -46,7 +46,7 @@ class Post &amp;lt; ActiveRecord::Base
   has_and_belongs_to_many :special_categories, :join_table =&amp;gt; &quot;categories_posts&quot;, :association_foreign_key =&amp;gt; 'category_id'
 
   has_many :taggings, :as =&amp;gt; :taggable
-  has_many :tags, :through =&amp;gt; :taggings do
+  has_many :tags, :through =&amp;gt; :taggings, :order =&amp;gt; 'tags.id' do
     def add_joins_and_select
       find :all, :select =&amp;gt; 'tags.*, authors.id as author_id', :include =&amp;gt; false,
         :joins =&amp;gt; 'left outer join posts on taggings.taggable_id = posts.id left outer join authors on posts.author_id = authors.id'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Results of test:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
sand:rails sand$ cd activerecord/
sand:activerecord sand$ rake  TEST=test/cases/associations/eager_test.rb 

...

  1) Failure:
test_eager_with_has_many_through_with_model_with_include_and_with_order(EagerAssociationTest)
    [./test/cases/associations/eager_test.rb:332:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run']:
Exception raised:
Class: &amp;lt;ActiveRecord::StatementInvalid&amp;gt;
Message: &amp;lt;&quot;SQLite3::SQLException: no such column: tags.id: SELECT \&quot;taggings\&quot;.* FROM \&quot;taggings\&quot; WHERE (\&quot;taggings\&quot;.\&quot;taggable_id\&quot; IN (1,2,4,5,6) and \&quot;taggings\&quot;.\&quot;taggable_type\&quot; = 'Post')  ORDER BY tags.id&quot;&amp;gt;
---Backtrace---
./test/cases/../../lib/active_record/connection_adapters/abstract_adapter.rb:227:in `log'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:172:in `execute_without_query_record'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:418:in `catch_schema_changes'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:172:in `execute_without_query_record'
./test/cases/helper.rb:36:in `execute'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:321:in `select'
./test/cases/../../lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
./test/cases/../../lib/active_record/connection_adapters/abstract/query_cache.rb:62:in `select_all'
./test/cases/../../lib/active_record/base.rb:665:in `find_by_sql'
./test/cases/../../lib/active_record/base.rb:1582:in `find_every'
./test/cases/../../lib/active_record/base.rb:619:in `find'
./test/cases/../../lib/active_record/association_preload.rb:379:in `find_associated_records'
./test/cases/../../lib/active_record/base.rb:2182:in `with_scope'
./test/cases/../../lib/active_record/base.rb:2190:in `with_exclusive_scope'
./test/cases/../../lib/active_record/association_preload.rb:378:in `find_associated_records'
./test/cases/../../lib/active_record/association_preload.rb:255:in `preload_has_many_association'
./test/cases/../../lib/active_record/association_preload.rb:120:in `send'
./test/cases/../../lib/active_record/association_preload.rb:120:in `preload_one_association'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../lib/active_record/association_preload.rb:114:in `preload_one_association'
./test/cases/../../lib/active_record/association_preload.rb:91:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:289:in `preload_through_records'
./test/cases/../../lib/active_record/association_preload.rb:243:in `preload_has_many_association'
./test/cases/../../lib/active_record/association_preload.rb:120:in `send'
./test/cases/../../lib/active_record/association_preload.rb:120:in `preload_one_association'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../lib/active_record/association_preload.rb:114:in `preload_one_association'
./test/cases/../../lib/active_record/association_preload.rb:91:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:99:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:93:in `each'
./test/cases/../../lib/active_record/association_preload.rb:93:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:90:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:90:in `each'
./test/cases/../../lib/active_record/association_preload.rb:90:in `preload_associations'
./test/cases/../../lib/active_record/base.rb:1584:in `find_every'
./test/cases/../../lib/active_record/base.rb:1617:in `find_one'
./test/cases/../../lib/active_record/base.rb:1603:in `find_from_ids'
./test/cases/../../lib/active_record/base.rb:620:in `find'
./test/cases/associations/eager_test.rb:333:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
./test/cases/associations/eager_test.rb:332:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run'
---------------

104 tests, 331 assertions, 1 failures, 0 errors&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As I understood this problem appeared after the commit
0963774c0a6a58ba13ac (&lt;a href=
&quot;https://github.com/rails/rails/commit/0963774c0a6a58ba13ac0ff4763527ea7d994c0a&quot;&gt;https://github.com/rails/rails/commit/0963774c0a6a58ba13ac0ff476352...&lt;/a&gt;)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A has_many through relationship with order raise a exception in rails &gt;= 2.3.9 , in rails 2.3.8 it works fine. 

To replicate:

Apply the following patch to rails source:

@@@

diff --git a/activerecord/test/cases/associations/eager_test.rb b/activerecord/test/cases/associations/eager_test.rb
index b711719..52a9f85 100644
--- a/activerecord/test/cases/associations/eager_test.rb
+++ b/activerecord/test/cases/associations/eager_test.rb
@@ -328,6 +328,12 @@ class EagerAssociationTest &lt; ActiveRecord::TestCase
     assert_equal authors(:david), assert_no_queries { posts_with_comments_and_author.first.author }
   end
 
+  def test_eager_with_has_many_through_with_model_with_include_and_with_order
+    assert_nothing_raised do
+      Author.find(authors(:david).id, :include =&gt; {:posts =&gt; :tags})
+    end
+  end
+
   def test_eager_with_has_many_through_a_belongs_to_association
     author = authors(:mary)
     post = Post.create!(:author =&gt; author, :title =&gt; &quot;TITLE&quot;, :body =&gt; &quot;BODY&quot;)
diff --git a/activerecord/test/models/post.rb b/activerecord/test/models/post.rb
index cf69d04..daab631 100644
--- a/activerecord/test/models/post.rb
+++ b/activerecord/test/models/post.rb
@@ -46,7 +46,7 @@ class Post &lt; ActiveRecord::Base
   has_and_belongs_to_many :special_categories, :join_table =&gt; &quot;categories_posts&quot;, :association_foreign_key =&gt; 'category_id'
 
   has_many :taggings, :as =&gt; :taggable
-  has_many :tags, :through =&gt; :taggings do
+  has_many :tags, :through =&gt; :taggings, :order =&gt; 'tags.id' do
     def add_joins_and_select
       find :all, :select =&gt; 'tags.*, authors.id as author_id', :include =&gt; false,
         :joins =&gt; 'left outer join posts on taggings.taggable_id = posts.id left outer join authors on posts.author_id = authors.id'


@@@


Results of test:

@@@

sand:rails sand$ cd activerecord/
sand:activerecord sand$ rake  TEST=test/cases/associations/eager_test.rb 

...

  1) Failure:
test_eager_with_has_many_through_with_model_with_include_and_with_order(EagerAssociationTest)
    [./test/cases/associations/eager_test.rb:332:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run']:
Exception raised:
Class: &lt;ActiveRecord::StatementInvalid&gt;
Message: &lt;&quot;SQLite3::SQLException: no such column: tags.id: SELECT \&quot;taggings\&quot;.* FROM \&quot;taggings\&quot; WHERE (\&quot;taggings\&quot;.\&quot;taggable_id\&quot; IN (1,2,4,5,6) and \&quot;taggings\&quot;.\&quot;taggable_type\&quot; = 'Post')  ORDER BY tags.id&quot;&gt;
---Backtrace---
./test/cases/../../lib/active_record/connection_adapters/abstract_adapter.rb:227:in `log'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:172:in `execute_without_query_record'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:418:in `catch_schema_changes'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:172:in `execute_without_query_record'
./test/cases/helper.rb:36:in `execute'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:321:in `select'
./test/cases/../../lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
./test/cases/../../lib/active_record/connection_adapters/abstract/query_cache.rb:62:in `select_all'
./test/cases/../../lib/active_record/base.rb:665:in `find_by_sql'
./test/cases/../../lib/active_record/base.rb:1582:in `find_every'
./test/cases/../../lib/active_record/base.rb:619:in `find'
./test/cases/../../lib/active_record/association_preload.rb:379:in `find_associated_records'
./test/cases/../../lib/active_record/base.rb:2182:in `with_scope'
./test/cases/../../lib/active_record/base.rb:2190:in `with_exclusive_scope'
./test/cases/../../lib/active_record/association_preload.rb:378:in `find_associated_records'
./test/cases/../../lib/active_record/association_preload.rb:255:in `preload_has_many_association'
./test/cases/../../lib/active_record/association_preload.rb:120:in `send'
./test/cases/../../lib/active_record/association_preload.rb:120:in `preload_one_association'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../lib/active_record/association_preload.rb:114:in `preload_one_association'
./test/cases/../../lib/active_record/association_preload.rb:91:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:289:in `preload_through_records'
./test/cases/../../lib/active_record/association_preload.rb:243:in `preload_has_many_association'
./test/cases/../../lib/active_record/association_preload.rb:120:in `send'
./test/cases/../../lib/active_record/association_preload.rb:120:in `preload_one_association'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../lib/active_record/association_preload.rb:114:in `preload_one_association'
./test/cases/../../lib/active_record/association_preload.rb:91:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:99:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:93:in `each'
./test/cases/../../lib/active_record/association_preload.rb:93:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:90:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:90:in `each'
./test/cases/../../lib/active_record/association_preload.rb:90:in `preload_associations'
./test/cases/../../lib/active_record/base.rb:1584:in `find_every'
./test/cases/../../lib/active_record/base.rb:1617:in `find_one'
./test/cases/../../lib/active_record/base.rb:1603:in `find_from_ids'
./test/cases/../../lib/active_record/base.rb:620:in `find'
./test/cases/associations/eager_test.rb:333:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
./test/cases/associations/eager_test.rb:332:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run'
---------------

104 tests, 331 assertions, 1 failures, 0 errors


@@@



As I understood this problem appeared after the commit 0963774c0a6a58ba13ac (https://github.com/rails/rails/commit/0963774c0a6a58ba13ac0ff4763527ea7d994c0a)</body>
      <body-html>&lt;div&gt;&lt;p&gt;A has_many through relationship with order raise a exception in
rails &amp;gt;= 2.3.9 , in rails 2.3.8 it works fine.&lt;/p&gt;
&lt;p&gt;To replicate:&lt;/p&gt;
&lt;p&gt;Apply the following patch to rails source:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
diff --git a/activerecord/test/cases/associations/eager_test.rb b/activerecord/test/cases/associations/eager_test.rb
index b711719..52a9f85 100644
--- a/activerecord/test/cases/associations/eager_test.rb
+++ b/activerecord/test/cases/associations/eager_test.rb
@@ -328,6 +328,12 @@ class EagerAssociationTest &amp;lt; ActiveRecord::TestCase
     assert_equal authors(:david), assert_no_queries { posts_with_comments_and_author.first.author }
   end
 
+  def test_eager_with_has_many_through_with_model_with_include_and_with_order
+    assert_nothing_raised do
+      Author.find(authors(:david).id, :include =&amp;gt; {:posts =&amp;gt; :tags})
+    end
+  end
+
   def test_eager_with_has_many_through_a_belongs_to_association
     author = authors(:mary)
     post = Post.create!(:author =&amp;gt; author, :title =&amp;gt; &quot;TITLE&quot;, :body =&amp;gt; &quot;BODY&quot;)
diff --git a/activerecord/test/models/post.rb b/activerecord/test/models/post.rb
index cf69d04..daab631 100644
--- a/activerecord/test/models/post.rb
+++ b/activerecord/test/models/post.rb
@@ -46,7 +46,7 @@ class Post &amp;lt; ActiveRecord::Base
   has_and_belongs_to_many :special_categories, :join_table =&amp;gt; &quot;categories_posts&quot;, :association_foreign_key =&amp;gt; 'category_id'
 
   has_many :taggings, :as =&amp;gt; :taggable
-  has_many :tags, :through =&amp;gt; :taggings do
+  has_many :tags, :through =&amp;gt; :taggings, :order =&amp;gt; 'tags.id' do
     def add_joins_and_select
       find :all, :select =&amp;gt; 'tags.*, authors.id as author_id', :include =&amp;gt; false,
         :joins =&amp;gt; 'left outer join posts on taggings.taggable_id = posts.id left outer join authors on posts.author_id = authors.id'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Results of test:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
sand:rails sand$ cd activerecord/
sand:activerecord sand$ rake  TEST=test/cases/associations/eager_test.rb 

...

  1) Failure:
test_eager_with_has_many_through_with_model_with_include_and_with_order(EagerAssociationTest)
    [./test/cases/associations/eager_test.rb:332:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run']:
Exception raised:
Class: &amp;lt;ActiveRecord::StatementInvalid&amp;gt;
Message: &amp;lt;&quot;SQLite3::SQLException: no such column: tags.id: SELECT \&quot;taggings\&quot;.* FROM \&quot;taggings\&quot; WHERE (\&quot;taggings\&quot;.\&quot;taggable_id\&quot; IN (1,2,4,5,6) and \&quot;taggings\&quot;.\&quot;taggable_type\&quot; = 'Post')  ORDER BY tags.id&quot;&amp;gt;
---Backtrace---
./test/cases/../../lib/active_record/connection_adapters/abstract_adapter.rb:227:in `log'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:172:in `execute_without_query_record'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:418:in `catch_schema_changes'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:172:in `execute_without_query_record'
./test/cases/helper.rb:36:in `execute'
./test/cases/../../lib/active_record/connection_adapters/sqlite_adapter.rb:321:in `select'
./test/cases/../../lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
./test/cases/../../lib/active_record/connection_adapters/abstract/query_cache.rb:62:in `select_all'
./test/cases/../../lib/active_record/base.rb:665:in `find_by_sql'
./test/cases/../../lib/active_record/base.rb:1582:in `find_every'
./test/cases/../../lib/active_record/base.rb:619:in `find'
./test/cases/../../lib/active_record/association_preload.rb:379:in `find_associated_records'
./test/cases/../../lib/active_record/base.rb:2182:in `with_scope'
./test/cases/../../lib/active_record/base.rb:2190:in `with_exclusive_scope'
./test/cases/../../lib/active_record/association_preload.rb:378:in `find_associated_records'
./test/cases/../../lib/active_record/association_preload.rb:255:in `preload_has_many_association'
./test/cases/../../lib/active_record/association_preload.rb:120:in `send'
./test/cases/../../lib/active_record/association_preload.rb:120:in `preload_one_association'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../lib/active_record/association_preload.rb:114:in `preload_one_association'
./test/cases/../../lib/active_record/association_preload.rb:91:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:289:in `preload_through_records'
./test/cases/../../lib/active_record/association_preload.rb:243:in `preload_has_many_association'
./test/cases/../../lib/active_record/association_preload.rb:120:in `send'
./test/cases/../../lib/active_record/association_preload.rb:120:in `preload_one_association'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../../activesupport/lib/active_support/ordered_hash.rb:115:in `each'
./test/cases/../../lib/active_record/association_preload.rb:114:in `preload_one_association'
./test/cases/../../lib/active_record/association_preload.rb:91:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:99:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:93:in `each'
./test/cases/../../lib/active_record/association_preload.rb:93:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:90:in `preload_associations'
./test/cases/../../lib/active_record/association_preload.rb:90:in `each'
./test/cases/../../lib/active_record/association_preload.rb:90:in `preload_associations'
./test/cases/../../lib/active_record/base.rb:1584:in `find_every'
./test/cases/../../lib/active_record/base.rb:1617:in `find_one'
./test/cases/../../lib/active_record/base.rb:1603:in `find_from_ids'
./test/cases/../../lib/active_record/base.rb:620:in `find'
./test/cases/associations/eager_test.rb:333:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
./test/cases/associations/eager_test.rb:332:in `test_eager_with_has_many_through_with_model_with_include_and_with_order'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run'
---------------

104 tests, 331 assertions, 1 failures, 0 errors&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As I understood this problem appeared after the commit
0963774c0a6a58ba13ac (&lt;a href=
&quot;https://github.com/rails/rails/commit/0963774c0a6a58ba13ac0ff4763527ea7d994c0a&quot;&gt;https://github.com/rails/rails/commit/0963774c0a6a58ba13ac0ff476352...&lt;/a&gt;)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-13T15:49:11+00:00</created-at>
      <creator-id type="integer">54726</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6425</number>
      <permalink>has-many-through-with-order-eager-loading-problem-in-rails-2311</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has many through with order eager loading problem in rails 2.3.11</title>
      <updated-at type="datetime">2011-02-13T15:49:15+00:00</updated-at>
      <user-id type="integer">54726</user-id>
      <version type="integer">1</version>
      <user-name>Andrey Stikheev</user-name>
      <creator-name>Andrey Stikheev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6425</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>fe088664e36683263e43154e5464c93294b05440</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-13T15:49:11+00:00</created-at>
      <filename>eager_load_with_order_test.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">909979</id>
      <size type="integer">1577</size>
      <uploader-id type="integer">54726</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/909979/eager_load_with_order_test.diff</url>
    </attachment>
  </attachments>
</ticket>
