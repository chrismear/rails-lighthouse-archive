<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-07T15:10:39+01:00</created-at>
  <creator-id type="integer">25489</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">564</number>
  <permalink>dangerous-float-operations</permalink>
  <priority type="integer">58</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activerecord bug</tag>
  <title>dangerous float operations</title>
  <updated-at type="datetime">2008-09-18T05:53:14+01:00</updated-at>
  <user-id type="integer">14890</user-id>
  <version type="integer">7</version>
  <user-name>Tarmo T&#228;nav</user-name>
  <creator-name>Tomash</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/564</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>While implementing storage of price/cost/balance in cents I've stumbled upon one nasty bug. Consider the following code:
@@@ ruby
class Account &lt; ActiveRecord::Base
def balance=(amount)
&#160; write_attribute(:balance, amount.to_f*100.0)
end
end
@@@
(analogous accessor code omitted)
It works as expected... usually. That is, there's one magical number - 4.6 - which sets the field balance not to 460, but to 459, thus screwing up the whole purpose of this.
4.6 is the only magical number I could find - others work like charm and expected.

In Ruby (not on Rails) works as expected:
@@@ ruby
class Act
  def balance=(amount)
    @balance = amount.to_f*100
  end
end</original-body>
  <latest-body>While implementing storage of price/cost/balance in cents I've stumbled upon one nasty bug. Consider the following code:
@@@ ruby
class Account &lt; ActiveRecord::Base
def balance=(amount)
&#160; write_attribute(:balance, amount.to_f*100.0)
end
end
@@@
(analogous accessor code omitted)
It works as expected... usually. That is, there's one magical number - 4.6 - which sets the field balance not to 460, but to 459, thus screwing up the whole purpose of this.
4.6 is the only magical number I could find - others work like charm and expected.

In Ruby (not on Rails) works as expected:
@@@ ruby
class Act
  def balance=(amount)
    @balance = amount.to_f*100
  end
end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
While implementing storage of price/cost/balance in cents I've stumbled upon one nasty bug. Consider the following code:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Account &amp;lt; ActiveRecord::Base
def balance=(amount)
&#160; write_attribute(:balance, amount.to_f*100.0)
end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
(analogous accessor code omitted)
&lt;/p&gt;&lt;p&gt;
It works as expected... usually. That is, there's one magical number - 4.6 - which sets the field balance not to 460, but to 459, thus screwing up the whole purpose of this.
&lt;/p&gt;&lt;p&gt;
4.6 is the only magical number I could find - others work like charm and expected.
&lt;/p&gt;&lt;p&gt;
In Ruby (not on Rails) works as expected:
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>While implementing storage of price/cost/balance in cents I've stumbled upon one nasty bug. Consider the following code:
@@@ ruby
class Account &lt; ActiveRecord::Base
def balance=(amount)
&#160; write_attribute(:balance, amount.to_f*100.0)
end
end
@@@
(analogous accessor code omitted)
It works as expected... usually. That is, there's one magical number - 4.6 - which sets the field balance not to 460, but to 459, thus screwing up the whole purpose of this.
4.6 is the only magical number I could find - others work like charm and expected.

In Ruby (not on Rails) works as expected:
@@@ ruby
class Act
  def balance=(amount)
    @balance = amount.to_f*100
  end
end
@@@
that is, for 4.6 works like for all the other numbers.

EDIT: This problem seems to be related to to_i method called on floats. AND it seems to be Ruby-related
@@@
irb(main):005:0&gt; (895.0).to_i
=&gt; 895
irb(main):006:0&gt; (8.95*100).to_i
=&gt; 894
@@@
(yes, I've just discovered that to_i just cuts away everything after the point) 

Workaround: add a tiny number to the converted one OR use .round
@@@
irb(main):007:0&gt; (8.95*100 + 0.0000001).to_i
=&gt; 895
irb(main):007:0&gt; (8.95*100).round
=&gt; 895
@@@

Proposed solution: make field accessors for integer fields use .round instead of to_i.
As for now, I'm good with adding .round in my custom accessor.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
While implementing storage of price/cost/balance in cents I've stumbled upon one nasty bug. Consider the following code:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Account &amp;lt; ActiveRecord::Base
def balance=(amount)
&#160; write_attribute(:balance, amount.to_f*100.0)
end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
(analogous accessor code omitted)
&lt;/p&gt;&lt;p&gt;
It works as expected... usually. That is, there's one magical number - 4.6 - which sets the field balance not to 460, but to 459, thus screwing up the whole purpose of this.
&lt;/p&gt;&lt;p&gt;
4.6 is the only magical number I could find - others work like charm and expected.
&lt;/p&gt;&lt;p&gt;
In Ruby (not on Rails) works as expected:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Act
  def balance=(amount)
    @balance = amount.to_f*100
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
that is, for 4.6 works like for all the other numbers.
&lt;/p&gt;&lt;p&gt;
EDIT: This problem seems to be related to to_i method called on floats. AND it seems to be Ruby-related
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;irb(main):005:0&amp;gt; (895.0).to_i
=&amp;gt; 895
irb(main):006:0&amp;gt; (8.95*100).to_i
=&amp;gt; 894&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
(yes, I've just discovered that to_i just cuts away everything after the point)
&lt;/p&gt;&lt;p&gt;
Workaround: add a tiny number to the converted one OR use .round
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;irb(main):007:0&amp;gt; (8.95*100 + 0.0000001).to_i
=&amp;gt; 895
irb(main):007:0&amp;gt; (8.95*100).round
=&amp;gt; 895&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Proposed solution: make field accessors for integer fields use .round instead of to_i.
&lt;/p&gt;&lt;p&gt;
As for now, I'm good with adding .round in my custom accessor.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-07T15:46:36+01:00</created-at>
      <creator-id type="integer">25489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">564</number>
      <permalink>dangerous-float-operations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>dangerous float operations</title>
      <updated-at type="datetime">2008-07-07T15:46:36+01:00</updated-at>
      <user-id type="integer">25489</user-id>
      <version type="integer">1</version>
      <user-name>Tomash</user-name>
      <creator-name>Tomash</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/564</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Update: 8.95 is also a &quot;magical number&quot; inside ActiveRecord, i.e. balance=8.95 sets balance field to 894. Other numbers &quot;around&quot; seem OK.
@@@
&gt;&gt; a.balance=(8.95)
=&gt; 8.95
&gt;&gt; a.balance
=&gt; 894
&gt;&gt; a.balance=(8.93)
=&gt; 8.93
&gt;&gt; a.balance
=&gt; 893
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Update: 8.95 is also a &quot;magical number&quot; inside ActiveRecord, i.e. balance=8.95 sets balance field to 894. Other numbers &quot;around&quot; seem OK.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; a.balance=(8.95)
=&amp;gt; 8.95
&amp;gt;&amp;gt; a.balance
=&amp;gt; 894
&amp;gt;&amp;gt; a.balance=(8.93)
=&amp;gt; 8.93
&amp;gt;&amp;gt; a.balance
=&amp;gt; 893&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-07T15:37:50+01:00</created-at>
      <creator-id type="integer">25489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">564</number>
      <permalink>dangerous-float-operations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>dangerous float operations</title>
      <updated-at type="datetime">2008-07-07T15:37:50+01:00</updated-at>
      <user-id type="integer">25489</user-id>
      <version type="integer">2</version>
      <user-name>Tomash</user-name>
      <creator-name>Tomash</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/564</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is no bug, floating point numbers are inaccurate by design.

The only reason people muck around with cents for money values is to avoid the floating point issue.
This approach really hasn't been viable since 1.2, when ActiveRecord finally got support for decimal columns, but it seems like many pick it up from outdated tutorials floating around on the web.</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is no bug, floating point numbers are inaccurate by design.&lt;/p&gt;

&lt;p&gt;The only reason people muck around with cents for money values is to avoid the floating point issue.
This approach really hasn't been viable since 1.2, when ActiveRecord finally got support for decimal columns, but it seems like many pick it up from outdated tutorials floating around on the web.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-07T13:23:50+01:00</created-at>
      <creator-id type="integer">25489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">564</number>
      <permalink>dangerous-float-operations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>dangerous float operations</title>
      <updated-at type="datetime">2008-08-07T13:23:50+01:00</updated-at>
      <user-id type="integer">28382</user-id>
      <version type="integer">3</version>
      <user-name>isak</user-name>
      <creator-name>Tomash</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/564</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Tomasz,

There's &lt;a href=&quot;http://en.wikipedia.org/wiki/Floating_point#Accuracy_problems&quot;&gt;more info on the details here&lt;/a&gt;, but isak is right - storage of floating point numbers in binary representation is less accurate then you'd think.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Tomasz,&lt;/p&gt;

&lt;p&gt;There's &lt;a href=&quot;http://en.wikipedia.org/wiki/Floating_point#Accuracy_problems&quot;&gt;more info on the details here&lt;/a&gt;, but isak is right - storage of floating point numbers in binary representation is less accurate then you'd think.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T21:58:34+01:00</created-at>
      <creator-id type="integer">25489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">564</number>
      <permalink>dangerous-float-operations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>dangerous float operations</title>
      <updated-at type="datetime">2008-08-09T21:58:34+01:00</updated-at>
      <user-id type="integer">7840</user-id>
      <version type="integer">4</version>
      <user-name>Jim Lindley</user-name>
      <creator-name>Tomash</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/564</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A classic paper on this is http://docs.sun.com/source/806-3568/ncg_goldberg.html</body>
      <body-html>&lt;div&gt;&lt;p&gt;A classic paper on this is &lt;a href=&quot;http://docs.sun.com/source/806-3568/ncg_goldberg.html&quot;&gt;http://docs.sun.com/source/806-3...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-10T00:18:29+01:00</created-at>
      <creator-id type="integer">25489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">564</number>
      <permalink>dangerous-float-operations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>dangerous float operations</title>
      <updated-at type="datetime">2008-08-10T00:18:29+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">5</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Tomash</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/564</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I know, I know. We're using INT columnt because of that and convert numbers on-the-fly by overloading amount and amount= methods in our models. But I've just realised it's a bad approach and we should just represent them as ints also internally, doing the &quot;conversion&quot; only on the view level.

Sorry for the hassle, You can close it as invalid/wontfix/reporter_incompetent ;)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I know, I know. We're using INT columnt because of that and convert numbers on-the-fly by overloading amount and amount= methods in our models. But I've just realised it's a bad approach and we should just represent them as ints also internally, doing the &quot;conversion&quot; only on the view level.&lt;/p&gt;

&lt;p&gt;Sorry for the hassle, You can close it as invalid/wontfix/reporter_incompetent ;)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-10T16:32:15+01:00</created-at>
      <creator-id type="integer">25489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">564</number>
      <permalink>dangerous-float-operations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug</tag>
      <title>dangerous float operations</title>
      <updated-at type="datetime">2008-08-10T16:32:15+01:00</updated-at>
      <user-id type="integer">25489</user-id>
      <version type="integer">6</version>
      <user-name>Tomash</user-name>
      <creator-name>Tomash</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/564</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-18T05:53:09+01:00</created-at>
      <creator-id type="integer">25489</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: activerecord bug
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">564</number>
      <permalink>dangerous-float-operations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord bug</tag>
      <title>dangerous float operations</title>
      <updated-at type="datetime">2008-09-18T05:53:14+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">7</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Tomash</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/564</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
