<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-06-03T16:17:46+01:00</created-at>
  <creator-id type="integer">82</creator-id>
  <milestone-due-on type="datetime">2009-06-09T00:00:00+01:00</milestone-due-on>
  <milestone-id type="integer">41795</milestone-id>
  <number type="integer">2753</number>
  <permalink>to_json-behavior-still-different-between-rails-2321-and-rails-2-3-stable</permalink>
  <priority type="integer">1</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2-3-stable 2.3.2.1 active_support to_json</tag>
  <title>#to_json behavior still different between Rails 2.3.2.1 and Rails 2-3-stable</title>
  <updated-at type="datetime">2009-06-08T21:24:37+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">7</version>
  <user-name>Repository</user-name>
  <creator-name>Cody Fauser</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2753</url>
  <milestone-title>2.3.3</milestone-title>
  <priority-name>High</priority-name>
  <original-body>Ticket #2690 helped the problems with to_json serialization in the Rails 2.3 branch, but the behavior of to_json is still different between Rails 2.3.2.1 and Rails 2.3-stable. The following example illustrates the problem:

@@@ ruby
class A
  def initialize
    @a, @b = 1, 2
  end
  
  def to_json(options = {})
    @a.to_json(options)
  end
end

class B
  def initialize
    @a = A.new
  end
end
@@@


In Rails 2.3.2.1 the output is the following:
@@@ ruby
b = B.new
b.to_json #=&gt; {&quot;a&quot;: 1}
@@@

In Rails 2.3-stable the output is:
@@@ ruby
b = B.new
b.to_json #=&gt; {&quot;a&quot;:{&quot;a&quot;:1,&quot;b&quot;:2}}
@@@

The problem is caused by ActiveSupport::JSON.encode calling rails_to_json instead of to_json on the objects. Overridden to_json() methods child objects are never called.

Going forward all objects will have to have a rails_to_json() method, but the problem is that this functionality changed in the stable 2-3 branch. 

In Shopify we have monkey patched active_support/json/encoding.rb to call value.to_json() instead of value.rails_to_json() to achieve the same output from Rails 2.3.2.1.</original-body>
  <latest-body>Ticket #2690 helped the problems with to_json serialization in the Rails 2.3 branch, but the behavior of to_json is still different between Rails 2.3.2.1 and Rails 2.3-stable. The following example illustrates the problem:

@@@ ruby
class A
  def initialize
    @a, @b = 1, 2
  end
  
  def to_json(options = {})
    @a.to_json(options)
  end
end

class B
  def initialize
    @a = A.new
  end
end
@@@


In Rails 2.3.2.1 the output is the following:
@@@ ruby
b = B.new
b.to_json #=&gt; {&quot;a&quot;: 1}
@@@

In Rails 2.3-stable the output is:
@@@ ruby
b = B.new
b.to_json #=&gt; {&quot;a&quot;:{&quot;a&quot;:1,&quot;b&quot;:2}}
@@@

The problem is caused by ActiveSupport::JSON.encode calling rails_to_json instead of to_json on the objects. Overridden to_json() methods child objects are never called.

Going forward all objects will have to have a rails_to_json() method, but the problem is that this functionality changed in the stable 2-3 branch. 

In Shopify we have monkey patched active_support/json/encoding.rb to call value.to_json() instead of value.rails_to_json() to achieve the same output from Rails 2.3.2.1.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Ticket &lt;a href=&quot;/projects/8994/tickets/2690&quot; title=&quot;Ticket #2690&quot;&gt;#2690&lt;/a&gt; helped the problems with to_json
serialization in the Rails 2.3 branch, but the behavior of to_json
is still different between Rails 2.3.2.1 and Rails 2.3-stable. The
following example illustrates the problem:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class A
  def initialize
    @a, @b = 1, 2
  end
  
  def to_json(options = {})
    @a.to_json(options)
  end
end

class B
  def initialize
    @a = A.new
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In Rails 2.3.2.1 the output is the following:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
b = B.new
b.to_json #=&amp;gt; {&amp;quot;a&amp;quot;: 1}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In Rails 2.3-stable the output is:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
b = B.new
b.to_json #=&amp;gt; {&amp;quot;a&amp;quot;:{&amp;quot;a&amp;quot;:1,&amp;quot;b&amp;quot;:2}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem is caused by ActiveSupport::JSON.encode calling
rails_to_json instead of to_json on the objects. Overridden
to_json() methods child objects are never called.&lt;/p&gt;
&lt;p&gt;Going forward all objects will have to have a rails_to_json()
method, but the problem is that this functionality changed in the
stable 2-3 branch.&lt;/p&gt;
&lt;p&gt;In Shopify we have monkey patched
active_support/json/encoding.rb to call value.to_json() instead of
value.rails_to_json() to achieve the same output from Rails
2.3.2.1.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ticket #2690 helped the problems with to_json serialization in the Rails 2.3 branch, but the behavior of to_json is still different between Rails 2.3.2.1 and Rails 2.3-stable. The following example illustrates the problem:

@@@ ruby
class A
  def initialize
    @a, @b = 1, 2
  end
  
  def to_json(options = {})
    @a.to_json(options)
  end
end

class B
  def initialize
    @a = A.new
  end
end
@@@


In Rails 2.3.2.1 the output is the following:
@@@ ruby
b = B.new
b.to_json #=&gt; {&quot;a&quot;: 1}
@@@

In Rails 2.3-stable the output is:
@@@ ruby
b = B.new
b.to_json #=&gt; {&quot;a&quot;:{&quot;a&quot;:1,&quot;b&quot;:2}}
@@@

The problem is caused by ActiveSupport::JSON.encode calling rails_to_json instead of to_json on the objects. Overridden to_json() methods child objects are never called.

Going forward all objects will have to have a rails_to_json() method, but the problem is that this functionality changed in the stable 2-3 branch. 

In Shopify we have monkey patched active_support/json/encoding.rb to call value.to_json() instead of value.rails_to_json() to achieve the same output from Rails 2.3.2.1.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ticket &lt;a href=&quot;/projects/8994/tickets/2690&quot; title=
&quot;Ticket #2690&quot;&gt;#2690&lt;/a&gt; helped the problems with to_json
serialization in the Rails 2.3 branch, but the behavior of to_json
is still different between Rails 2.3.2.1 and Rails 2.3-stable. The
following example illustrates the problem:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class A
  def initialize
    @a, @b = 1, 2
  end
  
  def to_json(options = {})
    @a.to_json(options)
  end
end

class B
  def initialize
    @a = A.new
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In Rails 2.3.2.1 the output is the following:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;b = B.new
b.to_json #=&amp;gt; {&quot;a&quot;: 1}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In Rails 2.3-stable the output is:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;b = B.new
b.to_json #=&amp;gt; {&quot;a&quot;:{&quot;a&quot;:1,&quot;b&quot;:2}}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The problem is caused by ActiveSupport::JSON.encode calling
rails_to_json instead of to_json on the objects. Overridden
to_json() methods child objects are never called.&lt;/p&gt;
&lt;p&gt;Going forward all objects will have to have a rails_to_json()
method, but the problem is that this functionality changed in the
stable 2-3 branch.&lt;/p&gt;
&lt;p&gt;In Shopify we have monkey patched
active_support/json/encoding.rb to call value.to_json() instead of
value.rails_to_json() to achieve the same output from Rails
2.3.2.1.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-03T16:17:46+01:00</created-at>
      <creator-id type="integer">82</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2753</number>
      <permalink>to_json-behavior-still-different-between-rails-2321-and-rails-2-3-stable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable 2.3.2.1 active_support to_json</tag>
      <title>#to_json behavior still different between Rails 2.3.2.1 and Rails 2-3-stable</title>
      <updated-at type="datetime">2009-06-03T16:17:48+01:00</updated-at>
      <user-id type="integer">82</user-id>
      <version type="integer">1</version>
      <user-name>Cody Fauser</user-name>
      <creator-name>Cody Fauser</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2753</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given this I think we have no choice but to revert the rails_to_json change from 2-3-stable and figure out a plan for deprecation.

It can remain in master of course.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given this I think we have no choice but to revert the
rails_to_json change from 2-3-stable and figure out a plan for
deprecation.&lt;/p&gt;
&lt;p&gt;It can remain in master of course.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-03T21:23:55+01:00</created-at>
      <creator-id type="integer">82</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2753</number>
      <permalink>to_json-behavior-still-different-between-rails-2321-and-rails-2-3-stable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable 2.3.2.1 active_support to_json</tag>
      <title>#to_json behavior still different between Rails 2.3.2.1 and Rails 2-3-stable</title>
      <updated-at type="datetime">2009-06-03T21:23:58+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Cody Fauser</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2753</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-06T05:05:36+01:00</created-at>
      <creator-id type="integer">82</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">41795</milestone-id>
      <number type="integer">2753</number>
      <permalink>to_json-behavior-still-different-between-rails-2321-and-rails-2-3-stable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable 2.3.2.1 active_support to_json</tag>
      <title>#to_json behavior still different between Rails 2.3.2.1 and Rails 2-3-stable</title>
      <updated-at type="datetime">2009-06-06T05:05:38+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">3</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Cody Fauser</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2753</url>
      <milestone-title>2.3.3</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What a headache. Overriding to_json to provide custom JSON representations is a bad API decision. Instead we should be overriding a dump_json method to provide a Hash, Array, etc to encode. Then we don't have to walk the path of
@@@ ruby
class Custom
  def to_json(*strange_internal_state)
    { :alternate =&gt; 'representation' }.to_json(*strange_internal_state)
  end
end
@@@
Instead we have the much cleaner
@@@ ruby
class Custom
  def dump_json(options_hash)
    { :alternate =&gt; 'representation' }
  end
end
@@@
I'm reverting the change in 2-3-stable but will move to this new API in master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What a headache. Overriding to_json to provide custom JSON
representations is a bad API decision. Instead we should be
overriding a dump_json method to provide a Hash, Array, etc to
encode. Then we don't have to walk the path of&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Custom
  def to_json(*strange_internal_state)&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&lt;code&gt;{ :alternate =&amp;amp;gt; 'representation' }.to_json(*strange_internal_state)&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
  end
end
&lt;/pre&gt;
Instead we have the much cleaner&lt;br&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Custom
  def dump_json(options_hash)&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&lt;code&gt;{ :alternate =&amp;amp;gt; 'representation' }&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
  end
end
&lt;/pre&gt;
I'm reverting the change in 2-3-stable but will move to this new
API in master.&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-07T00:32:33+01:00</created-at>
      <creator-id type="integer">82</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 1
</diffable-attributes>
      <milestone-id type="integer">41795</milestone-id>
      <number type="integer">2753</number>
      <permalink>to_json-behavior-still-different-between-rails-2321-and-rails-2-3-stable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable 2.3.2.1 active_support to_json</tag>
      <title>#to_json behavior still different between Rails 2.3.2.1 and Rails 2-3-stable</title>
      <updated-at type="datetime">2009-06-07T00:32:35+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Cody Fauser</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2753</url>
      <milestone-title>2.3.3</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sounds like an improvement for sure.  Not sold on the name, but it
beats the 'return a json string' api that's very brittle.

When you revert this from 2-3-stable move this ticket's milestone to 3.0</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sounds like an improvement for sure. Not sold on the name, but
it&lt;br&gt;
beats the 'return a json string' api that's very brittle.&lt;/p&gt;
&lt;p&gt;When you revert this from 2-3-stable move this ticket's
milestone to 3.0&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-07T04:44:50+01:00</created-at>
      <creator-id type="integer">82</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">41795</milestone-id>
      <number type="integer">2753</number>
      <permalink>to_json-behavior-still-different-between-rails-2321-and-rails-2-3-stable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable 2.3.2.1 active_support to_json</tag>
      <title>#to_json behavior still different between Rails 2.3.2.1 and Rails 2-3-stable</title>
      <updated-at type="datetime">2009-06-07T04:44:51+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">5</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Cody Fauser</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2753</url>
      <milestone-title>2.3.3</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The naming mirrors Marshal's choice of marshal_dump/load</body>
      <body-html>&lt;div&gt;&lt;p&gt;The naming mirrors Marshal's choice of marshal_dump/load&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-07T06:12:13+01:00</created-at>
      <creator-id type="integer">82</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">41795</milestone-id>
      <number type="integer">2753</number>
      <permalink>to_json-behavior-still-different-between-rails-2321-and-rails-2-3-stable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable 2.3.2.1 active_support to_json</tag>
      <title>#to_json behavior still different between Rails 2.3.2.1 and Rails 2-3-stable</title>
      <updated-at type="datetime">2009-06-07T06:12:19+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Cody Fauser</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2753</url>
      <milestone-title>2.3.3</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [4a78dae2ab43b5ba94fa06b345e9edeb0305fe44]) Revert rails_to_json -&gt; to_json so we don't break compatibility

[#2753 state:resolved]
http://github.com/rails/rails/commit/4a78dae2ab43b5ba94fa06b345e9edeb0305fe44</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/4a78dae2ab43b5ba94fa06b345e9edeb0305fe44&quot;
title=
&quot;Changeset [4a78dae2ab43b5ba94fa06b345e9edeb0305fe44]&quot;&gt;[4a78dae2ab43b5ba94fa06b345e9edeb0305fe44]&lt;/a&gt;)
Revert rails_to_json -&amp;gt; to_json so we don't break
compatibility&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/2753&quot; title=
&quot;Ticket #2753&quot;&gt;#2753&lt;/a&gt; state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/4a78dae2ab43b5ba94fa06b345e9edeb0305fe44&quot;&gt;
http://github.com/rails/rails/commit/4a78dae2ab43b5ba94fa06b345e9ed...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-08T21:24:36+01:00</created-at>
      <creator-id type="integer">82</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">41795</milestone-id>
      <number type="integer">2753</number>
      <permalink>to_json-behavior-still-different-between-rails-2321-and-rails-2-3-stable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable 2.3.2.1 active_support to_json</tag>
      <title>#to_json behavior still different between Rails 2.3.2.1 and Rails 2-3-stable</title>
      <updated-at type="datetime">2009-06-08T21:24:37+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>Cody Fauser</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2753</url>
      <milestone-title>2.3.3</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
