<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-25T11:12:45+01:00</created-at>
  <creator-id type="integer">586</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">484</number>
  <permalink>remove-symbol-to_proc-from-framework-code</permalink>
  <priority type="integer">13</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>patch performance</tag>
  <title>Remove Symbol#to_proc from framework code</title>
  <updated-at type="datetime">2008-07-09T18:47:05+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">26</version>
  <user-name>Repository</user-name>
  <creator-name>Cheah Chu Yeow</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
  <priority-name nil="true"></priority-name>
  <original-body>Simple series of patches (broken into each component - ActionPack, AR, etc.) that replaces occurrences of Symbol#to_proc in framework code (excluding test code since it's ok there for readability).

No new tests added since no functionality is changed - existing tests pass.</original-body>
  <latest-body>Simple series of patches (broken into each component - ActionPack, AR, etc.) that replaces occurrences of Symbol#to_proc in framework code (excluding test code since it's ok there for readability).

No new tests added since no functionality is changed - existing tests pass.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Simple series of patches (broken into each component - ActionPack, AR, etc.) that replaces occurrences of Symbol#to_proc in framework code (excluding test code since it's ok there for readability).
&lt;/p&gt;&lt;p&gt;
No new tests added since no functionality is changed - existing tests pass.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Simple series of patches (broken into each component - ActionPack, AR, etc.) that replaces occurrences of Symbol#to_proc in framework code with the vanilla way (excluding test code since it's ok there for readability).

No new tests added since no functionality is changed - existing tests pass.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Simple series of patches (broken into each component - ActionPack, AR, etc.) that replaces occurrences of Symbol#to_proc in framework code with the vanilla way (excluding test code since it's ok there for readability).
&lt;/p&gt;&lt;p&gt;
No new tests added since no functionality is changed - existing tests pass.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T11:13:33+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T11:13:33+01:00</updated-at>
      <user-id type="integer">586</user-id>
      <version type="integer">1</version>
      <user-name>Cheah Chu Yeow</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I don't understand the reason for this patch.  Can you explain further?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I don't understand the reason for this patch.  Can you explain further?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T14:42:30+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T14:42:30+01:00</updated-at>
      <user-id type="integer">13443</user-id>
      <version type="integer">2</version>
      <user-name>Tammer Saleh</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ah I'm sorry, of course, I forgot the most important thing.

Symbol#to_proc, the way it is defined in Rails (as a core extension), is slower than just using plain blocks (see http://www.lukeredpath.co.uk/2007/11/26/optimising-symbol-to_proc - old but still true).

Ruby 1.9 defines Symbol#to_proc natively and it's reportedly faster but I'd say almost everyone running Rails is still on 1.8.x (not because of Rails, but because of other dependencies).

Anyway, this patch simply replaces invocations of Symbol#to_proc with a plain block argument in the framework code. This should improvement performance slightly.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Ah I'm sorry, of course, I forgot the most important thing.
&lt;/p&gt;&lt;p&gt;
Symbol#to_proc, the way it is defined in Rails (as a core extension), is slower than just using plain blocks (see &lt;a href=&quot;http://www.lukeredpath.co.uk/2007/11/26/optimising-symbol-to_proc&quot;&gt;http://www.lukeredpath.co.uk/200...&lt;/a&gt; - old but still true).
&lt;/p&gt;&lt;p&gt;
Ruby 1.9 defines Symbol#to_proc natively and it's reportedly faster but I'd say almost everyone running Rails is still on 1.8.x (not because of Rails, but because of other dependencies).
&lt;/p&gt;&lt;p&gt;
Anyway, this patch simply replaces invocations of Symbol#to_proc with a plain block argument in the framework code. This should improvement performance slightly.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T14:53:07+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T14:53:07+01:00</updated-at>
      <user-id type="integer">586</user-id>
      <version type="integer">3</version>
      <user-name>Cheah Chu Yeow</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>-1

I'd argue that the slight performance increase isn't worth the readability hit introduced by this patch.  Take, for example, this snippet:

@@@ ruby
filter_chain.select(&amp;:after?).map(&amp;:method)
@@@

Which is changed to:

@@@ ruby
filters = []
for filter in filter_chain
  filters &lt;&lt; filter.method if filter.after?
end
filters
@@@

Also, since Symbol#to_proc will be in 1.9 (as you said), the performance issue is only temporary.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
-1
&lt;/p&gt;&lt;p&gt;
I'd argue that the slight performance increase isn't worth the readability hit introduced by this patch.  Take, for example, this snippet:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;filter_chain.select(&amp;amp;:after?).map(&amp;amp;:method)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Which is changed to:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;filters = []
for filter in filter_chain
  filters &amp;lt;&amp;lt; filter.method if filter.after?
end
filters&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Also, since Symbol#to_proc will be in 1.9 (as you said), the performance issue is only temporary.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T14:56:43+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T14:56:43+01:00</updated-at>
      <user-id type="integer">13443</user-id>
      <version type="integer">4</version>
      <user-name>Tammer Saleh</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>If that for loop were changed to an #each block, that would suffice for me, I don't need a return to #map followed by #select.  This patch is for performance, after all, and Rails performance is a concern.  A plain #each is twice as quick as a #map and #select.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
If that for loop were changed to an #each block, that would suffice for me, I don't need a return to #map followed by #select.  This patch is for performance, after all, and Rails performance is a concern.  A plain #each is twice as quick as a #map and #select.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T14:58:35+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T14:58:35+01:00</updated-at>
      <user-id type="integer">17225</user-id>
      <version type="integer">5</version>
      <user-name>Eric Mill</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'd like to see some metrics on how much of a performance boost this produces.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'd like to see some metrics on how much of a performance boost this produces.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T14:59:24+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T14:59:24+01:00</updated-at>
      <user-id type="integer">13443</user-id>
      <version type="integer">6</version>
      <user-name>Tammer Saleh</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>That'd be nice -- but, +1 with or without.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
That'd be nice -- but, +1 with or without.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T15:00:08+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T15:00:08+01:00</updated-at>
      <user-id type="integer">17225</user-id>
      <version type="integer">7</version>
      <user-name>Eric Mill</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I see no reason to remove it, especially since it's in 1.9. If you don't want it, don't use it. For people who prefer readability, they can use it. If your largest bottleneck is Symbol#to_proc, don't use it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I see no reason to remove it, especially since it's in 1.9. If you don't want it, don't use it. For people who prefer readability, they can use it. If your largest bottleneck is Symbol#to_proc, don't use it.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T15:02:46+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T15:02:46+01:00</updated-at>
      <user-id type="integer">10614</user-id>
      <version type="integer">8</version>
      <user-name>Jon Yurek</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm kinda -1 on this as well. As much as I like improving Rails performance, I'm reluctant to sacrifice readability and code beauty for it. My mind could be changed if the metrics showed otherwise though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm kinda -1 on this as well. As much as I like improving Rails performance, I'm reluctant to sacrifice readability and code beauty for it. My mind could be changed if the metrics showed otherwise though.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T15:03:08+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T15:03:08+01:00</updated-at>
      <user-id type="integer">9830</user-id>
      <version type="integer">9</version>
      <user-name>RSL</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Tammer: I disagree, 1.8.x is here and now and will be around for quite awhile. I don't think too much readability is sacrificed here considering this is framework code, not application code.

And yes, Eric is right about the for-loop - it's an intentional change for performance by doing 1 iteration instead of 2. Enumerable#each vs. for-loop doesn't really matter to me - for-loops are very slightly faster than using #each but I personally still prefer #each as a matter of style :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
@Tammer: I disagree, 1.8.x is here and now and will be around for quite awhile. I don't think too much readability is sacrificed here considering this is framework code, not application code.
&lt;/p&gt;&lt;p&gt;
And yes, Eric is right about the for-loop - it's an intentional change for performance by doing 1 iteration instead of 2. Enumerable#each vs. for-loop doesn't really matter to me - for-loops are very slightly faster than using #each but I personally still prefer #each as a matter of style :)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T15:09:54+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T15:09:54+01:00</updated-at>
      <user-id type="integer">586</user-id>
      <version type="integer">10</version>
      <user-name>Cheah Chu Yeow</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>To be clear, the patch doesn't remove Symbol#to_proc - it just removes usage of it in Rails framework code.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
To be clear, the patch doesn't remove Symbol#to_proc - it just removes usage of it in Rails framework code.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T15:11:31+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T15:11:31+01:00</updated-at>
      <user-id type="integer">586</user-id>
      <version type="integer">11</version>
      <user-name>Cheah Chu Yeow</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>bq.  I don't think too much readability is sacrificed here considering this is framework code, not application code.

I disagree with that argument.  Readability is important for code - no matter in what context it's used.  Reducing readability here for no provably good reason just raises the barrier to entry for contributions.

That being said, if I see convincing stats that show a measurable increase in performance, I'll +1 it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
bq.  I don't think too much readability is sacrificed here considering this is framework code, not application code.
&lt;/p&gt;&lt;p&gt;
I disagree with that argument.  Readability is important for code - no matter in what context it's used.  Reducing readability here for no provably good reason just raises the barrier to entry for contributions.
&lt;/p&gt;&lt;p&gt;
That being said, if I see convincing stats that show a measurable increase in performance, I'll +1 it.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T15:13:06+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T15:13:06+01:00</updated-at>
      <user-id type="integer">13443</user-id>
      <version type="integer">12</version>
      <user-name>Tammer Saleh</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yes, I see that now. Still, I question this being a useful (or even significant) speedup.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Yes, I see that now. Still, I question this being a useful (or even significant) speedup.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T15:13:25+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T15:13:25+01:00</updated-at>
      <user-id type="integer">10614</user-id>
      <version type="integer">13</version>
      <user-name>Jon Yurek</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>-1

People who are concerned with performance should not use a lot of things that comes with Rails. However it doesn't mean we should tweak all that code.

In current version of Rails we have the existing code which might be slow but it is fast enough for majority to not to be an issue.

The alternative being proposed is difficult to read.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
-1
&lt;/p&gt;&lt;p&gt;
People who are concerned with performance should not use a lot of things that comes with Rails. However it doesn't mean we should tweak all that code.
&lt;/p&gt;&lt;p&gt;
In current version of Rails we have the existing code which might be slow but it is fast enough for majority to not to be an issue.
&lt;/p&gt;&lt;p&gt;
The alternative being proposed is difficult to read.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T16:08:52+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T16:08:52+01:00</updated-at>
      <user-id type="integer">18266</user-id>
      <version type="integer">14</version>
      <user-name>Neeraj</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm hearing everyone's call for readability. Really. When I first learnt about Symbol#to_proc, I loved this wonderful thing that made my code more concise and elegant (and that allowed me to show off to non-Rubyists).

I ran a similar benchmark to Luke's at http://www.lukeredpath.co.uk/2007/11/26/optimising-symbol-to_proc and got the same 3-4x improvements for large enumerables (http://pastie.org/221881) and 2x improvement for small ones (http://pastie.org/221882).

It's an itsy bit of perf improvement so it's really up for debate (as is happening now).

I like to think that the readability is worth sacrificing in this case because everybody understands plain old Ruby blocks - it's not like the patched code is *that* much harder to read. Please do point out exactly what you find hard to read (other than what Tammer pointed out above, which may not seem as elegant nor as idiomatic but imho is easier to read).</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm hearing everyone's call for readability. Really. When I first learnt about Symbol#to_proc, I loved this wonderful thing that made my code more concise and elegant (and that allowed me to show off to non-Rubyists).
&lt;/p&gt;&lt;p&gt;
I ran a similar benchmark to Luke's at &lt;a href=&quot;http://www.lukeredpath.co.uk/2007/11/26/optimising-symbol-to_proc&quot;&gt;http://www.lukeredpath.co.uk/200...&lt;/a&gt; and got the same 3-4x improvements for large enumerables (&lt;a href=&quot;http://pastie.org/221881)&quot;&gt;http://pastie.org/221881)&lt;/a&gt; and 2x improvement for small ones (&lt;a href=&quot;http://pastie.org/221882)&quot;&gt;http://pastie.org/221882)&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
It's an itsy bit of perf improvement so it's really up for debate (as is happening now).
&lt;/p&gt;&lt;p&gt;
I like to think that the readability is worth sacrificing in this case because everybody understands plain old Ruby blocks - it's not like the patched code is &lt;strong&gt;that&lt;/strong&gt; much harder to read. Please do point out exactly what you find hard to read (other than what Tammer pointed out above, which may not seem as elegant nor as idiomatic but imho is easier to read).
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T16:31:07+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T16:31:07+01:00</updated-at>
      <user-id type="integer">586</user-id>
      <version type="integer">15</version>
      <user-name>Cheah Chu Yeow</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry the links to the benchmark pasties in my last comment were broken because auto_link included the closing &quot;)&quot;. Here they are:

http://pastie.org/221881
http://pastie.org/221882</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Sorry the links to the benchmark pasties in my last comment were broken because auto_link included the closing &quot;)&quot;. Here they are:
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://pastie.org/221881&quot;&gt;http://pastie.org/221881&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://pastie.org/221882&quot;&gt;http://pastie.org/221882&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T16:35:23+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T16:35:23+01:00</updated-at>
      <user-id type="integer">586</user-id>
      <version type="integer">16</version>
      <user-name>Cheah Chu Yeow</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>-1 
I agree with Tammer et al regarding readability, and I'm also concerned about what kind of precedence this sets.  Are we suggesting that future patches should be rejected in the event that they take advantage of Symbol#to_proc?  

Instead of the micro benchmark on #to_proc itself, what percentage of a typical Rails request is affected by this?  It's got to be so minimal that it's not even part of any significant digits.

(Questions are rhetorical)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
-1
&lt;/p&gt;&lt;p&gt;
I agree with Tammer et al regarding readability, and I'm also concerned about what kind of precedence this sets.  Are we suggesting that future patches should be rejected in the event that they take advantage of Symbol#to_proc?
&lt;/p&gt;&lt;p&gt;
Instead of the micro benchmark on #to_proc itself, what percentage of a typical Rails request is affected by this?  It's got to be so minimal that it's not even part of any significant digits.
&lt;/p&gt;&lt;p&gt;
(Questions are rhetorical)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T18:01:23+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T18:01:23+01:00</updated-at>
      <user-id type="integer">12160</user-id>
      <version type="integer">17</version>
      <user-name>Ryan McGeary</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1.
That stuff doesn't belong in the framework.  KISS and what not.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
+1.
&lt;/p&gt;&lt;p&gt;
That stuff doesn't belong in the framework.  KISS and what not.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T21:25:43+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T21:25:43+01:00</updated-at>
      <user-id type="integer">5026</user-id>
      <version type="integer">18</version>
      <user-name>James Herdman</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&gt; That stuff doesn't belong in the framework. KISS and what not. 

Respectfully, I think that's crazy.  Why stop here?  Why not instead re-write rails as a giant C extension?

(Again rhetorical)

I'm sure way more human cycles were spent on this thread than all the CPU cycles &quot;churning&quot; through Symbol#to_proc.  Let's keep things in perspective.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;&lt;p&gt;
That stuff doesn't belong in the framework. KISS and what not.
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;
Respectfully, I think that's crazy.  Why stop here?  Why not instead re-write rails as a giant C extension?
&lt;/p&gt;&lt;p&gt;
(Again rhetorical)
&lt;/p&gt;&lt;p&gt;
I'm sure way more human cycles were spent on this thread than all the CPU cycles &quot;churning&quot; through Symbol#to_proc.  Let's keep things in perspective.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T21:41:02+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T21:41:02+01:00</updated-at>
      <user-id type="integer">12160</user-id>
      <version type="integer">19</version>
      <user-name>Ryan McGeary</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&gt; Respectfully, I think that's crazy. Why stop here? Why not instead re-write rails as a giant C extension?
&gt; (Again rhetorical)

Although this may have been meant as a completely absurd rhetorical question to make a point, it demands an answer.

Readability is only slightly improved, but comprehension is most definitely not.  The intent of a to_proc usage is not evident unless you know that this has been defined and is used.  Otherwise you end up spending time scratching your head puzzling over what's going on.

Furthermore, although Tammer's example may have been loaded, it show the potential for abuse that to_proc can lead to.  Something that could have been done in a single loop is now being done in two.  This sort of chaining can be hazardous for performance.

IMHO, of course.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;&lt;p&gt;
Respectfully, I think that's crazy. Why stop here? Why not instead re-write rails as a giant C extension?
&lt;/p&gt;&lt;p&gt;
(Again rhetorical)
&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;
Although this may have been meant as a completely absurd rhetorical question to make a point, it demands an answer.
&lt;/p&gt;&lt;p&gt;
Readability is only slightly improved, but comprehension is most definitely not.  The intent of a to_proc usage is not evident unless you know that this has been defined and is used.  Otherwise you end up spending time scratching your head puzzling over what's going on.
&lt;/p&gt;&lt;p&gt;
Furthermore, although Tammer's example may have been loaded, it show the potential for abuse that to_proc can lead to.  Something that could have been done in a single loop is now being done in two.  This sort of chaining can be hazardous for performance.
&lt;/p&gt;&lt;p&gt;
IMHO, of course.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-25T21:47:47+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-25T21:47:47+01:00</updated-at>
      <user-id type="integer">5026</user-id>
      <version type="integer">20</version>
      <user-name>James Herdman</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Why remove it from all these places where speed doesn't matter, also?

I actually removed one usage from Array#to_param today because it's used often enough to show up in profiling results. I think most of these other cases don't meet that standard.

Also btw, Symbol#to_proc is native in Ruby 1.8.7 :) Speed is not a big issue, but object allocation is (literal syntax doesn't create a Proc per invocation).

Could you pare back the patch to just remove usage that results in a significant runtime penalty?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Why remove it from all these places where speed doesn't matter, also?
&lt;/p&gt;&lt;p&gt;
I actually removed one usage from Array#to_param today because it's used often enough to show up in profiling results. I think most of these other cases don't meet that standard.
&lt;/p&gt;&lt;p&gt;
Also btw, Symbol#to_proc is native in Ruby 1.8.7 :) Speed is not a big issue, but object allocation is (literal syntax doesn't create a Proc per invocation).
&lt;/p&gt;&lt;p&gt;
Could you pare back the patch to just remove usage that results in a significant runtime penalty?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-26T02:52:06+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
:tag: patch
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch performance</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-26T02:52:06+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">21</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Jeremy: I just removed those just to be complete - sure, there're a few places where speed doesn't matter (some in Railties and migrations).

The places I think it'd help is in ActionPack (esp. wrt filters) and possibly in AR. I'll pare back the patch :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
@Jeremy: I just removed those just to be complete - sure, there're a few places where speed doesn't matter (some in Railties and migrations).
&lt;/p&gt;&lt;p&gt;
The places I think it'd help is in ActionPack (esp. wrt filters) and possibly in AR. I'll pare back the patch :)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-26T03:01:03+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch performance</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-26T03:01:03+01:00</updated-at>
      <user-id type="integer">586</user-id>
      <version type="integer">22</version>
      <user-name>Cheah Chu Yeow</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>New patch attached. If I'd misunderstood something as being runtime code when it isn't, do exclude it if and when you're trying to apply the patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
New patch attached. If I'd misunderstood something as being runtime code when it isn't, do exclude it if and when you're trying to apply the patch.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-26T03:24:54+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch performance</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-26T03:24:54+01:00</updated-at>
      <user-id type="integer">586</user-id>
      <version type="integer">23</version>
      <user-name>Cheah Chu Yeow</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Okay, great :)

Btw, my results for the big array on 1.8.7 (native #to_proc):
@@@ ruby
Rehearsal ------------------------------------
 1465.33 KB allocated, 300005 objects
  0.080000   0.010000   0.090000 (  0.087565)
 1074.25 KB allocated, 300003 objects
  0.070000   0.000000   0.070000 (  0.079209)
--------------------------- total: 0.160000sec

       user     system      total        real
 1465.33 KB allocated, 300005 objects
  0.070000   0.000000   0.070000 (  0.076968)
 1074.25 KB allocated, 300003 objects
  0.050000   0.000000   0.050000 (  0.055148)
@@@

So 37% slower and 36% more memory. Same number of objects though; I was wrong about that!</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Okay, great :)
&lt;/p&gt;&lt;p&gt;
Btw, my results for the big array on 1.8.7 (native #to_proc):
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;Rehearsal ------------------------------------
 1465.33 KB allocated, 300005 objects
  0.080000   0.010000   0.090000 (  0.087565)
 1074.25 KB allocated, 300003 objects
  0.070000   0.000000   0.070000 (  0.079209)
--------------------------- total: 0.160000sec

       user     system      total        real
 1465.33 KB allocated, 300005 objects
  0.070000   0.000000   0.070000 (  0.076968)
 1074.25 KB allocated, 300003 objects
  0.050000   0.000000   0.050000 (  0.055148)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
So 37% slower and 36% more memory. Same number of objects though; I was wrong about that!
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-26T03:28:03+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch performance</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-26T03:28:03+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">24</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Actually I was completely wrong for before_filters and after_filters in ActionController::Filters - I ran some profiling and realized that those are never called within Rails.

Do leave it out at your discretion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Actually I was completely wrong for before_filters and after_filters in ActionController::Filters - I ran some profiling and realized that those are never called within Rails.
&lt;/p&gt;&lt;p&gt;
Do leave it out at your discretion.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-26T03:47:57+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch performance</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-06-26T03:47:57+01:00</updated-at>
      <user-id type="integer">586</user-id>
      <version type="integer">25</version>
      <user-name>Cheah Chu Yeow</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [ce4a1bb8538bd7cc5ee3cbf1156dc587482a7839]) Remove some Symbol#to_proc usage in runtime code.  [#484 state:resolved]
http://github.com/rails/rails/commit/ce4a1bb8538bd7cc5ee3cbf1156dc587482a7839</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [ce4a1bb8538bd7cc5ee3cbf1156dc587482a7839]) Remove some Symbol#to_proc usage in runtime code.  [#484 state:resolved]
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/ce4a1bb8538bd7cc5ee3cbf1156dc587482a7839&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-09T18:47:04+01:00</created-at>
      <creator-id type="integer">586</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">484</number>
      <permalink>remove-symbol-to_proc-from-framework-code</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>patch performance</tag>
      <title>Remove Symbol#to_proc from framework code</title>
      <updated-at type="datetime">2008-07-09T18:47:04+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">26</version>
      <user-name>Repository</user-name>
      <creator-name>Cheah Chu Yeow</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/484</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5017421f1ad1d335cd34fe9ab03fb1118cec57b3</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-25T11:12:46+01:00</created-at>
      <filename>sym_to_proc.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">29227</id>
      <size type="integer">25615</size>
      <uploader-id type="integer">586</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/29227/sym_to_proc.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>17b912fe0e6d34dd5e2671e3984ea40b77608211</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-26T03:24:54+01:00</created-at>
      <filename>sym_to_proc_2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">29387</id>
      <size type="integer">9414</size>
      <uploader-id type="integer">586</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/29387/sym_to_proc_2.diff</url>
    </attachment>
  </attachments>
</ticket>
