From d9225e41fb38b022c5683814ecacd766f79cd212 Mon Sep 17 00:00:00 2001
From: Brennan Dunn <me@brennandunn.com>
Date: Mon, 16 Jun 2008 11:10:51 -0400
Subject: [PATCH] Created validates_non_format_of to check that a value doesn't match a supplied regular expression

---
 activerecord/lib/active_record/validations.rb |   33 +++++++++++++++++++++++++
 activerecord/test/cases/validations_test.rb   |    7 +++++
 2 files changed, 40 insertions(+), 0 deletions(-)

diff --git a/activerecord/lib/active_record/validations.rb b/activerecord/lib/active_record/validations.rb
index c4e370d..7328b9b 100755
--- a/activerecord/lib/active_record/validations.rb
+++ b/activerecord/lib/active_record/validations.rb
@@ -694,6 +694,39 @@ module ActiveRecord
           record.errors.add(attr_name, configuration[:message] % value) unless value.to_s =~ configuration[:with]
         end
       end
+      
+      # Validates that the value of the specified object does not match the supplied regular expression.
+      # 
+      #   class Page < ActiveRecord::Base
+      #     validates_non_format_of :permalink, :with => /^admin/i
+      #   end
+      #
+      # Note: use <tt>\A</tt> and <tt>\Z</tt> to match the start and end of the string, <tt>^</tt> and <tt>$</tt> match the start/end of a line.
+      #
+      # A regular expression must be provided or else an exception will be raised.
+      #
+      # Configuration options:
+      # * <tt>:message</tt> - A custom error message (default is: "is invalid").
+      # * <tt>:allow_nil</tt> - If set to true, skips this validation if the attribute is +nil+ (default is +false+).
+      # * <tt>:allow_blank</tt> - If set to true, skips this validation if the attribute is blank (default is +false+).
+      # * <tt>:with</tt> - The regular expression used to validate the format with (note: must be supplied!).
+      # * <tt>:on</tt> - Specifies when this validation is active (default is <tt>:save</tt>, other options <tt>:create</tt>, <tt>:update</tt>).
+      # * <tt>:if</tt> - Specifies a method, proc or string to call to determine if the validation should
+      #   occur (e.g. <tt>:if => :allow_validation</tt>, or <tt>:if => Proc.new { |user| user.signup_step > 2 }</tt>).  The
+      #   method, proc or string should return or evaluate to a true or false value.
+      # * <tt>:unless</tt> - Specifies a method, proc or string to call to determine if the validation should
+      #   not occur (e.g. <tt>:unless => :skip_validation</tt>, or <tt>:unless => Proc.new { |user| user.signup_step <= 2 }</tt>).  The
+      #   method, proc or string should return or evaluate to a true or false value.
+      def validates_non_format_of(*attr_names)
+        configuration = { :message => ActiveRecord::Errors.default_error_messages[:invalid], :on => :save, :with => nil }
+        configuration.update(attr_names.extract_options!)
+
+        raise(ArgumentError, "A regular expression must be supplied as the :with option of the configuration hash") unless configuration[:with].is_a?(Regexp)
+
+        validates_each(attr_names, configuration) do |record, attr_name, value|
+          record.errors.add(attr_name, configuration[:message] % value) unless value.to_s !~ configuration[:with]
+        end
+      end
 
       # Validates whether the value of the specified attribute is available in a particular enumerable object.
       #
diff --git a/activerecord/test/cases/validations_test.rb b/activerecord/test/cases/validations_test.rb
index 7b71647..8fe6a6d 100755
--- a/activerecord/test/cases/validations_test.rb
+++ b/activerecord/test/cases/validations_test.rb
@@ -588,6 +588,13 @@ class ValidationsTest < ActiveRecord::TestCase
     t = Topic.create(:title => 'Invalid title')
     assert_equal "can't be Invalid title", t.errors.on(:title)
   end
+  
+  def test_validates_non_format
+    Topic.validates_non_format_of(:title, :with => /naughty/i)
+    
+    assert Topic.create(:title => 'Clean topic').valid?
+    assert !Topic.create(:title => 'Naughty topic').valid?
+  end
 
   def test_validates_inclusion_of
     Topic.validates_inclusion_of( :title, :in => %w( a b c d e f g ) )
-- 
1.5.4.4

