<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-01T08:32:50+00:00</created-at>
  <creator-id type="integer">68921</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6352</number>
  <permalink>collection_singular_ids-inconsistent-with-collections-when-source-and-conditions-present</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;active record&quot;</tag>
  <title>collection_singular_ids inconsistent with  collections when source and conditions present</title>
  <updated-at type="datetime">2011-05-02T01:01:08+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">3</version>
  <user-name>rails</user-name>
  <creator-name>yinhm</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6352</url>
  <priority-name nil="true"></priority-name>
  <original-body>Imaging your have a User model, which define a has_many association like:

@@@ ruby
  
  has_many(:subscribed_groups,
           :through =&gt; :subscriptions,
           :conditions =&gt; &quot;streams.category ='group'&quot;,
           :source =&gt; :stream)

@@@

user.subscribed_groups and user.subscribed_group_ids will generating different SQL and returns  different records.


Adding a extra criterion fixed this:

activerecord-3.0.3/lib/active_record/associations.rb diffs:

@@@ ruby
1504c1504,1505
&lt;               if reflection.through_reflection &amp;&amp; reflection.source_reflection.belongs_to? 
---
&gt;               if reflection.through_reflection &amp;&amp; reflection.source_reflection.belongs_to? &amp;&amp; 
&gt;                   reflection.options[:conditions]
@@@</original-body>
  <latest-body>Imaging your have a User model, which define a has_many association like:

@@@ ruby
  
  has_many(:subscribed_groups,
           :through =&gt; :subscriptions,
           :conditions =&gt; &quot;streams.category ='group'&quot;,
           :source =&gt; :stream)

@@@

user.subscribed_groups and user.subscribed_group_ids will generating different SQL and returns  different records.


Adding a extra criterion fixed this:

activerecord-3.0.3/lib/active_record/associations.rb diffs:

@@@ ruby
1504c1504,1505
&lt;               if reflection.through_reflection &amp;&amp; reflection.source_reflection.belongs_to? 
---
&gt;               if reflection.through_reflection &amp;&amp; reflection.source_reflection.belongs_to? &amp;&amp; 
&gt;                   reflection.options[:conditions]
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Imaging your have a User model, which define a has_many
association like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  
  has_many(:subscribed_groups,
           :through =&amp;gt; :subscriptions,
           :conditions =&amp;gt; &quot;streams.category ='group'&quot;,
           :source =&amp;gt; :stream)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;user.subscribed_groups and user.subscribed_group_ids will
generating different SQL and returns different records.&lt;/p&gt;
&lt;p&gt;Adding a extra criterion fixed this:&lt;/p&gt;
&lt;p&gt;activerecord-3.0.3/lib/active_record/associations.rb diffs:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;1504c1504,1505
&amp;lt;               if reflection.through_reflection &amp;amp;&amp;amp; reflection.source_reflection.belongs_to? 
---
&amp;gt;               if reflection.through_reflection &amp;amp;&amp;amp; reflection.source_reflection.belongs_to? &amp;amp;&amp;amp; 
&amp;gt;                   reflection.options[:conditions]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Imaging your have a User model, which define a has_many association like:

@@@ ruby
  
  has_many(:subscribed_groups,
           :through =&gt; :subscriptions,
           :conditions =&gt; &quot;streams.category ='group'&quot;,
           :source =&gt; :stream)

@@@

user.subscribed_groups and user.subscribed_group_ids will generating different SQL and returns  different records.


Adding a extra criterion fixed this:

activerecord-3.0.3/lib/active_record/associations.rb diffs:

@@@ ruby
1504c1504,1505
&lt;               if reflection.through_reflection &amp;&amp; reflection.source_reflection.belongs_to? 
---
&gt;               if reflection.through_reflection &amp;&amp; reflection.source_reflection.belongs_to? &amp;&amp; 
&gt;                   reflection.options[:conditions]
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Imaging your have a User model, which define a has_many
association like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  
  has_many(:subscribed_groups,
           :through =&amp;gt; :subscriptions,
           :conditions =&amp;gt; &quot;streams.category ='group'&quot;,
           :source =&amp;gt; :stream)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;user.subscribed_groups and user.subscribed_group_ids will
generating different SQL and returns different records.&lt;/p&gt;
&lt;p&gt;Adding a extra criterion fixed this:&lt;/p&gt;
&lt;p&gt;activerecord-3.0.3/lib/active_record/associations.rb diffs:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;1504c1504,1505
&amp;lt;               if reflection.through_reflection &amp;amp;&amp;amp; reflection.source_reflection.belongs_to? 
---
&amp;gt;               if reflection.through_reflection &amp;amp;&amp;amp; reflection.source_reflection.belongs_to? &amp;amp;&amp;amp; 
&amp;gt;                   reflection.options[:conditions]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-01T08:32:50+00:00</created-at>
      <creator-id type="integer">68921</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6352</number>
      <permalink>collection_singular_ids-inconsistent-with-collections-when-source-and-conditions-present</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot;</tag>
      <title>collection_singular_ids inconsistent with  collections when source and conditions present</title>
      <updated-at type="datetime">2011-02-01T08:32:54+00:00</updated-at>
      <user-id type="integer">68921</user-id>
      <version type="integer">1</version>
      <user-name>yinhm</user-name>
      <creator-name>yinhm</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6352</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-05-02T01:00:10+01:00</created-at>
      <creator-id type="integer">68921</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6352</number>
      <permalink>collection_singular_ids-inconsistent-with-collections-when-source-and-conditions-present</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;active record&quot;</tag>
      <title>collection_singular_ids inconsistent with  collections when source and conditions present</title>
      <updated-at type="datetime">2011-05-02T01:01:01+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">2</version>
      <user-name>rails</user-name>
      <creator-name>yinhm</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6352</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-05-02T01:00:10+01:00</created-at>
      <creator-id type="integer">68921</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6352</number>
      <permalink>collection_singular_ids-inconsistent-with-collections-when-source-and-conditions-present</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;active record&quot;</tag>
      <title>collection_singular_ids inconsistent with  collections when source and conditions present</title>
      <updated-at type="datetime">2011-05-02T01:01:08+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>yinhm</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6352</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
