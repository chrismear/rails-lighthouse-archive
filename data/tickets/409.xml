<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-13T16:13:14+01:00</created-at>
  <creator-id type="integer">23291</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">409</number>
  <permalink>has_many-through-with-source-does-not-work-correctly-with-find-include</permalink>
  <priority type="integer">16577</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord bug joins</tag>
  <title>has_many :through with :source does not work correctly with find(:include)</title>
  <updated-at type="datetime">2008-09-18T15:48:19+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">2</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Olafski</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/409</url>
  <priority-name nil="true"></priority-name>
  <original-body>Sorry I did not provide a proper attachment with tests, etc. But I have no idea how to do that :)

Given the following code:
h2. Cargo model:
@@@ ruby
class Cargo &lt; ActiveRecord::Base
  belongs_to :load_stop, 
             :foreign_key =&gt; 'load_stop_id', 
             :class_name =&gt; 'Stop'
end
@@@

h2. Stop model:
@@@ ruby
class Stop &lt; ActiveRecord::Base
  has_many :cargo_loads, 
           :class_name =&gt; 'Cargo',
           :foreign_key =&gt; 'load_stop_id'


  belongs_to :transports
end
@@@

h2. Transport model
@@@ ruby
class Transport &lt; ActiveRecord::Base
  has_many :stops
  
  has_many :cargos, 
           :through =&gt; :stops, 
           :source =&gt; :cargo_loads
end
@@@

h2. Output of the console:
Basically,
Transport.find(:first).cargos
works, but
Transport.find(:first, :include =&gt; :cargos)
gives an error telling me that the column cargos.stop_id does not exist.

@@@
&gt;&gt; Transport.find(:first).cargos
=&gt; [#&lt;Cargo id: 1, load_stop_id: 1, created_at: &quot;2008-06-13 16:40:39&quot;, updated_at: &quot;2008-06-13 16:42:12&quot;&gt;]
&gt;&gt; Transport.find(:first, :include =&gt; :cargos)
ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: cargos.stop_id: SELECT transports.&quot;id&quot; AS t0_r0, transports.&quot;created_at&quot; AS t0_r1, transports.&quot;updated_at&quot; AS t0_r2, cargos.&quot;id&quot; AS t1_r0, cargos.&quot;load_stop_id&quot; AS t1_r1, cargos.&quot;created_at&quot; AS t1_r2, cargos.&quot;updated_at&quot; AS t1_r3 FROM transports  LEFT OUTER JOIN stops ON (transports.&quot;id&quot; = stops.&quot;transport_id&quot;)  LEFT OUTER JOIN cargos ON (cargos.&quot;stop_id&quot; = stops.&quot;id&quot;)   
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract_adapter.rb:150:in `log'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:132:in `execute'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:345:in `catch_schema_changes'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:132:in `execute'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:256:in `select'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract/query_cache.rb:55:in `select_all'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1242:in `select_all_rows'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1124:in `find_with_associations'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1122:in `catch'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1122:in `find_with_associations'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1232:in `find_every'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1227:in `find_initial'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:502:in `find'
        from (irb):2
&gt;&gt;
@@@</original-body>
  <latest-body>Sorry I did not provide a proper attachment with tests, etc. But I have no idea how to do that :)

Given the following code:
h2. Cargo model:
@@@ ruby
class Cargo &lt; ActiveRecord::Base
  belongs_to :load_stop, 
             :foreign_key =&gt; 'load_stop_id', 
             :class_name =&gt; 'Stop'
end
@@@

h2. Stop model:
@@@ ruby
class Stop &lt; ActiveRecord::Base
  has_many :cargo_loads, 
           :class_name =&gt; 'Cargo',
           :foreign_key =&gt; 'load_stop_id'


  belongs_to :transports
end
@@@

h2. Transport model
@@@ ruby
class Transport &lt; ActiveRecord::Base
  has_many :stops
  
  has_many :cargos, 
           :through =&gt; :stops, 
           :source =&gt; :cargo_loads
end
@@@

h2. Output of the console:
Basically,
Transport.find(:first).cargos
works, but
Transport.find(:first, :include =&gt; :cargos)
gives an error telling me that the column cargos.stop_id does not exist.

@@@
&gt;&gt; Transport.find(:first).cargos
=&gt; [#&lt;Cargo id: 1, load_stop_id: 1, created_at: &quot;2008-06-13 16:40:39&quot;, updated_at: &quot;2008-06-13 16:42:12&quot;&gt;]
&gt;&gt; Transport.find(:first, :include =&gt; :cargos)
ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: cargos.stop_id: SELECT transports.&quot;id&quot; AS t0_r0, transports.&quot;created_at&quot; AS t0_r1, transports.&quot;updated_at&quot; AS t0_r2, cargos.&quot;id&quot; AS t1_r0, cargos.&quot;load_stop_id&quot; AS t1_r1, cargos.&quot;created_at&quot; AS t1_r2, cargos.&quot;updated_at&quot; AS t1_r3 FROM transports  LEFT OUTER JOIN stops ON (transports.&quot;id&quot; = stops.&quot;transport_id&quot;)  LEFT OUTER JOIN cargos ON (cargos.&quot;stop_id&quot; = stops.&quot;id&quot;)   
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract_adapter.rb:150:in `log'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:132:in `execute'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:345:in `catch_schema_changes'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:132:in `execute'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:256:in `select'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract/query_cache.rb:55:in `select_all'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1242:in `select_all_rows'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1124:in `find_with_associations'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1122:in `catch'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1122:in `find_with_associations'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1232:in `find_every'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1227:in `find_initial'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:502:in `find'
        from (irb):2
&gt;&gt;
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Sorry I did not provide a proper attachment with tests, etc. But I have no idea how to do that :)
&lt;/p&gt;&lt;p&gt;
Given the following code:
&lt;/p&gt;
&lt;h2&gt;
Cargo model:
&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Cargo &amp;lt; ActiveRecord::Base
  belongs_to :load_stop, 
             :foreign_key =&amp;gt; 'load_stop_id', 
             :class_name =&amp;gt; 'Stop'
end&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;
Stop model:
&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Stop &amp;lt; ActiveRecord::Base
  has_many :cargo_loads, 
           :class_name =&amp;gt; 'Cargo',
           :foreign_key =&amp;gt; 'load_stop_id'


  belongs_to :transports
end&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;
Transport model
&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Transport &amp;lt; ActiveRecord::Base
  has_many :stops
  
  has_many :cargos, 
           :through =&amp;gt; :stops, 
           :source =&amp;gt; :cargo_loads
end&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;
Output of the console:
&lt;/h2&gt;
&lt;p&gt;
Basically,
&lt;/p&gt;&lt;p&gt;
Transport.find(:first).cargos
&lt;/p&gt;&lt;p&gt;
works, but
&lt;/p&gt;&lt;p&gt;
Transport.find(:first, :include =&gt; :cargos)
&lt;/p&gt;&lt;p&gt;
gives an error telling me that the column cargos.stop_id does not exist.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; Transport.find(:first).cargos
=&amp;gt; [#&amp;lt;Cargo id: 1, load_stop_id: 1, created_at: &amp;quot;2008-06-13 16:40:39&amp;quot;, updated_at: &amp;quot;2008-06-13 16:42:12&amp;quot;&amp;gt;]
&amp;gt;&amp;gt; Transport.find(:first, :include =&amp;gt; :cargos)
ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: cargos.stop_id: SELECT transports.&amp;quot;id&amp;quot; AS t0_r0, transports.&amp;quot;created_at&amp;quot; AS t0_r1, transports.&amp;quot;updated_at&amp;quot; AS t0_r2, cargos.&amp;quot;id&amp;quot; AS t1_r0, cargos.&amp;quot;load_stop_id&amp;quot; AS t1_r1, cargos.&amp;quot;created_at&amp;quot; AS t1_r2, cargos.&amp;quot;updated_at&amp;quot; AS t1_r3 FROM transports  LEFT OUTER JOIN stops ON (transports.&amp;quot;id&amp;quot; = stops.&amp;quot;transport_id&amp;quot;)  LEFT OUTER JOIN cargos ON (cargos.&amp;quot;stop_id&amp;quot; = stops.&amp;quot;id&amp;quot;)   
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract_adapter.rb:150:in `log'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:132:in `execute'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:345:in `catch_schema_changes'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:132:in `execute'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:256:in `select'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract/query_cache.rb:55:in `select_all'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1242:in `select_all_rows'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1124:in `find_with_associations'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1122:in `catch'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1122:in `find_with_associations'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1232:in `find_every'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1227:in `find_initial'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:502:in `find'
        from (irb):2
&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry I did not provide a proper attachment with tests, etc. But I have no idea how to do that :)

Given the following code:
h2. Cargo model:
@@@ ruby
class Cargo &lt; ActiveRecord::Base
  belongs_to :load_stop, 
             :foreign_key =&gt; 'load_stop_id', 
             :class_name =&gt; 'Stop'
end
@@@

h2. Stop model:
@@@ ruby
class Stop &lt; ActiveRecord::Base
  has_many :cargo_loads, 
           :class_name =&gt; 'Cargo',
           :foreign_key =&gt; 'load_stop_id'


  belongs_to :transports
end
@@@

h2. Transport model
@@@ ruby
class Transport &lt; ActiveRecord::Base
  has_many :stops
  
  has_many :cargos, 
           :through =&gt; :stops, 
           :source =&gt; :cargo_loads
end
@@@

h2. Output of the console:
Basically,
Transport.find(:first).cargos
works, but
Transport.find(:first, :include =&gt; :cargos)
gives an error telling me that the column cargos.stop_id does not exist.

@@@
&gt;&gt; Transport.find(:first).cargos
=&gt; [#&lt;Cargo id: 1, load_stop_id: 1, created_at: &quot;2008-06-13 16:40:39&quot;, updated_at: &quot;2008-06-13 16:42:12&quot;&gt;]
&gt;&gt; Transport.find(:first, :include =&gt; :cargos)
ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: cargos.stop_id: SELECT transports.&quot;id&quot; AS t0_r0, transports.&quot;created_at&quot; AS t0_r1, transports.&quot;updated_at&quot; AS t0_r2, cargos.&quot;id&quot; AS t1_r0, cargos.&quot;load_stop_id&quot; AS t1_r1, cargos.&quot;created_at&quot; AS t1_r2, cargos.&quot;updated_at&quot; AS t1_r3 FROM transports  LEFT OUTER JOIN stops ON (transports.&quot;id&quot; = stops.&quot;transport_id&quot;)  LEFT OUTER JOIN cargos ON (cargos.&quot;stop_id&quot; = stops.&quot;id&quot;)   
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract_adapter.rb:150:in `log'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:132:in `execute'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:345:in `catch_schema_changes'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:132:in `execute'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:256:in `select'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract/query_cache.rb:55:in `select_all'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1242:in `select_all_rows'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1124:in `find_with_associations'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1122:in `catch'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1122:in `find_with_associations'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1232:in `find_every'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1227:in `find_initial'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:502:in `find'
        from (irb):2
&gt;&gt;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Sorry I did not provide a proper attachment with tests, etc. But I have no idea how to do that :)
&lt;/p&gt;&lt;p&gt;
Given the following code:
&lt;/p&gt;
&lt;h2&gt;
Cargo model:
&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Cargo &amp;lt; ActiveRecord::Base
  belongs_to :load_stop, 
             :foreign_key =&amp;gt; 'load_stop_id', 
             :class_name =&amp;gt; 'Stop'
end&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;
Stop model:
&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Stop &amp;lt; ActiveRecord::Base
  has_many :cargo_loads, 
           :class_name =&amp;gt; 'Cargo',
           :foreign_key =&amp;gt; 'load_stop_id'


  belongs_to :transports
end&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;
Transport model
&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Transport &amp;lt; ActiveRecord::Base
  has_many :stops
  
  has_many :cargos, 
           :through =&amp;gt; :stops, 
           :source =&amp;gt; :cargo_loads
end&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;
Output of the console:
&lt;/h2&gt;
&lt;p&gt;
Basically,
&lt;/p&gt;&lt;p&gt;
Transport.find(:first).cargos
&lt;/p&gt;&lt;p&gt;
works, but
&lt;/p&gt;&lt;p&gt;
Transport.find(:first, :include =&gt; :cargos)
&lt;/p&gt;&lt;p&gt;
gives an error telling me that the column cargos.stop_id does not exist.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;&amp;gt;&amp;gt; Transport.find(:first).cargos
=&amp;gt; [#&amp;lt;Cargo id: 1, load_stop_id: 1, created_at: &amp;quot;2008-06-13 16:40:39&amp;quot;, updated_at: &amp;quot;2008-06-13 16:42:12&amp;quot;&amp;gt;]
&amp;gt;&amp;gt; Transport.find(:first, :include =&amp;gt; :cargos)
ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: cargos.stop_id: SELECT transports.&amp;quot;id&amp;quot; AS t0_r0, transports.&amp;quot;created_at&amp;quot; AS t0_r1, transports.&amp;quot;updated_at&amp;quot; AS t0_r2, cargos.&amp;quot;id&amp;quot; AS t1_r0, cargos.&amp;quot;load_stop_id&amp;quot; AS t1_r1, cargos.&amp;quot;created_at&amp;quot; AS t1_r2, cargos.&amp;quot;updated_at&amp;quot; AS t1_r3 FROM transports  LEFT OUTER JOIN stops ON (transports.&amp;quot;id&amp;quot; = stops.&amp;quot;transport_id&amp;quot;)  LEFT OUTER JOIN cargos ON (cargos.&amp;quot;stop_id&amp;quot; = stops.&amp;quot;id&amp;quot;)   
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract_adapter.rb:150:in `log'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:132:in `execute'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:345:in `catch_schema_changes'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:132:in `execute'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/sqlite_adapter.rb:256:in `select'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract/database_statements.rb:7:in `select_all_without_query_cache'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/connection_adapters/abstract/query_cache.rb:55:in `select_all'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1242:in `select_all_rows'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1124:in `find_with_associations'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1122:in `catch'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/associations.rb:1122:in `find_with_associations'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1232:in `find_every'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:1227:in `find_initial'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.0.2/lib/active_record/base.rb:502:in `find'
        from (irb):2
&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-13T16:13:15+01:00</created-at>
      <creator-id type="integer">23291</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">409</number>
      <permalink>has_many-through-with-source-does-not-work-correctly-with-find-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has_many :through with :source does not work correctly with find(:include)</title>
      <updated-at type="datetime">2008-06-13T16:13:15+01:00</updated-at>
      <user-id type="integer">23291</user-id>
      <version type="integer">1</version>
      <user-name>Olafski</user-name>
      <creator-name>Olafski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/409</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-18T15:48:15+01:00</created-at>
      <creator-id type="integer">23291</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">409</number>
      <permalink>has_many-through-with-source-does-not-work-correctly-with-find-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord bug joins</tag>
      <title>has_many :through with :source does not work correctly with find(:include)</title>
      <updated-at type="datetime">2008-09-18T15:48:19+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Olafski</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/409</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
