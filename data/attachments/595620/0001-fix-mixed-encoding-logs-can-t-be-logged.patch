From ae1cc8f735ae4edbffe298c132c7657d2d8110c2 Mon Sep 17 00:00:00 2001
From: Kouhei Sutou <kou@clear-code.com>
Date: Sat, 17 Jul 2010 15:36:40 +0900
Subject: [PATCH] fix mixed encoding logs can't be logged.


Signed-off-by: Kouhei Sutou <kou@cozmixng.org>
---
 .../lib/active_support/buffered_logger.rb          |    6 +++++-
 activesupport/test/buffered_logger_test.rb         |   15 +++++++++++++++
 activesupport/test/multibyte_test_helpers.rb       |    5 ++++-
 3 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/activesupport/lib/active_support/buffered_logger.rb b/activesupport/lib/active_support/buffered_logger.rb
index 29c3843..b861a6f 100644
--- a/activesupport/lib/active_support/buffered_logger.rb
+++ b/activesupport/lib/active_support/buffered_logger.rb
@@ -101,7 +101,11 @@ module ActiveSupport
       @guard.synchronize do
         unless buffer.empty?
           old_buffer = buffer
-          @log.write(old_buffer.join)
+          all_content = StringIO.new
+          old_buffer.each do |content|
+            all_content << content
+          end
+          @log.write(all_content.string)
         end
 
         # Important to do this even if buffer was empty or else @buffer will
diff --git a/activesupport/test/buffered_logger_test.rb b/activesupport/test/buffered_logger_test.rb
index 850febb..97c0ef1 100644
--- a/activesupport/test/buffered_logger_test.rb
+++ b/activesupport/test/buffered_logger_test.rb
@@ -1,9 +1,12 @@
 require 'abstract_unit'
+require 'multibyte_test_helpers'
 require 'stringio'
 require 'fileutils'
 require 'active_support/buffered_logger'
 
 class BufferedLoggerTest < Test::Unit::TestCase
+  include MultibyteTestHelpers
+
   Logger = ActiveSupport::BufferedLogger
 
   def setup
@@ -146,4 +149,16 @@ class BufferedLoggerTest < Test::Unit::TestCase
     @logger.expects :clear_buffer
     @logger.flush
   end
+
+  def test_buffer_multibyte
+    @logger.auto_flushing = 2
+    @logger.info(UNICODE_STRING)
+    @logger.info(BYTE_STRING)
+    assert @output.string.include?(UNICODE_STRING)
+    byte_string = @output.string.dup
+    if byte_string.respond_to?(:force_encoding)
+      byte_string.force_encoding("ASCII-8BIT")
+    end
+    assert byte_string.include?(BYTE_STRING)
+  end
 end
diff --git a/activesupport/test/multibyte_test_helpers.rb b/activesupport/test/multibyte_test_helpers.rb
index 597f949..8839b75 100644
--- a/activesupport/test/multibyte_test_helpers.rb
+++ b/activesupport/test/multibyte_test_helpers.rb
@@ -4,6 +4,9 @@ module MultibyteTestHelpers
   UNICODE_STRING = 'こにちわ'
   ASCII_STRING = 'ohayo'
   BYTE_STRING = "\270\236\010\210\245"
+  if BYTE_STRING.respond_to?(:force_encoding)
+    BYTE_STRING.force_encoding("ASCII-8BIT")
+  end
 
   def chars(str)
     ActiveSupport::Multibyte::Chars.new(str)
@@ -16,4 +19,4 @@ module MultibyteTestHelpers
   def assert_equal_codepoints(expected, actual, message=nil)
     assert_equal(inspect_codepoints(expected), inspect_codepoints(actual), message)
   end
-end
\ No newline at end of file
+end
-- 
1.7.1

