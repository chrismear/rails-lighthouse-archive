<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-28T10:43:53+01:00</created-at>
  <creator-id type="integer">17296</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">505</number>
  <permalink>eager-loading-doesn-t-respect-limit-option-of-the-loaded-association</permalink>
  <priority type="integer">2</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord bug eager_loading patch tested</tag>
  <title>Eager loading doesn't respect :limit option of the loaded association</title>
  <updated-at type="datetime">2008-11-03T09:19:05+00:00</updated-at>
  <user-id type="integer">17296</user-id>
  <version type="integer">8</version>
  <user-name>Luca Guidi</user-name>
  <creator-name>Luca Guidi</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/505</url>
  <milestone-title>2.x</milestone-title>
  <priority-name>Medium</priority-name>
  <original-body>@@@ruby
class Category &lt; ActiveRecord::Base
  has_and_belongs_to_many :movies
  has_and_belongs_to_many :most_recent_movies, :class_name =&gt; 'Movie', :order =&gt; 'created_at DESC', :limit =&gt; 10
end

class Movie &lt; ActiveRecord::Base
  has_and_belongs_to_many :categories
end

Category.find(1).most_recent_movies # =&gt; returns 10 movies
Category.find(1, :include =&gt; :most_recent_movies).most_recent_movies # =&gt; returns all the associated movies
@@@

I attached a patch to solve this issue.</original-body>
  <latest-body>@@@ruby
class Category &lt; ActiveRecord::Base
  has_and_belongs_to_many :movies
  has_and_belongs_to_many :most_recent_movies, :class_name =&gt; 'Movie', :order =&gt; 'created_at DESC', :limit =&gt; 10
end

class Movie &lt; ActiveRecord::Base
  has_and_belongs_to_many :categories
end

Category.find(1).most_recent_movies # =&gt; returns 10 movies
Category.find(1, :include =&gt; :most_recent_movies).most_recent_movies # =&gt; returns all the associated movies
@@@

I attached a patch to solve this issue.</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;uby&quot;&gt;class Category &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :movies
  has_and_belongs_to_many :most_recent_movies, :class_name =&amp;gt; 'Movie', :order =&amp;gt; 'created_at DESC', :limit =&amp;gt; 10
end

class Movie &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :categories
end

Category.find(1).most_recent_movies # =&amp;gt; returns 10 movies
Category.find(1, :include =&amp;gt; :most_recent_movies).most_recent_movies # =&amp;gt; returns all the associated movies&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I attached a patch to solve this issue.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@@@ruby
class Category &lt; ActiveRecord::Base
  has_and_belongs_to_many :movies
  has_and_belongs_to_many :most_recent_movies, :class_name =&gt; 'Movie', :order =&gt; 'created_at DESC', :limit =&gt; 10
end

class Movie &lt; ActiveRecord::Base
  has_and_belongs_to_many :categories
end

Category.find(1).most_recent_movies # =&gt; returns 10 movies
Category.find(1, :include =&gt; :most_recent_movies).most_recent_movies # =&gt; returns all the associated movies
@@@

I attached a patch to solve this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@@@ruby class Category &amp;lt; ActiveRecord::Base
has_and_belongs_to_many :movies has_and_belongs_to_many
:most_recent_movies, :class_name =&amp;gt; 'Movie', :order =&amp;gt;
'created_at DESC', :limit =&amp;gt; 10 end&lt;/p&gt;
&lt;p&gt;class Movie &amp;lt; ActiveRecord::Base has_and_belongs_to_many
:categories end&lt;/p&gt;
&lt;p&gt;Category.find(1).most_recent_movies # =&amp;gt; returns 10 movies
Category.find(1, :include =&amp;gt;
:most_recent_movies).most_recent_movies # =&amp;gt; returns all the
associated movies&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;

I attached a patch to solve this issue.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-28T10:43:53+01:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">505</number>
      <permalink>eager-loading-doesn-t-respect-limit-option-of-the-loaded-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug eager_loading patch tested</tag>
      <title>Eager loading doesn't respect :limit option of the loaded association</title>
      <updated-at type="datetime">2008-10-23T16:23:23+01:00</updated-at>
      <user-id type="integer">17296</user-id>
      <version type="integer">1</version>
      <user-name>Luca Guidi</user-name>
      <creator-name>Luca Guidi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/505</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>On the surface this appears to fix things but what you have to remember is that the eager loading may be for more than one parent so if you just limit the query the result will be incorrect unless the associated records are the same for each parent.

For example if you do a Category.find(:all, :include =&gt; :most_recent_movies) then limiting the query will not give you want you want. The only way to fix it is to discard any extra records after they have been preloaded.

However in your example there may be irregular distribution of movies between categories so I wouldn't recommend eager loading - you may end up loading all of the movie records just to fill the sparser categories.

The best way to proceed I think would be to patch the preloading code so that extra records are discarded and add a warning in the documentation for eager loading of limited associations.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
On the surface this appears to fix things but what you have to remember is that the eager loading may be for more than one parent so if you just limit the query the result will be incorrect unless the associated records are the same for each parent.
&lt;/p&gt;&lt;p&gt;
For example if you do a Category.find(:all, :include =&gt; :most_recent_movies) then limiting the query will not give you want you want. The only way to fix it is to discard any extra records after they have been preloaded.
&lt;/p&gt;&lt;p&gt;
However in your example there may be irregular distribution of movies between categories so I wouldn't recommend eager loading - you may end up loading all of the movie records just to fill the sparser categories.
&lt;/p&gt;&lt;p&gt;
The best way to proceed I think would be to patch the preloading code so that extra records are discarded and add a warning in the documentation for eager loading of limited associations.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-28T15:50:28+01:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">505</number>
      <permalink>eager-loading-doesn-t-respect-limit-option-of-the-loaded-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug eager_loading patch tested</tag>
      <title>Eager loading doesn't respect :limit option of the loaded association</title>
      <updated-at type="datetime">2008-06-28T15:50:28+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>Luca Guidi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/505</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Eager loading and limits on the association don't really match. As Andrew says, your patch will break most of the time when you're loading (in your example) more than one category.

Limiting after load is a bit messy (and sort of creates the illusion that we can eager load such associations efficiently). We already do that for has_one though. If you do go down that road, add_preloaded_records_to_collection is probably the place to enforce that.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Eager loading and limits on the association don't really match. As Andrew says, your patch will break most of the time when you're loading (in your example) more than one category.
&lt;/p&gt;&lt;p&gt;
Limiting after load is a bit messy (and sort of creates the illusion that we can eager load such associations efficiently). We already do that for has_one though. If you do go down that road, add_preloaded_records_to_collection is probably the place to enforce that.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-28T16:29:52+01:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">505</number>
      <permalink>eager-loading-doesn-t-respect-limit-option-of-the-loaded-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug eager_loading patch tested</tag>
      <title>Eager loading doesn't respect :limit option of the loaded association</title>
      <updated-at type="datetime">2008-06-28T16:29:52+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">3</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Luca Guidi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/505</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>and then one could argue the following;

@@@ ruby
class A
  has_many :bs, :limit =&gt; 2
end

&gt;&gt; a.bs
=&gt; [#&lt; B:1 &gt;, #&lt;B:2 &gt;]
&gt;&gt; a.bs.create()
(irb):10:in `irb_binding': limit of association :bs exceeded (HasManyLimitException)

or

&gt;&gt; a.bs.create()
=&gt; #&lt; B:new &gt;
&gt;&gt; a.bs
=&gt; [#&lt; B:2 &gt;, #&lt; B:new &gt;]
@@@

but then which object do you push off...

and what if you actually wanted to maintain a limit, but allowed a create, so it'd be a hard remove of one of them...

I dunno...
just drunkenly (without drinking anything 'cept tea) imagining the craziness that could be involved!</body>
      <body-html>&lt;div&gt;&lt;p&gt;
and then one could argue the following;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class A
  has_many :bs, :limit =&amp;gt; 2
end

&amp;gt;&amp;gt; a.bs
=&amp;gt; [#&amp;lt; B:1 &amp;gt;, #&amp;lt;B:2 &amp;gt;]
&amp;gt;&amp;gt; a.bs.create()
(irb):10:in `irb_binding': limit of association :bs exceeded (HasManyLimitException)

or

&amp;gt;&amp;gt; a.bs.create()
=&amp;gt; #&amp;lt; B:new &amp;gt;
&amp;gt;&amp;gt; a.bs
=&amp;gt; [#&amp;lt; B:2 &amp;gt;, #&amp;lt; B:new &amp;gt;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
but then which object do you push off...
&lt;/p&gt;&lt;p&gt;
and what if you actually wanted to maintain a limit, but allowed a create, so it'd be a hard remove of one of them...
&lt;/p&gt;&lt;p&gt;
I dunno...
&lt;/p&gt;&lt;p&gt;
just drunkenly (without drinking anything 'cept tea) imagining the craziness that could be involved!
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-29T01:21:30+01:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">505</number>
      <permalink>eager-loading-doesn-t-respect-limit-option-of-the-loaded-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug eager_loading patch tested</tag>
      <title>Eager loading doesn't respect :limit option of the loaded association</title>
      <updated-at type="datetime">2008-06-29T01:21:30+01:00</updated-at>
      <user-id type="integer">18469</user-id>
      <version type="integer">4</version>
      <user-name>MatthewRudy</user-name>
      <creator-name>Luca Guidi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/505</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>What everyone else said.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
What everyone else said.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-12T14:22:30+01:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">505</number>
      <permalink>eager-loading-doesn-t-respect-limit-option-of-the-loaded-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord bug eager_loading patch tested</tag>
      <title>Eager loading doesn't respect :limit option of the loaded association</title>
      <updated-at type="datetime">2008-07-12T14:22:30+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>Luca Guidi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/505</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I tried to figure out how to fix it, but an unnecessary complexity would be added to the code.

I agree to wontfix status.
It would be nice to specify this behavior into the documentation, in order to avoid unexpected results.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I tried to figure out how to fix it, but an unnecessary complexity would be added to the code.
&lt;/p&gt;&lt;p&gt;
I agree to wontfix status.
&lt;/p&gt;&lt;p&gt;
It would be nice to specify this behavior into the documentation, in order to avoid unexpected results.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-12T14:37:18+01:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">505</number>
      <permalink>eager-loading-doesn-t-respect-limit-option-of-the-loaded-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord bug eager_loading patch tested</tag>
      <title>Eager loading doesn't respect :limit option of the loaded association</title>
      <updated-at type="datetime">2008-07-12T14:37:18+01:00</updated-at>
      <user-id type="integer">17296</user-id>
      <version type="integer">6</version>
      <user-name>Luca Guidi</user-name>
      <creator-name>Luca Guidi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/505</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hey jodosha,

If you message me (lifo) at github, I'll add you to docrails. So that you can commit the docpatch yourself anytime you wish.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Hey jodosha,
&lt;/p&gt;&lt;p&gt;
If you message me (lifo) at github, I'll add you to docrails. So that you can commit the docpatch yourself anytime you wish.
&lt;/p&gt;&lt;p&gt;
Thanks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-12T14:52:31+01:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">505</number>
      <permalink>eager-loading-doesn-t-respect-limit-option-of-the-loaded-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord bug eager_loading patch tested</tag>
      <title>Eager loading doesn't respect :limit option of the loaded association</title>
      <updated-at type="datetime">2008-07-12T14:52:31+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">7</version>
      <user-name>Pratik</user-name>
      <creator-name>Luca Guidi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/505</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is just a reminder: the case was documented in http://github.com/lifo/docrails/commit/27ec3ee00975a6655d2949520a6545e831751024</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is just a reminder: the case was documented in &lt;a href=&quot;http://github.com/lifo/docrails/commit/27ec3ee00975a6655d2949520a6545e831751024&quot;&gt;
http://github.com/lifo/docrails/...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-03T09:19:01+00:00</created-at>
      <creator-id type="integer">17296</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">505</number>
      <permalink>eager-loading-doesn-t-respect-limit-option-of-the-loaded-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord bug eager_loading patch tested</tag>
      <title>Eager loading doesn't respect :limit option of the loaded association</title>
      <updated-at type="datetime">2008-11-03T09:19:05+00:00</updated-at>
      <user-id type="integer">17296</user-id>
      <version type="integer">8</version>
      <user-name>Luca Guidi</user-name>
      <creator-name>Luca Guidi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/505</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>aae6bb58cd80622d7602e44a4140a6f11613d905</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-28T10:43:53+01:00</created-at>
      <filename>0002-Eager-loading-should-fetch-limited-associated-record.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">29842</id>
      <size type="integer">2156</size>
      <uploader-id type="integer">17296</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/29842/0002-Eager-loading-should-fetch-limited-associated-record.patch</url>
    </attachment>
  </attachments>
</ticket>
