<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-04-22T04:14:11+01:00</created-at>
  <creator-id type="integer">87079</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4451</number>
  <permalink>quick-fix-for-activemodel-error_wrapping</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>activemodel error_wrapping rails3 validations</tag>
  <title>Quick fix for ActiveModel error_wrapping</title>
  <updated-at type="datetime">2010-04-22T08:21:42+01:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">3</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>aaronchi</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4451</url>
  <priority-name>Low</priority-name>
  <original-body>I found this bug when trying to use an ActiveMerchant credit card object in a form. ActiveMercahnt does it's own validations but there aren't keys for fields with no errors so it fails.

The simple fix is:

    module ActiveModelInstanceTag
      def error_wrapping(html_tag)
        if object.respond_to?(:errors) &amp;&amp; object.errors.respond_to?(:full_messages) &amp;&amp; object.errors[@method_name] &amp;&amp; object.errors[@method_name].any?
          Base.field_error_proc.call(html_tag, self)
        else
          html_tag
        end
      end
    end

All I added was &quot;&amp;&amp; object.errors[@method_name]&quot; to check if the field exists in the errors array. Let me know if you'd like me to submit a patch. This is pretty simple.</original-body>
  <latest-body>I found this bug when trying to use an ActiveMerchant credit card object in a form. ActiveMercahnt does it's own validations but there aren't keys for fields with no errors so it fails.

The simple fix is:

    module ActiveModelInstanceTag
      def error_wrapping(html_tag)
        if object.respond_to?(:errors) &amp;&amp; object.errors.respond_to?(:full_messages) &amp;&amp; object.errors[@method_name] &amp;&amp; object.errors[@method_name].any?
          Base.field_error_proc.call(html_tag, self)
        else
          html_tag
        end
      end
    end

All I added was &quot;&amp;&amp; object.errors[@method_name]&quot; to check if the field exists in the errors array. Let me know if you'd like me to submit a patch. This is pretty simple.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I found this bug when trying to use an ActiveMerchant credit
card object in a form. ActiveMercahnt does it's own validations but
there aren't keys for fields with no errors so it fails.&lt;/p&gt;
&lt;p&gt;The simple fix is:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;module ActiveModelInstanceTag
  def error_wrapping(html_tag)
    if object.respond_to?(:errors) &amp;amp;&amp;amp; object.errors.respond_to?(:full_messages) &amp;amp;&amp;amp; object.errors[@method_name] &amp;amp;&amp;amp; object.errors[@method_name].any?
      Base.field_error_proc.call(html_tag, self)
    else
      html_tag
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;All I added was &quot;&amp;amp;&amp;amp; object.errors[@method_name]&quot; to
check if the field exists in the errors array. Let me know if you'd
like me to submit a patch. This is pretty simple.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I found this bug when trying to use an ActiveMerchant credit card object in a form. ActiveMercahnt does it's own validations but there aren't keys for fields with no errors so it fails.

The simple fix is:

    module ActiveModelInstanceTag
      def error_wrapping(html_tag)
        if object.respond_to?(:errors) &amp;&amp; object.errors.respond_to?(:full_messages) &amp;&amp; object.errors[@method_name] &amp;&amp; object.errors[@method_name].any?
          Base.field_error_proc.call(html_tag, self)
        else
          html_tag
        end
      end
    end

All I added was &quot;&amp;&amp; object.errors[@method_name]&quot; to check if the field exists in the errors array. Let me know if you'd like me to submit a patch. This is pretty simple.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I found this bug when trying to use an ActiveMerchant credit
card object in a form. ActiveMercahnt does it's own validations but
there aren't keys for fields with no errors so it fails.&lt;/p&gt;
&lt;p&gt;The simple fix is:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;module ActiveModelInstanceTag
  def error_wrapping(html_tag)
    if object.respond_to?(:errors) &amp;amp;&amp;amp; object.errors.respond_to?(:full_messages) &amp;amp;&amp;amp; object.errors[@method_name] &amp;amp;&amp;amp; object.errors[@method_name].any?
      Base.field_error_proc.call(html_tag, self)
    else
      html_tag
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;All I added was &quot;&amp;amp;&amp;amp; object.errors[@method_name]&quot; to
check if the field exists in the errors array. Let me know if you'd
like me to submit a patch. This is pretty simple.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-22T04:14:11+01:00</created-at>
      <creator-id type="integer">87079</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4451</number>
      <permalink>quick-fix-for-activemodel-error_wrapping</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel error_wrapping rails3 validations</tag>
      <title>Quick fix for ActiveModel error_wrapping</title>
      <updated-at type="datetime">2010-04-22T04:14:13+01:00</updated-at>
      <user-id type="integer">87079</user-id>
      <version type="integer">1</version>
      <user-name>aaronchi</user-name>
      <creator-name>aaronchi</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4451</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-22T04:48:45+01:00</created-at>
      <creator-id type="integer">87079</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4451</number>
      <permalink>quick-fix-for-activemodel-error_wrapping</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel error_wrapping rails3 validations</tag>
      <title>Quick fix for ActiveModel error_wrapping</title>
      <updated-at type="datetime">2010-04-22T04:48:48+01:00</updated-at>
      <user-id type="integer">87079</user-id>
      <version type="integer">2</version>
      <user-name>aaronchi</user-name>
      <creator-name>aaronchi</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4451</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ActiveMerchant needs to be fixed. The ActiveModel API requires @errors[:foo] to return an empty array in case no error exists in :foo. You can investigate ActiveModel::Lint to see how all the requirements for an ActiveModel Compliant API.</body>
      <body-html>&lt;div&gt;&lt;p&gt;ActiveMerchant needs to be fixed. The ActiveModel API requires
@errors[:foo] to return an empty array in case no error exists in
:foo. You can investigate ActiveModel::Lint to see how all the
requirements for an ActiveModel Compliant API.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-22T08:21:40+01:00</created-at>
      <creator-id type="integer">87079</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4451</number>
      <permalink>quick-fix-for-activemodel-error_wrapping</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activemodel error_wrapping rails3 validations</tag>
      <title>Quick fix for ActiveModel error_wrapping</title>
      <updated-at type="datetime">2010-04-22T08:21:42+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>aaronchi</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4451</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
