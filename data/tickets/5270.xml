<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-02T07:54:33+01:00</created-at>
  <creator-id type="integer">20836</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5270</number>
  <permalink>respond_with-sends-back-wrong-json-errors-response</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>rails3rc respond_with</tag>
  <title>respond_with sends back wrong json errors response</title>
  <updated-at type="datetime">2010-08-02T14:25:51+01:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">2</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>Lawrence Pit</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5270</url>
  <priority-name>Low</priority-name>
  <original-body>Using Rails 3 RC: when posting/putting data, and a validation fails, an &quot;errors&quot; array is send back. This works if the format is xml, but if the format is json then it sends back an incorrect response when using +respond_with+.

Example given:

@@@ ruby
class ProjectsController &lt; ApplicationController
  respond_to :xml, :json

  def create
    @project = Project.create(params[:project])
    respond_with(@project)
  end
end

class Project &lt; ActiveRecord::Base
  validates :name, :presence =&gt; true
end
@@@

then:

@@@ ruby
$ curl -v -X POST http://localhost:3000/projects.json

&lt; HTTP/1.1 422 Unprocessable Entity
[&quot;Name can't be blank&quot;]
@@@

It should respond with:

@@@ ruby
{&quot;errors&quot; =&gt; [&quot;Name can't be blank&quot;]}
@@@

Note that ActiveResource expects errors in this format.</original-body>
  <latest-body>Using Rails 3 RC: when posting/putting data, and a validation fails, an &quot;errors&quot; array is send back. This works if the format is xml, but if the format is json then it sends back an incorrect response when using +respond_with+.

Example given:

@@@ ruby
class ProjectsController &lt; ApplicationController
  respond_to :xml, :json

  def create
    @project = Project.create(params[:project])
    respond_with(@project)
  end
end

class Project &lt; ActiveRecord::Base
  validates :name, :presence =&gt; true
end
@@@

then:

@@@ ruby
$ curl -v -X POST http://localhost:3000/projects.json

&lt; HTTP/1.1 422 Unprocessable Entity
[&quot;Name can't be blank&quot;]
@@@

It should respond with:

@@@ ruby
{&quot;errors&quot; =&gt; [&quot;Name can't be blank&quot;]}
@@@

Note that ActiveResource expects errors in this format.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Using Rails 3 RC: when posting/putting data, and a validation
fails, an &quot;errors&quot; array is send back. This works if the format is
xml, but if the format is json then it sends back an incorrect
response when using +respond_with+.&lt;/p&gt;
&lt;p&gt;Example given:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class ProjectsController &amp;lt; ApplicationController
  respond_to :xml, :json

  def create
    @project = Project.create(params[:project])
    respond_with(@project)
  end
end

class Project &amp;lt; ActiveRecord::Base
  validates :name, :presence =&amp;gt; true
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;then:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;$ curl -v -X POST http://localhost:3000/projects.json

&amp;lt; HTTP/1.1 422 Unprocessable Entity
[&quot;Name can't be blank&quot;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It should respond with:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;{&quot;errors&quot; =&amp;gt; [&quot;Name can't be blank&quot;]}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that ActiveResource expects errors in this format.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Using Rails 3 RC: when posting/putting data, and a validation fails, an &quot;errors&quot; array is send back. This works if the format is xml, but if the format is json then it sends back an incorrect response when using +respond_with+.

Example given:

@@@ ruby
class ProjectsController &lt; ApplicationController
  respond_to :xml, :json

  def create
    @project = Project.create(params[:project])
    respond_with(@project)
  end
end

class Project &lt; ActiveRecord::Base
  validates :name, :presence =&gt; true
end
@@@

then:

@@@ ruby
$ curl -v -X POST http://localhost:3000/projects.json

&lt; HTTP/1.1 422 Unprocessable Entity
[&quot;Name can't be blank&quot;]
@@@

It should respond with:

@@@ ruby
{&quot;errors&quot; =&gt; [&quot;Name can't be blank&quot;]}
@@@

Note that ActiveResource expects errors in this format.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Using Rails 3 RC: when posting/putting data, and a validation
fails, an &quot;errors&quot; array is send back. This works if the format is
xml, but if the format is json then it sends back an incorrect
response when using +respond_with+.&lt;/p&gt;
&lt;p&gt;Example given:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class ProjectsController &amp;lt; ApplicationController
  respond_to :xml, :json

  def create
    @project = Project.create(params[:project])
    respond_with(@project)
  end
end

class Project &amp;lt; ActiveRecord::Base
  validates :name, :presence =&amp;gt; true
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;then:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;$ curl -v -X POST http://localhost:3000/projects.json

&amp;lt; HTTP/1.1 422 Unprocessable Entity
[&quot;Name can't be blank&quot;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It should respond with:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;{&quot;errors&quot; =&amp;gt; [&quot;Name can't be blank&quot;]}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that ActiveResource expects errors in this format.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-02T07:54:33+01:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5270</number>
      <permalink>respond_with-sends-back-wrong-json-errors-response</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>rails3rc respond_with</tag>
      <title>respond_with sends back wrong json errors response</title>
      <updated-at type="datetime">2010-08-02T07:54:35+01:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">1</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5270</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>duplicate of #5254</body>
      <body-html>&lt;div&gt;&lt;p&gt;duplicate of &lt;a href=&quot;/projects/8994/tickets/5254&quot; title=
&quot;Ticket #5254&quot;&gt;#5254&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-02T14:25:48+01:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5270</number>
      <permalink>respond_with-sends-back-wrong-json-errors-response</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>rails3rc respond_with</tag>
      <title>respond_with sends back wrong json errors response</title>
      <updated-at type="datetime">2010-08-02T14:25:51+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">2</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5270</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
