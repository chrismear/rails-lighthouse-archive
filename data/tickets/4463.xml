<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-04-23T16:11:14+01:00</created-at>
  <creator-id type="integer">24325</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">4463</number>
  <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activerecord eager_loading find_with_associations fixed patch tests updated updated_again</tag>
  <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
  <updated-at type="datetime">2010-10-15T23:01:52+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">12</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Ernie Miller</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>While working on a gem, I was making use of the JoinDependency feature where you can supply some existing SQL on initialization to keep aliased_table_name_for from reusing table names in those joins. I encountered a problem in the interaction between aliased_table_name_for, find_with_associations (finder_methods.rb), and build_arel (query_methods.rb)

First: aliased_table_name_for looks at parent#table_joins for this SQL, but therefore only correctly detects table names used outside of the JoinDependency for a top-level join, since this join_sql is not passed down through associations when calling &quot;super(reflection.klass)&quot; in JoinAssociation#initialize.

Second: the order in which build_arel (query_methods.rb) builds a query reverses the &quot;simulated&quot; JoinDependency used to create the outer joins added by find_with_associations, and so ends up reusing column names anyway, regardless of that fact.

This leads to (where Article has_many :comments, has_many :moderations, :through =&gt; :comments):

  Article.joins(:comments).eager_load(:moderations)
  ActiveRecord::StatementInvalid: SQLite3::SQLException: ambiguous column name: comments.article_id ...

The fix as I see it involves determining the user-supplied joins in advance of any association joins and supplying that SQL to JoinDependency.new in build_arel to prevent table name collisions.

I have this fixed in my gem at http://github.com/ernie/meta_where/tree/autojoin and would be happy to port the fix to a patch with tests if this is confirmed as a bug.</original-body>
  <latest-body>While working on a gem, I was making use of the JoinDependency feature where you can supply some existing SQL on initialization to keep aliased_table_name_for from reusing table names in those joins. I encountered a problem in the interaction between aliased_table_name_for, find_with_associations (finder_methods.rb), and build_arel (query_methods.rb)

First: aliased_table_name_for looks at parent#table_joins for this SQL, but therefore only correctly detects table names used outside of the JoinDependency for a top-level join, since this join_sql is not passed down through associations when calling &quot;super(reflection.klass)&quot; in JoinAssociation#initialize.

Second: the order in which build_arel (query_methods.rb) builds a query reverses the &quot;simulated&quot; JoinDependency used to create the outer joins added by find_with_associations, and so ends up reusing column names anyway, regardless of that fact.

This leads to (where Article has_many :comments, has_many :moderations, :through =&gt; :comments):

  Article.joins(:comments).eager_load(:moderations)
  ActiveRecord::StatementInvalid: SQLite3::SQLException: ambiguous column name: comments.article_id ...

The fix as I see it involves determining the user-supplied joins in advance of any association joins and supplying that SQL to JoinDependency.new in build_arel to prevent table name collisions.

I have this fixed in my gem at http://github.com/ernie/meta_where/tree/autojoin and would be happy to port the fix to a patch with tests if this is confirmed as a bug.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;While working on a gem, I was making use of the JoinDependency
feature where you can supply some existing SQL on initialization to
keep aliased_table_name_for from reusing table names in those
joins. I encountered a problem in the interaction between
aliased_table_name_for, find_with_associations (finder_methods.rb),
and build_arel (query_methods.rb)&lt;/p&gt;
&lt;p&gt;First: aliased_table_name_for looks at parent#table_joins for
this SQL, but therefore only correctly detects table names used
outside of the JoinDependency for a top-level join, since this
join_sql is not passed down through associations when calling
&quot;super(reflection.klass)&quot; in JoinAssociation#initialize.&lt;/p&gt;
&lt;p&gt;Second: the order in which build_arel (query_methods.rb) builds
a query reverses the &quot;simulated&quot; JoinDependency used to create the
outer joins added by find_with_associations, and so ends up reusing
column names anyway, regardless of that fact.&lt;/p&gt;
&lt;p&gt;This leads to (where Article has_many :comments, has_many
:moderations, :through =&amp;gt; :comments):&lt;/p&gt;
&lt;p&gt;Article.joins(:comments).eager_load(:moderations)
ActiveRecord::StatementInvalid: SQLite3::SQLException: ambiguous
column name: comments.article_id ...&lt;/p&gt;
&lt;p&gt;The fix as I see it involves determining the user-supplied joins
in advance of any association joins and supplying that SQL to
JoinDependency.new in build_arel to prevent table name
collisions.&lt;/p&gt;
&lt;p&gt;I have this fixed in my gem at &lt;a href=
&quot;http://github.com/ernie/meta_where/tree/autojoin&quot;&gt;http://github.com/ernie/meta_where/tree/autojoin&lt;/a&gt;
and would be happy to port the fix to a patch with tests if this is
confirmed as a bug.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>While working on a gem, I was making use of the JoinDependency feature where you can supply some existing SQL on initialization to keep aliased_table_name_for from reusing table names in those joins. I encountered a problem in the interaction between aliased_table_name_for, find_with_associations (finder_methods.rb), and build_arel (query_methods.rb)

First: aliased_table_name_for looks at parent#table_joins for this SQL, but therefore only correctly detects table names used outside of the JoinDependency for a top-level join, since this join_sql is not passed down through associations when calling &quot;super(reflection.klass)&quot; in JoinAssociation#initialize.

Second: the order in which build_arel (query_methods.rb) builds a query reverses the &quot;simulated&quot; JoinDependency used to create the outer joins added by find_with_associations, and so ends up reusing column names anyway, regardless of that fact.

This leads to (where Article has_many :comments, has_many :moderations, :through =&gt; :comments):

  Article.joins(:comments).eager_load(:moderations)
  ActiveRecord::StatementInvalid: SQLite3::SQLException: ambiguous column name: comments.article_id ...

The fix as I see it involves determining the user-supplied joins in advance of any association joins and supplying that SQL to JoinDependency.new in build_arel to prevent table name collisions.

I have this fixed in my gem at http://github.com/ernie/meta_where/tree/autojoin and would be happy to port the fix to a patch with tests if this is confirmed as a bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;While working on a gem, I was making use of the JoinDependency
feature where you can supply some existing SQL on initialization to
keep aliased_table_name_for from reusing table names in those
joins. I encountered a problem in the interaction between
aliased_table_name_for, find_with_associations (finder_methods.rb),
and build_arel (query_methods.rb)&lt;/p&gt;
&lt;p&gt;First: aliased_table_name_for looks at parent#table_joins for
this SQL, but therefore only correctly detects table names used
outside of the JoinDependency for a top-level join, since this
join_sql is not passed down through associations when calling
&quot;super(reflection.klass)&quot; in JoinAssociation#initialize.&lt;/p&gt;
&lt;p&gt;Second: the order in which build_arel (query_methods.rb) builds
a query reverses the &quot;simulated&quot; JoinDependency used to create the
outer joins added by find_with_associations, and so ends up reusing
column names anyway, regardless of that fact.&lt;/p&gt;
&lt;p&gt;This leads to (where Article has_many :comments, has_many
:moderations, :through =&amp;gt; :comments):&lt;/p&gt;
&lt;p&gt;Article.joins(:comments).eager_load(:moderations)
ActiveRecord::StatementInvalid: SQLite3::SQLException: ambiguous
column name: comments.article_id ...&lt;/p&gt;
&lt;p&gt;The fix as I see it involves determining the user-supplied joins
in advance of any association joins and supplying that SQL to
JoinDependency.new in build_arel to prevent table name
collisions.&lt;/p&gt;
&lt;p&gt;I have this fixed in my gem at &lt;a href=
&quot;http://github.com/ernie/meta_where/tree/autojoin&quot;&gt;http://github.com/ernie/meta_where/tree/autojoin&lt;/a&gt;
and would be happy to port the fix to a patch with tests if this is
confirmed as a bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-23T16:11:14+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord eager_loading find_with_associations</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-04-23T16:11:18+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">1</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Indeed! Tricky one; good diagnosis.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Indeed! Tricky one; good diagnosis.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-23T17:37:43+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord eager_loading find_with_associations</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-04-23T17:37:48+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Ernie : Patch w/ tests please :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Ernie : Patch w/ tests please :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-23T17:48:11+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord eager_loading find_with_associations</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-04-23T17:48:13+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here you go!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here you go!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-24T01:10:13+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord eager_loading find_with_associations</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-04-24T01:10:17+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">4</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-24T01:44:47+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord eager_loading find_with_associations
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord eager_loading find_with_associations patch tests</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-04-24T01:44:48+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">5</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>One small cleanup to patch and an updated test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;One small cleanup to patch and an updated test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-26T22:01:00+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord eager_loading find_with_associations patch tests</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-04-26T22:01:04+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">6</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Optimized patch and found a bug in association counts with the old version.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Optimized patch and found a bug in association counts with the
old version.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-29T04:20:56+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord eager_loading find_with_associations patch tests</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-04-29T04:21:02+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">7</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-29T04:21:30+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord eager_loading find_with_associations patch tests
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord eager_loading find_with_associations patch tests updated</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-04-29T04:21:35+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">8</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [e33d304975f5b20b0ba819ab644a2a8f80ff3743]) Fix eager loading of associations causing table name collisions

[#4463 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/e33d304975f5b20b0ba819ab644a2a8f80ff3743</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/e33d304975f5b20b0ba819ab644a2a8f80ff3743&quot;
title=
&quot;Changeset [e33d304975f5b20b0ba819ab644a2a8f80ff3743]&quot;&gt;[e33d304975f5b20b0ba819ab644a2a8f80ff3743]&lt;/a&gt;)
Fix eager loading of associations causing table name collisions&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/4463&quot; title=
&quot;Ticket #4463&quot;&gt;#4463&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=
&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/e33d304975f5b20b0ba819ab644a2a8f80ff3743&quot;&gt;
http://github.com/rails/rails/commit/e33d304975f5b20b0ba819ab644a2a...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-29T04:29:20+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord eager_loading find_with_associations patch tests updated</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-04-29T04:29:21+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">9</version>
      <user-name>Repository</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Made a silly mistake in the previous patch, checking is_a? instead of class equality. Since JoinAssociation inherits from JoinBase, this can cause a stashed association join to be grafted onto the JoinBase instead of a JoinAssociation in the edge case of multiple-self-joining eager loads. Patch with test included. Sorry about that!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Made a silly mistake in the previous patch, checking is_a?
instead of class equality. Since JoinAssociation inherits from
JoinBase, this can cause a stashed association join to be grafted
onto the JoinBase instead of a JoinAssociation in the edge case of
multiple-self-joining eager loads. Patch with test included. Sorry
about that!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-22T20:32:46+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord eager_loading find_with_associations patch tests updated</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-05-22T20:32:51+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">10</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-23T14:11:17+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord eager_loading find_with_associations patch tests updated
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord eager_loading find_with_associations fixed patch tests updated updated_again</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-05-23T14:11:23+01:00</updated-at>
      <user-id type="integer">24325</user-id>
      <version type="integer">11</version>
      <user-name>Ernie Miller</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:52+01:00</created-at>
      <creator-id type="integer">24325</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4463</number>
      <permalink>joinassociationaliased_table_name_for-bug-affecting-ar-find_with_associations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord eager_loading find_with_associations fixed patch tests updated updated_again</tag>
      <title>JoinAssociation#aliased_table_name_for bug affecting AR find_with_associations?</title>
      <updated-at type="datetime">2010-10-15T23:01:52+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">12</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Ernie Miller</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4463</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>21b3696587e2ac4aff4e9ea1a66624db9b6e74d7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-29T04:20:56+01:00</created-at>
      <filename>find_with_associations_collision_fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">502993</id>
      <size type="integer">13422</size>
      <uploader-id type="integer">24325</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/502993/find_with_associations_collision_fix.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>40ed2f94c3875a4bcee167775ae2f7187a2ba8c1</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-22T20:32:46+01:00</created-at>
      <filename>multi_self_referencing_eager_load.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">531017</id>
      <size type="integer">2984</size>
      <uploader-id type="integer">24325</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/531017/multi_self_referencing_eager_load.diff</url>
    </attachment>
  </attachments>
</ticket>
