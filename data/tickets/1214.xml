<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-15T09:56:16+01:00</created-at>
  <creator-id type="integer">33675</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1214</number>
  <permalink>serialization-1-methods-with-arguments-and-2-scoped-include</permalink>
  <priority type="integer">621</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>json patch serialization serializer to_json to_xml xml</tag>
  <title>Serialization: (1) :methods with arguments and (2) scoped :include</title>
  <updated-at type="datetime">2011-02-02T19:16:55+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">8</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Franco Sellitto</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1214</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Hello everybody

The to_xml and to_json serializers are pretty good for almost every purpose. However some extra feature would be nice to have in order to export a little more accurate data.

I tried to get a couple of improvements, keeping the old behaviors still working:

(1) With the :methods key we are able to include the result of instance methods assuming that are not accepting arguments or there are arguments with default value.
The first improvement lets us to invoke a method with arguments, wrapping the method name and arguments into an array.

@@@ ruby
:methods =&gt; [:name]
:methods =&gt; [[:name, argument_1, argument_2, ...]]
@@@

(2) With the :include key we are able to include associated objects, however all instances are always associated.
The second improvement lets us to scope the associated objects to include into the serialization.

@@@ ruby
:include =&gt; { :posts =&gt; { :records =&gt; @only_these_posts } }
@@@

I didn't try if a better approach would be scoping a subset of objects through named_scope, but in case of dynamic scope we should pass a lambda, so we still have to patch the serializer... isn't it?

To achieve Hello everybody

The to_xml and to_json serializers are pretty good for almost every purpose. However some extra feature would be nice to have in order to export a little more accurate data.

I tried to get a couple of improvements, keeping the old behaviors still working:

(1) With the :methods key we are able to include the result of instance methods assuming that are not accepting arguments or there are arguments with default value.
The first improvement lets us to invoke a method with arguments, wrapping the method name and arguments into an array.

@@@ ruby
:methods =&gt; [:name]
:methods =&gt; [[:name, argument_1, argument_2, ...]]
@@@

(2) With the :include key we are able to include associated objects, however all instances are always associated.
The second improvement lets us to scope the associated objects to include into the serialization.

@@@ ruby
:include =&gt; { :posts =&gt; { :records =&gt; @only_these_posts } }
@@@

I didn't try if a better approach would be scoping a subset of objects through named_scope, but in case of dynamic scope we should pass a lambda, so we still have to patch the serializer... isn't it?

To achieve these two behaviors, I changed just a couple of lines in **rails/activerecord/lib/active_record/serialization.rb**

Does it make sense? Or should I have a complete different approach?

Thanks.</original-body>
  <latest-body>Hello everybody

The to_xml and to_json serializers are pretty good for almost every purpose. However some extra feature would be nice to have in order to export a little more accurate data.

I tried to get a couple of improvements, keeping the old behaviors still working:

(1) With the :methods key we are able to include the result of instance methods assuming that are not accepting arguments or there are arguments with default value.
The first improvement lets us to invoke a method with arguments, wrapping the method name and arguments into an array.

@@@ ruby
:methods =&gt; [:name]
:methods =&gt; [[:name, argument_1, argument_2, ...]]
@@@

(2) With the :include key we are able to include associated objects, however all instances are always associated.
The second improvement lets us to scope the associated objects to include into the serialization.

@@@ ruby
:include =&gt; { :posts =&gt; { :records =&gt; @only_these_posts } }
@@@

I didn't try if a better approach would be scoping a subset of objects through named_scope, but in case of dynamic scope we should pass a lambda, so we still have to patch the serializer... isn't it?

To achieve Hello everybody

The to_xml and to_json serializers are pretty good for almost every purpose. However some extra feature would be nice to have in order to export a little more accurate data.

I tried to get a couple of improvements, keeping the old behaviors still working:

(1) With the :methods key we are able to include the result of instance methods assuming that are not accepting arguments or there are arguments with default value.
The first improvement lets us to invoke a method with arguments, wrapping the method name and arguments into an array.

@@@ ruby
:methods =&gt; [:name]
:methods =&gt; [[:name, argument_1, argument_2, ...]]
@@@

(2) With the :include key we are able to include associated objects, however all instances are always associated.
The second improvement lets us to scope the associated objects to include into the serialization.

@@@ ruby
:include =&gt; { :posts =&gt; { :records =&gt; @only_these_posts } }
@@@

I didn't try if a better approach would be scoping a subset of objects through named_scope, but in case of dynamic scope we should pass a lambda, so we still have to patch the serializer... isn't it?

To achieve these two behaviors, I changed just a couple of lines in **rails/activerecord/lib/active_record/serialization.rb**

Does it make sense? Or should I have a complete different approach?

Thanks.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello everybody&lt;/p&gt;
&lt;p&gt;The to_xml and to_json serializers are pretty good for almost
every purpose. However some extra feature would be nice to have in
order to export a little more accurate data.&lt;/p&gt;
&lt;p&gt;I tried to get a couple of improvements, keeping the old
behaviors still working:&lt;/p&gt;
&lt;p&gt;(1) With the :methods key we are able to include the result of
instance methods assuming that are not accepting arguments or there
are arguments with default value. The first improvement lets us to
invoke a method with arguments, wrapping the method name and
arguments into an array.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
:methods =&amp;gt; [:name]
:methods =&amp;gt; [[:name, argument_1, argument_2, ...]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(2) With the :include key we are able to include associated
objects, however all instances are always associated. The second
improvement lets us to scope the associated objects to include into
the serialization.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
:include =&amp;gt; { :posts =&amp;gt; { :records =&amp;gt; @only_these_posts } }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I didn't try if a better approach would be scoping a subset of
objects through named_scope, but in case of dynamic scope we should
pass a lambda, so we still have to patch the serializer... isn't
it?&lt;/p&gt;
&lt;p&gt;To achieve Hello everybody&lt;/p&gt;
&lt;p&gt;The to_xml and to_json serializers are pretty good for almost
every purpose. However some extra feature would be nice to have in
order to export a little more accurate data.&lt;/p&gt;
&lt;p&gt;I tried to get a couple of improvements, keeping the old
behaviors still working:&lt;/p&gt;
&lt;p&gt;(1) With the :methods key we are able to include the result of
instance methods assuming that are not accepting arguments or there
are arguments with default value. The first improvement lets us to
invoke a method with arguments, wrapping the method name and
arguments into an array.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
:methods =&amp;gt; [:name]
:methods =&amp;gt; [[:name, argument_1, argument_2, ...]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(2) With the :include key we are able to include associated
objects, however all instances are always associated. The second
improvement lets us to scope the associated objects to include into
the serialization.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
:include =&amp;gt; { :posts =&amp;gt; { :records =&amp;gt; @only_these_posts } }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I didn't try if a better approach would be scoping a subset of
objects through named_scope, but in case of dynamic scope we should
pass a lambda, so we still have to patch the serializer... isn't
it?&lt;/p&gt;
&lt;p&gt;To achieve these two behaviors, I changed just a couple of lines
in
&lt;strong&gt;rails/activerecord/lib/active_record/serialization.rb&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Does it make sense? Or should I have a complete different
approach?&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello everybody

The to_xml and to_json serializers are pretty good for almost every purpose. However some extra feature would be nice to have in order to export a little more accurate data.

I tried to get a couple of improvements, keeping the old behaviors still working:

(1) With the :methods key we are able to include the result of instance methods assuming that are not accepting arguments or there are arguments with default value.
The first improvement lets us to invoke a method with arguments, wrapping the method name and arguments into an array.

@@@ ruby
:methods =&gt; [:name]
:methods =&gt; [[:name, argument_1, argument_2, ...]]
@@@

(2) With the :include key we are able to include associated objects, however all instances are always associated.
The second improvement lets us to scope the associated objects to include into the serialization.

@@@ ruby
:include =&gt; { :posts =&gt; { :records =&gt; @only_these_posts } }
@@@

I didn't try if a better approach would be scoping a subset of objects through named_scope, but in case of dynamic scope we should pass a lambda, so we still have to patch the serializer... isn't it?

To achieve these two behaviors, I changed just a couple of lines in **rails/activerecord/lib/active_record/serialization.rb**

Does it make sense? Or should I have a complete different approach?

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello everybody&lt;/p&gt;
&lt;p&gt;The to_xml and to_json serializers are pretty good for almost
every purpose. However some extra feature would be nice to have in
order to export a little more accurate data.&lt;/p&gt;
&lt;p&gt;I tried to get a couple of improvements, keeping the old
behaviors still working:&lt;/p&gt;
&lt;p&gt;(1) With the :methods key we are able to include the result of
instance methods assuming that are not accepting arguments or there
are arguments with default value. The first improvement lets us to
invoke a method with arguments, wrapping the method name and
arguments into an array.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
:methods =&amp;gt; [:name]
:methods =&amp;gt; [[:name, argument_1, argument_2, ...]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(2) With the :include key we are able to include associated
objects, however all instances are always associated. The second
improvement lets us to scope the associated objects to include into
the serialization.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
:include =&amp;gt; { :posts =&amp;gt; { :records =&amp;gt; @only_these_posts } }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I didn't try if a better approach would be scoping a subset of
objects through named_scope, but in case of dynamic scope we should
pass a lambda, so we still have to patch the serializer... isn't
it?&lt;/p&gt;
&lt;p&gt;To achieve these two behaviors, I changed just a couple of lines
in
&lt;strong&gt;rails/activerecord/lib/active_record/serialization.rb&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Does it make sense? Or should I have a complete different
approach?&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-15T09:56:16+01:00</created-at>
      <creator-id type="integer">33675</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1214</number>
      <permalink>serialization-1-methods-with-arguments-and-2-scoped-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>json serialization serializer to_json to_xml xml</tag>
      <title>Serialization: (1) :methods with arguments and (2) scoped :include</title>
      <updated-at type="datetime">2008-10-15T09:59:58+01:00</updated-at>
      <user-id type="integer">33675</user-id>
      <version type="integer">1</version>
      <user-name>Franco Sellitto</user-name>
      <creator-name>Franco Sellitto</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1214</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1

This behaviour would be really helpful, I think. Any news on including in Rails?</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;This behaviour would be really helpful, I think. Any news on
including in Rails?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-24T22:18:25+00:00</created-at>
      <creator-id type="integer">33675</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1214</number>
      <permalink>serialization-1-methods-with-arguments-and-2-scoped-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>json serialization serializer to_json to_xml xml</tag>
      <title>Serialization: (1) :methods with arguments and (2) scoped :include</title>
      <updated-at type="datetime">2008-11-24T22:18:30+00:00</updated-at>
      <user-id type="integer">15949</user-id>
      <version type="integer">2</version>
      <user-name>cbonnet99 (at gmail)</user-name>
      <creator-name>Franco Sellitto</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1214</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">83</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-25T12:51:11+00:00</created-at>
      <creator-id type="integer">33675</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1214</number>
      <permalink>serialization-1-methods-with-arguments-and-2-scoped-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>json serialization serializer to_json to_xml xml</tag>
      <title>Serialization: (1) :methods with arguments and (2) scoped :include</title>
      <updated-at type="datetime">2008-11-25T12:51:17+00:00</updated-at>
      <user-id type="integer">9932</user-id>
      <version type="integer">3</version>
      <user-name>Sigurd</user-name>
      <creator-name>Franco Sellitto</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1214</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>DHH</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-25T12:51:19+00:00</created-at>
      <creator-id type="integer">33675</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 83
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1214</number>
      <permalink>serialization-1-methods-with-arguments-and-2-scoped-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>json serialization serializer to_json to_xml xml</tag>
      <title>Serialization: (1) :methods with arguments and (2) scoped :include</title>
      <updated-at type="datetime">2008-11-25T12:51:23+00:00</updated-at>
      <user-id type="integer">9932</user-id>
      <version type="integer">4</version>
      <user-name>Sigurd</user-name>
      <creator-name>Franco Sellitto</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1214</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Patch doesn't have any docs/tests. It might be a better idea to discuss the issue on the core mailing list - http://groups.google.com/group/rubyonrails-core

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch doesn't have any docs/tests. It might be a better idea to
discuss the issue on the core mailing list - &lt;a href=&quot;http://groups.google.com/group/rubyonrails-core&quot;&gt;http://groups.google.com/group/r...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-07T15:47:04+00:00</created-at>
      <creator-id type="integer">33675</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: json serialization serializer to_json to_xml xml
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1214</number>
      <permalink>serialization-1-methods-with-arguments-and-2-scoped-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>json patch serialization serializer to_json to_xml xml</tag>
      <title>Serialization: (1) :methods with arguments and (2) scoped :include</title>
      <updated-at type="datetime">2009-03-07T15:47:09+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>Franco Sellitto</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1214</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:35+01:00</created-at>
      <creator-id type="integer">33675</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1214</number>
      <permalink>serialization-1-methods-with-arguments-and-2-scoped-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>json patch serialization serializer to_json to_xml xml</tag>
      <title>Serialization: (1) :methods with arguments and (2) scoped :include</title>
      <updated-at type="datetime">2010-05-04T18:48:35+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Franco Sellitto</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1214</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T17:04:53+00:00</created-at>
      <creator-id type="integer">33675</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1214</number>
      <permalink>serialization-1-methods-with-arguments-and-2-scoped-include</permalink>
      <priority type="integer">621</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>json patch serialization serializer to_json to_xml xml</tag>
      <title>Serialization: (1) :methods with arguments and (2) scoped :include</title>
      <updated-at type="datetime">2011-02-02T19:14:29+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Franco Sellitto</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1214</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:04:54+00:00</created-at>
      <creator-id type="integer">33675</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1214</number>
      <permalink>serialization-1-methods-with-arguments-and-2-scoped-include</permalink>
      <priority type="integer">621</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>json patch serialization serializer to_json to_xml xml</tag>
      <title>Serialization: (1) :methods with arguments and (2) scoped :include</title>
      <updated-at type="datetime">2011-02-02T19:16:55+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Franco Sellitto</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1214</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>bd3bfe3c23edc5f698304a09b0bec66b18a7a3e5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-15T09:56:16+01:00</created-at>
      <filename>serialization.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">54223</id>
      <size type="integer">1299</size>
      <uploader-id type="integer">33675</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/54223/serialization.diff</url>
    </attachment>
  </attachments>
</ticket>
