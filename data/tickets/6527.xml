<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-04T20:24:09+00:00</created-at>
  <creator-id type="integer">70488</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6527</number>
  <permalink>validate_uniqueness_of-235-with-scoping-broken-against-postgresql-90</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>2.3.5 active_record bug patched postgresql scope validates_uniqueness_of</tag>
  <title>validate_uniqueness_of (2.3.5) with scoping broken against PostgreSQL 9.0</title>
  <updated-at type="datetime">2011-03-04T20:24:13+00:00</updated-at>
  <user-id type="integer">70488</user-id>
  <version type="integer">1</version>
  <user-name>cschiefelbein</user-name>
  <creator-name>cschiefelbein</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6527</url>
  <priority-name nil="true"></priority-name>
  <original-body>validate_uniqueness_of does not quote scoped values when constructing the SQL query, so if the scoped column happens to be text, you get a PGError. (PostgreSQL 8.2 server did not complain)

    class Group &lt; ActiveRecord::Base
 
      # name, section, and subsection are all text columns
      validates_uniqueness_of :name, :scope =&gt; [:section, :subsection]

    end

    class GroupTest &lt; ActiveSupport::TestCase
      # blows up with PGError
      should validate_uniqueness_of(:name).scoped_to([:section, :subsection])
    end

Here is the specific error from the database:

    ActiveRecord::StatementInvalid: PGError: ERROR:  operator does not exist: character varying = integer
    LINE 1: ...&quot;groups&quot;.&quot;name&quot; = E'09-01' AND &quot;groups&quot;.section = 1 AND &quot;g...
                                                                 ^
    HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.


I have written a patch against ActiveRecord::Validations (see attached). I would gladly write tests too, but I'm running on Gentoo, which does not know about libxml2-dev or libxslt1-dev, and &quot;gem install bundler&quot; is timing out right now, too. So I don't have a formal test setup (but my patch works in the above case).</original-body>
  <latest-body>validate_uniqueness_of does not quote scoped values when constructing the SQL query, so if the scoped column happens to be text, you get a PGError. (PostgreSQL 8.2 server did not complain)

    class Group &lt; ActiveRecord::Base
 
      # name, section, and subsection are all text columns
      validates_uniqueness_of :name, :scope =&gt; [:section, :subsection]

    end

    class GroupTest &lt; ActiveSupport::TestCase
      # blows up with PGError
      should validate_uniqueness_of(:name).scoped_to([:section, :subsection])
    end

Here is the specific error from the database:

    ActiveRecord::StatementInvalid: PGError: ERROR:  operator does not exist: character varying = integer
    LINE 1: ...&quot;groups&quot;.&quot;name&quot; = E'09-01' AND &quot;groups&quot;.section = 1 AND &quot;g...
                                                                 ^
    HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.


I have written a patch against ActiveRecord::Validations (see attached). I would gladly write tests too, but I'm running on Gentoo, which does not know about libxml2-dev or libxslt1-dev, and &quot;gem install bundler&quot; is timing out right now, too. So I don't have a formal test setup (but my patch works in the above case).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;validate_uniqueness_of does not quote scoped values when
constructing the SQL query, so if the scoped column happens to be
text, you get a PGError. (PostgreSQL 8.2 server did not
complain)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Group &amp;lt; ActiveRecord::Base

  # name, section, and subsection are all text columns
  validates_uniqueness_of :name, :scope =&amp;gt; [:section, :subsection]

end

class GroupTest &amp;lt; ActiveSupport::TestCase
  # blows up with PGError
  should validate_uniqueness_of(:name).scoped_to([:section, :subsection])
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here is the specific error from the database:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::StatementInvalid: PGError: ERROR:  operator does not exist: character varying = integer
LINE 1: ...&quot;groups&quot;.&quot;name&quot; = E'09-01' AND &quot;groups&quot;.section = 1 AND &quot;g...
                                                             ^
HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have written a patch against ActiveRecord::Validations (see
attached). I would gladly write tests too, but I'm running on
Gentoo, which does not know about libxml2-dev or libxslt1-dev, and
&quot;gem install bundler&quot; is timing out right now, too. So I don't have
a formal test setup (but my patch works in the above case).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>validate_uniqueness_of does not quote scoped values when constructing the SQL query, so if the scoped column happens to be text, you get a PGError. (PostgreSQL 8.2 server did not complain)

    class Group &lt; ActiveRecord::Base
 
      # name, section, and subsection are all text columns
      validates_uniqueness_of :name, :scope =&gt; [:section, :subsection]

    end

    class GroupTest &lt; ActiveSupport::TestCase
      # blows up with PGError
      should validate_uniqueness_of(:name).scoped_to([:section, :subsection])
    end

Here is the specific error from the database:

    ActiveRecord::StatementInvalid: PGError: ERROR:  operator does not exist: character varying = integer
    LINE 1: ...&quot;groups&quot;.&quot;name&quot; = E'09-01' AND &quot;groups&quot;.section = 1 AND &quot;g...
                                                                 ^
    HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.


I have written a patch against ActiveRecord::Validations (see attached). I would gladly write tests too, but I'm running on Gentoo, which does not know about libxml2-dev or libxslt1-dev, and &quot;gem install bundler&quot; is timing out right now, too. So I don't have a formal test setup (but my patch works in the above case).</body>
      <body-html>&lt;div&gt;&lt;p&gt;validate_uniqueness_of does not quote scoped values when
constructing the SQL query, so if the scoped column happens to be
text, you get a PGError. (PostgreSQL 8.2 server did not
complain)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Group &amp;lt; ActiveRecord::Base

  # name, section, and subsection are all text columns
  validates_uniqueness_of :name, :scope =&amp;gt; [:section, :subsection]

end

class GroupTest &amp;lt; ActiveSupport::TestCase
  # blows up with PGError
  should validate_uniqueness_of(:name).scoped_to([:section, :subsection])
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here is the specific error from the database:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::StatementInvalid: PGError: ERROR:  operator does not exist: character varying = integer
LINE 1: ...&quot;groups&quot;.&quot;name&quot; = E'09-01' AND &quot;groups&quot;.section = 1 AND &quot;g...
                                                             ^
HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have written a patch against ActiveRecord::Validations (see
attached). I would gladly write tests too, but I'm running on
Gentoo, which does not know about libxml2-dev or libxslt1-dev, and
&quot;gem install bundler&quot; is timing out right now, too. So I don't have
a formal test setup (but my patch works in the above case).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-04T20:24:09+00:00</created-at>
      <creator-id type="integer">70488</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6527</number>
      <permalink>validate_uniqueness_of-235-with-scoping-broken-against-postgresql-90</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.5 active_record bug patched postgresql scope validates_uniqueness_of</tag>
      <title>validate_uniqueness_of (2.3.5) with scoping broken against PostgreSQL 9.0</title>
      <updated-at type="datetime">2011-03-04T20:24:13+00:00</updated-at>
      <user-id type="integer">70488</user-id>
      <version type="integer">1</version>
      <user-name>cschiefelbein</user-name>
      <creator-name>cschiefelbein</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6527</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>e60172b92f8ba7ebb53233384e41d50da4fa2d60</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-03-04T20:24:09+00:00</created-at>
      <filename>activerecord-235_uniqueness-s.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">943509</id>
      <size type="integer">1936</size>
      <uploader-id type="integer">70488</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/943509/activerecord-235_uniqueness-s.patch</url>
    </attachment>
  </attachments>
</ticket>
