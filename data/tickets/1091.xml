<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-09-22T17:01:08+01:00</created-at>
  <creator-id type="integer">17428</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1091</number>
  <permalink>patch-fix-that-activerecord-would-load-a-whole-association-when-calling-first</permalink>
  <priority type="integer">512</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord bug has_many patch tested</tag>
  <title>Fix that ActiveRecord would load a whole association when calling first</title>
  <updated-at type="datetime">2008-09-22T18:23:30+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">7</version>
  <user-name>Repository</user-name>
  <creator-name>Jan De Poorter</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1091</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>In some cases AssociationCollection would load the entire association, when just calling first or last. Example:

@@@@
u = User.find(params[:id])
 
u.activities.last # Does a find(:last)
 
# Add something to the activities
u.activities.create!({:description =&gt; &quot;List activities&quot;})
 
u.activities.last # Fetches all activities of the user - Painfull when a user has 30000 activities
@@@@

The patch included only does a full association load if there are records in the association that aren't saved.</original-body>
  <latest-body>In some cases AssociationCollection would load the entire association, when just calling first or last. Example:

@@@@
u = User.find(params[:id])
 
u.activities.last # Does a find(:last)
 
# Add something to the activities
u.activities.create!({:description =&gt; &quot;List activities&quot;})
 
u.activities.last # Fetches all activities of the user - Painfull when a user has 30000 activities
@@@@

The patch included only does a full association load if there are records in the association that aren't saved.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In some cases AssociationCollection would load the entire
association, when just calling first or last. Example:&lt;/p&gt;
&lt;p&gt;@@@@ u = User.find(params[:id])&lt;/p&gt;
&lt;p&gt;u.activities.last # Does a find(:last)&lt;/p&gt;
&lt;h1&gt;Add something to the activities&lt;/h1&gt;
&lt;p&gt;u.activities.create!({:description =&amp;gt; &quot;List activities&quot;})&lt;/p&gt;
&lt;p&gt;u.activities.last # Fetches all activities of the user -
Painfull when a user has 30000 activities @@@@&lt;/p&gt;
&lt;p&gt;The patch included only does a full association load if there
are records in the association that aren't saved.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In some cases AssociationCollection would load the entire association, when just calling first or last. Example:

@@@ ruby
u = User.find(params[:id])
 
u.activities.last # Does a find(:last)
 
# Add something to the activities
u.activities.create!({:description =&gt; &quot;List activities&quot;})
 
u.activities.last # Fetches all activities of the user - Painfull when a user has 30000 activities
@@@

The patch included only does a full association load if there are records in the association that aren't saved.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In some cases AssociationCollection would load the entire
association, when just calling first or last. Example:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
u = User.find(params[:id])

u.activities.last # Does a find(:last)

# Add something to the activities
u.activities.create!({:description =&amp;gt; &amp;quot;List activities&amp;quot;})

u.activities.last # Fetches all activities of the user - Painfull when a user has 30000 activities
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The patch included only does a full association load if there
are records in the association that aren't saved.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-22T17:01:08+01:00</created-at>
      <creator-id type="integer">17428</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1091</number>
      <permalink>patch-fix-that-activerecord-would-load-a-whole-association-when-calling-first</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug has_many patch tested</tag>
      <title>[PATCH] Fix that ActiveRecord would load a whole association when calling first</title>
      <updated-at type="datetime">2008-09-22T17:01:42+01:00</updated-at>
      <user-id type="integer">17428</user-id>
      <version type="integer">1</version>
      <user-name>Jan De Poorter</user-name>
      <creator-name>Jan De Poorter</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1091</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-22T17:02:43+01:00</created-at>
      <creator-id type="integer">17428</creator-id>
      <diffable-attributes type="yaml">--- 
:title: &quot;[PATCH] Fix that ActiveRecord would load a whole association when calling first&quot;
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1091</number>
      <permalink>patch-fix-that-activerecord-would-load-a-whole-association-when-calling-first</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug has_many patch tested</tag>
      <title>Fix that ActiveRecord would load a whole association when calling first</title>
      <updated-at type="datetime">2008-09-22T17:02:45+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Jan De Poorter</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1091</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-22T17:08:23+01:00</created-at>
      <creator-id type="integer">17428</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Fix that ActiveRecord would load a whole association when calling first
:assigned_user: 1366
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1091</number>
      <permalink>patch-fix-that-activerecord-would-load-a-whole-association-when-calling-first</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug has_many patch tested</tag>
      <title>[PATCH] Fix that ActiveRecord would load a whole association when calling first</title>
      <updated-at type="datetime">2008-09-22T17:08:24+01:00</updated-at>
      <user-id type="integer">17428</user-id>
      <version type="integer">3</version>
      <user-name>Jan De Poorter</user-name>
      <creator-name>Jan De Poorter</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1091</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-22T17:08:52+01:00</created-at>
      <creator-id type="integer">17428</creator-id>
      <diffable-attributes type="yaml">--- 
:title: &quot;[PATCH] Fix that ActiveRecord would load a whole association when calling first&quot;
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1091</number>
      <permalink>patch-fix-that-activerecord-would-load-a-whole-association-when-calling-first</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug has_many patch tested</tag>
      <title>Fix that ActiveRecord would load a whole association when calling first</title>
      <updated-at type="datetime">2008-09-22T17:08:56+01:00</updated-at>
      <user-id type="integer">17428</user-id>
      <version type="integer">4</version>
      <user-name>Jan De Poorter</user-name>
      <creator-name>Jan De Poorter</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1091</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Looks good.

Getting one failing test though :
@@@ ruby
HasAndBelongsToManyAssociationsTest)
    [./test/cases/associations/has_and_belongs_to_many_associations_test.rb:256:in `test_create'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `run']:
&lt;false&gt; is not true.
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks good.&lt;/p&gt;
&lt;p&gt;Getting one failing test though :&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
HasAndBelongsToManyAssociationsTest)
    [./test/cases/associations/has_and_belongs_to_many_associations_test.rb:256:in `test_create'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `run']:
&amp;lt;false&amp;gt; is not true.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-22T17:33:45+01:00</created-at>
      <creator-id type="integer">17428</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1091</number>
      <permalink>patch-fix-that-activerecord-would-load-a-whole-association-when-calling-first</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug has_many patch tested</tag>
      <title>Fix that ActiveRecord would load a whole association when calling first</title>
      <updated-at type="datetime">2008-09-22T17:33:50+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>Jan De Poorter</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1091</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Oops.. Fixed the tests so it reflects what I changed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops.. Fixed the tests so it reflects what I changed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-22T17:53:00+01:00</created-at>
      <creator-id type="integer">17428</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1091</number>
      <permalink>patch-fix-that-activerecord-would-load-a-whole-association-when-calling-first</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bug has_many patch tested</tag>
      <title>Fix that ActiveRecord would load a whole association when calling first</title>
      <updated-at type="datetime">2008-09-22T17:53:04+01:00</updated-at>
      <user-id type="integer">17428</user-id>
      <version type="integer">6</version>
      <user-name>Jan De Poorter</user-name>
      <creator-name>Jan De Poorter</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1091</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [050e58441bf7e60d167f6708072f8fa7aee2ce76]) Association#first and last should not load the association if not needed. [#1091 state:resolved]

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/050e58441bf7e60d167f6708072f8fa7aee2ce76</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [050e58441bf7e60d167f6708072f8fa7aee2ce76])
Association#first and last should not load the association if not
needed. [&lt;a href=&quot;/projects/8994/tickets/1091&quot; title=&quot;Ticket #1091&quot;&gt;#1091&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Pratik Naik &lt;a href=&quot;mailto:pratiknaik@gmail.com&quot;&gt;pratiknaik@gmail.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/050e58441bf7e60d167f6708072f8fa7aee2ce76&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-22T18:23:28+01:00</created-at>
      <creator-id type="integer">17428</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1091</number>
      <permalink>patch-fix-that-activerecord-would-load-a-whole-association-when-calling-first</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug has_many patch tested</tag>
      <title>Fix that ActiveRecord would load a whole association when calling first</title>
      <updated-at type="datetime">2008-09-22T18:23:30+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>Jan De Poorter</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1091</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d645dbcc6b1baa970146e57af8ef76deeacbbef3</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-22T17:08:23+01:00</created-at>
      <filename>fix_first_and_last_association_loading.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">47673</id>
      <size type="integer">2148</size>
      <uploader-id type="integer">17428</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/47673/fix_first_and_last_association_loading.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>b7c3c0c248e813a1ab97196d6fadffabc73fc550</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-22T17:53:00+01:00</created-at>
      <filename>fix_first_and_last_association_loading.v2.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">47693</id>
      <size type="integer">3659</size>
      <uploader-id type="integer">17428</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/47693/fix_first_and_last_association_loading.v2.patch</url>
    </attachment>
  </attachments>
</ticket>
