<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-21T14:04:55+00:00</created-at>
  <creator-id type="integer">52024</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5476</number>
  <permalink>rails3-rc2-autoloading-does-not-work-correctly-when-constaint-is-nested-in-class-instead-of-module</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>autoload constant rails3rc2</tag>
  <title>Rails3 RC2 - Autoloading does not work correctly when constaint is nested in class instead of module</title>
  <updated-at type="datetime">2011-02-21T14:04:55+00:00</updated-at>
  <user-id type="integer">7697</user-id>
  <version type="integer">6</version>
  <user-name>Andrew White</user-name>
  <creator-name>Robert Pankowecki</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5476</url>
  <priority-name>Low</priority-name>
  <original-body>@@@
17:07 &lt;ruby-1.9.2-head&gt; ~/test/railsrc2  &gt; rails c
Loading development environment (Rails 3.0.0.rc2)

ruby-1.9.2-head &gt; Relation
 =&gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 


## Wrong !
ruby-1.9.2-head &gt; Sequence::Relation
(irb):2: warning: toplevel constant Relation referenced by Sequence::Relation
 =&gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 
##

ruby-1.9.2-head &gt; Test::Relation
 =&gt; Test::Relation(id: integer, created_at: datetime, updated_at: datetime)

ruby-1.9.2-head &gt; Sequence.class
 =&gt; Class 
ruby-1.9.2-head &gt; Test.class
 =&gt; Module 

# Ok
ruby-1.9.2-head &gt; require 'sequence/relation'
 =&gt; nil 
ruby-1.9.2-head &gt; Sequence::Relation
 =&gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime)


also if constant are accessed in different sequence it leads to different results:

17:10 &lt;ruby-1.9.2-head&gt; ~/test/railsrc2  &gt; rails c
# OK
ruby-1.9.2-head &gt; Sequence::Relation
 =&gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime) 
ruby-1.9.2-head &gt; Relation
 =&gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 
ruby-1.9.2-head &gt; Sequence::Relation
 =&gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime) 

@@@


As you can see using Relation before Sequence::Relation leads to an error that Sequence::Relation constant returns wrong object.</original-body>
  <latest-body>@@@
17:07 &lt;ruby-1.9.2-head&gt; ~/test/railsrc2  &gt; rails c
Loading development environment (Rails 3.0.0.rc2)

ruby-1.9.2-head &gt; Relation
 =&gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 


## Wrong !
ruby-1.9.2-head &gt; Sequence::Relation
(irb):2: warning: toplevel constant Relation referenced by Sequence::Relation
 =&gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 
##

ruby-1.9.2-head &gt; Test::Relation
 =&gt; Test::Relation(id: integer, created_at: datetime, updated_at: datetime)

ruby-1.9.2-head &gt; Sequence.class
 =&gt; Class 
ruby-1.9.2-head &gt; Test.class
 =&gt; Module 

# Ok
ruby-1.9.2-head &gt; require 'sequence/relation'
 =&gt; nil 
ruby-1.9.2-head &gt; Sequence::Relation
 =&gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime)


also if constant are accessed in different sequence it leads to different results:

17:10 &lt;ruby-1.9.2-head&gt; ~/test/railsrc2  &gt; rails c
# OK
ruby-1.9.2-head &gt; Sequence::Relation
 =&gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime) 
ruby-1.9.2-head &gt; Relation
 =&gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 
ruby-1.9.2-head &gt; Sequence::Relation
 =&gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime) 

@@@


As you can see using Relation before Sequence::Relation leads to an error that Sequence::Relation constant returns wrong object.</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;17:07 &amp;lt;ruby-1.9.2-head&amp;gt; ~/test/railsrc2  &amp;gt; rails c
Loading development environment (Rails 3.0.0.rc2)

ruby-1.9.2-head &amp;gt; Relation
 =&amp;gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 


## Wrong !
ruby-1.9.2-head &amp;gt; Sequence::Relation
(irb):2: warning: toplevel constant Relation referenced by Sequence::Relation
 =&amp;gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 
##

ruby-1.9.2-head &amp;gt; Test::Relation
 =&amp;gt; Test::Relation(id: integer, created_at: datetime, updated_at: datetime)

ruby-1.9.2-head &amp;gt; Sequence.class
 =&amp;gt; Class 
ruby-1.9.2-head &amp;gt; Test.class
 =&amp;gt; Module 

# Ok
ruby-1.9.2-head &amp;gt; require 'sequence/relation'
 =&amp;gt; nil 
ruby-1.9.2-head &amp;gt; Sequence::Relation
 =&amp;gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime)


also if constant are accessed in different sequence it leads to different results:

17:10 &amp;lt;ruby-1.9.2-head&amp;gt; ~/test/railsrc2  &amp;gt; rails c
# OK
ruby-1.9.2-head &amp;gt; Sequence::Relation
 =&amp;gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime) 
ruby-1.9.2-head &amp;gt; Relation
 =&amp;gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 
ruby-1.9.2-head &amp;gt; Sequence::Relation
 =&amp;gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see using Relation before Sequence::Relation leads to
an error that Sequence::Relation constant returns wrong object.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@
17:07 &lt;ruby-1.9.2-head&gt; ~/test/railsrc2  &gt; rails c
Loading development environment (Rails 3.0.0.rc2)

ruby-1.9.2-head &gt; Relation
 =&gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 


## Wrong !
ruby-1.9.2-head &gt; Sequence::Relation
(irb):2: warning: toplevel constant Relation referenced by Sequence::Relation
 =&gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 
##

ruby-1.9.2-head &gt; Test::Relation
 =&gt; Test::Relation(id: integer, created_at: datetime, updated_at: datetime)

ruby-1.9.2-head &gt; Sequence.class
 =&gt; Class 
ruby-1.9.2-head &gt; Test.class
 =&gt; Module 

# Ok
ruby-1.9.2-head &gt; require 'sequence/relation'
 =&gt; nil 
ruby-1.9.2-head &gt; Sequence::Relation
 =&gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime)


also if constant are accessed in different sequence it leads to different results:

17:10 &lt;ruby-1.9.2-head&gt; ~/test/railsrc2  &gt; rails c
# OK
ruby-1.9.2-head &gt; Sequence::Relation
 =&gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime) 
ruby-1.9.2-head &gt; Relation
 =&gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 
ruby-1.9.2-head &gt; Sequence::Relation
 =&gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime) 

@@@


As you can see using Relation before Sequence::Relation leads to an error that Sequence::Relation constant returns wrong object.</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;17:07 &amp;lt;ruby-1.9.2-head&amp;gt; ~/test/railsrc2  &amp;gt; rails c
Loading development environment (Rails 3.0.0.rc2)

ruby-1.9.2-head &amp;gt; Relation
 =&amp;gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 


## Wrong !
ruby-1.9.2-head &amp;gt; Sequence::Relation
(irb):2: warning: toplevel constant Relation referenced by Sequence::Relation
 =&amp;gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 
##

ruby-1.9.2-head &amp;gt; Test::Relation
 =&amp;gt; Test::Relation(id: integer, created_at: datetime, updated_at: datetime)

ruby-1.9.2-head &amp;gt; Sequence.class
 =&amp;gt; Class 
ruby-1.9.2-head &amp;gt; Test.class
 =&amp;gt; Module 

# Ok
ruby-1.9.2-head &amp;gt; require 'sequence/relation'
 =&amp;gt; nil 
ruby-1.9.2-head &amp;gt; Sequence::Relation
 =&amp;gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime)


also if constant are accessed in different sequence it leads to different results:

17:10 &amp;lt;ruby-1.9.2-head&amp;gt; ~/test/railsrc2  &amp;gt; rails c
# OK
ruby-1.9.2-head &amp;gt; Sequence::Relation
 =&amp;gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime) 
ruby-1.9.2-head &amp;gt; Relation
 =&amp;gt; Relation(id: integer, created_at: datetime, updated_at: datetime) 
ruby-1.9.2-head &amp;gt; Sequence::Relation
 =&amp;gt; Sequence::Relation(id: integer, group: integer, created_at: datetime, updated_at: datetime)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see using Relation before Sequence::Relation leads to
an error that Sequence::Relation constant returns wrong object.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-27T16:14:07+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5476</number>
      <permalink>rails3-rc2-autoloading-does-not-work-correctly-when-constaint-is-nested-in-class-instead-of-module</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>autoload constant rails3rc2</tag>
      <title>Rails3 RC2 - Autoloading does not work correctly when constaint is nested in class instead of module</title>
      <updated-at type="datetime">2010-08-27T16:14:09+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">1</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5476</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is easy to duplicate with plain classes.

@@@ ruby
  $ cat my_class.rb
  class MyClass

  end
  $ cat super_class.rb
  class SuperClass

  end
  $ cat super_class/my_class.rb
  class SuperClass
    class MyClass

    end
  end
  $ cat namespace.rb
  module Namespace

  end
  $ cat namespace/my_class.rb
  module Namespace
    class MyClass

    end
  end
  $ rails c
  Loading development environment (Rails 3.0.0.rc2)
  ruby-1.9.2-p0 &gt; MyClass
   =&gt; MyClass
  ruby-1.9.2-p0 &gt; Namespace::MyClass
   =&gt; Namespace::MyClass
  ruby-1.9.2-p0 &gt; SuperClass::MyClass
  (irb):3: warning: toplevel constant MyClass referenced by SuperClass::MyClass
   =&gt; MyClass
@@@

I ran into this problem and my solution was to avoid putting a class within another class. Fixing this problem would be awesome and I'll try to see if I can find part of dependencies is only 'on' for modules and not classes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is easy to duplicate with plain classes.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  $ cat my_class.rb
  class MyClass

  end
  $ cat super_class.rb
  class SuperClass

  end
  $ cat super_class/my_class.rb
  class SuperClass
    class MyClass

    end
  end
  $ cat namespace.rb
  module Namespace

  end
  $ cat namespace/my_class.rb
  module Namespace
    class MyClass

    end
  end
  $ rails c
  Loading development environment (Rails 3.0.0.rc2)
  ruby-1.9.2-p0 &amp;gt; MyClass
   =&amp;gt; MyClass
  ruby-1.9.2-p0 &amp;gt; Namespace::MyClass
   =&amp;gt; Namespace::MyClass
  ruby-1.9.2-p0 &amp;gt; SuperClass::MyClass
  (irb):3: warning: toplevel constant MyClass referenced by SuperClass::MyClass
   =&amp;gt; MyClass&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I ran into this problem and my solution was to avoid putting a
class within another class. Fixing this problem would be awesome
and I'll try to see if I can find part of dependencies is only 'on'
for modules and not classes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-27T21:05:50+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5476</number>
      <permalink>rails3-rc2-autoloading-does-not-work-correctly-when-constaint-is-nested-in-class-instead-of-module</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>autoload constant rails3rc2</tag>
      <title>Rails3 RC2 - Autoloading does not work correctly when constaint is nested in class instead of module</title>
      <updated-at type="datetime">2010-08-27T21:05:51+01:00</updated-at>
      <user-id type="integer">103676</user-id>
      <version type="integer">2</version>
      <user-name>Samuel Kadolph</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5476</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The problem here is that ruby searches ancestors for constants and Object is in the ancestor list of a Class but not of a Module. There's no way to intercept the call in ruby so we can't fix it.

However, there's a couple of simple workarounds:

@@@ ruby
  # define the nested class in the sequence source file
  # sequence.rb
  class Sequence &lt; ActiveRecord::Base
    class Relation &lt; ActiveRecord::Base
    end
  end
@@@

@@@ ruby
  # require the nested class in the sequence source file
  # sequence.rb
  require_dependency 'sequence/relation'
  class Sequence &lt; ActiveRecord::Base
  end

  # sequence/relation.rb
  class Sequence &lt; ActiveRecord::Base
    class Relation &lt; ActiveRecord::Base
    end
  end
@@@

In the second workaround if you want the require_dependency at the top of the file you'll need to nest properly in the relation.rb file. If you want to define the Sequence::Relation class in one line then you'll need to put the require_dependency after the Sequence definition in sequence.rb</body>
      <body-html>&lt;div&gt;&lt;p&gt;The problem here is that ruby searches ancestors for constants
and Object is in the ancestor list of a Class but not of a Module.
There's no way to intercept the call in ruby so we can't fix
it.&lt;/p&gt;
&lt;p&gt;However, there's a couple of simple workarounds:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  # define the nested class in the sequence source file
  # sequence.rb
  class Sequence &amp;lt; ActiveRecord::Base
    class Relation &amp;lt; ActiveRecord::Base
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  # require the nested class in the sequence source file
  # sequence.rb
  require_dependency 'sequence/relation'
  class Sequence &amp;lt; ActiveRecord::Base
  end

  # sequence/relation.rb
  class Sequence &amp;lt; ActiveRecord::Base
    class Relation &amp;lt; ActiveRecord::Base
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the second workaround if you want the require_dependency at
the top of the file you'll need to nest properly in the relation.rb
file. If you want to define the Sequence::Relation class in one
line then you'll need to put the require_dependency after the
Sequence definition in sequence.rb&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-27T23:28:17+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5476</number>
      <permalink>rails3-rc2-autoloading-does-not-work-correctly-when-constaint-is-nested-in-class-instead-of-module</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>autoload constant rails3rc2</tag>
      <title>Rails3 RC2 - Autoloading does not work correctly when constaint is nested in class instead of module</title>
      <updated-at type="datetime">2010-08-27T23:28:22+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">3</version>
      <user-name>Andrew White</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5476</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thank you for such a quick answer and the workarounds; I will definitely use the second one. Could you point me to some place which explains how require_dependency works or explain it by yourself in a few words ? I used to think I know how it works but after testing it few times i am not sure anymore.

Is this:

@@@
require_dependency 'sequence/relation'
@@@

equal to this:

@@@
Sequence::Relation
@@@

in terms of autoloading and reload! behavior ? I mean: If i call it like that and than reload! than will Sequence::Relation constant be removed ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thank you for such a quick answer and the workarounds; I will
definitely use the second one. Could you point me to some place
which explains how require_dependency works or explain it by
yourself in a few words ? I used to think I know how it works but
after testing it few times i am not sure anymore.&lt;/p&gt;
&lt;p&gt;Is this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;require_dependency 'sequence/relation'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;equal to this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Sequence::Relation&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;in terms of autoloading and reload! behavior ? I mean: If i call
it like that and than reload! than will Sequence::Relation constant
be removed ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-27T23:59:01+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5476</number>
      <permalink>rails3-rc2-autoloading-does-not-work-correctly-when-constaint-is-nested-in-class-instead-of-module</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>autoload constant rails3rc2</tag>
      <title>Rails3 RC2 - Autoloading does not work correctly when constaint is nested in class instead of module</title>
      <updated-at type="datetime">2010-08-27T23:59:03+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">4</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5476</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think that:
require - requires file once but reload! does not remove the constant
load - loads the file every time is called which leads to redefining constant
require_dependency - require file once and after reload! the constant is removed
require_or_load - ??

require_dependency did not work well for me on rails3.beta4 but I remember that there were some fixes about autoloading in rc1 and probably in rc2 so it should work fine now however I'm not sure if my intuition is right about what I stated here. Could you clarify it for me ? I could not find a single place that would explain using require_dependency and require_or_load well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think that:&lt;br&gt;
require - requires file once but reload! does not remove the
constant&lt;br&gt;
load - loads the file every time is called which leads to
redefining constant&lt;br&gt;
require_dependency - require file once and after reload! the
constant is removed&lt;br&gt;
require_or_load - ??&lt;/p&gt;
&lt;p&gt;require_dependency did not work well for me on rails3.beta4 but
I remember that there were some fixes about autoloading in rc1 and
probably in rc2 so it should work fine now however I'm not sure if
my intuition is right about what I stated here. Could you clarify
it for me ? I could not find a single place that would explain
using require_dependency and require_or_load well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-28T00:05:54+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5476</number>
      <permalink>rails3-rc2-autoloading-does-not-work-correctly-when-constaint-is-nested-in-class-instead-of-module</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>autoload constant rails3rc2</tag>
      <title>Rails3 RC2 - Autoloading does not work correctly when constaint is nested in class instead of module</title>
      <updated-at type="datetime">2010-08-28T00:05:55+01:00</updated-at>
      <user-id type="integer">52024</user-id>
      <version type="integer">5</version>
      <user-name>Robert Pankowecki</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5476</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Pretty much spot on - require_dependency basically makes the class you're requiring reloadable so any changes are picked up between requests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Pretty much spot on - require_dependency basically makes the
class you're requiring reloadable so any changes are picked up
between requests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-28T01:27:33+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5476</number>
      <permalink>rails3-rc2-autoloading-does-not-work-correctly-when-constaint-is-nested-in-class-instead-of-module</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>autoload constant rails3rc2</tag>
      <title>Rails3 RC2 - Autoloading does not work correctly when constaint is nested in class instead of module</title>
      <updated-at type="datetime">2010-08-28T01:27:34+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">6</version>
      <user-name>Andrew White</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5476</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Canadiens jersey Montreal Canadiens jersey
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens&lt;/a&gt; is one of &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;nhl&lt;/a&gt; hockey teams.Home court of &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens&lt;/a&gt; locates in Montreal, Quebec, Canada.

Montreal &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt; sell well in Canada,especially in Quebec.There are about 6 kinds of &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens jersey&lt;/a&gt;.The colour of Montreal &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt; have red,white blue and purple.Also &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt; own different logos,such as C,CA,CA and CH.In 2009-2010 season home jersey of Montreal &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt; have red colour and CH logo.There are a blue stripe on the middle of &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt; and on the sleeve of &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens jersey&lt;/a&gt;.The road jersey of &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt; is only different to &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;home jersey&lt;/a&gt; of Montreal &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt; in color.The colur of road jerey of  &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens jersey&lt;/a&gt; is white. &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens&lt;/a&gt; have built since a hundred years ago.So when Montreal Canadiens is at 100, &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens&lt;/a&gt; wear &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;vintage jersey&lt;/a&gt;.The &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;vintage jersey&lt;/a&gt; of Montreal Montreal &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt;y have CD logo and red colour.

I often buy Montreal &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt; from a China net.The &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens jersey&lt;/a&gt; of the net is of good quality ,low price and best service..All logo name and number are sewn on Montreal &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt; If you need Montreal &lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt; and other  &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl jersey&lt;/a&gt;,&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nfl jersey&lt;/a&gt;,&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;mlb jersey&lt;/a&gt; and &lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nba jersey&lt;/a&gt;&#65292;please contact with me.

This article comes from &lt;a href=&quot;http://www.usatoday.com/community/profile.htm?UID=d61452eecf3bf4cf&quot;&gt;http://www.usatoday.com/community/profile.htm?UID=d61452eecf3bf4cf&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Canadiens jersey Montreal Canadiens jersey&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens&lt;/a&gt; is one of &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
nhl&lt;/a&gt; hockey teams.Home court of &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens&lt;/a&gt; locates in Montreal, Quebec, Canada.&lt;/p&gt;
&lt;p&gt;Montreal &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt; sell well in Canada,especially in Quebec.There
are about 6 kinds of &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens jersey&lt;/a&gt;.The colour of Montreal &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt; have red,white blue and purple.Also &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt; own different logos,such as C,CA,CA and CH.In
2009-2010 season home jersey of Montreal &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt; have red colour and CH logo.There are a blue
stripe on the middle of &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt; and on the sleeve of &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens jersey&lt;/a&gt;.The road jersey of &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt; is only different to &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
home jersey&lt;/a&gt; of Montreal &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt; in color.The colur of road jerey of &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens jersey&lt;/a&gt; is white. &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens&lt;/a&gt; have built since a hundred years ago.So when
Montreal Canadiens is at 100, &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens&lt;/a&gt; wear &lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;vintage jersey&lt;/a&gt;.The &lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;vintage jersey&lt;/a&gt; of Montreal
Montreal &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt;y have CD logo and red colour.&lt;/p&gt;
&lt;p&gt;I often buy Montreal &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt; from a China net.The &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens jersey&lt;/a&gt; of the net is of good quality ,low
price and best service..All logo name and number are sewn on
Montreal &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt; If you need Montreal &lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt; and other &lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl jersey&lt;/a&gt;,&lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;nfl jersey&lt;/a&gt;,&lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;mlb jersey&lt;/a&gt; and &lt;a href=
&quot;http://www.nhlonlineshop.com/&quot;&gt;nba jersey&lt;/a&gt;&amp;#65292;please
contact with me.&lt;/p&gt;
&lt;p&gt;This article comes from &lt;a href=
&quot;http://www.usatoday.com/community/profile.htm?UID=d61452eecf3bf4cf&quot;&gt;
http://www.usatoday.com/community/profile.htm?UID=d61452eecf3bf4cf&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-28T04:44:49+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5476</number>
      <permalink>rails3-rc2-autoloading-does-not-work-correctly-when-constaint-is-nested-in-class-instead-of-module</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>autoload constant rails3rc2</tag>
      <title>Rails3 RC2 - Autoloading does not work correctly when constaint is nested in class instead of module</title>
      <updated-at type="datetime">2010-08-28T05:00:27+01:00</updated-at>
      <user-id type="integer">113493</user-id>
      <version type="integer">7</version>
      <user-name>axxjz</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5476</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl hockey jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;new nhl hockey jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;discount nhl hockey jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl hockey jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;new nhl hockey
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;discount nhl hockey
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-28T04:45:05+01:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5476</number>
      <permalink>rails3-rc2-autoloading-does-not-work-correctly-when-constaint-is-nested-in-class-instead-of-module</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>autoload constant rails3rc2</tag>
      <title>Rails3 RC2 - Autoloading does not work correctly when constaint is nested in class instead of module</title>
      <updated-at type="datetime">2010-08-28T05:00:35+01:00</updated-at>
      <user-id type="integer">113493</user-id>
      <version type="integer">8</version>
      <user-name>axxjz</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5476</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Replica Tag Watches sell at low prices. Buy Tag Heuer Replica Watches, Fake TAG Heuer Watches please come to our &lt;a href=&quot;http://www.replicawatchesi.com/tag-heuer-watches&quot;&gt;Replica Tag Heuer watches&lt;/a&gt;.Look no further for &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica rolex&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches uk&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/breitling-watches&quot;&gt;Replica Breitling watches&lt;/a&gt;, Swiss Replica Rolex, fake watch, and swiss replica watch.Buy Omega Watch, Omega Replicas, Alpha Omega Watches, Ladies Omega Replica Watches from our &lt;a href=&quot;http://www.replicawatchesi.com/omega-watches&quot;&gt;Replica Omega watches&lt;/a&gt; store.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Replica Tag Watches sell at low prices. Buy Tag Heuer Replica
Watches, Fake TAG Heuer Watches please come to our &lt;a href=
&quot;http://www.replicawatchesi.com/tag-heuer-watches&quot;&gt;Replica Tag
Heuer watches&lt;/a&gt;.Look no further for &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica rolex&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches uk&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/breitling-watches&quot;&gt;Replica
Breitling watches&lt;/a&gt;, Swiss Replica Rolex, fake watch, and swiss
replica watch.Buy Omega Watch, Omega Replicas, Alpha Omega Watches,
Ladies Omega Replica Watches from our &lt;a href=
&quot;http://www.replicawatchesi.com/omega-watches&quot;&gt;Replica Omega
watches&lt;/a&gt; store.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-21T13:56:54+00:00</created-at>
      <creator-id type="integer">52024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5476</number>
      <permalink>rails3-rc2-autoloading-does-not-work-correctly-when-constaint-is-nested-in-class-instead-of-module</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>autoload constant rails3rc2</tag>
      <title>Rails3 RC2 - Autoloading does not work correctly when constaint is nested in class instead of module</title>
      <updated-at type="datetime">2011-02-21T14:04:55+00:00</updated-at>
      <user-id type="integer">138022</user-id>
      <version type="integer">9</version>
      <user-name>benben</user-name>
      <creator-name>Robert Pankowecki</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5476</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
