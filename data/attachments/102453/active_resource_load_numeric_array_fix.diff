From 25530d35484e5915ba70a40e827562e2dc3f056a Mon Sep 17 00:00:00 2001
From: Grzegorz Forysinski <grzegorz.forysinski@u2i.com>
Date: Fri, 20 Mar 2009 02:26:27 +0100
Subject: [PATCH] Fixed ActiveResource load method for collection contains Numeric in Array

---
 activeresource/lib/active_resource/base.rb |    2 +-
 activeresource/test/base/load_test.rb      |   17 ++++++++++++++++-
 2 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/activeresource/lib/active_resource/base.rb b/activeresource/lib/active_resource/base.rb
index a8c0da3..e1c6045 100644
--- a/activeresource/lib/active_resource/base.rb
+++ b/activeresource/lib/active_resource/base.rb
@@ -946,7 +946,7 @@ module ActiveResource
           case value
             when Array
               resource = find_or_create_resource_for_collection(key)
-              value.map { |attrs| attrs.is_a?(String) ? attrs.dup : resource.new(attrs) }
+              value.map { |attrs| ( attrs.is_a?(String) || attrs.is_a?(Numeric))  ? (attrs.dup rescue attrs) : resource.new(attrs) }
             when Hash
               resource = find_or_create_resource_for(key)
               resource.new(value)
diff --git a/activeresource/test/base/load_test.rb b/activeresource/test/base/load_test.rb
index a475fab..e4121d3 100644
--- a/activeresource/test/base/load_test.rb
+++ b/activeresource/test/base/load_test.rb
@@ -49,7 +49,9 @@ class BaseLoadTest < Test::Unit::TestCase
       :id => 1, :state => { :id => 1, :name => 'Oregon',
         :notable_rivers => [
           { :id => 1, :name => 'Willamette' },
-          { :id => 2, :name => 'Columbia', :rafted_by => @matz }] }}}
+          { :id => 2, :name => 'Columbia', :rafted_by => @matz }],
+        :postal_codes => [97018,1234567890],
+        :places => ["Columbia City", "Unknown"]}}}
 
     @person = Person.new
   end
@@ -125,6 +127,19 @@ class BaseLoadTest < Test::Unit::TestCase
     assert_kind_of Person::Street::State::NotableRiver, rivers.first
     assert_equal @deep[:street][:state][:notable_rivers].first[:id], rivers.first.id
     assert_equal @matz[:id], rivers.last.rafted_by.id
+
+    postal_codes = state.postal_codes
+    assert_kind_of Array, postal_codes
+    assert_equal 2, postal_codes.size
+    assert_kind_of Fixnum, postal_codes.first
+    assert_equal @deep[:street][:state][:postal_codes].first, postal_codes.first
+    assert_kind_of Bignum, postal_codes.last
+    assert_equal @deep[:street][:state][:postal_codes].last, postal_codes.last
+
+    places = state.places
+    assert_kind_of Array, places
+    assert_kind_of String, places.first
+    assert_equal @deep[:street][:state][:places].first, places.first
   end
   
   def test_nested_collections_within_the_same_namespace
-- 
1.6.0.4

