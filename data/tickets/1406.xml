<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-18T19:25:31+00:00</created-at>
  <creator-id type="integer">38089</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1406</number>
  <permalink>only-get-head-post-put-and-delete-requests-are-allowed-route-was-not-recognized-try-to-find-out-why-maybe-wrong-verb-do-not-pass-all-relevant-information-to-routerecognize-as-it-does-to-recognize_optimized</permalink>
  <priority type="integer">797</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>Only get, head, post, put, and delete requests are allowed. Route was not recognized. Try to find out why (maybe wrong verb). do not pass all relevant information to  route.recognize as it does to recognize_optimized </title>
  <updated-at type="datetime">2008-12-17T16:22:49+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">3</version>
  <user-name>Repository</user-name>
  <creator-name>Evgeniy Pirogov</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1406</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>&lt;code&gt;
    class RouteSet
      def recognize_path(path, environment={})
        result = recognize_optimized(path, environment) and return result

        # Route was not recognized. Try to find out why (maybe wrong verb).
        allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, environment.merge(:method =&gt; verb)) } }

        if environment[:method] &amp;&amp; !HTTP_METHODS.include?(environment[:method])
          raise NotImplemented.new(*allows)
        elsif !allows.empty?
          raise MethodNotAllowed.new(*allows)
        else
          raise RoutingError, &quot;No route matches #{path.inspect} with #{environment.inspect}&quot;
        end
      end
&lt;/code&gt;


line
         allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, :method =&gt; verb) } }

should read

         allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, environment.merge(:method =&gt; verb)) } }

this way environment passed to routes rules

otherwise hostname_routing stop working as there is no information passed to  check hostname
http://weblog.jamisbuck.org/2006/10/4/under-the-hood-route-recognition-in-rails</original-body>
  <latest-body>&lt;code&gt;
    class RouteSet
      def recognize_path(path, environment={})
        result = recognize_optimized(path, environment) and return result

        # Route was not recognized. Try to find out why (maybe wrong verb).
        allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, environment.merge(:method =&gt; verb)) } }

        if environment[:method] &amp;&amp; !HTTP_METHODS.include?(environment[:method])
          raise NotImplemented.new(*allows)
        elsif !allows.empty?
          raise MethodNotAllowed.new(*allows)
        else
          raise RoutingError, &quot;No route matches #{path.inspect} with #{environment.inspect}&quot;
        end
      end
&lt;/code&gt;


line
         allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, :method =&gt; verb) } }

should read

         allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, environment.merge(:method =&gt; verb)) } }

this way environment passed to routes rules

otherwise hostname_routing stop working as there is no information passed to  check hostname
http://weblog.jamisbuck.org/2006/10/4/under-the-hood-route-recognition-in-rails</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;class RouteSet&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  def recognize_path(path, environment={})
    result = recognize_optimized(path, environment) and return result

    # Route was not recognized. Try to find out why (maybe wrong verb).
    allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, environment.merge(:method =&amp;gt; verb)) } }

    if environment[:method] &amp;amp;&amp;amp; !HTTP_METHODS.include?(environment[:method])
      raise NotImplemented.new(*allows)
    elsif !allows.empty?
      raise MethodNotAllowed.new(*allows)
    else
      raise RoutingError, &quot;No route matches #{path.inspect} with #{environment.inspect}&quot;
    end
  end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;line&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;     allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, :method =&amp;gt; verb) } }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;should read&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;     allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, environment.merge(:method =&amp;gt; verb)) } }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this way environment passed to routes rules&lt;/p&gt;
&lt;p&gt;otherwise hostname_routing stop working as there is no
information passed to check hostname &lt;a href=&quot;http://weblog.jamisbuck.org/2006/10/4/under-the-hood-route-recognition-in-rails&quot;&gt;
http://weblog.jamisbuck.org/2006...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;code&gt;
    class RouteSet
      def recognize_path(path, environment={})
        result = recognize_optimized(path, environment) and return result

        # Route was not recognized. Try to find out why (maybe wrong verb).
        allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, environment.merge(:method =&gt; verb)) } }

        if environment[:method] &amp;&amp; !HTTP_METHODS.include?(environment[:method])
          raise NotImplemented.new(*allows)
        elsif !allows.empty?
          raise MethodNotAllowed.new(*allows)
        else
          raise RoutingError, &quot;No route matches #{path.inspect} with #{environment.inspect}&quot;
        end
      end
&lt;/code&gt;


line
         allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, :method =&gt; verb) } }

should read

         allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, environment.merge(:method =&gt; verb)) } }

this way environment passed to routes rules

otherwise hostname_routing stop working as there is no information passed to  check hostname
http://weblog.jamisbuck.org/2006/10/4/under-the-hood-route-recognition-in-rails</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;class RouteSet
  def recognize_path(path, environment={})
    result = recognize_optimized(path, environment) and return result

    # Route was not recognized. Try to find out why (maybe wrong verb).
    allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, environment.merge(:method =&amp;gt; verb)) } }

    if environment[:method] &amp;amp;&amp;amp; !HTTP_METHODS.include?(environment[:method])
      raise NotImplemented.new(*allows)
    elsif !allows.empty?
      raise MethodNotAllowed.new(*allows)
    else
      raise RoutingError, &quot;No route matches #{path.inspect} with #{environment.inspect}&quot;
    end
  end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;line&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;     allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, :method =&amp;gt; verb) } }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;should read&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;     allows = HTTP_METHODS.select { |verb| routes.find { |r| r.recognize(path, environment.merge(:method =&amp;gt; verb)) } }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;this way environment passed to routes rules&lt;/p&gt;
&lt;p&gt;otherwise hostname_routing stop working as there is no
information passed to check hostname &lt;a href=&quot;http://weblog.jamisbuck.org/2006/10/4/under-the-hood-route-recognition-in-rails&quot;&gt;
http://weblog.jamisbuck.org/2006...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-18T19:25:31+00:00</created-at>
      <creator-id type="integer">38089</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1406</number>
      <permalink>only-get-head-post-put-and-delete-requests-are-allowed-route-was-not-recognized-try-to-find-out-why-maybe-wrong-verb-do-not-pass-all-relevant-information-to-routerecognize-as-it-does-to-recognize_optimized</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Only get, head, post, put, and delete requests are allowed. Route was not recognized. Try to find out why (maybe wrong verb). do not pass all relevant information to  route.recognize as it does to recognize_optimized </title>
      <updated-at type="datetime">2008-11-18T19:25:35+00:00</updated-at>
      <user-id type="integer">38089</user-id>
      <version type="integer">1</version>
      <user-name>Evgeniy Pirogov</user-name>
      <creator-name>Evgeniy Pirogov</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1406</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-15T21:35:34+00:00</created-at>
      <creator-id type="integer">38089</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1406</number>
      <permalink>only-get-head-post-put-and-delete-requests-are-allowed-route-was-not-recognized-try-to-find-out-why-maybe-wrong-verb-do-not-pass-all-relevant-information-to-routerecognize-as-it-does-to-recognize_optimized</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Only get, head, post, put, and delete requests are allowed. Route was not recognized. Try to find out why (maybe wrong verb). do not pass all relevant information to  route.recognize as it does to recognize_optimized </title>
      <updated-at type="datetime">2008-12-15T21:35:37+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Evgeniy Pirogov</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1406</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [f23c2796ee4a217d48bcefbc0056aaab6b1b64fa]) When checking for the wrong routing method, ensure the environment is passed to recognize optimize [#1406 state:resolved]
http://github.com/rails/rails/commit/f23c2796ee4a217d48bcefbc0056aaab6b1b64fa</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [f23c2796ee4a217d48bcefbc0056aaab6b1b64fa]) When checking
for the wrong routing method, ensure the environment is passed to
recognize optimize [&lt;a href=&quot;/projects/8994/tickets/1406&quot; title=&quot;Ticket #1406&quot;&gt;#1406&lt;/a&gt; state:resolved] &lt;a href=&quot;http://github.com/rails/rails/commit/f23c2796ee4a217d48bcefbc0056aaab6b1b64fa&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-17T16:22:48+00:00</created-at>
      <creator-id type="integer">38089</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1406</number>
      <permalink>only-get-head-post-put-and-delete-requests-are-allowed-route-was-not-recognized-try-to-find-out-why-maybe-wrong-verb-do-not-pass-all-relevant-information-to-routerecognize-as-it-does-to-recognize_optimized</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Only get, head, post, put, and delete requests are allowed. Route was not recognized. Try to find out why (maybe wrong verb). do not pass all relevant information to  route.recognize as it does to recognize_optimized </title>
      <updated-at type="datetime">2008-12-17T16:22:49+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Evgeniy Pirogov</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1406</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>97e9e7639ab50a2ce05b50d4dd3b844cf8ba2760</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-18T19:25:32+00:00</created-at>
      <filename>patch.txt</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">63387</id>
      <size type="integer">729</size>
      <uploader-id type="integer">38089</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/63387/patch.txt</url>
    </attachment>
  </attachments>
</ticket>
