<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-21T14:04:58+00:00</created-at>
  <creator-id type="integer">7400</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">5315</number>
  <permalink>update_attribute-regression</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>update_attribute regression</title>
  <updated-at type="datetime">2011-02-21T14:04:58+00:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">3</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Sven Fuchs</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5315</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>I stumbled across this while fixing &quot;vestal_versions&quot;:http://github.com/laserlemon/vestal_versions for a Rails 3 project.

This change breaks the way update_all, dirty tracking and after_save callbacks worked together at least for this particular library (vestal_version) but I'd imagine it breaks a bunch of other implementations, too.

I still wonder what the reasoning behind this change is, but also think that it's a regression and should be reverted:

http://github.com/rails/rails/commit/01629d180468049d17a8be6900e27a4f0d2b18c4#commitcomment-123199

To demonstrate the issue I've added this test to my vestal_versions fork:

http://github.com/svenfuchs/vestal_versions/blob/master/test/rails3_test.rb

The first test passes, the second one fails on AR 3 (where both were passing on AR 2.3.x). Reverting the implementation of update_attribute back to what it was in AR 2.3.x makes the second test pass, too.

*If* there's an intention of breaking the API in AR 3 and introducing something more consistent for some reason then I'd propose to either

1. make update_attribute behave exactly the same way as update_attributes does
2. have another method that does not use validations, callbacks, dirty tracking and pick a name that actually communicates this behaviour


or

1. simply use the same api as save(:validate =&gt; true) uses</original-body>
  <latest-body>I stumbled across this while fixing &quot;vestal_versions&quot;:http://github.com/laserlemon/vestal_versions for a Rails 3 project.

This change breaks the way update_all, dirty tracking and after_save callbacks worked together at least for this particular library (vestal_version) but I'd imagine it breaks a bunch of other implementations, too.

I still wonder what the reasoning behind this change is, but also think that it's a regression and should be reverted:

http://github.com/rails/rails/commit/01629d180468049d17a8be6900e27a4f0d2b18c4#commitcomment-123199

To demonstrate the issue I've added this test to my vestal_versions fork:

http://github.com/svenfuchs/vestal_versions/blob/master/test/rails3_test.rb

The first test passes, the second one fails on AR 3 (where both were passing on AR 2.3.x). Reverting the implementation of update_attribute back to what it was in AR 2.3.x makes the second test pass, too.

*If* there's an intention of breaking the API in AR 3 and introducing something more consistent for some reason then I'd propose to either

1. make update_attribute behave exactly the same way as update_attributes does
2. have another method that does not use validations, callbacks, dirty tracking and pick a name that actually communicates this behaviour


or

1. simply use the same api as save(:validate =&gt; true) uses</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I stumbled across this while fixing &lt;a href=
&quot;http://github.com/laserlemon/vestal_versions&quot;&gt;vestal_versions&lt;/a&gt;
for a Rails 3 project.&lt;/p&gt;
&lt;p&gt;This change breaks the way update_all, dirty tracking and
after_save callbacks worked together at least for this particular
library (vestal_version) but I'd imagine it breaks a bunch of other
implementations, too.&lt;/p&gt;
&lt;p&gt;I still wonder what the reasoning behind this change is, but
also think that it's a regression and should be reverted:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/01629d180468049d17a8be6900e27a4f0d2b18c4#commitcomment-123199&quot;&gt;
http://github.com/rails/rails/commit/01629d180468049d17a8be6900e27a...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To demonstrate the issue I've added this test to my
vestal_versions fork:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/svenfuchs/vestal_versions/blob/master/test/rails3_test.rb&quot;&gt;
http://github.com/svenfuchs/vestal_versions/blob/master/test/rails3...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The first test passes, the second one fails on AR 3 (where both
were passing on AR 2.3.x). Reverting the implementation of
update_attribute back to what it was in AR 2.3.x makes the second
test pass, too.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If&lt;/em&gt; there's an intention of breaking the API in AR 3 and
introducing something more consistent for some reason then I'd
propose to either&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;make update_attribute behave exactly the same way as
update_attributes does&lt;br&gt;&lt;/li&gt;
&lt;li&gt;have another method that does not use validations, callbacks,
dirty tracking and pick a name that actually communicates this
behaviour&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;simply use the same api as save(:validate =&amp;gt; true) uses&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I stumbled across this while fixing &quot;vestal_versions&quot;:http://github.com/laserlemon/vestal_versions for a Rails 3 project.

This change breaks the way update_all, dirty tracking and after_save callbacks worked together at least for this particular library (vestal_version) but I'd imagine it breaks a bunch of other implementations, too.

I still wonder what the reasoning behind this change is, but also think that it's a regression and should be reverted:

http://github.com/rails/rails/commit/01629d180468049d17a8be6900e27a4f0d2b18c4#commitcomment-123199

To demonstrate the issue I've added this test to my vestal_versions fork:

http://github.com/svenfuchs/vestal_versions/blob/master/test/rails3_test.rb

The first test passes, the second one fails on AR 3 (where both were passing on AR 2.3.x). Reverting the implementation of update_attribute back to what it was in AR 2.3.x makes the second test pass, too.

*If* there's an intention of breaking the API in AR 3 and introducing something more consistent for some reason then I'd propose to either

1. make update_attribute behave exactly the same way as update_attributes does
2. have another method that does not use validations, callbacks, dirty tracking and pick a name that actually communicates this behaviour


or

1. simply use the same api as save(:validate =&gt; true) uses</body>
      <body-html>&lt;div&gt;&lt;p&gt;I stumbled across this while fixing &lt;a href=
&quot;http://github.com/laserlemon/vestal_versions&quot;&gt;vestal_versions&lt;/a&gt;
for a Rails 3 project.&lt;/p&gt;
&lt;p&gt;This change breaks the way update_all, dirty tracking and
after_save callbacks worked together at least for this particular
library (vestal_version) but I'd imagine it breaks a bunch of other
implementations, too.&lt;/p&gt;
&lt;p&gt;I still wonder what the reasoning behind this change is, but
also think that it's a regression and should be reverted:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/commit/01629d180468049d17a8be6900e27a4f0d2b18c4#commitcomment-123199&quot;&gt;
http://github.com/rails/rails/commit/01629d180468049d17a8be6900e27a...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To demonstrate the issue I've added this test to my
vestal_versions fork:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/svenfuchs/vestal_versions/blob/master/test/rails3_test.rb&quot;&gt;
http://github.com/svenfuchs/vestal_versions/blob/master/test/rails3...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The first test passes, the second one fails on AR 3 (where both
were passing on AR 2.3.x). Reverting the implementation of
update_attribute back to what it was in AR 2.3.x makes the second
test pass, too.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If&lt;/em&gt; there's an intention of breaking the API in AR 3 and
introducing something more consistent for some reason then I'd
propose to either&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;make update_attribute behave exactly the same way as
update_attributes does&lt;br&gt;&lt;/li&gt;
&lt;li&gt;have another method that does not use validations, callbacks,
dirty tracking and pick a name that actually communicates this
behaviour&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;simply use the same api as save(:validate =&amp;gt; true) uses&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-06T11:34:37+01:00</created-at>
      <creator-id type="integer">7400</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5315</number>
      <permalink>update_attribute-regression</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>update_attribute regression</title>
      <updated-at type="datetime">2010-08-06T11:34:39+01:00</updated-at>
      <user-id type="integer">7400</user-id>
      <version type="integer">1</version>
      <user-name>Sven Fuchs</user-name>
      <creator-name>Sven Fuchs</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5315</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-29T19:21:22+01:00</created-at>
      <creator-id type="integer">7400</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5315</number>
      <permalink>update_attribute-regression</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>update_attribute regression</title>
      <updated-at type="datetime">2010-08-29T19:21:25+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Sven Fuchs</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5315</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:02:00+01:00</created-at>
      <creator-id type="integer">7400</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5315</number>
      <permalink>update_attribute-regression</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>update_attribute regression</title>
      <updated-at type="datetime">2010-10-15T23:02:00+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Sven Fuchs</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5315</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Replica Tag Watches sell at low prices. Buy Tag Heuer Replica Watches, Fake TAG Heuer Watches please come to our &lt;a href=&quot;http://www.replicawatchesi.com/tag-heuer-watches&quot;&gt;Replica Tag Heuer watches&lt;/a&gt;.Look no further for &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica rolex&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches uk&lt;/a&gt;, &lt;a href=&quot;http://www.replicawatchesi.com/breitling-watches&quot;&gt;Replica Breitling watches&lt;/a&gt;, Swiss Replica Rolex, fake watch, and swiss replica watch.Buy Omega Watch, Omega Replicas, Alpha Omega Watches, Ladies Omega Replica Watches from our &lt;a href=&quot;http://www.replicawatchesi.com/omega-watches&quot;&gt;Replica Omega watches&lt;/a&gt; store.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Replica Tag Watches sell at low prices. Buy Tag Heuer Replica
Watches, Fake TAG Heuer Watches please come to our &lt;a href=
&quot;http://www.replicawatchesi.com/tag-heuer-watches&quot;&gt;Replica Tag
Heuer watches&lt;/a&gt;.Look no further for &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica rolex&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/&quot;&gt;replica watches uk&lt;/a&gt;, &lt;a href=
&quot;http://www.replicawatchesi.com/breitling-watches&quot;&gt;Replica
Breitling watches&lt;/a&gt;, Swiss Replica Rolex, fake watch, and swiss
replica watch.Buy Omega Watch, Omega Replicas, Alpha Omega Watches,
Ladies Omega Replica Watches from our &lt;a href=
&quot;http://www.replicawatchesi.com/omega-watches&quot;&gt;Replica Omega
watches&lt;/a&gt; store.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-21T14:00:41+00:00</created-at>
      <creator-id type="integer">7400</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5315</number>
      <permalink>update_attribute-regression</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>update_attribute regression</title>
      <updated-at type="datetime">2011-02-21T14:04:58+00:00</updated-at>
      <user-id type="integer">138022</user-id>
      <version type="integer">4</version>
      <user-name>benben</user-name>
      <creator-name>Sven Fuchs</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5315</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
