<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-10-25T14:03:24+00:00</created-at>
  <creator-id type="integer">69986</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3425</number>
  <permalink>finding-records-by-id-and-passing-blank-condtions-option-throws-activerecordstatementinvalid</permalink>
  <priority type="integer">166773</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord find_one find_some patch</tag>
  <title>[PATCH] Finding records by ID and passing blank :condtions option throws ActiveRecord::StatementInvalid</title>
  <updated-at type="datetime">2010-10-06T06:37:19+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">4</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Dan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3425</url>
  <priority-name nil="true"></priority-name>
  <original-body>When trying to find a record using an ID or an array of IDs, and a blank conditions options, an incorrect SQL statement is generated (for example

  Person.find 1, :conditions =&gt; []

attempts to execute the following SQL:

  SELECT * FROM `person` WHERE (`person`.`id` = 1 AND ()) 

which throws ActiveRecord::StatementInvalid.

This is in contrast to other find behaviour, for example:

  Person.find :all, :conditions =&gt; []

which works as expected, and returns all records.


I have attached a patch that corrects this, with tests. This is my first Rails patch so any suggestions/criticisms welcome!

Thanks,
Dan</original-body>
  <latest-body>When trying to find a record using an ID or an array of IDs, and a blank conditions options, an incorrect SQL statement is generated (for example

  Person.find 1, :conditions =&gt; []

attempts to execute the following SQL:

  SELECT * FROM `person` WHERE (`person`.`id` = 1 AND ()) 

which throws ActiveRecord::StatementInvalid.

This is in contrast to other find behaviour, for example:

  Person.find :all, :conditions =&gt; []

which works as expected, and returns all records.


I have attached a patch that corrects this, with tests. This is my first Rails patch so any suggestions/criticisms welcome!

Thanks,
Dan</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When trying to find a record using an ID or an array of IDs, and
a blank conditions options, an incorrect SQL statement is generated
(for example&lt;/p&gt;
&lt;p&gt;Person.find 1, :conditions =&amp;gt; []&lt;/p&gt;
&lt;p&gt;attempts to execute the following SQL:&lt;/p&gt;
&lt;p&gt;SELECT * FROM &lt;code&gt;person&lt;/code&gt; WHERE
(&lt;code&gt;person&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; = 1 AND ())&lt;/p&gt;
&lt;p&gt;which throws ActiveRecord::StatementInvalid.&lt;/p&gt;
&lt;p&gt;This is in contrast to other find behaviour, for example:&lt;/p&gt;
&lt;p&gt;Person.find :all, :conditions =&amp;gt; []&lt;/p&gt;
&lt;p&gt;which works as expected, and returns all records.&lt;/p&gt;
&lt;p&gt;I have attached a patch that corrects this, with tests. This is
my first Rails patch so any suggestions/criticisms welcome!&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Dan&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When trying to find a record using an ID or an array of IDs, and a blank conditions options, an incorrect SQL statement is generated (for example

  Person.find 1, :conditions =&gt; []

attempts to execute the following SQL:

  SELECT * FROM `person` WHERE (`person`.`id` = 1 AND ()) 

which throws ActiveRecord::StatementInvalid.

This is in contrast to other find behaviour, for example:

  Person.find :all, :conditions =&gt; []

which works as expected, and returns all records.


I have attached a patch that corrects this, with tests. This is my first Rails patch so any suggestions/criticisms welcome!

Thanks,
Dan</body>
      <body-html>&lt;div&gt;&lt;p&gt;When trying to find a record using an ID or an array of IDs, and
a blank conditions options, an incorrect SQL statement is generated
(for example&lt;/p&gt;
&lt;p&gt;Person.find 1, :conditions =&amp;gt; []&lt;/p&gt;
&lt;p&gt;attempts to execute the following SQL:&lt;/p&gt;
&lt;p&gt;SELECT * FROM &lt;code&gt;person&lt;/code&gt; WHERE
(&lt;code&gt;person&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; = 1 AND ())&lt;/p&gt;
&lt;p&gt;which throws ActiveRecord::StatementInvalid.&lt;/p&gt;
&lt;p&gt;This is in contrast to other find behaviour, for example:&lt;/p&gt;
&lt;p&gt;Person.find :all, :conditions =&amp;gt; []&lt;/p&gt;
&lt;p&gt;which works as expected, and returns all records.&lt;/p&gt;
&lt;p&gt;I have attached a patch that corrects this, with tests. This is
my first Rails patch so any suggestions/criticisms welcome!&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Dan&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-25T14:03:24+00:00</created-at>
      <creator-id type="integer">69986</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3425</number>
      <permalink>finding-records-by-id-and-passing-blank-condtions-option-throws-activerecordstatementinvalid</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord find_one find_some patch</tag>
      <title>Finding records by ID and passing blank :condtions option throws ActiveRecord::StatementInvalid</title>
      <updated-at type="datetime">2009-10-25T14:03:29+00:00</updated-at>
      <user-id type="integer">69986</user-id>
      <version type="integer">1</version>
      <user-name>Dan</user-name>
      <creator-name>Dan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3425</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-25T14:13:22+00:00</created-at>
      <creator-id type="integer">69986</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Finding records by ID and passing blank :condtions option throws ActiveRecord::StatementInvalid
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3425</number>
      <permalink>finding-records-by-id-and-passing-blank-condtions-option-throws-activerecordstatementinvalid</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord find_one find_some patch</tag>
      <title>[PATCH] Finding records by ID and passing blank :condtions option throws ActiveRecord::StatementInvalid</title>
      <updated-at type="datetime">2009-10-25T14:13:22+00:00</updated-at>
      <user-id type="integer">69986</user-id>
      <version type="integer">2</version>
      <user-name>Dan</user-name>
      <creator-name>Dan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3425</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This may be a larger design issue - there are a couple other spots (in the associations code) where this exact pattern comes up. I could see an alternative fix that sanitizes an empty :conditions array to a SQL no-op, &quot;1=1&quot; for instance. You may want to bring this up on rails-core.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This may be a larger design issue - there are a couple other
spots (in the associations code) where this exact pattern comes up.
I could see an alternative fix that sanitizes an empty :conditions
array to a SQL no-op, &quot;1=1&quot; for instance. You may want to bring
this up on rails-core.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-26T03:35:01+00:00</created-at>
      <creator-id type="integer">69986</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3425</number>
      <permalink>finding-records-by-id-and-passing-blank-condtions-option-throws-activerecordstatementinvalid</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord find_one find_some patch</tag>
      <title>[PATCH] Finding records by ID and passing blank :condtions option throws ActiveRecord::StatementInvalid</title>
      <updated-at type="datetime">2009-10-26T03:35:03+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">3</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Dan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3425</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T06:37:17+01:00</created-at>
      <creator-id type="integer">69986</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3425</number>
      <permalink>finding-records-by-id-and-passing-blank-condtions-option-throws-activerecordstatementinvalid</permalink>
      <priority type="integer">166773</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord find_one find_some patch</tag>
      <title>[PATCH] Finding records by ID and passing blank :condtions option throws ActiveRecord::StatementInvalid</title>
      <updated-at type="datetime">2010-10-06T06:37:19+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">4</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Dan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3425</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d63c7e8c0b87973a353c007d9e306b0de9f7c662</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-25T14:03:26+00:00</created-at>
      <filename>fix_find_by_id_with_empty_conditions.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">304805</id>
      <size type="integer">3141</size>
      <uploader-id type="integer">69986</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/304805/fix_find_by_id_with_empty_conditions.diff</url>
    </attachment>
  </attachments>
</ticket>
