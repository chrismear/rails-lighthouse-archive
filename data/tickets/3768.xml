<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">16</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-09T23:41:48+01:00</created-at>
  <creator-id type="integer">36009</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71470</milestone-id>
  <number type="integer">3768</number>
  <permalink>patch-add-full_message-option-to-validations</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>activemodel errors full_message full_messages patch validations</tag>
  <title>Add :full_message option to validations</title>
  <updated-at type="datetime">2011-04-09T23:41:48+01:00</updated-at>
  <user-id type="integer">36009</user-id>
  <version type="integer">89</version>
  <user-name>Rodrigo Rosenfeld Rosas</user-name>
  <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
  <milestone-title>3.1</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>Follows a patch to add a full_message option to validations.

Currently Rails don't allow full control over validation messages without making use of I18n and even that solution is overkill when you only need to have full control over a validation message.

This patch allow validations to be written as:

  validates_presence_of :name, :full_message =&gt; 'Please, specify your full name.'</original-body>
  <latest-body>Follows a patch to add a full_message option to validations.

Currently Rails don't allow full control over validation messages without making use of I18n and even that solution is overkill when you only need to have full control over a validation message.

This patch allow validations to be written as:

  validates_presence_of :name, :full_message =&gt; 'Please, specify your full name.'</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Follows a patch to add a full_message option to validations.&lt;/p&gt;
&lt;p&gt;Currently Rails don't allow full control over validation
messages without making use of I18n and even that solution is
overkill when you only need to have full control over a validation
message.&lt;/p&gt;
&lt;p&gt;This patch allow validations to be written as:&lt;/p&gt;
&lt;p&gt;validates_presence_of :name, :full_message =&amp;gt; 'Please,
specify your full name.'&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Follows a patch to add a full_message option to validations.

Currently Rails don't allow full control over validation messages without making use of I18n and even that solution is overkill when you only need to have full control over a validation message.

This patch allow validations to be written as:

  validates_presence_of :name, :full_message =&gt; 'Please, specify your full name.'</body>
      <body-html>&lt;div&gt;&lt;p&gt;Follows a patch to add a full_message option to validations.&lt;/p&gt;
&lt;p&gt;Currently Rails don't allow full control over validation
messages without making use of I18n and even that solution is
overkill when you only need to have full control over a validation
message.&lt;/p&gt;
&lt;p&gt;This patch allow validations to be written as:&lt;/p&gt;
&lt;p&gt;validates_presence_of :name, :full_message =&amp;gt; 'Please,
specify your full name.'&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-21T20:11:59+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-01-21T20:12:04+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">1</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>There is no documentation nor test files in the patch because I need some help about how to write them.

I've asked for instructions in the topic below but got no answer yet:
http://groups.google.com/group/rubyonrails-core/msg/041076c49fcaccac

Here is an extract:

-----
I don't know how to proceed with documentation, since it is not very DRY...

Should I send a description to appreciation and then copy and paste it on every validation method?

If so, would the following description be ok?

&quot;Configuration options:
* &lt;tt&gt;message&lt;/tt&gt; - A custom error message (default is: &quot;can't be blank&quot;). &lt;tt&gt;full_message&lt;/tt&gt; can
be specified instead, in which case the humanized attribute name won't be prepended to the message.
You have to choose between either &lt;tt&gt;message&lt;/tt&gt; or &lt;tt&gt;full_message&lt;/tt&gt;, not both. If that happens,
&lt;tt&gt;full_message&lt;/tt&gt; takes precedence.
...&quot;

The only difference between validations would be the default...


Regarding test writing, I would also ask for some guidance on it.

I've noted that not all options are tested on each validation respective test.

So, I would like to know if I should add a test on with_validations_test.rb,
add a new test file or add a new test for every validation class.

Please, how should I proceed?

---

Could you help me with documentation and test instructions?</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is no documentation nor test files in the patch because I
need some help about how to write them.&lt;/p&gt;
&lt;p&gt;I've asked for instructions in the topic below but got no answer
yet:&lt;br&gt;
&lt;a href=
&quot;http://groups.google.com/group/rubyonrails-core/msg/041076c49fcaccac&quot;&gt;
http://groups.google.com/group/rubyonrails-core/msg/041076c49fcaccac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is an extract:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I don't know how to proceed with documentation, since it is not
very DRY...&lt;/p&gt;
&lt;p&gt;Should I send a description to appreciation and then copy and
paste it on every validation method?&lt;/p&gt;
&lt;p&gt;If so, would the following description be ok?&lt;/p&gt;
&lt;p&gt;&quot;Configuration options: * &lt;tt&gt;message&lt;/tt&gt; - A custom error
message (default is: &quot;can't be blank&quot;). &lt;tt&gt;full_message&lt;/tt&gt; can
be specified instead, in which case the humanized attribute name
won't be prepended to the message.&lt;br&gt;
You have to choose between either &lt;tt&gt;message&lt;/tt&gt; or
&lt;tt&gt;full_message&lt;/tt&gt;, not both. If that happens,&lt;br&gt;
&lt;tt&gt;full_message&lt;/tt&gt; takes precedence.&lt;br&gt;
...&quot;&lt;/p&gt;
&lt;p&gt;The only difference between validations would be the
default...&lt;/p&gt;
&lt;p&gt;Regarding test writing, I would also ask for some guidance on
it.&lt;/p&gt;
&lt;p&gt;I've noted that not all options are tested on each validation
respective test.&lt;/p&gt;
&lt;p&gt;So, I would like to know if I should add a test on
with_validations_test.rb,&lt;br&gt;
add a new test file or add a new test for every validation
class.&lt;/p&gt;
&lt;p&gt;Please, how should I proceed?&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Could you help me with documentation and test instructions?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-21T20:17:53+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-01-21T20:17:56+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">2</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hey mate, if you need help to get it documented and tests, please ask in the mailing list. The patch needs to be improved in a sense that ErrorMessage should behave like a string, so self.errors[:attribute] always return strings and not mixed objects.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hey mate, if you need help to get it documented and tests,
please ask in the mailing list. The patch needs to be improved in a
sense that ErrorMessage should behave like a string, so
self.errors[:attribute] always return strings and not mixed
objects.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-24T07:33:08+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-24T07:33:09+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Valim, I have first tried the list, as you can see in the link I've posted in my first comment, but I didn't get any help there.

I had already discussed the issue you are talking about on the list. The problem is that I can't extend an String in a way that makes sense. I first tried ErrorMessage to extend String, but it didn't work as I was expecting... The mixed object was the only thing I could think of for not breaking API compatibility.

For instance, if self.errors[:attribute] always return a string, how errors.full_messages would know if it has to include a prefix or not? If it returns an ErrorMessage object, it would break the API and possible a lot of plugins. The solution I proposed, although not ideal, is less invasive to current API.

The correct way to do this in my opinion is to change the API so that errors[:attribute] would return an ErrorMessage object instead of a String, but that would be a big change. I could write such patch but I doubt it would be accepted as the core team doesn't seem to be interested in such a &quot;:full_message&quot; feature...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Valim, I have first tried the list, as you can see in the link
I've posted in my first comment, but I didn't get any help
there.&lt;/p&gt;
&lt;p&gt;I had already discussed the issue you are talking about on the
list. The problem is that I can't extend an String in a way that
makes sense. I first tried ErrorMessage to extend String, but it
didn't work as I was expecting... The mixed object was the only
thing I could think of for not breaking API compatibility.&lt;/p&gt;
&lt;p&gt;For instance, if self.errors[:attribute] always return a string,
how errors.full_messages would know if it has to include a prefix
or not? If it returns an ErrorMessage object, it would break the
API and possible a lot of plugins. The solution I proposed,
although not ideal, is less invasive to current API.&lt;/p&gt;
&lt;p&gt;The correct way to do this in my opinion is to change the API so
that errors[:attribute] would return an ErrorMessage object instead
of a String, but that would be a big change. I could write such
patch but I doubt it would be accepted as the core team doesn't
seem to be interested in such a &quot;:full_message&quot; feature...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-24T10:30:20+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-24T10:30:23+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">4</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Something like this would work:

  class ErrorMessage &lt; String
    def initialize(message, full_message=false)
      @full_message = full_message
      super(message)
    end

    def full_message!
      @full_message = true
    end

    def full_message?
      @full_message
    end
  end

And then in full error messages:

  each do |message|
    if message.respond_to?(:full_message?) &amp;&amp; message.full_message?
      array &lt;&lt; message
    else
      # what we do today
    end
  end

I cannot see any drawbacks in this solution. Or am I missing something?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Something like this would work:&lt;/p&gt;
&lt;p&gt;class ErrorMessage &amp;lt; String&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def initialize(message, full_message=false)
  @full_message = full_message
  super(message)
end

def full_message!
  @full_message = true
end

def full_message?
  @full_message
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;And then in full error messages:&lt;/p&gt;
&lt;p&gt;each do |message|&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;if message.respond_to?(:full_message?) &amp;amp;&amp;amp; message.full_message?
  array &amp;lt;&amp;lt; message
else
  # what we do today
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;I cannot see any drawbacks in this solution. Or am I missing
something?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-24T10:34:26+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-24T10:34:27+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">5</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>You're right. When I tested subclassing String, I probably missed the message parameter in initialize.

But it is still a hack in the sense that unexpected things can happen (it would also happen with the current patch). For instance:

  error = ErrorMessage.new('test', true)
  error.sub(/t/,'a').full_message? # returns nil, although error.sub(/t/,'a').class == ErrorMessage

That is just an example for sub, but other methods are affected too.

But I think that is OK. At least it is better than the current patch. I'll update the patch to subclass String instead of mixed objects and will update this ticket than. Probably tonight when I have some time... Changing Rails API would be more elegant but much more intrusive too.

Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;You're right. When I tested subclassing String, I probably
missed the message parameter in initialize.&lt;/p&gt;
&lt;p&gt;But it is still a hack in the sense that unexpected things can
happen (it would also happen with the current patch). For
instance:&lt;/p&gt;
&lt;p&gt;error = ErrorMessage.new('test', true)
error.sub(/t/,'a').full_message? # returns nil, although
error.sub(/t/,'a').class == ErrorMessage&lt;/p&gt;
&lt;p&gt;That is just an example for sub, but other methods are affected
too.&lt;/p&gt;
&lt;p&gt;But I think that is OK. At least it is better than the current
patch. I'll update the patch to subclass String instead of mixed
objects and will update this ticket than. Probably tonight when I
have some time... Changing Rails API would be more elegant but much
more intrusive too.&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-24T14:33:53+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-24T14:33:56+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">6</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here is a new patch (still lacking documentation and tests) using your suggested approach.

Should I post to rails core list again asking for help on documentation and tests?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is a new patch (still lacking documentation and tests)
using your suggested approach.&lt;/p&gt;
&lt;p&gt;Should I post to rails core list again asking for help on
documentation and tests?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-25T03:34:10+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-25T03:34:15+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">7</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Sure, without tests and/or documentation is quite hard to understand some pieces of the code. For example, why are you checking inside ErrorMessage if it's receiving another ErrorMessage? What is the use case? Why not use duck typing?

Also, I noticed that you changed all validators. Would be better if we encapsulate the logic in one method in the EachValidator and DRY the +record.errors.add+ logic.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sure, without tests and/or documentation is quite hard to
understand some pieces of the code. For example, why are you
checking inside ErrorMessage if it's receiving another
ErrorMessage? What is the use case? Why not use duck typing?&lt;/p&gt;
&lt;p&gt;Also, I noticed that you changed all validators. Would be better
if we encapsulate the logic in one method in the EachValidator and
DRY the +record.errors.add+ logic.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-25T06:24:13+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-25T06:24:15+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">8</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I have dryied the code. The part I have changed in all validators were necessary because it was not modular, so I couldn't change just one place. See an example:

@@@ ruby
# record.errors.add(attr_name, :not_a_number, :value =&gt; raw_value, :default =&gt; options[:message])
  record.errors.add(attr_name, :not_a_number, :value =&gt; raw_value, :default =&gt; message)

# message is a new method from Validator:
def message
  return nil unless options[:full_message] || options[:message]
  @message ||= Errors::ErrorMessage.new(options)
end
@@@

How could I not change every validator once they extract the :message value from options?

Supporting full_messages is not the only goal of this patch. Now plugins are able to do more interesting things with the params passed to validations.

For instance:

@@@ ruby
  # show this specific message in blue if this validation fails
  validates_presence_of :field, :show_error =&gt; :blue
@@@

All options would be available through error.message[:field].first.options, and it is also possible to know if a symbol was passed to the message evaluating what os passed for :full_message or :message with error.message[:field].first.message.

Having said that, duck typing in ErrorMessage#initialize would loose the options and original message if another ErrorMessage is passed to ErrorMessage#new. The above extract of the patch wouldn't be necessary, but it is there just for performance concerns:

@@@ ruby
  predicate = ErrorMessage.new(predicate) unless predicate.is_a? ErrorMessage
  # this could be just:
  predicate = ErrorMessage.new(predicate)
@@@

Regarding the documentation, it would be like the text in my first comment. I just don't know if I should add that explanation to every single validation...

The test case would be something like (I didn't test the code below):

@@@ ruby
  test &quot;Validation should accept an :full_message option&quot; do
    fm = 'You should specify your full name.'
    # some setup code (validates_presence_of :name, :full_message =&gt; fm)
    assert_equals fm, errors.full_messages[:name]
  end
  # one more test for passing a symbol instead of a string to :full_message
@@@

Don't hesitate in asking me further doubts.

P.S: one more thing: with this change of subclassing String, now it is possible to use Array(messages) as in the original code instead of Array.wrap(messages). I just forgot to change this back on my patch, but I'll do it on next patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have dryied the code. The part I have changed in all
validators were necessary because it was not modular, so I couldn't
change just one place. See an example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;# record.errors.add(attr_name, :not_a_number, :value =&amp;gt; raw_value, :default =&amp;gt; options[:message])
  record.errors.add(attr_name, :not_a_number, :value =&amp;gt; raw_value, :default =&amp;gt; message)

# message is a new method from Validator:
def message
  return nil unless options[:full_message] || options[:message]
  @message ||= Errors::ErrorMessage.new(options)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;How could I not change every validator once they extract the
:message value from options?&lt;/p&gt;
&lt;p&gt;Supporting full_messages is not the only goal of this patch. Now
plugins are able to do more interesting things with the params
passed to validations.&lt;/p&gt;
&lt;p&gt;For instance:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  # show this specific message in blue if this validation fails
  validates_presence_of :field, :show_error =&amp;gt; :blue&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;All options would be available through
error.message[:field].first.options, and it is also possible to
know if a symbol was passed to the message evaluating what os
passed for :full_message or :message with
error.message[:field].first.message.&lt;/p&gt;
&lt;p&gt;Having said that, duck typing in ErrorMessage#initialize would
loose the options and original message if another ErrorMessage is
passed to ErrorMessage#new. The above extract of the patch wouldn't
be necessary, but it is there just for performance concerns:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  predicate = ErrorMessage.new(predicate) unless predicate.is_a? ErrorMessage
  # this could be just:
  predicate = ErrorMessage.new(predicate)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Regarding the documentation, it would be like the text in my
first comment. I just don't know if I should add that explanation
to every single validation...&lt;/p&gt;
&lt;p&gt;The test case would be something like (I didn't test the code
below):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  test &quot;Validation should accept an :full_message option&quot; do
    fm = 'You should specify your full name.'
    # some setup code (validates_presence_of :name, :full_message =&amp;gt; fm)
    assert_equals fm, errors.full_messages[:name]
  end
  # one more test for passing a symbol instead of a string to :full_message&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Don't hesitate in asking me further doubts.&lt;/p&gt;
&lt;p&gt;P.S: one more thing: with this change of subclassing String, now
it is possible to use Array(messages) as in the original code
instead of Array.wrap(messages). I just forgot to change this back
on my patch, but I'll do it on next patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-25T12:00:14+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-25T12:00:17+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">9</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Yes, you need to change all validators but if you are going to do that, it's better that they now all call the same method. However, validators should not know about ErrorMessage, they should simple call record.errors.add which will know what to do.

Also, I don't see the point in having options inside ErrorMessage. Don't try to embrace the world in this first patch (like adding extra options to validations), just ensure :full_message works. It makes hard to review and hides the real intent. After we get full_messages patch applied, we can continue from it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, you need to change all validators but if you are going to
do that, it's better that they now all call the same method.
However, validators should not know about ErrorMessage, they should
simple call record.errors.add which will know what to do.&lt;/p&gt;
&lt;p&gt;Also, I don't see the point in having options inside
ErrorMessage. Don't try to embrace the world in this first patch
(like adding extra options to validations), just ensure
:full_message works. It makes hard to review and hides the real
intent. After we get full_messages patch applied, we can continue
from it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-25T12:15:57+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-25T12:15:59+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">10</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Sorry, I didn't understand. How much dryier can this be? All validators just call the message method from Validator (from which them all inherit from). That method extract the message from the options. What would suggest instead of this? How could this be simpler than that?

And I don't get what are the advantages for not storing all validation options? Why should this go in a separate patch?

I'm not hiding the real intent, but I do intend multiple features:
 - supporting full_messages
 - store all validation options

If I have some way to know what options were passed to some validation, I could have done a plugin without monkey patches for supporting full_messages, for instance... This change will be specially useful for I18n plugins because they will be able to do lazy evaluation (actually re-evaluation) for instance if they decide to override full_messages_for, for instance.

The patch for supporting just the :full_message option would not be that different from what it is now. Why do you think this is difficult to review? I'll add all this documentation (including custom options) in the final patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, I didn't understand. How much dryier can this be? All
validators just call the message method from Validator (from which
them all inherit from). That method extract the message from the
options. What would suggest instead of this? How could this be
simpler than that?&lt;/p&gt;
&lt;p&gt;And I don't get what are the advantages for not storing all
validation options? Why should this go in a separate patch?&lt;/p&gt;
&lt;p&gt;I'm not hiding the real intent, but I do intend multiple
features:&lt;br&gt;
- supporting full_messages - store all validation options&lt;/p&gt;
&lt;p&gt;If I have some way to know what options were passed to some
validation, I could have done a plugin without monkey patches for
supporting full_messages, for instance... This change will be
specially useful for I18n plugins because they will be able to do
lazy evaluation (actually re-evaluation) for instance if they
decide to override full_messages_for, for instance.&lt;/p&gt;
&lt;p&gt;The patch for supporting just the :full_message option would not
be that different from what it is now. Why do you think this is
difficult to review? I'll add all this documentation (including
custom options) in the final patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-25T13:48:16+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-25T13:48:18+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">11</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This is exactly the issue. If you want to add multiple features, do them in separate patches and not in only one.

And is not only about being dry, validators should not know anything about ErrorMessage. ErrorMessage is an ActiveModel::Errors concern, not a ActiveModel::Validators one. Everything on the validators should be done through the errors.add interface.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is exactly the issue. If you want to add multiple features,
do them in separate patches and not in only one.&lt;/p&gt;
&lt;p&gt;And is not only about being dry, validators should not know
anything about ErrorMessage. ErrorMessage is an ActiveModel::Errors
concern, not a ActiveModel::Validators one. Everything on the
validators should be done through the errors.add interface.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-25T16:14:47+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-25T16:14:50+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">12</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>&gt; This is exactly the issue. If you want to add multiple features, do them in separate patches and not in only one.

I would agree if they were two completely and independent things, but I think they are too closely related in terms of implementation that I don't understand why would it be better to separate in two patches... The final review effort will actually be higher... Splitting it in two patches would require me a lot of effort and I would just want to understand why it does compensate... I mean, what are the disadvantages of storing the options passed to the validators alongside with the message?

I can't understand why you are insisting that validators should not know about ErrorMessage... There is no mention to ErrorMessage in any of the validators... The only difference is that instead of passing options[:message] to errors.add, they would pass the result of the method 'message' from their parent Validator. If they wish to pass options[:message] instead, it will still work as before, but will not support the full_message parameter... Could you please be more specific about your concerns?</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;This is exactly the issue. If you want to add multiple features,
do them in separate patches and not in only one.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I would agree if they were two completely and independent
things, but I think they are too closely related in terms of
implementation that I don't understand why would it be better to
separate in two patches... The final review effort will actually be
higher... Splitting it in two patches would require me a lot of
effort and I would just want to understand why it does
compensate... I mean, what are the disadvantages of storing the
options passed to the validators alongside with the message?&lt;/p&gt;
&lt;p&gt;I can't understand why you are insisting that validators should
not know about ErrorMessage... There is no mention to ErrorMessage
in any of the validators... The only difference is that instead of
passing options[:message] to errors.add, they would pass the result
of the method 'message' from their parent Validator. If they wish
to pass options[:message] instead, it will still work as before,
but will not support the full_message parameter... Could you please
be more specific about your concerns?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-25T16:55:38+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-25T16:55:43+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">13</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>You wrote previously:

    # message is a new method from Validator:
    def message
      return nil unless options[:full_message] || options[:message]
      @message ||= Errors::ErrorMessage.new(options)
    end

And I don't agree with it. Validator should use record.errors.add.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You wrote previously:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# message is a new method from Validator:
def message
  return nil unless options[:full_message] || options[:message]
  @message ||= Errors::ErrorMessage.new(options)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And I don't agree with it. Validator should use
record.errors.add.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-25T17:05:52+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-25T17:06:13+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">14</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Are you suggesting me to change errors.add API to include an additional option?

I could do that, but that would be a completely different patch. I was trying to avoid changing errors.add API.

But there is a problem with this approach. For each validator it would be necessary to change the errors.add line to something like:

@@@ ruby
# record.errors.add(attr_name, :not_a_number, :value =&gt; raw_value, :default =&gt; options[:message])
  record.errors.add(attr_name, :not_a_number, :value =&gt; raw_value, :default =&gt; options[:full_message] || options[:message], :full_message =&gt; options.has_key?(:full_message)
# or
  record.errors.add(attr_name, :not_a_number, :value =&gt; raw_value, :default =&gt; message, :full_message =&gt; options.has_key?(:full_message) # with message returning options[:full_message] || options[:message]
@@@

This seems much uglier to me. What do you think?

But I still think that the current proposed patch would be much more complete and benefic than just adding a :full_message option, don't you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Are you suggesting me to change errors.add API to include an
additional option?&lt;/p&gt;
&lt;p&gt;I could do that, but that would be a completely different patch.
I was trying to avoid changing errors.add API.&lt;/p&gt;
&lt;p&gt;But there is a problem with this approach. For each validator it
would be necessary to change the errors.add line to something
like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;# record.errors.add(attr_name, :not_a_number, :value =&amp;gt; raw_value, :default =&amp;gt; options[:message])
  record.errors.add(attr_name, :not_a_number, :value =&amp;gt; raw_value, :default =&amp;gt; options[:full_message] || options[:message], :full_message =&amp;gt; options.has_key?(:full_message)
# or
  record.errors.add(attr_name, :not_a_number, :value =&amp;gt; raw_value, :default =&amp;gt; message, :full_message =&amp;gt; options.has_key?(:full_message) # with message returning options[:full_message] || options[:message]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This seems much uglier to me. What do you think?&lt;/p&gt;
&lt;p&gt;But I still think that the current proposed patch would be much
more complete and benefic than just adding a :full_message option,
don't you think?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-25T17:43:12+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-25T17:43:14+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">15</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Why changing each validator is a problem? We are changing it anyway, we just need a method that does it for us:

    def add_error(record, attribute, message, extra_options = {})
      record.errors.add(attribute, message, { :message =&gt; message, :full_message =&gt; full_message }.merge(extra_options))
    end

Doing it with errors.add allows me to use :full_message in any other place in my code, without requiring knowledge of a class called ErrorMessage, which should be an implementation detail.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Why changing each validator is a problem? We are changing it
anyway, we just need a method that does it for us:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def add_error(record, attribute, message, extra_options = {})
  record.errors.add(attribute, message, { :message =&amp;gt; message, :full_message =&amp;gt; full_message }.merge(extra_options))
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Doing it with errors.add allows me to use :full_message in any
other place in my code, without requiring knowledge of a class
called ErrorMessage, which should be an implementation detail.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-25T20:42:37+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-25T20:43:18+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">16</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Well, I would document ErrorMessage, anyway.

Follows a patch for supporting just :full_message, as you have suggested. Is it as you were expecting?

Please note that some parts could be simplified but the I18n tests would fail because they use mocha to expect a specific Hash would be passed to generate_message... Simplifying the code would require to change a lot of I18n tests...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well, I would document ErrorMessage, anyway.&lt;/p&gt;
&lt;p&gt;Follows a patch for supporting just :full_message, as you have
suggested. Is it as you were expecting?&lt;/p&gt;
&lt;p&gt;Please note that some parts could be simplified but the I18n
tests would fail because they use mocha to expect a specific Hash
would be passed to generate_message... Simplifying the code would
require to change a lot of I18n tests...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-26T20:40:12+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-02-26T20:40:15+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">17</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Someone did exactly what we were discussing above. He used a separate patch to clean up validators and allow any option to be given to validations. He also was motivated enough to simplify the code even if it required to change a lot of I18n tests. :)

That said, if you are still interested in getting this in, you could rebase your patch. Marking this as stale until we get there.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Someone did exactly what we were discussing above. He used a
separate patch to clean up validators and allow any option to be
given to validations. He also was motivated enough to simplify the
code even if it required to change a lot of I18n tests. :)&lt;/p&gt;
&lt;p&gt;That said, if you are still interested in getting this in, you
could rebase your patch. Marking this as stale until we get
there.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T14:42:49+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-07-19T14:42:53+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">18</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I don't know why, but I didn't receive any notification by e-mail about your last update. I just happen to see how this ticket was today and I could see your message... Well, I'll take a look at how Rails base code  is at the moment so that I can rebase the patch. Thank you for reporting this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't know why, but I didn't receive any notification by
e-mail about your last update. I just happen to see how this ticket
was today and I could see your message... Well, I'll take a look at
how Rails base code is at the moment so that I can rebase the
patch. Thank you for reporting this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-14T02:48:02+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-14T02:48:06+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">19</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Follows an initial patch, without tests and documentation for a first review.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Follows an initial patch, without tests and documentation for a
first review.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-24T04:16:13+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-24T04:16:18+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">20</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I don't think generate_message should care about full_message, you can simply wrap the result of generate_message in errors.add. Also, you should rather implement full_message in the ErrorMessage and check if it is defined instead of checking if you have ErrorMessage (i.e. use duck typing).</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't think generate_message should care about full_message,
you can simply wrap the result of generate_message in errors.add.
Also, you should rather implement full_message in the ErrorMessage
and check if it is defined instead of checking if you have
ErrorMessage (i.e. use duck typing).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-24T04:22:05+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-24T04:22:08+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">21</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Second attempt. Remember options is frozen in #add.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Second attempt. Remember options is frozen in #add.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-24T11:39:23+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-24T11:39:25+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">22</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Great! We are almost there! Just a few notes:

1) I should be able to specify both :message and :full_message. So there is no need to make full_message overwrite message in the hash. Doing this change, you need to make sure :full_message won't be passed as option to the underlying I18n.t in generate_message.

2) At first I was thinking that we could move generate_message to the ErrorMessage object but I believe it will be better if we don't. That said, there is no need to pass @base and @attributes to the ErrorMessage object. This should be enough:

    ErrorMessage.new(message, options[:full_message])

    class ErrorMessage &lt; String
      attr_reader :full_message

      def initialize(message, full_message)
        super(message)
        @full_message = full_message
      end
    end

3) And one final note, I know your patch is a initial version, but be sure to use full names like &quot;full_messages&quot; as variable names instead of &quot;fm&quot;. :)

Thanks and good work!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Great! We are almost there! Just a few notes:&lt;/p&gt;
&lt;p&gt;1) I should be able to specify both :message and :full_message.
So there is no need to make full_message overwrite message in the
hash. Doing this change, you need to make sure :full_message won't
be passed as option to the underlying I18n.t in
generate_message.&lt;/p&gt;
&lt;p&gt;2) At first I was thinking that we could move generate_message
to the ErrorMessage object but I believe it will be better if we
don't. That said, there is no need to pass @base and @attributes to
the ErrorMessage object. This should be enough:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ErrorMessage.new(message, options[:full_message])

class ErrorMessage &amp;lt; String
  attr_reader :full_message

  def initialize(message, full_message)
    super(message)
    @full_message = full_message
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;3) And one final note, I know your patch is a initial version,
but be sure to use full names like &quot;full_messages&quot; as variable
names instead of &quot;fm&quot;. :)&lt;/p&gt;
&lt;p&gt;Thanks and good work!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T14:38:16+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T14:38:19+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">23</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Please, take a look if this patch meets your expectative.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please, take a look if this patch meets your expectative.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T15:50:55+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T15:50:59+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">24</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Or maybe this is a better approach.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Or maybe this is a better approach.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T16:07:02+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T16:07:04+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">25</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">7</attachments-count>
      <body>Why is the logic used just when message is a symbol? Why we cannot pass &quot;full_message&quot; when message is a proc?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Why is the logic used just when message is a symbol? Why we
cannot pass &quot;full_message&quot; when message is a proc?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T20:17:37+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T20:17:39+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">26</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">7</attachments-count>
      <body>The patch aims including :full_message to validators. Could you tell me of any validator that passes a non-symbol value to the message parameter?

Maybe a custom validator? I can make that change, but I changed the logic inside the symbols because I was thinking only in the shipped validators...

I'll make the change and post a new patch here.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The patch aims including :full_message to validators. Could you
tell me of any validator that passes a non-symbol value to the
message parameter?&lt;/p&gt;
&lt;p&gt;Maybe a custom validator? I can make that change, but I changed
the logic inside the symbols because I was thinking only in the
shipped validators...&lt;/p&gt;
&lt;p&gt;I'll make the change and post a new patch here.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T20:25:12+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T20:25:14+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">27</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">7</attachments-count>
      <body>Here it is.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here it is.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T20:29:13+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T20:29:17+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">28</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>Plugins that have date/time validators use extensively the proc support for message because they are based on Time.now or Date.current. Maybe even full_message should support a proc as option, but better to add it as functionality just when someone needs it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Plugins that have date/time validators use extensively the proc
support for message because they are based on Time.now or
Date.current. Maybe even full_message should support a proc as
option, but better to add it as functionality just when someone
needs it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T20:29:20+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T20:29:23+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">29</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>Plugins that have date/time validators use extensively the proc support for message because they are based on Time.now or Date.current. Maybe even full_message should support a proc as option, but better to add it as functionality just when someone needs it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Plugins that have date/time validators use extensively the proc
support for message because they are based on Time.now or
Date.current. Maybe even full_message should support a proc as
option, but better to add it as functionality just when someone
needs it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T20:29:23+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T20:29:24+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">30</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>I can do that, that is trivial, just a minute...</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can do that, that is trivial, just a minute...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T20:34:52+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T20:34:54+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">31</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>Here it is</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here it is&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T20:37:22+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T20:37:27+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">32</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">9</attachments-count>
      <body>The :message should not be overwritten by the :full_message, they are different concerns. I should be able to specify both:

  validates_presence_of :name, :message =&gt; &quot;cannot be blank&quot;, :full_message =&gt; &quot;Name cannot be left blank&quot;</body>
      <body-html>&lt;div&gt;&lt;p&gt;The :message should not be overwritten by the :full_message,
they are different concerns. I should be able to specify both:&lt;/p&gt;
&lt;p&gt;validates_presence_of :name, :message =&amp;gt; &quot;cannot be blank&quot;,
:full_message =&amp;gt; &quot;Name cannot be left blank&quot;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T20:40:32+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T20:40:36+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">33</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">9</attachments-count>
      <body>I misunderstood what you have told me before.

Please, take a look if that is what you were talking about. (I also fixed some bugs...)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I misunderstood what you have told me before.&lt;/p&gt;
&lt;p&gt;Please, take a look if that is what you were talking about. (I
also fixed some bugs...)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T21:19:45+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T21:19:47+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">34</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">10</attachments-count>
      <body>How are they separate concerns? When would both be used?</body>
      <body-html>&lt;div&gt;&lt;p&gt;How are they separate concerns? When would both be used?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T21:21:37+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T21:21:39+01:00</updated-at>
      <user-id type="integer">370</user-id>
      <version type="integer">35</version>
      <user-name>Ruy Asan</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">10</attachments-count>
      <body>Or maybe you prefer the '&amp;&amp;=' syntax, as in:

full_message &amp;&amp;= generate_message(attribute, message, options.merge(:message =&gt; full_message))

and

full_message &amp;&amp;= message

and

message &amp;&amp;= ErrorMessage.new(message, full_message) if full_message</body>
      <body-html>&lt;div&gt;&lt;p&gt;Or maybe you prefer the '&amp;amp;&amp;amp;=' syntax, as in:&lt;/p&gt;
&lt;p&gt;full_message &amp;amp;&amp;amp;= generate_message(attribute, message,
options.merge(:message =&amp;gt; full_message))&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;full_message &amp;amp;&amp;amp;= message&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;message &amp;amp;&amp;amp;= ErrorMessage.new(message, full_message) if
full_message&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T21:23:23+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T21:23:27+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">36</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">10</attachments-count>
      <body>Hi, Ruy (almost Ruby, huh?)

Valim and I have been changing some messages by e-mail. He thinks that maybe some one would like to have messages appearing twice in a form as in:

Errors:

You should specify your full name


Name field here (error message here, for instance: should not be blank)

That is what I've understood.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi, Ruy (almost Ruby, huh?)&lt;/p&gt;
&lt;p&gt;Valim and I have been changing some messages by e-mail. He
thinks that maybe some one would like to have messages appearing
twice in a form as in:&lt;/p&gt;
&lt;p&gt;Errors:&lt;/p&gt;
&lt;p&gt;You should specify your full name&lt;/p&gt;
&lt;p&gt;Name field here (error message here, for instance: should not be
blank)&lt;/p&gt;
&lt;p&gt;That is what I've understood.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T21:26:43+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T21:26:44+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">37</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">10</attachments-count>
      <body>I'm not following one thing. Why full_message needs to pass through generate_message()? generate_message() does a lookup under errors.messages which is unrelated to full_messages. They are completely different concerns, they should not be mixed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not following one thing. Why full_message needs to pass
through generate_message()? generate_message() does a lookup under
errors.messages which is unrelated to full_messages. They are
completely different concerns, they should not be mixed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T21:45:16+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T21:45:22+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">38</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">10</attachments-count>
      <body>The line following line is unnecessary for what you have in mind:

full_message = generate_message(attribute, message, options.merge(:message =&gt; full_message)) if full_message

The idea is the possibility to write something like

validates_uniqueness_of :name, :full_message =&gt; :name_not_unique

en.yml:
en:
  name_not_unique: You should specify an unique name.

Is this useful? I know that it is possible to override the format in I18n yaml files, but maybe this approach would be useful and consistent with how :message currently works...

Here is another patch without the line if you prefer.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The line following line is unnecessary for what you have in
mind:&lt;/p&gt;
&lt;p&gt;full_message = generate_message(attribute, message,
options.merge(:message =&amp;gt; full_message)) if full_message&lt;/p&gt;
&lt;p&gt;The idea is the possibility to write something like&lt;/p&gt;
&lt;p&gt;validates_uniqueness_of :name, :full_message =&amp;gt;
:name_not_unique&lt;/p&gt;
&lt;p&gt;en.yml:&lt;br&gt;
en:&lt;br&gt;
name_not_unique: You should specify an unique name.&lt;/p&gt;
&lt;p&gt;Is this useful? I know that it is possible to override the
format in I18n yaml files, but maybe this approach would be useful
and consistent with how :message currently works...&lt;/p&gt;
&lt;p&gt;Here is another patch without the line if you prefer.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T22:19:09+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T22:19:12+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">39</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">11</attachments-count>
      <body>Actually, options.except(:full_message, *CALLBACKS_OPTIONS) reads better, as in the new attachment.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Actually, options.except(:full_message, *CALLBACKS_OPTIONS)
reads better, as in the new attachment.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T22:24:26+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T22:24:30+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">40</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">12</attachments-count>
      <body>If we are allowing such behavior, the lookup cannot be in the same place as generate_message (which is error.messages). It needs its own namespace like (error.full_messages) (probably a configuration option you can give to generate_message).</body>
      <body-html>&lt;div&gt;&lt;p&gt;If we are allowing such behavior, the lookup cannot be in the
same place as generate_message (which is error.messages). It needs
its own namespace like (error.full_messages) (probably a
configuration option you can give to generate_message).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T22:24:30+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T22:24:32+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">41</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">12</attachments-count>
      <body>A new patch, just updating ErrorMessage outdated documentation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;A new patch, just updating ErrorMessage outdated
documentation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T22:26:23+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T22:26:25+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">42</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">13</attachments-count>
      <body>Please, take a look if this is what you're talking about.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please, take a look if this is what you're talking about.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T22:36:32+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T22:36:35+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">43</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">14</attachments-count>
      <body>Sorry, ignore the last message, I'll write another one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, ignore the last message, I'll write another one.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T22:37:14+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T22:37:16+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">44</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">14</attachments-count>
      <body>This patch seems more correct to me...</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch seems more correct to me...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T22:52:34+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T22:52:36+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">45</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">15</attachments-count>
      <body>I was thinking a bit more about this... Shouldn't it be possible to specify a validation like:

validates_uniqueness_of :email, :message =&gt; lambda{some_method_here}

With the current API this would not be possible... With the patch, this would be possible for :full_message, but not for :message, as it is already the behavior...

Should we support this style for normal validations?

Anyway, is there any use case where passing a Proc makes any sense? I mean, no args are currently being passed to proc.call. The only reason I could see at the moment is to postpone message generation...

Please, could someone clarify this situation with any real use case?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was thinking a bit more about this... Shouldn't it be possible
to specify a validation like:&lt;/p&gt;
&lt;p&gt;validates_uniqueness_of :email, :message =&amp;gt;
lambda{some_method_here}&lt;/p&gt;
&lt;p&gt;With the current API this would not be possible... With the
patch, this would be possible for :full_message, but not for
:message, as it is already the behavior...&lt;/p&gt;
&lt;p&gt;Should we support this style for normal validations?&lt;/p&gt;
&lt;p&gt;Anyway, is there any use case where passing a Proc makes any
sense? I mean, no args are currently being passed to proc.call. The
only reason I could see at the moment is to postpone message
generation...&lt;/p&gt;
&lt;p&gt;Please, could someone clarify this situation with any real use
case?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T23:03:09+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T23:03:12+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">46</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">15</attachments-count>
      <body>&quot;Shouldn't it be possible to specify a validation like:&quot;

If we really needed it, someone would already have provided a patch with it as a feature. :)

Your patch is almost there, the only change I would do is to change generate_message to receive a key as argument:

generate_message(attributes, message, options, type)

This way you can skip checking for :full_message inside generate_message and do everything based on the type given.

Another thing is that, once you write tests, you will see your patch is broken because generate_message is acting destructively in the hash. So the first time it is called, it will remove :full_message and :message from the options hash, so the second call won't work!</body>
      <body-html>&lt;div&gt;&lt;p&gt;&quot;Shouldn't it be possible to specify a validation like:&quot;&lt;/p&gt;
&lt;p&gt;If we really needed it, someone would already have provided a
patch with it as a feature. :)&lt;/p&gt;
&lt;p&gt;Your patch is almost there, the only change I would do is to
change generate_message to receive a key as argument:&lt;/p&gt;
&lt;p&gt;generate_message(attributes, message, options, type)&lt;/p&gt;
&lt;p&gt;This way you can skip checking for :full_message inside
generate_message and do everything based on the type given.&lt;/p&gt;
&lt;p&gt;Another thing is that, once you write tests, you will see your
patch is broken because generate_message is acting destructively in
the hash. So the first time it is called, it will remove
:full_message and :message from the options hash, so the second
call won't work!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-28T23:17:39+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-28T23:17:41+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">47</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">15</attachments-count>
      <body>I think it would be unexpected and inconsistent behavior if :message accepted lambdas but :full_message did not.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think it would be unexpected and inconsistent behavior if
:message accepted lambdas but :full_message did not.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-29T00:22:37+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-29T00:22:39+01:00</updated-at>
      <user-id type="integer">370</user-id>
      <version type="integer">48</version>
      <user-name>Ruy Asan</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">15</attachments-count>
      <body>The feature I was talking about is the ability to call an instance method from the lambda.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The feature I was talking about is the ability to call an
instance method from the lambda.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-29T00:24:20+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-29T00:24:22+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">49</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">15</attachments-count>
      <body>I've played a bit with proc params. Please, take a look and let me know what do you think...</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've played a bit with proc params. Please, take a look and let
me know what do you think...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-29T02:47:55+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-08-29T02:47:57+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">50</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Looks good. Just note there is no need to check the arity of the proc. Simple call it with all args (and it is backward compatible).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks good. Just note there is no need to check the arity of the
proc. Simple call it with all args (and it is backward
compatible).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T07:52:55+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T07:52:59+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">51</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>I don't think it is a good idea. Follow some examples:

Ruby 1.8.7:

lambda{}.arity == -1; lambda{}.call(*[1,2,3]) # OK, no error


Ruby 1.9.2:

lambda{}.arity == 0; lambda{}.call(*[1,2,3]) # ArgumentError: wrong number of arguments (3 for 0)

Both 1.8 and 1.9:
lambda{|a|}.arity == 1; lambda{}.call(*[1,2,3]) # ArgumentError: wrong number of arguments (3 for 1)

I don't understand why you are saying it is backward compatible... Could you please, clarify?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't think it is a good idea. Follow some examples:&lt;/p&gt;
&lt;p&gt;Ruby 1.8.7:&lt;/p&gt;
&lt;p&gt;lambda{}.arity == -1; lambda{}.call(*[1,2,3]) # OK, no error&lt;/p&gt;
&lt;p&gt;Ruby 1.9.2:&lt;/p&gt;
&lt;p&gt;lambda{}.arity == 0; lambda{}.call(*[1,2,3]) # ArgumentError:
wrong number of arguments (3 for 0)&lt;/p&gt;
&lt;p&gt;Both 1.8 and 1.9:&lt;br&gt;
lambda{|a|}.arity == 1; lambda{}.call(*[1,2,3]) # ArgumentError:
wrong number of arguments (3 for 1)&lt;/p&gt;
&lt;p&gt;I don't understand why you are saying it is backward
compatible... Could you please, clarify?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T12:31:10+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T12:31:12+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">52</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>The last example should be read:
lambda{|a|}.arity == 1; lambda{|a|}.call(*[1,2,3]) # ArgumentError: wrong number of arguments (3 for 1)</body>
      <body-html>&lt;div&gt;&lt;p&gt;The last example should be read:&lt;br&gt;
lambda{|a|}.arity == 1; lambda{|a|}.call(*[1,2,3]) # ArgumentError:
wrong number of arguments (3 for 1)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T12:32:08+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T12:32:12+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">53</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Hrm, sorry! I forgot that lambda in Ruby 1.8.7 does not enforce the arity properly. Not sure I like the current patch though, can we simply not pass any parameter to the proc, as we do today?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hrm, sorry! I forgot that lambda in Ruby 1.8.7 does not enforce
the arity properly. Not sure I like the current patch though, can
we simply not pass any parameter to the proc, as we do today?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T12:41:15+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T12:41:17+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">54</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>This is what already happens on full_messages-v10.patch, but it is only useful for things like Time.now...

The last patch allows the use of the record attribute values on error messages, making procs more useful, while still being backward compatible.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is what already happens on full_messages-v10.patch, but it
is only useful for things like Time.now...&lt;/p&gt;
&lt;p&gt;The last patch allows the use of the record attribute values on
error messages, making procs more useful, while still being
backward compatible.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T12:50:08+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T12:50:11+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">55</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Yes, but it also adds a lot of complexity to the code. Remember that you can add validations from the instance level, where there is no need for a proc and you have all the customization and access to attributes, options and values you need.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, but it also adds a lot of complexity to the code. Remember
that you can add validations from the instance level, where there
is no need for a proc and you have all the customization and access
to attributes, options and values you need.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T12:52:45+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T12:52:50+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">56</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Ok, that was why I asked about you opinion on the last patch. Then, what do you think about v10 patch?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, that was why I asked about you opinion on the last patch.
Then, what do you think about v10 patch?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T12:59:52+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T12:59:56+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">57</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>My comments for patch v10 are above. I will copy them for convenience:

Your patch is almost there, the only change I would do is to change generate_message to receive a key as argument:

    generate_message(attributes, message, options, type)

This way you can skip checking for :full_message inside generate_message and do everything based on the type given.

Another thing is that, once you write tests, you will see your patch is broken because generate_message is acting destructively in the hash. So the first time it is called, it will remove :full_message and :message from the options hash, so the second call won't work (because it won't have any)! But this should be fixed by generating the message as I just mentioned above.</body>
      <body-html>&lt;div&gt;&lt;p&gt;My comments for patch v10 are above. I will copy them for
convenience:&lt;/p&gt;
&lt;p&gt;Your patch is almost there, the only change I would do is to
change generate_message to receive a key as argument:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;generate_message(attributes, message, options, type)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This way you can skip checking for :full_message inside
generate_message and do everything based on the type given.&lt;/p&gt;
&lt;p&gt;Another thing is that, once you write tests, you will see your
patch is broken because generate_message is acting destructively in
the hash. So the first time it is called, it will remove
:full_message and :message from the options hash, so the second
call won't work (because it won't have any)! But this should be
fixed by generating the message as I just mentioned above.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T13:02:17+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T13:02:21+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">58</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Ok, sorry. Please, verify if I understood the approach you are suggested in generate_message for v11.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, sorry. Please, verify if I understood the approach you are
suggested in generate_message for v11.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T13:09:44+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T13:09:49+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">59</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>I worked a bit in the generate_message in this diff as an example:

http://gist.github.com/562212

However, note that some places I cannot use #{key} in the lookup meaning that we are going to look into the same place for both full_messages and messages, which is going to cause a bug.

One option is to, instead of looking up in &quot;errors.full_messages&quot; for full_messages, we could look at &quot;full_errors.messages&quot;. It solves the issue, but seems weird. What do you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I worked a bit in the generate_message in this diff as an
example:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://gist.github.com/562212&quot;&gt;http://gist.github.com/562212&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, note that some places I cannot use #{key} in the lookup
meaning that we are going to look into the same place for both
full_messages and messages, which is going to cause a bug.&lt;/p&gt;
&lt;p&gt;One option is to, instead of looking up in
&quot;errors.full_messages&quot; for full_messages, we could look at
&quot;full_errors.messages&quot;. It solves the issue, but seems weird. What
do you think?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T13:25:52+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T13:25:54+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">60</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>I commented on the gist, but thinking more about the problem, maybe we are overcomplicating the problem...

If we don't support the feature of passing both :message and :full_message (giving preference to :full_message in this case), the patch would be much smaller and less confuse...

Do you really think passing both :message and :full_message is that useful? Or maybe could we support this feature in a later patch?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I commented on the gist, but thinking more about the problem,
maybe we are overcomplicating the problem...&lt;/p&gt;
&lt;p&gt;If we don't support the feature of passing both :message and
:full_message (giving preference to :full_message in this case),
the patch would be much smaller and less confuse...&lt;/p&gt;
&lt;p&gt;Do you really think passing both :message and :full_message is
that useful? Or maybe could we support this feature in a later
patch?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T14:04:52+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T14:04:57+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">61</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>I'm a 100% sure that if we don't allow both to be passed, it is going  
to cause confusion and subsequent reports in LH. I'm saying that  
because this is what happened in 2.3 branch. :)

On Sep 2, 2010, at 15:05, &quot;Lighthouse&quot; &amp;lt;no-reply@lighthouseapp.com&amp;gt;  
wrote:</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm a 100% sure that if we don't allow both to be passed, it is
going&lt;br&gt;
to cause confusion and subsequent reports in LH. I'm saying
that&lt;br&gt;
because this is what happened in 2.3 branch. :)&lt;/p&gt;
&lt;p&gt;On Sep 2, 2010, at 15:05, &quot;Lighthouse&quot; &amp;lt;&lt;a href=
&quot;mailto:no-reply@lighthouseapp.com&quot;&gt;no-reply@lighthouseapp.com&lt;/a&gt;&amp;gt;&lt;br&gt;
wrote:&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T17:11:23+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T17:11:25+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">62</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>For sure both options should be allowed to pass. Think of this scenario. You have 2 kind of forms: first is with inline errors, second one is usual. For inline ones, you'd want to show just &quot;this can't be blank, dude&quot;, but for regular one - &quot;Dude, please, fill in username&quot;. Also, you'd want to show full errors passed through flash (say, you want to show errors on different page) Currently it's not possible to do this nicely. At all. And this is kind of situation I have with my project, so it is very important feature.</body>
      <body-html>&lt;div&gt;&lt;p&gt;For sure both options should be allowed to pass. Think of this
scenario. You have 2 kind of forms: first is with inline errors,
second one is usual. For inline ones, you'd want to show just &quot;this
can't be blank, dude&quot;, but for regular one - &quot;Dude, please, fill in
username&quot;. Also, you'd want to show full errors passed through
flash (say, you want to show errors on different page) Currently
it's not possible to do this nicely. At all. And this is kind of
situation I have with my project, so it is very important
feature.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T18:07:50+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T18:07:52+01:00</updated-at>
      <user-id type="integer">28864</user-id>
      <version type="integer">63</version>
      <user-name>windock</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Ok, I'll give it more thoughts tonight when I get home. I need to think a bit about how to achieve that without using full_errors or think in a better name for it...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, I'll give it more thoughts tonight when I get home. I need
to think a bit about how to achieve that without using full_errors
or think in a better name for it...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-02T18:37:21+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-02T18:37:23+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">64</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Valim, I was thinking more about I18n keys, I think I would prefer something like:

# don't change signature, avoiding rewriting other tests with no advantages with this approach...
def generate_message(attribute, type = :invalid, options = {})
  type = options.delete(key) if options[key].is_a?(Symbol)
  type = &quot;_full_#{type}&quot; if options[:full_message]
  ...
end

Then, for the default backend, we could write something like:

en:
  activerecord:
    errors:
      models:
        user:
          attributes:
            name:
              blank: should be specified
              _full_blank: You must specify your name

I think it is much easier to maintain than:

en:
  activerecord:
    errors:
      models:
        user:
          attributes:
            name:
              blank: should be specified
    full_errors:
      models:
        user:
          attributes:
            name:
              blank: You must specify your name

What do you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Valim, I was thinking more about I18n keys, I think I would
prefer something like:&lt;/p&gt;
&lt;h1&gt;don't change signature, avoiding rewriting other tests with no
advantages with this approach...&lt;/h1&gt;
&lt;p&gt;def generate_message(attribute, type = :invalid, options =
{})&lt;br&gt;
type = options.delete(key) if options[key].is_a?(Symbol) type =
&quot;&lt;em&gt;full&lt;/em&gt;#{type}&quot; if options[:full_message] ... end&lt;/p&gt;
&lt;p&gt;Then, for the default backend, we could write something
like:&lt;/p&gt;
&lt;p&gt;en:&lt;br&gt;
activerecord:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;errors:
  models:
    user:
      attributes:
        name:
          blank: should be specified
          _full_blank: You must specify your name&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think it is much easier to maintain than:&lt;/p&gt;
&lt;p&gt;en:&lt;br&gt;
activerecord:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;errors:
  models:
    user:
      attributes:
        name:
          blank: should be specified
full_errors:
  models:
    user:
      attributes:
        name:
          blank: You must specify your name&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;What do you think?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-03T00:47:49+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-03T00:47:51+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">65</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Sorry for not using Preview... The h1 text was meant to be a Ruby comment... :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry for not using Preview... The h1 text was meant to be a
Ruby comment... :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-03T00:49:08+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-03T00:49:11+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">66</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Trying again (Please remove last comments):

&lt;pre&gt;
# don't change signature, avoiding rewriting other tests with no advantages with this approach...
def generate_message(attribute, type = :invalid, options = {})
  type = options.delete(key) if options[key].is_a?(Symbol)
  type = &quot;_full_#{type}&quot; if options[:full_message]
  ...
end

Then, for the default backend, we could write something like:

en:
  activerecord:
    errors:
      models:
        user:
          attributes:
            name:
              blank: should be specified
              _full_blank: You must specify your name

I think it is much easier to maintain than:

en:
  activerecord:
    errors:
      models:
        user:
          attributes:
            name:
              blank: should be specified
    full_errors:
      models:
        user:
          attributes:
            name:
              blank: You must specify your name
&lt;/pre&gt;

What do you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Trying again (Please remove last comments):&lt;/p&gt;
&lt;pre&gt;
# don't change signature, avoiding rewriting other tests with no advantages with this approach...
def generate_message(attribute, type = :invalid, options = {})
  type = options.delete(key) if options[key].is_a?(Symbol)
  type = &quot;_full_#{type}&quot; if options[:full_message]
  ...
end

Then, for the default backend, we could write something like:

en:
  activerecord:
    errors:
      models:
        user:
          attributes:
            name:
              blank: should be specified
              _full_blank: You must specify your name

I think it is much easier to maintain than:

en:
  activerecord:
    errors:
      models:
        user:
          attributes:
            name:
              blank: should be specified
    full_errors:
      models:
        user:
          attributes:
            name:
              blank: You must specify your name
&lt;/pre&gt;
&lt;p&gt;What do you think?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-03T00:50:45+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-03T00:50:47+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">67</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Actually (I was re-reading my post), I meant 'options.delete(:message)' instead of 'options.delete(key)'...</body>
      <body-html>&lt;div&gt;&lt;p&gt;Actually (I was re-reading my post), I meant
'options.delete(:message)' instead of 'options.delete(key)'...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-04T00:44:34+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-04T00:44:37+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">68</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>I've just found one more issue with generate_message...

While moving an application to Rails3, I replaced the passive_record plugin with ActiveModel. I'm facing a problems with current generate_message approach.

The class is under a module namespace and klass.model_name.underscore yields 'module_name/class_name'. I think 'module_name.class_name' would suit better for generate_message (something like &quot;klass.model_name.underscore.gsub('/', '.')&quot;)...

What do you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've just found one more issue with generate_message...&lt;/p&gt;
&lt;p&gt;While moving an application to Rails3, I replaced the
passive_record plugin with ActiveModel. I'm facing a problems with
current generate_message approach.&lt;/p&gt;
&lt;p&gt;The class is under a module namespace and
klass.model_name.underscore yields 'module_name/class_name'. I
think 'module_name.class_name' would suit better for
generate_message (something like
&quot;klass.model_name.underscore.gsub('/', '.')&quot;)...&lt;/p&gt;
&lt;p&gt;What do you think?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-04T14:19:03+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-04T14:19:06+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">69</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Yes, you are right, this is a bug. Could you please provide a patch with test in another ticket? :D</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, you are right, this is a bug. Could you please provide a
patch with test in another ticket? :D&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-05T09:01:47+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-05T09:01:50+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">70</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>I've created ticket #5572... And, please, tell me what you think about my suggestion for the current ticket...</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've created ticket &lt;a href=&quot;/projects/8994/tickets/5572&quot; title=
&quot;Ticket #5572&quot;&gt;#5572&lt;/a&gt;... And, please, tell me what you think
about my suggestion for the current ticket...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-07T14:44:00+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;validations full message&quot;</tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-09-07T14:44:02+01:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">71</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-09T22:12:56+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;validations full message\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] Add :full_message option to validations</title>
      <updated-at type="datetime">2010-10-09T22:12:59+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">73</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Using the &quot;patch&quot; tag instead of prefixing the ticket title with &quot;[PATCH]&quot; to make sure patched tickets end up in the [open patches bin](https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/bins/5805). :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Using the &quot;patch&quot; tag instead of prefixing the ticket title with
&quot;[PATCH]&quot; to make sure patched tickets end up in the &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/bins/5805&quot;&gt;
open patches bin&lt;/a&gt;. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-10T13:02:11+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:title: &quot;[PATCH] Add :full_message option to validations&quot;
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2010-10-10T13:02:13+01:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">74</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Thanks for your article. Have you noticed how many online &lt;a href=&quot;http://www.jersey-usa.com/Tennessee-Titans-Jersey.html&quot;&gt;Tennessee Titans Jerseys&lt;/a&gt; articles are boring rehash that leave you feeling like you want the 5 minutes it took to read each one back? Me too. Well, there's a reason why writing a good &lt;a href=&quot;http://www.jersey-usa.com/Minnesota-Twins.html&quot;&gt;Minnesota Twins Jerseys&lt;/a&gt; article has become a lost art: chasing the almighty dollar. Website owners are looking for ways to get free traffic, and writing lots of &lt;a href=&quot;http://www.jersey-usa.com/Pittsburgh-Penguins.html&quot;&gt;Pittsburgh Penguins Jerseys&lt;/a&gt; articles with links in them has become one of the preferred methods. Look around and you'll find plenty of 'gurus' out there claiming they can teach you to write 20 &lt;a href=&quot;http://www.jersey-usa.com/Calgary-Flames.html&quot;&gt;Calgary Flames Jerseys&lt;/a&gt; articles a day so you can &quot;dominate your competition.&quot; This is all well and good. I'd never begrudge someone their drive to earn a living online. But in the process of clamoring to write tons of &lt;a href=&quot;http://www.jersey-usa.com/Miami-Heat.html&quot;&gt;Miami Heat Jerseys&lt;/a&gt; articles and saturate the Web, a simple truth has gotten buried... Writing a good article is still the best way to build traffic, gain a solid reputation, and take your online success to new &lt;a href=&quot;http://www.jersey-usa.com/Houston-Texans-Jersey.html&quot;&gt;Houston Texans&lt;/a&gt; heights. Having been an article writer and marketer for over a decade, I can tell you with certainty that the best articles I've ever written have also been the best performers in &lt;a href=&quot;http://www.jersey-usa.com/Tampa-Bay-Lightning/Reebok-NHL-Jersey-Tampa-Bay-Lightning-No.91-Steven-Stamkos-White.html&quot;&gt;Tampa Bay Lightning&lt;/a&gt; terms of gaining my site backlinks and traffic. a good article will continue bringing in visitors for months - even years - after you wrote it. Writing an article that you've just thrown together often &lt;a href=&quot;http://www.jersey-usa.com/Colorado-Rockies.html&quot;&gt;Colorado Rockies Jerseys&lt;/a&gt; ends up in oblivion very quickly. So, what are the keys to writing a good article? I think there are 3 big ones. I'm not talking about the &lt;a href=&quot;http://www.jersey-usa.com/MLB-Baseball-Jerseys.html&quot;&gt;MLB Baseball Jerseys&lt;/a&gt; mechanics here, but rather creating and maintaining the correct mindset. HYD</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for your article. Have you noticed how many online
&lt;a href=
&quot;http://www.jersey-usa.com/Tennessee-Titans-Jersey.html&quot;&gt;Tennessee
Titans Jerseys&lt;/a&gt; articles are boring rehash that leave you
feeling like you want the 5 minutes it took to read each one back?
Me too. Well, there's a reason why writing a good &lt;a href=
&quot;http://www.jersey-usa.com/Minnesota-Twins.html&quot;&gt;Minnesota Twins
Jerseys&lt;/a&gt; article has become a lost art: chasing the almighty
dollar. Website owners are looking for ways to get free traffic,
and writing lots of &lt;a href=
&quot;http://www.jersey-usa.com/Pittsburgh-Penguins.html&quot;&gt;Pittsburgh
Penguins Jerseys&lt;/a&gt; articles with links in them has become one of
the preferred methods. Look around and you'll find plenty of
'gurus' out there claiming they can teach you to write 20 &lt;a href=
&quot;http://www.jersey-usa.com/Calgary-Flames.html&quot;&gt;Calgary Flames
Jerseys&lt;/a&gt; articles a day so you can &quot;dominate your competition.&quot;
This is all well and good. I'd never begrudge someone their drive
to earn a living online. But in the process of clamoring to write
tons of &lt;a href=&quot;http://www.jersey-usa.com/Miami-Heat.html&quot;&gt;Miami
Heat Jerseys&lt;/a&gt; articles and saturate the Web, a simple truth has
gotten buried... Writing a good article is still the best way to
build traffic, gain a solid reputation, and take your online
success to new &lt;a href=
&quot;http://www.jersey-usa.com/Houston-Texans-Jersey.html&quot;&gt;Houston
Texans&lt;/a&gt; heights. Having been an article writer and marketer for
over a decade, I can tell you with certainty that the best articles
I've ever written have also been the best performers in &lt;a href=
&quot;http://www.jersey-usa.com/Tampa-Bay-Lightning/Reebok-NHL-Jersey-Tampa-Bay-Lightning-No.91-Steven-Stamkos-White.html&quot;&gt;
Tampa Bay Lightning&lt;/a&gt; terms of gaining my site backlinks and
traffic. a good article will continue bringing in visitors for
months - even years - after you wrote it. Writing an article that
you've just thrown together often &lt;a href=
&quot;http://www.jersey-usa.com/Colorado-Rockies.html&quot;&gt;Colorado Rockies
Jerseys&lt;/a&gt; ends up in oblivion very quickly. So, what are the keys
to writing a good article? I think there are 3 big ones. I'm not
talking about the &lt;a href=
&quot;http://www.jersey-usa.com/MLB-Baseball-Jerseys.html&quot;&gt;MLB Baseball
Jerseys&lt;/a&gt; mechanics here, but rather creating and maintaining the
correct mindset. HYD&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-20T10:45:35+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: patch validations
:assigned_user: 19965
:title: Add :full_message option to validations
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Add magic encoding comment to generated files</title>
      <updated-at type="datetime">2010-10-25T03:18:31+01:00</updated-at>
      <user-id type="integer">120842</user-id>
      <version type="integer">75</version>
      <user-name>nfljerseys</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>This &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra footwear&lt;/a&gt;&lt;/strong&gt; is called a modern vintage and has been since their   introduction in 2003 where they began in Europe. Every &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; has some type of   ornament, adornment or hardware and is comprised of aged leather that is bought   from around the world. These &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra uk&lt;/a&gt;&lt;/strong&gt; are culturally engaging and allow for the woman   wearing them to be enveloped in luxury.With new cuts and styles and hand stitched shoes, these &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;, heels or flats will make every foot look like it stepped out of vintage Hollywood. This   &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland shoes&lt;/a&gt;&lt;/strong&gt; have been worn and coveted by many of the most famous females in   recent history. One such &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach outlet&lt;/a&gt;&lt;/strong&gt;, Jennifer Aniston, wears them in public and at   home.This company makes many different unique styles of &lt;strong&gt;&lt;strong&gt;&lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;bags outlet&lt;/strong&gt;&lt;/a&gt; from ankle booties   to sandals, pumps, &lt;strong&gt;&lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets online&lt;/strong&gt;&lt;/a&gt;, platforms and wedges. One &lt;strong&gt;&lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bag&lt;/strong&gt;&lt;/a&gt; in particular is ideal   for the gothic style sense; it is patent leather and laces up the front of the   shaft. There are also zippers on each side, and this shoe offers a flat heel of   a half inch.Another great &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets sale&lt;/strong&gt;&lt;/a&gt; is featured in People's Style Watch and is called a   platform bootie. This &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;&lt;strong&gt;ture religion jeans&lt;/strong&gt;&lt;/a&gt; has a raised panel in front of the ankle as well as   a heel that measures 4.5 inches. The front offers a leather bandage appearance   and is considered high fashion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra
footwear&lt;/a&gt;&lt;/strong&gt; is called a modern vintage and has been since
their introduction in 2003 where they began in Europe. Every
&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt;
has some type of ornament, adornment or hardware and is comprised
of aged leather that is bought from around the world. These
&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra uk&lt;/a&gt;&lt;/strong&gt; are
culturally engaging and allow for the woman wearing them to be
enveloped in luxury.With new cuts and styles and hand stitched
shoes, these &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;,
heels or flats will make every foot look like it stepped out of
vintage Hollywood. This &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland shoes&lt;/a&gt;&lt;/strong&gt;
have been worn and coveted by many of the most famous females in
recent history. One such &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach outlet&lt;/a&gt;&lt;/strong&gt;, Jennifer
Aniston, wears them in public and at home.This company makes many
different unique styles of &lt;strong&gt;&lt;strong&gt;&lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;bags
outlet&lt;/strong&gt;&lt;/a&gt; from ankle booties to sandals, pumps,
&lt;strong&gt;&lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets
online&lt;/strong&gt;&lt;/a&gt;, platforms and wedges. One &lt;strong&gt;&lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton
bag&lt;/strong&gt;&lt;/a&gt; in particular is ideal for the gothic style sense;
it is patent leather and laces up the front of the shaft. There are
also zippers on each side, and this shoe offers a flat heel of a
half inch.Another great &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets
sale&lt;/strong&gt;&lt;/a&gt; is featured in People's Style Watch and is called
a platform bootie. This &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;&lt;strong&gt;ture religion
jeans&lt;/strong&gt;&lt;/a&gt; has a raised panel in front of the ankle as well
as a heel that measures 4.5 inches. The front offers a leather
bandage appearance and is considered high
fashion.&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-06T07:54:13+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2010-11-08T23:11:51+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">76</version>
      <user-name>jim123456</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-28T02:58:56+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2010-12-28T03:36:14+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">77</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>+1, would love to see this change.  I like Rodrigo's suggestion of providing the full message right next to the regular message.  This keeps similar string next to each other which is better semantically.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1, would love to see this change. I like Rodrigo's suggestion
of providing the full message right next to the regular message.
This keeps similar string next to each other which is better
semantically.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-14T19:02:25+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-01-14T19:03:05+00:00</updated-at>
      <user-id type="integer">17728</user-id>
      <version type="integer">78</version>
      <user-name>spovich</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>+1, this is a very useful feature, especially for some languages (like portuguese =D).</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1, this is a very useful feature, especially for some languages
(like portuguese =D).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-14T19:46:46+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-01-14T19:47:40+00:00</updated-at>
      <user-id type="integer">82231</user-id>
      <version type="integer">79</version>
      <user-name>Lailson Bandeira</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Please update state of this feature.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please update state of this feature.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-24T17:50:06+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: patch validations
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-01-24T17:50:36+00:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">80</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>student of the well-known big &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram&lt;/a&gt;  words, there are two situations: &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers shoes&lt;/a&gt;  particularly good in all aspects and all  &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;five fingers shoes&lt;/a&gt; aspects of good students are particularly bad bad student. However,  &lt;a href=&quot;http://www.vibram.us.com/button-men-shoes&quot;&gt;Cheap Vibram Men Shoes&lt;/a&gt; for the pig, it really seems a bit of trouble. He is not a particularly good good student nor is it particularly  &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;vibram shoes&lt;/a&gt; bad bad student. However, more often, he can show himself, for &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers&lt;/a&gt;  example, what show what activities and the like, especially &lt;a href=&quot;http://www.vibram.us.com/kso-leather-facing-men-shoes&quot;&gt;Cheap Vibram Fivefingers Women Shoes&lt;/a&gt;  basketball</body>
      <body-html>&lt;div&gt;&lt;p&gt;student of the well-known big &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;Vibram&lt;/a&gt; words, there are two
situations: &lt;a href=&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers
shoes&lt;/a&gt; particularly good in all aspects and all &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;five fingers shoes&lt;/a&gt; aspects of good
students are particularly bad bad student. However, &lt;a href=
&quot;http://www.vibram.us.com/button-men-shoes&quot;&gt;Cheap Vibram Men
Shoes&lt;/a&gt; for the pig, it really seems a bit of trouble. He is not
a particularly good good student nor is it particularly &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;vibram shoes&lt;/a&gt; bad bad student.
However, more often, he can show himself, for &lt;a href=
&quot;http://www.vibram.us.com/&quot;&gt;Vibram Five Fingers&lt;/a&gt; example, what
show what activities and the like, especially &lt;a href=
&quot;http://www.vibram.us.com/kso-leather-facing-men-shoes&quot;&gt;Cheap
Vibram Fivefingers Women Shoes&lt;/a&gt; basketball&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-28T08:18:21+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-01-28T08:44:30+00:00</updated-at>
      <user-id type="integer">134634</user-id>
      <version type="integer">81</version>
      <user-name>songqiudong</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Nearly the same functionality can be found here: https://github.com/svenfuchs/i18n-message/

1) Store symbols instead of string messages;
2) Generate messages for full/short/etc. using symbols by requirement (possible chached);
3) OrderedHash should be structured in hierarchy, not in flat error array, eg:

    {
      :name =&gt; [:blank],
      :email =&gt; [:blank, :invalid]
    }

So it will be possible to translate it on the remote activerecord server (for example). Right now error messages almost useless in ActiveResource, because it's impossible to detect which errors on which attributes happend.

If everything is clear and just implementation need, I can try to do it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Nearly the same functionality can be found here: &lt;a href=
&quot;https://github.com/svenfuchs/i18n-message/&quot;&gt;https://github.com/svenfuchs/i18n-message/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1) Store symbols instead of string messages;&lt;br&gt;
2) Generate messages for full/short/etc. using symbols by
requirement (possible chached);&lt;br&gt;
3) OrderedHash should be structured in hierarchy, not in flat error
array, eg:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;{
  :name =&amp;gt; [:blank],
  :email =&amp;gt; [:blank, :invalid]
}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So it will be possible to translate it on the remote
activerecord server (for example). Right now error messages almost
useless in ActiveResource, because it's impossible to detect which
errors on which attributes happend.&lt;/p&gt;
&lt;p&gt;If everything is clear and just implementation need, I can try
to do it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-04T15:25:47+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: full_message full_messages patch validations
</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel errors full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-02-04T15:26:21+00:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">82</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Hi Dmitry, 

I think the i18n-message plugin approach is much more complex than what I've proposed. I prefer

validates_presence_of :some_attribute, :full_message =&gt; 'My custom full message'

over

validates_presence_of :foo, :message =&gt; { :full =&gt; 'My custom full message.' }, :format =&gt; { :full =&gt; '{{message}}' }</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Dmitry,&lt;/p&gt;
&lt;p&gt;I think the i18n-message plugin approach is much more complex
than what I've proposed. I prefer&lt;/p&gt;
&lt;p&gt;validates_presence_of :some_attribute, :full_message =&amp;gt; 'My
custom full message'&lt;/p&gt;
&lt;p&gt;over&lt;/p&gt;
&lt;p&gt;validates_presence_of :foo, :message =&amp;gt; { :full =&amp;gt; 'My
custom full message.' }, :format =&amp;gt; { :full =&amp;gt; '{{message}}'
}&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-04T16:18:56+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel errors full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-02-04T16:19:28+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">83</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Rodrigo,

How to translate full_message in this case? I mean how it will be connected to the different locales?

In approach that I've listed above, it's possible to have a message with different formats. Also it fixes another bugs (for example in ActiveResource::Error class for i18n strings). And code will be more flexible, plus without hacks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rodrigo,&lt;/p&gt;
&lt;p&gt;How to translate full_message in this case? I mean how it will
be connected to the different locales?&lt;/p&gt;
&lt;p&gt;In approach that I've listed above, it's possible to have a
message with different formats. Also it fixes another bugs (for
example in ActiveResource::Error class for i18n strings). And code
will be more flexible, plus without hacks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-04T17:05:25+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel errors full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-02-04T17:05:56+00:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">84</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Some off-topic (but anyway still related) about the ActiveResource. Look to this code to understand why it's bad:

    def from_array(messages, save_cache = false)
      clear unless save_cache
      humanized_attributes = Hash[@base.attributes.keys.map { |attr_name| [attr_name.humanize, attr_name] }]
      messages.each do |message|
        attr_message = humanized_attributes.keys.detect do |attr_name|
          if message[0, attr_name.size + 1] == &quot;#{attr_name} &quot;
            add humanized_attributes[attr_name], message[(attr_name.size + 1)..-1]
          end
        end

        self[:base] &lt;&lt; message if attr_message.nil?
      end
    end

I think, if ActiveModel::Errors have an OrderedHash with the sturcture that I've written in the three posts before, then it will be possible to detect correct error columns in the ActiveResource.

Sorry for a small off-topic, but I think it should be discussed here also.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Some off-topic (but anyway still related) about the
ActiveResource. Look to this code to understand why it's bad:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def from_array(messages, save_cache = false)
  clear unless save_cache
  humanized_attributes = Hash[@base.attributes.keys.map { |attr_name| [attr_name.humanize, attr_name] }]
  messages.each do |message|
    attr_message = humanized_attributes.keys.detect do |attr_name|
      if message[0, attr_name.size + 1] == &quot;#{attr_name} &quot;
        add humanized_attributes[attr_name], message[(attr_name.size + 1)..-1]
      end
    end

    self[:base] &amp;lt;&amp;lt; message if attr_message.nil?
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I think, if ActiveModel::Errors have an OrderedHash with the
sturcture that I've written in the three posts before, then it will
be possible to detect correct error columns in the
ActiveResource.&lt;/p&gt;
&lt;p&gt;Sorry for a small off-topic, but I think it should be discussed
here also.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-04T17:09:49+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel errors full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-02-04T17:10:22+00:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">85</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Hi Dmitry, I was not talking about implementation but about the API.

I don't know about the i18n-message implementation. And it really doesn't matter to me. I'm just saying that I would be happy to use i18n-message if its API allowed me to use 'validates... :full_message =&gt; &quot;My custom message&quot;'. It's much simpler for the common case.

About i18n, I think the following API would also be interesting:

    validates_presence_of :some_attribute, :full_message =&gt; :&quot;some.i18n.symbol.here&quot;

This could be translated by the gem to

    validates_presence_of :some_attribute, :message =&gt; {:full =&gt; :&quot;some.i18n.symbol.here&quot;}, format =&gt; {:full =&gt; '{{message}}'}</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Dmitry, I was not talking about implementation but about the
API.&lt;/p&gt;
&lt;p&gt;I don't know about the i18n-message implementation. And it
really doesn't matter to me. I'm just saying that I would be happy
to use i18n-message if its API allowed me to use 'validates...
:full_message =&amp;gt; &quot;My custom message&quot;'. It's much simpler for the
common case.&lt;/p&gt;
&lt;p&gt;About i18n, I think the following API would also be
interesting:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;validates_presence_of :some_attribute, :full_message =&amp;gt; :&quot;some.i18n.symbol.here&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This could be translated by the gem to&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;validates_presence_of :some_attribute, :message =&amp;gt; {:full =&amp;gt; :&quot;some.i18n.symbol.here&quot;}, format =&amp;gt; {:full =&amp;gt; '{{message}}'}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-04T18:18:42+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel errors full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-02-04T18:19:16+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">86</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Rodrigo,

I'm talking also about API :) (sorry_for_my_bad_english unless something_could_be_understood).

Actually good idea to use :message =&gt; {:full =&gt; 'message'}, but for the i18n I'd prefer splitted version, that you quoted above:

    en:
      activerecord:
        errors:
          models:
            user:
              attributes:
                name:
                  blank: should be specified
        full_errors:
          models:
            user:
              attributes:
                name:
                  blank: You must specify your name

So it will be generated automatically based on those locale strings. So no:

    :message =&gt; {:full =&gt; :&quot;some.i18n.symbol.here&quot;}</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rodrigo,&lt;/p&gt;
&lt;p&gt;I'm talking also about API :) (sorry_for_my_bad_english unless
something_could_be_understood).&lt;/p&gt;
&lt;p&gt;Actually good idea to use :message =&amp;gt; {:full =&amp;gt;
'message'}, but for the i18n I'd prefer splitted version, that you
quoted above:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;en:
  activerecord:
    errors:
      models:
        user:
          attributes:
            name:
              blank: should be specified
    full_errors:
      models:
        user:
          attributes:
            name:
              blank: You must specify your name&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So it will be generated automatically based on those locale
strings. So no:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;:message =&amp;gt; {:full =&amp;gt; :&quot;some.i18n.symbol.here&quot;}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-04T20:21:38+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel errors full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-02-04T20:22:07+00:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">87</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>But only one thing, if you are generating short (standard) message, then it will be taken from short, if you are generating it using full_messages, then it will be taken from full, if not found then formatted using `errors.format.full`, like `%{attribute} %{message}` (or whatever).</body>
      <body-html>&lt;div&gt;&lt;p&gt;But only one thing, if you are generating short (standard)
message, then it will be taken from short, if you are generating it
using full_messages, then it will be taken from full, if not found
then formatted using &lt;code&gt;errors.format.full&lt;/code&gt;, like
&lt;code&gt;%{attribute} %{message}&lt;/code&gt; (or whatever).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-04T20:25:18+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel errors full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-02-04T20:25:52+00:00</updated-at>
      <user-id type="integer">16383</user-id>
      <version type="integer">88</version>
      <user-name>Dmitry Polushkin</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Dmitry, I didn't understand your message very well.

I didn't propose using &quot;:message =&gt; {:full =&gt; 'message'}&quot;. I think the syntax is too big for the common case of specifying a full message for some validation. I just said that I think the proposed API could be internally translated to the former style in the mentioned plugin.

The proposed API should be useful both for i18n applications and one-language only applications without adding much overhead for the simple task of defining a custom full message for some validation (like creating a i18n yaml even if your application doesn't require i18n).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Dmitry, I didn't understand your message very well.&lt;/p&gt;
&lt;p&gt;I didn't propose using &quot;:message =&amp;gt; {:full =&amp;gt; 'message'}&quot;.
I think the syntax is too big for the common case of specifying a
full message for some validation. I just said that I think the
proposed API could be internally translated to the former style in
the mentioned plugin.&lt;/p&gt;
&lt;p&gt;The proposed API should be useful both for i18n applications and
one-language only applications without adding much overhead for the
simple task of defining a custom full message for some validation
(like creating a i18n yaml even if your application doesn't require
i18n).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-05T01:47:10+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel errors full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-02-05T01:47:41+00:00</updated-at>
      <user-id type="integer">36009</user-id>
      <version type="integer">89</version>
      <user-name>Rodrigo Rosenfeld Rosas</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-16T07:13:05+00:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel errors full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-02-16T07:20:46+00:00</updated-at>
      <user-id type="integer">137258</user-id>
      <version type="integer">90</version>
      <user-name>fgfhnmn</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">16</attachments-count>
      <body>Our online shop can meet all the demands.It is the best source of buying Cheap 
&lt;a href=&quot;http://www.jerseysforsales.com&quot;&gt;NHL jerseys&lt;/a&gt; where you will come across unbelievable surprise. We have a big variety of jersey on sale in different styles and colors.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Our online shop can meet all the demands.It is the best source
of buying Cheap&lt;br&gt;
&lt;a href=&quot;http://www.jerseysforsales.com&quot;&gt;NHL jerseys&lt;/a&gt; where you
will come across unbelievable surprise. We have a big variety of
jersey on sale in different styles and colors.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-09T03:22:12+01:00</created-at>
      <creator-id type="integer">36009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71470</milestone-id>
      <number type="integer">3768</number>
      <permalink>patch-add-full_message-option-to-validations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel errors full_message full_messages patch validations</tag>
      <title>Add :full_message option to validations</title>
      <updated-at type="datetime">2011-04-09T23:41:48+01:00</updated-at>
      <user-id type="integer">144925</user-id>
      <version type="integer">91</version>
      <user-name>jerseysforsales</user-name>
      <creator-name>Rodrigo Rosenfeld Rosas</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3768</url>
      <milestone-title>3.1</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>db1f4557748fbf681671c4367f7a908ed42b59d4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-21T20:11:59+00:00</created-at>
      <filename>0001-include-support-for-full_message-option-to-validatio.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">384160</id>
      <size type="integer">11262</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/384160/0001-include-support-for-full_message-option-to-validatio.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>33cce89a9d88ce2b3131f3fd1ee465047ff52214</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-02-25T03:34:10+00:00</created-at>
      <filename>0001-include-support-for-full_message-option-to-validatio.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">423733</id>
      <size type="integer">11547</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/423733/0001-include-support-for-full_message-option-to-validatio.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>5be84bc3516e85ac1142b5823defecb9c591c8e2</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-02-26T20:40:12+00:00</created-at>
      <filename>add_full_message_support.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">426786</id>
      <size type="integer">11818</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/426786/add_full_message_support.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>ae7194630b5c0092ec4aa5e7a056113d3cf1039d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-24T04:16:13+01:00</created-at>
      <filename>add-full_messsage.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">641711</id>
      <size type="integer">3005</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/641711/add-full_messsage.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>5b0d517f7ed3c6d98a857e6e4968f4e4c1b08df1</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-24T11:39:24+01:00</created-at>
      <filename>add-full_messsage.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">641982</id>
      <size type="integer">2168</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/641982/add-full_messsage.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>d3db88fdeed0c55b482a95f1c2c0765e051abc28</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-28T15:50:56+01:00</created-at>
      <filename>third_attempt.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649525</id>
      <size type="integer">1913</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649525/third_attempt.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>6eb3f29b2a2de95adde8b083d5df0f699a6a53c1</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-28T16:07:02+01:00</created-at>
      <filename>third_attempt-v2.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649531</id>
      <size type="integer">1929</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649531/third_attempt-v2.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>56d903cc33ad8600e227a8b728669fbcc42cded5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-28T20:29:13+01:00</created-at>
      <filename>full_message-v3.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649581</id>
      <size type="integer">2180</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649581/full_message-v3.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>22969f77ec15c5a669fc61df801fc140726c49bd</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-28T20:37:22+01:00</created-at>
      <filename>full_message-v4.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649587</id>
      <size type="integer">2245</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649587/full_message-v4.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>61ebafd79de8de9560cd7ad0a9dcc122595b40d5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-28T21:19:45+01:00</created-at>
      <filename>full_message-v5.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649601</id>
      <size type="integer">2250</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649601/full_message-v5.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>52af5a78ad1d39186a5cc0a52dcfbae4b012ef4e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-28T22:19:09+01:00</created-at>
      <filename>full_message-v6.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649627</id>
      <size type="integer">2080</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649627/full_message-v6.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>9fc2ebbb522fc80a70c98f064d12ec3b5b627e03</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-28T22:24:26+01:00</created-at>
      <filename>full_message-v7.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649628</id>
      <size type="integer">2075</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649628/full_message-v7.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>2137667ac852238e73734503fc160a464cd559ef</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-28T22:26:23+01:00</created-at>
      <filename>full_message-v8.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649629</id>
      <size type="integer">1977</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649629/full_message-v8.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>0e9ac5ada10e02e287c468a5d02d5341715030a9</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-28T22:36:32+01:00</created-at>
      <filename>full_message-v9.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649632</id>
      <size type="integer">2579</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649632/full_message-v9.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>4ab01ce6f38909bfcc4c5e54b7cb91276e58b307</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-28T22:52:34+01:00</created-at>
      <filename>full_message-v10.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649638</id>
      <size type="integer">3208</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649638/full_message-v10.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>a1af7c82ca1d09427a049363fef873a06abe83b8</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-08-29T02:47:55+01:00</created-at>
      <filename>full_message-v11.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">649712</id>
      <size type="integer">6433</size>
      <uploader-id type="integer">36009</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/649712/full_message-v11.patch</url>
    </attachment>
  </attachments>
</ticket>
