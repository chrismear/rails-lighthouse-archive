<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-12T18:43:26+00:00</created-at>
  <creator-id type="integer">18793</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5962</number>
  <permalink>modeloriginal_table_name-restores-the-original-table-name-without-any-clue</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord</tag>
  <title>Model.original_table_name restores the original table name without any clue</title>
  <updated-at type="datetime">2011-02-12T19:18:47+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">3</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>J&#233;r&#233;my Lecour</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5962</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hi,

I was looking for a way to know what should be the table name for a model (inherited from AR::Base) and I've found the method `original_table_name`.

I've looked for it in all the rails 3.0.1 codebase and have not found it anywhere.
It is listed in the `methods` array for my models.

I was using it when I noticed some SQL errors on some models where I've changed the table name with `Model.set_table_name`.

With the console, I've found the the `original_table_name` is not only a &quot;getter&quot; method, but it affects the model on which it is called and restores the original table name before it returns it.

That is strange, because such a method could have been named `restore_original_table_name` or at least `original_table_name!`.

Thanks for any information about this strange discovery ;-)</original-body>
  <latest-body>Hi,

I was looking for a way to know what should be the table name for a model (inherited from AR::Base) and I've found the method `original_table_name`.

I've looked for it in all the rails 3.0.1 codebase and have not found it anywhere.
It is listed in the `methods` array for my models.

I was using it when I noticed some SQL errors on some models where I've changed the table name with `Model.set_table_name`.

With the console, I've found the the `original_table_name` is not only a &quot;getter&quot; method, but it affects the model on which it is called and restores the original table name before it returns it.

That is strange, because such a method could have been named `restore_original_table_name` or at least `original_table_name!`.

Thanks for any information about this strange discovery ;-)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I was looking for a way to know what should be the table name
for a model (inherited from AR::Base) and I've found the method
&lt;code&gt;original_table_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I've looked for it in all the rails 3.0.1 codebase and have not
found it anywhere.&lt;br&gt;
It is listed in the &lt;code&gt;methods&lt;/code&gt; array for my models.&lt;/p&gt;
&lt;p&gt;I was using it when I noticed some SQL errors on some models
where I've changed the table name with
&lt;code&gt;Model.set_table_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With the console, I've found the the
&lt;code&gt;original_table_name&lt;/code&gt; is not only a &quot;getter&quot; method, but
it affects the model on which it is called and restores the
original table name before it returns it.&lt;/p&gt;
&lt;p&gt;That is strange, because such a method could have been named
&lt;code&gt;restore_original_table_name&lt;/code&gt; or at least
&lt;code&gt;original_table_name!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Thanks for any information about this strange discovery ;-)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi,

I was looking for a way to know what should be the table name for a model (inherited from AR::Base) and I've found the method `original_table_name`.

I've looked for it in all the rails 3.0.1 codebase and have not found it anywhere.
It is listed in the `methods` array for my models.

I was using it when I noticed some SQL errors on some models where I've changed the table name with `Model.set_table_name`.

With the console, I've found the the `original_table_name` is not only a &quot;getter&quot; method, but it affects the model on which it is called and restores the original table name before it returns it.

That is strange, because such a method could have been named `restore_original_table_name` or at least `original_table_name!`.

Thanks for any information about this strange discovery ;-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I was looking for a way to know what should be the table name
for a model (inherited from AR::Base) and I've found the method
&lt;code&gt;original_table_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I've looked for it in all the rails 3.0.1 codebase and have not
found it anywhere.&lt;br&gt;
It is listed in the &lt;code&gt;methods&lt;/code&gt; array for my models.&lt;/p&gt;
&lt;p&gt;I was using it when I noticed some SQL errors on some models
where I've changed the table name with
&lt;code&gt;Model.set_table_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With the console, I've found the the
&lt;code&gt;original_table_name&lt;/code&gt; is not only a &quot;getter&quot; method, but
it affects the model on which it is called and restores the
original table name before it returns it.&lt;/p&gt;
&lt;p&gt;That is strange, because such a method could have been named
&lt;code&gt;restore_original_table_name&lt;/code&gt; or at least
&lt;code&gt;original_table_name!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Thanks for any information about this strange discovery ;-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-12T18:43:26+00:00</created-at>
      <creator-id type="integer">18793</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5962</number>
      <permalink>modeloriginal_table_name-restores-the-original-table-name-without-any-clue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Model.original_table_name restores the original table name without any clue</title>
      <updated-at type="datetime">2010-11-12T18:43:30+00:00</updated-at>
      <user-id type="integer">18793</user-id>
      <version type="integer">1</version>
      <user-name>J&#233;r&#233;my Lecour</user-name>
      <creator-name>J&#233;r&#233;my Lecour</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5962</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T19:18:04+00:00</created-at>
      <creator-id type="integer">18793</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5962</number>
      <permalink>modeloriginal_table_name-restores-the-original-table-name-without-any-clue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord</tag>
      <title>Model.original_table_name restores the original table name without any clue</title>
      <updated-at type="datetime">2011-02-12T19:18:47+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>J&#233;r&#233;my Lecour</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5962</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-12T19:18:04+00:00</created-at>
      <creator-id type="integer">18793</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5962</number>
      <permalink>modeloriginal_table_name-restores-the-original-table-name-without-any-clue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord</tag>
      <title>Model.original_table_name restores the original table name without any clue</title>
      <updated-at type="datetime">2011-02-12T19:18:22+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>J&#233;r&#233;my Lecour</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5962</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
