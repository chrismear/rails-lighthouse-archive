From 0f0ef4d91dc59d585c45df477ee87f6ffa34c9c6 Mon Sep 17 00:00:00 2001
From: Mike Breen <hardbap@gmail.com>
Date: Fri, 27 Mar 2009 19:21:15 -0400
Subject: [PATCH] adds :new_if_blank option to fields_for that will initialize blank associations for models using nested_attributes_for

---
 actionpack/lib/action_view/helpers/form_helper.rb |   17 +++++++++
 actionpack/test/template/form_helper_test.rb      |   38 ++++++++++++++++++++-
 2 files changed, 54 insertions(+), 1 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/form_helper.rb b/actionpack/lib/action_view/helpers/form_helper.rb
index a59829b..aa21485 100644
--- a/actionpack/lib/action_view/helpers/form_helper.rb
+++ b/actionpack/lib/action_view/helpers/form_helper.rb
@@ -1004,11 +1004,28 @@ module ActionView
           @object.respond_to?("#{association_name}_attributes=")
         end
 
+        def build_nested_association(association_name, args)
+          klass = association_name.to_s.classify.constantize
+          if @object.send(association_name).is_a?(Array)
+            nested_association = Array.new
+            (args[:new_if_blank].to_i rescue 1).times do
+               nested_association << klass.new
+            end
+          else
+            nested_association = klass.new
+          end
+          nested_association
+        end
+
         def fields_for_with_nested_attributes(association_name, args, block)
           name = "#{object_name}[#{association_name}_attributes]"
           association = @object.send(association_name)
           explicit_object = args.first if args.first.respond_to?(:new_record?)
 
+          if association.blank? && args.last.is_a?(Hash) && args.last[:new_if_blank]
+            association = build_nested_association(association_name, args.last)
+          end
+
           if association.is_a?(Array)
             children = explicit_object ? [explicit_object] : association
             explicit_child_index = args.last[:child_index] if args.last.is_a?(Hash)
diff --git a/actionpack/test/template/form_helper_test.rb b/actionpack/test/template/form_helper_test.rb
index 654eee4..10a8522 100644
--- a/actionpack/test/template/form_helper_test.rb
+++ b/actionpack/test/template/form_helper_test.rb
@@ -456,7 +456,7 @@ class FormHelperTest < ActionView::TestCase
 
     assert_dom_equal expected, output_buffer
   end
-
+  
   def test_nested_fields_for_with_nested_collections
     form_for('post[]', @post) do |f|
       concat f.text_field(:title)
@@ -585,6 +585,42 @@ class FormHelperTest < ActionView::TestCase
 
     assert_dom_equal expected, output_buffer
   end
+  
+  def test_nested_fields_for_one_to_one_association_with_new_if_blank_option
+    form_for(:post, @post) do |f|
+      concat f.text_field(:title)
+      f.fields_for(:author, :new_if_blank => true) do |af|
+        concat af.text_field(:name)
+      end
+    end
+    expected = '<form action="http://www.example.com" method="post">' +
+               '<input name="post[title]" size="30" type="text" id="post_title" value="Hello World" />' + 
+               '<input id="post_author_attributes_name" name="post[author_attributes][name]" size="30" type="text" value="new author" />' +
+               '</form>'
+
+    assert_dom_equal expected, output_buffer
+  end
+  
+  def test_nested_fields_for_with_new_if_blank_option_for_collection_association
+    @post.comments = []
+            
+    form_for(:post, @post) do |f|
+      concat f.text_field(:title)
+      f.fields_for(:comments, :new_if_blank => 3) do |cf|
+        concat cf.text_field(:name)
+      end
+    end
+      
+    expected = '<form action="http://www.example.com" method="post">' +
+               '<input name="post[title]" size="30" type="text" id="post_title" value="Hello World" />' +
+               '<input id="post_comments_attributes_0_name" name="post[comments_attributes][0][name]" size="30" type="text" value="new comment" />' +
+               '<input id="post_comments_attributes_1_name" name="post[comments_attributes][1][name]" size="30" type="text" value="new comment" />' +
+               '<input id="post_comments_attributes_2_name" name="post[comments_attributes][2][name]" size="30" type="text" value="new comment" />' +
+               '</form>'
+
+    assert_dom_equal expected, output_buffer
+    
+  end  
 
   def test_nested_fields_for_with_explicitly_passed_object_on_a_nested_attributes_one_to_one_association
     form_for(:post, @post) do |f|
-- 
1.6.1.3

