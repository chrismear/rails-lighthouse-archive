<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-03T01:53:06+01:00</created-at>
  <creator-id type="integer">18106</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">97</number>
  <permalink>enhancement-add-scope_options-inspection-method-to-named_scope</permalink>
  <priority type="integer">10729</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord enhancement named_scope patch</tag>
  <title>Enhancement: Add scope_options inspection method to named_scope</title>
  <updated-at type="datetime">2008-05-11T20:42:13+01:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">5</version>
  <user-name>Pratik</user-name>
  <creator-name>duncanbeevers</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/97</url>
  <priority-name nil="true"></priority-name>
  <original-body>When generating complex options hashes for named scopes, it can be difficult to test that the scopes are generated correctly.  By providing insight into the generated options, we can test the scope without having to instantiate records.

@@@ ruby
class Shirt &lt; ActiveRecord::Base
  named_scope :colored, lambda { |color|
    { :conditions =&gt; { :color =&gt; color } }
  }
end
@@@

@@@ ruby
class ShirtTest &lt; Test::Unit
  def test_colored_scope
    red_scope = { :conditions =&gt; { :colored =&gt; 'red' }
    blue_scope = { :conditions =&gt; { :colored =&gt; 'blue' }
    assert_equal red_scope, Shirt.colored('red').scope_options
    assert_equal blue_scope, Shirt.colored('blue').scope_options
  end
end
@@@</original-body>
  <latest-body>When generating complex options hashes for named scopes, it can be difficult to test that the scopes are generated correctly.  By providing insight into the generated options, we can test the scope without having to instantiate records.

@@@ ruby
class Shirt &lt; ActiveRecord::Base
  named_scope :colored, lambda { |color|
    { :conditions =&gt; { :color =&gt; color } }
  }
end
@@@

@@@ ruby
class ShirtTest &lt; Test::Unit
  def test_colored_scope
    red_scope = { :conditions =&gt; { :colored =&gt; 'red' }
    blue_scope = { :conditions =&gt; { :colored =&gt; 'blue' }
    assert_equal red_scope, Shirt.colored('red').scope_options
    assert_equal blue_scope, Shirt.colored('blue').scope_options
  end
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When generating complex options hashes for named scopes, it can be difficult to test that the scopes are generated correctly.  By providing insight into the generated options, we can test the scope without having to instantiate records.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Shirt &amp;lt; ActiveRecord::Base
  named_scope :colored, lambda { |color|
    { :conditions =&amp;gt; { :color =&amp;gt; color } }
  }
end&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class ShirtTest &amp;lt; Test::Unit
  def test_colored_scope
    red_scope = { :conditions =&amp;gt; { :colored =&amp;gt; 'red' }
    blue_scope = { :conditions =&amp;gt; { :colored =&amp;gt; 'blue' }
    assert_equal red_scope, Shirt.colored('red').scope_options
    assert_equal blue_scope, Shirt.colored('blue').scope_options
  end
end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When generating complex options hashes for named scopes, it can be difficult to test that the scopes are generated correctly.  By providing insight into the generated options, we can test the scope without having to instantiate records.

@@@ ruby
class Shirt &lt; ActiveRecord::Base
  named_scope :colored, lambda { |color|
    { :conditions =&gt; { :color =&gt; color } }
  }
end
@@@

@@@ ruby
class ShirtTest &lt; Test::Unit
  def test_colored_scope
    red_scope = { :conditions =&gt; { :colored =&gt; 'red' } }
    blue_scope = { :conditions =&gt; { :colored =&gt; 'blue' } }
    assert_equal red_scope, Shirt.colored('red').scope_options
    assert_equal blue_scope, Shirt.colored('blue').scope_options
  end
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When generating complex options hashes for named scopes, it can be difficult to test that the scopes are generated correctly.  By providing insight into the generated options, we can test the scope without having to instantiate records.
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class Shirt &amp;lt; ActiveRecord::Base
  named_scope :colored, lambda { |color|
    { :conditions =&amp;gt; { :color =&amp;gt; color } }
  }
end&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class ShirtTest &amp;lt; Test::Unit
  def test_colored_scope
    red_scope = { :conditions =&amp;gt; { :colored =&amp;gt; 'red' } }
    blue_scope = { :conditions =&amp;gt; { :colored =&amp;gt; 'blue' } }
    assert_equal red_scope, Shirt.colored('red').scope_options
    assert_equal blue_scope, Shirt.colored('blue').scope_options
  end
end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-03T05:52:02+01:00</created-at>
      <creator-id type="integer">18106</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">97</number>
      <permalink>enhancement-add-scope_options-inspection-method-to-named_scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Enhancement: Add scope_options inspection method to named_scope</title>
      <updated-at type="datetime">2008-05-03T05:52:02+01:00</updated-at>
      <user-id type="integer">18106</user-id>
      <version type="integer">1</version>
      <user-name>duncanbeevers</user-name>
      <creator-name>duncanbeevers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/97</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The method you are looking for already exists:

Shirt.colored('red').proxy_options

Unless you're asking for the name to be changed/aliased to scope_options you should probably close off this ticket.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The method you are looking for already exists:
&lt;/p&gt;&lt;p&gt;
Shirt.colored('red').proxy_options
&lt;/p&gt;&lt;p&gt;
Unless you're asking for the name to be changed/aliased to scope_options you should probably close off this ticket.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-06T20:37:34+01:00</created-at>
      <creator-id type="integer">18106</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">97</number>
      <permalink>enhancement-add-scope_options-inspection-method-to-named_scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Enhancement: Add scope_options inspection method to named_scope</title>
      <updated-at type="datetime">2008-05-06T20:37:34+01:00</updated-at>
      <user-id type="integer">225</user-id>
      <version type="integer">2</version>
      <user-name>Trevor Squires</user-name>
      <creator-name>duncanbeevers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/97</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think giving the method a different name is appropriate, and at a minimum the tests should be carried over.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I think giving the method a different name is appropriate, and at a minimum the tests should be carried over.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-06T21:32:25+01:00</created-at>
      <creator-id type="integer">18106</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">97</number>
      <permalink>enhancement-add-scope_options-inspection-method-to-named_scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Enhancement: Add scope_options inspection method to named_scope</title>
      <updated-at type="datetime">2008-05-06T21:32:25+01:00</updated-at>
      <user-id type="integer">18106</user-id>
      <version type="integer">3</version>
      <user-name>duncanbeevers</user-name>
      <creator-name>duncanbeevers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/97</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [0b8b582e0668416c6e6760e97a64b9fa3507782c]) Add test for named_scope#proxy_options. [#97 state:resolved]
http://github.com/rails/rails/commit/0b8b582e0668416c6e6760e97a64b9fa3507782c</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [0b8b582e0668416c6e6760e97a64b9fa3507782c]) Add test for named_scope#proxy_options. [#97 state:resolved]
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/0b8b582e0668416c6e6760e97a64b9fa3507782c&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-11T20:35:27+01:00</created-at>
      <creator-id type="integer">18106</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">97</number>
      <permalink>enhancement-add-scope_options-inspection-method-to-named_scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Enhancement: Add scope_options inspection method to named_scope</title>
      <updated-at type="datetime">2008-05-11T20:35:27+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>duncanbeevers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/97</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>And just for the records, I had changed the patch to remove scope_options and use existing proxy_options instead.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
And just for the records, I had changed the patch to remove scope_options and use existing proxy_options instead.
&lt;/p&gt;&lt;p&gt;
Thanks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-11T20:42:13+01:00</created-at>
      <creator-id type="integer">18106</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">97</number>
      <permalink>enhancement-add-scope_options-inspection-method-to-named_scope</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Enhancement: Add scope_options inspection method to named_scope</title>
      <updated-at type="datetime">2008-05-11T20:42:13+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>duncanbeevers</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/97</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>bef25350d5234fe404b6f9075a4c9c0007ab000a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-03T01:53:07+01:00</created-at>
      <filename>named_scope_scope_options.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">21316</id>
      <size type="integer">1748</size>
      <uploader-id type="integer">18106</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/21316/named_scope_scope_options.diff</url>
    </attachment>
  </attachments>
</ticket>
