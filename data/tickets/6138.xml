<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">17433</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-09T12:37:03+00:00</created-at>
  <creator-id type="integer">17433</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">6138</number>
  <permalink>define_attribute_methods-interface-differs-between-activemodel-and-activerecord</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>active_model active_record</tag>
  <title>define_attribute_methods interface differs between ActiveModel and ActiveRecord</title>
  <updated-at type="datetime">2010-12-09T12:59:49+00:00</updated-at>
  <user-id type="integer">17433</user-id>
  <version type="integer">2</version>
  <user-name>Aditya Sanghi</user-name>
  <creator-name>Aditya Sanghi</creator-name>
  <assigned-user-name>Aditya Sanghi</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6138</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>ActiveModel allows passing an array of methods on which attribute_method_suffix,prefix,affix etc methods will be defined.
ActiveRecord however overrides the define_attribute_methods but without parameters, so the methods provided to attribute_method_suffix, prefix, affix get defined for ALL columns of the model. You may want to define the prefix/suffix/affix methods for only a subset of columns however.

Will update with more information, tests, patch, shortly.</original-body>
  <latest-body>ActiveModel allows passing an array of methods on which attribute_method_suffix,prefix,affix etc methods will be defined.
ActiveRecord however overrides the define_attribute_methods but without parameters, so the methods provided to attribute_method_suffix, prefix, affix get defined for ALL columns of the model. You may want to define the prefix/suffix/affix methods for only a subset of columns however.

Will update with more information, tests, patch, shortly.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;ActiveModel allows passing an array of methods on which
attribute_method_suffix,prefix,affix etc methods will be
defined.&lt;br&gt;
ActiveRecord however overrides the define_attribute_methods but
without parameters, so the methods provided to
attribute_method_suffix, prefix, affix get defined for ALL columns
of the model. You may want to define the prefix/suffix/affix
methods for only a subset of columns however.&lt;/p&gt;
&lt;p&gt;Will update with more information, tests, patch, shortly.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17433</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ActiveModel allows passing an array of methods on which attribute_method_suffix,prefix,affix etc methods will be defined.
ActiveRecord however overrides the define_attribute_methods but without parameters, so the methods provided to attribute_method_suffix, prefix, affix get defined for ALL columns of the model. You may want to define the prefix/suffix/affix methods for only a subset of columns however.

Will update with more information, tests, patch, shortly.</body>
      <body-html>&lt;div&gt;&lt;p&gt;ActiveModel allows passing an array of methods on which
attribute_method_suffix,prefix,affix etc methods will be
defined.&lt;br&gt;
ActiveRecord however overrides the define_attribute_methods but
without parameters, so the methods provided to
attribute_method_suffix, prefix, affix get defined for ALL columns
of the model. You may want to define the prefix/suffix/affix
methods for only a subset of columns however.&lt;/p&gt;
&lt;p&gt;Will update with more information, tests, patch, shortly.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-09T12:37:03+00:00</created-at>
      <creator-id type="integer">17433</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">6138</number>
      <permalink>define_attribute_methods-interface-differs-between-activemodel-and-activerecord</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>active_model active_record</tag>
      <title>define_attribute_methods interface differs between ActiveModel and ActiveRecord</title>
      <updated-at type="datetime">2010-12-09T12:37:07+00:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">1</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Aditya Sanghi</creator-name>
      <assigned-user-name>Aditya Sanghi</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6138</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17433</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Closing ticket. I think the way the method_missing/respond_to is implemented in ActiveRecord, it would be way too tricky to do this selectively define methods for only a subset of columns in ActiveRecord.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Closing ticket. I think the way the method_missing/respond_to is
implemented in ActiveRecord, it would be way too tricky to do this
selectively define methods for only a subset of columns in
ActiveRecord.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-09T12:59:44+00:00</created-at>
      <creator-id type="integer">17433</creator-id>
      <diffable-attributes type="yaml">--- 
:state: needs-more-info
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">6138</number>
      <permalink>define_attribute_methods-interface-differs-between-activemodel-and-activerecord</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_model active_record</tag>
      <title>define_attribute_methods interface differs between ActiveModel and ActiveRecord</title>
      <updated-at type="datetime">2010-12-09T12:59:49+00:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">2</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Aditya Sanghi</creator-name>
      <assigned-user-name>Aditya Sanghi</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6138</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
