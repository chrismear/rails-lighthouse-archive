<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-02T23:59:51+01:00</created-at>
  <creator-id type="integer">17505</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">96</number>
  <permalink>form-helpers-don-t-handle-question-methods</permalink>
  <priority type="integer">12649</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>actionpack bug edge patch tested</tag>
  <title>Form helpers don't handle &quot;question?&quot; methods</title>
  <updated-at type="datetime">2008-05-06T08:06:20+01:00</updated-at>
  <user-id type="integer">1</user-id>
  <version type="integer">4</version>
  <user-name>Rick</user-name>
  <creator-name>Andrew Vit</creator-name>
  <assigned-user-name>Rick</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/96</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm carrying this forward from &quot;my Trac ticket&quot;:http://dev.rubyonrails.org/ticket/11380 (I rebased the changes to the current revision.)

The form helpers currently don't account for question methods/query attributes (e.g. :secret?), so it outputs the question mark in the tag's name parameter. This patch cleans the returned parameter to correspond with the the expected name for the model's setter.

This allows us to use the helpers directly as intended instead of needing longer syntax:

@@@ html
&lt;%= f.check_box :secret? %&gt;
@@@

Should produce:

@@@ html
&lt;input name=&quot;post[secret]&quot; ... /&gt;
@@@

This behaviour is better for direct assignment back into the model using AR::Base.new, update_attributes, etc...

@@@ ruby
def create
  Post.new( params )

  # instead of:
  # secret = params.delete(:secret?)
  # Post.new( params )
  # Post.secret = secret
end
@@@</original-body>
  <latest-body>I'm carrying this forward from &quot;my Trac ticket&quot;:http://dev.rubyonrails.org/ticket/11380 (I rebased the changes to the current revision.)

The form helpers currently don't account for question methods/query attributes (e.g. :secret?), so it outputs the question mark in the tag's name parameter. This patch cleans the returned parameter to correspond with the the expected name for the model's setter.

This allows us to use the helpers directly as intended instead of needing longer syntax:

@@@ html
&lt;%= f.check_box :secret? %&gt;
@@@

Should produce:

@@@ html
&lt;input name=&quot;post[secret]&quot; ... /&gt;
@@@

This behaviour is better for direct assignment back into the model using AR::Base.new, update_attributes, etc...

@@@ ruby
def create
  Post.new( params )

  # instead of:
  # secret = params.delete(:secret?)
  # Post.new( params )
  # Post.secret = secret
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I'm carrying this forward from &lt;a href=&quot;http://dev.rubyonrails.org/ticket/11380&quot;&gt;my Trac ticket&lt;/a&gt; (I rebased the changes to the current revision.)
&lt;/p&gt;&lt;p&gt;
The form helpers currently don't account for question methods/query attributes (e.g. :secret?), so it outputs the question mark in the tag's name parameter. This patch cleans the returned parameter to correspond with the the expected name for the model's setter.
&lt;/p&gt;&lt;p&gt;
This allows us to use the helpers directly as intended instead of needing longer syntax:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;%= f.check_box :secret? %&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Should produce:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;input name=&amp;quot;post[secret]&amp;quot; ... /&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This behaviour is better for direct assignment back into the model using AR::Base.new, update_attributes, etc...
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;def create
  Post.new( params )

  # instead of:
  # secret = params.delete(:secret?)
  # Post.new( params )
  # Post.secret = secret
end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm carrying this forward from &quot;my Trac ticket&quot;:http://dev.rubyonrails.org/ticket/11380 (I rebased the changes to the current revision.)

The form helpers currently don't account for boolean question methods correctly (e.g. :secret?), so it outputs the question mark in the tag's name parameter. This patch fixes the name attribute so the returned parameter corresponds with the the right name for the model's setter method.

Currently, this code:
@@@ html
&lt;%= f.check_box :secret? %&gt;
@@@

Produces the following input tag:
@@@ html
&lt;input name=&quot;post[secret?]&quot; ... /&gt;
@@@

In fact, it should produce the following, so that the returned parameter can be directly assigned as :secret=, not :secret?=
@@@ html
&lt;input name=&quot;post[secret]&quot; ... /&gt;
@@@

This would be the expected behaviour for direct assignment back into the model using AR::Base.new, update_attributes, etc...

@@@ ruby
def create
  Post.new( params )

  # Currently have to work around the above mass assignment using:
  # secret = params.delete(:secret?)
  # Post.new( params )
  # Post.secret = secret
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm carrying this forward from &lt;a href=&quot;http://dev.rubyonrails.org/ticket/11380&quot;&gt;my Trac ticket&lt;/a&gt; (I rebased the changes to the current revision.)
&lt;/p&gt;&lt;p&gt;
The form helpers currently don't account for boolean question methods correctly (e.g. :secret?), so it outputs the question mark in the tag's name parameter. This patch fixes the name attribute so the returned parameter corresponds with the the right name for the model's setter method.
&lt;/p&gt;&lt;p&gt;
Currently, this code:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;%= f.check_box :secret? %&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
Produces the following input tag:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;input name=&amp;quot;post[secret?]&amp;quot; ... /&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
In fact, it should produce the following, so that the returned parameter can be directly assigned as :secret=, not :secret?=
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;input name=&amp;quot;post[secret]&amp;quot; ... /&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This would be the expected behaviour for direct assignment back into the model using AR::Base.new, update_attributes, etc...
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;def create
  Post.new( params )

  # Currently have to work around the above mass assignment using:
  # secret = params.delete(:secret?)
  # Post.new( params )
  # Post.secret = secret
end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-03T18:49:36+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">96</number>
      <permalink>form-helpers-don-t-handle-question-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Form helpers don't handle &quot;question?&quot; methods</title>
      <updated-at type="datetime">2008-05-03T18:49:36+01:00</updated-at>
      <user-id type="integer">17505</user-id>
      <version type="integer">1</version>
      <user-name>Andrew Vit</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/96</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-05T20:31:28+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">96</number>
      <permalink>form-helpers-don-t-handle-question-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Form helpers don't handle &quot;question?&quot; methods</title>
      <updated-at type="datetime">2008-05-05T20:31:28+01:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">2</version>
      <user-name>Rick</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/96</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Updated patch to cache sanitized method name instead of doing the regex each time.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Updated patch to cache sanitized method name instead of doing the regex each time.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-05T20:50:23+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">96</number>
      <permalink>form-helpers-don-t-handle-question-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Form helpers don't handle &quot;question?&quot; methods</title>
      <updated-at type="datetime">2008-05-05T20:50:23+01:00</updated-at>
      <user-id type="integer">17505</user-id>
      <version type="integer">3</version>
      <user-name>Andrew Vit</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/96</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Commmitted.. thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Commmitted.. thanks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-06T08:06:20+01:00</created-at>
      <creator-id type="integer">17505</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">96</number>
      <permalink>form-helpers-don-t-handle-question-methods</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Form helpers don't handle &quot;question?&quot; methods</title>
      <updated-at type="datetime">2008-05-06T08:06:20+01:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">4</version>
      <user-name>Rick</user-name>
      <creator-name>Andrew Vit</creator-name>
      <assigned-user-name>Rick</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/96</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>25f4271efccc78ab87a79468d3cf3dbe9d84388f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-05T20:50:23+01:00</created-at>
      <filename>clean_question_name_params.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">21578</id>
      <size type="integer">3928</size>
      <uploader-id type="integer">17505</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/21578/clean_question_name_params.diff</url>
    </attachment>
  </attachments>
</ticket>
