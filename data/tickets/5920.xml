<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-11-04T20:17:54+00:00</created-at>
  <creator-id type="integer">29122</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">5920</number>
  <permalink>rails-3-associations-eager-load-of-associated-classes-significantly-slows-down-development-environment</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>associations &quot;development environment&quot; scope slow</tag>
  <title>Rails 3 associations eager load of associated classes significantly slows down development environment</title>
  <updated-at type="datetime">2011-02-12T11:51:44+00:00</updated-at>
  <user-id type="integer">68889</user-id>
  <version type="integer">5</version>
  <user-name>Cesario</user-name>
  <creator-name>Steve F</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5920</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>In rails238 the associated classes were not loaded until an association method was called.  I'm sure this was a performance improvement in production, but with a class like User that is associated with about 50 other models which have their own nested associations, this significantly slows down requests, since User is reloaded on every request.  I'm wondering if we could create development environment only behavior to lazy load scopes and associations.  My User model takes about 7seconds to load.


Here's how I repro'd the issue in both environments:

I created the following two models:

@@@
#user.rb
class User &lt; ActiveRecord::Base
  has_many :documents
end

#document.rb
raise &quot;I'm loading&quot;
class Document &lt; ActiveRecord::Base
end
@@@

I opened up a console:
@@@
&gt; User
RuntimeError: I'm loading ###in rails3 but not rails238

&gt; User.new.documents
RuntimeError: I'm loading ###in rails 238

@@@</original-body>
  <latest-body>In rails238 the associated classes were not loaded until an association method was called.  I'm sure this was a performance improvement in production, but with a class like User that is associated with about 50 other models which have their own nested associations, this significantly slows down requests, since User is reloaded on every request.  I'm wondering if we could create development environment only behavior to lazy load scopes and associations.  My User model takes about 7seconds to load.


Here's how I repro'd the issue in both environments:

I created the following two models:

@@@
#user.rb
class User &lt; ActiveRecord::Base
  has_many :documents
end

#document.rb
raise &quot;I'm loading&quot;
class Document &lt; ActiveRecord::Base
end
@@@

I opened up a console:
@@@
&gt; User
RuntimeError: I'm loading ###in rails3 but not rails238

&gt; User.new.documents
RuntimeError: I'm loading ###in rails 238

@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In rails238 the associated classes were not loaded until an
association method was called. I'm sure this was a performance
improvement in production, but with a class like User that is
associated with about 50 other models which have their own nested
associations, this significantly slows down requests, since User is
reloaded on every request. I'm wondering if we could create
development environment only behavior to lazy load scopes and
associations. My User model takes about 7seconds to load.&lt;/p&gt;
&lt;p&gt;Here's how I repro'd the issue in both environments:&lt;/p&gt;
&lt;p&gt;I created the following two models:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#user.rb
class User &amp;lt; ActiveRecord::Base
  has_many :documents
end

#document.rb
raise &quot;I'm loading&quot;
class Document &amp;lt; ActiveRecord::Base
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I opened up a console:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; User
RuntimeError: I'm loading ###in rails3 but not rails238&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
&amp;gt; User.new.documents
RuntimeError: I'm loading ###in rails 238&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In rails238 the associated classes were not loaded until an association method was called.  I'm sure this was a performance improvement in production, but with a class like User that is associated with about 50 other models which have their own nested associations, this significantly slows down requests, since User is reloaded on every request.  I'm wondering if we could create development environment only behavior to lazy load scopes and associations.  My User model takes about 7seconds to load.


Here's how I repro'd the issue in both environments:

I created the following two models:

@@@
#user.rb
class User &lt; ActiveRecord::Base
  has_many :documents
end

#document.rb
raise &quot;I'm loading&quot;
class Document &lt; ActiveRecord::Base
end
@@@

I opened up a console:
@@@
&gt; User
RuntimeError: I'm loading ###in rails3 but not rails238

&gt; User.new.documents
RuntimeError: I'm loading ###in rails 238

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;In rails238 the associated classes were not loaded until an
association method was called. I'm sure this was a performance
improvement in production, but with a class like User that is
associated with about 50 other models which have their own nested
associations, this significantly slows down requests, since User is
reloaded on every request. I'm wondering if we could create
development environment only behavior to lazy load scopes and
associations. My User model takes about 7seconds to load.&lt;/p&gt;
&lt;p&gt;Here's how I repro'd the issue in both environments:&lt;/p&gt;
&lt;p&gt;I created the following two models:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;#user.rb
class User &amp;lt; ActiveRecord::Base
  has_many :documents
end

#document.rb
raise &quot;I'm loading&quot;
class Document &amp;lt; ActiveRecord::Base
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I opened up a console:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt; User
RuntimeError: I'm loading ###in rails3 but not rails238&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
&amp;gt; User.new.documents
RuntimeError: I'm loading ###in rails 238&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-04T20:17:54+00:00</created-at>
      <creator-id type="integer">29122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5920</number>
      <permalink>rails-3-associations-eager-load-of-associated-classes-significantly-slows-down-development-environment</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations &quot;development environment&quot; scope slow</tag>
      <title>Rails 3 associations eager load of associated classes significantly slows down development environment</title>
      <updated-at type="datetime">2010-11-04T20:18:21+00:00</updated-at>
      <user-id type="integer">29122</user-id>
      <version type="integer">1</version>
      <user-name>Steve F</user-name>
      <creator-name>Steve F</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5920</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Would be nice to look at this for 3.0.2</body>
      <body-html>&lt;div&gt;&lt;p&gt;Would be nice to look at this for 3.0.2&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-08T20:03:26+00:00</created-at>
      <creator-id type="integer">29122</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5920</number>
      <permalink>rails-3-associations-eager-load-of-associated-classes-significantly-slows-down-development-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations &quot;development environment&quot; scope slow</tag>
      <title>Rails 3 associations eager load of associated classes significantly slows down development environment</title>
      <updated-at type="datetime">2010-11-08T20:03:29+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Steve F</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5920</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am not able to reproduce this error with Rails edge. Is it a Rails 3-0-stable issue?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am not able to reproduce this error with Rails edge. Is it a
Rails 3-0-stable issue?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-10T13:35:43+00:00</created-at>
      <creator-id type="integer">29122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5920</number>
      <permalink>rails-3-associations-eager-load-of-associated-classes-significantly-slows-down-development-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations &quot;development environment&quot; scope slow</tag>
      <title>Rails 3 associations eager load of associated classes significantly slows down development environment</title>
      <updated-at type="datetime">2010-11-10T13:35:45+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Steve F</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5920</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Fixed.  Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fixed. Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-08T20:00:18+00:00</created-at>
      <creator-id type="integer">29122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5920</number>
      <permalink>rails-3-associations-eager-load-of-associated-classes-significantly-slows-down-development-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations &quot;development environment&quot; scope slow</tag>
      <title>Rails 3 associations eager load of associated classes significantly slows down development environment</title>
      <updated-at type="datetime">2010-12-08T20:00:50+00:00</updated-at>
      <user-id type="integer">29122</user-id>
      <version type="integer">4</version>
      <user-name>Steve F</user-name>
      <creator-name>Steve F</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5920</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think we could mark this bug as invalid as it's not reproducible anymore.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think we could mark this bug as invalid as it's not
reproducible anymore.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T11:51:36+00:00</created-at>
      <creator-id type="integer">29122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5920</number>
      <permalink>rails-3-associations-eager-load-of-associated-classes-significantly-slows-down-development-environment</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>associations &quot;development environment&quot; scope slow</tag>
      <title>Rails 3 associations eager load of associated classes significantly slows down development environment</title>
      <updated-at type="datetime">2011-02-12T11:51:44+00:00</updated-at>
      <user-id type="integer">68889</user-id>
      <version type="integer">5</version>
      <user-name>Cesario</user-name>
      <creator-name>Steve F</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5920</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
