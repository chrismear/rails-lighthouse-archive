<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-12-03T13:29:20+00:00</created-at>
  <creator-id type="integer">39646</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1513</number>
  <permalink>activeresource-does-not-support-keep-alive-connections</permalink>
  <priority type="integer">876</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>ActiveResource does not support keep-alive connections</title>
  <updated-at type="datetime">2009-03-13T14:44:15+00:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">2</version>
  <user-name>Pratik</user-name>
  <creator-name>Kristoffer Paro</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1513</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>ActiveResource::Connection sets up and tears down a new connection each time a request is performed. If the rails application performs multiple subsequent requests, this leads to immense performance degradation.

I have found the private http() method of ActiveResource::Connection to be the culprit. The method creates a new Net::HTTP object and returns it. When a request is performed with this object, the connection is opened and then immediately closed afterwards.

Instead, the method start() could be called on the object, and the object stored as a private instance variable. This way, the same open connection could be used for multiple subsequent requests.

The Rails version I use is 2.2.0</original-body>
  <latest-body>ActiveResource::Connection sets up and tears down a new connection each time a request is performed. If the rails application performs multiple subsequent requests, this leads to immense performance degradation.

I have found the private http() method of ActiveResource::Connection to be the culprit. The method creates a new Net::HTTP object and returns it. When a request is performed with this object, the connection is opened and then immediately closed afterwards.

Instead, the method start() could be called on the object, and the object stored as a private instance variable. This way, the same open connection could be used for multiple subsequent requests.

The Rails version I use is 2.2.0</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;ActiveResource::Connection sets up and tears down a new
connection each time a request is performed. If the rails
application performs multiple subsequent requests, this leads to
immense performance degradation.&lt;/p&gt;
&lt;p&gt;I have found the private http() method of
ActiveResource::Connection to be the culprit. The method creates a
new Net::HTTP object and returns it. When a request is performed
with this object, the connection is opened and then immediately
closed afterwards.&lt;/p&gt;
&lt;p&gt;Instead, the method start() could be called on the object, and
the object stored as a private instance variable. This way, the
same open connection could be used for multiple subsequent
requests.&lt;/p&gt;
&lt;p&gt;The Rails version I use is 2.2.0&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ActiveResource::Connection sets up and tears down a new connection each time a request is performed. If the rails application performs multiple subsequent requests, this leads to immense performance degradation.

I have found the private http() method of ActiveResource::Connection to be the culprit. The method creates a new Net::HTTP object and returns it. When a request is performed with this object, the connection is opened and then immediately closed afterwards.

Instead, the method start() could be called on the object, and the object stored as a private instance variable. This way, the same open connection could be used for multiple subsequent requests.

The Rails version I use is 2.2.0</body>
      <body-html>&lt;div&gt;&lt;p&gt;ActiveResource::Connection sets up and tears down a new
connection each time a request is performed. If the rails
application performs multiple subsequent requests, this leads to
immense performance degradation.&lt;/p&gt;
&lt;p&gt;I have found the private http() method of
ActiveResource::Connection to be the culprit. The method creates a
new Net::HTTP object and returns it. When a request is performed
with this object, the connection is opened and then immediately
closed afterwards.&lt;/p&gt;
&lt;p&gt;Instead, the method start() could be called on the object, and
the object stored as a private instance variable. This way, the
same open connection could be used for multiple subsequent
requests.&lt;/p&gt;
&lt;p&gt;The Rails version I use is 2.2.0&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-03T13:29:20+00:00</created-at>
      <creator-id type="integer">39646</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1513</number>
      <permalink>activeresource-does-not-support-keep-alive-connections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveResource does not support keep-alive connections</title>
      <updated-at type="datetime">2008-12-03T13:29:23+00:00</updated-at>
      <user-id type="integer">39646</user-id>
      <version type="integer">1</version>
      <user-name>Kristoffer Paro</user-name>
      <creator-name>Kristoffer Paro</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1513</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Patch please :)

http://guides.rails.info/contributing_to_rails.html</body>
      <body-html>&lt;div&gt;&lt;p&gt;Patch please :)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://guides.rails.info/contributing_to_rails.html&quot;&gt;http://guides.rails.info/contrib...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-13T14:44:13+00:00</created-at>
      <creator-id type="integer">39646</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1513</number>
      <permalink>activeresource-does-not-support-keep-alive-connections</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>ActiveResource does not support keep-alive connections</title>
      <updated-at type="datetime">2009-03-13T14:44:15+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>Kristoffer Paro</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1513</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
