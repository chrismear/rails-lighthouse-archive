<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-01T22:51:19+00:00</created-at>
  <creator-id type="integer">93461</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4329</number>
  <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>bugmash has_many_through rails3</tag>
  <title>has_many through association does not link models on association save</title>
  <updated-at type="datetime">2011-02-18T17:15:58+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">18</version>
  <user-name>Repository</user-name>
  <creator-name>Johannes Schmidt</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
  <priority-name>Low</priority-name>
  <original-body>Having a :through association like

@@@
class Post &lt; ActiveRecord::Base
  has_many :readers
  has_many :people, :through =&gt; :readers
end

class Reader &lt; ActiveRecord::Base
  belongs_to :person
  belongs_to :post
end

class Person &lt; ActiveRecord::Base
  has_many :readers
  has_many :posts, :through =&gt; :readers
end
@@@

When you build a new Person through the association via *build* or *new* like

@@@
person1 = post.people.build(:first_name =&gt; &quot;Bob&quot;)
person2 = post.people.build(:first_name =&gt; &quot;Ted&quot;)
@@@

and save the person directly (instead of the post):

@@@
person1.save
person2.save
@@@

than the association does not work as expected:

@@@
post.reload.people(true).collect(&amp;:first_name).include?(&quot;Bob&quot;) #=&gt; false
post.reload.people(true).collect(&amp;:first_name).include?(&quot;Ted&quot;) #=&gt; false
@@@

You can reproduce this by adding a test to active_record:

in *test/cases/associations/has_many_through_associations_test.rb* add the following lines (or apply the patch):

@@@
  def test_associate_by_saving_association
    person1 = posts(:thinking).people.build(:first_name=&gt;&quot;Bob&quot;)
    person2 = posts(:thinking).people.new(:first_name=&gt;&quot;Ted&quot;)
    
    person1.save
    person2.save
    
    assert posts(:thinking).reload.people(true).collect(&amp;:first_name).include?(&quot;Bob&quot;)
    assert posts(:thinking).reload.people(true).collect(&amp;:first_name).include?(&quot;Ted&quot;)
  end
@@@

and it will fail in master.

Saving the associated object is very useful in scoped controllers where you have an association based eg. on the current user.

Greetings
Johannes</original-body>
  <latest-body>Having a :through association like

@@@
class Post &lt; ActiveRecord::Base
  has_many :readers
  has_many :people, :through =&gt; :readers
end

class Reader &lt; ActiveRecord::Base
  belongs_to :person
  belongs_to :post
end

class Person &lt; ActiveRecord::Base
  has_many :readers
  has_many :posts, :through =&gt; :readers
end
@@@

When you build a new Person through the association via *build* or *new* like

@@@
person1 = post.people.build(:first_name =&gt; &quot;Bob&quot;)
person2 = post.people.build(:first_name =&gt; &quot;Ted&quot;)
@@@

and save the person directly (instead of the post):

@@@
person1.save
person2.save
@@@

than the association does not work as expected:

@@@
post.reload.people(true).collect(&amp;:first_name).include?(&quot;Bob&quot;) #=&gt; false
post.reload.people(true).collect(&amp;:first_name).include?(&quot;Ted&quot;) #=&gt; false
@@@

You can reproduce this by adding a test to active_record:

in *test/cases/associations/has_many_through_associations_test.rb* add the following lines (or apply the patch):

@@@
  def test_associate_by_saving_association
    person1 = posts(:thinking).people.build(:first_name=&gt;&quot;Bob&quot;)
    person2 = posts(:thinking).people.new(:first_name=&gt;&quot;Ted&quot;)
    
    person1.save
    person2.save
    
    assert posts(:thinking).reload.people(true).collect(&amp;:first_name).include?(&quot;Bob&quot;)
    assert posts(:thinking).reload.people(true).collect(&amp;:first_name).include?(&quot;Ted&quot;)
  end
@@@

and it will fail in master.

Saving the associated object is very useful in scoped controllers where you have an association based eg. on the current user.

Greetings
Johannes</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Having a :through association like&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Post &amp;lt; ActiveRecord::Base
  has_many :readers
  has_many :people, :through =&amp;gt; :readers
end

class Reader &amp;lt; ActiveRecord::Base
  belongs_to :person
  belongs_to :post
end

class Person &amp;lt; ActiveRecord::Base
  has_many :readers
  has_many :posts, :through =&amp;gt; :readers
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When you build a new Person through the association via
&lt;em&gt;build&lt;/em&gt; or &lt;em&gt;new&lt;/em&gt; like&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;person1 = post.people.build(:first_name =&amp;gt; &quot;Bob&quot;)
person2 = post.people.build(:first_name =&amp;gt; &quot;Ted&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and save the person directly (instead of the post):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;person1.save
person2.save&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;than the association does not work as expected:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;post.reload.people(true).collect(&amp;amp;:first_name).include?(&quot;Bob&quot;) #=&amp;gt; false
post.reload.people(true).collect(&amp;amp;:first_name).include?(&quot;Ted&quot;) #=&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can reproduce this by adding a test to active_record:&lt;/p&gt;
&lt;p&gt;in
&lt;em&gt;test/cases/associations/has_many_through_associations_test.rb&lt;/em&gt;
add the following lines (or apply the patch):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  def test_associate_by_saving_association
    person1 = posts(:thinking).people.build(:first_name=&amp;gt;&quot;Bob&quot;)
    person2 = posts(:thinking).people.new(:first_name=&amp;gt;&quot;Ted&quot;)
    
    person1.save
    person2.save
    
    assert posts(:thinking).reload.people(true).collect(&amp;amp;:first_name).include?(&quot;Bob&quot;)
    assert posts(:thinking).reload.people(true).collect(&amp;amp;:first_name).include?(&quot;Ted&quot;)
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and it will fail in master.&lt;/p&gt;
&lt;p&gt;Saving the associated object is very useful in scoped
controllers where you have an association based eg. on the current
user.&lt;/p&gt;
&lt;p&gt;Greetings&lt;br&gt;
Johannes&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Having a :through association like

@@@
class Post &lt; ActiveRecord::Base
  has_many :readers
  has_many :people, :through =&gt; :readers
end

class Reader &lt; ActiveRecord::Base
  belongs_to :person
  belongs_to :post
end

class Person &lt; ActiveRecord::Base
  has_many :readers
  has_many :posts, :through =&gt; :readers
end
@@@

When you build a new Person through the association via *build* or *new* like

@@@
person1 = post.people.build(:first_name =&gt; &quot;Bob&quot;)
person2 = post.people.build(:first_name =&gt; &quot;Ted&quot;)
@@@

and save the person directly (instead of the post):

@@@
person1.save
person2.save
@@@

than the association does not work as expected:

@@@
post.reload.people(true).collect(&amp;:first_name).include?(&quot;Bob&quot;) #=&gt; false
post.reload.people(true).collect(&amp;:first_name).include?(&quot;Ted&quot;) #=&gt; false
@@@

You can reproduce this by adding a test to active_record:

in *test/cases/associations/has_many_through_associations_test.rb* add the following lines (or apply the patch):

@@@
  def test_associate_by_saving_association
    person1 = posts(:thinking).people.build(:first_name=&gt;&quot;Bob&quot;)
    person2 = posts(:thinking).people.new(:first_name=&gt;&quot;Ted&quot;)
    
    person1.save
    person2.save
    
    assert posts(:thinking).reload.people(true).collect(&amp;:first_name).include?(&quot;Bob&quot;)
    assert posts(:thinking).reload.people(true).collect(&amp;:first_name).include?(&quot;Ted&quot;)
  end
@@@

and it will fail in master.

Saving the associated object is very useful in scoped controllers where you have an association based eg. on the current user.

Greetings
Johannes</body>
      <body-html>&lt;div&gt;&lt;p&gt;Having a :through association like&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Post &amp;lt; ActiveRecord::Base
  has_many :readers
  has_many :people, :through =&amp;gt; :readers
end

class Reader &amp;lt; ActiveRecord::Base
  belongs_to :person
  belongs_to :post
end

class Person &amp;lt; ActiveRecord::Base
  has_many :readers
  has_many :posts, :through =&amp;gt; :readers
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When you build a new Person through the association via
&lt;em&gt;build&lt;/em&gt; or &lt;em&gt;new&lt;/em&gt; like&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;person1 = post.people.build(:first_name =&amp;gt; &quot;Bob&quot;)
person2 = post.people.build(:first_name =&amp;gt; &quot;Ted&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and save the person directly (instead of the post):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;person1.save
person2.save&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;than the association does not work as expected:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;post.reload.people(true).collect(&amp;amp;:first_name).include?(&quot;Bob&quot;) #=&amp;gt; false
post.reload.people(true).collect(&amp;amp;:first_name).include?(&quot;Ted&quot;) #=&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can reproduce this by adding a test to active_record:&lt;/p&gt;
&lt;p&gt;in
&lt;em&gt;test/cases/associations/has_many_through_associations_test.rb&lt;/em&gt;
add the following lines (or apply the patch):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  def test_associate_by_saving_association
    person1 = posts(:thinking).people.build(:first_name=&amp;gt;&quot;Bob&quot;)
    person2 = posts(:thinking).people.new(:first_name=&amp;gt;&quot;Ted&quot;)
    
    person1.save
    person2.save
    
    assert posts(:thinking).reload.people(true).collect(&amp;amp;:first_name).include?(&quot;Bob&quot;)
    assert posts(:thinking).reload.people(true).collect(&amp;amp;:first_name).include?(&quot;Ted&quot;)
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and it will fail in master.&lt;/p&gt;
&lt;p&gt;Saving the associated object is very useful in scoped
controllers where you have an association based eg. on the current
user.&lt;/p&gt;
&lt;p&gt;Greetings&lt;br&gt;
Johannes&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-05T19:21:25+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-04-22T06:24:18+01:00</updated-at>
      <user-id type="integer">93461</user-id>
      <version type="integer">1</version>
      <user-name>Johannes Schmidt</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-05T19:26:49+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: has_many_through
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-04-05T19:26:51+01:00</updated-at>
      <user-id type="integer">93461</user-id>
      <version type="integer">2</version>
      <user-name>Johannes Schmidt</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>btw. using

@@@
post.people.create(:first_name =&gt; &quot;Bob&quot;)
@@@

works as expected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;btw. using&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;post.people.create(:first_name =&amp;gt; &quot;Bob&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;works as expected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-05T19:28:36+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-04-05T19:28:40+01:00</updated-at>
      <user-id type="integer">93461</user-id>
      <version type="integer">3</version>
      <user-name>Johannes Schmidt</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just to clarify a little, I'm experiencing this in 2.3.5 on non-polymorphic has_many_through associations.
(The opening line suggests this is for polymorphic associations, though the example is not)

Imho, the dropping of the intermediate model/association when saving the &quot;built&quot; child was very unexpected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just to clarify a little, I'm experiencing this in 2.3.5 on
non-polymorphic has_many_through associations.&lt;br&gt;
(The opening line suggests this is for polymorphic associations,
though the example is not)&lt;/p&gt;
&lt;p&gt;Imho, the dropping of the intermediate model/association when
saving the &quot;built&quot; child was very unexpected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-22T04:15:56+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-04-22T04:15:59+01:00</updated-at>
      <user-id type="integer">95261</user-id>
      <version type="integer">4</version>
      <user-name>Delineate</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Delinieate: Polymorphic was a typo. Just changed that.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Delinieate: Polymorphic was a typo. Just changed that.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-22T06:25:18+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-04-22T06:25:23+01:00</updated-at>
      <user-id type="integer">93461</user-id>
      <version type="integer">5</version>
      <user-name>Johannes Schmidt</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>From [rails doc](http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#M001833, &quot;rails doc&quot;): 
&gt; :autosave
    If true, always save the associated object or destroy it if marked for destruction, when saving the parent object. **Off by default**. 

&gt; You can manipulate objects and associations before they are saved to the database, but there is some special behavior you should be aware of, mostly involving the saving of associated objects.

&gt; Unless you set the :autosave option on a has_one, belongs_to, has_many, or has_and_belongs_to_many association. Setting it to true will always save the members, whereas setting it to false will never save the members.</body>
      <body-html>&lt;div&gt;&lt;p&gt;From &lt;a href=
&quot;http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#M001833%2C&quot;
title=&quot;rails doc&quot;&gt;rails doc&lt;/a&gt;:&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;:autosave&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;If true, always save the associated object or destroy it if marked for destruction, when saving the parent object. **Off by default**.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can manipulate objects and associations before they are
saved to the database, but there is some special behavior you
should be aware of, mostly involving the saving of associated
objects.&lt;/p&gt;
&lt;p&gt;Unless you set the :autosave option on a has_one, belongs_to,
has_many, or has_and_belongs_to_many association. Setting it to
true will always save the members, whereas setting it to false will
never save the members.&lt;/p&gt;
&lt;/blockquote&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-22T07:41:21+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-04-22T07:41:24+01:00</updated-at>
      <user-id type="integer">9932</user-id>
      <version type="integer">6</version>
      <user-name>Sigurd</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The same behavior when using the :autosave option.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The same behavior when using the :autosave option.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-22T08:13:42+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-04-22T08:13:46+01:00</updated-at>
      <user-id type="integer">93461</user-id>
      <version type="integer">7</version>
      <user-name>Johannes Schmidt</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I've tried w/ various combinations of :autosave on different associations on the child=&gt;intermediary=&gt;parent relationships. 
None seem to work.
Of course, :autosave on the parent =&gt; child associations aren't even needed if we were talking about saving the whole set by saving the parent.

I have a feeling it's more a matter of the reverse relationship not being created in the first place.

@@@
child = parent.children.build()
# Parent has the child associations
parent.intermediaries =&gt; [&lt;Intermediary id: 1....&gt;]
parent.children =&gt; [&lt;Child id: 1 ...]

# However, the child doesn't have the parent or intermediary.
child.intermediaries =&gt; []
child.parent =&gt; []

# Thus, it's unlikely saving the child (w/ or w/out :autosave) will change this
child.save
child.intermediaries =&gt; []
child.parent =&gt; []  # Still empty.
@@@

On the one hand, I suppose it shouldn't be assumed that the child =&gt; parent associations have been defined just because the parent=&gt;child associations have been (which are necessarily exist if we're using  build() in the first place ),

On the other, **it seems very counter-intuitive that the only way to save the child correctly is to save the parent.**

My guess is it's something that never made it off the TODO list.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've tried w/ various combinations of :autosave on different
associations on the child=&amp;gt;intermediary=&amp;gt;parent
relationships.&lt;br&gt;
None seem to work.&lt;br&gt;
Of course, :autosave on the parent =&amp;gt; child associations aren't
even needed if we were talking about saving the whole set by saving
the parent.&lt;/p&gt;
&lt;p&gt;I have a feeling it's more a matter of the reverse relationship
not being created in the first place.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;child = parent.children.build()
# Parent has the child associations
parent.intermediaries =&amp;gt; [&amp;lt;Intermediary id: 1....&amp;gt;]
parent.children =&amp;gt; [&amp;lt;Child id: 1 ...]

# However, the child doesn't have the parent or intermediary.
child.intermediaries =&amp;gt; []
child.parent =&amp;gt; []

# Thus, it's unlikely saving the child (w/ or w/out :autosave) will change this
child.save
child.intermediaries =&amp;gt; []
child.parent =&amp;gt; []  # Still empty.&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On the one hand, I suppose it shouldn't be assumed that the
child =&amp;gt; parent associations have been defined just because the
parent=&amp;gt;child associations have been (which are necessarily
exist if we're using build() in the first place ),&lt;/p&gt;
&lt;p&gt;On the other, &lt;strong&gt;it seems very counter-intuitive that the
only way to save the child correctly is to save the
parent.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;My guess is it's something that never made it off the TODO
list.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-22T22:35:38+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-04-22T22:35:39+01:00</updated-at>
      <user-id type="integer">95261</user-id>
      <version type="integer">8</version>
      <user-name>Delineate</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I can confirm that this bug exists in 2.3.5 as well as master, and that adding autosave =&gt; true does not help.

IMO it's truly a bug since the intermediary model is built in memory automatically, but never saved when the child is saved.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can confirm that this bug exists in 2.3.5 as well as master,
and that adding autosave =&amp;gt; true does not help.&lt;/p&gt;
&lt;p&gt;IMO it's truly a bug since the intermediary model is built in
memory automatically, but never saved when the child is saved.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-28T20:36:29+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-04-28T20:36:33+01:00</updated-at>
      <user-id type="integer">10656</user-id>
      <version type="integer">9</version>
      <user-name>joost baaij</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Also confirming bug exists in Rails beta3</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also confirming bug exists in Rails beta3&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T21:37:20+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-05-04T21:37:23+01:00</updated-at>
      <user-id type="integer">17717</user-id>
      <version type="integer">10</version>
      <user-name>Joe Ellis</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I looked into issue and this is what I found.

Let's say that relationship is 

@@@ ruby
class Person &lt; AR
 has_many :readers
 has_many :posts, :through =&gt;  :readers
end

post = Person.first.posts.build(:quality =&gt; 'good')
puts post.person_id #=&gt; 8
@@@

As you can see in the above case the relationship already exists. It's just that when post.save is called then no after_save callback is made to persist a new reader record.


In the after_save callback following two lines are needed. These two lines create the association record when you create a new post using Person.last.posts.create(..)

@@@ ruby
    through_association = @owner.send(@reflection.through_reflection.name)
    through_record = through_association.create!(construct_join_attributes(record))
@@@

However I am stuck. I am stuck because I do not know how to set an after_save callback on a given instance of post record. In this case there is no such after_save callback on the Post class. It is just that if a post instance is crated using build then those instances need an after_save callback to persist the association record.

Long writeup. However I wanted to explain everything I did. Someone who has more intimate knowledge of ActivRecord and a better ruby user should be able to fix it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I looked into issue and this is what I found.&lt;/p&gt;
&lt;p&gt;Let's say that relationship is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Person &amp;lt; AR
 has_many :readers
 has_many :posts, :through =&amp;gt;  :readers
end

post = Person.first.posts.build(:quality =&amp;gt; 'good')
puts post.person_id #=&amp;gt; 8&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As you can see in the above case the relationship already
exists. It's just that when post.save is called then no after_save
callback is made to persist a new reader record.&lt;/p&gt;
&lt;p&gt;In the after_save callback following two lines are needed. These
two lines create the association record when you create a new post
using Person.last.posts.create(..)&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;    through_association = @owner.send(@reflection.through_reflection.name)
    through_record = through_association.create!(construct_join_attributes(record))&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However I am stuck. I am stuck because I do not know how to set
an after_save callback on a given instance of post record. In this
case there is no such after_save callback on the Post class. It is
just that if a post instance is crated using build then those
instances need an after_save callback to persist the association
record.&lt;/p&gt;
&lt;p&gt;Long writeup. However I wanted to explain everything I did.
Someone who has more intimate knowledge of ActivRecord and a better
ruby user should be able to fix it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-12T04:01:08+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-05-12T04:01:12+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">11</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Please provide a failing test case and patch for this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please provide a failing test case and patch for this issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-13T23:48:42+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: has_many_through rails3
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>bugmash has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-05-13T23:48:46+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">12</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The failing test case is right there in the ticket.

Also here:
http://github.com/tilsammans/rails/commit/e613561734afb08cccae048d2fc2c9cd45d77440</body>
      <body-html>&lt;div&gt;&lt;p&gt;The failing test case is right there in the ticket.&lt;/p&gt;
&lt;p&gt;Also here:&lt;br&gt;
&lt;a href=
&quot;http://github.com/tilsammans/rails/commit/e613561734afb08cccae048d2fc2c9cd45d77440&quot;&gt;
http://github.com/tilsammans/rails/commit/e613561734afb08cccae048d2...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-14T01:24:19+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>bugmash has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-05-14T01:24:20+01:00</updated-at>
      <user-id type="integer">10656</user-id>
      <version type="integer">13</version>
      <user-name>joost baaij</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>After applying &quot;test_associate_by_saving_association.diff&quot;, included in the OP, I can confirm it's failing on master.</body>
      <body-html>&lt;div&gt;&lt;p&gt;After applying &quot;test_associate_by_saving_association.diff&quot;,
included in the OP, I can confirm it's failing on master.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-14T20:41:13+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>bugmash has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-05-14T20:41:15+01:00</updated-at>
      <user-id type="integer">44801</user-id>
      <version type="integer">14</version>
      <user-name>Lake</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just got bitten by this bug on 2.3.10.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just got bitten by this bug on 2.3.10.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T12:42:50+01:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>bugmash has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2010-10-19T12:42:53+01:00</updated-at>
      <user-id type="integer">37559</user-id>
      <version type="integer">15</version>
      <user-name>Mark Mulder</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Also bitten by this bug on 3.0.3. See http://github.com/radar/account_users_bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also bitten by this bug on 3.0.3. See &lt;a href=
&quot;http://github.com/radar/account_users_bug&quot;&gt;http://github.com/radar/account_users_bug&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-04T09:16:11+00:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>bugmash has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2011-01-04T09:16:36+00:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">16</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;a href=&quot;http://www.uggbootstore.org/ugg-kids&quot;&gt;Kids Ugg Boots 5991&lt;/a&gt;&lt;a href=&quot;http://www.uggbootsvv.com&quot;&gt;ugg boots clearance&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com&quot;&gt;nike air max 90&lt;/a&gt;&lt;a href=&quot;http://www.uggbootstore.org/2010-new-ugg&quot;&gt;2010 New Ugg&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-tassel-short&quot;&gt;UGG Tassel Short&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-classic-crochet-5833&quot;&gt;Ugg Classic Crochet 5833&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-roxy-tall-5818&quot;&gt;UGG Roxy Tall 5818&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-ultra-short-5225&quot;&gt;Ugg Ultra Short&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-classic-tall-stripe-cable-knit&quot;&gt;Ugg Classic Tall Stripe Cable Knit&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-classic-metallic&quot;&gt;Ugg Classic Metallic&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-classic-argyle-knit&quot;&gt;Ugg Classic Argyle Knit&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-infants-erin&quot;&gt;Ugg Infants Erin&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-classic-mini&quot;&gt;Ugg Classic Mini&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-classic-short&quot;&gt;Ugg Classic Short&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-classic-cardy&quot;&gt;Ugg Classic Cardy&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-classic-tall&quot;&gt;Ugg Classic Tall&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-sundance-ii&quot;&gt;Ugg Sundance II&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-ultra-tall&quot;&gt;Ugg Ultra Tall&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-nightfall&quot;&gt;Ugg Nightfall&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-classic-tall-romantic-flower&quot;&gt;Ugg Classic Tall Romantic Flower&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-bailey-button&quot;&gt;Ugg Bailey Button&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-slippers&quot;&gt;Ugg Slippers&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-handbags&quot;&gt;Ugg Handbags&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-casuals&quot;&gt;Ugg Casuals&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-sandals&quot;&gt;Ugg Sandals&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-ashur-tall-boots&quot;&gt;Ugg Ashur Tall Boots&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-delaine-1886&quot;&gt;Ugg Delaine 1886&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-coquette-slippers-5125&quot;&gt;Ugg Coquette Slippers 5125&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-original-sundance-5605&quot;&gt;Ugg Original Sundance 5605&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-bailey-button-krinkle-1873&quot;&gt;UGG Bailey Button Krinkle 1873&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-metalicfancy-bailey-button-5809&quot;&gt;Ugg MetalicFancy Bailey Button 5809&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-adirondack-short-boots-5469&quot;&gt;UGG Adirondack Short Boots 5469&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-adirondack-boots-ii-5498&quot;&gt;UGG Adirondack Boots II 5498&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-fringe-cardy-boots-1878&quot;&gt;UGG Fringe Cardy Boots 1878&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-kensington-boots-5678&quot;&gt;Ugg Kensington Boots 5678&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-kona-boots-5181&quot;&gt;Ugg Kona Boots 5181&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-sienna-miller-boots-5816&quot;&gt;Ugg Sienna Miller Boots 5816&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-scarves&quot;&gt;Ugg Scarves&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-sunburst-tall-boots-5218&quot;&gt;UGG Sunburst Tall Boots 5218&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-ultimate-tall-braid-boots-5340&quot;&gt;Ugg Ultimate Tall Braid Boots 5340&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-ultimate-short-5275&quot;&gt;UGG Ultimate Short 5275&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-felicity-boots-5450&quot;&gt;UGG Felicity Boots 5450&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-stella-boots-5453&quot;&gt;UGG Stella Boots 5453&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-broome-boots-5511&quot;&gt;Ugg Broome Boots 5511&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-gissella-boots-5593&quot;&gt;Ugg Gissella Boots 5593&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-brookfield-tall-boots-5594&quot;&gt;UGG Brookfield Tall Boots 5594&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-elsey-boots-5596&quot;&gt;UGG Elsey Boots 5596&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-suburb-crochet-tall-5733&quot;&gt;UGG Suburb Crochet Tall 5733&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-roseberry-boots-5734&quot;&gt;UGG Roseberry Boots 5734&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-tall-baroque-5852&quot;&gt;UGG Tall Baroque 5852&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-gloves&quot;&gt;UGG Gloves&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-jimmy-choo-boots-3042-&quot;&gt;Ugg Jimmy Choo Boots 3042 &lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-classic-tall-5815&quot;&gt;Ugg Classic Tall 5815&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org&quot;&gt;Ugg Classic Tall&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-24-7-men&quot;&gt;Nike Air Max 24 7 Men&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-24-7-womens&quot;&gt;Nike Air Max 24 7 Womens&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-2009-men&quot;&gt;Nike Air Max 2009 Men&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-2009-kids&quot;&gt;Nike Air Max 2009 Kids&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-2009-womens&quot;&gt;Nike Air Max 2009 Womens&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-2010-men&quot;&gt;Nike Air Max 2010 Men&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-2010-womens&quot;&gt;Nike Air Max 2010 Womens&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-2011-men&quot;&gt;Nike Air Max 2011 Men&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-2011-womens&quot;&gt;Nike Air Max 2011 Womens&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-2012&quot;&gt;Nike Air Max 2012&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-classic-bw&quot;&gt;Nike Air Max Classic Bw&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-tn-%E2%85%B2&quot;&gt;Nike Air Max TN &#8546;&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-ltd-men&quot;&gt;Nike Air Max Ltd Men&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-ltd-womens&quot;&gt;Nike Air Max Ltd Womens&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-ltd-2&quot;&gt;Nike Air Max Ltd 2&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-tn-men&quot;&gt;Nike Air Max TN Men&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-tn-kids&quot;&gt;Nike Air Max TN Kids&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-tn-women&quot;&gt;Nike Air Max TN Women&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-tn-8-men&quot;&gt;Nike Air Max TN 8 Men&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-tn-10-men&quot;&gt;Nike Air Max TN 10 Men&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-classic-bw-women&quot;&gt;Nike Air Max Classic BW Women&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-preview-men&quot;&gt;Nike Air Max Preview Men&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-2fal-men&quot;&gt;Nike Air Max 2Fal Men&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com/nike-air-max-2fal-womens&quot;&gt;Nike Air Max 2Fal Womens&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com&quot;&gt;Nike Air Max 90&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://www.uggbootstore.org/ugg-kids&quot;&gt;Kids Ugg Boots
5991&lt;/a&gt;&lt;a href=&quot;http://www.uggbootsvv.com&quot;&gt;ugg boots clearance&lt;/a&gt;
&lt;a href=&quot;http://www.buynikeairmax90.com&quot;&gt;nike air max
90&lt;/a&gt;&lt;a href=&quot;http://www.uggbootstore.org/2010-new-ugg&quot;&gt;2010 New
Ugg&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-tassel-short&quot;&gt;UGG
Tassel Short&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-classic-crochet-5833&quot;&gt;Ugg Classic
Crochet 5833&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-roxy-tall-5818&quot;&gt;UGG Roxy Tall
5818&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-ultra-short-5225&quot;&gt;Ugg Ultra
Short&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-classic-tall-stripe-cable-knit&quot;&gt;Ugg
Classic Tall Stripe Cable Knit&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-classic-metallic&quot;&gt;Ugg Classic
Metallic&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-classic-argyle-knit&quot;&gt;Ugg Classic
Argyle Knit&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-infants-erin&quot;&gt;Ugg Infants Erin&lt;/a&gt;
&lt;a href=&quot;http://www.uggbootstore.org/ugg-classic-mini&quot;&gt;Ugg Classic
Mini&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-classic-short&quot;&gt;Ugg Classic
Short&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-classic-cardy&quot;&gt;Ugg Classic
Cardy&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-classic-tall&quot;&gt;Ugg Classic Tall&lt;/a&gt;
&lt;a href=&quot;http://www.uggbootstore.org/ugg-sundance-ii&quot;&gt;Ugg Sundance
II&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-ultra-tall&quot;&gt;Ugg
Ultra Tall&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-nightfall&quot;&gt;Ugg Nightfall&lt;/a&gt;
&lt;a href=
&quot;http://www.uggbootstore.org/ugg-classic-tall-romantic-flower&quot;&gt;Ugg
Classic Tall Romantic Flower&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-bailey-button&quot;&gt;Ugg Bailey
Button&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-slippers&quot;&gt;Ugg
Slippers&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-handbags&quot;&gt;Ugg
Handbags&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-casuals&quot;&gt;Ugg
Casuals&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org/ugg-sandals&quot;&gt;Ugg
Sandals&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-ashur-tall-boots&quot;&gt;Ugg Ashur Tall
Boots&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-delaine-1886&quot;&gt;Ugg Delaine 1886&lt;/a&gt;
&lt;a href=
&quot;http://www.uggbootstore.org/ugg-coquette-slippers-5125&quot;&gt;Ugg
Coquette Slippers 5125&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-original-sundance-5605&quot;&gt;Ugg
Original Sundance 5605&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-bailey-button-krinkle-1873&quot;&gt;UGG
Bailey Button Krinkle 1873&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-metalicfancy-bailey-button-5809&quot;&gt;Ugg
MetalicFancy Bailey Button 5809&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-adirondack-short-boots-5469&quot;&gt;UGG
Adirondack Short Boots 5469&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-adirondack-boots-ii-5498&quot;&gt;UGG
Adirondack Boots II 5498&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-fringe-cardy-boots-1878&quot;&gt;UGG
Fringe Cardy Boots 1878&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-kensington-boots-5678&quot;&gt;Ugg
Kensington Boots 5678&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-kona-boots-5181&quot;&gt;Ugg Kona Boots
5181&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-sienna-miller-boots-5816&quot;&gt;Ugg
Sienna Miller Boots 5816&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-scarves&quot;&gt;Ugg Scarves&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-sunburst-tall-boots-5218&quot;&gt;UGG
Sunburst Tall Boots 5218&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-ultimate-tall-braid-boots-5340&quot;&gt;Ugg
Ultimate Tall Braid Boots 5340&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-ultimate-short-5275&quot;&gt;UGG Ultimate
Short 5275&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-felicity-boots-5450&quot;&gt;UGG Felicity
Boots 5450&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-stella-boots-5453&quot;&gt;UGG Stella
Boots 5453&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-broome-boots-5511&quot;&gt;Ugg Broome
Boots 5511&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-gissella-boots-5593&quot;&gt;Ugg Gissella
Boots 5593&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-brookfield-tall-boots-5594&quot;&gt;UGG
Brookfield Tall Boots 5594&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-elsey-boots-5596&quot;&gt;UGG Elsey Boots
5596&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-suburb-crochet-tall-5733&quot;&gt;UGG
Suburb Crochet Tall 5733&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-roseberry-boots-5734&quot;&gt;UGG
Roseberry Boots 5734&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-tall-baroque-5852&quot;&gt;UGG Tall
Baroque 5852&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-gloves&quot;&gt;UGG Gloves&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-jimmy-choo-boots-3042-&quot;&gt;Ugg Jimmy
Choo Boots 3042&lt;/a&gt; &lt;a href=
&quot;http://www.uggbootstore.org/ugg-classic-tall-5815&quot;&gt;Ugg Classic
Tall 5815&lt;/a&gt; &lt;a href=&quot;http://www.uggbootstore.org&quot;&gt;Ugg Classic
Tall&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-24-7-men&quot;&gt;Nike Air Max
24 7 Men&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-24-7-womens&quot;&gt;Nike Air
Max 24 7 Womens&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-2009-men&quot;&gt;Nike Air Max
2009 Men&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-2009-kids&quot;&gt;Nike Air
Max 2009 Kids&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-2009-womens&quot;&gt;Nike Air
Max 2009 Womens&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-2010-men&quot;&gt;Nike Air Max
2010 Men&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-2010-womens&quot;&gt;Nike Air
Max 2010 Womens&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-2011-men&quot;&gt;Nike Air Max
2011 Men&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-2011-womens&quot;&gt;Nike Air
Max 2011 Womens&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-2012&quot;&gt;Nike Air Max
2012&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-classic-bw&quot;&gt;Nike Air
Max Classic Bw&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-tn-%E2%85%B2&quot;&gt;Nike Air
Max TN &amp;#8546;&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-ltd-men&quot;&gt;Nike Air Max
Ltd Men&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-ltd-womens&quot;&gt;Nike Air
Max Ltd Womens&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-ltd-2&quot;&gt;Nike Air Max
Ltd 2&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-tn-men&quot;&gt;Nike Air Max
TN Men&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-tn-kids&quot;&gt;Nike Air Max
TN Kids&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-tn-women&quot;&gt;Nike Air Max
TN Women&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-tn-8-men&quot;&gt;Nike Air Max
TN 8 Men&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-tn-10-men&quot;&gt;Nike Air
Max TN 10 Men&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-classic-bw-women&quot;&gt;Nike
Air Max Classic BW Women&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-preview-men&quot;&gt;Nike Air
Max Preview Men&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-2fal-men&quot;&gt;Nike Air Max
2Fal Men&lt;/a&gt; &lt;a href=
&quot;http://www.buynikeairmax90.com/nike-air-max-2fal-womens&quot;&gt;Nike Air
Max 2Fal Womens&lt;/a&gt; &lt;a href=&quot;http://www.buynikeairmax90.com&quot;&gt;Nike
Air Max 90&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-12T11:31:02+00:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>bugmash has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2011-02-01T22:51:19+00:00</updated-at>
      <user-id type="integer">132214</user-id>
      <version type="integer">17</version>
      <user-name>jasonkid9527</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [91fd6510563f84ee473bb217bc63ed598abe3f24]) Allow building and then later saving has_many :through records, such that the join record is automatically saved too. This requires the :inverse_of option to be set on the source association in the join model. See the CHANGELOG for details. [#4329 state:resolved]
https://github.com/rails/rails/commit/91fd6510563f84ee473bb217bc63ed598abe3f24</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/91fd6510563f84ee473bb217bc63ed598abe3f24&quot;
title=
&quot;Changeset [91fd6510563f84ee473bb217bc63ed598abe3f24]&quot;&gt;[91fd6510563f84ee473bb217bc63ed598abe3f24]&lt;/a&gt;)
Allow building and then later saving has_many :through records,
such that the join record is automatically saved too. This requires
the :inverse_of option to be set on the source association in the
join model. See the CHANGELOG for details. [&lt;a href=
&quot;/projects/8994/tickets/4329&quot; title=&quot;Ticket #4329&quot;&gt;#4329&lt;/a&gt;
state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/91fd6510563f84ee473bb217bc63ed598abe3f24&quot;&gt;
https://github.com/rails/rails/commit/91fd6510563f84ee473bb217bc63e...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-18T17:15:26+00:00</created-at>
      <creator-id type="integer">93461</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4329</number>
      <permalink>has_many-through-association-does-not-link-models-on-association-save</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bugmash has_many_through rails3</tag>
      <title>has_many through association does not link models on association save</title>
      <updated-at type="datetime">2011-02-18T17:15:58+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">18</version>
      <user-name>Repository</user-name>
      <creator-name>Johannes Schmidt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4329</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>bbcadd60c37c3ca392303c424a05e3cb32f8a58e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-05T19:21:25+01:00</created-at>
      <filename>test_associate_by_saving_association.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">471536</id>
      <size type="integer">1021</size>
      <uploader-id type="integer">93461</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/471536/test_associate_by_saving_association.diff</url>
    </attachment>
  </attachments>
</ticket>
