<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-25T21:48:22+01:00</created-at>
  <creator-id type="integer">40510</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5462</number>
  <permalink>cannot-pass-class_name-symbol-in-belongs_to-in-ar-238-with-ruby-192</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>238 &quot;active record&quot; &quot;ruby 192&quot;</tag>
  <title>cannot pass {:class_name =&gt; symbol} in belongs_to in AR 2.3.8 with Ruby 1.9.2</title>
  <updated-at type="datetime">2011-02-02T17:02:44+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">5</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Suraj N. Kurapati</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5462</url>
  <priority-name nil="true"></priority-name>
  <original-body>With Ruby 1.9.2 and ActiveRecord 2.3.8, I get a &quot;TypeError: can't convert Symbol into String&quot; when trying to resolve a belongs_to association, whose :class_name was passed a symbol:

@@@ ruby
class Publication &lt; ActiveRecord::Base
  belongs_to :owner, :class_name =&gt; :User, :foreign_key =&gt; :user_id
end
@@@

If I change the :User symbol to a string, there is no error:

@@@ ruby
class Publication &lt; ActiveRecord::Base
  belongs_to :owner, :class_name =&gt; &quot;User&quot;, :foreign_key =&gt; :user_id
end
@@@

The error occurs at lib/active_record/base.rb:2232 because a symbol is passed to eval() instead of a String.  This used to work just fine in Ruby 1.9.1 (by accident!) because of a bug http://redmine.ruby-lang.org/issues/show/2699 that is now fixed in Ruby 1.9.2.

**My suggestion to fix the problem:**  make sure you run #to_s on the code being passed to eval().  IMHO this is generally a good thing to do, everywhere in Rails!

Thanks for your consideration.</original-body>
  <latest-body>With Ruby 1.9.2 and ActiveRecord 2.3.8, I get a &quot;TypeError: can't convert Symbol into String&quot; when trying to resolve a belongs_to association, whose :class_name was passed a symbol:

@@@ ruby
class Publication &lt; ActiveRecord::Base
  belongs_to :owner, :class_name =&gt; :User, :foreign_key =&gt; :user_id
end
@@@

If I change the :User symbol to a string, there is no error:

@@@ ruby
class Publication &lt; ActiveRecord::Base
  belongs_to :owner, :class_name =&gt; &quot;User&quot;, :foreign_key =&gt; :user_id
end
@@@

The error occurs at lib/active_record/base.rb:2232 because a symbol is passed to eval() instead of a String.  This used to work just fine in Ruby 1.9.1 (by accident!) because of a bug http://redmine.ruby-lang.org/issues/show/2699 that is now fixed in Ruby 1.9.2.

**My suggestion to fix the problem:**  make sure you run #to_s on the code being passed to eval().  IMHO this is generally a good thing to do, everywhere in Rails!

Thanks for your consideration.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;With Ruby 1.9.2 and ActiveRecord 2.3.8, I get a &quot;TypeError:
can't convert Symbol into String&quot; when trying to resolve a
belongs_to association, whose :class_name was passed a symbol:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Publication &amp;lt; ActiveRecord::Base
  belongs_to :owner, :class_name =&amp;gt; :User, :foreign_key =&amp;gt; :user_id
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If I change the :User symbol to a string, there is no error:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Publication &amp;lt; ActiveRecord::Base
  belongs_to :owner, :class_name =&amp;gt; &quot;User&quot;, :foreign_key =&amp;gt; :user_id
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The error occurs at lib/active_record/base.rb:2232 because a
symbol is passed to eval() instead of a String. This used to work
just fine in Ruby 1.9.1 (by accident!) because of a bug &lt;a href=
&quot;http://redmine.ruby-lang.org/issues/show/2699&quot;&gt;http://redmine.ruby-lang.org/issues/show/2699&lt;/a&gt;
that is now fixed in Ruby 1.9.2.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;My suggestion to fix the problem:&lt;/strong&gt; make sure you
run #to_s on the code being passed to eval(). IMHO this is
generally a good thing to do, everywhere in Rails!&lt;/p&gt;
&lt;p&gt;Thanks for your consideration.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>With Ruby 1.9.2 and ActiveRecord 2.3.8, I get a &quot;TypeError: can't convert Symbol into String&quot; when trying to resolve a belongs_to association, whose :class_name was passed a symbol:

@@@ ruby
class Publication &lt; ActiveRecord::Base
  belongs_to :owner, :class_name =&gt; :User, :foreign_key =&gt; :user_id
end
@@@

If I change the :User symbol to a string, there is no error:

@@@ ruby
class Publication &lt; ActiveRecord::Base
  belongs_to :owner, :class_name =&gt; &quot;User&quot;, :foreign_key =&gt; :user_id
end
@@@

The error occurs at lib/active_record/base.rb:2232 because a symbol is passed to eval() instead of a String.  This used to work just fine in Ruby 1.9.1 (by accident!) because of a bug http://redmine.ruby-lang.org/issues/show/2699 that is now fixed in Ruby 1.9.2.

**My suggestion to fix the problem:**  make sure you run #to_s on the code being passed to eval().  IMHO this is generally a good thing to do, everywhere in Rails!

Thanks for your consideration.</body>
      <body-html>&lt;div&gt;&lt;p&gt;With Ruby 1.9.2 and ActiveRecord 2.3.8, I get a &quot;TypeError:
can't convert Symbol into String&quot; when trying to resolve a
belongs_to association, whose :class_name was passed a symbol:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Publication &amp;lt; ActiveRecord::Base
  belongs_to :owner, :class_name =&amp;gt; :User, :foreign_key =&amp;gt; :user_id
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If I change the :User symbol to a string, there is no error:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Publication &amp;lt; ActiveRecord::Base
  belongs_to :owner, :class_name =&amp;gt; &quot;User&quot;, :foreign_key =&amp;gt; :user_id
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The error occurs at lib/active_record/base.rb:2232 because a
symbol is passed to eval() instead of a String. This used to work
just fine in Ruby 1.9.1 (by accident!) because of a bug &lt;a href=
&quot;http://redmine.ruby-lang.org/issues/show/2699&quot;&gt;http://redmine.ruby-lang.org/issues/show/2699&lt;/a&gt;
that is now fixed in Ruby 1.9.2.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;My suggestion to fix the problem:&lt;/strong&gt; make sure you
run #to_s on the code being passed to eval(). IMHO this is
generally a good thing to do, everywhere in Rails!&lt;/p&gt;
&lt;p&gt;Thanks for your consideration.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-25T21:48:22+01:00</created-at>
      <creator-id type="integer">40510</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5462</number>
      <permalink>cannot-pass-class_name-symbol-in-belongs_to-in-ar-238-with-ruby-192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>1.9.2 &quot;active record&quot; string</tag>
      <title>cannot pass {:class_name =&gt; symbol} in belongs_to in AR 2.3.8 with Ruby 1.9.2</title>
      <updated-at type="datetime">2010-08-25T21:50:50+01:00</updated-at>
      <user-id type="integer">40510</user-id>
      <version type="integer">1</version>
      <user-name>Suraj N. Kurapati</user-name>
      <creator-name>Suraj N. Kurapati</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5462</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-25T21:52:11+01:00</created-at>
      <creator-id type="integer">40510</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 1.9.2 &quot;active record&quot; string
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5462</number>
      <permalink>cannot-pass-class_name-symbol-in-belongs_to-in-ar-238-with-ruby-192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.8 &quot;active record&quot; &quot;ruby 1.9.2&quot;</tag>
      <title>cannot pass {:class_name =&gt; symbol} in belongs_to in AR 2.3.8 with Ruby 1.9.2</title>
      <updated-at type="datetime">2010-08-25T21:52:12+01:00</updated-at>
      <user-id type="integer">40510</user-id>
      <version type="integer">2</version>
      <user-name>Suraj N. Kurapati</user-name>
      <creator-name>Suraj N. Kurapati</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5462</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here is an ugly monkey-patch that makes Ruby 1.9.2 behave like Ruby 1.9.1 with respect to implicit Symbol to String conversion:

@@@ ruby
class Symbol
  alias to_str to_s
end
@@@

This ought to sustain my apps for now, until Rails 2.3.9 comes out soon with proper Ruby 1.9.2 support.  Cheers.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is an ugly monkey-patch that makes Ruby 1.9.2 behave like
Ruby 1.9.1 with respect to implicit Symbol to String
conversion:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Symbol
  alias to_str to_s
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This ought to sustain my apps for now, until Rails 2.3.9 comes
out soon with proper Ruby 1.9.2 support. Cheers.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-25T22:27:30+01:00</created-at>
      <creator-id type="integer">40510</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5462</number>
      <permalink>cannot-pass-class_name-symbol-in-belongs_to-in-ar-238-with-ruby-192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.8 &quot;active record&quot; &quot;ruby 1.9.2&quot;</tag>
      <title>cannot pass {:class_name =&gt; symbol} in belongs_to in AR 2.3.8 with Ruby 1.9.2</title>
      <updated-at type="datetime">2010-08-25T22:27:32+01:00</updated-at>
      <user-id type="integer">40510</user-id>
      <version type="integer">3</version>
      <user-name>Suraj N. Kurapati</user-name>
      <creator-name>Suraj N. Kurapati</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5462</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:33:37+00:00</created-at>
      <creator-id type="integer">40510</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.8 &quot;active record&quot; &quot;ruby 1.9.2&quot;
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5462</number>
      <permalink>cannot-pass-class_name-symbol-in-belongs_to-in-ar-238-with-ruby-192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>238 &quot;active record&quot; &quot;ruby 192&quot;</tag>
      <title>cannot pass {:class_name =&gt; symbol} in belongs_to in AR 2.3.8 with Ruby 1.9.2</title>
      <updated-at type="datetime">2011-02-02T17:02:44+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Suraj N. Kurapati</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5462</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:33:39+00:00</created-at>
      <creator-id type="integer">40510</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5462</number>
      <permalink>cannot-pass-class_name-symbol-in-belongs_to-in-ar-238-with-ruby-192</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>238 &quot;active record&quot; &quot;ruby 192&quot;</tag>
      <title>cannot pass {:class_name =&gt; symbol} in belongs_to in AR 2.3.8 with Ruby 1.9.2</title>
      <updated-at type="datetime">2011-02-02T17:02:31+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Suraj N. Kurapati</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5462</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
