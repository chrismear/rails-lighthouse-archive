From 97d874ad596fb79bd1ce184b8669eb5e3d85695f Mon Sep 17 00:00:00 2001
From: madlep <madlep@ubercharged.net>
Date: Fri, 3 Oct 2008 11:58:28 +1000
Subject: [PATCH] added nicer failure reporting to #assert_difference to tell you the expression that failed rather than just the expected and actual values

---
 .../testing/core_ext/test/unit/assertions.rb       |    8 ++++----
 activesupport/test/test_test.rb                    |    9 +++++++++
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/activesupport/lib/active_support/testing/core_ext/test/unit/assertions.rb b/activesupport/lib/active_support/testing/core_ext/test/unit/assertions.rb
index 63d1ba6..4a5e1a9 100644
--- a/activesupport/lib/active_support/testing/core_ext/test/unit/assertions.rb
+++ b/activesupport/lib/active_support/testing/core_ext/test/unit/assertions.rb
@@ -37,15 +37,15 @@ module Test
       #   end
       def assert_difference(expressions, difference = 1, message = nil, &block)
         expression_evaluations = Array(expressions).map do |expression|
-          lambda do
+          [expression, lambda do
             eval(expression, block.__send__(:binding))
-          end
+          end]
         end
 
-        original_values = expression_evaluations.inject([]) { |memo, expression| memo << expression.call }
+        original_values = expression_evaluations.inject([]) { |memo, expression| memo << expression[1].call }
         yield
         expression_evaluations.each_with_index do |expression, i|
-          assert_equal original_values[i] + difference, expression.call, message
+          assert_equal original_values[i] + difference, expression[1].call, "#{message}.\n<#{expression[0]}> was expression that failed"
         end
       end
 
diff --git a/activesupport/test/test_test.rb b/activesupport/test/test_test.rb
index 26a45af..45e2a26 100644
--- a/activesupport/test/test_test.rb
+++ b/activesupport/test/test_test.rb
@@ -60,6 +60,15 @@ class AssertDifferenceTest < Test::Unit::TestCase
         @object.increment
       end
     end
+    
+    def test_array_of_expressions_identify_failure_in_message
+      assert_difference ['@object.num', '1 + 1'], 1, 'something went wrong' do
+        @object.increment
+      end
+      fail 'should not get to here'
+    rescue Test::Unit::AssertionFailedError => e
+      assert_equal "something went wrong.\n<1 + 1> was expression that failed.\n<3> expected but was\n<2>.", e.message
+    end
   else
     def default_test; end
   end
-- 
1.5.6.2


From 6e94ab9cb2996188fd9ff78b3283d6b37354a35a Mon Sep 17 00:00:00 2001
From: madlep <madlep@ubercharged.net>
Date: Fri, 3 Oct 2008 12:14:56 +1000
Subject: [PATCH] improved message generation when no message provided by caller

---
 .../testing/core_ext/test/unit/assertions.rb       |    5 ++++-
 activesupport/test/test_test.rb                    |   11 ++++++++++-
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/activesupport/lib/active_support/testing/core_ext/test/unit/assertions.rb b/activesupport/lib/active_support/testing/core_ext/test/unit/assertions.rb
index 4a5e1a9..ae23d27 100644
--- a/activesupport/lib/active_support/testing/core_ext/test/unit/assertions.rb
+++ b/activesupport/lib/active_support/testing/core_ext/test/unit/assertions.rb
@@ -45,7 +45,10 @@ module Test
         original_values = expression_evaluations.inject([]) { |memo, expression| memo << expression[1].call }
         yield
         expression_evaluations.each_with_index do |expression, i|
-          assert_equal original_values[i] + difference, expression[1].call, "#{message}.\n<#{expression[0]}> was expression that failed"
+          full_message = ""
+          full_message << "#{message}.\n" if message
+          full_message << "<#{expression[0]}> was expression that failed"
+          assert_equal original_values[i] + difference, expression[1].call, full_message
         end
       end
 
diff --git a/activesupport/test/test_test.rb b/activesupport/test/test_test.rb
index 45e2a26..4573ede 100644
--- a/activesupport/test/test_test.rb
+++ b/activesupport/test/test_test.rb
@@ -60,8 +60,17 @@ class AssertDifferenceTest < Test::Unit::TestCase
         @object.increment
       end
     end
+
+    def test_array_of_expressions_identify_failure
+      assert_difference ['@object.num', '1 + 1'] do
+        @object.increment
+      end
+      fail 'should not get to here'
+    rescue Test::Unit::AssertionFailedError => e
+      assert_equal "<1 + 1> was expression that failed.\n<3> expected but was\n<2>.", e.message
+    end
     
-    def test_array_of_expressions_identify_failure_in_message
+    def test_array_of_expressions_identify_failure_when_message_provided
       assert_difference ['@object.num', '1 + 1'], 1, 'something went wrong' do
         @object.increment
       end
-- 
1.5.6.2

