<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-05-02T05:49:47+01:00</created-at>
  <creator-id type="integer">147638</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6761</number>
  <permalink>has_one-polymorphic-is-creating-circular-dependency-with-parent-model</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>has_one polymorphic is creating circular dependency with parent model</title>
  <updated-at type="datetime">2011-05-02T05:52:59+01:00</updated-at>
  <user-id type="integer">147638</user-id>
  <version type="integer">2</version>
  <user-name>Gabriel Mazetto</user-name>
  <creator-name>Gabriel Mazetto</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6761</url>
  <priority-name nil="true"></priority-name>
  <original-body>Use this two models:

class Item &lt; ActiveRecord::Base
  belongs_to :itemable, :polymorphic =&gt; true
end

class Product &lt; ActiveRecord::Base
  has_one :item, :as =&gt; :itemable, :dependent =&gt; destroy
  accepts_nested_attributes_for :item
end

now try to:

@product = Product.new(params[:product])
@product.build_item(params[:item])
@product.valid?

And you will get a error lacking the &quot;item.itemable_id&quot;

So, build_item is defining the correct itemable_type, but are not dealing with the id... I expect it to save &quot;course&quot; first, get it's id and them set it on itemable_id and then save &quot;item&quot;.</original-body>
  <latest-body>Use this two models:

class Item &lt; ActiveRecord::Base
  belongs_to :itemable, :polymorphic =&gt; true
end

class Product &lt; ActiveRecord::Base
  has_one :item, :as =&gt; :itemable, :dependent =&gt; destroy
  accepts_nested_attributes_for :item
end

now try to:

@product = Product.new(params[:product])
@product.build_item(params[:item])
@product.valid?

And you will get a error lacking the &quot;item.itemable_id&quot;

So, build_item is defining the correct itemable_type, but are not dealing with the id... I expect it to save &quot;course&quot; first, get it's id and them set it on itemable_id and then save &quot;item&quot;.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Use this two models:&lt;/p&gt;
&lt;p&gt;class Item &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :itemable, :polymorphic =&amp;gt; true end&lt;/p&gt;
&lt;p&gt;class Product &amp;lt; ActiveRecord::Base&lt;br&gt;
has_one :item, :as =&amp;gt; :itemable, :dependent =&amp;gt; destroy
accepts_nested_attributes_for :item end&lt;/p&gt;
&lt;p&gt;now try to:&lt;/p&gt;
&lt;p&gt;@product = Product.new(params[:product])
@product.build_item(params[:item]) @product.valid?&lt;/p&gt;
&lt;p&gt;And you will get a error lacking the &quot;item.itemable_id&quot;&lt;/p&gt;
&lt;p&gt;So, build_item is defining the correct itemable_type, but are
not dealing with the id... I expect it to save &quot;course&quot; first, get
it's id and them set it on itemable_id and then save &quot;item&quot;.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Use this two models:

class Item &lt; ActiveRecord::Base
  belongs_to :itemable, :polymorphic =&gt; true
end

class Product &lt; ActiveRecord::Base
  has_one :item, :as =&gt; :itemable, :dependent =&gt; destroy
  accepts_nested_attributes_for :item
end

now try to:

@product = Product.new(params[:product])
@product.build_item(params[:item])
@product.valid?

And you will get a error lacking the &quot;item.itemable_id&quot;

So, build_item is defining the correct itemable_type, but are not dealing with the id... I expect it to save &quot;course&quot; first, get it's id and them set it on itemable_id and then save &quot;item&quot;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Use this two models:&lt;/p&gt;
&lt;p&gt;class Item &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :itemable, :polymorphic =&amp;gt; true end&lt;/p&gt;
&lt;p&gt;class Product &amp;lt; ActiveRecord::Base&lt;br&gt;
has_one :item, :as =&amp;gt; :itemable, :dependent =&amp;gt; destroy
accepts_nested_attributes_for :item end&lt;/p&gt;
&lt;p&gt;now try to:&lt;/p&gt;
&lt;p&gt;@product = Product.new(params[:product])
@product.build_item(params[:item]) @product.valid?&lt;/p&gt;
&lt;p&gt;And you will get a error lacking the &quot;item.itemable_id&quot;&lt;/p&gt;
&lt;p&gt;So, build_item is defining the correct itemable_type, but are
not dealing with the id... I expect it to save &quot;course&quot; first, get
it's id and them set it on itemable_id and then save &quot;item&quot;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-05-02T05:49:47+01:00</created-at>
      <creator-id type="integer">147638</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6761</number>
      <permalink>has_one-polymorphic-is-creating-circular-dependency-with-parent-model</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has_one polymorphic is creating circular dependency with parent model</title>
      <updated-at type="datetime">2011-05-02T05:49:50+01:00</updated-at>
      <user-id type="integer">147638</user-id>
      <version type="integer">1</version>
      <user-name>Gabriel Mazetto</user-name>
      <creator-name>Gabriel Mazetto</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6761</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Also forget to mention that it's rails 3.0.7</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also forget to mention that it's rails 3.0.7&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-05-02T05:52:57+01:00</created-at>
      <creator-id type="integer">147638</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6761</number>
      <permalink>has_one-polymorphic-is-creating-circular-dependency-with-parent-model</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>has_one polymorphic is creating circular dependency with parent model</title>
      <updated-at type="datetime">2011-05-02T05:52:59+01:00</updated-at>
      <user-id type="integer">147638</user-id>
      <version type="integer">2</version>
      <user-name>Gabriel Mazetto</user-name>
      <creator-name>Gabriel Mazetto</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6761</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
