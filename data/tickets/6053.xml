<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-24T10:27:29+00:00</created-at>
  <creator-id type="integer">126506</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6053</number>
  <permalink>datetimeselector-does-not-create-proper-name-attribute-for-new-records</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>DateTimeSelector does not create proper name attribute for new records</title>
  <updated-at type="datetime">2011-03-08T00:00:16+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">4</version>
  <user-name>rails</user-name>
  <creator-name>Robert Sharp</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6053</url>
  <priority-name nil="true"></priority-name>
  <original-body>Rails 3.0.1

I am using time_select in a dynamically create field with `field_for` and the prefix it creates for a new object is missing the empty index array. The attribute it creates is: `name=&quot;day[new_rule_attributes][start(1i)]&quot;` but it should be `name=&quot;day[new_rule_attributes][][start(1i)]&quot;`. This would be consistent with other fields generated the same way. For example, on the same form `f.text_field` creates `name=&quot;day[new_rule_attributes][][action]&quot;`.

The cause appears to be in the private function `input_name_from_type` in *date_helper.rb*:

    def input_name_from_type(type)
      prefix = @options[:prefix] || ActionView::Helpers::DateTimeSelector::DEFAULT_PREFIX
      prefix += &quot;[#{@options[:index]}]&quot; if @options.has_key?(:index)

      field_name = @options[:field_name] || type
      if @options[:include_position]
        field_name += &quot;(#{ActionView::Helpers::DateTimeSelector::POSITION[type]}i)&quot;
      end

      @options[:discard_type] ? prefix : &quot;#{prefix}[#{field_name}]&quot;
    end


In line 866 (3rd line above) the array is only added if the object has a key (set somewhere earlier). Shouldn't the proper behaviour be to add an empty array if there was no key?</original-body>
  <latest-body>Rails 3.0.1

I am using time_select in a dynamically create field with `field_for` and the prefix it creates for a new object is missing the empty index array. The attribute it creates is: `name=&quot;day[new_rule_attributes][start(1i)]&quot;` but it should be `name=&quot;day[new_rule_attributes][][start(1i)]&quot;`. This would be consistent with other fields generated the same way. For example, on the same form `f.text_field` creates `name=&quot;day[new_rule_attributes][][action]&quot;`.

The cause appears to be in the private function `input_name_from_type` in *date_helper.rb*:

    def input_name_from_type(type)
      prefix = @options[:prefix] || ActionView::Helpers::DateTimeSelector::DEFAULT_PREFIX
      prefix += &quot;[#{@options[:index]}]&quot; if @options.has_key?(:index)

      field_name = @options[:field_name] || type
      if @options[:include_position]
        field_name += &quot;(#{ActionView::Helpers::DateTimeSelector::POSITION[type]}i)&quot;
      end

      @options[:discard_type] ? prefix : &quot;#{prefix}[#{field_name}]&quot;
    end


In line 866 (3rd line above) the array is only added if the object has a key (set somewhere earlier). Shouldn't the proper behaviour be to add an empty array if there was no key?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Rails 3.0.1&lt;/p&gt;
&lt;p&gt;I am using time_select in a dynamically create field with
&lt;code&gt;field_for&lt;/code&gt; and the prefix it creates for a new object
is missing the empty index array. The attribute it creates is:
&lt;code&gt;name=&quot;day[new_rule_attributes][start(1i)]&quot;&lt;/code&gt; but it
should be
&lt;code&gt;name=&quot;day[new_rule_attributes][][start(1i)]&quot;&lt;/code&gt;. This
would be consistent with other fields generated the same way. For
example, on the same form &lt;code&gt;f.text_field&lt;/code&gt; creates
&lt;code&gt;name=&quot;day[new_rule_attributes][][action]&quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The cause appears to be in the private function
&lt;code&gt;input_name_from_type&lt;/code&gt; in &lt;em&gt;date_helper.rb&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def input_name_from_type(type)
  prefix = @options[:prefix] || ActionView::Helpers::DateTimeSelector::DEFAULT_PREFIX
  prefix += &quot;[#{@options[:index]}]&quot; if @options.has_key?(:index)

  field_name = @options[:field_name] || type
  if @options[:include_position]
    field_name += &quot;(#{ActionView::Helpers::DateTimeSelector::POSITION[type]}i)&quot;
  end

  @options[:discard_type] ? prefix : &quot;#{prefix}[#{field_name}]&quot;
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In line 866 (3rd line above) the array is only added if the
object has a key (set somewhere earlier). Shouldn't the proper
behaviour be to add an empty array if there was no key?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Rails 3.0.1

I am using time_select in a dynamically create field with `field_for` and the prefix it creates for a new object is missing the empty index array. The attribute it creates is: `name=&quot;day[new_rule_attributes][start(1i)]&quot;` but it should be `name=&quot;day[new_rule_attributes][][start(1i)]&quot;`. This would be consistent with other fields generated the same way. For example, on the same form `f.text_field` creates `name=&quot;day[new_rule_attributes][][action]&quot;`.

The cause appears to be in the private function `input_name_from_type` in *date_helper.rb*:

    def input_name_from_type(type)
      prefix = @options[:prefix] || ActionView::Helpers::DateTimeSelector::DEFAULT_PREFIX
      prefix += &quot;[#{@options[:index]}]&quot; if @options.has_key?(:index)

      field_name = @options[:field_name] || type
      if @options[:include_position]
        field_name += &quot;(#{ActionView::Helpers::DateTimeSelector::POSITION[type]}i)&quot;
      end

      @options[:discard_type] ? prefix : &quot;#{prefix}[#{field_name}]&quot;
    end


In line 866 (3rd line above) the array is only added if the object has a key (set somewhere earlier). Shouldn't the proper behaviour be to add an empty array if there was no key?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails 3.0.1&lt;/p&gt;
&lt;p&gt;I am using time_select in a dynamically create field with
&lt;code&gt;field_for&lt;/code&gt; and the prefix it creates for a new object
is missing the empty index array. The attribute it creates is:
&lt;code&gt;name=&quot;day[new_rule_attributes][start(1i)]&quot;&lt;/code&gt; but it
should be
&lt;code&gt;name=&quot;day[new_rule_attributes][][start(1i)]&quot;&lt;/code&gt;. This
would be consistent with other fields generated the same way. For
example, on the same form &lt;code&gt;f.text_field&lt;/code&gt; creates
&lt;code&gt;name=&quot;day[new_rule_attributes][][action]&quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The cause appears to be in the private function
&lt;code&gt;input_name_from_type&lt;/code&gt; in &lt;em&gt;date_helper.rb&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def input_name_from_type(type)
  prefix = @options[:prefix] || ActionView::Helpers::DateTimeSelector::DEFAULT_PREFIX
  prefix += &quot;[#{@options[:index]}]&quot; if @options.has_key?(:index)

  field_name = @options[:field_name] || type
  if @options[:include_position]
    field_name += &quot;(#{ActionView::Helpers::DateTimeSelector::POSITION[type]}i)&quot;
  end

  @options[:discard_type] ? prefix : &quot;#{prefix}[#{field_name}]&quot;
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In line 866 (3rd line above) the array is only added if the
object has a key (set somewhere earlier). Shouldn't the proper
behaviour be to add an empty array if there was no key?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-24T10:27:29+00:00</created-at>
      <creator-id type="integer">126506</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6053</number>
      <permalink>datetimeselector-does-not-create-proper-name-attribute-for-new-records</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>DateTimeSelector does not create proper name attribute for new records</title>
      <updated-at type="datetime">2010-11-24T10:27:31+00:00</updated-at>
      <user-id type="integer">126506</user-id>
      <version type="integer">1</version>
      <user-name>Robert Sharp</user-name>
      <creator-name>Robert Sharp</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6053</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Suggest this is ditched. Seems to cause date_select to put in brackets where rails does not expect them. Reverted to original code and used :index=&gt;'' to get the empty brackets where they are needed.

Is it just me or is this not really working as it should? Why should I have to be concerned with forcing these brackets in for some fields and not for others? Either the design should surface the issue or hide it, not a mixture of both?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Suggest this is ditched. Seems to cause date_select to put in
brackets where rails does not expect them. Reverted to original
code and used :index=&amp;gt;'' to get the empty brackets where they
are needed.&lt;/p&gt;
&lt;p&gt;Is it just me or is this not really working as it should? Why
should I have to be concerned with forcing these brackets in for
some fields and not for others? Either the design should surface
the issue or hide it, not a mixture of both?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-07T16:31:05+00:00</created-at>
      <creator-id type="integer">126506</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6053</number>
      <permalink>datetimeselector-does-not-create-proper-name-attribute-for-new-records</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>DateTimeSelector does not create proper name attribute for new records</title>
      <updated-at type="datetime">2010-12-07T16:32:03+00:00</updated-at>
      <user-id type="integer">126506</user-id>
      <version type="integer">2</version>
      <user-name>Robert Sharp</user-name>
      <creator-name>Robert Sharp</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6053</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-08T00:00:10+00:00</created-at>
      <creator-id type="integer">126506</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6053</number>
      <permalink>datetimeselector-does-not-create-proper-name-attribute-for-new-records</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>DateTimeSelector does not create proper name attribute for new records</title>
      <updated-at type="datetime">2011-03-08T00:00:13+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>Robert Sharp</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6053</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-08T00:00:10+00:00</created-at>
      <creator-id type="integer">126506</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6053</number>
      <permalink>datetimeselector-does-not-create-proper-name-attribute-for-new-records</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>DateTimeSelector does not create proper name attribute for new records</title>
      <updated-at type="datetime">2011-03-08T00:00:16+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>Robert Sharp</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6053</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
