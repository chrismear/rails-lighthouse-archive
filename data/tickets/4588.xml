<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-13T02:24:14+01:00</created-at>
  <creator-id type="integer">20836</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4588</number>
  <permalink>cache-incrementdecrement-with-initialization-when-missing-value</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>patch</tag>
  <title>Cache increment/decrement with initialization when missing value</title>
  <updated-at type="datetime">2011-02-02T17:24:05+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">4</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Lawrence Pit</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4588</url>
  <priority-name nil="true"></priority-name>
  <original-body>This patch makes incrementing/decrementing values using Rails.cache easier, particularly if one uses memcache. For proper use of incr/decr using memcache see http://code.google.com/p/memcached/wiki/NewProgramming#Proper_Use_of_incr_or_%60decr

This patch allows passing in a block to the +increment+ and +decrement+ methods of Rails.cache, similarly to how +Rails.cache.fetch+ works.

Note that the implementation for mem_cache_store takes some pain away by storing the initial value raw and using +add+ instead of +set+, and retries an increment/decrement in case +add+ returns +false+.

This patch also adds a missing test to the increment/decrement behavior test, namely the one that tests for +nil+, and has modified mem_cache_store so that it's behavior is consistent with the other cache stores.</original-body>
  <latest-body>This patch makes incrementing/decrementing values using Rails.cache easier, particularly if one uses memcache. For proper use of incr/decr using memcache see http://code.google.com/p/memcached/wiki/NewProgramming#Proper_Use_of_incr_or_%60decr

This patch allows passing in a block to the +increment+ and +decrement+ methods of Rails.cache, similarly to how +Rails.cache.fetch+ works.

Note that the implementation for mem_cache_store takes some pain away by storing the initial value raw and using +add+ instead of +set+, and retries an increment/decrement in case +add+ returns +false+.

This patch also adds a missing test to the increment/decrement behavior test, namely the one that tests for +nil+, and has modified mem_cache_store so that it's behavior is consistent with the other cache stores.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This patch makes incrementing/decrementing values using
Rails.cache easier, particularly if one uses memcache. For proper
use of incr/decr using memcache see &lt;a href=
&quot;http://code.google.com/p/memcached/wiki/NewProgramming#Proper_Use_of_incr_or_%60decr&quot;&gt;
http://code.google.com/p/memcached/wiki/NewProgramming#Proper_Use_o...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This patch allows passing in a block to the +increment+ and
+decrement+ methods of Rails.cache, similarly to how
+Rails.cache.fetch+ works.&lt;/p&gt;
&lt;p&gt;Note that the implementation for mem_cache_store takes some pain
away by storing the initial value raw and using +add+ instead of
+set+, and retries an increment/decrement in case +add+ returns
+false+.&lt;/p&gt;
&lt;p&gt;This patch also adds a missing test to the increment/decrement
behavior test, namely the one that tests for +nil+, and has
modified mem_cache_store so that it's behavior is consistent with
the other cache stores.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This patch makes incrementing/decrementing values using Rails.cache easier, particularly if one uses memcache. For proper use of incr/decr using memcache see http://code.google.com/p/memcached/wiki/NewProgramming#Proper_Use_of_incr_or_%60decr

This patch allows passing in a block to the +increment+ and +decrement+ methods of Rails.cache, similarly to how +Rails.cache.fetch+ works.

Note that the implementation for mem_cache_store takes some pain away by storing the initial value raw and using +add+ instead of +set+, and retries an increment/decrement in case +add+ returns +false+.

This patch also adds a missing test to the increment/decrement behavior test, namely the one that tests for +nil+, and has modified mem_cache_store so that it's behavior is consistent with the other cache stores.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This patch makes incrementing/decrementing values using
Rails.cache easier, particularly if one uses memcache. For proper
use of incr/decr using memcache see &lt;a href=
&quot;http://code.google.com/p/memcached/wiki/NewProgramming#Proper_Use_of_incr_or_%60decr&quot;&gt;
http://code.google.com/p/memcached/wiki/NewProgramming#Proper_Use_o...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This patch allows passing in a block to the +increment+ and
+decrement+ methods of Rails.cache, similarly to how
+Rails.cache.fetch+ works.&lt;/p&gt;
&lt;p&gt;Note that the implementation for mem_cache_store takes some pain
away by storing the initial value raw and using +add+ instead of
+set+, and retries an increment/decrement in case +add+ returns
+false+.&lt;/p&gt;
&lt;p&gt;This patch also adds a missing test to the increment/decrement
behavior test, namely the one that tests for +nil+, and has
modified mem_cache_store so that it's behavior is consistent with
the other cache stores.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-13T02:24:14+01:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4588</number>
      <permalink>cache-incrementdecrement-with-initialization-when-missing-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Cache increment/decrement with initialization when missing value</title>
      <updated-at type="datetime">2010-05-13T02:24:18+01:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">1</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4588</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-08T05:19:57+01:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4588</number>
      <permalink>cache-incrementdecrement-with-initialization-when-missing-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>Cache increment/decrement with initialization when missing value</title>
      <updated-at type="datetime">2010-06-08T05:19:58+01:00</updated-at>
      <user-id type="integer">20836</user-id>
      <version type="integer">2</version>
      <user-name>Lawrence Pit</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4588</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:37:52+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4588</number>
      <permalink>cache-incrementdecrement-with-initialization-when-missing-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>patch</tag>
      <title>Cache increment/decrement with initialization when missing value</title>
      <updated-at type="datetime">2011-02-02T17:23:13+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4588</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:37:53+00:00</created-at>
      <creator-id type="integer">20836</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4588</number>
      <permalink>cache-incrementdecrement-with-initialization-when-missing-value</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>patch</tag>
      <title>Cache increment/decrement with initialization when missing value</title>
      <updated-at type="datetime">2011-02-02T17:24:05+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Lawrence Pit</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4588</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5520ee4864ec0c7096b2af0af823cc052d1d3c00</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-13T02:24:14+01:00</created-at>
      <filename>incrdecr.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">519517</id>
      <size type="integer">10593</size>
      <uploader-id type="integer">20836</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/519517/incrdecr.diff</url>
    </attachment>
  </attachments>
</ticket>
