<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-11-29T21:14:58+00:00</created-at>
  <creator-id type="integer">66877</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6086</number>
  <permalink>draggable_element_js-returns-syntax-error-when-used-seperately</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>helper rdoc scriptaculous</tag>
  <title>draggable_element_js returns syntax error when used seperately</title>
  <updated-at type="datetime">2011-03-01T00:01:02+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">3</version>
  <user-name>rails</user-name>
  <creator-name>Jaap Haagmans</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6086</url>
  <priority-name nil="true"></priority-name>
  <original-body>When generating draggable elements from a collection, I'd like to do something like this:

&lt;%= javascript_tag do %&gt;
  &lt;%- collection.each do |element| -%&gt;
    &lt;%= draggable_element_js &quot;element_#{element.id}&quot; %&gt;
  &lt;%- end -%&gt;
&lt;% end %&gt;

However, this returns the following javascript which results in a syntax error:

new Draggable(&amp; quot;element_6&amp; quot;, {revert:true});

NB: I edited the above, there's no space between the &amp; and quot;, but your browser might translate it to &quot; otherwise.

It works when you do the iteration outside of the javascript_tag, but the point of using draggable_element_js is that it won't generate a javascript tag for every element. I prefer that.

I now fix this by doing this:
..
    &lt;%= raw draggable_element_js &quot;element_#{element.id}&quot; %&gt;
..

I'm not sure what the expected behaviour is for this method. If it's only meant to be used inside the javascript_tag method and not in an iteration, that should be documented somewhere. My solution feels like a workaround, not expected behaviour.</original-body>
  <latest-body>When generating draggable elements from a collection, I'd like to do something like this:

&lt;%= javascript_tag do %&gt;
  &lt;%- collection.each do |element| -%&gt;
    &lt;%= draggable_element_js &quot;element_#{element.id}&quot; %&gt;
  &lt;%- end -%&gt;
&lt;% end %&gt;

However, this returns the following javascript which results in a syntax error:

new Draggable(&amp; quot;element_6&amp; quot;, {revert:true});

NB: I edited the above, there's no space between the &amp; and quot;, but your browser might translate it to &quot; otherwise.

It works when you do the iteration outside of the javascript_tag, but the point of using draggable_element_js is that it won't generate a javascript tag for every element. I prefer that.

I now fix this by doing this:
..
    &lt;%= raw draggable_element_js &quot;element_#{element.id}&quot; %&gt;
..

I'm not sure what the expected behaviour is for this method. If it's only meant to be used inside the javascript_tag method and not in an iteration, that should be documented somewhere. My solution feels like a workaround, not expected behaviour.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When generating draggable elements from a collection, I'd like
to do something like this:&lt;/p&gt;
&lt;p&gt;&amp;lt;%= javascript_tag do %&amp;gt;&lt;br&gt;
&amp;lt;%- collection.each do |element| -%&amp;gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= draggable_element_js &quot;element_#{element.id}&quot; %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;%- end -%&amp;gt; &amp;lt;% end %&amp;gt;&lt;/p&gt;
&lt;p&gt;However, this returns the following javascript which results in
a syntax error:&lt;/p&gt;
&lt;p&gt;new Draggable(&amp;amp; quot;element_6&amp;amp; quot;,
{revert:true});&lt;/p&gt;
&lt;p&gt;NB: I edited the above, there's no space between the &amp;amp; and
quot;, but your browser might translate it to &quot; otherwise.&lt;/p&gt;
&lt;p&gt;It works when you do the iteration outside of the
javascript_tag, but the point of using draggable_element_js is that
it won't generate a javascript tag for every element. I prefer
that.&lt;/p&gt;
&lt;p&gt;I now fix this by doing this:&lt;br&gt;
..&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= raw draggable_element_js &quot;element_#{element.id}&quot; %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;..&lt;/p&gt;
&lt;p&gt;I'm not sure what the expected behaviour is for this method. If
it's only meant to be used inside the javascript_tag method and not
in an iteration, that should be documented somewhere. My solution
feels like a workaround, not expected behaviour.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When generating draggable elements from a collection, I'd like to do something like this:

&lt;%= javascript_tag do %&gt;
  &lt;%- collection.each do |element| -%&gt;
    &lt;%= draggable_element_js &quot;element_#{element.id}&quot; %&gt;
  &lt;%- end -%&gt;
&lt;% end %&gt;

However, this returns the following javascript which results in a syntax error:

new Draggable(&amp; quot;element_6&amp; quot;, {revert:true});

NB: I edited the above, there's no space between the &amp; and quot;, but your browser might translate it to &quot; otherwise.

It works when you do the iteration outside of the javascript_tag, but the point of using draggable_element_js is that it won't generate a javascript tag for every element. I prefer that.

I now fix this by doing this:
..
    &lt;%= raw draggable_element_js &quot;element_#{element.id}&quot; %&gt;
..

I'm not sure what the expected behaviour is for this method. If it's only meant to be used inside the javascript_tag method and not in an iteration, that should be documented somewhere. My solution feels like a workaround, not expected behaviour.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When generating draggable elements from a collection, I'd like
to do something like this:&lt;/p&gt;
&lt;p&gt;&amp;lt;%= javascript_tag do %&amp;gt;&lt;br&gt;
&amp;lt;%- collection.each do |element| -%&amp;gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= draggable_element_js &quot;element_#{element.id}&quot; %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&amp;lt;%- end -%&amp;gt; &amp;lt;% end %&amp;gt;&lt;/p&gt;
&lt;p&gt;However, this returns the following javascript which results in
a syntax error:&lt;/p&gt;
&lt;p&gt;new Draggable(&amp;amp; quot;element_6&amp;amp; quot;,
{revert:true});&lt;/p&gt;
&lt;p&gt;NB: I edited the above, there's no space between the &amp;amp; and
quot;, but your browser might translate it to &quot; otherwise.&lt;/p&gt;
&lt;p&gt;It works when you do the iteration outside of the
javascript_tag, but the point of using draggable_element_js is that
it won't generate a javascript tag for every element. I prefer
that.&lt;/p&gt;
&lt;p&gt;I now fix this by doing this:&lt;br&gt;
..&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;%= raw draggable_element_js &quot;element_#{element.id}&quot; %&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;..&lt;/p&gt;
&lt;p&gt;I'm not sure what the expected behaviour is for this method. If
it's only meant to be used inside the javascript_tag method and not
in an iteration, that should be documented somewhere. My solution
feels like a workaround, not expected behaviour.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-29T21:14:58+00:00</created-at>
      <creator-id type="integer">66877</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6086</number>
      <permalink>draggable_element_js-returns-syntax-error-when-used-seperately</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>helper rdoc scriptaculous</tag>
      <title>draggable_element_js returns syntax error when used seperately</title>
      <updated-at type="datetime">2010-11-29T22:17:56+00:00</updated-at>
      <user-id type="integer">66877</user-id>
      <version type="integer">1</version>
      <user-name>Jaap Haagmans</user-name>
      <creator-name>Jaap Haagmans</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6086</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-01T00:00:14+00:00</created-at>
      <creator-id type="integer">66877</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6086</number>
      <permalink>draggable_element_js-returns-syntax-error-when-used-seperately</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>helper rdoc scriptaculous</tag>
      <title>draggable_element_js returns syntax error when used seperately</title>
      <updated-at type="datetime">2011-03-01T00:00:40+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">2</version>
      <user-name>rails</user-name>
      <creator-name>Jaap Haagmans</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6086</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-01T00:00:14+00:00</created-at>
      <creator-id type="integer">66877</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6086</number>
      <permalink>draggable_element_js-returns-syntax-error-when-used-seperately</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>helper rdoc scriptaculous</tag>
      <title>draggable_element_js returns syntax error when used seperately</title>
      <updated-at type="datetime">2011-03-01T00:01:02+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>Jaap Haagmans</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6086</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
