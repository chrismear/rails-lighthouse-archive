<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">4</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-07T10:56:57+01:00</created-at>
  <creator-id type="integer">106646</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5337</number>
  <permalink>accepts_nested_attributes_for-bug</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;active record&quot; activerecord associations &quot;nested attributes&quot; &quot;rails 3.0.0.beta4&quot;</tag>
  <title>accepts_nested_attributes_for bug?</title>
  <updated-at type="datetime">2010-10-07T20:56:08+01:00</updated-at>
  <user-id type="integer">65050</user-id>
  <version type="integer">7</version>
  <user-name>David Trasbo</user-name>
  <creator-name>Matt Simpson</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5337</url>
  <priority-name>Low</priority-name>
  <original-body>I have a new model object
with accepts_nested_attributes_for to an associated model
When I go to the html form, the fields for those nested attributes are not rendered

But, if I have a model object where that associated model object is saved, the form is rendered with the correct data.

Is there anything I need to do to get the form fields for the nested attributes render when no data exists?  Or is this method only for associated objects already created?

I've attached screenshots.  1 has data and renders the form, the other does not.

Models:

@@@ ruby
class Booking &lt; ActiveRecord::Base
  has_one :event_address, :as =&gt; :addressee

  accepts_nested_attributes_for :event_address
end

class EventAddress &lt; ActiveRecord::Base
  belongs_to :addressee, :polymorphic =&gt; true
end
@@@

Haml:

@@@ haml
= form_for @booking, :url =&gt; booking_event_information_path(@booking) do |f|
  = f.error_messages
  
  = f.fields_for :event_address do |f2| 
    = f2.label :address_1, &quot;Address&quot;
    = f2.text_field :address_1
    %br
  
    = f2.label :address_2
    = f2.text_field :address_2
    %br
  
  = f.submit &quot;Save event information&quot;
@@@

Any help is much helpful :) Thanks.</original-body>
  <latest-body>I have a new model object
with accepts_nested_attributes_for to an associated model
When I go to the html form, the fields for those nested attributes are not rendered

But, if I have a model object where that associated model object is saved, the form is rendered with the correct data.

Is there anything I need to do to get the form fields for the nested attributes render when no data exists?  Or is this method only for associated objects already created?

I've attached screenshots.  1 has data and renders the form, the other does not.

Models:

@@@ ruby
class Booking &lt; ActiveRecord::Base
  has_one :event_address, :as =&gt; :addressee

  accepts_nested_attributes_for :event_address
end

class EventAddress &lt; ActiveRecord::Base
  belongs_to :addressee, :polymorphic =&gt; true
end
@@@

Haml:

@@@ haml
= form_for @booking, :url =&gt; booking_event_information_path(@booking) do |f|
  = f.error_messages
  
  = f.fields_for :event_address do |f2| 
    = f2.label :address_1, &quot;Address&quot;
    = f2.text_field :address_1
    %br
  
    = f2.label :address_2
    = f2.text_field :address_2
    %br
  
  = f.submit &quot;Save event information&quot;
@@@

Any help is much helpful :) Thanks.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have a new model object&lt;br&gt;
with accepts_nested_attributes_for to an associated model&lt;br&gt;
When I go to the html form, the fields for those nested attributes
are not rendered&lt;/p&gt;
&lt;p&gt;But, if I have a model object where that associated model object
is saved, the form is rendered with the correct data.&lt;/p&gt;
&lt;p&gt;Is there anything I need to do to get the form fields for the
nested attributes render when no data exists? Or is this method
only for associated objects already created?&lt;/p&gt;
&lt;p&gt;I've attached screenshots. 1 has data and renders the form, the
other does not.&lt;/p&gt;
&lt;p&gt;Models:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Booking &amp;lt; ActiveRecord::Base
  has_one :event_address, :as =&amp;gt; :addressee

  accepts_nested_attributes_for :event_address
end

class EventAddress &amp;lt; ActiveRecord::Base
  belongs_to :addressee, :polymorphic =&amp;gt; true
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Haml:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;haml&quot;&gt;= form_for @booking, :url =&amp;gt; booking_event_information_path(@booking) do |f|
  = f.error_messages
  
  = f.fields_for :event_address do |f2| 
    = f2.label :address_1, &quot;Address&quot;
    = f2.text_field :address_1
    %br
  
    = f2.label :address_2
    = f2.text_field :address_2
    %br
  
  = f.submit &quot;Save event information&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Any help is much helpful :) Thanks.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a new model object
with accepts_nested_attributes_for to an associated model
When I go to the html form, the fields for those nested attributes are not rendered

But, if I have a model object where that associated model object is saved, the form is rendered with the correct data.

Is there anything I need to do to get the form fields for the nested attributes render when no data exists?  Or is this method only for associated objects already created?

I've attached screenshots.  1 has data and renders the form, the other does not.

Models:

@@@ ruby
class Booking &lt; ActiveRecord::Base
  has_one :event_address, :as =&gt; :addressee

  accepts_nested_attributes_for :event_address
end

class EventAddress &lt; ActiveRecord::Base
  belongs_to :addressee, :polymorphic =&gt; true
end
@@@

Haml:

@@@ haml
= form_for @booking, :url =&gt; booking_event_information_path(@booking) do |f|
  = f.error_messages
  
  = f.fields_for :event_address do |f2| 
    = f2.label :address_1, &quot;Address&quot;
    = f2.text_field :address_1
    %br
  
    = f2.label :address_2
    = f2.text_field :address_2
    %br
  
  = f.submit &quot;Save event information&quot;
@@@

Any help is much helpful :) Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a new model object&lt;br&gt;
with accepts_nested_attributes_for to an associated model&lt;br&gt;
When I go to the html form, the fields for those nested attributes
are not rendered&lt;/p&gt;
&lt;p&gt;But, if I have a model object where that associated model object
is saved, the form is rendered with the correct data.&lt;/p&gt;
&lt;p&gt;Is there anything I need to do to get the form fields for the
nested attributes render when no data exists? Or is this method
only for associated objects already created?&lt;/p&gt;
&lt;p&gt;I've attached screenshots. 1 has data and renders the form, the
other does not.&lt;/p&gt;
&lt;p&gt;Models:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Booking &amp;lt; ActiveRecord::Base
  has_one :event_address, :as =&amp;gt; :addressee

  accepts_nested_attributes_for :event_address
end

class EventAddress &amp;lt; ActiveRecord::Base
  belongs_to :addressee, :polymorphic =&amp;gt; true
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Haml:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;haml&quot;&gt;= form_for @booking, :url =&amp;gt; booking_event_information_path(@booking) do |f|
  = f.error_messages
  
  = f.fields_for :event_address do |f2| 
    = f2.label :address_1, &quot;Address&quot;
    = f2.text_field :address_1
    %br
  
    = f2.label :address_2
    = f2.text_field :address_2
    %br
  
  = f.submit &quot;Save event information&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Any help is much helpful :) Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-09T05:59:53+01:00</created-at>
      <creator-id type="integer">106646</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5337</number>
      <permalink>accepts_nested_attributes_for-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; activerecord &quot;activerecord associations&quot; &quot;nested attributes&quot;</tag>
      <title>accepts_nested_attributes_for bug?</title>
      <updated-at type="datetime">2010-08-09T05:59:56+01:00</updated-at>
      <user-id type="integer">106646</user-id>
      <version type="integer">1</version>
      <user-name>Matt Simpson</user-name>
      <creator-name>Matt Simpson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5337</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Make sure that you're building the nested model in the controller before rendering the form:
@@@ ruby
def new
  @booking = Booking.new
  @booking.addressee.build
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Make sure that you're building the nested model in the
controller before rendering the form:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def new
  @booking = Booking.new
  @booking.addressee.build
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-09T21:03:05+01:00</created-at>
      <creator-id type="integer">106646</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5337</number>
      <permalink>accepts_nested_attributes_for-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; activerecord &quot;activerecord associations&quot; &quot;nested attributes&quot;</tag>
      <title>accepts_nested_attributes_for bug?</title>
      <updated-at type="datetime">2010-08-09T21:03:07+01:00</updated-at>
      <user-id type="integer">25344</user-id>
      <version type="integer">2</version>
      <user-name>kyl</user-name>
      <creator-name>Matt Simpson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5337</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I'm terribly sorry, I forgot to mention this is in Rails 3:

@@@
[msimpson@dakota Code] (master) $ ruby -v
ruby 1.9.2dev (2010-07-02 revision 28524) [x86_64-darwin10.4.0]
[msimpson@dakota Code] (master) $ rails -v
Rails 3.0.0.beta4
@@@

When I call the build method on the end of either @booking.event_address or @booking.addressee I get:

@@@
NoMethodError (undefined method `build' for nil:NilClass):
  app/controllers/booking_controller.rb:17:in `event_information'
@@@

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm terribly sorry, I forgot to mention this is in Rails 3:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[msimpson@dakota Code] (master) $ ruby -v
ruby 1.9.2dev (2010-07-02 revision 28524) [x86_64-darwin10.4.0]
[msimpson@dakota Code] (master) $ rails -v
Rails 3.0.0.beta4&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When I call the build method on the end of either
@booking.event_address or @booking.addressee I get:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;NoMethodError (undefined method `build' for nil:NilClass):
  app/controllers/booking_controller.rb:17:in `event_information'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-10T04:38:58+01:00</created-at>
      <creator-id type="integer">106646</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;active record\&quot; activerecord \&quot;activerecord associations\&quot; \&quot;nested attributes\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5337</number>
      <permalink>accepts_nested_attributes_for-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; activerecord &quot;activerecord associations&quot; &quot;nested attributes&quot; &quot;rails 3.0.0.beta4&quot;</tag>
      <title>accepts_nested_attributes_for bug?</title>
      <updated-at type="datetime">2010-08-10T04:38:59+01:00</updated-at>
      <user-id type="integer">106646</user-id>
      <version type="integer">3</version>
      <user-name>Matt Simpson</user-name>
      <creator-name>Matt Simpson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5337</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>However, looking further into the documentation (note that build is not in the method list) the correct usage is:

@booking.build_event_information and doing so does render the form.  Thank you, is this by design for the accepts_nested_attributes_for method?  If I do not have accepts_nested_attributes_for set the fields do render, just not with the functionality needed.  Perhaps this should be in the documentation for accepts_nested_attributes_for?

Thank you for your help and direction.</body>
      <body-html>&lt;div&gt;&lt;p&gt;However, looking further into the documentation (note that build
is not in the method list) the correct usage is:&lt;/p&gt;
&lt;p&gt;@booking.build_event_information and doing so does render the
form. Thank you, is this by design for the
accepts_nested_attributes_for method? If I do not have
accepts_nested_attributes_for set the fields do render, just not
with the functionality needed. Perhaps this should be in the
documentation for accepts_nested_attributes_for?&lt;/p&gt;
&lt;p&gt;Thank you for your help and direction.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-10T04:43:44+01:00</created-at>
      <creator-id type="integer">106646</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5337</number>
      <permalink>accepts_nested_attributes_for-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; activerecord &quot;activerecord associations&quot; &quot;nested attributes&quot; &quot;rails 3.0.0.beta4&quot;</tag>
      <title>accepts_nested_attributes_for bug?</title>
      <updated-at type="datetime">2010-08-10T04:43:46+01:00</updated-at>
      <user-id type="integer">106646</user-id>
      <version type="integer">4</version>
      <user-name>Matt Simpson</user-name>
      <creator-name>Matt Simpson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5337</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/30789)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/30789&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-07T05:21:21+01:00</created-at>
      <creator-id type="integer">106646</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;active record\&quot; activerecord \&quot;activerecord associations\&quot; \&quot;nested attributes\&quot; \&quot;rails 3.0.0.beta4\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5337</number>
      <permalink>accepts_nested_attributes_for-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; activerecord associations &quot;nested attributes&quot; &quot;rails 3.0.0.beta4&quot;</tag>
      <title>accepts_nested_attributes_for bug?</title>
      <updated-at type="datetime">2010-10-07T05:21:21+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">5</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Matt Simpson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5337</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>@matt, just chiming in here as a fellow user. 

Yes this is the intended functionality. When you are using accepts_nested_attributes_for, the association needs to be built before the form can be rendered. The method used for building does depend on the type of association you have (has_many or belongs_to etc) in the base model and is not really connected to the attribute_nested_for issue. 

If you do not use accepts_nested_attributes_for, the keys in received from the form params in your model differ to when you do use accepts_nested_attributes_for in your base model differ and you have to manually write the plumbing in your model (or elsewhere) to ensure the association is built and saved.

Ryan has a set of Railscasts on Complex forms which explain the functionality very well. I think there is a Rails Guide on Nested form in progress which when released would serve as authoritative documentation on the feature.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@matt, just chiming in here as a fellow user.&lt;/p&gt;
&lt;p&gt;Yes this is the intended functionality. When you are using
accepts_nested_attributes_for, the association needs to be built
before the form can be rendered. The method used for building does
depend on the type of association you have (has_many or belongs_to
etc) in the base model and is not really connected to the
attribute_nested_for issue.&lt;/p&gt;
&lt;p&gt;If you do not use accepts_nested_attributes_for, the keys in
received from the form params in your model differ to when you do
use accepts_nested_attributes_for in your base model differ and you
have to manually write the plumbing in your model (or elsewhere) to
ensure the association is built and saved.&lt;/p&gt;
&lt;p&gt;Ryan has a set of Railscasts on Complex forms which explain the
functionality very well. I think there is a Rails Guide on Nested
form in progress which when released would serve as authoritative
documentation on the feature.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-07T08:48:28+01:00</created-at>
      <creator-id type="integer">106646</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5337</number>
      <permalink>accepts_nested_attributes_for-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active record&quot; activerecord associations &quot;nested attributes&quot; &quot;rails 3.0.0.beta4&quot;</tag>
      <title>accepts_nested_attributes_for bug?</title>
      <updated-at type="datetime">2010-10-07T08:48:30+01:00</updated-at>
      <user-id type="integer">17433</user-id>
      <version type="integer">6</version>
      <user-name>Aditya Sanghi</user-name>
      <creator-name>Matt Simpson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5337</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>`fields_for` not rendering anything if no object(s) are built is the intended behavior.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;code&gt;fields_for&lt;/code&gt; not rendering anything if no object(s)
are built is the intended behavior.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-07T20:56:05+01:00</created-at>
      <creator-id type="integer">106646</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5337</number>
      <permalink>accepts_nested_attributes_for-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;active record&quot; activerecord associations &quot;nested attributes&quot; &quot;rails 3.0.0.beta4&quot;</tag>
      <title>accepts_nested_attributes_for bug?</title>
      <updated-at type="datetime">2010-10-07T20:56:08+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">7</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Matt Simpson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5337</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment-image type="Attachment">
      <code>fecf8efdc61aad4bea5c225347f2bf9abcda509e</code>
      <content-type>image/png</content-type>
      <created-at type="datetime">2010-08-09T05:59:53+01:00</created-at>
      <filename>screen-shot-2010-08-08-at-115556-pm.png</filename>
      <height type="integer">345</height>
      <id type="integer">619599</id>
      <size type="integer">46410</size>
      <uploader-id type="integer">106646</uploader-id>
      <width type="integer">568</width>
      <url>http://rails.lighthouseapp.com/attachments/619599/screen-shot-2010-08-08-at-115556-pm.png</url>
    </attachment-image>
    <attachment-image type="Attachment">
      <code>b13a854e3218e5a94a3d00038134875a605a0bf2</code>
      <content-type>image/png</content-type>
      <created-at type="datetime">2010-08-09T05:59:53+01:00</created-at>
      <filename>screen-shot-2010-08-08-at-115608-pm.png</filename>
      <height type="integer">324</height>
      <id type="integer">619600</id>
      <size type="integer">42484</size>
      <uploader-id type="integer">106646</uploader-id>
      <width type="integer">556</width>
      <url>http://rails.lighthouseapp.com/attachments/619600/screen-shot-2010-08-08-at-115608-pm.png</url>
    </attachment-image>
  </attachments>
</ticket>
