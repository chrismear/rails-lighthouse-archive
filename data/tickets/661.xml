<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-19T12:12:14+01:00</created-at>
  <creator-id type="integer">21223</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">661</number>
  <permalink>options_for_select-with-html_options</permalink>
  <priority type="integer">143</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>actionpack enhancement helper patch tested</tag>
  <title>options_for_select with html_options</title>
  <updated-at type="datetime">2011-03-26T02:23:08+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">3</version>
  <user-name>bingbing</user-name>
  <creator-name>Arthur Carlsson</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/661</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This patch allows you to specify HTML attributes to the option elements generated by the options_for_select method and methods alike. This is useful if you want, for example, have altering backgrounds for each select option.

The html_option parameter can be a hash which applies the attributes to all option elements, like so:

@@@ ruby
options_for_select({&quot;Dollar&quot; =&gt; &quot;$&quot;, &quot;Kroner&quot; =&gt; &quot;DKK&quot;, &quot;Kronor&quot; =&gt; &quot;SEK&quot;}, &quot;Kronor&quot;, :style =&gt; 'color: blue;') # =&gt; &lt;option value=&quot;$&quot; style=&quot;color: blue;&quot;&gt;Dollar&lt;/option&gt;\n&lt;option value=&quot;DKK&quot; style=&quot;color: blue;&quot;&gt;Kroner&lt;/option&gt;\n&lt;option value=&quot;SEK&quot; style=&quot;color: blue;&quot;&gt;Kronor&lt;/option&gt;
@@@

or it can be a proc to calculate the attributes for each option, like so:

@@@ ruby
options_for_select({&quot;Dollar&quot; =&gt; &quot;$&quot;, &quot;Kroner&quot; =&gt; &quot;DKK&quot;, &quot;Kronor&quot; =&gt; &quot;SEK&quot;}, &quot;Kronor&quot;, lambda { |text, value, selected| {:class =&gt; cycle(&quot;odd&quot;, &quot;even&quot;)} }) # =&gt; &lt;option value=&quot;$&quot; class=&quot;odd&quot;&gt;Dollar&lt;/option&gt;\n&lt;option value=&quot;DKK&quot; class=&quot;even&quot;&gt;Kroner&lt;/option&gt;\n&lt;option value=&quot;SEK&quot; class=&quot;odd&quot;&gt;Kronor&lt;/option&gt;
@@@

This patch also alters an existing test: test_hash_options_for_select. The expected result in the test was sorted by string comparison which does not work with the changes I made. The test's expected result is now unchanged and the result from options_for_select now expects the generated options to be sorted by its display text.
A comment has been added to the documentation about this change of expectation.</original-body>
  <latest-body>This patch allows you to specify HTML attributes to the option elements generated by the options_for_select method and methods alike. This is useful if you want, for example, have altering backgrounds for each select option.

The html_option parameter can be a hash which applies the attributes to all option elements, like so:

@@@ ruby
options_for_select({&quot;Dollar&quot; =&gt; &quot;$&quot;, &quot;Kroner&quot; =&gt; &quot;DKK&quot;, &quot;Kronor&quot; =&gt; &quot;SEK&quot;}, &quot;Kronor&quot;, :style =&gt; 'color: blue;') # =&gt; &lt;option value=&quot;$&quot; style=&quot;color: blue;&quot;&gt;Dollar&lt;/option&gt;\n&lt;option value=&quot;DKK&quot; style=&quot;color: blue;&quot;&gt;Kroner&lt;/option&gt;\n&lt;option value=&quot;SEK&quot; style=&quot;color: blue;&quot;&gt;Kronor&lt;/option&gt;
@@@

or it can be a proc to calculate the attributes for each option, like so:

@@@ ruby
options_for_select({&quot;Dollar&quot; =&gt; &quot;$&quot;, &quot;Kroner&quot; =&gt; &quot;DKK&quot;, &quot;Kronor&quot; =&gt; &quot;SEK&quot;}, &quot;Kronor&quot;, lambda { |text, value, selected| {:class =&gt; cycle(&quot;odd&quot;, &quot;even&quot;)} }) # =&gt; &lt;option value=&quot;$&quot; class=&quot;odd&quot;&gt;Dollar&lt;/option&gt;\n&lt;option value=&quot;DKK&quot; class=&quot;even&quot;&gt;Kroner&lt;/option&gt;\n&lt;option value=&quot;SEK&quot; class=&quot;odd&quot;&gt;Kronor&lt;/option&gt;
@@@

This patch also alters an existing test: test_hash_options_for_select. The expected result in the test was sorted by string comparison which does not work with the changes I made. The test's expected result is now unchanged and the result from options_for_select now expects the generated options to be sorted by its display text.
A comment has been added to the documentation about this change of expectation.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
This patch allows you to specify HTML attributes to the option elements generated by the options_for_select method and methods alike. This is useful if you want, for example, have altering backgrounds for each select option.
&lt;/p&gt;&lt;p&gt;
The html_option parameter can be a hash which applies the attributes to all option elements, like so:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;options_for_select({&amp;quot;Dollar&amp;quot; =&amp;gt; &amp;quot;$&amp;quot;, &amp;quot;Kroner&amp;quot; =&amp;gt; &amp;quot;DKK&amp;quot;, &amp;quot;Kronor&amp;quot; =&amp;gt; &amp;quot;SEK&amp;quot;}, &amp;quot;Kronor&amp;quot;, :style =&amp;gt; 'color: blue;') # =&amp;gt; &amp;lt;option value=&amp;quot;$&amp;quot; style=&amp;quot;color: blue;&amp;quot;&amp;gt;Dollar&amp;lt;/option&amp;gt;\n&amp;lt;option value=&amp;quot;DKK&amp;quot; style=&amp;quot;color: blue;&amp;quot;&amp;gt;Kroner&amp;lt;/option&amp;gt;\n&amp;lt;option value=&amp;quot;SEK&amp;quot; style=&amp;quot;color: blue;&amp;quot;&amp;gt;Kronor&amp;lt;/option&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
or it can be a proc to calculate the attributes for each option, like so:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;options_for_select({&amp;quot;Dollar&amp;quot; =&amp;gt; &amp;quot;$&amp;quot;, &amp;quot;Kroner&amp;quot; =&amp;gt; &amp;quot;DKK&amp;quot;, &amp;quot;Kronor&amp;quot; =&amp;gt; &amp;quot;SEK&amp;quot;}, &amp;quot;Kronor&amp;quot;, lambda { |text, value, selected| {:class =&amp;gt; cycle(&amp;quot;odd&amp;quot;, &amp;quot;even&amp;quot;)} }) # =&amp;gt; &amp;lt;option value=&amp;quot;$&amp;quot; class=&amp;quot;odd&amp;quot;&amp;gt;Dollar&amp;lt;/option&amp;gt;\n&amp;lt;option value=&amp;quot;DKK&amp;quot; class=&amp;quot;even&amp;quot;&amp;gt;Kroner&amp;lt;/option&amp;gt;\n&amp;lt;option value=&amp;quot;SEK&amp;quot; class=&amp;quot;odd&amp;quot;&amp;gt;Kronor&amp;lt;/option&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This patch also alters an existing test: test_hash_options_for_select. The expected result in the test was sorted by string comparison which does not work with the changes I made. The test's expected result is now unchanged and the result from options_for_select now expects the generated options to be sorted by its display text.
&lt;/p&gt;&lt;p&gt;
A comment has been added to the documentation about this change of expectation.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This patch allows you to specify HTML attributes to the option elements generated by the options_for_select method and methods alike. This is useful if you want, for example, have altering backgrounds for each select option.

The html_option parameter can be a hash which applies the attributes to all option elements, like so:

@@@ ruby
options_for_select({&quot;Dollar&quot; =&gt; &quot;$&quot;, &quot;Kroner&quot; =&gt; &quot;DKK&quot;, &quot;Kronor&quot; =&gt; &quot;SEK&quot;}, &quot;Kronor&quot;, :style =&gt; 'color: blue;') # =&gt; &lt;option value=&quot;$&quot; style=&quot;color: blue;&quot;&gt;Dollar&lt;/option&gt;\n&lt;option value=&quot;DKK&quot; style=&quot;color: blue;&quot;&gt;Kroner&lt;/option&gt;\n&lt;option value=&quot;SEK&quot; style=&quot;color: blue;&quot;&gt;Kronor&lt;/option&gt;
@@@

or it can be a proc to calculate the attributes for each option, like so:

@@@ ruby
options_for_select({&quot;Dollar&quot; =&gt; &quot;$&quot;, &quot;Kroner&quot; =&gt; &quot;DKK&quot;, &quot;Kronor&quot; =&gt; &quot;SEK&quot;}, &quot;Kronor&quot;, lambda { |text, value, selected| {:class =&gt; cycle(&quot;odd&quot;, &quot;even&quot;)} }) # =&gt; &lt;option value=&quot;$&quot; class=&quot;odd&quot;&gt;Dollar&lt;/option&gt;\n&lt;option value=&quot;DKK&quot; class=&quot;even&quot;&gt;Kroner&lt;/option&gt;\n&lt;option value=&quot;SEK&quot; class=&quot;odd&quot;&gt;Kronor&lt;/option&gt;
@@@

This patch also alters an existing test: test_hash_options_for_select. The expected result in the test was sorted by string comparison which does not work with the changes I made. The test's expected result is now unchanged and the result from options_for_select now expects the generated options to be sorted by its display text.
A comment has been added to the documentation about this change of expectation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This patch allows you to specify HTML attributes to the option elements generated by the options_for_select method and methods alike. This is useful if you want, for example, have altering backgrounds for each select option.
&lt;/p&gt;&lt;p&gt;
The html_option parameter can be a hash which applies the attributes to all option elements, like so:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;options_for_select({&amp;quot;Dollar&amp;quot; =&amp;gt; &amp;quot;$&amp;quot;, &amp;quot;Kroner&amp;quot; =&amp;gt; &amp;quot;DKK&amp;quot;, &amp;quot;Kronor&amp;quot; =&amp;gt; &amp;quot;SEK&amp;quot;}, &amp;quot;Kronor&amp;quot;, :style =&amp;gt; 'color: blue;') # =&amp;gt; &amp;lt;option value=&amp;quot;$&amp;quot; style=&amp;quot;color: blue;&amp;quot;&amp;gt;Dollar&amp;lt;/option&amp;gt;\n&amp;lt;option value=&amp;quot;DKK&amp;quot; style=&amp;quot;color: blue;&amp;quot;&amp;gt;Kroner&amp;lt;/option&amp;gt;\n&amp;lt;option value=&amp;quot;SEK&amp;quot; style=&amp;quot;color: blue;&amp;quot;&amp;gt;Kronor&amp;lt;/option&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
or it can be a proc to calculate the attributes for each option, like so:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;options_for_select({&amp;quot;Dollar&amp;quot; =&amp;gt; &amp;quot;$&amp;quot;, &amp;quot;Kroner&amp;quot; =&amp;gt; &amp;quot;DKK&amp;quot;, &amp;quot;Kronor&amp;quot; =&amp;gt; &amp;quot;SEK&amp;quot;}, &amp;quot;Kronor&amp;quot;, lambda { |text, value, selected| {:class =&amp;gt; cycle(&amp;quot;odd&amp;quot;, &amp;quot;even&amp;quot;)} }) # =&amp;gt; &amp;lt;option value=&amp;quot;$&amp;quot; class=&amp;quot;odd&amp;quot;&amp;gt;Dollar&amp;lt;/option&amp;gt;\n&amp;lt;option value=&amp;quot;DKK&amp;quot; class=&amp;quot;even&amp;quot;&amp;gt;Kroner&amp;lt;/option&amp;gt;\n&amp;lt;option value=&amp;quot;SEK&amp;quot; class=&amp;quot;odd&amp;quot;&amp;gt;Kronor&amp;lt;/option&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This patch also alters an existing test: test_hash_options_for_select. The expected result in the test was sorted by string comparison which does not work with the changes I made. The test's expected result is now unchanged and the result from options_for_select now expects the generated options to be sorted by its display text.
&lt;/p&gt;&lt;p&gt;
A comment has been added to the documentation about this change of expectation.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-19T12:12:15+01:00</created-at>
      <creator-id type="integer">21223</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">661</number>
      <permalink>options_for_select-with-html_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement helper patch tested</tag>
      <title>options_for_select with html_options</title>
      <updated-at type="datetime">2008-07-19T12:12:15+01:00</updated-at>
      <user-id type="integer">21223</user-id>
      <version type="integer">1</version>
      <user-name>Arthur Carlsson</user-name>
      <creator-name>Arthur Carlsson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/661</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Staling out, please reopen if you are still interested.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Staling out, please reopen if you are still interested.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-28T16:28:31+00:00</created-at>
      <creator-id type="integer">21223</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">661</number>
      <permalink>options_for_select-with-html_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>actionpack enhancement helper patch tested</tag>
      <title>options_for_select with html_options</title>
      <updated-at type="datetime">2008-10-28T16:28:35+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Arthur Carlsson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/661</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:05:16+00:00</created-at>
      <creator-id type="integer">21223</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">661</number>
      <permalink>options_for_select-with-html_options</permalink>
      <priority type="integer">143</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>actionpack enhancement helper patch tested</tag>
      <title>options_for_select with html_options</title>
      <updated-at type="datetime">2011-03-26T02:23:08+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">3</version>
      <user-name>bingbing</user-name>
      <creator-name>Arthur Carlsson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/661</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>35fec5d7560cc0c4ddde50dc23ed4c094060c87b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-19T12:12:14+01:00</created-at>
      <filename>options_for_select_with_html_options.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">33681</id>
      <size type="integer">21325</size>
      <uploader-id type="integer">21223</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/33681/options_for_select_with_html_options.diff</url>
    </attachment>
  </attachments>
</ticket>
