<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-05-12T17:15:23+01:00</created-at>
  <creator-id type="integer">749</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2638</number>
  <permalink>railsinfo-causes-frameworks-that-are-not-already-loaded-to-be-partially-loaded</permalink>
  <priority type="integer">1768</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2-3-stable patch railties</tag>
  <title>rails/info causes frameworks that are not already loaded to be (partially?) loaded</title>
  <updated-at type="datetime">2010-10-09T04:14:27+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">7</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Graeme Mathieson</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2638</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>For one particular project, running on Rails 2.3, we do not need ActiveRecord. In `config/environment.rb`, I have removed the ActiveRecord framework:

@@@ ruby
Rails::Initializer.run do |config|
  # [ ... ]
  # Skip frameworks you're not going to use. To use Rails without a database,
  # you must remove the Active Record framework.
  config.frameworks -= [ :active_record, :action_mailer ]
end
@@@

Unfortunately, a call to `Rails::Info` causes `ActiveRecord` to be defined, as you can see from this console session:

@@@ ruby
mathie@Tullibardine booger (master) $ script/console
Loading development environment (Rails 2.3.2)
Object.con&gt;&gt; Object.const_defined?(&quot;ActiveRecord&quot;)
=&gt; false
&gt;&gt; Rails::Info
=&gt; About your application's environment
Ruby version              1.8.6 (universal-darwin9.0)
RubyGems version          1.3.3
Rack version              1.0
Rails version             2.3.2
Active Record version     2.3.2
Action Pack version       2.3.2
Active Resource version   2.3.2
Action Mailer version     2.3.2
Active Support version    2.3.2
Application root          /Users/mathie/booger
Environment               development
&gt;&gt; Object.const_defined?(&quot;ActiveRecord&quot;)
=&gt; true
@@@

This causes a problem because some parts of Rails, the generated skeleton application and several plugins check to see if `ActiveRecord` is defined to test for database support.

The plugin in particular, which both calls `Rails::Info` and checks for the existence of `ActiveRecord` in order to enable portions of itself, is New Relic's RPM Agent (which is why I'm about to point those guys at this report too!).

Attached is a patch without tests -- I'll attempt to work on tests just now, but I could always use the help. :-)</original-body>
  <latest-body>For one particular project, running on Rails 2.3, we do not need ActiveRecord. In `config/environment.rb`, I have removed the ActiveRecord framework:

@@@ ruby
Rails::Initializer.run do |config|
  # [ ... ]
  # Skip frameworks you're not going to use. To use Rails without a database,
  # you must remove the Active Record framework.
  config.frameworks -= [ :active_record, :action_mailer ]
end
@@@

Unfortunately, a call to `Rails::Info` causes `ActiveRecord` to be defined, as you can see from this console session:

@@@ ruby
mathie@Tullibardine booger (master) $ script/console
Loading development environment (Rails 2.3.2)
Object.con&gt;&gt; Object.const_defined?(&quot;ActiveRecord&quot;)
=&gt; false
&gt;&gt; Rails::Info
=&gt; About your application's environment
Ruby version              1.8.6 (universal-darwin9.0)
RubyGems version          1.3.3
Rack version              1.0
Rails version             2.3.2
Active Record version     2.3.2
Action Pack version       2.3.2
Active Resource version   2.3.2
Action Mailer version     2.3.2
Active Support version    2.3.2
Application root          /Users/mathie/booger
Environment               development
&gt;&gt; Object.const_defined?(&quot;ActiveRecord&quot;)
=&gt; true
@@@

This causes a problem because some parts of Rails, the generated skeleton application and several plugins check to see if `ActiveRecord` is defined to test for database support.

The plugin in particular, which both calls `Rails::Info` and checks for the existence of `ActiveRecord` in order to enable portions of itself, is New Relic's RPM Agent (which is why I'm about to point those guys at this report too!).

Attached is a patch without tests -- I'll attempt to work on tests just now, but I could always use the help. :-)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;For one particular project, running on Rails 2.3, we do not need
ActiveRecord. In &lt;code&gt;config/environment.rb&lt;/code&gt;, I have removed
the ActiveRecord framework:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
Rails::Initializer.run do |config|
  # [ ... ]
  # Skip frameworks you're not going to use. To use Rails without a database,
  # you must remove the Active Record framework.
  config.frameworks -= [ :active_record, :action_mailer ]
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unfortunately, a call to &lt;code&gt;Rails::Info&lt;/code&gt; causes
&lt;code&gt;ActiveRecord&lt;/code&gt; to be defined, as you can see from this
console session:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
mathie@Tullibardine booger (master) $ script/console
Loading development environment (Rails 2.3.2)
Object.con&amp;gt;&amp;gt; Object.const_defined?(&amp;quot;ActiveRecord&amp;quot;)
=&amp;gt; false
&amp;gt;&amp;gt; Rails::Info
=&amp;gt; About your application's environment
Ruby version              1.8.6 (universal-darwin9.0)
RubyGems version          1.3.3
Rack version              1.0
Rails version             2.3.2
Active Record version     2.3.2
Action Pack version       2.3.2
Active Resource version   2.3.2
Action Mailer version     2.3.2
Active Support version    2.3.2
Application root          /Users/mathie/booger
Environment               development
&amp;gt;&amp;gt; Object.const_defined?(&amp;quot;ActiveRecord&amp;quot;)
=&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This causes a problem because some parts of Rails, the generated
skeleton application and several plugins check to see if
&lt;code&gt;ActiveRecord&lt;/code&gt; is defined to test for database
support.&lt;/p&gt;
&lt;p&gt;The plugin in particular, which both calls
&lt;code&gt;Rails::Info&lt;/code&gt; and checks for the existence of
&lt;code&gt;ActiveRecord&lt;/code&gt; in order to enable portions of itself, is
New Relic's RPM Agent (which is why I'm about to point those guys
at this report too!).&lt;/p&gt;
&lt;p&gt;Attached is a patch without tests -- I'll attempt to work on
tests just now, but I could always use the help. :-)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>For one particular project, running on Rails 2.3, we do not need ActiveRecord. In `config/environment.rb`, I have removed the ActiveRecord framework:

@@@ ruby
Rails::Initializer.run do |config|
  # [ ... ]
  # Skip frameworks you're not going to use. To use Rails without a database,
  # you must remove the Active Record framework.
  config.frameworks -= [ :active_record, :action_mailer ]
end
@@@

Unfortunately, a call to `Rails::Info` causes `ActiveRecord` to be defined, as you can see from this console session:

@@@ ruby
mathie@Tullibardine booger (master) $ script/console
Loading development environment (Rails 2.3.2)
Object.con&gt;&gt; Object.const_defined?(&quot;ActiveRecord&quot;)
=&gt; false
&gt;&gt; Rails::Info
=&gt; About your application's environment
Ruby version              1.8.6 (universal-darwin9.0)
RubyGems version          1.3.3
Rack version              1.0
Rails version             2.3.2
Active Record version     2.3.2
Action Pack version       2.3.2
Active Resource version   2.3.2
Action Mailer version     2.3.2
Active Support version    2.3.2
Application root          /Users/mathie/booger
Environment               development
&gt;&gt; Object.const_defined?(&quot;ActiveRecord&quot;)
=&gt; true
@@@

This causes a problem because some parts of Rails, the generated skeleton application and several plugins check to see if `ActiveRecord` is defined to test for database support.

The plugin in particular, which both calls `Rails::Info` and checks for the existence of `ActiveRecord` in order to enable portions of itself, is New Relic's RPM Agent (which is why I'm about to point those guys at this report too!).

Attached is a patch without tests -- I'll attempt to work on tests just now, but I could always use the help. :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;For one particular project, running on Rails 2.3, we do not need
ActiveRecord. In &lt;code&gt;config/environment.rb&lt;/code&gt;, I have removed
the ActiveRecord framework:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
Rails::Initializer.run do |config|
  # [ ... ]
  # Skip frameworks you're not going to use. To use Rails without a database,
  # you must remove the Active Record framework.
  config.frameworks -= [ :active_record, :action_mailer ]
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unfortunately, a call to &lt;code&gt;Rails::Info&lt;/code&gt; causes
&lt;code&gt;ActiveRecord&lt;/code&gt; to be defined, as you can see from this
console session:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
mathie@Tullibardine booger (master) $ script/console
Loading development environment (Rails 2.3.2)
Object.con&amp;gt;&amp;gt; Object.const_defined?(&amp;quot;ActiveRecord&amp;quot;)
=&amp;gt; false
&amp;gt;&amp;gt; Rails::Info
=&amp;gt; About your application's environment
Ruby version              1.8.6 (universal-darwin9.0)
RubyGems version          1.3.3
Rack version              1.0
Rails version             2.3.2
Active Record version     2.3.2
Action Pack version       2.3.2
Active Resource version   2.3.2
Action Mailer version     2.3.2
Active Support version    2.3.2
Application root          /Users/mathie/booger
Environment               development
&amp;gt;&amp;gt; Object.const_defined?(&amp;quot;ActiveRecord&amp;quot;)
=&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This causes a problem because some parts of Rails, the generated
skeleton application and several plugins check to see if
&lt;code&gt;ActiveRecord&lt;/code&gt; is defined to test for database
support.&lt;/p&gt;
&lt;p&gt;The plugin in particular, which both calls
&lt;code&gt;Rails::Info&lt;/code&gt; and checks for the existence of
&lt;code&gt;ActiveRecord&lt;/code&gt; in order to enable portions of itself, is
New Relic's RPM Agent (which is why I'm about to point those guys
at this report too!).&lt;/p&gt;
&lt;p&gt;Attached is a patch without tests -- I'll attempt to work on
tests just now, but I could always use the help. :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-12T17:15:23+01:00</created-at>
      <creator-id type="integer">749</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2638</number>
      <permalink>railsinfo-causes-frameworks-that-are-not-already-loaded-to-be-partially-loaded</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable patch railties</tag>
      <title>rails/info causes frameworks that are not already loaded to be (partially?) loaded</title>
      <updated-at type="datetime">2009-05-12T17:15:24+01:00</updated-at>
      <user-id type="integer">749</user-id>
      <version type="integer">1</version>
      <user-name>Graeme Mathieson</user-name>
      <creator-name>Graeme Mathieson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2638</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Got the tests sussed, I think.  Attached is a new patch, with tests this time.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Got the tests sussed, I think. Attached is a new patch, with
tests this time.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-12T17:39:27+01:00</created-at>
      <creator-id type="integer">749</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2638</number>
      <permalink>railsinfo-causes-frameworks-that-are-not-already-loaded-to-be-partially-loaded</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable patch railties</tag>
      <title>rails/info causes frameworks that are not already loaded to be (partially?) loaded</title>
      <updated-at type="datetime">2009-05-12T17:39:28+01:00</updated-at>
      <user-id type="integer">749</user-id>
      <version type="integer">2</version>
      <user-name>Graeme Mathieson</user-name>
      <creator-name>Graeme Mathieson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2638</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Cool, I've been bitten by this one (also with new relic and a databaseless app). Not someone with a checkout of rails handy, but isn't removing the ActiveRecord constant going to mess up other tests. Perhaps you could put it back afterwards (in an ensure) or mock out the call to const_defined ?

Also you should rebase down to a single patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Cool, I've been bitten by this one (also with new relic and a
databaseless app). Not someone with a checkout of rails handy, but
isn't removing the ActiveRecord constant going to mess up other
tests. Perhaps you could put it back afterwards (in an ensure) or
mock out the call to const_defined ?&lt;/p&gt;
&lt;p&gt;Also you should rebase down to a single patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-12T20:00:36+01:00</created-at>
      <creator-id type="integer">749</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2638</number>
      <permalink>railsinfo-causes-frameworks-that-are-not-already-loaded-to-be-partially-loaded</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable patch railties</tag>
      <title>rails/info causes frameworks that are not already loaded to be (partially?) loaded</title>
      <updated-at type="datetime">2009-05-12T20:00:40+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">3</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Graeme Mathieson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2638</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1
We also had this problem in NewRelic.  As a side effect of collecting Rails information we broke apps that did not include the AR framework.

The patch looks good to me.  I thought maybe you could get the frameworks list from the configuration object and use that as a test instead, but there are probably tradeoffs between both approaches I'm not aware of.  Just a thought.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 We also had this problem in NewRelic. As a side effect of
collecting Rails information we broke apps that did not include the
AR framework.&lt;/p&gt;
&lt;p&gt;The patch looks good to me. I thought maybe you could get the
frameworks list from the configuration object and use that as a
test instead, but there are probably tradeoffs between both
approaches I'm not aware of. Just a thought.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-12T23:15:08+01:00</created-at>
      <creator-id type="integer">749</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2638</number>
      <permalink>railsinfo-causes-frameworks-that-are-not-already-loaded-to-be-partially-loaded</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable patch railties</tag>
      <title>rails/info causes frameworks that are not already loaded to be (partially?) loaded</title>
      <updated-at type="datetime">2009-05-12T23:15:13+01:00</updated-at>
      <user-id type="integer">12416</user-id>
      <version type="integer">4</version>
      <user-name>Bill</user-name>
      <creator-name>Graeme Mathieson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2638</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Frederick: Removing ActiveRecord doesn't seem to be messing up other tests -- I've run the full Rails test suite without issue.  Thanks for the squashing tip -- I've attached a new version of the patch which is flattened.

@Bill Unfortunately, you can't get the frameworks list from the configuration object because it splits out action controller into action view &amp; action pack, which is not what Rails::Info wants to see.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Frederick: Removing ActiveRecord doesn't seem to be messing up
other tests -- I've run the full Rails test suite without issue.
Thanks for the squashing tip -- I've attached a new version of the
patch which is flattened.&lt;/p&gt;
&lt;p&gt;@Bill Unfortunately, you can't get the frameworks list from the
configuration object because it splits out action controller into
action view &amp;amp; action pack, which is not what Rails::Info wants
to see.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-20T06:54:57+01:00</created-at>
      <creator-id type="integer">749</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2638</number>
      <permalink>railsinfo-causes-frameworks-that-are-not-already-loaded-to-be-partially-loaded</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable patch railties</tag>
      <title>rails/info causes frameworks that are not already loaded to be (partially?) loaded</title>
      <updated-at type="datetime">2009-05-20T06:55:03+01:00</updated-at>
      <user-id type="integer">749</user-id>
      <version type="integer">5</version>
      <user-name>Graeme Mathieson</user-name>
      <creator-name>Graeme Mathieson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2638</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:49+01:00</created-at>
      <creator-id type="integer">749</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2638</number>
      <permalink>railsinfo-causes-frameworks-that-are-not-already-loaded-to-be-partially-loaded</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable patch railties</tag>
      <title>rails/info causes frameworks that are not already loaded to be (partially?) loaded</title>
      <updated-at type="datetime">2010-05-04T18:48:49+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">6</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Graeme Mathieson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2638</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T04:14:25+01:00</created-at>
      <creator-id type="integer">749</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2638</number>
      <permalink>railsinfo-causes-frameworks-that-are-not-already-loaded-to-be-partially-loaded</permalink>
      <priority type="integer">1768</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable patch railties</tag>
      <title>rails/info causes frameworks that are not already loaded to be (partially?) loaded</title>
      <updated-at type="datetime">2010-10-09T04:14:27+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">7</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Graeme Mathieson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2638</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b181d4009e338d03826904f7a391a3c6036ad165</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-05-20T06:54:58+01:00</created-at>
      <filename>0001-Only-spit-out-the-property-for-a-particular-framewor.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">124443</id>
      <size type="integer">3438</size>
      <uploader-id type="integer">749</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/124443/0001-Only-spit-out-the-property-for-a-particular-framewor.patch</url>
    </attachment>
  </attachments>
</ticket>
