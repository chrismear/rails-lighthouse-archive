<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-08-23T23:57:14+01:00</created-at>
  <creator-id type="integer">29616</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">890</number>
  <permalink>in-options_from_collection_for_select-text-value_method-are-chainable</permalink>
  <priority type="integer">343</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>actionpack enhancement helper patch tested</tag>
  <title>in options_from_collection_for_select: text/value_method are chainable</title>
  <updated-at type="datetime">2008-11-25T16:08:49+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">2</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>nosilume</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/890</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>@@@ ruby
options_from_collection_for_select(City.all, &quot;id&quot;, [&quot;name&quot;, &quot;humanize&quot;])
@@@

I need this behaviour in my application, since the name fields are downcased and could contain _ too, I wanted to call &quot;humanize&quot; before outputting them. Of course you can chain as many methods as you want together.

I wrote a patch (my first patch, I hope I've done it right) to support this, I hope some of you find this useful. I also hope you understand my English.</original-body>
  <latest-body>@@@ ruby
options_from_collection_for_select(City.all, &quot;id&quot;, [&quot;name&quot;, &quot;humanize&quot;])
@@@

I need this behaviour in my application, since the name fields are downcased and could contain _ too, I wanted to call &quot;humanize&quot; before outputting them. Of course you can chain as many methods as you want together.

I wrote a patch (my first patch, I hope I've done it right) to support this, I hope some of you find this useful. I also hope you understand my English.</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
options_from_collection_for_select(City.all, &amp;quot;id&amp;quot;, [&amp;quot;name&amp;quot;, &amp;quot;humanize&amp;quot;])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I need this behaviour in my application, since the name fields are downcased and could contain _ too, I wanted to call &quot;humanize&quot; before outputting them. Of course you can chain as many methods as you want together.&lt;/p&gt;

&lt;p&gt;I wrote a patch (my first patch, I hope I've done it right) to support this, I hope some of you find this useful. I also hope you understand my English.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@@@ ruby
options_from_collection_for_select(City.all, &quot;id&quot;, [&quot;name&quot;, &quot;humanize&quot;])
@@@

I need this behaviour in my application, since the name fields are downcased and could contain _ too, I wanted to call &quot;humanize&quot; before outputting them. Of course you can chain as many methods as you want together.

I wrote a patch (my first patch, I hope I've done it right) to support this, I hope some of you find this useful. I also hope you understand my English.</body>
      <body-html>&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
options_from_collection_for_select(City.all, &amp;quot;id&amp;quot;, [&amp;quot;name&amp;quot;, &amp;quot;humanize&amp;quot;])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I need this behaviour in my application, since the name fields are downcased and could contain _ too, I wanted to call &quot;humanize&quot; before outputting them. Of course you can chain as many methods as you want together.&lt;/p&gt;

&lt;p&gt;I wrote a patch (my first patch, I hope I've done it right) to support this, I hope some of you find this useful. I also hope you understand my English.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-23T23:57:15+01:00</created-at>
      <creator-id type="integer">29616</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">890</number>
      <permalink>in-options_from_collection_for_select-text-value_method-are-chainable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionpack enhancement helper patch tested</tag>
      <title>in options_from_collection_for_select: text/value_method are chainable</title>
      <updated-at type="datetime">2008-08-23T23:57:15+01:00</updated-at>
      <user-id type="integer">29616</user-id>
      <version type="integer">1</version>
      <user-name>nosilume</user-name>
      <creator-name>nosilume</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/890</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-25T16:08:44+00:00</created-at>
      <creator-id type="integer">29616</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">890</number>
      <permalink>in-options_from_collection_for_select-text-value_method-are-chainable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>actionpack enhancement helper patch tested</tag>
      <title>in options_from_collection_for_select: text/value_method are chainable</title>
      <updated-at type="datetime">2008-11-25T16:08:49+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>nosilume</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/890</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>8c8f68bcac776941b8ca328f43248a018f947228</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-08-23T23:57:14+01:00</created-at>
      <filename>chainable_methods_in_options_from_collection_for_select.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">41099</id>
      <size type="integer">3191</size>
      <uploader-id type="integer">29616</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/41099/chainable_methods_in_options_from_collection_for_select.diff</url>
    </attachment>
  </attachments>
</ticket>
