<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15783</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-08T18:48:43+00:00</created-at>
  <creator-id type="integer">968</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1713</number>
  <permalink>datetimeto_time-should-always-return-a-time</permalink>
  <priority type="integer">1026</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>active_support core_ext datetime patch time</tag>
  <title>DateTime#to_time should always return a Time</title>
  <updated-at type="datetime">2009-03-29T21:44:11+01:00</updated-at>
  <user-id type="integer">15783</user-id>
  <version type="integer">6</version>
  <user-name>Geoff Buesing</user-name>
  <creator-name>Magnus Holm</creator-name>
  <assigned-user-name>Geoff Buesing</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1713</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>A method called #to_time should _always_ return a Time (or raise error) IMO.

Patch w/test: http://github.com/judofyr/rails/commit/9ed05cdebfd518978c867636b83d6a299a28f754</original-body>
  <latest-body>A method called #to_time should _always_ return a Time (or raise error) IMO.

Patch w/test: http://github.com/judofyr/rails/commit/9ed05cdebfd518978c867636b83d6a299a28f754</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;A method called #to_time should &lt;em&gt;always&lt;/em&gt; return a Time
(or raise error) IMO.&lt;/p&gt;
&lt;p&gt;Patch w/test: &lt;a href=&quot;http://github.com/judofyr/rails/commit/9ed05cdebfd518978c867636b83d6a299a28f754&quot;&gt;
http://github.com/judofyr/rails/...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A method called #to_time should _always_ return a Time (or raise error) IMO.

Patch w/test: http://github.com/judofyr/rails/commit/9ed05cdebfd518978c867636b83d6a299a28f754</body>
      <body-html>&lt;div&gt;&lt;p&gt;A method called #to_time should &lt;em&gt;always&lt;/em&gt; return a Time
(or raise error) IMO.&lt;/p&gt;
&lt;p&gt;Patch w/test: &lt;a href=&quot;http://github.com/judofyr/rails/commit/9ed05cdebfd518978c867636b83d6a299a28f754&quot;&gt;
http://github.com/judofyr/rails/...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-08T18:48:44+00:00</created-at>
      <creator-id type="integer">968</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1713</number>
      <permalink>datetimeto_time-should-always-return-a-time</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support core_ext datetime patch time</tag>
      <title>DateTime#to_time should always return a Time</title>
      <updated-at type="datetime">2009-01-08T18:48:48+00:00</updated-at>
      <user-id type="integer">968</user-id>
      <version type="integer">1</version>
      <user-name>Magnus Holm</user-name>
      <creator-name>Magnus Holm</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It's worked this way for all 2.x releases; we'd really need a good reason to change this behavior now.

Do you have a specific use case where you run into an issue with this behavior?</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's worked this way for all 2.x releases; we'd really need a
good reason to change this behavior now.&lt;/p&gt;
&lt;p&gt;Do you have a specific use case where you run into an issue with
this behavior?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-11T20:23:29+00:00</created-at>
      <creator-id type="integer">968</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1713</number>
      <permalink>datetimeto_time-should-always-return-a-time</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support core_ext datetime patch time</tag>
      <title>DateTime#to_time should always return a Time</title>
      <updated-at type="datetime">2009-01-11T20:23:31+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">2</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Magnus Holm</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-12T14:41:06+00:00</created-at>
      <creator-id type="integer">968</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1713</number>
      <permalink>datetimeto_time-should-always-return-a-time</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support core_ext datetime patch time</tag>
      <title>DateTime#to_time should always return a Time</title>
      <updated-at type="datetime">2009-03-12T14:41:11+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Magnus Holm</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Well, I have: I our app we need to turn all DateTime objects to Time objects and right now it's not possible. We've just created a helper, so it doesn't really matter to us, but it's kinda weird DateTime#to_time doesn't always return a Time (even though it's documentated).

Sometime in the future I think this needs to be merged; there's no point of *not* doing it when it's perfectly possible.

I've also included the patch as an attachment, in case I'll delete my Rails-repo :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well, I have: I our app we need to turn all DateTime objects to
Time objects and right now it's not possible. We've just created a
helper, so it doesn't really matter to us, but it's kinda weird
DateTime#to_time doesn't always return a Time (even though it's
documentated).&lt;/p&gt;
&lt;p&gt;Sometime in the future I think this needs to be merged; there's
no point of &lt;em&gt;not&lt;/em&gt; doing it when it's perfectly possible.&lt;/p&gt;
&lt;p&gt;I've also included the patch as an attachment, in case I'll
delete my Rails-repo :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-12T16:52:09+00:00</created-at>
      <creator-id type="integer">968</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1713</number>
      <permalink>datetimeto_time-should-always-return-a-time</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support core_ext datetime patch time</tag>
      <title>DateTime#to_time should always return a Time</title>
      <updated-at type="datetime">2009-03-12T16:52:11+00:00</updated-at>
      <user-id type="integer">968</user-id>
      <version type="integer">4</version>
      <user-name>Magnus Holm</user-name>
      <creator-name>Magnus Holm</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Your implementation does a time zone conversion, which is adding new behavior to this method. The resulting object is equivalent in a #to_i sense (i.e., seconds since epoch), but it's not equivalent in a time *values* sense -- here's an example to help explain:

@@@ ruby
# DateTime#to_time behavior with above patch:
&gt;&gt; DateTime.now.to_s(:long)
=&gt; &quot;March 14, 2009 11:04&quot;
&gt;&gt; DateTime.now.to_time.to_s(:long)
=&gt; &quot;March 14, 2009 16:04&quot;
@@@

The current behavior of DateTime#to_time only returns a Time object if it cleanly maps to an equivalent Time object in both a #to_i sense *and* a time values sense. Given that ActiveSupport ducktypes DateTime objects to respond like Time objects for most of the common methods we need use, you can still do most everything you want with the returned DateTime object, so this seems like a reasonable fallback.

Interestingly, Ruby 1.9's DateTime#to_time always converts to the system local zone, similar to your patch, just with a different zone:

@@@ ruby
irb(main):006:0&gt; DateTime.now.to_time
=&gt; 2009-03-14 11:20:01 -0500
irb(main):007:0&gt; DateTime.now.new_offset(0).to_time
=&gt; 2009-03-14 11:20:08 -0500
@@@

A reasonable argument could be made that we should be following this behavior instead of what's proposed here.

I do think the current ActiveSupport behavior works well for us, given the additional ducktyping support for DateTimes. Given this, and the fact that this patch would potentially cause unexpected behavior, I'm -1 on this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Your implementation does a time zone conversion, which is adding
new behavior to this method. The resulting object is equivalent in
a #to_i sense (i.e., seconds since epoch), but it's not equivalent
in a time &lt;em&gt;values&lt;/em&gt; sense -- here's an example to help
explain:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
# DateTime#to_time behavior with above patch:
&amp;gt;&amp;gt; DateTime.now.to_s(:long)
=&amp;gt; &amp;quot;March 14, 2009 11:04&amp;quot;
&amp;gt;&amp;gt; DateTime.now.to_time.to_s(:long)
=&amp;gt; &amp;quot;March 14, 2009 16:04&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The current behavior of DateTime#to_time only returns a Time
object if it cleanly maps to an equivalent Time object in both a
#to_i sense &lt;em&gt;and&lt;/em&gt; a time values sense. Given that
ActiveSupport ducktypes DateTime objects to respond like Time
objects for most of the common methods we need use, you can still
do most everything you want with the returned DateTime object, so
this seems like a reasonable fallback.&lt;/p&gt;
&lt;p&gt;Interestingly, Ruby 1.9's DateTime#to_time always converts to
the system local zone, similar to your patch, just with a different
zone:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
irb(main):006:0&amp;gt; DateTime.now.to_time
=&amp;gt; 2009-03-14 11:20:01 -0500
irb(main):007:0&amp;gt; DateTime.now.new_offset(0).to_time
=&amp;gt; 2009-03-14 11:20:08 -0500
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A reasonable argument could be made that we should be following
this behavior instead of what's proposed here.&lt;/p&gt;
&lt;p&gt;I do think the current ActiveSupport behavior works well for us,
given the additional ducktyping support for DateTimes. Given this,
and the fact that this patch would potentially cause unexpected
behavior, I'm -1 on this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-14T16:44:02+00:00</created-at>
      <creator-id type="integer">968</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1713</number>
      <permalink>datetimeto_time-should-always-return-a-time</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support core_ext datetime patch time</tag>
      <title>DateTime#to_time should always return a Time</title>
      <updated-at type="datetime">2009-03-14T16:44:04+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">5</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Magnus Holm</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-29T21:44:05+01:00</created-at>
      <creator-id type="integer">968</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1713</number>
      <permalink>datetimeto_time-should-always-return-a-time</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>active_support core_ext datetime patch time</tag>
      <title>DateTime#to_time should always return a Time</title>
      <updated-at type="datetime">2009-03-29T21:44:11+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">6</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Magnus Holm</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1713</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>9cb01c428d51028b09ff1dcc5beeceae348b2a17</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-03-12T16:52:09+00:00</created-at>
      <filename>0001-Always-make-DateTime-to_time-return-Time.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">99177</id>
      <size type="integer">2529</size>
      <uploader-id type="integer">968</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/99177/0001-Always-make-DateTime-to_time-return-Time.patch</url>
    </attachment>
  </attachments>
</ticket>
