<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-08T14:30:48+01:00</created-at>
  <creator-id type="integer">144830</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6686</number>
  <permalink>using-scope-causes-models-not-to-respect-non-pluralization</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>Using scope causes models not to respect non-pluralization</title>
  <updated-at type="datetime">2011-04-08T14:30:50+01:00</updated-at>
  <user-id type="integer">144830</user-id>
  <version type="integer">1</version>
  <user-name>Michael McGrath</user-name>
  <creator-name>Michael McGrath</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6686</url>
  <priority-name nil="true"></priority-name>
  <original-body>My first ticket so forgive errors please.

In config/environment.rb we have

@@@
ActiveRecord::Base.pluralize_table_names = false
@@@

Which works flawlessly until we add a named scope to a model such as:

@@@
class Disease &lt; ActiveRecord::Base
  scope :active, where(:active=&gt;true)
...
@@@

Without the scope, the model/DB interaction works perfectly. However, adding the scope line causes ActiveRecord to pluralize the table name.

Overriding with
@@@
set_table_name 'disease'
@@@
gets it working again but shouldn't be necessary.

Thanks
Michael.</original-body>
  <latest-body>My first ticket so forgive errors please.

In config/environment.rb we have

@@@
ActiveRecord::Base.pluralize_table_names = false
@@@

Which works flawlessly until we add a named scope to a model such as:

@@@
class Disease &lt; ActiveRecord::Base
  scope :active, where(:active=&gt;true)
...
@@@

Without the scope, the model/DB interaction works perfectly. However, adding the scope line causes ActiveRecord to pluralize the table name.

Overriding with
@@@
set_table_name 'disease'
@@@
gets it working again but shouldn't be necessary.

Thanks
Michael.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;My first ticket so forgive errors please.&lt;/p&gt;
&lt;p&gt;In config/environment.rb we have&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Base.pluralize_table_names = false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Which works flawlessly until we add a named scope to a model
such as:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Disease &amp;lt; ActiveRecord::Base
  scope :active, where(:active=&amp;gt;true)
...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Without the scope, the model/DB interaction works perfectly.
However, adding the scope line causes ActiveRecord to pluralize the
table name.&lt;/p&gt;
&lt;p&gt;Overriding with&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;set_table_name 'disease'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;gets it working again but shouldn't be necessary.&lt;/p&gt;
&lt;p&gt;Thanks&lt;br&gt;
Michael.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>My first ticket so forgive errors please.

In config/environment.rb we have

@@@
ActiveRecord::Base.pluralize_table_names = false
@@@

Which works flawlessly until we add a named scope to a model such as:

@@@
class Disease &lt; ActiveRecord::Base
  scope :active, where(:active=&gt;true)
...
@@@

Without the scope, the model/DB interaction works perfectly. However, adding the scope line causes ActiveRecord to pluralize the table name.

Overriding with
@@@
set_table_name 'disease'
@@@
gets it working again but shouldn't be necessary.

Thanks
Michael.</body>
      <body-html>&lt;div&gt;&lt;p&gt;My first ticket so forgive errors please.&lt;/p&gt;
&lt;p&gt;In config/environment.rb we have&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActiveRecord::Base.pluralize_table_names = false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Which works flawlessly until we add a named scope to a model
such as:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Disease &amp;lt; ActiveRecord::Base
  scope :active, where(:active=&amp;gt;true)
...&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Without the scope, the model/DB interaction works perfectly.
However, adding the scope line causes ActiveRecord to pluralize the
table name.&lt;/p&gt;
&lt;p&gt;Overriding with&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;set_table_name 'disease'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;gets it working again but shouldn't be necessary.&lt;/p&gt;
&lt;p&gt;Thanks&lt;br&gt;
Michael.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-08T14:30:48+01:00</created-at>
      <creator-id type="integer">144830</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6686</number>
      <permalink>using-scope-causes-models-not-to-respect-non-pluralization</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Using scope causes models not to respect non-pluralization</title>
      <updated-at type="datetime">2011-04-08T14:30:50+01:00</updated-at>
      <user-id type="integer">144830</user-id>
      <version type="integer">1</version>
      <user-name>Michael McGrath</user-name>
      <creator-name>Michael McGrath</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6686</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
