<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-05T13:55:00+01:00</created-at>
  <creator-id type="integer">105846</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5047</number>
  <permalink>add-hooks-for-new-data-types</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;activerecord datatypes&quot; patch</tag>
  <title>Add hooks for new data types</title>
  <updated-at type="datetime">2011-02-02T17:16:51+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">6</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Sokolov Yura</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5047</url>
  <priority-name nil="true"></priority-name>
  <original-body>I work on plugin, which allows use of PostgreSQL array type.
While modifying it to work under Rails 3, i found two places, where need for &quot;monkey patching&quot; was too big. Both places are about deciding what to insert into SQL depending on value type.

First place is `ActiveRecord::Base#arel_attributes_values` .
It would be perfect, if rows

@@@ ruby
  if value &amp;&amp; ((self.class.serialized_attributes.has_key?(name) &amp;&amp; (value.acts_like?(:date) || value.acts_like?(:time))) || value.is_a?(Hash) || value.is_a?(Array))
    value = value.to_yaml
  end
@@@
would be refactored into hookable method. I suggest, it could be method in the `ActiveRecord::ConnectionAdapters::AbstractAdapter`

@@@ ruby
  if value &amp;&amp; self.class.serialized_attributes.has_key?(name)
    value = value.to_yaml
  else
    value = self.class.connection.arel_attribute_value(value, column)
  ends
@@@
@@@ ruby
  module ActiveRecord
    module ConnectionAdapters
      class AbstractAdapter
        def arel_attribute_value( value, column )
          if value &amp;&amp; ((value.acts_like?(:date) || value.acts_like?(:time)) || value.is_a?(Hash) || value.is_a?(Array))
            value.to_yaml
          else
            value
          end
        end
      end
    end
  end
@@@
or simply in separated ActiveRecord::Base method, depended on **column**

Second is `ActiveRecord::PredicateBuilder#build_from_hash`
Could following lines be refactored in separate method:

@@@ ruby
  case value
  when Array, ActiveRecord::Associations::AssociationCollection, ActiveRecord::Relation
    values = value.to_a
    attribute.in(values)
  when Range, Arel::Relation
    attribute.in(value)
  else
    attribute.eq(value)
  end
@@@</original-body>
  <latest-body>I work on plugin, which allows use of PostgreSQL array type.
While modifying it to work under Rails 3, i found two places, where need for &quot;monkey patching&quot; was too big. Both places are about deciding what to insert into SQL depending on value type.

First place is `ActiveRecord::Base#arel_attributes_values` .
It would be perfect, if rows

@@@ ruby
  if value &amp;&amp; ((self.class.serialized_attributes.has_key?(name) &amp;&amp; (value.acts_like?(:date) || value.acts_like?(:time))) || value.is_a?(Hash) || value.is_a?(Array))
    value = value.to_yaml
  end
@@@
would be refactored into hookable method. I suggest, it could be method in the `ActiveRecord::ConnectionAdapters::AbstractAdapter`

@@@ ruby
  if value &amp;&amp; self.class.serialized_attributes.has_key?(name)
    value = value.to_yaml
  else
    value = self.class.connection.arel_attribute_value(value, column)
  ends
@@@
@@@ ruby
  module ActiveRecord
    module ConnectionAdapters
      class AbstractAdapter
        def arel_attribute_value( value, column )
          if value &amp;&amp; ((value.acts_like?(:date) || value.acts_like?(:time)) || value.is_a?(Hash) || value.is_a?(Array))
            value.to_yaml
          else
            value
          end
        end
      end
    end
  end
@@@
or simply in separated ActiveRecord::Base method, depended on **column**

Second is `ActiveRecord::PredicateBuilder#build_from_hash`
Could following lines be refactored in separate method:

@@@ ruby
  case value
  when Array, ActiveRecord::Associations::AssociationCollection, ActiveRecord::Relation
    values = value.to_a
    attribute.in(values)
  when Range, Arel::Relation
    attribute.in(value)
  else
    attribute.eq(value)
  end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I work on plugin, which allows use of PostgreSQL array type.&lt;br&gt;
While modifying it to work under Rails 3, i found two places, where
need for &quot;monkey patching&quot; was too big. Both places are about
deciding what to insert into SQL depending on value type.&lt;/p&gt;
&lt;p&gt;First place is
&lt;code&gt;ActiveRecord::Base#arel_attributes_values&lt;/code&gt; .&lt;br&gt;
It would be perfect, if rows&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  if value &amp;amp;&amp;amp; ((self.class.serialized_attributes.has_key?(name) &amp;amp;&amp;amp; (value.acts_like?(:date) || value.acts_like?(:time))) || value.is_a?(Hash) || value.is_a?(Array))
    value = value.to_yaml
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;would be refactored into hookable method. I suggest, it could be
method in the
&lt;code&gt;ActiveRecord::ConnectionAdapters::AbstractAdapter&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  if value &amp;amp;&amp;amp; self.class.serialized_attributes.has_key?(name)
    value = value.to_yaml
  else
    value = self.class.connection.arel_attribute_value(value, column)
  ends&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  module ActiveRecord
    module ConnectionAdapters
      class AbstractAdapter
        def arel_attribute_value( value, column )
          if value &amp;amp;&amp;amp; ((value.acts_like?(:date) || value.acts_like?(:time)) || value.is_a?(Hash) || value.is_a?(Array))
            value.to_yaml
          else
            value
          end
        end
      end
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;or simply in separated ActiveRecord::Base method, depended on
&lt;strong&gt;column&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Second is
&lt;code&gt;ActiveRecord::PredicateBuilder#build_from_hash&lt;/code&gt;&lt;br&gt;
Could following lines be refactored in separate method:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  case value
  when Array, ActiveRecord::Associations::AssociationCollection, ActiveRecord::Relation
    values = value.to_a
    attribute.in(values)
  when Range, Arel::Relation
    attribute.in(value)
  else
    attribute.eq(value)
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I work on plugin, which allows use of PostgreSQL array type.
While modifying it to work under Rails 3, i found two places, where need for &quot;monkey patching&quot; was too big. Both places are about deciding what to insert into SQL depending on value type.

First place is `ActiveRecord::Base#arel_attributes_values` .
It would be perfect, if rows

@@@ ruby
  if value &amp;&amp; ((self.class.serialized_attributes.has_key?(name) &amp;&amp; (value.acts_like?(:date) || value.acts_like?(:time))) || value.is_a?(Hash) || value.is_a?(Array))
    value = value.to_yaml
  end
@@@
would be refactored into hookable method. I suggest, it could be method in the `ActiveRecord::ConnectionAdapters::AbstractAdapter`

@@@ ruby
  if value &amp;&amp; self.class.serialized_attributes.has_key?(name)
    value = value.to_yaml
  else
    value = self.class.connection.arel_attribute_value(value, column)
  ends
@@@
@@@ ruby
  module ActiveRecord
    module ConnectionAdapters
      class AbstractAdapter
        def arel_attribute_value( value, column )
          if value &amp;&amp; ((value.acts_like?(:date) || value.acts_like?(:time)) || value.is_a?(Hash) || value.is_a?(Array))
            value.to_yaml
          else
            value
          end
        end
      end
    end
  end
@@@
or simply in separated ActiveRecord::Base method, depended on **column**

Second is `ActiveRecord::PredicateBuilder#build_from_hash`
Could following lines be refactored in separate method:

@@@ ruby
  case value
  when Array, ActiveRecord::Associations::AssociationCollection, ActiveRecord::Relation
    values = value.to_a
    attribute.in(values)
  when Range, Arel::Relation
    attribute.in(value)
  else
    attribute.eq(value)
  end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I work on plugin, which allows use of PostgreSQL array type.&lt;br&gt;
While modifying it to work under Rails 3, i found two places, where
need for &quot;monkey patching&quot; was too big. Both places are about
deciding what to insert into SQL depending on value type.&lt;/p&gt;
&lt;p&gt;First place is
&lt;code&gt;ActiveRecord::Base#arel_attributes_values&lt;/code&gt; .&lt;br&gt;
It would be perfect, if rows&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  if value &amp;amp;&amp;amp; ((self.class.serialized_attributes.has_key?(name) &amp;amp;&amp;amp; (value.acts_like?(:date) || value.acts_like?(:time))) || value.is_a?(Hash) || value.is_a?(Array))
    value = value.to_yaml
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;would be refactored into hookable method. I suggest, it could be
method in the
&lt;code&gt;ActiveRecord::ConnectionAdapters::AbstractAdapter&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  if value &amp;amp;&amp;amp; self.class.serialized_attributes.has_key?(name)
    value = value.to_yaml
  else
    value = self.class.connection.arel_attribute_value(value, column)
  ends&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  module ActiveRecord
    module ConnectionAdapters
      class AbstractAdapter
        def arel_attribute_value( value, column )
          if value &amp;amp;&amp;amp; ((value.acts_like?(:date) || value.acts_like?(:time)) || value.is_a?(Hash) || value.is_a?(Array))
            value.to_yaml
          else
            value
          end
        end
      end
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;or simply in separated ActiveRecord::Base method, depended on
&lt;strong&gt;column&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Second is
&lt;code&gt;ActiveRecord::PredicateBuilder#build_from_hash&lt;/code&gt;&lt;br&gt;
Could following lines be refactored in separate method:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  case value
  when Array, ActiveRecord::Associations::AssociationCollection, ActiveRecord::Relation
    values = value.to_a
    attribute.in(values)
  when Range, Arel::Relation
    attribute.in(value)
  else
    attribute.eq(value)
  end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-05T13:55:00+01:00</created-at>
      <creator-id type="integer">105846</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5047</number>
      <permalink>add-hooks-for-new-data-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord datatypes&quot;</tag>
      <title>Add hooks for new data types</title>
      <updated-at type="datetime">2010-07-05T13:55:02+01:00</updated-at>
      <user-id type="integer">105846</user-id>
      <version type="integer">1</version>
      <user-name>Sokolov Yura</user-name>
      <creator-name>Sokolov Yura</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5047</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A patch</body>
      <body-html>&lt;div&gt;&lt;p&gt;A patch&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-05T13:58:20+01:00</created-at>
      <creator-id type="integer">105846</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5047</number>
      <permalink>add-hooks-for-new-data-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord datatypes&quot;</tag>
      <title>Add hooks for new data types</title>
      <updated-at type="datetime">2010-07-05T13:58:22+01:00</updated-at>
      <user-id type="integer">105846</user-id>
      <version type="integer">2</version>
      <user-name>Sokolov Yura</user-name>
      <creator-name>Sokolov Yura</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5047</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-07T09:17:38+01:00</created-at>
      <creator-id type="integer">105846</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord datatypes\&quot;&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5047</number>
      <permalink>add-hooks-for-new-data-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord datatypes&quot; patched</tag>
      <title>Add hooks for new data types</title>
      <updated-at type="datetime">2010-07-07T09:17:39+01:00</updated-at>
      <user-id type="integer">105986</user-id>
      <version type="integer">3</version>
      <user-name>Sokolov Yura</user-name>
      <creator-name>Sokolov Yura</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5047</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-07T09:18:39+01:00</created-at>
      <creator-id type="integer">105846</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord datatypes\&quot; patched&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5047</number>
      <permalink>add-hooks-for-new-data-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord datatypes&quot; patch</tag>
      <title>Add hooks for new data types</title>
      <updated-at type="datetime">2010-07-07T09:18:40+01:00</updated-at>
      <user-id type="integer">105986</user-id>
      <version type="integer">4</version>
      <user-name>Sokolov Yura</user-name>
      <creator-name>Sokolov Yura</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5047</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:36:49+00:00</created-at>
      <creator-id type="integer">105846</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5047</number>
      <permalink>add-hooks-for-new-data-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord datatypes&quot; patch</tag>
      <title>Add hooks for new data types</title>
      <updated-at type="datetime">2011-02-02T17:16:46+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Sokolov Yura</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5047</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:36:50+00:00</created-at>
      <creator-id type="integer">105846</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5047</number>
      <permalink>add-hooks-for-new-data-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;activerecord datatypes&quot; patch</tag>
      <title>Add hooks for new data types</title>
      <updated-at type="datetime">2011-02-02T17:16:51+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Sokolov Yura</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5047</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>7599a728fbc38fe154b8cb19c123aa32470c95d6</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-05T13:58:20+01:00</created-at>
      <filename>make-datatypes-hackable.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">586080</id>
      <size type="integer">3691</size>
      <uploader-id type="integer">105846</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/586080/make-datatypes-hackable.diff</url>
    </attachment>
  </attachments>
</ticket>
