From 6b664138f3b23d45fe055655bc959771e93fb144 Mon Sep 17 00:00:00 2001
From: Ryan Bates <ryan@railscasts.com>
Date: Fri, 15 Aug 2008 11:07:36 -0700
Subject: [PATCH] return nil instead of a space when passing an empty collection or nil to 'render :partial'

---
 actionpack/lib/action_controller/base.rb  |    9 ++++++---
 actionpack/lib/action_view/base.rb        |    2 +-
 actionpack/lib/action_view/partials.rb    |    2 +-
 actionpack/test/controller/render_test.rb |    2 +-
 actionpack/test/template/render_test.rb   |    8 ++++++++
 5 files changed, 17 insertions(+), 6 deletions(-)

diff --git a/actionpack/lib/action_controller/base.rb b/actionpack/lib/action_controller/base.rb
index 0fdbcbd..09414e7 100644
--- a/actionpack/lib/action_controller/base.rb
+++ b/actionpack/lib/action_controller/base.rb
@@ -939,8 +939,7 @@ module ActionController #:nodoc:
             render_for_text(generator.to_s, options[:status])
 
           elsif options[:nothing]
-            # Safari doesn't pass the headers of the return if the response is zero length
-            render_for_text(" ", options[:status])
+            render_for_text(nil, options[:status])
 
           else
             render_for_file(default_template_name, options[:status], true)
@@ -1154,7 +1153,11 @@ module ActionController #:nodoc:
           response.body ||= ''
           response.body << text.to_s
         else
-          response.body = text.is_a?(Proc) ? text : text.to_s
+          response.body = case text
+            when Proc then text
+            when nil  then " " # Safari doesn't pass the headers of the return if the response is zero length
+            else           text.to_s
+          end
         end
       end
 
diff --git a/actionpack/lib/action_view/base.rb b/actionpack/lib/action_view/base.rb
index ad59d92..6f6ee1e 100644
--- a/actionpack/lib/action_view/base.rb
+++ b/actionpack/lib/action_view/base.rb
@@ -256,7 +256,7 @@ module ActionView #:nodoc:
           end
         elsif options[:file]
           render_file(options[:file], nil, options[:locals])
-        elsif options[:partial] && options[:collection]
+        elsif options[:partial] && options.has_key?(:collection)
           render_partial_collection(options[:partial], options[:collection], options[:spacer_template], options[:locals], options[:as])
         elsif options[:partial]
           render_partial(options[:partial], options[:object], options[:locals])
diff --git a/actionpack/lib/action_view/partials.rb b/actionpack/lib/action_view/partials.rb
index 894b885..7a75322 100644
--- a/actionpack/lib/action_view/partials.rb
+++ b/actionpack/lib/action_view/partials.rb
@@ -127,7 +127,7 @@ module ActionView
       end
 
       def render_partial_collection(partial_path, collection, partial_spacer_template = nil, local_assigns = {}, as = nil) #:nodoc:
-        return " " if collection.empty?
+        return nil if collection.blank?
 
         local_assigns = local_assigns ? local_assigns.clone : {}
         spacer = partial_spacer_template ? render(:partial => partial_spacer_template) : ''
diff --git a/actionpack/test/controller/render_test.rb b/actionpack/test/controller/render_test.rb
index 1b9b12a..3008f5c 100644
--- a/actionpack/test/controller/render_test.rb
+++ b/actionpack/test/controller/render_test.rb
@@ -329,7 +329,7 @@ class RenderTest < Test::Unit::TestCase
   def test_render_text_with_nil
     get :render_text_with_nil
     assert_response 200
-    assert_equal '', @response.body
+    assert_equal ' ', @response.body
   end
 
   def test_render_text_with_false
diff --git a/actionpack/test/template/render_test.rb b/actionpack/test/template/render_test.rb
index 31cfdce..25bbc26 100644
--- a/actionpack/test/template/render_test.rb
+++ b/actionpack/test/template/render_test.rb
@@ -87,6 +87,14 @@ class ViewRenderTest < Test::Unit::TestCase
       @view.render(:partial => "test/local_inspector", :collection => [ Customer.new("mary") ])
   end
 
+  def test_render_partial_with_empty_collection_should_return_nil
+    assert_nil @view.render(:partial => "test/customer", :collection => [])
+  end
+
+  def test_render_partial_with_nil_collection_should_return_nil
+    assert_nil @view.render(:partial => "test/customer", :collection => nil)
+  end
+
   # TODO: The reason for this test is unclear, improve documentation
   def test_render_partial_and_fallback_to_layout
     assert_equal "Before (Josh)\n\nAfter", @view.render(:partial => "test/layout_for_partial", :locals => { :name => "Josh" })
-- 
1.5.6.4

