<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-09T19:14:50+00:00</created-at>
  <creator-id type="integer">36681</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6403</number>
  <permalink>table_name_prefix-not-honored-under-rake-test</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>&quot;rake test&quot;</tag>
  <title>table_name_prefix not honored under rake test</title>
  <updated-at type="datetime">2011-03-16T14:25:24+00:00</updated-at>
  <user-id type="integer">36681</user-id>
  <version type="integer">4</version>
  <user-name>Fredrik Thuresson</user-name>
  <creator-name>Fredrik Thuresson</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6403</url>
  <priority-name nil="true"></priority-name>
  <original-body>Creating a brand new app under Rails 3.0.4 with one model in it, 


@@@ 
config/database.yml
development:
  database: bogus
test:
  database: bogus_test
@@@

The table exists in products database

@@@ 
class Item &lt; ActiveRecord::Base
  def self.table_name_prefix
    'products.'
  end
end
@@@
the table_name_prefix is not honered when running rake test. It works fine in console and in browser to pick it up from the products database.

rake test produces
@@@
Mysql2::Error: Table 'bogus_test.items' doesn't exist: DELETE FROM `items`
@@@

Is this expected?</original-body>
  <latest-body>Creating a brand new app under Rails 3.0.4 with one model in it, 


@@@ 
config/database.yml
development:
  database: bogus
test:
  database: bogus_test
@@@

The table exists in products database

@@@ 
class Item &lt; ActiveRecord::Base
  def self.table_name_prefix
    'products.'
  end
end
@@@
the table_name_prefix is not honered when running rake test. It works fine in console and in browser to pick it up from the products database.

rake test produces
@@@
Mysql2::Error: Table 'bogus_test.items' doesn't exist: DELETE FROM `items`
@@@

Is this expected?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Creating a brand new app under Rails 3.0.4 with one model in
it,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;config/database.yml
development:
  database: bogus
test:
  database: bogus_test&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The table exists in products database&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Item &amp;lt; ActiveRecord::Base
  def self.table_name_prefix
    'products.'
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;the table_name_prefix is not honered when running rake test. It
works fine in console and in browser to pick it up from the
products database.&lt;/p&gt;
&lt;p&gt;rake test produces&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Mysql2::Error: Table 'bogus_test.items' doesn't exist: DELETE FROM &lt;/code&gt;items
&lt;/pre&gt;
&lt;p&gt;Is this expected?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Creating a brand new app under Rails 3.0.4 with one model in it, 


@@@ 
config/database.yml
development:
  database: bogus
test:
  database: bogus_test
@@@

The table exists in products database

@@@ 
class Item &lt; ActiveRecord::Base
  def self.table_name_prefix
    'products.'
  end
end
@@@
the table_name_prefix is not honered when running rake test. It works fine in console and in browser to pick it up from the products database.

rake test produces
@@@
Mysql2::Error: Table 'bogus_test.items' doesn't exist: DELETE FROM `items`
@@@

Is this expected?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Creating a brand new app under Rails 3.0.4 with one model in
it,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;config/database.yml
development:
  database: bogus
test:
  database: bogus_test&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The table exists in products database&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Item &amp;lt; ActiveRecord::Base
  def self.table_name_prefix
    'products.'
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;the table_name_prefix is not honered when running rake test. It
works fine in console and in browser to pick it up from the
products database.&lt;/p&gt;
&lt;p&gt;rake test produces&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Mysql2::Error: Table 'bogus_test.items' doesn't exist: DELETE FROM &lt;/code&gt;items
&lt;/pre&gt;
&lt;p&gt;Is this expected?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-09T19:14:50+00:00</created-at>
      <creator-id type="integer">36681</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6403</number>
      <permalink>table_name_prefix-not-honored-under-rake-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;rake test&quot;</tag>
      <title>table_name_prefix not honored under rake test</title>
      <updated-at type="datetime">2011-02-09T19:14:54+00:00</updated-at>
      <user-id type="integer">36681</user-id>
      <version type="integer">1</version>
      <user-name>Fredrik Thuresson</user-name>
      <creator-name>Fredrik Thuresson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6403</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I do not believe MySQL supports having periods in table names, because if it did queries could be ambiguous with federated tables:

mysql&gt; create table something.test (id INT);
ERROR 1049 (42000): Unknown database 'something'
mysql&gt; create table something_test (id INT);
Query OK, 0 rows affected (0.00 sec)



I suspect this will work with other database engines though.

-ken</body>
      <body-html>&lt;div&gt;&lt;p&gt;I do not believe MySQL supports having periods in table names,
because if it did queries could be ambiguous with federated
tables:&lt;/p&gt;
&lt;p&gt;mysql&amp;gt; create table something.test (id INT);&lt;br&gt;
ERROR 1049 (42000): Unknown database 'something'&lt;br&gt;
mysql&amp;gt; create table something_test (id INT);&lt;br&gt;
Query OK, 0 rows affected (0.00 sec)&lt;/p&gt;
&lt;p&gt;I suspect this will work with other database engines though.&lt;/p&gt;
&lt;p&gt;-ken&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-14T01:35:57+00:00</created-at>
      <creator-id type="integer">36681</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6403</number>
      <permalink>table_name_prefix-not-honored-under-rake-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;rake test&quot;</tag>
      <title>table_name_prefix not honored under rake test</title>
      <updated-at type="datetime">2011-02-14T01:38:49+00:00</updated-at>
      <user-id type="integer">136858</user-id>
      <version type="integer">2</version>
      <user-name>kenmazaika</user-name>
      <creator-name>Fredrik Thuresson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6403</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>kenmazaika: The period is separating the database and the table name. 
Database: bogus_test, Table Name: items


The following worked for me in test/test_helper.rb

Replaced
@connection = class_name.connection if class_name.respond_to?(:connection)
with
@connection = table_name.classify.constantize.connection

class Fixtures
  def initialize(connection, table_name, class_name, fixture_path, file_filter = DEFAULT_FILTER_RE)
    @connection, @table_name, @fixture_path, @file_filter = connection, table_name, fixture_path, file_filter
    @name = table_name # preserve fixture base name
    @class_name = class_name ||
                  (ActiveRecord::Base.pluralize_table_names ? @table_name.singularize.camelize : @table_name.camelize)
    @table_name = &quot;#{ActiveRecord::Base.table_name_prefix}#{@table_name}#{ActiveRecord::Base.table_name_suffix}&quot;
    @table_name = class_name.table_name if class_name.respond_to?(:table_name)
    @connection = table_name.classify.constantize.connection
    read_fixture_files
  end
end

-Fredrik</body>
      <body-html>&lt;div&gt;&lt;p&gt;kenmazaika: The period is separating the database and the table
name.&lt;br&gt;
Database: bogus_test, Table Name: items&lt;/p&gt;
&lt;p&gt;The following worked for me in test/test_helper.rb&lt;/p&gt;
&lt;p&gt;Replaced&lt;br&gt;
@connection = class_name.connection if
class_name.respond_to?(:connection) with&lt;br&gt;
@connection = table_name.classify.constantize.connection&lt;/p&gt;
&lt;p&gt;class Fixtures&lt;br&gt;
def initialize(connection, table_name, class_name, fixture_path,
file_filter = DEFAULT_FILTER_RE)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@connection, @table_name, @fixture_path, @file_filter = connection, table_name, fixture_path, file_filter
@name = table_name # preserve fixture base name
@class_name = class_name ||
              (ActiveRecord::Base.pluralize_table_names ? @table_name.singularize.camelize : @table_name.camelize)
@table_name = &quot;#{ActiveRecord::Base.table_name_prefix}#{@table_name}#{ActiveRecord::Base.table_name_suffix}&quot;
@table_name = class_name.table_name if class_name.respond_to?(:table_name)
@connection = table_name.classify.constantize.connection
read_fixture_files&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;-Fredrik&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-16T14:22:17+00:00</created-at>
      <creator-id type="integer">36681</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6403</number>
      <permalink>table_name_prefix-not-honored-under-rake-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;rake test&quot;</tag>
      <title>table_name_prefix not honored under rake test</title>
      <updated-at type="datetime">2011-03-16T14:22:19+00:00</updated-at>
      <user-id type="integer">36681</user-id>
      <version type="integer">3</version>
      <user-name>Fredrik Thuresson</user-name>
      <creator-name>Fredrik Thuresson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6403</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Obviously I don't know how to format. Here is another attempt. Ignore the previous comment.

kenmazaika: The period is separating the database and the table name.
Database: bogus_test, Table Name: items
The following worked for me in test/test_helper.rb
@@@
Replaced
@connection = class_name.connection if class_name.respond_to?(:connection) 
with
@connection = table_name.classify.constantize.connection
@@@
@@@
class Fixtures
  def initialize(connection, table_name, class_name, fixture_path, file_filter = DEFAULT_FILTER_RE)
    @connection, @table_name, @fixture_path, @file_filter = connection, table_name, fixture_path, file_filter
    @name = table_name # preserve fixture base name
    @class_name = class_name ||
              (ActiveRecord::Base.pluralize_table_names ? @table_name.singularize.camelize : @table_name.camelize)
    @table_name = &quot;#{ActiveRecord::Base.table_name_prefix}#{@table_name}#{ActiveRecord::Base.table_name_suffix}&quot;
    @table_name = class_name.table_name if class_name.respond_to?(:table_name)
    @connection = table_name.classify.constantize.connection
    read_fixture_files
  end 
end
@@@
-Fredrik</body>
      <body-html>&lt;div&gt;&lt;p&gt;Obviously I don't know how to format. Here is another attempt.
Ignore the previous comment.&lt;/p&gt;
&lt;p&gt;kenmazaika: The period is separating the database and the table
name.&lt;br&gt;
Database: bogus_test, Table Name: items&lt;br&gt;
The following worked for me in test/test_helper.rb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Replaced
@connection = class_name.connection if class_name.respond_to?(:connection) 
with
@connection = table_name.classify.constantize.connection&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;class Fixtures
  def initialize(connection, table_name, class_name, fixture_path, file_filter = DEFAULT_FILTER_RE)
    @connection, @table_name, @fixture_path, @file_filter = connection, table_name, fixture_path, file_filter
    @name = table_name # preserve fixture base name
    @class_name = class_name ||
              (ActiveRecord::Base.pluralize_table_names ? @table_name.singularize.camelize : @table_name.camelize)
    @table_name = &quot;#{ActiveRecord::Base.table_name_prefix}#{@table_name}#{ActiveRecord::Base.table_name_suffix}&quot;
    @table_name = class_name.table_name if class_name.respond_to?(:table_name)
    @connection = table_name.classify.constantize.connection
    read_fixture_files
  end 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;-Fredrik&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-16T14:25:23+00:00</created-at>
      <creator-id type="integer">36681</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6403</number>
      <permalink>table_name_prefix-not-honored-under-rake-test</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;rake test&quot;</tag>
      <title>table_name_prefix not honored under rake test</title>
      <updated-at type="datetime">2011-03-16T14:25:24+00:00</updated-at>
      <user-id type="integer">36681</user-id>
      <version type="integer">4</version>
      <user-name>Fredrik Thuresson</user-name>
      <creator-name>Fredrik Thuresson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6403</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
