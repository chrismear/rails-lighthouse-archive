From 6c7f87ab85d7e5041573496acc36b3bc94b90193 Mon Sep 17 00:00:00 2001
From: Anil Wadghule <anildigital@gmail.com>
Date: Sat, 10 May 2008 15:19:42 +0530
Subject: [PATCH] Added a fix for urls with &amp; problem, not getting parsed correctly.

---
 actionpack/lib/action_controller/request.rb |    1 +
 actionpack/test/controller/request_test.rb  |   12 ++++++++++++
 2 files changed, 13 insertions(+), 0 deletions(-)

diff --git a/actionpack/lib/action_controller/request.rb b/actionpack/lib/action_controller/request.rb
index d5ecbd9..0b9fd56 100755
--- a/actionpack/lib/action_controller/request.rb
+++ b/actionpack/lib/action_controller/request.rb
@@ -430,6 +430,7 @@ EOM
       def parse_query_parameters(query_string)
         return {} if query_string.blank?
 
+        query_string = query_string.gsub("amp;", "")
         pairs = query_string.split('&').collect do |chunk|
           next if chunk.empty?
           key, value = chunk.split('=', 2)
diff --git a/actionpack/test/controller/request_test.rb b/actionpack/test/controller/request_test.rb
index 82ddfec..248fc9b 100644
--- a/actionpack/test/controller/request_test.rb
+++ b/actionpack/test/controller/request_test.rb
@@ -447,6 +447,7 @@ class UrlEncodedRequestParameterParsingTest < Test::Unit::TestCase
     @query_string_with_many_ampersands =
       "&action=create_customer&&&full_name=David%20Heinemeier%20Hansson"
     @query_string_with_empty_key = "action=create_customer&full_name=David%20Heinemeier%20Hansson&=Save"
+    @query_string_with_amp_characters = "action=create_customer&amp;full_name=David"
   end
 
   def test_query_string
@@ -456,6 +457,17 @@ class UrlEncodedRequestParameterParsingTest < Test::Unit::TestCase
     )
   end
 
+  # 
+  # &amp; is not supported in Firefox 2.0.0.* Windows
+  # so urls with &amp; are handled by Rails to parse those correctly to params.
+  #
+  def test_query_string_with_amp_chars
+    assert_equal(
+      { "action" => "create_customer", "full_name" => "David" },
+      ActionController::AbstractRequest.parse_query_parameters(@query_string_with_amp_characters)
+    )
+  end
+
   def test_deep_query_string
     expected = {'x' => {'y' => {'z' => '10'}}}
     assert_equal(expected, ActionController::AbstractRequest.parse_query_parameters('x[y][z]=10'))
-- 
1.5.3.7

