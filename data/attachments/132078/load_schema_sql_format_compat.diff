From 83f7a2d8aac0f9c0aa1892ced7afa25c618ddfbb Mon Sep 17 00:00:00 2001
From: Peter Marklund <peter_marklund@fastmail.fm>
Date: Thu, 11 Jun 2009 14:29:01 +0200
Subject: [PATCH] Made Rake task db:schema:load load the schema from the db/development_structure.sql file if ActiveRecord schema_format == :sql. With this change the db:setup task in Rails 3 is sql format compatible.

---
 railties/lib/tasks/databases.rake |   75 +++++++++++++++++++++----------------
 1 files changed, 43 insertions(+), 32 deletions(-)

diff --git a/railties/lib/tasks/databases.rake b/railties/lib/tasks/databases.rake
index 9588fab..981d835 100644
--- a/railties/lib/tasks/databases.rake
+++ b/railties/lib/tasks/databases.rake
@@ -255,8 +255,15 @@ namespace :db do
 
     desc "Load a schema.rb file into the database"
     task :load => :environment do
-      file = ENV['SCHEMA'] || "#{RAILS_ROOT}/db/schema.rb"
-      load(file)
+      case ActiveRecord::Base.schema_format
+      when :ruby
+        file = ENV['SCHEMA'] || "#{RAILS_ROOT}/db/schema.rb"
+        load(file)
+      when :sql
+        load_database_structure
+      else
+        $stderr.puts "Don't know how to load schema format #{ActiveRecord::Base.schema_format}"
+      end
     end
   end
 
@@ -309,36 +316,7 @@ namespace :db do
 
     desc "Recreate the test databases from the development structure"
     task :clone_structure => [ "db:structure:dump", "db:test:purge" ] do
-      abcs = ActiveRecord::Base.configurations
-      case abcs["test"]["adapter"]
-      when "mysql"
-        ActiveRecord::Base.establish_connection(:test)
-        ActiveRecord::Base.connection.execute('SET foreign_key_checks = 0')
-        IO.readlines("#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql").join.split("\n\n").each do |table|
-          ActiveRecord::Base.connection.execute(table)
-        end
-      when "postgresql"
-        ENV['PGHOST']     = abcs["test"]["host"] if abcs["test"]["host"]
-        ENV['PGPORT']     = abcs["test"]["port"].to_s if abcs["test"]["port"]
-        ENV['PGPASSWORD'] = abcs["test"]["password"].to_s if abcs["test"]["password"]
-        `psql -U "#{abcs["test"]["username"]}" -f #{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql #{abcs["test"]["database"]}`
-      when "sqlite", "sqlite3"
-        dbfile = abcs["test"]["database"] || abcs["test"]["dbfile"]
-        `#{abcs["test"]["adapter"]} #{dbfile} < #{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql`
-      when "sqlserver"
-        `osql -E -S #{abcs["test"]["host"]} -d #{abcs["test"]["database"]} -i db\\#{RAILS_ENV}_structure.sql`
-      when "oci", "oracle"
-        ActiveRecord::Base.establish_connection(:test)
-        IO.readlines("#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql").join.split(";\n\n").each do |ddl|
-          ActiveRecord::Base.connection.execute(ddl)
-        end
-      when "firebird"
-        set_firebird_env(abcs["test"])
-        db_string = firebird_db_string(abcs["test"])
-        sh "isql -i #{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql #{db_string}"
-      else
-        raise "Task not supported by '#{abcs["test"]["adapter"]}'"
-      end
+      load_database_structure('test')
     end
 
     desc "Empty the test database"
@@ -409,6 +387,39 @@ def drop_database(config)
   end
 end
 
+def load_database_structure(env = RAILS_ENV)
+  abcs = ActiveRecord::Base.configurations
+  case abcs[env]["adapter"]
+  when "mysql"
+    ActiveRecord::Base.establish_connection(:test)
+    ActiveRecord::Base.connection.execute('SET foreign_key_checks = 0')
+    IO.readlines("#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql").join.split("\n\n").each do |table|
+      ActiveRecord::Base.connection.execute(table)
+    end
+  when "postgresql"
+    ENV['PGHOST']     = abcs[env]["host"] if abcs[env]["host"]
+    ENV['PGPORT']     = abcs[env]["port"].to_s if abcs[env]["port"]
+    ENV['PGPASSWORD'] = abcs[env]["password"].to_s if abcs[env]["password"]
+    `psql -U "#{abcs[env]["username"]}" -f #{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql #{abcs[env]["database"]}`
+  when "sqlite", "sqlite3"
+    dbfile = abcs[env]["database"] || abcs[env]["dbfile"]
+    `#{abcs[env]["adapter"]} #{dbfile} < #{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql`
+  when "sqlserver"
+    `osql -E -S #{abcs[env]["host"]} -d #{abcs[env]["database"]} -i db\\#{RAILS_ENV}_structure.sql`
+  when "oci", "oracle"
+    ActiveRecord::Base.establish_connection(:test)
+    IO.readlines("#{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql").join.split(";\n\n").each do |ddl|
+      ActiveRecord::Base.connection.execute(ddl)
+    end
+  when "firebird"
+    set_firebird_env(abcs[env])
+    db_string = firebird_db_string(abcs[env])
+    sh "isql -i #{RAILS_ROOT}/db/#{RAILS_ENV}_structure.sql #{db_string}"
+  else
+    raise "Task not supported by '#{abcs[env]["adapter"]}'"
+  end  
+end
+
 def session_table_name
   ActiveRecord::Base.pluralize_table_names ? :sessions : :session
 end
-- 
1.5.6

