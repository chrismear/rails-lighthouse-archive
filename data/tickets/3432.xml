<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-10-27T21:14:20+00:00</created-at>
  <creator-id type="integer">20273</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3432</number>
  <permalink>table_name_id_seq-isnt-renamed-along-with-the-tables-rename-in-postgres</permalink>
  <priority type="integer">167383</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>migration postgres rename_table</tag>
  <title>table_name_id_seq isn't renamed along with the table's rename in postgres</title>
  <updated-at type="datetime">2011-02-02T17:47:44+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">4</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Josh Sharpe</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3432</url>
  <priority-name nil="true"></priority-name>
  <original-body>In postgres, when you create a table a sequence is also created named 'table_name_id_seq' which (I think) is used to generate the next ID for the table.

If you later rename the table using a migration it *doesn't* rename the associated sequence.  So you end up with a table that is requesting IDs from a sequence of the old name.

Wouldn't it make sense to rename the sequence and the reference to it at the same time as the the rename?

I would think if this were to be implemented there should also be a new option on rename_table to disable this feature, seeing as some people may not want this to happen.</original-body>
  <latest-body>In postgres, when you create a table a sequence is also created named 'table_name_id_seq' which (I think) is used to generate the next ID for the table.

If you later rename the table using a migration it *doesn't* rename the associated sequence.  So you end up with a table that is requesting IDs from a sequence of the old name.

Wouldn't it make sense to rename the sequence and the reference to it at the same time as the the rename?

I would think if this were to be implemented there should also be a new option on rename_table to disable this feature, seeing as some people may not want this to happen.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In postgres, when you create a table a sequence is also created
named 'table_name_id_seq' which (I think) is used to generate the
next ID for the table.&lt;/p&gt;
&lt;p&gt;If you later rename the table using a migration it
&lt;em&gt;doesn't&lt;/em&gt; rename the associated sequence. So you end up with
a table that is requesting IDs from a sequence of the old name.&lt;/p&gt;
&lt;p&gt;Wouldn't it make sense to rename the sequence and the reference
to it at the same time as the the rename?&lt;/p&gt;
&lt;p&gt;I would think if this were to be implemented there should also
be a new option on rename_table to disable this feature, seeing as
some people may not want this to happen.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In postgres, when you create a table a sequence is also created named 'table_name_id_seq' which (I think) is used to generate the next ID for the table.

If you later rename the table using a migration it *doesn't* rename the associated sequence.  So you end up with a table that is requesting IDs from a sequence of the old name.

Wouldn't it make sense to rename the sequence and the reference to it at the same time as the the rename?

I would think if this were to be implemented there should also be a new option on rename_table to disable this feature, seeing as some people may not want this to happen.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In postgres, when you create a table a sequence is also created
named 'table_name_id_seq' which (I think) is used to generate the
next ID for the table.&lt;/p&gt;
&lt;p&gt;If you later rename the table using a migration it
&lt;em&gt;doesn't&lt;/em&gt; rename the associated sequence. So you end up with
a table that is requesting IDs from a sequence of the old name.&lt;/p&gt;
&lt;p&gt;Wouldn't it make sense to rename the sequence and the reference
to it at the same time as the the rename?&lt;/p&gt;
&lt;p&gt;I would think if this were to be implemented there should also
be a new option on rename_table to disable this feature, seeing as
some people may not want this to happen.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-27T21:14:20+00:00</created-at>
      <creator-id type="integer">20273</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3432</number>
      <permalink>table_name_id_seq-isnt-renamed-along-with-the-tables-rename-in-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>migration postgres rename_table</tag>
      <title>table_name_id_seq isn't renamed along with the table's rename in postgres</title>
      <updated-at type="datetime">2009-10-27T21:14:24+00:00</updated-at>
      <user-id type="integer">20273</user-id>
      <version type="integer">1</version>
      <user-name>Josh Sharpe</user-name>
      <creator-name>Josh Sharpe</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3432</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 can be pretty confusing, especially when some dbs are being ditched and recreated. Some db have the proper sequence name and some haven't.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 can be pretty confusing, especially when some dbs are being
ditched and recreated. Some db have the proper sequence name and
some haven't.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-03T09:00:57+01:00</created-at>
      <creator-id type="integer">20273</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3432</number>
      <permalink>table_name_id_seq-isnt-renamed-along-with-the-tables-rename-in-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>migration postgres rename_table</tag>
      <title>table_name_id_seq isn't renamed along with the table's rename in postgres</title>
      <updated-at type="datetime">2010-05-03T09:01:02+01:00</updated-at>
      <user-id type="integer">36650</user-id>
      <version type="integer">2</version>
      <user-name>Elise Huard</user-name>
      <creator-name>Josh Sharpe</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3432</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:43:03+00:00</created-at>
      <creator-id type="integer">20273</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3432</number>
      <permalink>table_name_id_seq-isnt-renamed-along-with-the-tables-rename-in-postgres</permalink>
      <priority type="integer">167383</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>migration postgres rename_table</tag>
      <title>table_name_id_seq isn't renamed along with the table's rename in postgres</title>
      <updated-at type="datetime">2011-02-02T17:47:24+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Josh Sharpe</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3432</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:43:04+00:00</created-at>
      <creator-id type="integer">20273</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3432</number>
      <permalink>table_name_id_seq-isnt-renamed-along-with-the-tables-rename-in-postgres</permalink>
      <priority type="integer">167383</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>migration postgres rename_table</tag>
      <title>table_name_id_seq isn't renamed along with the table's rename in postgres</title>
      <updated-at type="datetime">2011-02-02T17:47:44+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Josh Sharpe</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3432</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
