<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-08-16T22:06:29+01:00</created-at>
  <creator-id type="integer">30696</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2382</number>
  <permalink>no-way-to-use-different-name-of-session-key-per-controller</permalink>
  <priority type="integer">1542</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.3.2 bugmash regression session</tag>
  <title>No way to use different name of session key per controller</title>
  <updated-at type="datetime">2009-08-16T22:07:21+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">9</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Tietew</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2382</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>in Rails &lt;= 2.1

@@@ ruby
class ApplicationController &lt; ActionController::Base
  session :session_key =&gt; 'main_session'
end
class Admin::SomeAdminController &lt; ApplicationController
  session :session_key =&gt; 'admin_session'
end
@@@

accessing &quot;/&quot; uses main_session=xxxxxx for session,
accessing &quot;/admin/some_admin&quot; uses admin_session=xxxxxx for session.

in Rails 2.3.2, no way to do like above.
because ActionController::Session::AbstractStore#initialize fixes session key to @key.
It is too late to change request.session_options[:key] when controller's before_filter is called.</original-body>
  <latest-body>in Rails &lt;= 2.1

@@@ ruby
class ApplicationController &lt; ActionController::Base
  session :session_key =&gt; 'main_session'
end
class Admin::SomeAdminController &lt; ApplicationController
  session :session_key =&gt; 'admin_session'
end
@@@

accessing &quot;/&quot; uses main_session=xxxxxx for session,
accessing &quot;/admin/some_admin&quot; uses admin_session=xxxxxx for session.

in Rails 2.3.2, no way to do like above.
because ActionController::Session::AbstractStore#initialize fixes session key to @key.
It is too late to change request.session_options[:key] when controller's before_filter is called.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;in Rails &amp;lt;= 2.1&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class ApplicationController &amp;lt; ActionController::Base
  session :session_key =&amp;gt; 'main_session'
end
class Admin::SomeAdminController &amp;lt; ApplicationController
  session :session_key =&amp;gt; 'admin_session'
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;accessing &quot;/&quot; uses main_session=xxxxxx for session, accessing
&quot;/admin/some_admin&quot; uses admin_session=xxxxxx for session.&lt;/p&gt;
&lt;p&gt;in Rails 2.3.2, no way to do like above. because
ActionController::Session::AbstractStore#initialize fixes session
key to @key. It is too late to change request.session_options[:key]
when controller's before_filter is called.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>in Rails &lt;= 2.1

@@@ ruby
class ApplicationController &lt; ActionController::Base
  session :session_key =&gt; 'main_session'
end
class Admin::SomeAdminController &lt; ApplicationController
  session :session_key =&gt; 'admin_session'
end
@@@

accessing &quot;/&quot; uses main_session=xxxxxx for session,
accessing &quot;/admin/some_admin&quot; uses admin_session=xxxxxx for session.

in Rails 2.3.2, no way to do like above.
because ActionController::Session::AbstractStore#initialize fixes session key to @key.
It is too late to change request.session_options[:key] when controller's before_filter is called.</body>
      <body-html>&lt;div&gt;&lt;p&gt;in Rails &amp;lt;= 2.1&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class ApplicationController &amp;lt; ActionController::Base
  session :session_key =&amp;gt; 'main_session'
end
class Admin::SomeAdminController &amp;lt; ApplicationController
  session :session_key =&amp;gt; 'admin_session'
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;accessing &quot;/&quot; uses main_session=xxxxxx for session, accessing
&quot;/admin/some_admin&quot; uses admin_session=xxxxxx for session.&lt;/p&gt;
&lt;p&gt;in Rails 2.3.2, no way to do like above. because
ActionController::Session::AbstractStore#initialize fixes session
key to @key. It is too late to change request.session_options[:key]
when controller's before_filter is called.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-31T06:09:58+01:00</created-at>
      <creator-id type="integer">30696</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2382</number>
      <permalink>no-way-to-use-different-name-of-session-key-per-controller</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 regression session</tag>
      <title>No way to use different name of session key per controller</title>
      <updated-at type="datetime">2009-03-31T06:09:59+01:00</updated-at>
      <user-id type="integer">30696</user-id>
      <version type="integer">1</version>
      <user-name>Tietew</user-name>
      <creator-name>Tietew</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2382</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-08T12:46:36+01:00</created-at>
      <creator-id type="integer">30696</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.2 regression session
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2382</number>
      <permalink>no-way-to-use-different-name-of-session-key-per-controller</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 bugmash regression session</tag>
      <title>No way to use different name of session key per controller</title>
      <updated-at type="datetime">2009-08-08T12:46:37+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">2</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Tietew</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2382</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The session class method itself has been deprecated. Have you tried using the session_options class method instead?</body>
      <body-html>&lt;div&gt;&lt;p&gt;The session class method itself has been deprecated. Have you
tried using the session_options class method instead?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-10T07:35:40+01:00</created-at>
      <creator-id type="integer">30696</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2382</number>
      <permalink>no-way-to-use-different-name-of-session-key-per-controller</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 bugmash regression session</tag>
      <title>No way to use different name of session key per controller</title>
      <updated-at type="datetime">2009-08-10T07:35:43+01:00</updated-at>
      <user-id type="integer">11787</user-id>
      <version type="integer">3</version>
      <user-name>Kamal Fariz</user-name>
      <creator-name>Tietew</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2382</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>AC::Base.session_options in only effective.
session_options of subclass of AC::Base does not help us.</body>
      <body-html>&lt;div&gt;&lt;p&gt;AC::Base.session_options in only effective.&lt;br&gt;
session_options of subclass of AC::Base does not help us.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-10T08:58:08+01:00</created-at>
      <creator-id type="integer">30696</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2382</number>
      <permalink>no-way-to-use-different-name-of-session-key-per-controller</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 bugmash regression session</tag>
      <title>No way to use different name of session key per controller</title>
      <updated-at type="datetime">2009-08-10T08:58:10+01:00</updated-at>
      <user-id type="integer">30696</user-id>
      <version type="integer">4</version>
      <user-name>Tietew</user-name>
      <creator-name>Tietew</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2382</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>-1 Don't really see where this could be useful ?

Indeed, using the session :session_key gives following warning, at boot for application_controller and at request for other controllers:

DEPRECATION WARNING: Disabling sessions for a single controller has been deprecated. Sessions are now lazy loaded. So if you don't access them, consider them off. You can still modify the session cookie options with request.session_options.

As far as i can see, request.session_options[:key] seems to change the rack.session.options for the current request, but the session used is still identified by the same secret and key, and this is not accessible from the controller, and is a constant throughout the application.

The functionality could be achieved by extra sublevel to this hierarchy (with the cookies hash containing hashes itself), but once again I'm not sure what could be gained from this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;-1 Don't really see where this could be useful ?&lt;/p&gt;
&lt;p&gt;Indeed, using the session :session_key gives following warning,
at boot for application_controller and at request for other
controllers:&lt;/p&gt;
&lt;p&gt;DEPRECATION WARNING: Disabling sessions for a single controller
has been deprecated. Sessions are now lazy loaded. So if you don't
access them, consider them off. You can still modify the session
cookie options with request.session_options.&lt;/p&gt;
&lt;p&gt;As far as i can see, request.session_options[:key] seems to
change the rack.session.options for the current request, but the
session used is still identified by the same secret and key, and
this is not accessible from the controller, and is a constant
throughout the application.&lt;/p&gt;
&lt;p&gt;The functionality could be achieved by extra sublevel to this
hierarchy (with the cookies hash containing hashes itself), but
once again I'm not sure what could be gained from this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-15T22:36:07+01:00</created-at>
      <creator-id type="integer">30696</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2382</number>
      <permalink>no-way-to-use-different-name-of-session-key-per-controller</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 bugmash regression session</tag>
      <title>No way to use different name of session key per controller</title>
      <updated-at type="datetime">2009-08-15T22:36:11+01:00</updated-at>
      <user-id type="integer">36650</user-id>
      <version type="integer">5</version>
      <user-name>Elise Huard</user-name>
      <creator-name>Tietew</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2382</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>-1 - I don't understand the use case for this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;-1 - I don't understand the use case for this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-15T23:36:22+01:00</created-at>
      <creator-id type="integer">30696</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2382</number>
      <permalink>no-way-to-use-different-name-of-session-key-per-controller</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 bugmash regression session</tag>
      <title>No way to use different name of session key per controller</title>
      <updated-at type="datetime">2009-08-15T23:36:25+01:00</updated-at>
      <user-id type="integer">64236</user-id>
      <version type="integer">6</version>
      <user-name>John Pignata</user-name>
      <creator-name>Tietew</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2382</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The common use case for this is to separate sessions for an admin-type interface/section and the front-end of the site, without being forced to build to applications.

Personally, I don't like to have my backend and frontend sessions shared, and that was never a problem when we could change sessions options per-controller.  From what I gather, this is the use-case that most people are interested in.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The common use case for this is to separate sessions for an
admin-type interface/section and the front-end of the site, without
being forced to build to applications.&lt;/p&gt;
&lt;p&gt;Personally, I don't like to have my backend and frontend
sessions shared, and that was never a problem when we could change
sessions options per-controller. From what I gather, this is the
use-case that most people are interested in.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-15T23:42:15+01:00</created-at>
      <creator-id type="integer">30696</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2382</number>
      <permalink>no-way-to-use-different-name-of-session-key-per-controller</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 bugmash regression session</tag>
      <title>No way to use different name of session key per controller</title>
      <updated-at type="datetime">2009-08-15T23:42:21+01:00</updated-at>
      <user-id type="integer">11769</user-id>
      <version type="integer">7</version>
      <user-name>jmoses</user-name>
      <creator-name>Tietew</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2382</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>is this for security ?  The only way 2 sessions would be more secure than one is if one of the session ids is only transmitted over SSL.  Otherwise, I still don't see the point ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;is this for security ? The only way 2 sessions would be more
secure than one is if one of the session ids is only transmitted
over SSL. Otherwise, I still don't see the point ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-16T08:31:55+01:00</created-at>
      <creator-id type="integer">30696</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2382</number>
      <permalink>no-way-to-use-different-name-of-session-key-per-controller</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 bugmash regression session</tag>
      <title>No way to use different name of session key per controller</title>
      <updated-at type="datetime">2009-08-16T08:31:58+01:00</updated-at>
      <user-id type="integer">36650</user-id>
      <version type="integer">8</version>
      <user-name>Elise Huard</user-name>
      <creator-name>Tietew</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2382</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Workaround: you can namespace your session usage with a hash instead of tracking separate session cookies.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Workaround: you can namespace your session usage with a hash
instead of tracking separate session cookies.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-16T22:06:29+01:00</created-at>
      <creator-id type="integer">30696</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2382</number>
      <permalink>no-way-to-use-different-name-of-session-key-per-controller</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.3.2 bugmash regression session</tag>
      <title>No way to use different name of session key per controller</title>
      <updated-at type="datetime">2009-08-16T22:07:19+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">9</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Tietew</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2382</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
