<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-24T01:16:02+01:00</created-at>
  <creator-id type="integer">64367</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3252</number>
  <permalink>add_index-on-postgresql-with-long-index-names-migrations-fail-with-input-string-is-longer-than-namedatalen-1-63</permalink>
  <priority type="integer">149836</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>2.3.4 2.3.5 add_index migrations postgresql</tag>
  <title>add_index on postgresql with long index names: migrations fail with Input string is longer than NAMEDATALEN-1 (63)</title>
  <updated-at type="datetime">2010-04-23T18:04:28+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">9</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>David Lee</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3252</url>
  <priority-name nil="true"></priority-name>
  <original-body>as of 2.3.4, migration will error out if the autogenerated index name is longer than 64 chars with:

Input string is longer than NAMEDATALEN-1 (63)

Previously, such long index names would be truncated (and appear so in schema.rb) but not cause an error.

Some discussion here: http://railsforum.com/viewtopic.php?id=33704 identifies the cause of the problem:

_quote_

I looked at the rails source code and the function that builds the index name, add_index() in schema_statements.rb, has not changed between versions 2.2.2 and 2.3.3. However postgresql_adapter.rb's function quote_column_name() now invokes pgconn_s_quote_ident() in ruby-pg, which performs the check on NAMEDATALEN.

_endquote_</original-body>
  <latest-body>as of 2.3.4, migration will error out if the autogenerated index name is longer than 64 chars with:

Input string is longer than NAMEDATALEN-1 (63)

Previously, such long index names would be truncated (and appear so in schema.rb) but not cause an error.

Some discussion here: http://railsforum.com/viewtopic.php?id=33704 identifies the cause of the problem:

_quote_

I looked at the rails source code and the function that builds the index name, add_index() in schema_statements.rb, has not changed between versions 2.2.2 and 2.3.3. However postgresql_adapter.rb's function quote_column_name() now invokes pgconn_s_quote_ident() in ruby-pg, which performs the check on NAMEDATALEN.

_endquote_</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;as of 2.3.4, migration will error out if the autogenerated index
name is longer than 64 chars with:&lt;/p&gt;
&lt;p&gt;Input string is longer than NAMEDATALEN-1 (63)&lt;/p&gt;
&lt;p&gt;Previously, such long index names would be truncated (and appear
so in schema.rb) but not cause an error.&lt;/p&gt;
&lt;p&gt;Some discussion here: &lt;a href=
&quot;http://railsforum.com/viewtopic.php?id=33704&quot;&gt;http://railsforum.com/viewtopic.php?id=33704&lt;/a&gt;
identifies the cause of the problem:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;quote&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I looked at the rails source code and the function that builds
the index name, add_index() in schema_statements.rb, has not
changed between versions 2.2.2 and 2.3.3. However
postgresql_adapter.rb's function quote_column_name() now invokes
pgconn_s_quote_ident() in ruby-pg, which performs the check on
NAMEDATALEN.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;endquote&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>as of 2.3.4, migration will error out if the autogenerated index name is longer than 64 chars with:

Input string is longer than NAMEDATALEN-1 (63)

Previously, such long index names would be truncated (and appear so in schema.rb) but not cause an error.

Some discussion here: http://railsforum.com/viewtopic.php?id=33704 identifies the cause of the problem:

_quote_

I looked at the rails source code and the function that builds the index name, add_index() in schema_statements.rb, has not changed between versions 2.2.2 and 2.3.3. However postgresql_adapter.rb's function quote_column_name() now invokes pgconn_s_quote_ident() in ruby-pg, which performs the check on NAMEDATALEN.

_endquote_</body>
      <body-html>&lt;div&gt;&lt;p&gt;as of 2.3.4, migration will error out if the autogenerated index
name is longer than 64 chars with:&lt;/p&gt;
&lt;p&gt;Input string is longer than NAMEDATALEN-1 (63)&lt;/p&gt;
&lt;p&gt;Previously, such long index names would be truncated (and appear
so in schema.rb) but not cause an error.&lt;/p&gt;
&lt;p&gt;Some discussion here: &lt;a href=
&quot;http://railsforum.com/viewtopic.php?id=33704&quot;&gt;http://railsforum.com/viewtopic.php?id=33704&lt;/a&gt;
identifies the cause of the problem:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;quote&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I looked at the rails source code and the function that builds
the index name, add_index() in schema_statements.rb, has not
changed between versions 2.2.2 and 2.3.3. However
postgresql_adapter.rb's function quote_column_name() now invokes
pgconn_s_quote_ident() in ruby-pg, which performs the check on
NAMEDATALEN.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;endquote&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-24T01:16:02+01:00</created-at>
      <creator-id type="integer">64367</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3252</number>
      <permalink>add_index-on-postgresql-with-long-index-names-migrations-fail-with-input-string-is-longer-than-namedatalen-1-63</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 add_index migrations postgresql</tag>
      <title>add_index on postgresql with long index names: migrations fail with Input string is longer than NAMEDATALEN-1 (63)</title>
      <updated-at type="datetime">2009-09-24T01:16:07+01:00</updated-at>
      <user-id type="integer">64367</user-id>
      <version type="integer">1</version>
      <user-name>David Lee</user-name>
      <creator-name>David Lee</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3252</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-25T11:51:44+01:00</created-at>
      <creator-id type="integer">64367</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.4 add_index migrations postgresql
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3252</number>
      <permalink>add_index-on-postgresql-with-long-index-names-migrations-fail-with-input-string-is-longer-than-namedatalen-1-63</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 add_index bugmash migrations postgresql</tag>
      <title>add_index on postgresql with long index names: migrations fail with Input string is longer than NAMEDATALEN-1 (63)</title>
      <updated-at type="datetime">2009-09-25T12:47:26+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">2</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>David Lee</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3252</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This work has bitten me to.
I verified the same behaviour with the postgres driver 
when trying to create a 4 fields long composite index.
I'm working on a patch to truncate index names to the max
identifier size.

Will have it uploaded in a couple hours.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This work has bitten me to.&lt;br&gt;
I verified the same behaviour with the postgres driver&lt;br&gt;
when trying to create a 4 fields long composite index.&lt;br&gt;
I'm working on a patch to truncate index names to the max&lt;br&gt;
identifier size.&lt;/p&gt;
&lt;p&gt;Will have it uploaded in a couple hours.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-25T16:09:15+01:00</created-at>
      <creator-id type="integer">64367</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3252</number>
      <permalink>add_index-on-postgresql-with-long-index-names-migrations-fail-with-input-string-is-longer-than-namedatalen-1-63</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 add_index bugmash migrations postgresql</tag>
      <title>add_index on postgresql with long index names: migrations fail with Input string is longer than NAMEDATALEN-1 (63)</title>
      <updated-at type="datetime">2009-09-25T16:09:19+01:00</updated-at>
      <user-id type="integer">25341</user-id>
      <version type="integer">3</version>
      <user-name>Sebastian A. Espindola</user-name>
      <creator-name>David Lee</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3252</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>For me, the same thing occurs for remove_index, presumably for the same reason. As with add_index, using the :name option worked around it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;For me, the same thing occurs for remove_index, presumably for
the same reason. As with add_index, using the :name option worked
around it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-26T01:29:25+01:00</created-at>
      <creator-id type="integer">64367</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3252</number>
      <permalink>add_index-on-postgresql-with-long-index-names-migrations-fail-with-input-string-is-longer-than-namedatalen-1-63</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 add_index bugmash migrations postgresql</tag>
      <title>add_index on postgresql with long index names: migrations fail with Input string is longer than NAMEDATALEN-1 (63)</title>
      <updated-at type="datetime">2009-09-26T01:29:30+01:00</updated-at>
      <user-id type="integer">27245</user-id>
      <version type="integer">4</version>
      <user-name>Ben Woodcroft</user-name>
      <creator-name>David Lee</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3252</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>still true as of 2.3.5</body>
      <body-html>&lt;div&gt;&lt;p&gt;still true as of 2.3.5&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-02T05:44:58+00:00</created-at>
      <creator-id type="integer">64367</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.4 add_index bugmash migrations postgresql
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3252</number>
      <permalink>add_index-on-postgresql-with-long-index-names-migrations-fail-with-input-string-is-longer-than-namedatalen-1-63</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 2.3.5 add_index bugmash migrations postgresql</tag>
      <title>add_index on postgresql with long index names: migrations fail with Input string is longer than NAMEDATALEN-1 (63)</title>
      <updated-at type="datetime">2010-01-02T05:45:03+00:00</updated-at>
      <user-id type="integer">27245</user-id>
      <version type="integer">5</version>
      <user-name>Ben Woodcroft</user-name>
      <creator-name>David Lee</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3252</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There's a more general issue where the AR adapters don't have any details about the various adapter's limits; see #3452 for a patch I'm working on to clean up the behavior of add_index and friends. It needs some rewriting, but could be useful in cases like this.

BTW, is there a coherent place where these limits are defined for PG? I had a heck of a time trying to find documentation for any of the supporting DBs that actually specified hard limits.</body>
      <body-html>&lt;div&gt;&lt;p&gt;There's a more general issue where the AR adapters don't have
any details about the various adapter's limits; see &lt;a href=
&quot;/projects/8994/tickets/3452&quot; title=&quot;Ticket #3452&quot;&gt;#3452&lt;/a&gt; for a
patch I'm working on to clean up the behavior of add_index and
friends. It needs some rewriting, but could be useful in cases like
this.&lt;/p&gt;
&lt;p&gt;BTW, is there a coherent place where these limits are defined
for PG? I had a heck of a time trying to find documentation for any
of the supporting DBs that actually specified hard limits.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-04T19:18:12+00:00</created-at>
      <creator-id type="integer">64367</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3252</number>
      <permalink>add_index-on-postgresql-with-long-index-names-migrations-fail-with-input-string-is-longer-than-namedatalen-1-63</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 2.3.5 add_index bugmash migrations postgresql</tag>
      <title>add_index on postgresql with long index names: migrations fail with Input string is longer than NAMEDATALEN-1 (63)</title>
      <updated-at type="datetime">2010-01-04T19:18:14+00:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">6</version>
      <user-name>Matt Jones</user-name>
      <creator-name>David Lee</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3252</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/13645)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/13645&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-12T12:46:19+00:00</created-at>
      <creator-id type="integer">64367</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.4 2.3.5 add_index bugmash migrations postgresql
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3252</number>
      <permalink>add_index-on-postgresql-with-long-index-names-migrations-fail-with-input-string-is-longer-than-namedatalen-1-63</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 2.3.5 add_index migrations postgresql</tag>
      <title>add_index on postgresql with long index names: migrations fail with Input string is longer than NAMEDATALEN-1 (63)</title>
      <updated-at type="datetime">2010-02-12T12:46:19+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">7</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>David Lee</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3252</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You can find PG defaults in pg_config_manual.h which should generally be available since you need postgres headers to install the gem. Specifically, NAMEDATALEN</body>
      <body-html>&lt;div&gt;&lt;p&gt;You can find PG defaults in pg_config_manual.h which should
generally be available since you need postgres headers to install
the gem. Specifically, NAMEDATALEN&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-23T00:23:37+00:00</created-at>
      <creator-id type="integer">64367</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3252</number>
      <permalink>add_index-on-postgresql-with-long-index-names-migrations-fail-with-input-string-is-longer-than-namedatalen-1-63</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 2.3.5 add_index migrations postgresql</tag>
      <title>add_index on postgresql with long index names: migrations fail with Input string is longer than NAMEDATALEN-1 (63)</title>
      <updated-at type="datetime">2010-03-23T00:23:40+00:00</updated-at>
      <user-id type="integer">29726</user-id>
      <version type="integer">8</version>
      <user-name>Incite</user-name>
      <creator-name>David Lee</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3252</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-23T18:04:24+01:00</created-at>
      <creator-id type="integer">64367</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3252</number>
      <permalink>add_index-on-postgresql-with-long-index-names-migrations-fail-with-input-string-is-longer-than-namedatalen-1-63</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>2.3.4 2.3.5 add_index migrations postgresql</tag>
      <title>add_index on postgresql with long index names: migrations fail with Input string is longer than NAMEDATALEN-1 (63)</title>
      <updated-at type="datetime">2010-04-23T18:04:28+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">9</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>David Lee</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3252</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
