<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-07-13T04:56:30+01:00</created-at>
  <creator-id type="integer">2529</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">609</number>
  <permalink>current_render_extension-nil-after-render-inline</permalink>
  <priority type="integer">97</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.1 actionpack bug helper patch tested</tag>
  <title>current_render_extension nil after render :inline</title>
  <updated-at type="datetime">2008-07-13T19:24:31+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">5</version>
  <user-name>Repository</user-name>
  <creator-name>Daniel Guettler</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/609</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When calling render :inline =&gt; 'Some inline content' within a template current_render_extension will become nil which will cause the CacheHelper cache method to call to_sym on nil.
Example:
@@@ ruby
&lt;%= render :inline =&gt; &quot;Some content inline&quot; %&gt;
&lt;% cache do %&gt;
  Cache some content here...
&lt;% end %&gt;
@@@

will give the following error:
@@@ html
You have a nil object when you didn't expect it!
The error occurred while evaluating nil.to_sym
vendor/rails/actionpack/lib/action_view/helpers/cache_helper.rb:36:in `cache'
app/views/users/index.html.erb:2:in `_run_erb_47app47views47users47index46html46erb'
vendor/rails/actionpack/lib/action_view/base.rb:342:in `send'
vendor/rails/actionpack/lib/action_view/base.rb:342:in `execute'
vendor/rails/actionpack/lib/action_view/template_handlers/compilable.rb:29:in `send'
vendor/rails/actionpack/lib/action_view/template_handlers/compilable.rb:29:in `render'
vendor/rails/actionpack/lib/action_view/template.rb:35:in `render'
vendor/rails/actionpack/lib/action_view/template.rb:22:in `render_template'
vendor/rails/actionpack/lib/action_view/base.rb:248:in `render_file'
@@@

I attached a possible patch for the cache method but I'm not sure if this shouldn't be prevented elsewhere as well...</original-body>
  <latest-body>When calling render :inline =&gt; 'Some inline content' within a template current_render_extension will become nil which will cause the CacheHelper cache method to call to_sym on nil.
Example:
@@@ ruby
&lt;%= render :inline =&gt; &quot;Some content inline&quot; %&gt;
&lt;% cache do %&gt;
  Cache some content here...
&lt;% end %&gt;
@@@

will give the following error:
@@@ html
You have a nil object when you didn't expect it!
The error occurred while evaluating nil.to_sym
vendor/rails/actionpack/lib/action_view/helpers/cache_helper.rb:36:in `cache'
app/views/users/index.html.erb:2:in `_run_erb_47app47views47users47index46html46erb'
vendor/rails/actionpack/lib/action_view/base.rb:342:in `send'
vendor/rails/actionpack/lib/action_view/base.rb:342:in `execute'
vendor/rails/actionpack/lib/action_view/template_handlers/compilable.rb:29:in `send'
vendor/rails/actionpack/lib/action_view/template_handlers/compilable.rb:29:in `render'
vendor/rails/actionpack/lib/action_view/template.rb:35:in `render'
vendor/rails/actionpack/lib/action_view/template.rb:22:in `render_template'
vendor/rails/actionpack/lib/action_view/base.rb:248:in `render_file'
@@@

I attached a possible patch for the cache method but I'm not sure if this shouldn't be prevented elsewhere as well...</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When calling render :inline =&gt; 'Some inline content' within a template current_render_extension will become nil which will cause the CacheHelper cache method to call to_sym on nil.
&lt;/p&gt;&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&amp;lt;%= render :inline =&amp;gt; &amp;quot;Some content inline&amp;quot; %&amp;gt;
&amp;lt;% cache do %&amp;gt;
  Cache some content here...
&amp;lt;% end %&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
will give the following error:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;You have a nil object when you didn't expect it!
The error occurred while evaluating nil.to_sym
vendor/rails/actionpack/lib/action_view/helpers/cache_helper.rb:36:in `cache'
app/views/users/index.html.erb:2:in `_run_erb_47app47views47users47index46html46erb'
vendor/rails/actionpack/lib/action_view/base.rb:342:in `send'
vendor/rails/actionpack/lib/action_view/base.rb:342:in `execute'
vendor/rails/actionpack/lib/action_view/template_handlers/compilable.rb:29:in `send'
vendor/rails/actionpack/lib/action_view/template_handlers/compilable.rb:29:in `render'
vendor/rails/actionpack/lib/action_view/template.rb:35:in `render'
vendor/rails/actionpack/lib/action_view/template.rb:22:in `render_template'
vendor/rails/actionpack/lib/action_view/base.rb:248:in `render_file'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I attached a possible patch for the cache method but I'm not sure if this shouldn't be prevented elsewhere as well...
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>When calling render :inline =&gt; 'Some inline content' within a template current_render_extension will become nil which will cause the CacheHelper cache method to call to_sym on nil.
Example:
@@@ ruby
&lt;%= render :inline =&gt; &quot;Some content inline&quot; %&gt;
&lt;% cache do %&gt;
  Cache some content here...
&lt;% end %&gt;
@@@

will give the following error:
@@@ html
You have a nil object when you didn't expect it!
The error occurred while evaluating nil.to_sym
vendor/rails/actionpack/lib/action_view/helpers/cache_helper.rb:36:in `cache'
app/views/users/index.html.erb:2:in `_run_erb_47app47views47users47index46html46erb'
vendor/rails/actionpack/lib/action_view/base.rb:342:in `send'
vendor/rails/actionpack/lib/action_view/base.rb:342:in `execute'
vendor/rails/actionpack/lib/action_view/template_handlers/compilable.rb:29:in `send'
vendor/rails/actionpack/lib/action_view/template_handlers/compilable.rb:29:in `render'
vendor/rails/actionpack/lib/action_view/template.rb:35:in `render'
vendor/rails/actionpack/lib/action_view/template.rb:22:in `render_template'
vendor/rails/actionpack/lib/action_view/base.rb:248:in `render_file'
@@@

I attached a possible patch for the cache method but I'm not sure if this shouldn't be prevented elsewhere as well...</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When calling render :inline =&gt; 'Some inline content' within a template current_render_extension will become nil which will cause the CacheHelper cache method to call to_sym on nil.
&lt;/p&gt;&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&amp;lt;%= render :inline =&amp;gt; &amp;quot;Some content inline&amp;quot; %&amp;gt;
&amp;lt;% cache do %&amp;gt;
  Cache some content here...
&amp;lt;% end %&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
will give the following error:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;You have a nil object when you didn't expect it!
The error occurred while evaluating nil.to_sym
vendor/rails/actionpack/lib/action_view/helpers/cache_helper.rb:36:in `cache'
app/views/users/index.html.erb:2:in `_run_erb_47app47views47users47index46html46erb'
vendor/rails/actionpack/lib/action_view/base.rb:342:in `send'
vendor/rails/actionpack/lib/action_view/base.rb:342:in `execute'
vendor/rails/actionpack/lib/action_view/template_handlers/compilable.rb:29:in `send'
vendor/rails/actionpack/lib/action_view/template_handlers/compilable.rb:29:in `render'
vendor/rails/actionpack/lib/action_view/template.rb:35:in `render'
vendor/rails/actionpack/lib/action_view/template.rb:22:in `render_template'
vendor/rails/actionpack/lib/action_view/base.rb:248:in `render_file'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I attached a possible patch for the cache method but I'm not sure if this shouldn't be prevented elsewhere as well...
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-13T04:56:31+01:00</created-at>
      <creator-id type="integer">2529</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">609</number>
      <permalink>current_render_extension-nil-after-render-inline</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 actionpack bug helper patch</tag>
      <title>current_render_extension nil after render :inline</title>
      <updated-at type="datetime">2008-07-13T04:56:31+01:00</updated-at>
      <user-id type="integer">2529</user-id>
      <version type="integer">1</version>
      <user-name>Daniel Guettler</user-name>
      <creator-name>Daniel Guettler</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/609</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Tests plz</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Tests plz
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-13T05:30:18+01:00</created-at>
      <creator-id type="integer">2529</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">609</number>
      <permalink>current_render_extension-nil-after-render-inline</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.1 actionpack bug helper patch</tag>
      <title>current_render_extension nil after render :inline</title>
      <updated-at type="datetime">2008-07-13T05:30:18+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Daniel Guettler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/609</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>added patch with tests for render :inline followed by fragment cache</body>
      <body-html>&lt;div&gt;&lt;p&gt;
added patch with tests for render :inline followed by fragment cache
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-13T05:54:27+01:00</created-at>
      <creator-id type="integer">2529</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.1 actionpack bug helper patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">609</number>
      <permalink>current_render_extension-nil-after-render-inline</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.1 actionpack bug helper patch tested</tag>
      <title>current_render_extension nil after render :inline</title>
      <updated-at type="datetime">2008-07-13T05:54:27+01:00</updated-at>
      <user-id type="integer">2529</user-id>
      <version type="integer">3</version>
      <user-name>Daniel Guettler</user-name>
      <creator-name>Daniel Guettler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/609</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm not so convinced of my solution any more after coming across this related ticket: http://rails.lighthouseapp.com/projects/8994/tickets/605
I'm wondering if this should not rather be changed in Template prepare! method:
@@@ ruby
    def prepare!
      @view.send :evaluate_assigns
      @view.current_render_extension = @extension
      
      if @handler.compilable?
        @handler.compile_template(self) # compile the given template, if necessary
        @method = @view.method_names[method_key] # Set the method name for this template and run it
      end
    end
@@@
by preventing current_render_extension from being set to nil which would preserve the last active render_extension versus falling back to the default.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm not so convinced of my solution any more after coming across this related ticket: &lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994/tickets/605&quot;&gt;http://rails.lighthouseapp.com/p...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
I'm wondering if this should not rather be changed in Template prepare! method:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    def prepare!
      @view.send :evaluate_assigns
      @view.current_render_extension = @extension
      
      if @handler.compilable?
        @handler.compile_template(self) # compile the given template, if necessary
        @method = @view.method_names[method_key] # Set the method name for this template and run it
      end
    end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
by preventing current_render_extension from being set to nil which would preserve the last active render_extension versus falling back to the default.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-13T06:10:33+01:00</created-at>
      <creator-id type="integer">2529</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">609</number>
      <permalink>current_render_extension-nil-after-render-inline</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.1 actionpack bug helper patch tested</tag>
      <title>current_render_extension nil after render :inline</title>
      <updated-at type="datetime">2008-07-13T06:10:33+01:00</updated-at>
      <user-id type="integer">2529</user-id>
      <version type="integer">4</version>
      <user-name>Daniel Guettler</user-name>
      <creator-name>Daniel Guettler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/609</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [e0fef66149092dd3d2988fff64f0ce8765735687]) Made ActionView::Base#first_render a little more private. And added _last_render to track the most recent render. Will fix #609 as a side effect. [#609 state:resolved]
http://github.com/rails/rails/commit/e0fef66149092dd3d2988fff64f0ce8765735687</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [e0fef66149092dd3d2988fff64f0ce8765735687]) Made ActionView::Base#first_render a little more private. And added _last_render to track the most recent render. Will fix &lt;a href=&quot;/projects/8994/tickets/609&quot; title=&quot;Ticket #609&quot;&gt;#609&lt;/a&gt; as a side effect. [#609 state:resolved]
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/e0fef66149092dd3d2988fff64f0ce8765735687&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-13T19:24:31+01:00</created-at>
      <creator-id type="integer">2529</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">609</number>
      <permalink>current_render_extension-nil-after-render-inline</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1 actionpack bug helper patch tested</tag>
      <title>current_render_extension nil after render :inline</title>
      <updated-at type="datetime">2008-07-13T19:24:31+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Daniel Guettler</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/609</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1d3f792f771a03190aabd7eb5db850fc1fec88cf</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-13T04:56:30+01:00</created-at>
      <filename>cache_helper-cache-method-with-current_render_extension-nil.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">32260</id>
      <size type="integer">1246</size>
      <uploader-id type="integer">2529</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/32260/cache_helper-cache-method-with-current_render_extension-nil.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>681bffec62671b3ed53840129c2580fe2107817d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-07-13T05:54:27+01:00</created-at>
      <filename>test-to-make-sure-caching-works-after-render.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">32268</id>
      <size type="integer">1792</size>
      <uploader-id type="integer">2529</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/32268/test-to-make-sure-caching-works-after-render.patch</url>
    </attachment>
  </attachments>
</ticket>
