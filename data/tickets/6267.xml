<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-08T16:06:03+00:00</created-at>
  <creator-id type="integer">131725</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6267</number>
  <permalink>migration-undefined-method-to_sym-for-nilnilclass</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>Migration: undefined method `to_sym' for nil:NilClass</title>
  <updated-at type="datetime">2011-04-09T01:00:47+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">4</version>
  <user-name>rails</user-name>
  <creator-name>EricR</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6267</url>
  <priority-name nil="true"></priority-name>
  <original-body>If a column type is misspelled in a migration (ie; 'boolen'), Rails still allows the migration to take place, which spells disaster. Every migration following that, even a rollback, displays the following error:

undefined method `to_sym' for nil:NilClass

The only solution I have found is to manually fix the issue in the sqlite database (big pain) and delete the migration and hope everything returns to normality.</original-body>
  <latest-body>If a column type is misspelled in a migration (ie; 'boolen'), Rails still allows the migration to take place, which spells disaster. Every migration following that, even a rollback, displays the following error:

undefined method `to_sym' for nil:NilClass

The only solution I have found is to manually fix the issue in the sqlite database (big pain) and delete the migration and hope everything returns to normality.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If a column type is misspelled in a migration (ie; 'boolen'),
Rails still allows the migration to take place, which spells
disaster. Every migration following that, even a rollback, displays
the following error:&lt;/p&gt;
&lt;p&gt;undefined method &lt;code&gt;to_sym' for nil:NilClass&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The only solution I have found is to manually fix the issue in
the sqlite database (big pain) and delete the migration and hope
everything returns to normality.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If a column type is misspelled in a migration (ie; 'boolen'), Rails still allows the migration to take place, which spells disaster. Every migration following that, even a rollback, displays the following error:

undefined method `to_sym' for nil:NilClass

The only solution I have found is to manually fix the issue in the sqlite database (big pain) and delete the migration and hope everything returns to normality.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If a column type is misspelled in a migration (ie; 'boolen'),
Rails still allows the migration to take place, which spells
disaster. Every migration following that, even a rollback, displays
the following error:&lt;/p&gt;
&lt;p&gt;undefined method &lt;code&gt;to_sym' for nil:NilClass&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The only solution I have found is to manually fix the issue in
the sqlite database (big pain) and delete the migration and hope
everything returns to normality.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-08T16:06:03+00:00</created-at>
      <creator-id type="integer">131725</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6267</number>
      <permalink>migration-undefined-method-to_sym-for-nilnilclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Migration: undefined method `to_sym' for nil:NilClass</title>
      <updated-at type="datetime">2011-01-08T16:06:08+00:00</updated-at>
      <user-id type="integer">131725</user-id>
      <version type="integer">1</version>
      <user-name>EricR</user-name>
      <creator-name>EricR</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6267</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Using rails 3.0.3 I didn't experience this problem.

CreateTestMigrationErrors.rb
----------------------------

    class CreateTestMigrationErrors &lt; ActiveRecord::Migration
      def self.up
        create_table :test_migration_errors do |t| 
          t.boolean :passes_test

          t.timestamps
        end 
      end 

      def self.down
        drop_table :test_migration_errors
      end 
    end

Migration Output
---------------

    ==  CreateTestMigrationErrors: migrating ======================================
    -- create_table(:test_migration_errors)
    rake aborted!
    An error has occurred, this and all later migrations canceled:

    undefined method `boolen' for #&lt;ActiveRecord::ConnectionAdapters::TableDefinition:0x00000100fbfeb8&gt;

    (See full trace by running task with --trace)

This behaved like any other failed migration, with no long term defects. Could the problem be other effects of the migration, take took place before the misspelled type in the migration? Rails won't migrate down, because since the migration is unfinished, it might cause errors trying to undo changes which haven't happened, but it doesn't know how to fix just the changes before the typo.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Using rails 3.0.3 I didn't experience this problem.&lt;/p&gt;
&lt;h2&gt;CreateTestMigrationErrors.rb&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;class CreateTestMigrationErrors &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :test_migration_errors do |t| 
      t.boolean :passes_test

      t.timestamps
    end 
  end 

  def self.down
    drop_table :test_migration_errors
  end 
end&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Migration Output&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;==  CreateTestMigrationErrors: migrating ======================================
-- create_table(:test_migration_errors)
rake aborted!
An error has occurred, this and all later migrations canceled:

undefined method `boolen' for #&amp;lt;ActiveRecord::ConnectionAdapters::TableDefinition:0x00000100fbfeb8&amp;gt;

(See full trace by running task with --trace)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This behaved like any other failed migration, with no long term
defects. Could the problem be other effects of the migration, take
took place before the misspelled type in the migration? Rails won't
migrate down, because since the migration is unfinished, it might
cause errors trying to undo changes which haven't happened, but it
doesn't know how to fix just the changes before the typo.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-08T20:31:56+00:00</created-at>
      <creator-id type="integer">131725</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6267</number>
      <permalink>migration-undefined-method-to_sym-for-nilnilclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Migration: undefined method `to_sym' for nil:NilClass</title>
      <updated-at type="datetime">2011-01-08T20:32:00+00:00</updated-at>
      <user-id type="integer">131744</user-id>
      <version type="integer">2</version>
      <user-name>dspencer</user-name>
      <creator-name>EricR</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6267</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-09T01:00:08+01:00</created-at>
      <creator-id type="integer">131725</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6267</number>
      <permalink>migration-undefined-method-to_sym-for-nilnilclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Migration: undefined method `to_sym' for nil:NilClass</title>
      <updated-at type="datetime">2011-04-09T01:00:35+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>EricR</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6267</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-09T01:00:08+01:00</created-at>
      <creator-id type="integer">131725</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6267</number>
      <permalink>migration-undefined-method-to_sym-for-nilnilclass</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Migration: undefined method `to_sym' for nil:NilClass</title>
      <updated-at type="datetime">2011-04-09T01:00:47+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>EricR</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6267</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
