<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">8</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-17T06:48:14+00:00</created-at>
  <creator-id type="integer">17213</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">785</number>
  <permalink>caching-models-fails-in-development</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>cache patch</tag>
  <title>Caching models fails in development</title>
  <updated-at type="datetime">2011-02-17T06:48:14+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">92</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Morten Christensen</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>The new Rails.cache.fetch functionality in Rails 2.1 fails when caching ActiveRecord models on the second request in development mode (apparently caused by reloading classes). This problem has been reported by many such as f.x:

http://blog.bashme.org/2008/07/25/rails-21-model-caching-issue/
http://jeronrails.blogspot.com/2008/07/caching-activerecord-objects-with.html

I have also run into this critical problem myself. This should work without problems according to the docs and other community info such as this &quot;http://railscasts.com/episodes/115&quot; which explicitly says that caching of models works (which is does not) as this bug report says.</original-body>
  <latest-body>The new Rails.cache.fetch functionality in Rails 2.1 fails when caching ActiveRecord models on the second request in development mode (apparently caused by reloading classes). This problem has been reported by many such as f.x:

http://blog.bashme.org/2008/07/25/rails-21-model-caching-issue/
http://jeronrails.blogspot.com/2008/07/caching-activerecord-objects-with.html

I have also run into this critical problem myself. This should work without problems according to the docs and other community info such as this &quot;http://railscasts.com/episodes/115&quot; which explicitly says that caching of models works (which is does not) as this bug report says.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The new Rails.cache.fetch functionality in Rails 2.1 fails when caching ActiveRecord models on the second request in development mode (apparently caused by reloading classes). This problem has been reported by many such as f.x:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.bashme.org/2008/07/25/rails-21-model-caching-issue/&quot;&gt;http://blog.bashme.org/2008/07/2...&lt;/a&gt;
&lt;a href=&quot;http://jeronrails.blogspot.com/2008/07/caching-activerecord-objects-with.html&quot;&gt;http://jeronrails.blogspot.com/2...&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have also run into this critical problem myself. This should work without problems according to the docs and other community info such as this &quot;http://railscasts.com/episodes/115&quot; which explicitly says that caching of models works (which is does not) as this bug report says.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The new Rails.cache.fetch functionality in Rails 2.1 fails when caching ActiveRecord models on the second request in development mode (apparently caused by reloading classes). This problem has been reported by many such as f.x:

http://blog.bashme.org/2008/07/25/rails-21-model-caching-issue/
http://jeronrails.blogspot.com/2008/07/caching-activerecord-objects-with.html

I have also run into this critical problem myself. This should work without problems according to the docs and other community info such as this &quot;http://railscasts.com/episodes/115&quot; which explicitly says that caching of models works (which is does not) as this bug report says.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The new Rails.cache.fetch functionality in Rails 2.1 fails when caching ActiveRecord models on the second request in development mode (apparently caused by reloading classes). This problem has been reported by many such as f.x:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.bashme.org/2008/07/25/rails-21-model-caching-issue/&quot;&gt;http://blog.bashme.org/2008/07/2...&lt;/a&gt;
&lt;a href=&quot;http://jeronrails.blogspot.com/2008/07/caching-activerecord-objects-with.html&quot;&gt;http://jeronrails.blogspot.com/2...&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have also run into this critical problem myself. This should work without problems according to the docs and other community info such as this &quot;http://railscasts.com/episodes/115&quot; which explicitly says that caching of models works (which is does not) as this bug report says.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-08T18:44:52+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-08T18:44:52+01:00</updated-at>
      <user-id type="integer">17213</user-id>
      <version type="integer">1</version>
      <user-name>Morten Christensen</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have not tested it yet, but I think this can be fixed by changing how MemoryStore works. Right now it just stores the object itself in memory. This becomes a problem when Rails reloads the classes in development. It also has nasty side effects like storing associated objects if they have been loaded.

Instead I would like to see MemoryStore run the object through Marshal just like MemCacheStore does.

Also (probably should be another ticket) AFAIK it's not possible to store regular objects in FileStore, only strings. It would be nice if Marshal was used here too. This way we can get consistent behavior across all cache stores.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have not tested it yet, but I think this can be fixed by changing how MemoryStore works. Right now it just stores the object itself in memory. This becomes a problem when Rails reloads the classes in development. It also has nasty side effects like storing associated objects if they have been loaded.&lt;/p&gt;

&lt;p&gt;Instead I would like to see MemoryStore run the object through Marshal just like MemCacheStore does.&lt;/p&gt;

&lt;p&gt;Also (probably should be another ticket) AFAIK it's not possible to store regular objects in FileStore, only strings. It would be nice if Marshal was used here too. This way we can get consistent behavior across all cache stores.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-08T20:10:24+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: cache
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-08T20:10:24+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">2</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here's a simple patch to get Marshal in MemoryStore. This appears to solve the immediate problem of using it in development mode.

However, I do not know if this is a good idea. Taking a look at the source, it appears only CompressedMemCacheStore uses Marshal (I was mistaken above). I wonder what the overhead is.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a simple patch to get Marshal in MemoryStore. This appears to solve the immediate problem of using it in development mode.&lt;/p&gt;

&lt;p&gt;However, I do not know if this is a good idea. Taking a look at the source, it appears only CompressedMemCacheStore uses Marshal (I was mistaken above). I wonder what the overhead is.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-08T21:45:07+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-08T21:45:07+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry to keep responding to myself, but I just realized my original assumption was correct. MemCacheStore does use Marshal internally unless the :raw option is passed.

I'm all for MemoryStore using Marshal now.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry to keep responding to myself, but I just realized my original assumption was correct. MemCacheStore does use Marshal internally unless the :raw option is passed.&lt;/p&gt;

&lt;p&gt;I'm all for MemoryStore using Marshal now.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-08T22:01:40+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-08T22:01:40+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">4</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Okay, I think I found a good solution. Attached is a patch which uses Marshal in both MemoryStore and FileStore. Both accept the :raw option allowing you to bypass the Marshal just like MemCacheStore does.

I altered fragment caching to use the :raw option so it stores the plain string in the file to make it compatible with previous versions.

It still needs some more testing, but I believe this resolves all of the issues mentioned above. Caching with MemoryStore now works in development, and FileStore accepts other objects besides strings. This also makes the cache stores behave consistently so you don't get odd behavior when switching from one to another.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Okay, I think I found a good solution. Attached is a patch which uses Marshal in both MemoryStore and FileStore. Both accept the :raw option allowing you to bypass the Marshal just like MemCacheStore does.&lt;/p&gt;

&lt;p&gt;I altered fragment caching to use the :raw option so it stores the plain string in the file to make it compatible with previous versions.&lt;/p&gt;

&lt;p&gt;It still needs some more testing, but I believe this resolves all of the issues mentioned above. Caching with MemoryStore now works in development, and FileStore accepts other objects besides strings. This also makes the cache stores behave consistently so you don't get odd behavior when switching from one to another.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T00:00:45+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T00:00:45+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">5</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Elegant solution. +1</body>
      <body-html>&lt;div&gt;&lt;p&gt;Elegant solution. +1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T00:16:37+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T00:16:37+01:00</updated-at>
      <user-id type="integer">867</user-id>
      <version type="integer">6</version>
      <user-name>Jacek Becela</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Love it. +1</body>
      <body-html>&lt;div&gt;&lt;p&gt;Love it. +1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T05:16:30+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T05:16:30+01:00</updated-at>
      <user-id type="integer">408</user-id>
      <version type="integer">7</version>
      <user-name>Jack Danger</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T06:40:36+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T06:40:36+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">8</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Won't the changes using Marshall make caching work MUCH slower in production ?

Maybe the Marshall trick should only be used when in development mode (or better when reloading of classes is enabled) ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Won't the changes using Marshall make caching work MUCH slower in production ?&lt;/p&gt;

&lt;p&gt;Maybe the Marshall trick should only be used when in development mode (or better when reloading of classes is enabled) ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T11:35:27+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T11:35:27+01:00</updated-at>
      <user-id type="integer">17213</user-id>
      <version type="integer">9</version>
      <user-name>Morten Christensen</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I haven't done any benchmarking yet, but from my understanding Marshal is very fast. Just the fact that memcache uses it internally should say something.

YAML is another alternative, but that is &quot;slower than marshal&quot;:http://significantbits.wordpress.com/2008/01/29/yaml-vs-marshal-performance/.

True we could just enable it in development when classes aren't cached, but there's a lot of side effects to the old way of doing things. For example, loaded associations will stay in memory and fill it up pretty quickly. My concern is developers will test the cache behavior in development and get to production where bad things happen. I'd prefer it behave the same way in both.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I haven't done any benchmarking yet, but from my understanding Marshal is very fast. Just the fact that memcache uses it internally should say something.&lt;/p&gt;

&lt;p&gt;YAML is another alternative, but that is &lt;a href=&quot;http://significantbits.wordpress.com/2008/01/29/yaml-vs-marshal-performance/&quot;&gt;slower than marshal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;True we could just enable it in development when classes aren't cached, but there's a lot of side effects to the old way of doing things. For example, loaded associations will stay in memory and fill it up pretty quickly. My concern is developers will test the cache behavior in development and get to production where bad things happen. I'd prefer it behave the same way in both.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T16:41:38+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: bug cache
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T16:41:38+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">10</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>One more thing I forgot to mention. If Marshal is the bottleneck in your performance tests, you can always pass the :raw option and bypass it on a case-by-case basis.</body>
      <body-html>&lt;div&gt;&lt;p&gt;One more thing I forgot to mention. If Marshal is the bottleneck in your performance tests, you can always pass the :raw option and bypass it on a case-by-case basis.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T16:43:51+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T16:43:51+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">11</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yeah, marshaling is going slow down writes and more important, slow down reads. I don't really think you need to be caching in dev mode anyway ;)

memcache already marshals since it only supports strings. Filestore should probably marshal too, but it doesn't really make sense for memorystore though. Objects will always read and write fine from it (except in dev mode ;)

Show me the benchmarks and we'll see if it really makes a difference.

Possibly an exception for dev mode for memory cache is in order.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, marshaling is going slow down writes and more important, slow down reads. I don't really think you need to be caching in dev mode anyway ;)&lt;/p&gt;

&lt;p&gt;memcache already marshals since it only supports strings. Filestore should probably marshal too, but it doesn't really make sense for memorystore though. Objects will always read and write fine from it (except in dev mode ;)&lt;/p&gt;

&lt;p&gt;Show me the benchmarks and we'll see if it really makes a difference.&lt;/p&gt;

&lt;p&gt;Possibly an exception for dev mode for memory cache is in order.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-09T16:47:25+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: bug cache patch
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T16:47:25+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">12</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(leave it open, one of you nice guys is going fix it)</body>
      <body-html>&lt;div&gt;&lt;p&gt;(leave it open, one of you nice guys is going fix it)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T16:47:49+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:state: wontfix
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T16:47:49+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">13</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Not sure I understand the comment &quot;I don't really think you need to be caching in dev mode anyway ;)&quot;....... The need (or no need) in dev mode is not relevant. What is important that the exact same code that I have in my Rails projects works in both dev mode and production.... However fixing dev mode should at best not degrade production performance of cause.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Not sure I understand the comment &quot;I don't really think you need to be caching in dev mode anyway ;)&quot;....... The need (or no need) in dev mode is not relevant. What is important that the exact same code that I have in my Rails projects works in both dev mode and production.... However fixing dev mode should at best not degrade production performance of cause.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T17:13:03+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T17:13:03+01:00</updated-at>
      <user-id type="integer">17213</user-id>
      <version type="integer">14</version>
      <user-name>Morten Christensen</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>From my understanding, the point of Rails.cache is to provide a consistent interface for caching where you can swap out the store with ease. If the stores all behave drastically different (as far as what you can store in them), then doesn't this defeat the purpose?</body>
      <body-html>&lt;div&gt;&lt;p&gt;From my understanding, the point of Rails.cache is to provide a consistent interface for caching where you can swap out the store with ease. If the stores all behave drastically different (as far as what you can store in them), then doesn't this defeat the purpose?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T17:20:59+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T17:20:59+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">15</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Some quick and dirty micro-benchmarking: http://gist.github.com/4683

Basically, marshaling is 20x slower to save and 100x slower to load.

However, Marshalling 100,000 simple AR objects still takes only 10 seconds or so, so despite how bad 100x sounds it might not make much difference in an actual real world requests. That's milliseconds of differences - and still magnitudes quicker then reloading from the db. 

0.00005 vs 0.000005, who cares?

If it helps with consistency, marshaling is a good idea.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Some quick and dirty micro-benchmarking: &lt;a href=&quot;http://gist.github.com/4683&quot;&gt;http://gist.github.com/4683&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically, marshaling is 20x slower to save and 100x slower to load.&lt;/p&gt;

&lt;p&gt;However, Marshalling 100,000 simple AR objects still takes only 10 seconds or so, so despite how bad 100x sounds it might not make much difference in an actual real world requests. That's milliseconds of differences - and still magnitudes quicker then reloading from the db.&lt;/p&gt;

&lt;p&gt;0.00005 vs 0.000005, who cares?&lt;/p&gt;

&lt;p&gt;If it helps with consistency, marshaling is a good idea.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T17:25:56+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T17:25:56+01:00</updated-at>
      <user-id type="integer">7840</user-id>
      <version type="integer">16</version>
      <user-name>Jim Lindley</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Oh wait, my math was based off reloading strings. It's worse then I thought in my previous comment, sorry.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oh wait, my math was based off reloading strings. It's worse then I thought in my previous comment, sorry.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T17:27:29+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T17:27:29+01:00</updated-at>
      <user-id type="integer">7840</user-id>
      <version type="integer">17</version>
      <user-name>Jim Lindley</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Thanks for doing that Jim. If we take out the Student object then it's roughly 10x slower, is that correct? It seems Marshal has trouble with custom Active Record objects.

Currently we can't really store Active Record objects in Memory Store without bad side effects so slow speed is better than nothing. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for doing that Jim. If we take out the Student object then it's roughly 10x slower, is that correct? It seems Marshal has trouble with custom Active Record objects.&lt;/p&gt;

&lt;p&gt;Currently we can't really store Active Record objects in Memory Store without bad side effects so slow speed is better than nothing. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T17:41:29+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T17:41:29+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">18</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Yeah, about an order of magnitude.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, about an order of magnitude.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T17:55:09+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T17:55:09+01:00</updated-at>
      <user-id type="integer">7840</user-id>
      <version type="integer">19</version>
      <user-name>Jim Lindley</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Also, for the database reload, it's best to disable ActiveRecord caching so it hits the database each time. Here's my numbers for that.

http://gist.github.com/4688</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also, for the database reload, it's best to disable ActiveRecord caching so it hits the database each time. Here's my numbers for that.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gist.github.com/4688&quot;&gt;http://gist.github.com/4688&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T18:02:13+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T18:02:13+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">20</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Okay, in summary. Using Marshal for MemoryStore is about 10x slower for simple objects. Josh, does this seem acceptable?

Complex objects (such as ActiveRecord models) may be 100x slower, but that will vary wildly depending on the object's complexity. It is still 23x faster than fetching from the database in my rough test.

However, as mentioned above, MemoryStore's current behavior does not lend itself well to complex objects anyway. This is because changing the state of the object after caching will change the cache itself. This does not seem right to me.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Okay, in summary. Using Marshal for MemoryStore is about 10x slower for simple objects. Josh, does this seem acceptable?&lt;/p&gt;

&lt;p&gt;Complex objects (such as ActiveRecord models) may be 100x slower, but that will vary wildly depending on the object's complexity. It is still 23x faster than fetching from the database in my rough test.&lt;/p&gt;

&lt;p&gt;However, as mentioned above, MemoryStore's current behavior does not lend itself well to complex objects anyway. This is because changing the state of the object after caching will change the cache itself. This does not seem right to me.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T18:33:33+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T18:33:33+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">21</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Maybe dup objects before storing them, and then dup them on retrieval and return the copies to prevent tainting the cache? 

Dup is even faster then marshal.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Maybe dup objects before storing them, and then dup them on retrieval and return the copies to prevent tainting the cache?&lt;/p&gt;

&lt;p&gt;Dup is even faster then marshal.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T21:26:29+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T21:26:29+01:00</updated-at>
      <user-id type="integer">7840</user-id>
      <version type="integer">22</version>
      <user-name>Jim Lindley</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>That's an excellent idea Jim! Attached is a patch to do this in MemoryStore instead of Marshal. This seems to solve the development issue as well. And as you said, dup is much faster.</body>
      <body-html>&lt;div&gt;&lt;p&gt;That's an excellent idea Jim! Attached is a patch to do this in MemoryStore instead of Marshal. This seems to solve the development issue as well. And as you said, dup is much faster.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T23:01:42+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: bug cache
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T23:01:42+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">23</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Oops, I take that back. dup doesn't solve the development issue. It still results in the same &quot;stack level too deep&quot; error.

Should we just disable this kind of caching by default in development? I'm thinking a &quot;NoStore&quot; cache store which just returns nil on read. What do you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops, I take that back. dup doesn't solve the development issue. It still results in the same &quot;stack level too deep&quot; error.&lt;/p&gt;

&lt;p&gt;Should we just disable this kind of caching by default in development? I'm thinking a &quot;NoStore&quot; cache store which just returns nil on read. What do you think?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T23:07:57+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T23:07:57+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">24</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>One thing your patch is missing (the only thing, everything else looks good) is a rescue TypeError when dup is attempted on inputs like false or nil.

Maybe something like this?

def dup_value(value)
  value.dup
rescue TypeError
 value
end

# ... and then

@data[name] = dup_value(value.dup)

# instead of 

@data[name] = value.dup unless value.nil?</body>
      <body-html>&lt;div&gt;&lt;p&gt;One thing your patch is missing (the only thing, everything else looks good) is a rescue TypeError when dup is attempted on inputs like false or nil.&lt;/p&gt;

&lt;p&gt;Maybe something like this?&lt;/p&gt;

&lt;p&gt;def dup_value(value)
  value.dup
rescue TypeError
 value
end&lt;/p&gt;

&lt;h1&gt; ... and then&lt;/h1&gt;

&lt;p&gt;@data[name] = dup_value(value.dup)&lt;/p&gt;

&lt;h1&gt; instead of&lt;/h1&gt;

&lt;p&gt;@data[name] = value.dup unless value.nil?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T23:08:45+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T23:08:45+01:00</updated-at>
      <user-id type="integer">7840</user-id>
      <version type="integer">25</version>
      <user-name>Jim Lindley</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Oh, shoot. Yeah, the class gets nuked out from under it still.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oh, shoot. Yeah, the class gets nuked out from under it still.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T23:09:46+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T23:09:46+01:00</updated-at>
      <user-id type="integer">7840</user-id>
      <version type="integer">26</version>
      <user-name>Jim Lindley</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Dup'ing MemoryStore still a good idea in production, though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Dup'ing MemoryStore still a good idea in production, though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T23:10:58+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T23:10:58+01:00</updated-at>
      <user-id type="integer">7840</user-id>
      <version type="integer">27</version>
      <user-name>Jim Lindley</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Updating patch with Jim's suggestion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updating patch with Jim's suggestion.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T23:24:06+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T23:24:06+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">28</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I agree with the consistent interface and I also would like to see Marshalling as option in other stores.

We can use Ryan Bates patch, but on MemoryStore and FileStore the :raw option is set as default to true. So no Marshalling would be done in existent apps, no performance lost (except that this would be different from Memcached default).

Another thing is that on development environment, all objects should be marshalled, ignoring :raw option. We can create a config variable that would be set in the development environment:

config.always_marshal_objects_on_cache = true

How does it sound?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree with the consistent interface and I also would like to see Marshalling as option in other stores.&lt;/p&gt;

&lt;p&gt;We can use Ryan Bates patch, but on MemoryStore and FileStore the :raw option is set as default to true. So no Marshalling would be done in existent apps, no performance lost (except that this would be different from Memcached default).&lt;/p&gt;

&lt;p&gt;Another thing is that on development environment, all objects should be marshalled, ignoring :raw option. We can create a config variable that would be set in the development environment:&lt;/p&gt;

&lt;p&gt;config.always_marshal_objects_on_cache = true&lt;/p&gt;

&lt;p&gt;How does it sound?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T23:31:25+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T23:31:25+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">29</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Jos&#233;, several good ideas there. If we supply options for changing the default behavior on memory store cache then we can leave it up to the developer to choose depending on the environment.

I think FileStore should marshal by default though. you can't really store anything in there except strings without Marshal.

As for the option passing, I think they should be specified when choosing the store. For example:

@@@ ruby
config.cache_store = :memory_store, { :raw =&gt; true }
@@@

This way we don't have a global option which only effects one store.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jos&#233;, several good ideas there. If we supply options for changing the default behavior on memory store cache then we can leave it up to the developer to choose depending on the environment.&lt;/p&gt;

&lt;p&gt;I think FileStore should marshal by default though. you can't really store anything in there except strings without Marshal.&lt;/p&gt;

&lt;p&gt;As for the option passing, I think they should be specified when choosing the store. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
config.cache_store = :memory_store, { :raw =&amp;gt; true }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This way we don't have a global option which only effects one store.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-09T23:41:53+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-09T23:41:53+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">30</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Here's another patch. This one allows you to set the :raw option while setting the memory store. You can also pass the :raw option during read/write.

@@@ ruby
config.cache_store = :memory_store, { :raw =&gt; false }
# or
Rails.cache.write('foo', 'bar', :raw =&gt; true)
Rails.cache.read('foo', :raw =&gt; true)
@@@

Like the other stores, setting raw will bypass Marshal. The primary difference here is that raw defaults to &quot;true&quot; if it's not specified as that's usually the behavior one would want. &quot;dup&quot; is used for raw.

In development we want to use Marshal, in production we don't. This patch handles this automatically by setting the default cache store depending on the current environment.

@@@ ruby
# in initializer.rb
def default_cache_store
  [:memory_store, {:raw =&gt; (environment != 'development')}]
end
@@@

This method was defined before, but apparently it was never called so I assume it's okay to overwrite it with this.

What do you think? Any questions?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's another patch. This one allows you to set the :raw option while setting the memory store. You can also pass the :raw option during read/write.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
config.cache_store = :memory_store, { :raw =&amp;gt; false }
# or
Rails.cache.write('foo', 'bar', :raw =&amp;gt; true)
Rails.cache.read('foo', :raw =&amp;gt; true)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Like the other stores, setting raw will bypass Marshal. The primary difference here is that raw defaults to &quot;true&quot; if it's not specified as that's usually the behavior one would want. &quot;dup&quot; is used for raw.&lt;/p&gt;

&lt;p&gt;In development we want to use Marshal, in production we don't. This patch handles this automatically by setting the default cache store depending on the current environment.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
# in initializer.rb
def default_cache_store
  [:memory_store, {:raw =&amp;gt; (environment != 'development')}]
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This method was defined before, but apparently it was never called so I assume it's okay to overwrite it with this.&lt;/p&gt;

&lt;p&gt;What do you think? Any questions?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-10T02:01:17+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-10T02:01:17+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">31</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Awesome!
Ryan, in your patch, are we able to set the defaults in other Stores also? In other words, are we able to do:

@@@ ruby
  config.cache_store = :file_store, { :raw =&gt; true }
@@@

Looks like we don't... I think would be nice if we provide the same interface to all Stores, no?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Awesome!
Ryan, in your patch, are we able to set the defaults in other Stores also? In other words, are we able to do:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  config.cache_store = :file_store, { :raw =&amp;gt; true }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looks like we don't... I think would be nice if we provide the same interface to all Stores, no?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-10T08:52:31+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-10T08:52:31+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">32</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I considered doing that, but I decided not to. I don't see any reason why one would want to because it makes the stores behave very differently. If you do this with file or memcache store that basically means you can only store strings.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I considered doing that, but I decided not to. I don't see any reason why one would want to because it makes the stores behave very differently. If you do this with file or memcache store that basically means you can only store strings.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-10T16:33:14+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-10T16:33:14+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">33</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I was thinking more in providing an option for those who are using FileStore *currently* (this way they won't have to append :raw =&gt; true in all cache calls after this patch is accepted).

But investigating further, if they are caching strings, they are probably using the method *cache* defined in:

  action_view/helpers/cache_helper.rb

Since this methods caches only strings, would be interesting if the options :raw =&gt; true is set as default in this helper. Otherwise a lot of application will start to Marshal unnecessary.

What do you think? =)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was thinking more in providing an option for those who are using FileStore &lt;em&gt;currently&lt;/em&gt; (this way they won't have to append :raw =&gt; true in all cache calls after this patch is accepted).&lt;/p&gt;

&lt;p&gt;But investigating further, if they are caching strings, they are probably using the method &lt;em&gt;cache&lt;/em&gt; defined in:&lt;/p&gt;

&lt;p&gt;  action_view/helpers/cache_helper.rb&lt;/p&gt;

&lt;p&gt;Since this methods caches only strings, would be interesting if the options :raw =&gt; true is set as default in this helper. Otherwise a lot of application will start to Marshal unnecessary.&lt;/p&gt;

&lt;p&gt;What do you think? =)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T00:53:42+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-11T00:53:42+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">34</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The &quot;cache&quot; helper method uses fragment caching, and I set :raw =&gt; true for all fragment caching. This way it behaves like it used to and will be compatible with existing caches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The &quot;cache&quot; helper method uses fragment caching, and I set :raw =&gt; true for all fragment caching. This way it behaves like it used to and will be compatible with existing caches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T01:16:10+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-11T01:16:10+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">35</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Amazing!
+10 =)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Amazing!
+10 =)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T08:24:36+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-11T08:24:36+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">36</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Also, the :raw option is the wrong API. The only reason it is used is for the memcache-client. A separate class would be nicer.

@@@ ruby
module ActiveSupport
  module Cache
    class MarshaledMemoryStore &lt; Store
      def read(name, options = nil)
        super
        Marshal.load(@data[name])
      end

      def write(name, value, options = nil)
        super
        @data[name] = Marshal.dump(obj)
      end
    end
  end
end
@@@

However, it still think we are chasing the wrong problem. There is nothing wrong with the current ActiveSupport::Cache::MemoryStore, the issue is class reloading. I still agree with marshaling FileStore, but thats not what we are talking about here.

I really think you should NOT be using caching during &quot;development&quot; mode. And if you goal is to get the same &quot;experience&quot; as your &quot;production&quot; mode, consider turning cache_classes on or create a separate environment called &quot;development_with_caching&quot; and work on that when you need to test your caching.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also, the :raw option is the wrong API. The only reason it is used is for the memcache-client. A separate class would be nicer.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
module ActiveSupport
  module Cache
    class MarshaledMemoryStore &amp;lt; Store
      def read(name, options = nil)
        super
        Marshal.load(@data[name])
      end

      def write(name, value, options = nil)
        super
        @data[name] = Marshal.dump(obj)
      end
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, it still think we are chasing the wrong problem. There is nothing wrong with the current ActiveSupport::Cache::MemoryStore, the issue is class reloading. I still agree with marshaling FileStore, but thats not what we are talking about here.&lt;/p&gt;

&lt;p&gt;I really think you should NOT be using caching during &quot;development&quot; mode. And if you goal is to get the same &quot;experience&quot; as your &quot;production&quot; mode, consider turning cache_classes on or create a separate environment called &quot;development_with_caching&quot; and work on that when you need to test your caching.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T13:58:32+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: bug cache patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-11T13:58:32+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">37</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Josh, I think the existing MemoryStore implementation is faulty because changes made to an object afterwards effect the cache. This happens in production as well.

@@@ ruby
cache = ActiveSupport::Cache.lookup_store(:memory_store)
h = {:a =&gt; 1}
cache.write('foo', h)
h[:a] = 2
cache.read('foo')[:a] # =&gt; 2
@@@

I don't know of any other caching technique that behaves this way, and I think it's one of the core problems with MemoryStore itself. This problem doesn't really have anything to do with the original ticket, but I was trying to tackle both at the same time since they are similar. Perhaps I should post this in a separate ticket?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Josh, I think the existing MemoryStore implementation is faulty because changes made to an object afterwards effect the cache. This happens in production as well.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
cache = ActiveSupport::Cache.lookup_store(:memory_store)
h = {:a =&amp;gt; 1}
cache.write('foo', h)
h[:a] = 2
cache.read('foo')[:a] # =&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I don't know of any other caching technique that behaves this way, and I think it's one of the core problems with MemoryStore itself. This problem doesn't really have anything to do with the original ticket, but I was trying to tackle both at the same time since they are similar. Perhaps I should post this in a separate ticket?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T15:07:59+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-11T15:07:59+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">38</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>If the cache contents can be altered by changing fetched objects, then it's not a cache store, it's a fancy global variable to store objects in.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If the cache contents can be altered by changing fetched objects, then it's not a cache store, it's a fancy global variable to store objects in.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T15:47:35+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-11T15:47:35+01:00</updated-at>
      <user-id type="integer">7840</user-id>
      <version type="integer">39</version>
      <user-name>Jim Lindley</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>New ticket #799 created to move the MemoryStore issue to, to not detract from the class reloading in development problems.</body>
      <body-html>&lt;div&gt;&lt;p&gt;New ticket &lt;a href=&quot;/projects/8994/tickets/799&quot; title=&quot;Ticket #799&quot;&gt;#799&lt;/a&gt; created to move the MemoryStore issue to, to not detract from the class reloading in development problems.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T16:00:49+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-11T16:00:49+01:00</updated-at>
      <user-id type="integer">7840</user-id>
      <version type="integer">40</version>
      <user-name>Jim Lindley</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I also moved the FileStore issue into a separate ticket (#800) as that is fairly distinct.

Now we can focus on solving this development environment issue on its own. Josh, one idea I had is to make a &quot;NoStore&quot; cache store which just returns nil on read. This would effectively turn off caching in development mode. Does this sound reasonable? If so I'll make a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I also moved the FileStore issue into a separate ticket (#800) as that is fairly distinct.&lt;/p&gt;

&lt;p&gt;Now we can focus on solving this development environment issue on its own. Josh, one idea I had is to make a &quot;NoStore&quot; cache store which just returns nil on read. This would effectively turn off caching in development mode. Does this sound reasonable? If so I'll make a patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T16:55:21+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-11T16:55:21+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">41</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@Ryan good point about the mutable contents. I think all cached objects oughta be immutable.

I also think a NoStore option would be a good workaround. I would actually expect the MemoryStore to be erased on each request because of reloading. However its setup in the framework which is not reloaded. I don't think its wise to count on the persistence of any memory store or cache with cache_classes on.

I also don't think any consistent behavior is lost either. It is really great that you can test caching locally without setting up memcache on your own machine. The MemoryStore is an awesome MockMemcacheStore.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Ryan good point about the mutable contents. I think all cached objects oughta be immutable.&lt;/p&gt;

&lt;p&gt;I also think a NoStore option would be a good workaround. I would actually expect the MemoryStore to be erased on each request because of reloading. However its setup in the framework which is not reloaded. I don't think its wise to count on the persistence of any memory store or cache with cache_classes on.&lt;/p&gt;

&lt;p&gt;I also don't think any consistent behavior is lost either. It is really great that you can test caching locally without setting up memcache on your own machine. The MemoryStore is an awesome MockMemcacheStore.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T21:09:47+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-11T21:09:47+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">42</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Here's a patch that adds NoStore which always returns nil on read. This also sets NoStore as the default store in development. This will, in a sense, disable caching in that environment.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a patch that adds NoStore which always returns nil on read. This also sets NoStore as the default store in development. This will, in a sense, disable caching in that environment.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T23:29:10+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-11T23:29:10+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">43</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Given that both the memcache and file stores (thanks to Ryan's other patch) will marshal objects, why is it such a horrible idea to use marshalling on the memory store? It's not so awesome a MockMemCacheStore if it doesn't work like it in development mode.

The NoStore option is nice to have if a developer specifically wants to turn off caching (although personally I'd have called it NullStore, but that's just me!) but I don't see why I should need to create a new environment with specific settings just so I can use the memory store in development mode - it should just work.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given that both the memcache and file stores (thanks to Ryan's other patch) will marshal objects, why is it such a horrible idea to use marshalling on the memory store? It's not so awesome a MockMemCacheStore if it doesn't work like it in development mode.&lt;/p&gt;

&lt;p&gt;The NoStore option is nice to have if a developer specifically wants to turn off caching (although personally I'd have called it NullStore, but that's just me!) but I don't see why I should need to create a new environment with specific settings just so I can use the memory store in development mode - it should just work.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-12T08:28:08+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-12T08:28:08+01:00</updated-at>
      <user-id type="integer">10510</user-id>
      <version type="integer">44</version>
      <user-name>Rob Anderton</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I have tested the attached patch and still have problems with methods disappearing from models on the second request.  Running in production mode works fine.  Still not convinced that anyone has gotten to the bottom of the real problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have tested the attached patch and still have problems with methods disappearing from models on the second request.  Running in production mode works fine.  Still not convinced that anyone has gotten to the bottom of the real problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T01:31:20+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T01:31:20+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">45</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@jshumate Still not convinced that anyone has gotten to the bottom of the real problem.

Agreed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@jshumate Still not convinced that anyone has gotten to the bottom of the real problem.&lt;/p&gt;

&lt;p&gt;Agreed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T01:33:49+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T01:33:49+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">46</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm now even having second thoughts about marshaling filestore. Maybe we should just say RAILS_CACHE is a simple cache store for strings only.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm now even having second thoughts about marshaling filestore. Maybe we should just say RAILS_CACHE is a simple cache store for strings only.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T01:36:39+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T01:36:39+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">47</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Caching models with memcache is a pretty powerful technique, and I've heard several say they've had great success with it. Since there is a memcache store, it seems like Rails.cache should support it. And, AFAIK, it already does in that specific store.

The question is, should all caching stores behave the same way?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Caching models with memcache is a pretty powerful technique, and I've heard several say they've had great success with it. Since there is a memcache store, it seems like Rails.cache should support it. And, AFAIK, it already does in that specific store.&lt;/p&gt;

&lt;p&gt;The question is, should all caching stores behave the same way?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T04:12:53+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T04:12:53+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">48</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I think there are several deep questions regarding caching, but I thought they had moved to their own thread.  This thread started with a report of behavior that I have been fighting for several weeks now without finding the root cause.  Since 2.1 classes will lose methods after the second request in development mode.  No problems in production and no problem on the initial server startup.  Usually you just get a method missing error, but I also had it lose the id method and infinite loop in method missing as a result.  Seems to be more likely in models with has_many :through, but I may have seen it elsewhere and just don't remember.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think there are several deep questions regarding caching, but I thought they had moved to their own thread.  This thread started with a report of behavior that I have been fighting for several weeks now without finding the root cause.  Since 2.1 classes will lose methods after the second request in development mode.  No problems in production and no problem on the initial server startup.  Usually you just get a method missing error, but I also had it lose the id method and infinite loop in method missing as a result.  Seems to be more likely in models with has_many :through, but I may have seen it elsewhere and just don't remember.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T08:26:11+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T08:26:11+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">49</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>jshumate, have you been experiencing this same error through other means besides caching?</body>
      <body-html>&lt;div&gt;&lt;p&gt;jshumate, have you been experiencing this same error through other means besides caching?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T15:08:01+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T15:08:01+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">50</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm not sure exactly how to answer that.  I am using edge with only a handful of plugins, all of them were disabled in my early tests to see where these seemingly random errors were coming from.  So any caching that is enabled by default in the development configuration is active, but I am making no specific use of any caching mechanism.

It appears to me that that what is happening is that when the code is re-loaded in development mode something happens to some of the methods in the model.  The only database backed accessor that I have seen go missing is id, but many of the non column based methods in my models will disappear.  In the debugger I can look at the object that threw the error and the methods aren't there, but if I instantiate a new object of the same class while at the breakpoint they are all present.

So I can see the possibility that this is an interaction with some of the caching code, but it could also just be an error in the code that does the reload on each request.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure exactly how to answer that.  I am using edge with only a handful of plugins, all of them were disabled in my early tests to see where these seemingly random errors were coming from.  So any caching that is enabled by default in the development configuration is active, but I am making no specific use of any caching mechanism.&lt;/p&gt;

&lt;p&gt;It appears to me that that what is happening is that when the code is re-loaded in development mode something happens to some of the methods in the model.  The only database backed accessor that I have seen go missing is id, but many of the non column based methods in my models will disappear.  In the debugger I can look at the object that threw the error and the methods aren't there, but if I instantiate a new object of the same class while at the breakpoint they are all present.&lt;/p&gt;

&lt;p&gt;So I can see the possibility that this is an interaction with some of the caching code, but it could also just be an error in the code that does the reload on each request.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T16:34:39+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T16:34:39+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">51</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Right, managed to replicate what I *think* jshumate was experiencing.

The attached patch seems to fix it for my simple test site (sorry no unit tests)... but if I'm honest, I'm not sure why.

It was based on the assumption that the generated code was vanishing on reload (which I can't replicate out side of AR), and because the function that generated it (#id) was being clobbered by the generated code (also #id), it would never be recreated again.

I still can't replicate this with none AR classes, which makes me think my solution could be right, but my reasoning is almost definitely wrong.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Right, managed to replicate what I &lt;em&gt;think&lt;/em&gt; jshumate was experiencing.&lt;/p&gt;

&lt;p&gt;The attached patch seems to fix it for my simple test site (sorry no unit tests)... but if I'm honest, I'm not sure why.&lt;/p&gt;

&lt;p&gt;It was based on the assumption that the generated code was vanishing on reload (which I can't replicate out side of AR), and because the function that generated it (#id) was being clobbered by the generated code (also #id), it would never be recreated again.&lt;/p&gt;

&lt;p&gt;I still can't replicate this with none AR classes, which makes me think my solution could be right, but my reasoning is almost definitely wrong.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T17:48:54+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T17:48:54+01:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">52</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Looking at the patch from Tom Lea it would probably fix the stack level to deep issue when id goes missing, but it would not address the method missing issue for other methods.  The problem seems deeper than what this patch addresses.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looking at the patch from Tom Lea it would probably fix the stack level to deep issue when id goes missing, but it would not address the method missing issue for other methods.  The problem seems deeper than what this patch addresses.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T17:59:00+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T17:59:00+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">53</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Did you just start experiencing it in 2.1? Might be worth investigating what changed between 2.0-2.1 as far as reloading goes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Did you just start experiencing it in 2.1? Might be worth investigating what changed between 2.0-2.1 as far as reloading goes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T18:12:32+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T18:12:32+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">54</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>We seem to be moving onto a different issue and one I've always assumed was expected behaviour. I'd thought that by reloading a class' definition you were effectively kicking its legs out from beneath it - and it came as no surprise that it would then fall over.

Here's an example from Rails 2.0.1:

@@@ ruby
u = User.find(1)

u.class == User
=&gt; true

u.id
=&gt; 1

# Age is a custom method rather than a database attribute
u.age
=&gt; 10

reload!

u.class == User
=&gt; false

u.id
=&gt; 1

u.age
=&gt; NoMethodError: undefined method `age' for #&lt;User:0x6787048&gt;
  from ../vendor/rails/activerecord/lib/active_record/attribute_methods.rb:205:in `method_missing'
  
# Load a fresh one
u2 = User.find(1)

u2.class == User
=&gt; true

u2.id
=&gt; 1

u2.age
=&gt; 10
@@@

The same thing happens if we go way back to Rails 1.2.5 (although the NoMethodError is in method_missing in base.rb line 1860).

Obviously recent changes to the reloading code have meant this behaviour has changed slightly in 2.1 (the stack error is a new one), but the underlying problem has been there for some time.

...Meanwhile back at the original ticket...

To answer Ryan's earlier question: I think the various cache stores should provide provide the same interfaces without needing specific workarounds - I should be able to switch from MemoryStore to FileStore to MemCacheStore without changing anything other than a configuration setting. And I should be able to use any of them in any environment (development, production, testing, or any other).</body>
      <body-html>&lt;div&gt;&lt;p&gt;We seem to be moving onto a different issue and one I've always assumed was expected behaviour. I'd thought that by reloading a class' definition you were effectively kicking its legs out from beneath it - and it came as no surprise that it would then fall over.&lt;/p&gt;

&lt;p&gt;Here's an example from Rails 2.0.1:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
u = User.find(1)

u.class == User
=&amp;gt; true

u.id
=&amp;gt; 1

# Age is a custom method rather than a database attribute
u.age
=&amp;gt; 10

reload!

u.class == User
=&amp;gt; false

u.id
=&amp;gt; 1

u.age
=&amp;gt; NoMethodError: undefined method `age' for #&amp;lt;User:0x6787048&amp;gt;
  from ../vendor/rails/activerecord/lib/active_record/attribute_methods.rb:205:in `method_missing'

# Load a fresh one
u2 = User.find(1)

u2.class == User
=&amp;gt; true

u2.id
=&amp;gt; 1

u2.age
=&amp;gt; 10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The same thing happens if we go way back to Rails 1.2.5 (although the NoMethodError is in method_missing in base.rb line 1860).&lt;/p&gt;

&lt;p&gt;Obviously recent changes to the reloading code have meant this behaviour has changed slightly in 2.1 (the stack error is a new one), but the underlying problem has been there for some time.&lt;/p&gt;

&lt;p&gt;...Meanwhile back at the original ticket...&lt;/p&gt;

&lt;p&gt;To answer Ryan's earlier question: I think the various cache stores should provide provide the same interfaces without needing specific workarounds - I should be able to switch from MemoryStore to FileStore to MemCacheStore without changing anything other than a configuration setting. And I should be able to use any of them in any environment (development, production, testing, or any other).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T19:19:20+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T19:19:20+01:00</updated-at>
      <user-id type="integer">10510</user-id>
      <version type="integer">55</version>
      <user-name>Rob Anderton</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Rob is right about consistency... but we need core to agree on what to consist upon (if you follow my bad grammar).

Should Cache::Store just store strings, or should they serialize other objects?



@jshumate: Which other methods go missing? Attribute readers seem to work OK for me on edge. #id is a particularly special case after all. We need to find a consistent common factor.

@Rob: I think it could be more complex/subtle than this, as none AR stuff does not seem to show the same behaviour (see http://pastie.org/253127 for a rubbish example of it not being like that.) The same seemed to apply to edge on my other machine.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rob is right about consistency... but we need core to agree on what to consist upon (if you follow my bad grammar).&lt;/p&gt;

&lt;p&gt;Should Cache::Store just store strings, or should they serialize other objects?&lt;/p&gt;

&lt;p&gt;@jshumate: Which other methods go missing? Attribute readers seem to work OK for me on edge. #id is a particularly special case after all. We need to find a consistent common factor.&lt;/p&gt;

&lt;p&gt;@Rob: I think it could be more complex/subtle than this, as none AR stuff does not seem to show the same behaviour (see &lt;a href=&quot;http://pastie.org/253127&quot;&gt;http://pastie.org/253127&lt;/a&gt; for a rubbish example of it not being like that.) The same seemed to apply to edge on my other machine.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-14T20:21:43+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-14T20:21:43+01:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">56</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>@Rob Anderton
Original Ticket --
The new Rails.cache.fetch functionality in Rails 2.1 fails when caching ActiveRecord models on the second request in development mode (apparently caused by reloading classes).

I remain unconvinced that this is necessarily a caching issue.  I believe this ticket is about reloading classes.  The cache discussions seemed to have been moved to thread 799.

As I said above I have yet to see a method backed by a database column go missing with the exception of id which is a special case anyway.  Other methods in the class go missing without much rhyme or reason.  Again as I said above when I break before the exception is raised and look at the object the method that is about to be tagged as missing isn't there and usually a few others are missing as well.  If I instantiate a new object in the debugger all the methods are there.  This only happens after the second request and I don't see it in production.  Not sure how far back it goes, but I only noticed it after the 2.1 milestone.  I'm using some 2.1 features so it is a bit hard to regress, but I will see what I can do.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Rob Anderton
Original Ticket --
The new Rails.cache.fetch functionality in Rails 2.1 fails when caching ActiveRecord models on the second request in development mode (apparently caused by reloading classes).&lt;/p&gt;

&lt;p&gt;I remain unconvinced that this is necessarily a caching issue.  I believe this ticket is about reloading classes.  The cache discussions seemed to have been moved to thread 799.&lt;/p&gt;

&lt;p&gt;As I said above I have yet to see a method backed by a database column go missing with the exception of id which is a special case anyway.  Other methods in the class go missing without much rhyme or reason.  Again as I said above when I break before the exception is raised and look at the object the method that is about to be tagged as missing isn't there and usually a few others are missing as well.  If I instantiate a new object in the debugger all the methods are there.  This only happens after the second request and I don't see it in production.  Not sure how far back it goes, but I only noticed it after the 2.1 milestone.  I'm using some 2.1 features so it is a bit hard to regress, but I will see what I can do.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T01:46:27+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-15T01:46:27+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">57</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I agree it's **not** a caching issue - it **is** a class reloading issue and as I showed in my last post it goes back at least as far as **Rails 1.2.5**.

To quote a [Giles Bowkett blog](http://gilesbowkett.blogspot.com/2007/08/evil-rails-console-gotcha-reload.html) from last year:

&gt; It's probably possible to write some Ruby which queries ObjectSpace for ActiveRecord models, loads their attributes off into a hash, and then reinstantiates them - but making something like that portable could take some serious wizardry.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree it's &lt;strong&gt;not&lt;/strong&gt; a caching issue - it &lt;strong&gt;is&lt;/strong&gt; a class reloading issue and as I showed in my last post it goes back at least as far as &lt;strong&gt;Rails 1.2.5&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To quote a &lt;a href=&quot;http://gilesbowkett.blogspot.com/2007/08/evil-rails-console-gotcha-reload.html&quot;&gt;Giles Bowkett blog&lt;/a&gt; from last year:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It's probably possible to write some Ruby which queries ObjectSpace for ActiveRecord models, loads their attributes off into a hash, and then reinstantiates them - but making something like that portable could take some serious wizardry.&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T09:46:55+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-15T09:46:55+01:00</updated-at>
      <user-id type="integer">10510</user-id>
      <version type="integer">58</version>
      <user-name>Rob Anderton</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>@Rob: It seems Giles is referring to the opposite effect. Ruby objects get disjointed from their classes on initialization. 

This has been true for a long time and is due to the constant being removed before the class is defined. This means that both classes exist at the same time, both having the same name, but the first one no longer having anything to do with the constant that referenced it.

Code to show my point:
   http://pastie.org/253468</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Rob: It seems Giles is referring to the opposite effect. Ruby objects get disjointed from their classes on initialization.&lt;/p&gt;

&lt;p&gt;This has been true for a long time and is due to the constant being removed before the class is defined. This means that both classes exist at the same time, both having the same name, but the first one no longer having anything to do with the constant that referenced it.&lt;/p&gt;

&lt;p&gt;Code to show my point:
   &lt;a href=&quot;http://pastie.org/253468&quot;&gt;http://pastie.org/253468&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T10:46:15+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-15T10:46:15+01:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">59</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>s/Ruby objects get disjointed from their classes on initialization./Ruby objects get disjointed from the constant that references their class on initialization./</body>
      <body-html>&lt;div&gt;&lt;p&gt;s/Ruby objects get disjointed from their classes on initialization./Ruby objects get disjointed from the constant that references their class on initialization./&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T11:17:31+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-15T11:17:31+01:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">60</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I agree that the core problem is not a caching issue. It will show up whenever you're storing a model globally between requests. However, caching seems to be the only place where the framework directly supports storing a model globally (unless we say it should only store strings).

If we can solve the core problem of reloading models, that's awesome and would be preferred. But it sounds like this is the way Rails has always behaved, and a solution may require some serious changing of how reloading works in Rails (I could be wrong about that).

Because that is such a big problem, I think we should take it one case at a time. If we can solve this caching issue in development, then I would consider this ticket resolved. Then we can open up other tickets about other cases where we store models globally.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree that the core problem is not a caching issue. It will show up whenever you're storing a model globally between requests. However, caching seems to be the only place where the framework directly supports storing a model globally (unless we say it should only store strings).&lt;/p&gt;

&lt;p&gt;If we can solve the core problem of reloading models, that's awesome and would be preferred. But it sounds like this is the way Rails has always behaved, and a solution may require some serious changing of how reloading works in Rails (I could be wrong about that).&lt;/p&gt;

&lt;p&gt;Because that is such a big problem, I think we should take it one case at a time. If we can solve this caching issue in development, then I would consider this ticket resolved. Then we can open up other tickets about other cases where we store models globally.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T15:19:15+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-15T15:19:15+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">61</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I am not storing models globally.

The problem is that when the development environment reloads the code on a new request the AR models are getting clobbered in some way.  They work fine on startup and sometimes it takes a few requests to hit a method that has been clobbered, but after that you are dead until you restart the server.

I've seen the issue with reload! in the debugger forever which is why I always restart the console after code changes.  What I am seeing now is new to me and I don't think it has always been that way.  I think we have a lot of people commenting on this thread about similar behavior and issues, but based on my read of the original post this thread is about problems in development mode with reloading code.

If I'm wrong about that and others are only seeing problems related to caching after a reload then maybe we can start a new thread specifically about issues with AR classes being corrupted in development mode when they are reloaded.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am not storing models globally.&lt;/p&gt;

&lt;p&gt;The problem is that when the development environment reloads the code on a new request the AR models are getting clobbered in some way.  They work fine on startup and sometimes it takes a few requests to hit a method that has been clobbered, but after that you are dead until you restart the server.&lt;/p&gt;

&lt;p&gt;I've seen the issue with reload! in the debugger forever which is why I always restart the console after code changes.  What I am seeing now is new to me and I don't think it has always been that way.  I think we have a lot of people commenting on this thread about similar behavior and issues, but based on my read of the original post this thread is about problems in development mode with reloading code.&lt;/p&gt;

&lt;p&gt;If I'm wrong about that and others are only seeing problems related to caching after a reload then maybe we can start a new thread specifically about issues with AR classes being corrupted in development mode when they are reloaded.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T16:38:35+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-15T16:38:35+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">62</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Looking back at Rob Anderton's post from the console this is not the same thing.

I am using the debugger and looking at models that are created during the request cycle after the reload has occurred.  Not models that existed before the reload.

This is just a fairly normal application.  I get a method missing exception and restart the server then hit refresh in the browser and it works fine.  Hit refresh again and it gets a method missing error.  This is repeatable.  If I break in the code after the find returns a model on the first try after server startup all the methods are there after the reload they aren't.

Run the same code in production mode no issues at all.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looking back at Rob Anderton's post from the console this is not the same thing.&lt;/p&gt;

&lt;p&gt;I am using the debugger and looking at models that are created during the request cycle after the reload has occurred.  Not models that existed before the reload.&lt;/p&gt;

&lt;p&gt;This is just a fairly normal application.  I get a method missing exception and restart the server then hit refresh in the browser and it works fine.  Hit refresh again and it gets a method missing error.  This is repeatable.  If I break in the code after the find returns a model on the first try after server startup all the methods are there after the reload they aren't.&lt;/p&gt;

&lt;p&gt;Run the same code in production mode no issues at all.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T16:45:18+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-15T16:45:18+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">63</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>@jshumate, sorry for the incorrect assumption. I haven't seen this behavior outside of storing a model globally. Could you post your code or example app somewhere which has this issue?</body>
      <body-html>&lt;div&gt;&lt;p&gt;@jshumate, sorry for the incorrect assumption. I haven't seen this behavior outside of storing a model globally. Could you post your code or example app somewhere which has this issue?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T16:59:18+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-15T16:59:18+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">64</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>New lead: It seems that all inheritable_attributes are going missing... but only on AR objects. Using inheritable_attributes on none AR objects works fine after a reload.

The attached patch seems to fix the issues I am seeing by removing the functionality that removes methods and variables from AR Classes.

The strange thing is that it does not seem to break anything else... does anyone know what it's supposed to be achieving? As far as I can tell, it resets class variables on every class inherited from AR::Base, but it removes the constant anyway.

Could this be a hangover from Reloadable, looks like the logic was added way back in 2006 (http://github.com/rails/rails/commit/651e57a72c2f53add43989c3aefa5ef843ed02a7).

I don't suppose technoweenie could shed any light on this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;New lead: It seems that all inheritable_attributes are going missing... but only on AR objects. Using inheritable_attributes on none AR objects works fine after a reload.&lt;/p&gt;

&lt;p&gt;The attached patch seems to fix the issues I am seeing by removing the functionality that removes methods and variables from AR Classes.&lt;/p&gt;

&lt;p&gt;The strange thing is that it does not seem to break anything else... does anyone know what it's supposed to be achieving? As far as I can tell, it resets class variables on every class inherited from AR::Base, but it removes the constant anyway.&lt;/p&gt;

&lt;p&gt;Could this be a hangover from Reloadable, looks like the logic was added way back in 2006 (&lt;a href=&quot;http://github.com/rails/rails/commit/651e57a72c2f53add43989c3aefa5ef843ed02a7).&amp;lt;/p&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;&gt;

&lt;p&gt;I don't suppose technoweenie could shed any light on this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T17:18:52+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: cache patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord bug dependencies patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-15T17:18:52+01:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">65</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>@Tom Lea

wow! good catch, great question.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Tom Lea&lt;/p&gt;

&lt;p&gt;wow! good catch, great question.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T17:26:58+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord bug dependencies patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-15T17:26:58+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">66</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I have had a chance to run the app for a bit in development mode with the 2 lines from the last patch commented out and can't find anything broken.

I also am unsure why this code is there.  It is only called from one location with the comment &quot;that its cleaning up the application by clearing out loaded classes so that they can be reloaded on the next request&quot;</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have had a chance to run the app for a bit in development mode with the 2 lines from the last patch commented out and can't find anything broken.&lt;/p&gt;

&lt;p&gt;I also am unsure why this code is there.  It is only called from one location with the comment &quot;that its cleaning up the application by clearing out loaded classes so that they can be reloaded on the next request&quot;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-15T23:56:11+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-15T23:56:11+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">67</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Is it possible the two lines were intended to solve a memory leak? That may explain why it doesn't make a noticeable change in behavior. It's a bit beyond me, but just a thought.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is it possible the two lines were intended to solve a memory leak? That may explain why it doesn't make a noticeable change in behavior. It's a bit beyond me, but just a thought.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-16T00:05:44+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-16T00:05:44+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">68</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I'm not sure why you would only need to clean out AR and not other classes.  Someone clearly had something in mind, but the comment and usage don't make it very clear what it was.

Of course there is the flipside of this which is why aren't the methods reloaded since clearly this code assumes they will be?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure why you would only need to clean out AR and not other classes.  Someone clearly had something in mind, but the comment and usage don't make it very clear what it was.&lt;/p&gt;

&lt;p&gt;Of course there is the flipside of this which is why aren't the methods reloaded since clearly this code assumes they will be?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-16T00:19:04+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-16T00:19:04+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">69</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I paused for a minute to think about what I just said and realized that I may have hit on why this just turned up.  If the problem isn't that the methods are deleted, but that they are no longer loaded properly then that would explain why this surfaced now.  Looking for changes to the code that brings them back in is starting to sound like a good idea.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I paused for a minute to think about what I just said and realized that I may have hit on why this just turned up.  If the problem isn't that the methods are deleted, but that they are no longer loaded properly then that would explain why this surfaced now.  Looking for changes to the code that brings them back in is starting to sound like a good idea.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-16T00:31:33+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-16T00:31:33+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">70</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>After a little bit of research I found &quot;this commit&quot;:http://github.com/rails/rails/commit/e7f61eab56d8a628cc605e5fa1e9055c4df852c7 which appears to be when those two lines were added.

As suspected, this was intended to solve a memory leak. But considering it was almost 3 years ago, I'm not sure if it's still applicable. I'm also wondering why the test didn't trigger?</body>
      <body-html>&lt;div&gt;&lt;p&gt;After a little bit of research I found &lt;a href=&quot;http://github.com/rails/rails/commit/e7f61eab56d8a628cc605e5fa1e9055c4df852c7&quot;&gt;this commit&lt;/a&gt; which appears to be when those two lines were added.&lt;/p&gt;

&lt;p&gt;As suspected, this was intended to solve a memory leak. But considering it was almost 3 years ago, I'm not sure if it's still applicable. I'm also wondering why the test didn't trigger?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-16T00:58:38+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-16T00:58:38+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">71</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I'm wondering if [this](http://github.com/rails/rails/commit/bfbf6bba1fe45dad35d57afa4e46b0106ea164ab) fixed the memleek issue and not the initial adding of those two lines... I'll try and do more investigation when I get time.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm wondering if &lt;a href=&quot;http://github.com/rails/rails/commit/bfbf6bba1fe45dad35d57afa4e46b0106ea164ab&quot;&gt;this&lt;/a&gt; fixed the memleek issue and not the initial adding of those two lines... I'll try and do more investigation when I get time.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-16T15:44:19+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-16T15:44:19+01:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">72</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I'm still thinking that this hasn't been a problem for 2+ years and nobody noticed it.  I'm trying to find anything recent that changed the way AR reloads that would explain why this just showed up in my projects in the last few months.  For all I know the patched lines are how it should be and the error is in on reload.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm still thinking that this hasn't been a problem for 2+ years and nobody noticed it.  I'm trying to find anything recent that changed the way AR reloads that would explain why this just showed up in my projects in the last few months.  For all I know the patched lines are how it should be and the error is in on reload.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-16T18:08:40+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-16T18:08:40+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">73</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Having spent a bit of time debugging after the last patch install I no longer get any method missing errors, but changes to the code are not getting picked up consistently and I am having to restart the server to see them.  So I am now completely convinced that this bug is not in the code that removes methods, but somewhere in the code that puts them back and I'm guessing it will turn up in a recent change.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Having spent a bit of time debugging after the last patch install I no longer get any method missing errors, but changes to the code are not getting picked up consistently and I am having to restart the server to see them.  So I am now completely convinced that this bug is not in the code that removes methods, but somewhere in the code that puts them back and I'm guessing it will turn up in a recent change.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-16T19:16:53+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-16T19:16:53+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">74</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>@jshumate are you failing to see changes to cached objects, or new instances?

Cached objects will keep a reference to their original class and methods, so changes only apply to new instances. This is intended behaviour for Ruby.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@jshumate are you failing to see changes to cached objects, or new instances?&lt;/p&gt;

&lt;p&gt;Cached objects will keep a reference to their original class and methods, so changes only apply to new instances. This is intended behaviour for Ruby.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-16T22:33:07+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-16T22:33:07+01:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">75</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>To be honest I haven't dug deeply, but several times I have had an error that didn't make any sense because the debugger state did not reflect the current code.  I restarted the server and all was well.  It seemed as if changes I was making to the source were not being reflected and if the changes affected a call to code that was not in sync I got an error.

Feels like the previous behavior in reverse. Instead of having methods go missing now they don't seem to all be be most recent versions so they can conflict.  This reinforces for me that we still aren't to the bottom of this.  Something that I haven't found yet changed in how AR reloads during development.</body>
      <body-html>&lt;div&gt;&lt;p&gt;To be honest I haven't dug deeply, but several times I have had an error that didn't make any sense because the debugger state did not reflect the current code.  I restarted the server and all was well.  It seemed as if changes I was making to the source were not being reflected and if the changes affected a call to code that was not in sync I got an error.&lt;/p&gt;

&lt;p&gt;Feels like the previous behavior in reverse. Instead of having methods go missing now they don't seem to all be be most recent versions so they can conflict.  This reinforces for me that we still aren't to the bottom of this.  Something that I haven't found yet changed in how AR reloads during development.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-17T03:59:52+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-17T03:59:52+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">76</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>@jshumate this basically comes down to you caching the old object with it's old methods and old behaviour. As far as I am aware, there is no magic to prevent this.

If you cache a serialized version of your models rather than the actual models the behaviour will be updated OK. This is because the deserialization will create a new instance and load up the attributes of the new class definition.

Caching a none serialized instance will keep it exactly as it was. So no changes to methods in the new base class will be applied.

My suspicion as to the cause of the reported change of behaviour could be related to an unexpected change of caching mechanisms, moving from either mem_cache_store, compressed_mem_cache_store, file_store or drb_store to memory_store. This could be triggered by the tmp/cache dir being deleted in default configuration (IIRC).

As part of a separate patch I think memory_store should start serializing by default (at least in development). But even if this does happen, it would be nice to be able to be able to do so in raw form, just for when performance really matters.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@jshumate this basically comes down to you caching the old object with it's old methods and old behaviour. As far as I am aware, there is no magic to prevent this.&lt;/p&gt;

&lt;p&gt;If you cache a serialized version of your models rather than the actual models the behaviour will be updated OK. This is because the deserialization will create a new instance and load up the attributes of the new class definition.&lt;/p&gt;

&lt;p&gt;Caching a none serialized instance will keep it exactly as it was. So no changes to methods in the new base class will be applied.&lt;/p&gt;

&lt;p&gt;My suspicion as to the cause of the reported change of behaviour could be related to an unexpected change of caching mechanisms, moving from either mem_cache_store, compressed_mem_cache_store, file_store or drb_store to memory_store. This could be triggered by the tmp/cache dir being deleted in default configuration (IIRC).&lt;/p&gt;

&lt;p&gt;As part of a separate patch I think memory_store should start serializing by default (at least in development). But even if this does happen, it would be nice to be able to be able to do so in raw form, just for when performance really matters.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-17T23:12:43+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: cache patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord activesupport bug cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-17T23:12:43+01:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">77</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Not sure how many times I have to go through this.  I am not caching anything between requests.  Each request begins with a find of the objects and I've watched the log and seen a new request to the db.  Without that last patch models have methods missing, with the last patch methods do not get updated while making code changes without restarting the server.

In production mode everything works as normal.  I just don't see how to be more clear and the patch in question has nothing to do with caching it only prevents methods from being removed from AR classes clearly depending on the reload to put them back, but it doesn't put them all back.  Something is different in the code that loads classes on server startup and the code that reloads classes on each request.    I don't see how that is caching related.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Not sure how many times I have to go through this.  I am not caching anything between requests.  Each request begins with a find of the objects and I've watched the log and seen a new request to the db.  Without that last patch models have methods missing, with the last patch methods do not get updated while making code changes without restarting the server.&lt;/p&gt;

&lt;p&gt;In production mode everything works as normal.  I just don't see how to be more clear and the patch in question has nothing to do with caching it only prevents methods from being removed from AR classes clearly depending on the reload to put them back, but it doesn't put them all back.  Something is different in the code that loads classes on server startup and the code that reloads classes on each request.    I don't see how that is caching related.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-18T01:55:13+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord activesupport bug cache patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-18T01:55:13+01:00</updated-at>
      <user-id type="integer">28407</user-id>
      <version type="integer">78</version>
      <user-name>jshumate</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>jshumate, do you have an example app or piece of code that replicates your problem? I think that would help us debug it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;jshumate, do you have an example app or piece of code that replicates your problem? I think that would help us debug it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-18T02:56:06+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-18T02:56:06+01:00</updated-at>
      <user-id type="integer">5701</user-id>
      <version type="integer">79</version>
      <user-name>Ryan Bates</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>@Ryan, figured out why there was no sign of the test failing, [looks like it was removed](http://github.com/rails/rails/commit/1ea085ec7e77af32bf5234fb4642b012aec62779). I tried to reconstruct the test again using updated interfaces, but I can't get it to pass without my patch, never mind with.

@jsumate, if there is no caching happening we need to see code... the only replication I can do is either using MemoryCache, [which this should fix](http://pastie.org/254909), or keeping instances in global variables ($fish ||= Fish.new; $fish.name).</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Ryan, figured out why there was no sign of the test failing, &lt;a href=&quot;http://github.com/rails/rails/commit/1ea085ec7e77af32bf5234fb4642b012aec62779&quot;&gt;looks like it was removed&lt;/a&gt;. I tried to reconstruct the test again using updated interfaces, but I can't get it to pass without my patch, never mind with.&lt;/p&gt;

&lt;p&gt;@jsumate, if there is no caching happening we need to see code... the only replication I can do is either using MemoryCache, &lt;a href=&quot;http://pastie.org/254909&quot;&gt;which this should fix&lt;/a&gt;, or keeping instances in global variables ($fish ||= Fish.new; $fish.name).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-18T14:14:10+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-18T14:14:10+01:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">80</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>This has been bugging me since I starting using Rails.cache, so that's my only frame of reference for it here.  I'm not sure I follow what exactly the problem is, but I have made a very small console snippet that reproduces my problem, here:

http://pastie.org/256177

I use reload! to kind of wipe the slate clean and still grab the next request from the cache.  the cache appears to return the object, but simple requests to it fail, like .id

I'm kinda lost here but would love it fixed. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;This has been bugging me since I starting using Rails.cache, so that's my only frame of reference for it here.  I'm not sure I follow what exactly the problem is, but I have made a very small console snippet that reproduces my problem, here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pastie.org/256177&quot;&gt;http://pastie.org/256177&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I use reload! to kind of wipe the slate clean and still grab the next request from the cache.  the cache appears to return the object, but simple requests to it fail, like .id&lt;/p&gt;

&lt;p&gt;I'm kinda lost here but would love it fixed. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-20T03:46:32+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-20T03:46:32+01:00</updated-at>
      <user-id type="integer">17345</user-id>
      <version type="integer">81</version>
      <user-name>Steven Soroka</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-20T17:20:40+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-08-20T17:20:40+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">82</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I am seeing the exact same problem. Actually it poped up in my code when i was including the social_feed plugin. But as nobody using this plugin has this problem, it seems to be related to my specific setup.
Nevertheless, when accessing the page in development mode, the first request works and as soon as I reload the page everything is crashing with a &quot;stack level to deep&quot; error. Turning on model caching in development mode resolves the issue (as well as changing to production mode).
The stack level too deep error seems to be related to not existing methods and properties. But I haven't had time to go deeper and find the root of the problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am seeing the exact same problem. Actually it poped up in my
code when i was including the social_feed plugin. But as nobody
using this plugin has this problem, it seems to be related to my
specific setup. Nevertheless, when accessing the page in
development mode, the first request works and as soon as I reload
the page everything is crashing with a &quot;stack level to deep&quot; error.
Turning on model caching in development mode resolves the issue (as
well as changing to production mode). The stack level too deep
error seems to be related to not existing methods and properties.
But I haven't had time to go deeper and find the root of the
problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-11T17:39:00+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-09-11T17:39:07+01:00</updated-at>
      <user-id type="integer">31745</user-id>
      <version type="integer">83</version>
      <user-name>namxam</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I actually see a &quot;similar&quot; issue now.  I don't get crashes, but I do have method-not-found errors upon reload in development.
I have a model &quot;Language&quot; with a defined method &quot;name&quot;.  Everything works fine for the first view, but on page reload, the methods &quot;name&quot; and &quot;id&quot; are stripped from the Language model.

Also class caching seems to be always turned on, even in development mode (with the config.cache_classes set to false).

Anyone else seeing something like this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I actually see a &quot;similar&quot; issue now. I don't get crashes, but I
do have method-not-found errors upon reload in development. I have
a model &quot;Language&quot; with a defined method &quot;name&quot;. Everything works
fine for the first view, but on page reload, the methods &quot;name&quot; and
&quot;id&quot; are stripped from the Language model.&lt;/p&gt;
&lt;p&gt;Also class caching seems to be always turned on, even in
development mode (with the config.cache_classes set to false).&lt;/p&gt;
&lt;p&gt;Anyone else seeing something like this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-12T20:03:08+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-09-12T20:03:15+01:00</updated-at>
      <user-id type="integer">27185</user-id>
      <version type="integer">84</version>
      <user-name>Glenn Powell</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Same problem, solved by adding this:

@@@ruby
module ActiveSupport
  module Cache
    class BlackholeStore &lt; Store
      def read(name, options = nil)
        super
        nil
      end

      def write(name, value, options = nil)
        super
      end
    end
  end
end

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Same problem, solved by adding this:&lt;/p&gt;
&lt;p&gt;@@@ruby module ActiveSupport module Cache&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class BlackholeStore &amp;lt; Store
  def read(name, options = nil)
    super
    nil
  end

  def write(name, value, options = nil)
    super
  end
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-15T09:17:49+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-09-15T13:05:58+01:00</updated-at>
      <user-id type="integer">31980</user-id>
      <version type="integer">85</version>
      <user-name>Mario Uher</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>@Glenn: Yeah, that's it exactly, my cached objects are really screwy.

I've looked in to this and it seems to me that the problem is that Marshal.load() (which is called by the cache) isn't checking to see if the object it's creating is properly autoloaded yet.

Perhaps the answer lies in a smarter cache, fixed marshal, or in ActiveSupport::Dependencies somewhere.  I dunno.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Glenn: Yeah, that's it exactly, my cached objects are really
screwy.&lt;/p&gt;
&lt;p&gt;I've looked in to this and it seems to me that the problem is
that Marshal.load() (which is called by the cache) isn't checking
to see if the object it's creating is properly autoloaded yet.&lt;/p&gt;
&lt;p&gt;Perhaps the answer lies in a smarter cache, fixed marshal, or in
ActiveSupport::Dependencies somewhere. I dunno.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-15T22:51:20+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-09-15T22:51:24+01:00</updated-at>
      <user-id type="integer">17345</user-id>
      <version type="integer">86</version>
      <user-name>Steven Soroka</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Well, actually I tracked my particular problem down to a dependency issue.  I was requiring that one model class in another custom class using require instead of require_dependency.

But my (erroneous) code *was* in fact working not too long ago, so I think something definitely changed with respect to class loading/caching.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well, actually I tracked my particular problem down to a
dependency issue. I was requiring that one model class in another
custom class using require instead of require_dependency.&lt;/p&gt;
&lt;p&gt;But my (erroneous) code &lt;em&gt;was&lt;/em&gt; in fact working not too
long ago, so I think something definitely changed with respect to
class loading/caching.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-16T11:59:22+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: cache patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-09-16T11:59:28+01:00</updated-at>
      <user-id type="integer">27185</user-id>
      <version type="integer">87</version>
      <user-name>Glenn Powell</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I've managed to patch the Marshal.load problem here, and it seems to resolve the problem.  I'll look in to it deeper but I thought some of you might want to try it.  Throw this in a file in your auto_loader.rb or whatever.

module Marshal
  class &lt;&lt;self
    def load_with_preload_class(str, &amp;p)
      str.scan(/.o:.(\w+)/).each{|matches|
        begin
          # by constantizing the class name,
          # it should trigger it to be autoloaded.
          matches.first.constantize
        rescue NameError
          # I guess that wasn't a class we found after all.
          # Nothing to see here, move along
        end
      }
      load_without_preload_class(str, &amp;p)
    end
    alias_method_chain :load, :preload_class
  end
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've managed to patch the Marshal.load problem here, and it
seems to resolve the problem. I'll look in to it deeper but I
thought some of you might want to try it. Throw this in a file in
your auto_loader.rb or whatever.&lt;/p&gt;
&lt;p&gt;module Marshal class &amp;lt;&amp;lt;self&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def load_with_preload_class(str, &amp;amp;p)
  str.scan(/.o:.(\w+)/).each{|matches|
    begin
      # by constantizing the class name,
      # it should trigger it to be autoloaded.
      matches.first.constantize
    rescue NameError
      # I guess that wasn't a class we found after all.
      # Nothing to see here, move along
    end
  }
  load_without_preload_class(str, &amp;amp;p)
end
alias_method_chain :load, :preload_class
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-17T16:18:23+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-09-17T16:18:30+01:00</updated-at>
      <user-id type="integer">17345</user-id>
      <version type="integer">88</version>
      <user-name>Steven Soroka</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Oops, I missed namespaced models.  Use this instead:

module Marshal
  class &lt;&lt;self
    def load_with_preload_class(str, &amp;p)
      str.scan(/.o:.([\w:]+)/).each{|matches|
        begin
          # by constantizing the class name,
          # it should trigger it to be autoloaded.
          matches.first.constantize
        rescue NameError
          # I guess that wasn't a class we found after all.
          # Nothing to see here, move along
        end
      }
      load_without_preload_class(str, &amp;p)
    end
    alias_method_chain :load, :preload_class
  end
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oops, I missed namespaced models. Use this instead:&lt;/p&gt;
&lt;p&gt;module Marshal class &amp;lt;&amp;lt;self&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def load_with_preload_class(str, &amp;amp;p)
  str.scan(/.o:.([\w:]+)/).each{|matches|
    begin
      # by constantizing the class name,
      # it should trigger it to be autoloaded.
      matches.first.constantize
    rescue NameError
      # I guess that wasn't a class we found after all.
      # Nothing to see here, move along
    end
  }
  load_without_preload_class(str, &amp;amp;p)
end
alias_method_chain :load, :preload_class
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-17T16:29:14+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-09-17T16:29:19+01:00</updated-at>
      <user-id type="integer">17345</user-id>
      <version type="integer">89</version>
      <user-name>Steven Soroka</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I'm running into the same issue @jshumate is witnessing: in development environment AR objects will &quot;lose&quot; methods on the second (and all subsequent) request. I've disabled all manner of caching, to no effect, so I doubt that's it. What's notable is that the missing method, a belongs_to association, is defined in an included module, not the AR object itself. 

Enabling class caching via 
@@@
config.cache_classes = true 
@@@
helps, but doesn't address the issue with reloading.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm running into the same issue @jshumate is witnessing: in
development environment AR objects will &quot;lose&quot; methods on the
second (and all subsequent) request. I've disabled all manner of
caching, to no effect, so I doubt that's it. What's notable is that
the missing method, a belongs_to association, is defined in an
included module, not the AR object itself.&lt;/p&gt;
&lt;p&gt;Enabling class caching via&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
config.cache_classes = true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;helps, but doesn't address the issue with reloading.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-10-02T20:05:16+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-10-02T20:05:19+01:00</updated-at>
      <user-id type="integer">20210</user-id>
      <version type="integer">90</version>
      <user-name>Chris Gansen</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Looks like we're discussing the same issue in this ticket:

http://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/1290-activerecord-raises-randomly-apparently-a-timezone-issue#ticket-1290-24

David Rice has pulled together an example app that shows the issue: http://github.com/davidjrice/buggy_rails_app_1290/tree/master (he's caching an AR object between requests in a class variable.)

As far as I can tell, this issue is present in 2.1.x as well as edge.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks like we're discussing the same issue in this ticket:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/1290-activerecord-raises-randomly-apparently-a-timezone-issue#ticket-1290-24&quot;&gt;
http://rails.lighthouseapp.com/p...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;David Rice has pulled together an example app that shows the
issue: &lt;a href=&quot;http://github.com/davidjrice/buggy_rails_app_1290/tree/master&quot;&gt;http://github.com/davidjrice/bug...&lt;/a&gt;
(he's caching an AR object between requests in a class
variable.)&lt;/p&gt;
&lt;p&gt;As far as I can tell, this issue is present in 2.1.x as well as
edge.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-05T15:35:30+00:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>hold</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-11-05T15:35:37+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">91</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>See #1339 for the short story</body>
      <body-html>&lt;div&gt;&lt;p&gt;See &lt;a href=&quot;/projects/8994/tickets/1339&quot; title=&quot;Ticket #1339&quot;&gt;#1339&lt;/a&gt; for the short story&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-10T18:40:25+00:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:state: hold
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2008-11-10T18:40:33+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">92</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Holder, who said &lt;a href=&quot;http://www.mylacebags.com/category-120-b0-Mulberry.html&quot;&gt;&lt;font color=&quot;#FF0000&quot; size=&quot;4&quot; face=&quot;Courier New, Courier, monospace&quot;  &gt;&lt;strong&gt;Mulberry replica&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;the probe &#8220;began some weeks ago&lt;a href=&quot;http://www.mylacebags.com/category-117-b0-Loewe.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;replica loewe handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;,&#8221; ed hardy clothing sale &lt;a href=&quot;http://www.mylacebags.com/&quot;&gt;&lt;font color=&quot;#990099&quot; size=&quot;4&quot; face=&quot;Courier New, Courier, monospace&quot;  &gt;&lt;strong&gt;designer handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;declined to specify which companies&lt;a href=&quot;http://www.marisabags.com/category-119-b0-Miu-Miu.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;Miu Miu replica&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; are under investigation. He said he surveyed &lt;a href=&quot;http://www.marisabags.com/category-112-b0-Dolce-Gabbana.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;dolce gabbana bags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;a portion of the damage, was briefed by&lt;a href=&quot;http://www.marisabags.com/&quot;&gt;&lt;font color=&quot;#FF0000&quot; size=&quot;4&quot; face=&quot;Courier New, Courier, monospace&quot;  &gt;replica handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; Coast Guard officers and&lt;a href=&quot;http://www.thelacebags.com/category-119-b3-Miu-Miu.html&quot;&gt;&lt;font color=&quot;#FF0000&quot; size=&quot;4&quot; face=&quot;Courier New, Courier, monospace&quot;  &gt;&lt;strong&gt;Miu Miu replica&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; met with prosecutors for the areas &lt;a href=&quot;http://www.thelacebags.com/category-111-b2-Coach.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;coach replica&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;affected by the spill.chanel offers&lt;a href=&quot;http://www.thetotebag4u.com/category-177-b0-Celine.html&quot;&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;celine replica handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; very unique and stylish &lt;a href=&quot;http://www.thetotebag4u.com/category-111-b0-Coach.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;coach replica handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; that catch the attention of all women&lt;a href=&quot;http://www.poperwatches.com/category-59-b0-ebel.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;ebel for sale&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;. We also have many Luxurious louis &lt;a href=&quot;http://www.poperwatches.com&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;designer watches&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;vuitton speedy handbags in different &lt;a href=&quot;http://www.poperwatches.com/category-78-b0-Piaget.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;replica Piaget&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;styles and colors while at a competitive price. &lt;a href=&quot;http://www.qualityfirstwatch.com/category-89-b0-Audemars-Piguet.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;Audemars Piguet for sale&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;classic design of every burberry bag.Police want&lt;a href=&quot;http://www.qualityfirstwatch.com/category-79-b0-Rado.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;Rado for sale&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; to know if you're offered designer&lt;a href=&quot;http://www.standardwatch.com/category-51-b0-Cartier.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;Cartier for sale&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; item at a bargain price POLICE today &lt;a href=&quot;http://www.standardwatch.com/category-57-b0-croum.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;croum for sale&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;warned the public to be on their &lt;a href=&quot;http://www.thefirstwatches.com/category-83-b0-U-boat.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;U-boat watches&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;guard if offered cheap &lt;a href=&quot;http://www.thefirstwatches.com/category-92-b0-Blancpain.html&quot;&gt;&lt;font color=&quot;#00FFFF&quot; size=&quot;4&quot; face=&quot;Times New Roman, Times, serif&quot;  &gt;&lt;strong&gt;Blancpain watches&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; stolen from a Leeds top store.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Holder, who said &lt;a href=
&quot;http://www.mylacebags.com/category-120-b0-Mulberry.html&quot;&gt;&lt;strong&gt;Mulberry
replica&lt;/strong&gt;&lt;/a&gt;the probe &amp;#8220;began some weeks ago&lt;a href=
&quot;http://www.mylacebags.com/category-117-b0-Loewe.html&quot;&gt;&lt;strong&gt;replica
loewe handbags&lt;/strong&gt;&lt;/a&gt;,&amp;#8221; ed hardy clothing sale &lt;a href=
&quot;http://www.mylacebags.com/&quot;&gt;&lt;strong&gt;designer
handbags&lt;/strong&gt;&lt;/a&gt;declined to specify which companies&lt;a href=
&quot;http://www.marisabags.com/category-119-b0-Miu-Miu.html&quot;&gt;&lt;strong&gt;Miu
Miu replica&lt;/strong&gt;&lt;/a&gt; are under investigation. He said he
surveyed &lt;a href=
&quot;http://www.marisabags.com/category-112-b0-Dolce-Gabbana.html&quot;&gt;&lt;strong&gt;
dolce gabbana bags&lt;/strong&gt;&lt;/a&gt;a portion of the damage, was briefed
by&lt;a href=&quot;http://www.marisabags.com/&quot;&gt;replica handbags&lt;/a&gt; Coast
Guard officers and&lt;a href=
&quot;http://www.thelacebags.com/category-119-b3-Miu-Miu.html&quot;&gt;&lt;strong&gt;Miu
Miu replica&lt;/strong&gt;&lt;/a&gt; met with prosecutors for the areas
&lt;a href=&quot;http://www.thelacebags.com/category-111-b2-Coach.html&quot;&gt;&lt;strong&gt;
coach replica&lt;/strong&gt;&lt;/a&gt;affected by the spill.chanel
offers&lt;a href=
&quot;http://www.thetotebag4u.com/category-177-b0-Celine.html&quot;&gt;&lt;strong&gt;celine
replica handbags&lt;/strong&gt;&lt;/a&gt; very unique and stylish &lt;a href=
&quot;http://www.thetotebag4u.com/category-111-b0-Coach.html&quot;&gt;&lt;strong&gt;coach
replica handbags&lt;/strong&gt;&lt;/a&gt; that catch the attention of all
women&lt;a href=
&quot;http://www.poperwatches.com/category-59-b0-ebel.html&quot;&gt;&lt;strong&gt;ebel
for sale&lt;/strong&gt;&lt;/a&gt;. We also have many Luxurious louis &lt;a href=
&quot;http://www.poperwatches.com&quot;&gt;&lt;strong&gt;designer
watches&lt;/strong&gt;&lt;/a&gt;vuitton speedy handbags in different &lt;a href=
&quot;http://www.poperwatches.com/category-78-b0-Piaget.html&quot;&gt;&lt;strong&gt;replica
Piaget&lt;/strong&gt;&lt;/a&gt;styles and colors while at a competitive price.
&lt;a href=
&quot;http://www.qualityfirstwatch.com/category-89-b0-Audemars-Piguet.html&quot;&gt;
&lt;strong&gt;Audemars Piguet for sale&lt;/strong&gt;&lt;/a&gt;classic design of
every burberry bag.Police want&lt;a href=
&quot;http://www.qualityfirstwatch.com/category-79-b0-Rado.html&quot;&gt;&lt;strong&gt;Rado
for sale&lt;/strong&gt;&lt;/a&gt; to know if you're offered designer&lt;a href=
&quot;http://www.standardwatch.com/category-51-b0-Cartier.html&quot;&gt;&lt;strong&gt;Cartier
for sale&lt;/strong&gt;&lt;/a&gt; item at a bargain price POLICE today &lt;a href=
&quot;http://www.standardwatch.com/category-57-b0-croum.html&quot;&gt;&lt;strong&gt;croum
for sale&lt;/strong&gt;&lt;/a&gt;warned the public to be on their &lt;a href=
&quot;http://www.thefirstwatches.com/category-83-b0-U-boat.html&quot;&gt;&lt;strong&gt;
U-boat watches&lt;/strong&gt;&lt;/a&gt;guard if offered cheap &lt;a href=
&quot;http://www.thefirstwatches.com/category-92-b0-Blancpain.html&quot;&gt;&lt;strong&gt;
Blancpain watches&lt;/strong&gt;&lt;/a&gt; stolen from a Leeds top store.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-24T05:32:22+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: cache patch
:priority: 0
:title: Caching models fails in development
:assigned_user: 424
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">246</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord &quot;replica watches&quot;</tag>
      <title>[patch] - SQL Injection for :limit and :offset</title>
      <updated-at type="datetime">2010-07-24T06:24:09+01:00</updated-at>
      <user-id type="integer">108623</user-id>
      <version type="integer">93</version>
      <user-name>replicahandbag</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-atlanta-thrashers-c-2_4.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Atlanta Thrashers&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-boston-bruins-c-2_7.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Boston Bruins&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-buffalo-sabres-c-2_11.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Buffalo Sabres&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-calgary-flames-c-2_12.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Calgary Flames&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-carolina-hurricanes-c-2_13.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Carolina Hurricanes&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-chicago-blackhawks-c-2_14.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Chicago Blackhawks&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-colorado-avalanche-c-2_15.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Colorado Avalanche&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-columbus-blue-jackets-c-2_16.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Columbus Blue Jackets&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-dallas-stars-c-2_17.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Dallas Stars&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-detroit-red-wings-c-2_18.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Detroit Red Wings&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-edmonton-oilers-c-2_19.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Edmonton Oilers&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-florida-panthers-c-2_20.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Florida Panthers&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-kids-jersey-c-2_141.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Kids Jersey&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-los-angeles-kings-c-2_21.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Los Angeles Kings&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-minnesota-wild-c-2_22.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Minnesota Wild&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Montreal Canadiens&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-nashville-predators-c-2_24.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;Nashville Predators&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-new-jersey-devils-c-2_25.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;New Jersey Devils&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-new-york-islanders-c-2_26.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;New York Islanders&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;SPAN lang=EN-US&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-new-york-rangers-c-2_27.html&quot;&gt;&lt;SPAN style=&quot;COLOR: #333333&quot;&gt;&lt;FONT size=3&gt;&amp;nbsp;&amp;nbsp;New York Rangers&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;FONT color=#000000 size=3&gt; &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=MsoNormal style=&quot;MARGIN: 0cm 0cm 0pt&quot;&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/TD&gt;</body>
      <body-html>&lt;div&gt;&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-atlanta-thrashers-c-2_4.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Atlanta Thrashers&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-boston-bruins-c-2_7.html&quot;&gt;&lt;span&gt;
&amp;nbsp;&amp;nbsp;Boston Bruins&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-buffalo-sabres-c-2_11.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Buffalo Sabres&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-calgary-flames-c-2_12.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Calgary Flames&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-carolina-hurricanes-c-2_13.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Carolina Hurricanes&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-chicago-blackhawks-c-2_14.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Chicago Blackhawks&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-colorado-avalanche-c-2_15.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Colorado Avalanche&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-columbus-blue-jackets-c-2_16.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Columbus Blue Jackets&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-dallas-stars-c-2_17.html&quot;&gt;&lt;span&gt;
&amp;nbsp;&amp;nbsp;Dallas Stars&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-detroit-red-wings-c-2_18.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Detroit Red Wings&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-edmonton-oilers-c-2_19.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Edmonton Oilers&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-florida-panthers-c-2_20.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Florida Panthers&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-kids-jersey-c-2_141.html&quot;&gt;&lt;span&gt;
&amp;nbsp;&amp;nbsp;Kids Jersey&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-los-angeles-kings-c-2_21.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Los Angeles Kings&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-minnesota-wild-c-2_22.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Minnesota Wild&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Montreal Canadiens&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-nashville-predators-c-2_24.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;Nashville Predators&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-new-jersey-devils-c-2_25.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;New Jersey Devils&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-new-york-islanders-c-2_26.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;New York Islanders&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-new-york-rangers-c-2_27.html&quot;&gt;
&lt;span&gt;&amp;nbsp;&amp;nbsp;New York Rangers&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;MsoNormal&quot;&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-27T17:32:12+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2010-08-28T05:01:27+01:00</updated-at>
      <user-id type="integer">113425</user-id>
      <version type="integer">94</version>
      <user-name>nhljerseys</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>&lt;P class=MsoNormal style=&quot;BACKGROUND: white; MARGIN: 0cm 0cm 0pt; LINE-HEIGHT: 170%; mso-shading: windowtext; mso-pattern: solid white&quot;&gt;&lt;SPAN lang=EN style=&quot;mso-ansi-language: EN&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;On June 30th, 2009, &lt;/FONT&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Gomez &lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;was traded by the Rangers, along with &lt;/FONT&gt;&lt;A title=&quot;Tom Pyatt&quot; href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Tom Pyatt &lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;and &lt;/FONT&gt;&lt;A title=&quot;Michael Busto&quot; href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Michael Busto,&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt; to the &lt;/FONT&gt;&lt;A title=&quot;Montreal Canadiens&quot; href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Montreal Canadiens&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt; in exchange for &lt;/FONT&gt;&lt;A title=&quot;Christopher Higgins&quot; href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Christopher Higgins&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;, &lt;/FONT&gt;&lt;A title=&quot;Doug Janik&quot; href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Doug Janik&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;, &lt;/FONT&gt;&lt;A title=&quot;Ryan McDonagh&quot; href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Ryan McDonagh&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;, and &lt;/FONT&gt;&lt;A title=&quot;Pavel Valentenko&quot; href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Pavel Valentenko&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;.This trade also reunites &lt;/FONT&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Gomez &lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;with former Devils teammate&lt;/FONT&gt;&lt;A title=&quot;Brian Gionta&quot; href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt; Brian Gionta&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;. Gionta signed after the Gomez trade. Montreal's acquisition of Gomez drew considerable attention and criticism across various news sources largely because of his lack of production since signing his contract, one of the longest and highest in the &lt;/FONT&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;NHL&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;. With the &lt;/FONT&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Canadiens&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;, &lt;/FONT&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Gomez&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt; wore the number 91 for the 2009-2010 season (reverse 19) as his former two numbers are retired by the &lt;/FONT&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Montreal Canadiens&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt; organization (Number 19 of &lt;/FONT&gt;&lt;A title=&quot;Larry Robinson&quot; href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Larry Robinson&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt; and the number 23 of &lt;/FONT&gt;&lt;A title=&quot;Bob Gainey&quot; href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Bob Gainey&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt;). For the start of the 2010-11 &lt;/FONT&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;NHL hockey&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt; season, &lt;/FONT&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Gomez&lt;/FONT&gt;&lt;/A&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#000000 size=3&gt; decided to switch his number from 91 to 11 (previously worn by long-time Habs captain &lt;/FONT&gt;&lt;A href=&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;&lt;FONT face=&quot;Times New Roman&quot; color=#abd3d6 size=3&gt;Saku Koivu&lt;/FONT&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN lang=EN-US style=&quot;FONT-SIZE: 12pt; BACKGROUND: red; COLOR: olive; LINE-HEIGHT: 170%; mso-bidi-font-size: 10.0pt; mso-highlight: red&quot;&gt;</body>
      <body-html>&lt;div&gt;&lt;p class=&quot;MsoNormal&quot;&gt;&lt;span&gt;On June 30th, 2009, &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;
Gomez&lt;/a&gt; was traded by the Rangers, along with &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;
title=&quot;Tom Pyatt&quot;&gt;Tom Pyatt&lt;/a&gt; and &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;
title=&quot;Michael Busto&quot;&gt;Michael Busto,&lt;/a&gt; to the &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;
title=&quot;Montreal Canadiens&quot;&gt;Montreal Canadiens&lt;/a&gt; in exchange for
&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;
title=&quot;Christopher Higgins&quot;&gt;Christopher Higgins&lt;/a&gt;, &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;
title=&quot;Doug Janik&quot;&gt;Doug Janik&lt;/a&gt;, &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;
title=&quot;Ryan McDonagh&quot;&gt;Ryan McDonagh&lt;/a&gt;, and &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;
title=&quot;Pavel Valentenko&quot;&gt;Pavel Valentenko&lt;/a&gt;.This trade also
reunites &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;
Gomez&lt;/a&gt; with former Devils teammate &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;
title=&quot;Brian Gionta&quot;&gt;Brian Gionta&lt;/a&gt;. Gionta signed after the
Gomez trade. Montreal's acquisition of Gomez drew considerable
attention and criticism across various news sources largely because
of his lack of production since signing his contract, one of the
longest and highest in the &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;
NHL&lt;/a&gt;. With the &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;
Canadiens&lt;/a&gt;, &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;
Gomez&lt;/a&gt; wore the number 91 for the 2009-2010 season (reverse 19)
as his former two numbers are retired by the &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;
Montreal Canadiens&lt;/a&gt; organization (Number 19 of &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;
title=&quot;Larry Robinson&quot;&gt;Larry Robinson&lt;/a&gt; and the number 23 of
&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;
title=&quot;Bob Gainey&quot;&gt;Bob Gainey&lt;/a&gt;). For the start of the 2010-11
&lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;
NHL hockey&lt;/a&gt; season, &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;
Gomez&lt;/a&gt; decided to switch his number from 91 to 11 (previously
worn by long-time Habs captain &lt;a href=
&quot;http://www.reebokjersey.com/nhl-jersey-montreal-canadiens-c-2_23.html?page=3&amp;amp;sort=20a&quot;&gt;
Saku Koivu&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-27T17:33:35+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2010-08-28T05:01:41+01:00</updated-at>
      <user-id type="integer">113425</user-id>
      <version type="integer">95</version>
      <user-name>nhljerseys</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>NHL jersey  
Cheap nhl jersey
NHL jerseys
Cheap nhl jerseys
nhl hockey jerseys
new nhl hockey jerseys
discount nhl hockey jerseys
Canadiens jersey
Montreal Canadiens jersey
Canadiens jerseys
Montreal Canadiens jerseys
Montreal Canadiens


&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl hockey jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;new nhl hockey jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;discount nhl hockey jerseys&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens jersey&lt;/a&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;cid=44&quot;&gt;Montreal Canadiens&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;NHL jersey&lt;br&gt;
Cheap nhl jersey&lt;br&gt;
NHL jerseys&lt;br&gt;
Cheap nhl jerseys&lt;br&gt;
nhl hockey jerseys&lt;br&gt;
new nhl hockey jerseys&lt;br&gt;
discount nhl hockey jerseys&lt;br&gt;
Canadiens jersey&lt;br&gt;
Montreal Canadiens jersey&lt;br&gt;
Canadiens jerseys&lt;br&gt;
Montreal Canadiens jerseys&lt;br&gt;
Montreal Canadiens&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;NHL jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;Cheap nhl jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;nhl hockey jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;new nhl hockey
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.nhlonlineshop.com/&quot;&gt;discount nhl hockey
jerseys&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens jersey&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.nhlonlineshop.com/productlist.php?fid=2&amp;amp;amp;cid=44&quot;&gt;
Montreal Canadiens&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-28T04:39:19+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2010-08-28T05:01:52+01:00</updated-at>
      <user-id type="integer">113493</user-id>
      <version type="integer">96</version>
      <user-name>axxjz</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>More over, its &lt;a href=&quot;http://www.yeahwatch.com/Hermes-Bags/&quot;&gt;&lt;font color=&quot;#99FF66&quot; size=&quot;4&quot; face=&quot;Fixedsys&quot;  &gt;&lt;strong&gt;hermes handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; and &lt;a href=&quot;http://www.yeahwatch.com/Bally-Bags/&quot;&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot; face=&quot;fantasy&quot;  &gt;&lt;strong&gt;bally bags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; are so very temporal what is in today wont be long before its out, giving way to &lt;a href=&quot;http://www.yeahwatch.com/Marc-jacob-Bags/&quot;&gt;&lt;font color=&quot;#FFFF00&quot; size=&quot;4&quot; face=&quot;fantasy&quot;  &gt;&lt;strong&gt;marc jacobs replica&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; in. Yet there is no underestimating the power of the &lt;a href=&quot;http://www.yeahwatch.com/Mulberry-Bags/&quot;&gt;&lt;font color=&quot;#FF99CC&quot; size=&quot;4&quot; face=&quot;WST_Span&quot;  &gt;&lt;strong&gt;mulberry bags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; buyer of eyeliner or haute couture dinner wear or the producer of the &lt;a href=&quot;http://www.yeahwatch.com/&quot;&gt;&lt;font color=&quot;#CCFFFF&quot; size=&quot;4&quot; face=&quot;Cambria&quot;  &gt;&lt;strong&gt;replica handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; or its exact &lt;a href=&quot;http://www.yeahwatch.com/&quot;&gt;&lt;font color=&quot;#3300FF&quot; size=&quot;4&quot; face=&quot;serif&quot;  &gt;&lt;strong&gt;designer handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; maker. Everybody who thinks or acts trendy has got to be in the midst of fashion and fads. There is no denying that. As much as clothes speak a language the accessories that accompany your clothing like the bags you use, foot wear, underwear, keychains, watches, eye wear also can speak loads about how fashion conscious you are. While men have always been intrigued and fascinated with the secret contents of a womans &lt;a href=&quot;http://www.yeahwatch.com/&quot;&gt;&lt;font color=&quot;#CCCC33&quot; size=&quot;4&quot; face=&quot;BatangChe&quot;  &gt;&lt;strong&gt;designer replica handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;, women find it the perfect companion to hold their cosmetic collections and utilities, while some use it to hide their dirty little secrets. Dont ask me why &lt;a href=&quot;http://www.yeahwatch.com/Coach-Bags/&quot;&gt;&lt;font color=&quot;#999999&quot; size=&quot;4&quot; face=&quot;&#40657;&#20307;&quot;  &gt;&lt;strong&gt;coach replica&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; or &lt;a href=&quot;http://www.yeahwatch.com/Coach-Bags/&quot;&gt;&lt;font color=&quot;#FFCC33&quot; size=&quot;4&quot; face=&quot;Arial&quot;  &gt;&lt;strong&gt;coach replica handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; or &lt;a href=&quot;http://www.yeahwatch.com/Dooney-Bourke-Bags/&quot;&gt;&lt;font color=&quot;#3366FF&quot; size=&quot;4&quot; face=&quot;Terminal&quot;  &gt;&lt;strong&gt;dooney and bourke handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;, in spite of its various forms, shapes, sizes and purposes has been a fashion statement as much as its is a womans companion. The womans toiletry &lt;a href=&quot;http://www.yeahwatch.com/Louis-Vuitton-Bags/&quot;&gt;&lt;font color=&quot;#999999&quot; size=&quot;4&quot; face=&quot;&#40657;&#20307;&quot;  &gt;&lt;strong&gt;louis vuitton replica&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;, is without doubt, expected to be trendy, labeled and must cost the moon and two other planets combined. In todays world, hand bad, shoulder &lt;a href=&quot;http://www.yeahwatch.com/Burberry-Bags/&quot;&gt;&lt;font color=&quot;#FF99CC&quot; size=&quot;4&quot; face=&quot;WST_Span&quot;  &gt;&lt;strong&gt;burberry replica handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; or clutch &lt;a href=&quot;http://www.yeahwatch.com/Celine-Bags/&quot;&gt;&lt;font color=&quot;#CCCC33&quot; size=&quot;4&quot; face=&quot;BatangChe&quot;  &gt;&lt;strong&gt;celine bags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;, &lt;a href=&quot;http://www.yeahwatch.com/Burberry-Bags/&quot;&gt;&lt;font color=&quot;#FFCC33&quot; size=&quot;4&quot; face=&quot;Arial&quot;  &gt;&lt;strong&gt;burberry replica&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; clearly defines what fashion stands for. And when the best celebrities in the world carry their &lt;a href=&quot;http://www.yeahwatch.com/Marc-jacob-Bags/&quot;&gt;&lt;font color=&quot;#CC6666&quot; size=&quot;4&quot; face=&quot;Verdana&quot;  &gt;&lt;strong&gt;marc jacob&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; to the &lt;a href=&quot;http://www.yeahwatch.com/Dolce-Gabbana-Bags/&quot;&gt;&lt;font color=&quot;#FFCC33&quot; size=&quot;4&quot; face=&quot;Arial&quot;  &gt;&lt;strong&gt;dolce and gabbana handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;, we their fans like to imitate them at our local parties, how big or small. But not all of us can afford to buy such expensive brands such as &lt;a href=&quot;http://www.yeahwatch.com/Celine-Bags/&quot;&gt;&lt;font color=&quot;#9900CC&quot; size=&quot;4&quot; face=&quot;cursive&quot;  &gt;&lt;strong&gt;celine handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt;. Well! If it is worth it, is not fashionable to discuss now. As much as we would like to imitate our &lt;a href=&quot;http://www.yeahwatch.com/Balenciaga-Bags/&quot;&gt;&lt;font color=&quot;#999999&quot; size=&quot;4&quot; face=&quot;&#40657;&#20307;&quot;  &gt;&lt;strong&gt;balenciaga replica&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; we can also imitate their products because there are expensive looking exact &lt;a href=&quot;http://www.yeahwatch.com/Coach-Bags/&quot;&gt;&lt;font color=&quot;#999999&quot; size=&quot;4&quot; face=&quot;&#40657;&#20307;&quot;  &gt;&lt;strong&gt;replica coach handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; of your favorite rich and famous brands and that too at really cheap prices. Beautifully monogrammed &lt;a href=&quot;http://www.yeahwatch.com/Juicy-Couture-Bags/&quot;&gt;&lt;font color=&quot;#CC6666&quot; size=&quot;4&quot; face=&quot;Verdana&quot;  &gt;&lt;strong&gt;juicy couture replica handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; of &lt;a href=&quot;http://www.yeahwatch.com/Coach-Bags/&quot;&gt;&lt;font color=&quot;#CCCC33&quot; size=&quot;4&quot; face=&quot;BatangChe&quot;  &gt;&lt;strong&gt;replica coach&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; in the most popular latest trends and designs are available at fashionoriginal.com. Costing you a minute fraction of what the original costs, these &lt;a href=&quot;http://www.yeahwatch.com/Gucci-Bags/&quot;&gt;&lt;font color=&quot;#990099&quot; size=&quot;4&quot; face=&quot;MS UI Gothic&quot;  &gt;&lt;strong&gt;gucci replica handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; can create a stir if matched with the right clothing and occasion. Mens collection of &lt;a href=&quot;http://www.yeahwatch.com/Marc-jacob-Bags/&quot;&gt;&lt;font color=&quot;#FFCC33&quot; size=&quot;4&quot; face=&quot;Arial&quot;  &gt;&lt;strong&gt;marc jacobs bags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; come in brown and black leather in a variety of sizes and shapes. &lt;a href=&quot;http://www.yeahwatch.com/Juicy-Couture-Bags/&quot;&gt;&lt;font color=&quot;#FF33CC&quot; size=&quot;4&quot; face=&quot;MS Sans Serif&quot;  &gt;&lt;strong&gt;juicy couture replica&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; are made on the same size and design specifications of the original. &lt;a href=&quot;http://www.yeahwatch.com/Balenciaga-Bags/&quot;&gt;&lt;font color=&quot;#3366FF&quot; size=&quot;4&quot; face=&quot;Terminal&quot;  &gt;&lt;strong&gt;balenciaga handbags&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; not only are cheap but are stylish fashion statements for any occasion. You never know who is carrying &lt;a href=&quot;http://www.yeahwatch.com/Thomas-Wylde-Bags/&quot;&gt;&lt;font color=&quot;#FF0000&quot; size=&quot;4&quot; face=&quot;&#23435;&#20307;&quot;  &gt;&lt;strong&gt;thomas wylde&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; and who a original.</body>
      <body-html>&lt;div&gt;&lt;p&gt;More over, its &lt;a href=
&quot;http://www.yeahwatch.com/Hermes-Bags/&quot;&gt;&lt;strong&gt;hermes
handbags&lt;/strong&gt;&lt;/a&gt; and &lt;a href=
&quot;http://www.yeahwatch.com/Bally-Bags/&quot;&gt;&lt;strong&gt;bally
bags&lt;/strong&gt;&lt;/a&gt; are so very temporal what is in today wont be
long before its out, giving way to &lt;a href=
&quot;http://www.yeahwatch.com/Marc-jacob-Bags/&quot;&gt;&lt;strong&gt;marc jacobs
replica&lt;/strong&gt;&lt;/a&gt; in. Yet there is no underestimating the power
of the &lt;a href=
&quot;http://www.yeahwatch.com/Mulberry-Bags/&quot;&gt;&lt;strong&gt;mulberry
bags&lt;/strong&gt;&lt;/a&gt; buyer of eyeliner or haute couture dinner wear or
the producer of the &lt;a href=
&quot;http://www.yeahwatch.com/&quot;&gt;&lt;strong&gt;replica handbags&lt;/strong&gt;&lt;/a&gt;
or its exact &lt;a href=&quot;http://www.yeahwatch.com/&quot;&gt;&lt;strong&gt;designer
handbags&lt;/strong&gt;&lt;/a&gt; maker. Everybody who thinks or acts trendy
has got to be in the midst of fashion and fads. There is no denying
that. As much as clothes speak a language the accessories that
accompany your clothing like the bags you use, foot wear,
underwear, keychains, watches, eye wear also can speak loads about
how fashion conscious you are. While men have always been intrigued
and fascinated with the secret contents of a womans &lt;a href=
&quot;http://www.yeahwatch.com/&quot;&gt;&lt;strong&gt;designer replica
handbags&lt;/strong&gt;&lt;/a&gt;, women find it the perfect companion to hold
their cosmetic collections and utilities, while some use it to hide
their dirty little secrets. Dont ask me why &lt;a href=
&quot;http://www.yeahwatch.com/Coach-Bags/&quot;&gt;&lt;strong&gt;coach
replica&lt;/strong&gt;&lt;/a&gt; or &lt;a href=
&quot;http://www.yeahwatch.com/Coach-Bags/&quot;&gt;&lt;strong&gt;coach replica
handbags&lt;/strong&gt;&lt;/a&gt; or &lt;a href=
&quot;http://www.yeahwatch.com/Dooney-Bourke-Bags/&quot;&gt;&lt;strong&gt;dooney and
bourke handbags&lt;/strong&gt;&lt;/a&gt;, in spite of its various forms,
shapes, sizes and purposes has been a fashion statement as much as
its is a womans companion. The womans toiletry &lt;a href=
&quot;http://www.yeahwatch.com/Louis-Vuitton-Bags/&quot;&gt;&lt;strong&gt;louis
vuitton replica&lt;/strong&gt;&lt;/a&gt;, is without doubt, expected to be
trendy, labeled and must cost the moon and two other planets
combined. In todays world, hand bad, shoulder &lt;a href=
&quot;http://www.yeahwatch.com/Burberry-Bags/&quot;&gt;&lt;strong&gt;burberry replica
handbags&lt;/strong&gt;&lt;/a&gt; or clutch &lt;a href=
&quot;http://www.yeahwatch.com/Celine-Bags/&quot;&gt;&lt;strong&gt;celine
bags&lt;/strong&gt;&lt;/a&gt;, &lt;a href=
&quot;http://www.yeahwatch.com/Burberry-Bags/&quot;&gt;&lt;strong&gt;burberry
replica&lt;/strong&gt;&lt;/a&gt; clearly defines what fashion stands for. And
when the best celebrities in the world carry their &lt;a href=
&quot;http://www.yeahwatch.com/Marc-jacob-Bags/&quot;&gt;&lt;strong&gt;marc
jacob&lt;/strong&gt;&lt;/a&gt; to the &lt;a href=
&quot;http://www.yeahwatch.com/Dolce-Gabbana-Bags/&quot;&gt;&lt;strong&gt;dolce and
gabbana handbags&lt;/strong&gt;&lt;/a&gt;, we their fans like to imitate them
at our local parties, how big or small. But not all of us can
afford to buy such expensive brands such as &lt;a href=
&quot;http://www.yeahwatch.com/Celine-Bags/&quot;&gt;&lt;strong&gt;celine
handbags&lt;/strong&gt;&lt;/a&gt;. Well! If it is worth it, is not fashionable
to discuss now. As much as we would like to imitate our &lt;a href=
&quot;http://www.yeahwatch.com/Balenciaga-Bags/&quot;&gt;&lt;strong&gt;balenciaga
replica&lt;/strong&gt;&lt;/a&gt; we can also imitate their products because
there are expensive looking exact &lt;a href=
&quot;http://www.yeahwatch.com/Coach-Bags/&quot;&gt;&lt;strong&gt;replica coach
handbags&lt;/strong&gt;&lt;/a&gt; of your favorite rich and famous brands and
that too at really cheap prices. Beautifully monogrammed &lt;a href=
&quot;http://www.yeahwatch.com/Juicy-Couture-Bags/&quot;&gt;&lt;strong&gt;juicy
couture replica handbags&lt;/strong&gt;&lt;/a&gt; of &lt;a href=
&quot;http://www.yeahwatch.com/Coach-Bags/&quot;&gt;&lt;strong&gt;replica
coach&lt;/strong&gt;&lt;/a&gt; in the most popular latest trends and designs
are available at fashionoriginal.com. Costing you a minute fraction
of what the original costs, these &lt;a href=
&quot;http://www.yeahwatch.com/Gucci-Bags/&quot;&gt;&lt;strong&gt;gucci replica
handbags&lt;/strong&gt;&lt;/a&gt; can create a stir if matched with the right
clothing and occasion. Mens collection of &lt;a href=
&quot;http://www.yeahwatch.com/Marc-jacob-Bags/&quot;&gt;&lt;strong&gt;marc jacobs
bags&lt;/strong&gt;&lt;/a&gt; come in brown and black leather in a variety of
sizes and shapes. &lt;a href=
&quot;http://www.yeahwatch.com/Juicy-Couture-Bags/&quot;&gt;&lt;strong&gt;juicy
couture replica&lt;/strong&gt;&lt;/a&gt; are made on the same size and design
specifications of the original. &lt;a href=
&quot;http://www.yeahwatch.com/Balenciaga-Bags/&quot;&gt;&lt;strong&gt;balenciaga
handbags&lt;/strong&gt;&lt;/a&gt; not only are cheap but are stylish fashion
statements for any occasion. You never know who is carrying
&lt;a href=&quot;http://www.yeahwatch.com/Thomas-Wylde-Bags/&quot;&gt;&lt;strong&gt;thomas
wylde&lt;/strong&gt;&lt;/a&gt; and who a original.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-09-08T05:46:25+01:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2010-09-08T07:13:46+01:00</updated-at>
      <user-id type="integer">114900</user-id>
      <version type="integer">97</version>
      <user-name>replica handbags</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T06:19:31+00:00</created-at>
      <creator-id type="integer">17213</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">785</number>
      <permalink>caching-models-fails-in-development</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>cache patch</tag>
      <title>Caching models fails in development</title>
      <updated-at type="datetime">2011-02-17T06:48:14+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">98</version>
      <user-name>gfh</user-name>
      <creator-name>Morten Christensen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/785</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5729c208919a72afac88944d6538a41694e86206</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-08-10T02:01:16+01:00</created-at>
      <filename>marshal_memory_and_file_store_with_raw_option.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">38170</id>
      <size type="integer">15792</size>
      <uploader-id type="integer">5701</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/38170/marshal_memory_and_file_store_with_raw_option.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>dc6cfdb7f73b6be3d2312f9e370c3673a052c569</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-08-11T23:29:10+01:00</created-at>
      <filename>no_store_in_development.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">38489</id>
      <size type="integer">3163</size>
      <uploader-id type="integer">5701</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/38489/no_store_in_development.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>01bdc32812a29fa9a59ee363a72ec44ad1421835</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-08-14T17:48:53+01:00</created-at>
      <filename>fix_reload_issues_for_id.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">39245</id>
      <size type="integer">1327</size>
      <uploader-id type="integer">28420</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/39245/fix_reload_issues_for_id.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>9d22b72e1f82ed76a090c03706c0fe727331e2d8</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-08-15T17:18:51+01:00</created-at>
      <filename>prevent_class_method_and_variable_nukeing_on_AR_reset_subclasses.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">39464</id>
      <size type="integer">997</size>
      <uploader-id type="integer">28420</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/39464/prevent_class_method_and_variable_nukeing_on_AR_reset_subclasses.diff</url>
    </attachment>
    <attachment-image type="Attachment">
      <code>d00a311c90b200653c5efb5ce1db380487221ef6</code>
      <content-type>image/pjpeg</content-type>
      <created-at type="datetime">2010-08-27T17:32:12+01:00</created-at>
      <filename>8komisarek.JPG</filename>
      <height type="integer">426</height>
      <id type="integer">648482</id>
      <size type="integer">59498</size>
      <uploader-id type="integer">113425</uploader-id>
      <width type="integer">720</width>
      <url>http://rails.lighthouseapp.com/attachments/648482/8komisarek.JPG</url>
    </attachment-image>
    <attachment-image type="Attachment">
      <code>a0ee9f98b67f70fe28fe0abe0a88536ccb05d361</code>
      <content-type>image/pjpeg</content-type>
      <created-at type="datetime">2010-08-27T17:33:35+01:00</created-at>
      <filename>76-subban-b.jpg</filename>
      <height type="integer">482</height>
      <id type="integer">648488</id>
      <size type="integer">76009</size>
      <uploader-id type="integer">113425</uploader-id>
      <width type="integer">670</width>
      <url>http://rails.lighthouseapp.com/attachments/648488/76-subban-b.jpg</url>
    </attachment-image>
  </attachments>
</ticket>
