From b508c95889b995a68356e77ac0c5271231af8a5f Mon Sep 17 00:00:00 2001
From: Yuya.Nishida <yuya@j96.org>
Date: Mon, 17 Aug 2009 18:01:51 +0900
Subject: [PATCH] Unify `migration version' in `migration number' (except CHANGELOG and old release notes)

---
 activerecord/lib/active_record/migration.rb |    4 ++--
 railties/lib/tasks/databases.rake           |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/activerecord/lib/active_record/migration.rb b/activerecord/lib/active_record/migration.rb
index adb3a3f..a71cb47 100644
--- a/activerecord/lib/active_record/migration.rb
+++ b/activerecord/lib/active_record/migration.rb
@@ -136,8 +136,8 @@ module ActiveRecord
   # invoke the db:schema:dump task, which will update your db/schema.rb file
   # to match the structure of your database.
   #
-  # To roll the database back to a previous migration version, use
-  # <tt>rake db:migrate VERSION=X</tt> where <tt>X</tt> is the version to which
+  # To roll the database back to a previous migration number, use
+  # <tt>rake db:migrate VERSION=X</tt> where <tt>X</tt> is the number to which
   # you wish to downgrade. If any of the migrations throw an
   # <tt>ActiveRecord::IrreversibleMigration</tt> exception, that step will fail and you'll
   # have some manual work to do.
diff --git a/railties/lib/tasks/databases.rake b/railties/lib/tasks/databases.rake
index 687bc00..864bf49 100644
--- a/railties/lib/tasks/databases.rake
+++ b/railties/lib/tasks/databases.rake
@@ -152,7 +152,7 @@ namespace :db do
     desc 'Resets your database using your migrations for the current environment'
     task :reset => ["db:drop", "db:create", "db:migrate"]
 
-    desc 'Runs the "up" for a given migration VERSION.'
+    desc 'Runs the "up" for a given migration number (specified by VERSION).'
     task :up => :environment do
       version = ENV["VERSION"] ? ENV["VERSION"].to_i : nil
       raise "VERSION is required" unless version
@@ -160,7 +160,7 @@ namespace :db do
       Rake::Task["db:schema:dump"].invoke if ActiveRecord::Base.schema_format == :ruby
     end
 
-    desc 'Runs the "down" for a given migration VERSION.'
+    desc 'Runs the "down" for a given migration number (specified by VERSION).'
     task :down => :environment do
       version = ENV["VERSION"] ? ENV["VERSION"].to_i : nil
       raise "VERSION is required" unless version
-- 
1.6.3.3

