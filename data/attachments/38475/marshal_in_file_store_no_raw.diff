From 67d07a882fbc152cd4fbed1e1f5b516abc1080a5 Mon Sep 17 00:00:00 2001
From: Ryan Bates <ryan@railscasts.com>
Date: Mon, 11 Aug 2008 13:25:24 -0700
Subject: [PATCH] marshal in FileStore to allow objects besides strings

---
 .../lib/active_support/cache/file_store.rb         |   12 ++++++--
 activesupport/test/caching_test.rb                 |   30 ++++++++++++++++++++
 2 files changed, 39 insertions(+), 3 deletions(-)

diff --git a/activesupport/lib/active_support/cache/file_store.rb b/activesupport/lib/active_support/cache/file_store.rb
index 7b6ca39..34bbd9e 100644
--- a/activesupport/lib/active_support/cache/file_store.rb
+++ b/activesupport/lib/active_support/cache/file_store.rb
@@ -9,13 +9,19 @@ module ActiveSupport
 
       def read(name, options = nil)
         super
-        File.open(real_file_path(name), 'rb') { |f| f.read } rescue nil
+        File.open(real_file_path(name), 'rb') do |f|
+          Marshal.load(f.read)
+        end rescue nil
       end
 
       def write(name, value, options = nil)
         super
-        ensure_cache_path(File.dirname(real_file_path(name)))
-        File.atomic_write(real_file_path(name), cache_path) { |f| f.write(value) }
+        unless value.nil?
+          ensure_cache_path(File.dirname(real_file_path(name)))
+          File.atomic_write(real_file_path(name), cache_path) do |f|
+            f.write(Marshal.dump(value))
+          end
+        end
       rescue => e
         RAILS_DEFAULT_LOGGER.error "Couldn't create cache directory: #{name} (#{e.message})" if RAILS_DEFAULT_LOGGER
       end
diff --git a/activesupport/test/caching_test.rb b/activesupport/test/caching_test.rb
index f3220d2..64d440e 100644
--- a/activesupport/test/caching_test.rb
+++ b/activesupport/test/caching_test.rb
@@ -70,3 +70,33 @@ uses_mocha 'high-level cache store tests' do
     end
   end
 end
+
+uses_mocha 'file based cache store tests' do
+  class FileStoreTest < Test::Unit::TestCase
+    def setup
+      # we don't want to touch the file system at all here
+      @file = StringIO.new
+      File.stubs(:open).yields(@file)
+      File.stubs(:atomic_write).yields(@file)
+      @cache = ActiveSupport::Cache.lookup_store(:file_store, '/dev/null')
+    end
+    
+    def test_should_write_marshalled_data_to_file
+      @cache.write('foo', 'bar')
+      @file.rewind
+      assert_equal Marshal.dump('bar'), @file.read
+    end
+    
+    def test_should_read_marshalled_data_from_file
+      @file.write('bar')
+      @file.rewind
+      Marshal.expects(:load).with('bar')
+      @cache.read('foo')
+    end
+    
+    def test_should_not_marshal_nil
+      Marshal.expects(:dump).never
+      @cache.write('foo', nil)
+    end
+  end
+end
-- 
1.5.6.4

