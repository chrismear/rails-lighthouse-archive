From 584d207aeffa7c1f778ac4086d07eae761631f7d Mon Sep 17 00:00:00 2001
From: Wincent Colaiuta <win@wincent.com>
Date: Wed, 28 May 2008 16:28:30 +0200
Subject: [PATCH] Avoid exceptions in "rake gems" due to uninstalled gems

If we specify a gem dependency which isn't installed we can wind up with
a "nil" specification that later causes us to throw an exception when
running the "rake gems" task. Avoid this by filtering out nil values.

Signed-off-by: Wincent Colaiuta <win@wincent.com>
---
 railties/lib/rails/plugin/locator.rb |    2 +-
 1 files changed, 1 insertions(+), 1 deletions(-)

diff --git a/railties/lib/rails/plugin/locator.rb b/railties/lib/rails/plugin/locator.rb
index f06a51a..372a675 100644
--- a/railties/lib/rails/plugin/locator.rb
+++ b/railties/lib/rails/plugin/locator.rb
@@ -78,7 +78,7 @@ module Rails
     # a <tt>rails/init.rb</tt> file.
     class GemLocator < Locator
       def plugins
-        specs  = initializer.configuration.gems.map(&:specification)
+        specs  = initializer.configuration.gems.map(&:specification).reject { |spec| spec.nil? }
         specs += Gem.loaded_specs.values.select do |spec|
           spec.loaded_from && # prune stubs
             File.exist?(File.join(spec.full_gem_path, "rails", "init.rb"))
-- 
1.5.5.3.dirty

