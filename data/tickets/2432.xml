<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-06T20:45:22+01:00</created-at>
  <creator-id type="integer">53027</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2432</number>
  <permalink>build_association-nullifies-existing-model-object-in-has_one-association</permalink>
  <priority type="integer">1584</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>222 association has_one</tag>
  <title>build_association nullifies existing model object in has_one association</title>
  <updated-at type="datetime">2011-02-02T17:33:01+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">5</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Les Nightingill</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2432</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I have:

class Student &lt; ActiveRecord::Base
  has_one :language_grade
end

class LanguageGrade &lt; ActiveRecord::Base
  belongs_to :student
end

I do:

&gt;&gt; s=Student.create(:name=&gt;&quot;Norm&quot;)
=&gt; #&lt;Student id: 1, name: &quot;Norm&quot;, created_at: &quot;2009-04-06 13:43:09&quot;, updated_at: &quot;2009-04-06 13:43:09&quot;&gt;
&gt;&gt; s.language_grade
=&gt; nil
&gt;&gt; s.create_language_grade(:score=&gt;88)
=&gt; #&lt;LanguageGrade id: 1, student_id: 1, score: 88, created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06 13:43:46&quot;&gt;
&gt;&gt; LanguageGrade.all
=&gt; [#&lt;LanguageGrade id: 1, student_id: 1, score: 88, created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06 13:44:13&quot;&gt;]
&gt;&gt; s.build_language_grade(:score=&gt;44)
=&gt; #&lt;LanguageGrade id: nil, student_id: 1, score: 44, created_at: nil, updated_at: nil&gt;
&gt;&gt; LanguageGrade.all
=&gt; [#&lt;LanguageGrade id: 1, student_id: nil, score: 88, created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06 13:44:13&quot;&gt;]

You can see that simply invoking build_language_grade caused the existing model object in the database to be &quot;nullified&quot;. According to the documentation, build_association should simply create a model instance in memory... the database should be unaffected, and the database object should definitely not be nullified.</original-body>
  <latest-body>I have:

class Student &lt; ActiveRecord::Base
  has_one :language_grade
end

class LanguageGrade &lt; ActiveRecord::Base
  belongs_to :student
end

I do:

&gt;&gt; s=Student.create(:name=&gt;&quot;Norm&quot;)
=&gt; #&lt;Student id: 1, name: &quot;Norm&quot;, created_at: &quot;2009-04-06 13:43:09&quot;, updated_at: &quot;2009-04-06 13:43:09&quot;&gt;
&gt;&gt; s.language_grade
=&gt; nil
&gt;&gt; s.create_language_grade(:score=&gt;88)
=&gt; #&lt;LanguageGrade id: 1, student_id: 1, score: 88, created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06 13:43:46&quot;&gt;
&gt;&gt; LanguageGrade.all
=&gt; [#&lt;LanguageGrade id: 1, student_id: 1, score: 88, created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06 13:44:13&quot;&gt;]
&gt;&gt; s.build_language_grade(:score=&gt;44)
=&gt; #&lt;LanguageGrade id: nil, student_id: 1, score: 44, created_at: nil, updated_at: nil&gt;
&gt;&gt; LanguageGrade.all
=&gt; [#&lt;LanguageGrade id: 1, student_id: nil, score: 88, created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06 13:44:13&quot;&gt;]

You can see that simply invoking build_language_grade caused the existing model object in the database to be &quot;nullified&quot;. According to the documentation, build_association should simply create a model instance in memory... the database should be unaffected, and the database object should definitely not be nullified.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have:&lt;/p&gt;
&lt;p&gt;class Student &amp;lt; ActiveRecord::Base has_one :language_grade
end&lt;/p&gt;
&lt;p&gt;class LanguageGrade &amp;lt; ActiveRecord::Base belongs_to :student
end&lt;/p&gt;
&lt;p&gt;I do:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;s=Student.create(:name=&amp;gt;&quot;Norm&quot;) =&amp;gt; # s.language_grade
=&amp;gt; nil s.create_language_grade(:score=&amp;gt;88) =&amp;gt; #
LanguageGrade.all =&amp;gt; [#] s.build_language_grade(:score=&amp;gt;44)
=&amp;gt; # LanguageGrade.all =&amp;gt; [#]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can see that simply invoking build_language_grade caused the
existing model object in the database to be &quot;nullified&quot;. According
to the documentation, build_association should simply create a
model instance in memory... the database should be unaffected, and
the database object should definitely not be nullified.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have:

class Student &lt; ActiveRecord::Base

  has_one :language_grade

end


class LanguageGrade &lt; ActiveRecord::Base

  belongs_to :student

end

I do:

 &gt;&gt; s=Student.create(:name=&gt;&quot;Norm&quot;)

 =&gt; #\&lt;Student id: 1, name: &quot;Norm&quot;, created_at: &quot;2009-04-06 13:43:09&quot;, updated_at: &quot;2009-04-06 13:43:09&quot;&gt;

 &gt;&gt; s.language_grade

 =&gt; nil

 &gt;&gt; s.create_language_grade(:score=&gt;88)

 =&gt; #\&lt;LanguageGrade id: 1, student_id: 1, score: 88, created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06 13:43:46&quot;&gt;

 &gt;&gt; LanguageGrade.all

 =&gt; [#\&lt;LanguageGrade id: 1, student_id: 1, score: 88, created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06 13:44:13&quot;&gt;]

 &gt;&gt; s.build_language_grade(:score=&gt;44)

 =&gt; #\&lt;LanguageGrade id: nil, student_id: 1, score: 44, created_at: nil, updated_at: nil&gt;
 
 &gt;&gt; LanguageGrade.all

 =&gt; [#\&lt;LanguageGrade id: 1, student_id: nil, score: 88, created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06 13:44:13&quot;&gt;]

You can see that simply invoking build_language_grade caused the existing model object in the database to be &quot;nullified&quot;. According to the documentation, build_association should simply create a model instance in memory... the database should be unaffected, and the database object should definitely not be nullified.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have:&lt;/p&gt;
&lt;p&gt;class Student &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;has_one :language_grade&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class LanguageGrade &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;p&gt;belongs_to :student&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;I do:&lt;/p&gt;
&lt;p&gt;&amp;gt;&amp;gt; s=Student.create(:name=&amp;gt;&quot;Norm&quot;)&lt;/p&gt;
&lt;p&gt;=&amp;gt; #&amp;lt;Student id: 1, name: &quot;Norm&quot;, created_at: &quot;2009-04-06
13:43:09&quot;, updated_at: &quot;2009-04-06 13:43:09&quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;gt;&amp;gt; s.language_grade&lt;/p&gt;
&lt;p&gt;=&amp;gt; nil&lt;/p&gt;
&lt;p&gt;&amp;gt;&amp;gt; s.create_language_grade(:score=&amp;gt;88)&lt;/p&gt;
&lt;p&gt;=&amp;gt; #&amp;lt;LanguageGrade id: 1, student_id: 1, score: 88,
created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06
13:43:46&quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;gt;&amp;gt; LanguageGrade.all&lt;/p&gt;
&lt;p&gt;=&amp;gt; [#&amp;lt;LanguageGrade id: 1, student_id: 1, score: 88,
created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06
13:44:13&quot;&amp;gt;]&lt;/p&gt;
&lt;p&gt;&amp;gt;&amp;gt; s.build_language_grade(:score=&amp;gt;44)&lt;/p&gt;
&lt;p&gt;=&amp;gt; #&amp;lt;LanguageGrade id: nil, student_id: 1, score: 44,
created_at: nil, updated_at: nil&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;gt;&amp;gt; LanguageGrade.all&lt;/p&gt;
&lt;p&gt;=&amp;gt; [#&amp;lt;LanguageGrade id: 1, student_id: nil, score: 88,
created_at: &quot;2009-04-06 13:43:46&quot;, updated_at: &quot;2009-04-06
13:44:13&quot;&amp;gt;]&lt;/p&gt;
&lt;p&gt;You can see that simply invoking build_language_grade caused the
existing model object in the database to be &quot;nullified&quot;. According
to the documentation, build_association should simply create a
model instance in memory... the database should be unaffected, and
the database object should definitely not be nullified.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-06T20:45:23+01:00</created-at>
      <creator-id type="integer">53027</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2432</number>
      <permalink>build_association-nullifies-existing-model-object-in-has_one-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 association has_one</tag>
      <title>build_association nullifies existing model object in has_one association</title>
      <updated-at type="datetime">2009-04-06T20:55:24+01:00</updated-at>
      <user-id type="integer">53027</user-id>
      <version type="integer">1</version>
      <user-name>Les Nightingill</user-name>
      <creator-name>Les Nightingill</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2432</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm also seeing this behaviour. Seems very undesirable, surprised nobody else has commented yet. 

Are other people seeing this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm also seeing this behaviour. Seems very undesirable,
surprised nobody else has commented yet.&lt;/p&gt;
&lt;p&gt;Are other people seeing this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-31T19:15:30+00:00</created-at>
      <creator-id type="integer">53027</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2432</number>
      <permalink>build_association-nullifies-existing-model-object-in-has_one-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 association has_one</tag>
      <title>build_association nullifies existing model object in has_one association</title>
      <updated-at type="datetime">2010-01-31T19:15:32+00:00</updated-at>
      <user-id type="integer">2301</user-id>
      <version type="integer">2</version>
      <user-name>Mark Dodwell</user-name>
      <creator-name>Les Nightingill</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2432</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:45+01:00</created-at>
      <creator-id type="integer">53027</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2432</number>
      <permalink>build_association-nullifies-existing-model-object-in-has_one-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2.2 association has_one</tag>
      <title>build_association nullifies existing model object in has_one association</title>
      <updated-at type="datetime">2010-05-04T18:48:45+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Les Nightingill</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2432</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:39:51+00:00</created-at>
      <creator-id type="integer">53027</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2.2 association has_one
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2432</number>
      <permalink>build_association-nullifies-existing-model-object-in-has_one-association</permalink>
      <priority type="integer">1584</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>222 association has_one</tag>
      <title>build_association nullifies existing model object in has_one association</title>
      <updated-at type="datetime">2011-02-02T17:32:56+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Les Nightingill</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2432</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:39:52+00:00</created-at>
      <creator-id type="integer">53027</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2432</number>
      <permalink>build_association-nullifies-existing-model-object-in-has_one-association</permalink>
      <priority type="integer">1584</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>222 association has_one</tag>
      <title>build_association nullifies existing model object in has_one association</title>
      <updated-at type="datetime">2011-02-02T17:33:01+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Les Nightingill</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2432</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
