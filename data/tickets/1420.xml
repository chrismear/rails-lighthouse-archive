<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-20T02:37:30+00:00</created-at>
  <creator-id type="integer">38259</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1420</number>
  <permalink>problem-with-baserb-and-postgresdb</permalink>
  <priority type="integer">808</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.1.2 activerecord</tag>
  <title>Problem with base.rb and postgresdb</title>
  <updated-at type="datetime">2008-12-14T17:55:08+00:00</updated-at>
  <user-id type="integer">17477</user-id>
  <version type="integer">2</version>
  <user-name>Frederick Cheung</user-name>
  <creator-name>Thierry DELHAISE</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1420</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>A sample test program : main.rb

require 'rubygems'
require 'active_record'

class TransactionMGT &lt; ActiveRecord::Base
  set_table_name('transaction_mgt');
end

ActiveRecord::Base.establish_connection(  :adapter =&gt; 'postgresql',
                                          :host =&gt; '80.13.207.231',
                                          :port =&gt; 44000,
                                          :username =&gt; 'hipaydbuser',
                                          :password =&gt; 'hipaydbuser',
                                          :database =&gt; 'hipay_db',
                                          :schema_search_path =&gt; 'mgt_db'
                                        );


allTransactionMGT = TransactionMGT::find(:all);
allTransactionMGT.each do |aTransaction|
  print &quot; #{aTransaction.id} #{aTransaction.issuer_user_account_id} \n &quot;
end

--------

the real structure of the table :

CREATE TABLE mgt_db.transaction_mgt
(
  id integer NOT NULL, 
  issuer_user_account_id integer NOT NULL,
  recipient_user_account_id integer NOT NULL, 
  fees_id integer NOT NULL,
  card_id integer,
  web_id character varying(23) NOT NULL, 
  libelle_code integer NOT NULL,
  montant numeric(10,2) NOT NULL, 
  fee numeric(10,2),
  devise character(3) NOT NULL,
  type_src integer NOT NULL,
  libelle character varying(255) NOT NULL DEFAULT 'None'::character varying, 
  date_insert timestamp with time zone NOT NULL DEFAULT now(),
  status_code character varying(5) NOT NULL DEFAULT 'NEW'::character varying, 
  max_date_cancel date, 
  amount_refunded numeric(10,2) DEFAULT 0.00, 
  amount_cancelled numeric(10,2) DEFAULT 0.00,
  amount_captured numeric(10,2) DEFAULT 0.00, 
  reject_code integer,
  &quot;type&quot; integer NOT NULL, 
  max_date_refund date,
  tsdate_last_capture integer DEFAULT 0, 
  tsdate_last_cancel integer DEFAULT 0,
  tsdate_last_refund integer DEFAULT 0,
  tsdate_auth integer DEFAULT 0, 
  warning_level integer DEFAULT 0, 
  faf_returns text DEFAULT ''::text, 
  dispatched integer NOT NULL DEFAULT 0,
  mp_acqueror_id integer NOT NULL DEFAULT 0,
  CONSTRAINT transaction_mgt_pkey PRIMARY KEY (id),
  CONSTRAINT transaction_mgt_card_id_fkey FOREIGN KEY (card_id)
      REFERENCES hipay_db.cbs (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_devise_fkey FOREIGN KEY (devise)
      REFERENCES mgt_db.devise (code) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_fees_id_fkey FOREIGN KEY (fees_id)
      REFERENCES mgt_db.transaction_fees (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_issuer_user_account_id_fkey FOREIGN KEY (issuer_user_account_id)
      REFERENCES hipay_db.compte (account_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_libelle_code_fkey FOREIGN KEY (libelle_code)
      REFERENCES mgt_db.libelle_transaction (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_mp_acqueror_id_fkey FOREIGN KEY (mp_acqueror_id)
      REFERENCES mp_db.mp_acqueror (id_acq) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_recipient_user_account_id_fkey FOREIGN KEY (recipient_user_account_id)
      REFERENCES hipay_db.compte (account_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_reject_code_fkey FOREIGN KEY (reject_code)
      REFERENCES mgt_db.reject_code (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_status_code_fkey FOREIGN KEY (status_code)
      REFERENCES mgt_db.transaction_status_code (code) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_type_fkey FOREIGN KEY (&quot;type&quot;)
      REFERENCES mgt_db.type_transaction (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_type_src_fkey FOREIGN KEY (type_src)
      REFERENCES mgt_db.type_src_dst (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (OIDS=FALSE);
ALTER TABLE mgt_db.transaction_mgt OWNER TO hipaydbuser;
GRANT ALL ON TABLE mgt_db.transaction_mgt TO hipaydbuser;

-------------

I don' think constraints are responsible of the problem. So it should be ok to recreate the table without constraints.

And the error is :

/usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1912:in `compute_type': compile error (SyntaxError)
/usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1912: syntax error, unexpected tINTEGER
Object::2
         ^
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1432:in `instantiate'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `find_by_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `collect!'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `find_by_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1345:in `find_every'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:540:in `find'
        from /home/thierry/NetBeansProjects/BOAutodisable/lib/main.rb:21

---- 
my gem env :
RubyGems Environment:
  - RUBYGEMS VERSION: 1.3.1
  - RUBY VERSION: 1.8.7 (2008-08-11 patchlevel 72) [i486-linux]
  - INSTALLATION DIRECTORY: /usr/lib/ruby/gems/1.8
  - RUBY EXECUTABLE: /usr/bin/ruby1.8
  - EXECUTABLE DIRECTORY: /usr/bin
  - RUBYGEMS PLATFORMS:
    - ruby
    - x86-linux
  - GEM PATHS:
     - /usr/lib/ruby/gems/1.8
     - /home/thierry/.gem/ruby/1.8
  - GEM CONFIGURATION:
     - :update_sources =&gt; true
     - :verbose =&gt; true
     - :benchmark =&gt; false
     - :backtrace =&gt; false
     - :bulk_threshold =&gt; 1000
  - REMOTE SOURCES:
     - http://gems.rubyforge.org/

----
Gem packages :

*** LOCAL GEMS ***

actionmailer (2.1.2, 2.1.1)
actionpack (2.1.2, 2.1.1)
activerecord (2.1.2, 2.1.1)
activeresource (2.1.2, 2.1.1)
activesupport (2.1.2, 2.1.1)
linecache (0.43)
rails (2.1.2, 2.1.1)
rake (0.8.3)
ruby-debug-base (0.10.3, 0.10.2)
ruby-debug-ide (0.4.1, 0.3.1)
rubygems-update (1.3.1, 1.3.0)

--- Postgres 
 postgresql-8.3 (8.3.4-2.2) on Ubuntu 8.10</original-body>
  <latest-body>A sample test program : main.rb

require 'rubygems'
require 'active_record'

class TransactionMGT &lt; ActiveRecord::Base
  set_table_name('transaction_mgt');
end

ActiveRecord::Base.establish_connection(  :adapter =&gt; 'postgresql',
                                          :host =&gt; '80.13.207.231',
                                          :port =&gt; 44000,
                                          :username =&gt; 'hipaydbuser',
                                          :password =&gt; 'hipaydbuser',
                                          :database =&gt; 'hipay_db',
                                          :schema_search_path =&gt; 'mgt_db'
                                        );


allTransactionMGT = TransactionMGT::find(:all);
allTransactionMGT.each do |aTransaction|
  print &quot; #{aTransaction.id} #{aTransaction.issuer_user_account_id} \n &quot;
end

--------

the real structure of the table :

CREATE TABLE mgt_db.transaction_mgt
(
  id integer NOT NULL, 
  issuer_user_account_id integer NOT NULL,
  recipient_user_account_id integer NOT NULL, 
  fees_id integer NOT NULL,
  card_id integer,
  web_id character varying(23) NOT NULL, 
  libelle_code integer NOT NULL,
  montant numeric(10,2) NOT NULL, 
  fee numeric(10,2),
  devise character(3) NOT NULL,
  type_src integer NOT NULL,
  libelle character varying(255) NOT NULL DEFAULT 'None'::character varying, 
  date_insert timestamp with time zone NOT NULL DEFAULT now(),
  status_code character varying(5) NOT NULL DEFAULT 'NEW'::character varying, 
  max_date_cancel date, 
  amount_refunded numeric(10,2) DEFAULT 0.00, 
  amount_cancelled numeric(10,2) DEFAULT 0.00,
  amount_captured numeric(10,2) DEFAULT 0.00, 
  reject_code integer,
  &quot;type&quot; integer NOT NULL, 
  max_date_refund date,
  tsdate_last_capture integer DEFAULT 0, 
  tsdate_last_cancel integer DEFAULT 0,
  tsdate_last_refund integer DEFAULT 0,
  tsdate_auth integer DEFAULT 0, 
  warning_level integer DEFAULT 0, 
  faf_returns text DEFAULT ''::text, 
  dispatched integer NOT NULL DEFAULT 0,
  mp_acqueror_id integer NOT NULL DEFAULT 0,
  CONSTRAINT transaction_mgt_pkey PRIMARY KEY (id),
  CONSTRAINT transaction_mgt_card_id_fkey FOREIGN KEY (card_id)
      REFERENCES hipay_db.cbs (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_devise_fkey FOREIGN KEY (devise)
      REFERENCES mgt_db.devise (code) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_fees_id_fkey FOREIGN KEY (fees_id)
      REFERENCES mgt_db.transaction_fees (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_issuer_user_account_id_fkey FOREIGN KEY (issuer_user_account_id)
      REFERENCES hipay_db.compte (account_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_libelle_code_fkey FOREIGN KEY (libelle_code)
      REFERENCES mgt_db.libelle_transaction (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_mp_acqueror_id_fkey FOREIGN KEY (mp_acqueror_id)
      REFERENCES mp_db.mp_acqueror (id_acq) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_recipient_user_account_id_fkey FOREIGN KEY (recipient_user_account_id)
      REFERENCES hipay_db.compte (account_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_reject_code_fkey FOREIGN KEY (reject_code)
      REFERENCES mgt_db.reject_code (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_status_code_fkey FOREIGN KEY (status_code)
      REFERENCES mgt_db.transaction_status_code (code) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_type_fkey FOREIGN KEY (&quot;type&quot;)
      REFERENCES mgt_db.type_transaction (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_type_src_fkey FOREIGN KEY (type_src)
      REFERENCES mgt_db.type_src_dst (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (OIDS=FALSE);
ALTER TABLE mgt_db.transaction_mgt OWNER TO hipaydbuser;
GRANT ALL ON TABLE mgt_db.transaction_mgt TO hipaydbuser;

-------------

I don' think constraints are responsible of the problem. So it should be ok to recreate the table without constraints.

And the error is :

/usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1912:in `compute_type': compile error (SyntaxError)
/usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1912: syntax error, unexpected tINTEGER
Object::2
         ^
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1432:in `instantiate'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `find_by_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `collect!'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `find_by_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1345:in `find_every'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:540:in `find'
        from /home/thierry/NetBeansProjects/BOAutodisable/lib/main.rb:21

---- 
my gem env :
RubyGems Environment:
  - RUBYGEMS VERSION: 1.3.1
  - RUBY VERSION: 1.8.7 (2008-08-11 patchlevel 72) [i486-linux]
  - INSTALLATION DIRECTORY: /usr/lib/ruby/gems/1.8
  - RUBY EXECUTABLE: /usr/bin/ruby1.8
  - EXECUTABLE DIRECTORY: /usr/bin
  - RUBYGEMS PLATFORMS:
    - ruby
    - x86-linux
  - GEM PATHS:
     - /usr/lib/ruby/gems/1.8
     - /home/thierry/.gem/ruby/1.8
  - GEM CONFIGURATION:
     - :update_sources =&gt; true
     - :verbose =&gt; true
     - :benchmark =&gt; false
     - :backtrace =&gt; false
     - :bulk_threshold =&gt; 1000
  - REMOTE SOURCES:
     - http://gems.rubyforge.org/

----
Gem packages :

*** LOCAL GEMS ***

actionmailer (2.1.2, 2.1.1)
actionpack (2.1.2, 2.1.1)
activerecord (2.1.2, 2.1.1)
activeresource (2.1.2, 2.1.1)
activesupport (2.1.2, 2.1.1)
linecache (0.43)
rails (2.1.2, 2.1.1)
rake (0.8.3)
ruby-debug-base (0.10.3, 0.10.2)
ruby-debug-ide (0.4.1, 0.3.1)
rubygems-update (1.3.1, 1.3.0)

--- Postgres 
 postgresql-8.3 (8.3.4-2.2) on Ubuntu 8.10</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;A sample test program : main.rb&lt;/p&gt;
&lt;p&gt;require 'rubygems' require 'active_record'&lt;/p&gt;
&lt;p&gt;class TransactionMGT &amp;lt; ActiveRecord::Base
set_table_name('transaction_mgt'); end&lt;/p&gt;
&lt;p&gt;ActiveRecord::Base.establish_connection( :adapter =&amp;gt;
'postgresql',&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;                                      :host =&amp;gt; '80.13.207.231',
                                      :port =&amp;gt; 44000,
                                      :username =&amp;gt; 'hipaydbuser',
                                      :password =&amp;gt; 'hipaydbuser',
                                      :database =&amp;gt; 'hipay_db',
                                      :schema_search_path =&amp;gt; 'mgt_db'
                                    );
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;allTransactionMGT = TransactionMGT::find(:all);
allTransactionMGT.each do |aTransaction| print &quot; #{aTransaction.id}
#{aTransaction.issuer_user_account_id} \n &quot; end&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;the real structure of the table :&lt;/p&gt;
&lt;p&gt;CREATE TABLE mgt_db.transaction_mgt ( id integer NOT NULL,
issuer_user_account_id integer NOT NULL, recipient_user_account_id
integer NOT NULL, fees_id integer NOT NULL, card_id integer, web_id
character varying(23) NOT NULL, libelle_code integer NOT NULL,
montant numeric(10,2) NOT NULL, fee numeric(10,2), devise
character(3) NOT NULL, type_src integer NOT NULL, libelle character
varying(255) NOT NULL DEFAULT 'None'::character varying,
date_insert timestamp with time zone NOT NULL DEFAULT now(),
status_code character varying(5) NOT NULL DEFAULT 'NEW'::character
varying, max_date_cancel date, amount_refunded numeric(10,2)
DEFAULT 0.00, amount_cancelled numeric(10,2) DEFAULT 0.00,
amount_captured numeric(10,2) DEFAULT 0.00, reject_code integer,
&quot;type&quot; integer NOT NULL, max_date_refund date, tsdate_last_capture
integer DEFAULT 0, tsdate_last_cancel integer DEFAULT 0,
tsdate_last_refund integer DEFAULT 0, tsdate_auth integer DEFAULT
0, warning_level integer DEFAULT 0, faf_returns text DEFAULT
''::text, dispatched integer NOT NULL DEFAULT 0, mp_acqueror_id
integer NOT NULL DEFAULT 0, CONSTRAINT transaction_mgt_pkey PRIMARY
KEY (id), CONSTRAINT transaction_mgt_card_id_fkey FOREIGN KEY
(card_id)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES hipay_db.cbs (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_devise_fkey FOREIGN KEY (devise)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.devise (code) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_fees_id_fkey FOREIGN KEY
(fees_id)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.transaction_fees (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_issuer_user_account_id_fkey FOREIGN
KEY (issuer_user_account_id)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES hipay_db.compte (account_id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_libelle_code_fkey FOREIGN KEY
(libelle_code)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.libelle_transaction (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_mp_acqueror_id_fkey FOREIGN KEY
(mp_acqueror_id)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mp_db.mp_acqueror (id_acq) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_recipient_user_account_id_fkey
FOREIGN KEY (recipient_user_account_id)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES hipay_db.compte (account_id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_reject_code_fkey FOREIGN KEY
(reject_code)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.reject_code (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_status_code_fkey FOREIGN KEY
(status_code)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.transaction_status_code (code) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_type_fkey FOREIGN KEY (&quot;type&quot;)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.type_transaction (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_type_src_fkey FOREIGN KEY
(type_src)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.type_src_dst (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;) WITH (OIDS=FALSE); ALTER TABLE mgt_db.transaction_mgt OWNER TO
hipaydbuser; GRANT ALL ON TABLE mgt_db.transaction_mgt TO
hipaydbuser;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I don' think constraints are responsible of the problem. So it
should be ok to recreate the table without constraints.&lt;/p&gt;
&lt;p&gt;And the error is :&lt;/p&gt;
&lt;p&gt;
/usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1912:in
&lt;code&gt;compute_type': compile error (SyntaxError)
/usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1912:
syntax error, unexpected tINTEGER Object::2&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;     ^
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1432:in `instantiate'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `find_by_sql'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `collect!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `find_by_sql'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1345:in `find_every'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:540:in `find'
    from /home/thierry/NetBeansProjects/BOAutodisable/lib/main.rb:21
&lt;/code&gt;
&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;my gem env : RubyGems Environment: - RUBYGEMS VERSION: 1.3.1 -
RUBY VERSION: 1.8.7 (2008-08-11 patchlevel 72) [i486-linux] -
INSTALLATION DIRECTORY: /usr/lib/ruby/gems/1.8 - RUBY EXECUTABLE:
/usr/bin/ruby1.8 - EXECUTABLE DIRECTORY: /usr/bin - RUBYGEMS
PLATFORMS:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;- ruby
- x86-linux
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;GEM PATHS:
&lt;ul&gt;
&lt;li&gt;/usr/lib/ruby/gems/1.8&lt;/li&gt;
&lt;li&gt;/home/thierry/.gem/ruby/1.8&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GEM CONFIGURATION:
&lt;ul&gt;
&lt;li&gt;:update_sources =&amp;gt; true&lt;/li&gt;
&lt;li&gt;:verbose =&amp;gt; true&lt;/li&gt;
&lt;li&gt;:benchmark =&amp;gt; false&lt;/li&gt;
&lt;li&gt;:backtrace =&amp;gt; false&lt;/li&gt;
&lt;li&gt;:bulk_threshold =&amp;gt; 1000&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;REMOTE SOURCES:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gems.rubyforge.org/&quot;&gt;http://gems.rubyforge.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Gem packages :&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;LOCAL GEMS&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;actionmailer (2.1.2, 2.1.1) actionpack (2.1.2, 2.1.1)
activerecord (2.1.2, 2.1.1) activeresource (2.1.2, 2.1.1)
activesupport (2.1.2, 2.1.1) linecache (0.43) rails (2.1.2, 2.1.1)
rake (0.8.3) ruby-debug-base (0.10.3, 0.10.2) ruby-debug-ide
(0.4.1, 0.3.1) rubygems-update (1.3.1, 1.3.0)&lt;/p&gt;
&lt;p&gt;--- Postgres postgresql-8.3 (8.3.4-2.2) on Ubuntu 8.10&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>A sample test program : main.rb

require 'rubygems'
require 'active_record'

class TransactionMGT &lt; ActiveRecord::Base
  set_table_name('transaction_mgt');
end

ActiveRecord::Base.establish_connection(  :adapter =&gt; 'postgresql',
                                          :host =&gt; '80.13.207.231',
                                          :port =&gt; 44000,
                                          :username =&gt; 'hipaydbuser',
                                          :password =&gt; 'hipaydbuser',
                                          :database =&gt; 'hipay_db',
                                          :schema_search_path =&gt; 'mgt_db'
                                        );


allTransactionMGT = TransactionMGT::find(:all);
allTransactionMGT.each do |aTransaction|
  print &quot; #{aTransaction.id} #{aTransaction.issuer_user_account_id} \n &quot;
end

--------

the real structure of the table :

CREATE TABLE mgt_db.transaction_mgt
(
  id integer NOT NULL, 
  issuer_user_account_id integer NOT NULL,
  recipient_user_account_id integer NOT NULL, 
  fees_id integer NOT NULL,
  card_id integer,
  web_id character varying(23) NOT NULL, 
  libelle_code integer NOT NULL,
  montant numeric(10,2) NOT NULL, 
  fee numeric(10,2),
  devise character(3) NOT NULL,
  type_src integer NOT NULL,
  libelle character varying(255) NOT NULL DEFAULT 'None'::character varying, 
  date_insert timestamp with time zone NOT NULL DEFAULT now(),
  status_code character varying(5) NOT NULL DEFAULT 'NEW'::character varying, 
  max_date_cancel date, 
  amount_refunded numeric(10,2) DEFAULT 0.00, 
  amount_cancelled numeric(10,2) DEFAULT 0.00,
  amount_captured numeric(10,2) DEFAULT 0.00, 
  reject_code integer,
  &quot;type&quot; integer NOT NULL, 
  max_date_refund date,
  tsdate_last_capture integer DEFAULT 0, 
  tsdate_last_cancel integer DEFAULT 0,
  tsdate_last_refund integer DEFAULT 0,
  tsdate_auth integer DEFAULT 0, 
  warning_level integer DEFAULT 0, 
  faf_returns text DEFAULT ''::text, 
  dispatched integer NOT NULL DEFAULT 0,
  mp_acqueror_id integer NOT NULL DEFAULT 0,
  CONSTRAINT transaction_mgt_pkey PRIMARY KEY (id),
  CONSTRAINT transaction_mgt_card_id_fkey FOREIGN KEY (card_id)
      REFERENCES hipay_db.cbs (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_devise_fkey FOREIGN KEY (devise)
      REFERENCES mgt_db.devise (code) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_fees_id_fkey FOREIGN KEY (fees_id)
      REFERENCES mgt_db.transaction_fees (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_issuer_user_account_id_fkey FOREIGN KEY (issuer_user_account_id)
      REFERENCES hipay_db.compte (account_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_libelle_code_fkey FOREIGN KEY (libelle_code)
      REFERENCES mgt_db.libelle_transaction (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_mp_acqueror_id_fkey FOREIGN KEY (mp_acqueror_id)
      REFERENCES mp_db.mp_acqueror (id_acq) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_recipient_user_account_id_fkey FOREIGN KEY (recipient_user_account_id)
      REFERENCES hipay_db.compte (account_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_reject_code_fkey FOREIGN KEY (reject_code)
      REFERENCES mgt_db.reject_code (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_status_code_fkey FOREIGN KEY (status_code)
      REFERENCES mgt_db.transaction_status_code (code) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_type_fkey FOREIGN KEY (&quot;type&quot;)
      REFERENCES mgt_db.type_transaction (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT transaction_mgt_type_src_fkey FOREIGN KEY (type_src)
      REFERENCES mgt_db.type_src_dst (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (OIDS=FALSE);
ALTER TABLE mgt_db.transaction_mgt OWNER TO hipaydbuser;
GRANT ALL ON TABLE mgt_db.transaction_mgt TO hipaydbuser;

-------------

I don' think constraints are responsible of the problem. So it should be ok to recreate the table without constraints.

And the error is :

/usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1912:in `compute_type': compile error (SyntaxError)
/usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1912: syntax error, unexpected tINTEGER
Object::2
         ^
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1432:in `instantiate'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `find_by_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `collect!'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `find_by_sql'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1345:in `find_every'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:540:in `find'
        from /home/thierry/NetBeansProjects/BOAutodisable/lib/main.rb:21

---- 
my gem env :
RubyGems Environment:
  - RUBYGEMS VERSION: 1.3.1
  - RUBY VERSION: 1.8.7 (2008-08-11 patchlevel 72) [i486-linux]
  - INSTALLATION DIRECTORY: /usr/lib/ruby/gems/1.8
  - RUBY EXECUTABLE: /usr/bin/ruby1.8
  - EXECUTABLE DIRECTORY: /usr/bin
  - RUBYGEMS PLATFORMS:
    - ruby
    - x86-linux
  - GEM PATHS:
     - /usr/lib/ruby/gems/1.8
     - /home/thierry/.gem/ruby/1.8
  - GEM CONFIGURATION:
     - :update_sources =&gt; true
     - :verbose =&gt; true
     - :benchmark =&gt; false
     - :backtrace =&gt; false
     - :bulk_threshold =&gt; 1000
  - REMOTE SOURCES:
     - http://gems.rubyforge.org/

----
Gem packages :

*** LOCAL GEMS ***

actionmailer (2.1.2, 2.1.1)
actionpack (2.1.2, 2.1.1)
activerecord (2.1.2, 2.1.1)
activeresource (2.1.2, 2.1.1)
activesupport (2.1.2, 2.1.1)
linecache (0.43)
rails (2.1.2, 2.1.1)
rake (0.8.3)
ruby-debug-base (0.10.3, 0.10.2)
ruby-debug-ide (0.4.1, 0.3.1)
rubygems-update (1.3.1, 1.3.0)

--- Postgres 
 postgresql-8.3 (8.3.4-2.2) on Ubuntu 8.10</body>
      <body-html>&lt;div&gt;&lt;p&gt;A sample test program : main.rb&lt;/p&gt;
&lt;p&gt;require 'rubygems' require 'active_record'&lt;/p&gt;
&lt;p&gt;class TransactionMGT &amp;lt; ActiveRecord::Base
set_table_name('transaction_mgt'); end&lt;/p&gt;
&lt;p&gt;ActiveRecord::Base.establish_connection( :adapter =&amp;gt;
'postgresql',&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;                                      :host =&amp;gt; '80.13.207.231',
                                      :port =&amp;gt; 44000,
                                      :username =&amp;gt; 'hipaydbuser',
                                      :password =&amp;gt; 'hipaydbuser',
                                      :database =&amp;gt; 'hipay_db',
                                      :schema_search_path =&amp;gt; 'mgt_db'
                                    );
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;allTransactionMGT = TransactionMGT::find(:all);
allTransactionMGT.each do |aTransaction| print &quot; #{aTransaction.id}
#{aTransaction.issuer_user_account_id} \n &quot; end&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;the real structure of the table :&lt;/p&gt;
&lt;p&gt;CREATE TABLE mgt_db.transaction_mgt ( id integer NOT NULL,
issuer_user_account_id integer NOT NULL, recipient_user_account_id
integer NOT NULL, fees_id integer NOT NULL, card_id integer, web_id
character varying(23) NOT NULL, libelle_code integer NOT NULL,
montant numeric(10,2) NOT NULL, fee numeric(10,2), devise
character(3) NOT NULL, type_src integer NOT NULL, libelle character
varying(255) NOT NULL DEFAULT 'None'::character varying,
date_insert timestamp with time zone NOT NULL DEFAULT now(),
status_code character varying(5) NOT NULL DEFAULT 'NEW'::character
varying, max_date_cancel date, amount_refunded numeric(10,2)
DEFAULT 0.00, amount_cancelled numeric(10,2) DEFAULT 0.00,
amount_captured numeric(10,2) DEFAULT 0.00, reject_code integer,
&quot;type&quot; integer NOT NULL, max_date_refund date, tsdate_last_capture
integer DEFAULT 0, tsdate_last_cancel integer DEFAULT 0,
tsdate_last_refund integer DEFAULT 0, tsdate_auth integer DEFAULT
0, warning_level integer DEFAULT 0, faf_returns text DEFAULT
''::text, dispatched integer NOT NULL DEFAULT 0, mp_acqueror_id
integer NOT NULL DEFAULT 0, CONSTRAINT transaction_mgt_pkey PRIMARY
KEY (id), CONSTRAINT transaction_mgt_card_id_fkey FOREIGN KEY
(card_id)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES hipay_db.cbs (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_devise_fkey FOREIGN KEY (devise)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.devise (code) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_fees_id_fkey FOREIGN KEY
(fees_id)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.transaction_fees (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_issuer_user_account_id_fkey FOREIGN
KEY (issuer_user_account_id)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES hipay_db.compte (account_id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_libelle_code_fkey FOREIGN KEY
(libelle_code)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.libelle_transaction (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_mp_acqueror_id_fkey FOREIGN KEY
(mp_acqueror_id)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mp_db.mp_acqueror (id_acq) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_recipient_user_account_id_fkey
FOREIGN KEY (recipient_user_account_id)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES hipay_db.compte (account_id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_reject_code_fkey FOREIGN KEY
(reject_code)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.reject_code (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_status_code_fkey FOREIGN KEY
(status_code)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.transaction_status_code (code) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_type_fkey FOREIGN KEY (&quot;type&quot;)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.type_transaction (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION,
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CONSTRAINT transaction_mgt_type_src_fkey FOREIGN KEY
(type_src)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  REFERENCES mgt_db.type_src_dst (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;) WITH (OIDS=FALSE); ALTER TABLE mgt_db.transaction_mgt OWNER TO
hipaydbuser; GRANT ALL ON TABLE mgt_db.transaction_mgt TO
hipaydbuser;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I don' think constraints are responsible of the problem. So it
should be ok to recreate the table without constraints.&lt;/p&gt;
&lt;p&gt;And the error is :&lt;/p&gt;
&lt;p&gt;
/usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1912:in
&lt;code&gt;compute_type': compile error (SyntaxError)
/usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1912:
syntax error, unexpected tINTEGER Object::2&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;     ^
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1432:in `instantiate'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `find_by_sql'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `collect!'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:586:in `find_by_sql'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:1345:in `find_every'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-2.1.2/lib/active_record/base.rb:540:in `find'
    from /home/thierry/NetBeansProjects/BOAutodisable/lib/main.rb:21
&lt;/code&gt;
&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;my gem env : RubyGems Environment: - RUBYGEMS VERSION: 1.3.1 -
RUBY VERSION: 1.8.7 (2008-08-11 patchlevel 72) [i486-linux] -
INSTALLATION DIRECTORY: /usr/lib/ruby/gems/1.8 - RUBY EXECUTABLE:
/usr/bin/ruby1.8 - EXECUTABLE DIRECTORY: /usr/bin - RUBYGEMS
PLATFORMS:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;- ruby
- x86-linux
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;GEM PATHS:
&lt;ul&gt;
&lt;li&gt;/usr/lib/ruby/gems/1.8&lt;/li&gt;
&lt;li&gt;/home/thierry/.gem/ruby/1.8&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GEM CONFIGURATION:
&lt;ul&gt;
&lt;li&gt;:update_sources =&amp;gt; true&lt;/li&gt;
&lt;li&gt;:verbose =&amp;gt; true&lt;/li&gt;
&lt;li&gt;:benchmark =&amp;gt; false&lt;/li&gt;
&lt;li&gt;:backtrace =&amp;gt; false&lt;/li&gt;
&lt;li&gt;:bulk_threshold =&amp;gt; 1000&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;REMOTE SOURCES:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gems.rubyforge.org/&quot;&gt;http://gems.rubyforge.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Gem packages :&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;LOCAL GEMS&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;actionmailer (2.1.2, 2.1.1) actionpack (2.1.2, 2.1.1)
activerecord (2.1.2, 2.1.1) activeresource (2.1.2, 2.1.1)
activesupport (2.1.2, 2.1.1) linecache (0.43) rails (2.1.2, 2.1.1)
rake (0.8.3) ruby-debug-base (0.10.3, 0.10.2) ruby-debug-ide
(0.4.1, 0.3.1) rubygems-update (1.3.1, 1.3.0)&lt;/p&gt;
&lt;p&gt;--- Postgres postgresql-8.3 (8.3.4-2.2) on Ubuntu 8.10&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-20T02:37:30+00:00</created-at>
      <creator-id type="integer">38259</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1420</number>
      <permalink>problem-with-baserb-and-postgresdb</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1.2 activerecord</tag>
      <title>Problem with base.rb and postgresdb</title>
      <updated-at type="datetime">2008-11-20T02:37:35+00:00</updated-at>
      <user-id type="integer">38259</user-id>
      <version type="integer">1</version>
      <user-name>Thierry DELHAISE</user-name>
      <creator-name>Thierry DELHAISE</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1420</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You table has a column called type, which ActiveRecord assumes is for single type inheritance (ie contains the name of the class to instantiate).

Either rename that column or use set\_inheritance\_column to tell ActiveRecord not to use the type column for that purpose for this specific class.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You table has a column called type, which ActiveRecord assumes
is for single type inheritance (ie contains the name of the class
to instantiate).&lt;/p&gt;
&lt;p&gt;Either rename that column or use set_inheritance_column to tell
ActiveRecord not to use the type column for that purpose for this
specific class.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-14T17:55:03+00:00</created-at>
      <creator-id type="integer">38259</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1420</number>
      <permalink>problem-with-baserb-and-postgresdb</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.1.2 activerecord</tag>
      <title>Problem with base.rb and postgresdb</title>
      <updated-at type="datetime">2008-12-14T17:55:08+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Thierry DELHAISE</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1420</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
