<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-27T15:36:53+00:00</created-at>
  <creator-id type="integer">5026</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2361</number>
  <permalink>through-associations-with-conditions-fails</permalink>
  <priority type="integer">1522</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.3.2 :include belongs_to has_many</tag>
  <title>Through Associations with Conditions Fails</title>
  <updated-at type="datetime">2010-01-20T11:03:41+00:00</updated-at>
  <user-id type="integer">65556</user-id>
  <version type="integer">4</version>
  <user-name>Rizwan Reza</user-name>
  <creator-name>James Herdman</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2361</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Suppose you have a class as such:

@@@ ruby
class Earning
  belongs_to :earning_category,
    :conditions =&gt; 'department_code = \'#{department_code_for_instance}\''
end
@@@

And another like this:

@@@ ruby
class Employee
  has_many :earnings, :include =&gt; :earning_category
end
@@@

You will have an error like the following when attempting to access the 'has_many :earnings' association on an Employee instance:

@@@
NoMethodError: undefined method `department_code' for #&lt;ActiveRecord::Associations::ClassMethods::JoinDependency::JoinAssociation:0x685c5cc&gt;
        from /409a/vendor/rails/activerecord/lib/active_record/associations.rb:2143:in `interpolate_sql'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2104:in `association_join'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2103:in `each'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2103:in `association_join'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `construct_finder_sql_with_included_associations'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `collect'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `construct_finder_sql_with_included_associations'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1558:in `select_all_rows'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1335:in `find_with_associations'
from C:/projects/409a/vendor/rails/activerecord/lib/active_record/base.rb:1551:in
`find_every'
        from /vendor/rails/activerecord/lib/active_record/base.rb:615:in `find'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:60:in `find'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:395:in `find_target'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:349:in `load_target'
        from /vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:139:in `inspect'
@@@

It seems to me that the interpolation of the belongs_to conditions is happening in the wrong context.</original-body>
  <latest-body>Suppose you have a class as such:

@@@ ruby
class Earning
  belongs_to :earning_category,
    :conditions =&gt; 'department_code = \'#{department_code_for_instance}\''
end
@@@

And another like this:

@@@ ruby
class Employee
  has_many :earnings, :include =&gt; :earning_category
end
@@@

You will have an error like the following when attempting to access the 'has_many :earnings' association on an Employee instance:

@@@
NoMethodError: undefined method `department_code' for #&lt;ActiveRecord::Associations::ClassMethods::JoinDependency::JoinAssociation:0x685c5cc&gt;
        from /409a/vendor/rails/activerecord/lib/active_record/associations.rb:2143:in `interpolate_sql'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2104:in `association_join'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2103:in `each'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2103:in `association_join'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `construct_finder_sql_with_included_associations'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `collect'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `construct_finder_sql_with_included_associations'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1558:in `select_all_rows'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1335:in `find_with_associations'
from C:/projects/409a/vendor/rails/activerecord/lib/active_record/base.rb:1551:in
`find_every'
        from /vendor/rails/activerecord/lib/active_record/base.rb:615:in `find'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:60:in `find'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:395:in `find_target'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:349:in `load_target'
        from /vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:139:in `inspect'
@@@

It seems to me that the interpolation of the belongs_to conditions is happening in the wrong context.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Suppose you have a class as such:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Earning
  belongs_to :earning_category,
    :conditions =&amp;gt; 'department_code = \'#{department_code_for_instance}\''
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And another like this:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Employee
  has_many :earnings, :include =&amp;gt; :earning_category
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will have an error like the following when attempting to
access the 'has_many :earnings' association on an Employee
instance:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
NoMethodError: undefined method `department_code' for #&amp;lt;ActiveRecord::Associations::ClassMethods::JoinDependency::JoinAssociation:0x685c5cc&amp;gt;
        from /409a/vendor/rails/activerecord/lib/active_record/associations.rb:2143:in `interpolate_sql'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2104:in `association_join'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2103:in `each'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2103:in `association_join'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `construct_finder_sql_with_included_associations'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `collect'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `construct_finder_sql_with_included_associations'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1558:in `select_all_rows'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1335:in `find_with_associations'
from C:/projects/409a/vendor/rails/activerecord/lib/active_record/base.rb:1551:in
`find_every'
        from /vendor/rails/activerecord/lib/active_record/base.rb:615:in `find'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:60:in `find'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:395:in `find_target'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:349:in `load_target'
        from /vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:139:in `inspect'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It seems to me that the interpolation of the belongs_to
conditions is happening in the wrong context.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Suppose you have a class as such:

@@@ ruby
class Earning
  belongs_to :earning_category,
    :conditions =&gt; 'department_code = \'#{department_code_for_instance}\''
end
@@@

And another like this:

@@@ ruby
class Employee
  has_many :earnings, :include =&gt; :earning_category
end
@@@

You will have an error like the following when attempting to access the 'has_many :earnings' association on an Employee instance:

@@@
NoMethodError: undefined method `department_code' for #&lt;ActiveRecord::Associations::ClassMethods::JoinDependency::JoinAssociation:0x685c5cc&gt;
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2143:in `interpolate_sql'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2104:in `association_join'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2103:in `each'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2103:in `association_join'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `construct_finder_sql_with_included_associations'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `collect'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `construct_finder_sql_with_included_associations'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1558:in `select_all_rows'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1335:in `find_with_associations'
from C:/projects/409a/vendor/rails/activerecord/lib/active_record/base.rb:1551:in
`find_every'
        from /vendor/rails/activerecord/lib/active_record/base.rb:615:in `find'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:60:in `find'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:395:in `find_target'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:349:in `load_target'
        from /vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:139:in `inspect'
@@@

It seems to me that the interpolation of the belongs_to conditions is happening in the wrong context.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Suppose you have a class as such:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Earning
  belongs_to :earning_category,
    :conditions =&amp;gt; 'department_code = \'#{department_code_for_instance}\''
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And another like this:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Employee
  has_many :earnings, :include =&amp;gt; :earning_category
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will have an error like the following when attempting to
access the 'has_many :earnings' association on an Employee
instance:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
NoMethodError: undefined method `department_code' for #&amp;lt;ActiveRecord::Associations::ClassMethods::JoinDependency::JoinAssociation:0x685c5cc&amp;gt;
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2143:in `interpolate_sql'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2104:in `association_join'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2103:in `each'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:2103:in `association_join'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `construct_finder_sql_with_included_associations'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `collect'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1566:in `construct_finder_sql_with_included_associations'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1558:in `select_all_rows'
        from /vendor/rails/activerecord/lib/active_record/associations.rb:1335:in `find_with_associations'
from C:/projects/409a/vendor/rails/activerecord/lib/active_record/base.rb:1551:in
`find_every'
        from /vendor/rails/activerecord/lib/active_record/base.rb:615:in `find'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:60:in `find'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:395:in `find_target'
        from /vendor/rails/activerecord/lib/active_record/associations/association_collection.rb:349:in `load_target'
        from /vendor/rails/activerecord/lib/active_record/associations/association_proxy.rb:139:in `inspect'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It seems to me that the interpolation of the belongs_to
conditions is happening in the wrong context.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-27T15:36:53+00:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2361</number>
      <permalink>through-associations-with-conditions-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 :include belongs_to has_many</tag>
      <title>Through Associations with Conditions Fails</title>
      <updated-at type="datetime">2009-03-27T15:37:31+00:00</updated-at>
      <user-id type="integer">5026</user-id>
      <version type="integer">1</version>
      <user-name>James Herdman</user-name>
      <creator-name>James Herdman</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2361</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-05T15:51:16+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.2 :include belongs_to has_many
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2361</number>
      <permalink>through-associations-with-conditions-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 :include belongs_to bugmash has_many</tag>
      <title>Through Associations with Conditions Fails</title>
      <updated-at type="datetime">2009-08-05T15:51:17+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">2</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>James Herdman</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2361</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>not reproducible

What I understand is:
- Employee has field department_code_for_instance
- EarningCategory has field department_code

- my_employee.earnings is intended to apply the condition on each earning_category in the context of my_employee
which does not make sense (an Earning object could not be created on its own).

The test fails - legitimately - on evaluating department_code_for_instance (not on department_code).</body>
      <body-html>&lt;div&gt;&lt;p&gt;not reproducible&lt;/p&gt;
&lt;p&gt;What I understand is:&lt;br&gt;
- Employee has field department_code_for_instance - EarningCategory
has field department_code&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;my_employee.earnings is intended to apply the condition on each
earning_category in the context of my_employee which does not make
sense (an Earning object could not be created on its own).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The test fails - legitimately - on evaluating
department_code_for_instance (not on department_code).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T11:38:15+01:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2361</number>
      <permalink>through-associations-with-conditions-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 :include belongs_to bugmash has_many</tag>
      <title>Through Associations with Conditions Fails</title>
      <updated-at type="datetime">2009-08-09T11:38:20+01:00</updated-at>
      <user-id type="integer">65618</user-id>
      <version type="integer">3</version>
      <user-name>dira</user-name>
      <creator-name>James Herdman</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2361</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-20T11:03:38+00:00</created-at>
      <creator-id type="integer">5026</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: 2.3.2 :include belongs_to bugmash has_many
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2361</number>
      <permalink>through-associations-with-conditions-fails</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.2 :include belongs_to has_many</tag>
      <title>Through Associations with Conditions Fails</title>
      <updated-at type="datetime">2010-01-20T11:03:41+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">4</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>James Herdman</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2361</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>25bebc525df702e5568b8cb496064d3c0bd63397</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-09T11:38:15+01:00</created-at>
      <filename>2361_not_reproducible.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239330</id>
      <size type="integer">4337</size>
      <uploader-id type="integer">65618</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239330/2361_not_reproducible.diff</url>
    </attachment>
  </attachments>
</ticket>
