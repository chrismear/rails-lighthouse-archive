<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">12714</assigned-user-id>
  <attachments-count type="integer">13</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-18T10:23:46+00:00</created-at>
  <creator-id type="integer">7697</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">2283</number>
  <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
  <priority type="integer">1</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>active_support constant dependencies loading patch rails3</tag>
  <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
  <updated-at type="datetime">2010-10-15T23:01:30+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">38</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Andrew White</creator-name>
  <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>High</priority-name>
  <original-body>When load_missing_constant is called with an already defined constant an exception is raised along the lines of &quot;ArgumentError: Admin is not missing constant User!&quot;. This seems unnecessarily harsh - why not just return the existing constant? This would have the side effect of fixing a problem with namespaced models in ActiveRecord, e.g:

@@@ ruby
module Admin
  class User &lt; ActiveRecord::Base
    has_one :account
  end

  class Account &lt; ActiveRecord::Base
    belongs_to :user
  end
end
@@@

If both the Admin::User and Admin::Account models have previously been loaded then the compute_type method looks for Admin::User::Account or Admin::Account::User first and doesn't find them and then load_missing_constant gets called. This looks in the parent module and finds them already defined and then the exception gets raised.

The attached patch fixes this problem and modifies the test for double loading. All tests pass with this change on my computer.</original-body>
  <latest-body>When load_missing_constant is called with an already defined constant an exception is raised along the lines of &quot;ArgumentError: Admin is not missing constant User!&quot;. This seems unnecessarily harsh - why not just return the existing constant? This would have the side effect of fixing a problem with namespaced models in ActiveRecord, e.g:

@@@ ruby
module Admin
  class User &lt; ActiveRecord::Base
    has_one :account
  end

  class Account &lt; ActiveRecord::Base
    belongs_to :user
  end
end
@@@

If both the Admin::User and Admin::Account models have previously been loaded then the compute_type method looks for Admin::User::Account or Admin::Account::User first and doesn't find them and then load_missing_constant gets called. This looks in the parent module and finds them already defined and then the exception gets raised.

The attached patch fixes this problem and modifies the test for double loading. All tests pass with this change on my computer.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When load_missing_constant is called with an already defined
constant an exception is raised along the lines of &quot;ArgumentError:
Admin is not missing constant User!&quot;. This seems unnecessarily
harsh - why not just return the existing constant? This would have
the side effect of fixing a problem with namespaced models in
ActiveRecord, e.g:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
module Admin
  class User &amp;lt; ActiveRecord::Base
    has_one :account
  end

  class Account &amp;lt; ActiveRecord::Base
    belongs_to :user
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If both the Admin::User and Admin::Account models have
previously been loaded then the compute_type method looks for
Admin::User::Account or Admin::Account::User first and doesn't find
them and then load_missing_constant gets called. This looks in the
parent module and finds them already defined and then the exception
gets raised.&lt;/p&gt;
&lt;p&gt;The attached patch fixes this problem and modifies the test for
double loading. All tests pass with this change on my computer.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When load_missing_constant is called with an already defined constant an exception is raised along the lines of &quot;ArgumentError: Admin is not missing constant User!&quot;. This seems unnecessarily harsh - why not just return the existing constant? This would have the side effect of fixing a problem with namespaced models in ActiveRecord, e.g:

@@@ ruby
module Admin
  class User &lt; ActiveRecord::Base
    has_one :account
  end

  class Account &lt; ActiveRecord::Base
    belongs_to :user
  end
end
@@@

If both the Admin::User and Admin::Account models have previously been loaded then the compute_type method looks for Admin::User::Account or Admin::Account::User first and doesn't find them and then load_missing_constant gets called. This looks in the parent module and finds them already defined and then the exception gets raised.

The attached patch fixes this problem and modifies the test for double loading. All tests pass with this change on my computer.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When load_missing_constant is called with an already defined
constant an exception is raised along the lines of &quot;ArgumentError:
Admin is not missing constant User!&quot;. This seems unnecessarily
harsh - why not just return the existing constant? This would have
the side effect of fixing a problem with namespaced models in
ActiveRecord, e.g:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
module Admin
  class User &amp;lt; ActiveRecord::Base
    has_one :account
  end

  class Account &amp;lt; ActiveRecord::Base
    belongs_to :user
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If both the Admin::User and Admin::Account models have
previously been loaded then the compute_type method looks for
Admin::User::Account or Admin::Account::User first and doesn't find
them and then load_missing_constant gets called. This looks in the
parent module and finds them already defined and then the exception
gets raised.&lt;/p&gt;
&lt;p&gt;The attached patch fixes this problem and modifies the test for
double loading. All tests pass with this change on my computer.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-18T10:23:47+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support constant dependencies loading</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-03-18T10:23:52+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">1</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>We are experiencing the same issue from within migrations:

@@
class FirstMigration &lt; ActiveRecord::Migration

  class Book &lt; ActiveRecord::Base
    belongs_to :author
  end

  class Author &lt; ActiveRecord::Base
  end


  def self.up
    Book.create!(:name =&gt; 'blah')
    Book.first.author # blows up here with 'FirstMigration' is not missing constant Author!


  end

  def self.down
  end
end

@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;We are experiencing the same issue from within migrations:&lt;/p&gt;
&lt;p&gt;@@ class FirstMigration &amp;lt; ActiveRecord::Migration&lt;/p&gt;
&lt;p&gt;class Book &amp;lt; ActiveRecord::Base&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;belongs_to :author
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class Author &amp;lt; ActiveRecord::Base end&lt;/p&gt;
&lt;p&gt;def self.up&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Book.create!(:name =&amp;gt; 'blah')
Book.first.author # blows up here with 'FirstMigration' is not missing constant Author!
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;def self.down end end&lt;/p&gt;
&lt;p&gt;@@&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-16T19:33:30+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support constant dependencies loading</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-04-16T19:33:35+01:00</updated-at>
      <user-id type="integer">53520</user-id>
      <version type="integer">2</version>
      <user-name>ekolve</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is awfully helpful, since this has been driving us nuts.

In addition, here's the above real patch turned into a monkey patch (via an initializer), for anybody that stumbles onto this issue and doesn't want to (or can't) patch the version of Rails their using.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is awfully helpful, since this has been driving us
nuts.&lt;/p&gt;
&lt;p&gt;In addition, here's the above real patch turned into a monkey
patch (via an initializer), for anybody that stumbles onto this
issue and doesn't want to (or can't) patch the version of Rails
their using.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-24T14:01:18+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support constant dependencies loading</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-04-24T14:01:23+01:00</updated-at>
      <user-id type="integer">11769</user-id>
      <version type="integer">3</version>
      <user-name>jmoses</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-24T14:03:18+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_support constant dependencies loading
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-04-24T14:03:19+01:00</updated-at>
      <user-id type="integer">11769</user-id>
      <version type="integer">4</version>
      <user-name>jmoses</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Thanks for the monkeypatch &amp; workaround! :)

I wasted two days trying to debug this error because my Rails plugin absolutely must have namespaced models (so that my plugin's models do not interfere with the the Rails app that is using my plugin).

I hope this bug is fixed in Rails mainline soon.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks for the monkeypatch &amp;amp; workaround! :)&lt;/p&gt;
&lt;p&gt;I wasted two days trying to debug this error because my Rails
plugin absolutely must have namespaced models (so that my plugin's
models do not interfere with the the Rails app that is using my
plugin).&lt;/p&gt;
&lt;p&gt;I hope this bug is fixed in Rails mainline soon.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-05T22:10:24+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-06-05T22:10:26+01:00</updated-at>
      <user-id type="integer">40510</user-id>
      <version type="integer">5</version>
      <user-name>Suraj N. Kurapati</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-30T17:09:30+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-07-30T17:09:37+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">6</version>
      <user-name>Pratik</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Rebased patch against master</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rebased patch against master&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-05T16:09:05+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-08-05T16:09:07+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">7</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>This is a symptom. Changing load_missing_constant to find sibling constants doesn't match Ruby behavior.

AR::Base#compute_type should handle this case. It looks for a sibling constant first and falls back to a normal constant lookup. Why is it failing here?</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a symptom. Changing load_missing_constant to find
sibling constants doesn't match Ruby behavior.&lt;/p&gt;
&lt;p&gt;AR::Base#compute_type should handle this case. It looks for a
sibling constant first and falls back to a normal constant lookup.
Why is it failing here?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-05T18:53:24+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-08-05T18:53:31+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">8</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>The problem is that compute_type is looking for a nested constant first (type_name_with_module) and then falling back to normal constant lookup. So in the example above the has_one :account call tries Admin::User::Account and when that fails it then tries Account which uses the normal constant lookup. The Account constant doesn't exist within User so the const_missing defined in AS::Dependencies::ClassConstMissing is called. Since we're still inside a nested constant load_missing_constant is called. This fails and then the parent constant is sent const_missing. In the example above this is the Admin module and the const_missing in ModuleConstMissing calls load_missing_constant again. However if the constant is previously been loaded the exception removed in the patch is triggered.

Removing the exception seemed the cleanest way of fixing it rather than trying to refactor the const_missing behaviour.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The problem is that compute_type is looking for a nested
constant first (type_name_with_module) and then falling back to
normal constant lookup. So in the example above the has_one
:account call tries Admin::User::Account and when that fails it
then tries Account which uses the normal constant lookup. The
Account constant doesn't exist within User so the const_missing
defined in AS::Dependencies::ClassConstMissing is called. Since
we're still inside a nested constant load_missing_constant is
called. This fails and then the parent constant is sent
const_missing. In the example above this is the Admin module and
the const_missing in ModuleConstMissing calls load_missing_constant
again. However if the constant is previously been loaded the
exception removed in the patch is triggered.&lt;/p&gt;
&lt;p&gt;Removing the exception seemed the cleanest way of fixing it
rather than trying to refactor the const_missing behaviour.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-05T21:36:11+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-08-05T21:36:17+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">9</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>FWIW, I have run into a similar problem.  I traced it through AR far enough to determine that commenting out the line

ActiveRecord::Base.store_full_sti_class = true

in new_rails_defaults.rb would work around it.  This is clearly not a fix, but perhaps it's a clue.  Since I'm not using STI with namespaced classes, I haven't looked into it further.</body>
      <body-html>&lt;div&gt;&lt;p&gt;FWIW, I have run into a similar problem. I traced it through AR
far enough to determine that commenting out the line&lt;/p&gt;
&lt;p&gt;ActiveRecord::Base.store_full_sti_class = true&lt;/p&gt;
&lt;p&gt;in new_rails_defaults.rb would work around it. This is clearly
not a fix, but perhaps it's a clue. Since I'm not using STI with
namespaced classes, I haven't looked into it further.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-31T23:23:58+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-08-31T23:24:00+01:00</updated-at>
      <user-id type="integer">17426</user-id>
      <version type="integer">10</version>
      <user-name>Rhett Sutphin</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>As Rhett suggested, this seems to be more of an issue with the store_full_sti_class option, specifically in how it's used in ActiveRecord::Base#type_name_with_module:

@@@ ruby
def type_name_with_module(type_name)
  if store_full_sti_class
    type_name
  else      
    (/^::/ =~ type_name) ? type_name : &quot;#{parent.name}::#{type_name}&quot;
  end
end
@@@

Returning the type_name when store_full_sti_class is true seems to have no useful effect, and always prepending the parent module name when the type name is not fully-qualified seems to fix this issue.  I've attached a patch w/the updated method and a a test to demonstrate.</body>
      <body-html>&lt;div&gt;&lt;p&gt;As Rhett suggested, this seems to be more of an issue with the
store_full_sti_class option, specifically in how it's used in
ActiveRecord::Base#type_name_with_module:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def type_name_with_module(type_name)
  if store_full_sti_class
    type_name
  else      
    (/^::/ =~ type_name) ? type_name : &quot;#{parent.name}::#{type_name}&quot;
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Returning the type_name when store_full_sti_class is true seems
to have no useful effect, and always prepending the parent module
name when the type name is not fully-qualified seems to fix this
issue. I've attached a patch w/the updated method and a a test to
demonstrate.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-01T02:40:20+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-10-01T02:40:24+01:00</updated-at>
      <user-id type="integer">21359</user-id>
      <version type="integer">11</version>
      <user-name>Ryan Kinderman</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>No, it's not related to STI as it happens even when ActiveRecord isn't involved, e.g:

@@@ ruby
require 'rubygems'
require 'active_support'

module Admin
  class Account
    def self.user_class
      User
    end
  end

  class User
  end
end
@@@

If you do Admin::Account.user_class you get Admin::User returned, however if you do Admin::Account.class_eval(&quot;User&quot;) you will get 'Admin is not missing constant User!'. Without ActiveSupport the class_eval would still generate an error but it's the logical 'uninitialized constant Admin::Account::User'. Since Rails is overriding const_missing to autoload missing constants the fact that the constant is already loaded shouldn't be an error in my view since the bare User constant is found when used directly within the Admin::Account class.</body>
      <body-html>&lt;div&gt;&lt;p&gt;No, it's not related to STI as it happens even when ActiveRecord
isn't involved, e.g:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require 'rubygems'
require 'active_support'

module Admin
  class Account
    def self.user_class
      User
    end
  end

  class User
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you do Admin::Account.user_class you get Admin::User
returned, however if you do Admin::Account.class_eval(&quot;User&quot;) you
will get 'Admin is not missing constant User!'. Without
ActiveSupport the class_eval would still generate an error but it's
the logical 'uninitialized constant Admin::Account::User'. Since
Rails is overriding const_missing to autoload missing constants the
fact that the constant is already loaded shouldn't be an error in
my view since the bare User constant is found when used directly
within the Admin::Account class.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-02T06:56:08+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 85
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-10-02T06:56:16+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">12</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>I don't think we want to make this fix in the load_missing_constant method. I presume that the reason that it's raising the error is that it's not expecting the constant to be defined already, since we've just called a method that's designed to load *missing* constants.

I believe that the correct place to make the fix for this issue is in the AS::Dependencies override of the Class#const_missing method, since this is the specific place that we're seeing the issue occur.

I've attached a patch that fixes the issue that Andrew mentioned above in the Class#const_missing method.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't think we want to make this fix in the
load_missing_constant method. I presume that the reason that it's
raising the error is that it's not expecting the constant to be
defined already, since we've just called a method that's designed
to load &lt;em&gt;missing&lt;/em&gt; constants.&lt;/p&gt;
&lt;p&gt;I believe that the correct place to make the fix for this issue
is in the AS::Dependencies override of the Class#const_missing
method, since this is the specific place that we're seeing the
issue occur.&lt;/p&gt;
&lt;p&gt;I've attached a patch that fixes the issue that Andrew mentioned
above in the Class#const_missing method.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-13T03:34:06+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-10-13T03:34:09+01:00</updated-at>
      <user-id type="integer">21359</user-id>
      <version type="integer">13</version>
      <user-name>Ryan Kinderman</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Okay, so to summarize:

I think that there are a few issues that are all manifesting themselves here:

* The AR::Base.store_full_sti_class option seems to be used incorrectly in type_name_with_module. [This patch](https://rails.lighthouseapp.com/projects/8994/tickets/2283/a/283269/rails_sti_bug_fix.diff) I've submitted fixes that particular issue.

* AS::Dependencies has a bug in how it currently resolves a constant that is evaluated from within a class when the constant is defined in a parent module of the evaluating class. This issue is manifesting itself most often when using namespaced AR models that have defined associations to other AR models defined in the same namespace, since this situation will cause the failing behavior to be invoked. However, since the AS::Dependencies logic affects everything, the problem could occur in any Ruby code that requires AS::Dependencies. [This patch](https://rails.lighthouseapp.com/projects/8994/tickets/2283/a/293613/rails-2283-as-deps-class.diff) fixes that issue.

* AS::Dependencies behavior itself overwrites the Ruby constant resolution logic to add file autoloading functionality. However, it implements the constant resolution logic in a way that is inconsistent with normal Ruby constant resolution logic, causing an ArgumentError to be raised about &quot;constant not undefined&quot; when a constant is already defined that it thinks it needs to try and load from the filesystem. Normal Ruby behavior in some cases is to raise a NameError instead, if the constant is being evaluated from within a class whose parent module defines the constant that is being evaluated.

As I see it, there are two ways to deal with this. The first way is to keep things pretty close to the way they are now with the dependency loading logic, and make some minor changes to resolve the issues identified in this ticket; that might be a good short-term solution. The second way is to move some behavior around and refactor some things so that AR::Base is truly independent of AS::Dependencies for computing types from strings, and all that AS::Dependencies does is autoload files and attempt to resolve constants from them. 

Going with the second option would mean that AR::Base may need to do the module parent chain traversal as part of its compute_type logic. This makes sense, since the parent chain traversal logic is at least partly inconsistent with the default Ruby behavior for constant resolution, and so probably should be scoped to the needs of AR::Base when resolving constants from things like association reflections.

Thoughts?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Okay, so to summarize:&lt;/p&gt;
&lt;p&gt;I think that there are a few issues that are all manifesting
themselves here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The AR::Base.store_full_sti_class option seems to be used
incorrectly in type_name_with_module. &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2283/a/283269/rails_sti_bug_fix.diff&quot;&gt;
This patch&lt;/a&gt; I've submitted fixes that particular issue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AS::Dependencies has a bug in how it currently resolves a
constant that is evaluated from within a class when the constant is
defined in a parent module of the evaluating class. This issue is
manifesting itself most often when using namespaced AR models that
have defined associations to other AR models defined in the same
namespace, since this situation will cause the failing behavior to
be invoked. However, since the AS::Dependencies logic affects
everything, the problem could occur in any Ruby code that requires
AS::Dependencies. &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2283/a/293613/rails-2283-as-deps-class.diff&quot;&gt;
This patch&lt;/a&gt; fixes that issue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AS::Dependencies behavior itself overwrites the Ruby constant
resolution logic to add file autoloading functionality. However, it
implements the constant resolution logic in a way that is
inconsistent with normal Ruby constant resolution logic, causing an
ArgumentError to be raised about &quot;constant not undefined&quot; when a
constant is already defined that it thinks it needs to try and load
from the filesystem. Normal Ruby behavior in some cases is to raise
a NameError instead, if the constant is being evaluated from within
a class whose parent module defines the constant that is being
evaluated.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As I see it, there are two ways to deal with this. The first way
is to keep things pretty close to the way they are now with the
dependency loading logic, and make some minor changes to resolve
the issues identified in this ticket; that might be a good
short-term solution. The second way is to move some behavior around
and refactor some things so that AR::Base is truly independent of
AS::Dependencies for computing types from strings, and all that
AS::Dependencies does is autoload files and attempt to resolve
constants from them.&lt;/p&gt;
&lt;p&gt;Going with the second option would mean that AR::Base may need
to do the module parent chain traversal as part of its compute_type
logic. This makes sense, since the parent chain traversal logic is
at least partly inconsistent with the default Ruby behavior for
constant resolution, and so probably should be scoped to the needs
of AR::Base when resolving constants from things like association
reflections.&lt;/p&gt;
&lt;p&gt;Thoughts?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-13T03:48:16+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-10-13T03:48:18+01:00</updated-at>
      <user-id type="integer">21359</user-id>
      <version type="integer">14</version>
      <user-name>Ryan Kinderman</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>I'm happy with Ryan's patch if that'd be preferred. I'd thought of doing it that way but I think I was trying to be as unobtrusive as possible at the time due to the impending release of 2.3. Wouldn't it need to take account of the [changes to const_defined? in Ruby 1.9](http://eigenclass.org/hiki/Changes+in+Ruby+1.9#l33) though?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm happy with Ryan's patch if that'd be preferred. I'd thought
of doing it that way but I think I was trying to be as unobtrusive
as possible at the time due to the impending release of 2.3.
Wouldn't it need to take account of the &lt;a href=
&quot;http://eigenclass.org/hiki/Changes%2Bin%2BRuby%2B1.9#l33&quot;&gt;changes
to const_defined? in Ruby 1.9&lt;/a&gt; though?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-15T13:58:18+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-10-15T13:58:22+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">15</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>You're probably right, Andrew. Good catch. I hadn't tested it with 1.9. I can do that sometime this week or next, unless you want to handle it. Let me know, and I won't.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You're probably right, Andrew. Good catch. I hadn't tested it
with 1.9. I can do that sometime this week or next, unless you want
to handle it. Let me know, and I won't.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-15T15:52:52+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-10-15T15:52:59+01:00</updated-at>
      <user-id type="integer">21359</user-id>
      <version type="integer">16</version>
      <user-name>Ryan Kinderman</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>I'm quite prepared to write the patch, though we could probably do with some direction from a core team member at this point. I noticed a commit in a experimental branch which implies that AS::Dependencies is being looked at for Rails 3.0. If this is the case do core want a patch for 2.3-stable which fixes it in ClassConstMissing and another patch with just a failing test case for edge. Should I raise the matter on the rails-core mailing list?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm quite prepared to write the patch, though we could probably
do with some direction from a core team member at this point. I
noticed a commit in a experimental branch which implies that
AS::Dependencies is being looked at for Rails 3.0. If this is the
case do core want a patch for 2.3-stable which fixes it in
ClassConstMissing and another patch with just a failing test case
for edge. Should I raise the matter on the rails-core mailing
list?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-03T17:19:35+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2009-11-03T17:19:40+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">17</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>I've attached a revised version of Ryan's 10/1 patch.  The old one no longer would apply to master.  I tested it (i.e., verified that the test suite passes) on MRI 1.8.7-p174 and MRI 1.9.1-p376.  

I also verified that the other patch (Ryan's from 10/13) works on 1.9.1-p376.

I'd like to see that at least the first of these (the STI one) get applied to master before 3.0 comes out -- this is a longstanding irritation with namespaced models that can be fixed with a small code change.  (I can see where the second one might require more consideration.)  What else can I do to help?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've attached a revised version of Ryan's 10/1 patch. The old
one no longer would apply to master. I tested it (i.e., verified
that the test suite passes) on MRI 1.8.7-p174 and MRI
1.9.1-p376.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I also verified that the other patch (Ryan's from 10/13) works
on 1.9.1-p376.&lt;/p&gt;
&lt;p&gt;I'd like to see that at least the first of these (the STI one)
get applied to master before 3.0 comes out -- this is a
longstanding irritation with namespaced models that can be fixed
with a small code change. (I can see where the second one might
require more consideration.) What else can I do to help?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-04T23:15:29+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-01-04T23:15:38+00:00</updated-at>
      <user-id type="integer">17426</user-id>
      <version type="integer">18</version>
      <user-name>Rhett Sutphin</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>thanks for working on this, guys, I can confirm having the same problem on Rails 2.3.4 using both STI and namespaced controllers. Do you know if there will be another release of Rails 2.3.x now that Rails 3 beta is out?</body>
      <body-html>&lt;div&gt;&lt;p&gt;thanks for working on this, guys, I can confirm having the same
problem on Rails 2.3.4 using both STI and namespaced controllers.
Do you know if there will be another release of Rails 2.3.x now
that Rails 3 beta is out?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-05T11:52:16+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patched</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-02-05T11:52:20+00:00</updated-at>
      <user-id type="integer">47160</user-id>
      <version type="integer">19</version>
      <user-name>Bj&#246;rn Grossmann</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Just a heads up to say that this is still a problem after wycat's [recent changes](http://github.com/rails/rails/commit/4da45060a2e839fec4a7e9238cbc9d8de62b1b69) to AS::Dependencies. All it needs to fix it is a check for whether the constant is already defined before [calling load_missing_constant](http://github.com/rails/rails/blob/master/activesupport/lib/active_support/dependencies.rb#L151).

I'm quite willing to write the patch if it'll get applied. I'd also throw in one for 2.3-stable as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just a heads up to say that this is still a problem after
wycat's &lt;a href=
&quot;http://github.com/rails/rails/commit/4da45060a2e839fec4a7e9238cbc9d8de62b1b69&quot;&gt;
recent changes&lt;/a&gt; to AS::Dependencies. All it needs to fix it is a
check for whether the constant is already defined before &lt;a href=
&quot;http://github.com/rails/rails/blob/master/activesupport/lib/active_support/dependencies.rb#L151&quot;&gt;
calling load_missing_constant&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm quite willing to write the patch if it'll get applied. I'd
also throw in one for 2.3-stable as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-15T00:21:19+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_support constant dependencies loading patched
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-02-15T00:21:22+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">20</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>I'm also still watching this. Any input from people on the core team who are familiar with the direction that this stuff is going, so we can come to a lasting solution?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm also still watching this. Any input from people on the core
team who are familiar with the direction that this stuff is going,
so we can come to a lasting solution?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-15T00:30:53+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-02-15T00:30:59+00:00</updated-at>
      <user-id type="integer">21359</user-id>
      <version type="integer">21</version>
      <user-name>Ryan Kinderman</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>I've posted to the rails-core list about this issue. Maybe we'll get someone's attention there.

http://groups.google.com/group/rubyonrails-core/t/534dda4205adb692</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've posted to the rails-core list about this issue. Maybe we'll
get someone's attention there.&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://groups.google.com/group/rubyonrails-core/t/534dda4205adb692&quot;&gt;
http://groups.google.com/group/rubyonrails-core/t/534dda4205adb692&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-15T00:48:59+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-02-15T00:49:04+00:00</updated-at>
      <user-id type="integer">21359</user-id>
      <version type="integer">22</version>
      <user-name>Ryan Kinderman</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">6</attachments-count>
      <body>Following discussion on the core mailing list I'm attaching a patch that appears to fix the problem within compute_type. The patch passes all AR tests and I added a failing test first that now passes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Following discussion on the core mailing list I'm attaching a
patch that appears to fix the problem within compute_type. The
patch passes all AR tests and I added a failing test first that now
passes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-16T13:53:53+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: active_support constant dependencies loading rails3
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-02-16T13:54:03+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">23</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">7</attachments-count>
      <body>Updated patch for HEAD with whitespace changes removed and updated offsets, no other code changes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated patch for HEAD with whitespace changes removed and
updated offsets, no other code changes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-15T10:18:53+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-03-15T10:19:04+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">24</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>+1, applies &amp; tests pass, and fixes the problem I had with this</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1, applies &amp;amp; tests pass, and fixes the problem I had with
this&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-15T10:28:16+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-03-15T10:28:20+00:00</updated-at>
      <user-id type="integer">17428</user-id>
      <version type="integer">25</version>
      <user-name>Jan De Poorter</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>I can't say that I'm following all of this very clearly, but I wanted to add something to the discussion just in case it might be useful in some way. I read through the thread on the rails-core list, but didn't see anything relating to this mentioned. I'm probably just going to expose my ignorance here, but oh well.

I am getting the same error (x is not missing constant y) in 2.3.5, but I am not namespacing my models at all. I am, however, namespacing my controllers.

@@@
class Web::BaseController &lt; ApplicationController
end

class Web::SessionsController &lt; Web::BaseController
  def create
    user_id = User.authenticate(params[:email], params[:password])
  end
end

class User &lt; ActiveRecord::Base
end
@@@

I get the error in Web::SessionsController#create, but only in development. In testing, either through RSpec or Cucumber+Culerity, I didn't see it. So I compared environment files for test and development and noticed config.cache_classes was false in development but true in test. When I changed it to true in development, I didn't get the error.

There may be more to it than that as I was also creating a very simple project that mimicked my structure but was unable to reproduce the problem. And I'm doing the same thing in another project without any problems. So this bit about cache_classes might not help in any way.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can't say that I'm following all of this very clearly, but I
wanted to add something to the discussion just in case it might be
useful in some way. I read through the thread on the rails-core
list, but didn't see anything relating to this mentioned. I'm
probably just going to expose my ignorance here, but oh well.&lt;/p&gt;
&lt;p&gt;I am getting the same error (x is not missing constant y) in
2.3.5, but I am not namespacing my models at all. I am, however,
namespacing my controllers.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Web::BaseController &amp;lt; ApplicationController
end

class Web::SessionsController &amp;lt; Web::BaseController
  def create
    user_id = User.authenticate(params[:email], params[:password])
  end
end

class User &amp;lt; ActiveRecord::Base
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I get the error in Web::SessionsController#create, but only in
development. In testing, either through RSpec or Cucumber+Culerity,
I didn't see it. So I compared environment files for test and
development and noticed config.cache_classes was false in
development but true in test. When I changed it to true in
development, I didn't get the error.&lt;/p&gt;
&lt;p&gt;There may be more to it than that as I was also creating a very
simple project that mimicked my structure but was unable to
reproduce the problem. And I'm doing the same thing in another
project without any problems. So this bit about cache_classes might
not help in any way.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-25T22:27:31+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-03-25T22:27:34+00:00</updated-at>
      <user-id type="integer">33949</user-id>
      <version type="integer">26</version>
      <user-name>Phillip Koebbe</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>Phillip, what was the error message? If it was 'Object is not missing constant User' then it's still related to namespaces and models. If it's something like 'Web is not missing constant BaseController then it's something I've not come across before even though I do something similar with admin controllers.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Phillip, what was the error message? If it was 'Object is not
missing constant User' then it's still related to namespaces and
models. If it's something like 'Web is not missing constant
BaseController then it's something I've not come across before even
though I do something similar with admin controllers.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-26T13:56:07+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-03-26T13:56:12+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">27</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>Andrew,

It was 'Web is not missing constant User!'. I assumed it was related, but didn't know if the additional information of cache_classes might be helpful.

Oh, and I completely forgot to mention that I applied the changes in the patch, but they didn't help. [Why would they when they were on ActiveRecord? heh heh]

Something I just thought of that might be contributing to my particular case. I'm namespacing my controllers in an effort to make role restrictions very clean, so I have the base namespace of Web which is for users not logged in, Admin for administrative functionality, and User for users who are logged in. It looks like

@@@
class Web::User::BaseController &lt; Web::BaseController
	before_filter :require_logged_in
	
	private
	
	def require_logged_in
		redirect_to(web_login_path) and return false unless logged_in?
		return true
	end
end
@@@

And that might be causing some confusion with the User model. If so, I'm confused why it would work in testing with cache_classes == true and not in development with cache_classes == false.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Andrew,&lt;/p&gt;
&lt;p&gt;It was 'Web is not missing constant User!'. I assumed it was
related, but didn't know if the additional information of
cache_classes might be helpful.&lt;/p&gt;
&lt;p&gt;Oh, and I completely forgot to mention that I applied the
changes in the patch, but they didn't help. [Why would they when
they were on ActiveRecord? heh heh]&lt;/p&gt;
&lt;p&gt;Something I just thought of that might be contributing to my
particular case. I'm namespacing my controllers in an effort to
make role restrictions very clean, so I have the base namespace of
Web which is for users not logged in, Admin for administrative
functionality, and User for users who are logged in. It looks
like&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Web::User::BaseController &amp;lt; Web::BaseController
    before_filter :require_logged_in
    
    private
    
    def require_logged_in
        redirect_to(web_login_path) and return false unless logged_in?
        return true
    end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And that might be causing some confusion with the User model. If
so, I'm confused why it would work in testing with cache_classes ==
true and not in development with cache_classes == false.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-26T14:06:49+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-03-26T14:06:54+00:00</updated-at>
      <user-id type="integer">33949</user-id>
      <version type="integer">28</version>
      <user-name>Phillip Koebbe</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>Yep, the Web::User::BaseController will be the cause of the problem. The difference due to cache_classes is probably down to a different load order. A fix in your case is to use ::User rather than User or change the Web::User namespace to something else.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yep, the Web::User::BaseController will be the cause of the
problem. The difference due to cache_classes is probably down to a
different load order. A fix in your case is to use ::User rather
than User or change the Web::User namespace to something else.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-26T14:11:48+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-03-26T14:11:53+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">29</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">6601</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>Thanks, Andrew. Sorry to have added noise to the conversation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks, Andrew. Sorry to have added noise to the
conversation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-26T15:22:12+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-03-26T15:22:20+00:00</updated-at>
      <user-id type="integer">33949</user-id>
      <version type="integer">30</version>
      <user-name>Phillip Koebbe</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Carl Lerche</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-27T03:13:54+00:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
:milestone: 9903
:assigned_user: 6601
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-03-27T03:14:00+00:00</updated-at>
      <user-id type="integer">12714</user-id>
      <version type="integer">31</version>
      <user-name>Yehuda Katz (wycats)</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">8</attachments-count>
      <body>Updated patch with spelling fixed - somehow I managed to spell candidates wrong consistently.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated patch with spelling fixed - somehow I managed to spell
candidates wrong consistently.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-31T03:06:25+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-03-31T03:06:35+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">32</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">9</attachments-count>
      <body>Backport patch to 2-3-stable.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Backport patch to 2-3-stable.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-31T03:13:32+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-03-31T03:13:36+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">33</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">10</attachments-count>
      <body>Updated patch for master with tests for has_many with dependencies from ticket #2627.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated patch for master with tests for has_many with
dependencies from ticket &lt;a href=&quot;/projects/8994/tickets/2627&quot;
title=&quot;Ticket #2627&quot;&gt;#2627&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-04T07:58:18+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-04-04T07:58:24+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">34</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">11</attachments-count>
      <body>Updated patch for 2-3-stable with tests for has_many with dependencies from ticket #2627. This needs the [backport of lazy evaluation of has_many ..., :dependent =&gt; :___](https://rails.lighthouseapp.com/projects/8994/tickets/2627/a/470642/0002-backport-of-lazy-evaluation-of-has-many-dependencies.diff) patch before the tests will pass.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Updated patch for 2-3-stable with tests for has_many with
dependencies from ticket &lt;a href=&quot;/projects/8994/tickets/2627&quot;
title=&quot;Ticket #2627&quot;&gt;#2627&lt;/a&gt;. This needs the &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2627/a/470642/0002-backport-of-lazy-evaluation-of-has-many-dependencies.diff&quot;&gt;
backport of lazy evaluation of has_many ..., :dependent =&amp;gt;
:___&lt;/a&gt; patch before the tests will pass.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-04T08:01:31+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-04-04T08:01:37+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">35</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">12</attachments-count>
      <body>Rebased patch for latest HEAD.

Is there anything that's holding this patch up? Anything I can do to help?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rebased patch for latest HEAD.&lt;/p&gt;
&lt;p&gt;Is there anything that's holding this patch up? Anything I can
do to help?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-12T13:52:54+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>verified</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-04-12T13:53:04+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">36</version>
      <user-name>Andrew White</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">13</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-13T05:31:50+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:state: verified
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-04-13T05:31:53+01:00</updated-at>
      <user-id type="integer">12714</user-id>
      <version type="integer">37</version>
      <user-name>Yehuda Katz (wycats)</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">13</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:30+01:00</created-at>
      <creator-id type="integer">7697</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">2283</number>
      <permalink>unnecessary-exception-raised-in-asdependenciesload_missing_constant</permalink>
      <priority type="integer">1</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>active_support constant dependencies loading patch rails3</tag>
      <title>Unnecessary exception raised in AS::Dependencies.load_missing_constant</title>
      <updated-at type="datetime">2010-10-15T23:01:30+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">38</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Andrew White</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2283</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>High</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>48c749a66af47a4e1cba267a8e147d1337e551c5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-03-18T10:23:47+00:00</created-at>
      <filename>0001-load_missing_constant_fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">101105</id>
      <size type="integer">1905</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/101105/0001-load_missing_constant_fix.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>15990eb20419020a05d0c12e2e0255908bbf05bc</code>
      <content-type>application/octet-stream</content-type>
      <created-at type="datetime">2009-04-24T14:01:18+01:00</created-at>
      <filename>fix_already_loading_missing_dependencies.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">114956</id>
      <size type="integer">617</size>
      <uploader-id type="integer">11769</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/114956/fix_already_loading_missing_dependencies.rb</url>
    </attachment>
    <attachment type="Attachment">
      <code>c100ccf6a6a54da5b92dffbe72cd29f8b44b488b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-05T16:09:05+01:00</created-at>
      <filename>0002-load_missing_constant_fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">236652</id>
      <size type="integer">1905</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/236652/0002-load_missing_constant_fix.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>3327bcec0c556b458993636bafb9407d8e3eadd4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-01T02:40:20+01:00</created-at>
      <filename>rails_sti_bug_fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">283269</id>
      <size type="integer">2913</size>
      <uploader-id type="integer">21359</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/283269/rails_sti_bug_fix.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>c0db8471ffaf2f3448b82f11a67fd70ec7f905ab</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-10-13T03:34:06+01:00</created-at>
      <filename>rails-2283-as-deps-class.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">293613</id>
      <size type="integer">2007</size>
      <uploader-id type="integer">21359</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/293613/rails-2283-as-deps-class.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>e1794b11d29b5e5a188b1fddc9446114d63e1d37</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-01-04T23:15:30+00:00</created-at>
      <filename>2283-ar-sti-classname-updated.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">367299</id>
      <size type="integer">3125</size>
      <uploader-id type="integer">17426</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/367299/2283-ar-sti-classname-updated.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>0b83fce6aa2c8eb47ca66e71942deb15795196f1</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-02-16T13:53:54+00:00</created-at>
      <filename>0001-compute-type-fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">412825</id>
      <size type="integer">5314</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/412825/0001-compute-type-fix.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>31f83b02a2f33418b149fecc1e644150d9db0356</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-03-15T10:18:53+00:00</created-at>
      <filename>0002-compute-type-fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">446196</id>
      <size type="integer">4252</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/446196/0002-compute-type-fix.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>bbb9e2dd4d9d186939cc4196648b66a3f16c91a0</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-03-31T03:06:25+01:00</created-at>
      <filename>0003-compute-type-fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">466118</id>
      <size type="integer">4324</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/466118/0003-compute-type-fix.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>024656a2acdce0dc1a4137458fe414d56ecec33e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-03-31T03:13:32+01:00</created-at>
      <filename>0001-backport-compute-type-fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">466130</id>
      <size type="integer">4086</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/466130/0001-backport-compute-type-fix.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>973baeb7ced16fb3b812540ae75603746395505e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-04T07:58:18+01:00</created-at>
      <filename>0004-compute-type-fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">470647</id>
      <size type="integer">8441</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/470647/0004-compute-type-fix.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>6c96314f377e780382f15be9522c8eb47989c7c4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-04T08:01:31+01:00</created-at>
      <filename>0002-backport-compute-type-fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">470648</id>
      <size type="integer">8206</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/470648/0002-backport-compute-type-fix.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>826a991101536bdcab152f90c1f358c172fd3011</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-12T13:52:54+01:00</created-at>
      <filename>0005-compute-type-fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">478896</id>
      <size type="integer">8421</size>
      <uploader-id type="integer">7697</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/478896/0005-compute-type-fix.diff</url>
    </attachment>
  </attachments>
</ticket>
