<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">7697</assigned-user-id>
  <attachments-count type="integer">4</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-14T12:27:02+01:00</created-at>
  <creator-id type="integer">105957</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">5805</number>
  <permalink>assert_recognizes-does-not-support-constraints</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>[PATCH] assert_recognizes does not support constraints</title>
  <updated-at type="datetime">2011-02-13T23:42:08+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">15</version>
  <user-name>Repository</user-name>
  <creator-name>ms (at budstikka)</creator-name>
  <assigned-user-name>Andrew White</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
  <milestone-title>3.x</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>In a Rails 3.0.0 app with a HomeController and an #index action:

@@@ ruby
# routes.rb
class FooConstraint
  def self.matches?(request)
    false  # Ensures routes with this constrains should _never_ match
  end
end

Constraints::Application.routes.draw do
  constraints FooConstraint do
    root :to =&gt; 'home#index'
  end
end
@@@
@@@ ruby
# home_controller_test.rb
require 'test_helper'
class HomeControllerTest &lt; ActionController::TestCase
  test &quot;should route to home&quot; do
    assert_recognizes({ :controller =&gt; &quot;home&quot;, :action =&gt; &quot;index&quot; }, &quot;/&quot;)
  end
end
@@@

This test should fail, as it does when I try to hit / in my web browser ('No route matches &quot;/&quot;').

It seems the code in FooConstrains.matches? is never run.</original-body>
  <latest-body>In a Rails 3.0.0 app with a HomeController and an #index action:

@@@ ruby
# routes.rb
class FooConstraint
  def self.matches?(request)
    false  # Ensures routes with this constrains should _never_ match
  end
end

Constraints::Application.routes.draw do
  constraints FooConstraint do
    root :to =&gt; 'home#index'
  end
end
@@@
@@@ ruby
# home_controller_test.rb
require 'test_helper'
class HomeControllerTest &lt; ActionController::TestCase
  test &quot;should route to home&quot; do
    assert_recognizes({ :controller =&gt; &quot;home&quot;, :action =&gt; &quot;index&quot; }, &quot;/&quot;)
  end
end
@@@

This test should fail, as it does when I try to hit / in my web browser ('No route matches &quot;/&quot;').

It seems the code in FooConstrains.matches? is never run.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In a Rails 3.0.0 app with a HomeController and an #index
action:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# routes.rb
class FooConstraint
  def self.matches?(request)
    false  # Ensures routes with this constrains should _never_ match
  end
end

Constraints::Application.routes.draw do
  constraints FooConstraint do
    root :to =&amp;gt; 'home#index'
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# home_controller_test.rb
require 'test_helper'
class HomeControllerTest &amp;lt; ActionController::TestCase
  test &quot;should route to home&quot; do
    assert_recognizes({ :controller =&amp;gt; &quot;home&quot;, :action =&amp;gt; &quot;index&quot; }, &quot;/&quot;)
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This test should fail, as it does when I try to hit / in my web
browser ('No route matches &quot;/&quot;').&lt;/p&gt;
&lt;p&gt;It seems the code in FooConstrains.matches? is never run.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In a Rails 3.0.0 app with a HomeController and an #index action:

@@@ ruby
# routes.rb
class FooConstraint
  def self.matches?(request)
    false  # Ensures routes with this constrains should _never_ match
  end
end

Constraints::Application.routes.draw do
  constraints FooConstraint do
    root :to =&gt; 'home#index'
  end
end
@@@
@@@ ruby
# home_controller_test.rb
require 'test_helper'
class HomeControllerTest &lt; ActionController::TestCase
  test &quot;should route to home&quot; do
    assert_recognizes({ :controller =&gt; &quot;home&quot;, :action =&gt; &quot;index&quot; }, &quot;/&quot;)
  end
end
@@@

This test should fail, as it does when I try to hit / in my web browser ('No route matches &quot;/&quot;').

It seems the code in FooConstrains.matches? is never run.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In a Rails 3.0.0 app with a HomeController and an #index
action:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# routes.rb
class FooConstraint
  def self.matches?(request)
    false  # Ensures routes with this constrains should _never_ match
  end
end

Constraints::Application.routes.draw do
  constraints FooConstraint do
    root :to =&amp;gt; 'home#index'
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# home_controller_test.rb
require 'test_helper'
class HomeControllerTest &amp;lt; ActionController::TestCase
  test &quot;should route to home&quot; do
    assert_recognizes({ :controller =&amp;gt; &quot;home&quot;, :action =&amp;gt; &quot;index&quot; }, &quot;/&quot;)
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This test should fail, as it does when I try to hit / in my web
browser ('No route matches &quot;/&quot;').&lt;/p&gt;
&lt;p&gt;It seems the code in FooConstrains.matches? is never run.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-14T12:27:02+01:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>assert_recognizes constraints routing</tag>
      <title>assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2010-10-14T12:27:04+01:00</updated-at>
      <user-id type="integer">105957</user-id>
      <version type="integer">1</version>
      <user-name>ms (at budstikka)</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Please attach a failing test case to this ticket as per the Contributing to Rails guide that can be found at http://guides.rubyonrails.org.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Please attach a failing test case to this ticket as per the
Contributing to Rails guide that can be found at &lt;a href=
&quot;http://guides.rubyonrails.org&quot;&gt;http://guides.rubyonrails.org&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-14T12:33:59+01:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>assert_recognizes constraints routing</tag>
      <title>assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2010-10-14T12:34:03+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">2</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I haven't been able to make a failing test case, as there is no assert_not_recognizes method. The test case in the attached patch should fail, but it does not. I couln't find any test for the routing assert_* methods themselves. I'd be happy to write more correct tests with a little guidance.

The main point here is that assert_recognizes does not seem to restrict the routes when the tests are run in the way the constraints do when the code is run in the app and accessed from a web browser.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I haven't been able to make a failing test case, as there is no
assert_not_recognizes method. The test case in the attached patch
should fail, but it does not. I couln't find any test for the
routing assert_* methods themselves. I'd be happy to write more
correct tests with a little guidance.&lt;/p&gt;
&lt;p&gt;The main point here is that assert_recognizes does not seem to
restrict the routes when the tests are run in the way the
constraints do when the code is run in the app and accessed from a
web browser.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-15T11:41:15+01:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>assert_recognizes constraints routing</tag>
      <title>assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2010-10-15T11:41:17+01:00</updated-at>
      <user-id type="integer">105957</user-id>
      <version type="integer">3</version>
      <user-name>ms (at budstikka)</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-19T08:32:41+01:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: assert_recognizes constraints routing
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2010-10-19T08:32:42+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">5</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here's a working (in this case, failing) patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here's a working (in this case, failing) patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-08T13:26:43+00:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2010-11-08T13:26:45+00:00</updated-at>
      <user-id type="integer">90556</user-id>
      <version type="integer">6</version>
      <user-name>Dim</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Apologies, please ignore the last post. Here's an even better patch (not sure if it's the best way to validate constraints though).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Apologies, please ignore the last post. Here's an even better
patch (not sure if it's the best way to validate constraints
though).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-08T13:37:50+00:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2010-11-08T13:37:53+00:00</updated-at>
      <user-id type="integer">90556</user-id>
      <version type="integer">7</version>
      <user-name>Dim</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Ok, this is my final go - I promise!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, this is my final go - I promise!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-08T14:02:59+00:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2010-11-08T14:03:01+00:00</updated-at>
      <user-id type="integer">90556</user-id>
      <version type="integer">8</version>
      <user-name>Dim</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-11T15:49:04+00:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- 
:title: assert_recognizes does not support constraints
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2010-11-11T15:49:08+00:00</updated-at>
      <user-id type="integer">90556</user-id>
      <version type="integer">9</version>
      <user-name>Dim</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Actually, I seem to be able to test *some* constraints, but not others. Section 3.9 of the Routing guide says:


&gt; 3.9 Request-Based Constraints
&gt; 
&gt; You can also constrain a route based on any method on the Request object that returns a String.


I'm able to test a constraint on :format, but not on :protocol. For example:

@@@ ruby
# config/routes.rb
ProtocolBug::Application.routes.draw do
  scope :constraints =&gt; { :format =&gt; /(json|xml)/ } do
    match '/foos.(:format)' =&gt; 'foos#index', :via =&gt; :get
  end
end

# app/controllers/foos_controller.rb
class FoosController &lt; ApplicationController
  # GET /foos?...
  def index
    render :nothing =&gt; true
  end
end

# test/functional/foos_controller_test.rb
require 'test_helper'
class FoosControllerTest &lt; ActionController::TestCase
  test &quot;should route to index&quot; do
    assert_recognizes({ :controller =&gt; &quot;foos&quot;, :action =&gt; &quot;index&quot;, :format =&gt; &quot;xml&quot; }, &quot;/foos.xml&quot;)
  end

  test &quot;should fail to route to index&quot; do
    assert_recognizes({ :controller =&gt; &quot;foos&quot;, :action =&gt; &quot;index&quot;, :format =&gt; &quot;bogus&quot; }, &quot;/foos.bogus&quot;)
  end
end
@@@


And when I run the functional tests the test with the bogus format fails (as MS notes above, there's no &quot;assert_not_recognized&quot;, so I'm just letting it fail here for you to see that the routing constraint is working correctly).


&gt;[bploetz:~/workspace/protocol_bug]&gt; rake test:functionals
&gt;
&gt;Started
&gt;
&gt;E.
&gt;
&gt;Finished in 0.027135 seconds.
&gt;
&gt;
&gt;  1) Error:
&gt;test_should_fail_to_route_to_index(FoosControllerTest):
&gt;ActionController::RoutingError: No route matches &quot;/foos.bogus&quot;
&gt;    /Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/routing/route_set.rb:523:in `recognize_path'
&gt;
&gt;    /Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/testing/assertions/routing.rb:211:in `recognized_request_for'
&gt;
&gt;    /Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/testing/assertions/routing.rb:44:in `assert_recognizes'
&gt;    test/functional/foos_controller_test.rb:8:in `block in &lt;class:FoosControllerTest&gt;'
&gt;
&gt;
&gt;2 tests, 1 assertions, 0 failures, 1 errors, 0 skips


However, if I add a constraint on :protocol =&gt; &quot;https://&quot;, it does not honor it in the test.

@@@ ruby
# config/routes.rb
ProtocolBug::Application.routes.draw do
  scope :constraints =&gt; { :protocol =&gt; &quot;https://&quot; } do
    match '/foos' =&gt; 'foos#index', :via =&gt; :get
  end
end

# test/functional/foos_controller_test.rb
require 'test_helper'
class FoosControllerTest &lt; ActionController::TestCase
  test &quot;should route to index&quot; do
    assert_recognizes({ :controller =&gt; &quot;foos&quot;, :action =&gt; &quot;index&quot;, :protocol =&gt; &quot;https://&quot; }, &quot;/foos&quot;)
  end
end
@@@


&gt; [bploetz:~/workspace/protocol_bug]&gt; rake test:functionals
&gt;
&gt; Started
&gt;
&gt; E
&gt;
&gt; Finished in 0.007458 seconds.
&gt;
&gt;  1) Error:
test_should_route_to_index(FoosControllerTest):
ActionController::RoutingError: No route matches &quot;/foos&quot;
&gt;    /Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/routing/route_set.rb:523:in `recognize_path'
&gt;    /Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/testing/assertions/routing.rb:211:in `recognized_request_for'
&gt;    /Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/testing/assertions/routing.rb:44:in `assert_recognizes'
&gt;    test/functional/foos_controller_test.rb:4:in `block in &lt;class:FoosControllerTest&gt;'
&gt;
&gt; 1 tests, 0 assertions, 0 failures, 1 errors, 0 skips



And the protocol constraint seems to be correct according to rake routes:


&gt; [bploetz:~/workspace/protocol_bug]&gt; rake routes
&gt;
&gt; foos GET /foos(.:format) {:protocol=&gt;&quot;https://&quot;, :controller=&gt;&quot;foos&quot;, :action=&gt;&quot;index&quot;}


I don't know if this is a different issue than this one, but figured I'd point it out.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Actually, I seem to be able to test &lt;em&gt;some&lt;/em&gt; constraints,
but not others. Section 3.9 of the Routing guide says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;3.9 Request-Based Constraints&lt;/p&gt;
&lt;p&gt;You can also constrain a route based on any method on the
Request object that returns a String.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm able to test a constraint on :format, but not on :protocol.
For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# config/routes.rb
ProtocolBug::Application.routes.draw do
  scope :constraints =&amp;gt; { :format =&amp;gt; /(json|xml)/ } do
    match '/foos.(:format)' =&amp;gt; 'foos#index', :via =&amp;gt; :get
  end
end

# app/controllers/foos_controller.rb
class FoosController &amp;lt; ApplicationController
  # GET /foos?...
  def index
    render :nothing =&amp;gt; true
  end
end

# test/functional/foos_controller_test.rb
require 'test_helper'
class FoosControllerTest &amp;lt; ActionController::TestCase
  test &quot;should route to index&quot; do
    assert_recognizes({ :controller =&amp;gt; &quot;foos&quot;, :action =&amp;gt; &quot;index&quot;, :format =&amp;gt; &quot;xml&quot; }, &quot;/foos.xml&quot;)
  end

  test &quot;should fail to route to index&quot; do
    assert_recognizes({ :controller =&amp;gt; &quot;foos&quot;, :action =&amp;gt; &quot;index&quot;, :format =&amp;gt; &quot;bogus&quot; }, &quot;/foos.bogus&quot;)
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And when I run the functional tests the test with the bogus
format fails (as MS notes above, there's no
&quot;assert_not_recognized&quot;, so I'm just letting it fail here for you
to see that the routing constraint is working correctly).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[bploetz:~/workspace/protocol_bug]&amp;gt; rake test:functionals&lt;/p&gt;
&lt;p&gt;Started&lt;/p&gt;
&lt;p&gt;E.&lt;/p&gt;
&lt;p&gt;Finished in 0.027135 seconds.&lt;/p&gt;
&lt;p&gt;1) Error:
test_should_fail_to_route_to_index(FoosControllerTest):
ActionController::RoutingError: No route matches &quot;/foos.bogus&quot;
/Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/routing/route_set.rb:523:in
&lt;code&gt;recognize_path'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;
/Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/testing/assertions/routing.rb:211:in
&lt;code&gt;recognized_request_for'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;
/Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/testing/assertions/routing.rb:44:in
&lt;code&gt;assert_recognizes'
test/functional/foos_controller_test.rb:8:in&lt;/code&gt;block in
&amp;lt;class:FoosControllerTest&amp;gt;'&lt;/p&gt;
&lt;p&gt;2 tests, 1 assertions, 0 failures, 1 errors, 0 skips&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However, if I add a constraint on :protocol =&amp;gt; &quot;&lt;a href=
&quot;https://&amp;quot;&quot;&gt;https://&quot;&lt;/a&gt;, it does not honor it in the
test.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# config/routes.rb
ProtocolBug::Application.routes.draw do
  scope :constraints =&amp;gt; { :protocol =&amp;gt; &quot;https://&quot; } do
    match '/foos' =&amp;gt; 'foos#index', :via =&amp;gt; :get
  end
end

# test/functional/foos_controller_test.rb
require 'test_helper'
class FoosControllerTest &amp;lt; ActionController::TestCase
  test &quot;should route to index&quot; do
    assert_recognizes({ :controller =&amp;gt; &quot;foos&quot;, :action =&amp;gt; &quot;index&quot;, :protocol =&amp;gt; &quot;https://&quot; }, &quot;/foos&quot;)
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;[bploetz:~/workspace/protocol_bug]&amp;gt; rake test:functionals&lt;/p&gt;
&lt;p&gt;Started&lt;/p&gt;
&lt;p&gt;E&lt;/p&gt;
&lt;p&gt;Finished in 0.007458 seconds.&lt;/p&gt;
&lt;p&gt;1) Error: test_should_route_to_index(FoosControllerTest):&lt;br&gt;
ActionController::RoutingError: No route matches &quot;/foos&quot;&lt;br&gt;
/Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/routing/route_set.rb:523:in
&lt;code&gt;recognize_path'
/Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/testing/assertions/routing.rb:211:in&lt;/code&gt;recognized_request_for'
/Users/bploetz/.rvm/gems/ruby-1.9.2-p0@server/gems/actionpack-3.0.3/lib/action_dispatch/testing/assertions/routing.rb:44:in
&lt;code&gt;assert_recognizes'
test/functional/foos_controller_test.rb:4:in&lt;/code&gt;block in
&amp;lt;class:FoosControllerTest&amp;gt;'&lt;/p&gt;
&lt;p&gt;1 tests, 0 assertions, 0 failures, 1 errors, 0 skips&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And the protocol constraint seems to be correct according to
rake routes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[bploetz:~/workspace/protocol_bug]&amp;gt; rake routes&lt;/p&gt;
&lt;p&gt;foos GET /foos(.:format) {:protocol=&amp;gt;&quot;&lt;a href=
&quot;https://&amp;quot;&quot;&gt;https://&quot;&lt;/a&gt;, :controller=&amp;gt;&quot;foos&quot;,
:action=&amp;gt;&quot;index&quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don't know if this is a different issue than this one, but
figured I'd point it out.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-13T17:42:41+00:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2010-12-13T17:43:02+00:00</updated-at>
      <user-id type="integer">26009</user-id>
      <version type="integer">10</version>
      <user-name>Brian Ploetz</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>What is the status of this ticket? I am also encountering this problem, in that the routing constraint works fine, but the specs fail when they should be passing. I'd like to help fix it if the patch still needs work.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What is the status of this ticket? I am also encountering this
problem, in that the routing constraint works fine, but the specs
fail when they should be passing. I'd like to help fix it if the
patch still needs work.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T20:38:12+00:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2011-02-12T20:38:32+00:00</updated-at>
      <user-id type="integer">133355</user-id>
      <version type="integer">11</version>
      <user-name>Steve Schwartz</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>In terms of testing a constraint against a protocol you have to pass a full url to assert_recognizes, e.g:

@@@ ruby
test &quot;should route to index when using https&quot; do
  assert_recognizes({ :controller =&gt; &quot;foos&quot;, :action =&gt; &quot;index&quot; }, &quot;https://test.host/foos&quot;)
end
@@@

For testing that a route fails to recognize then wrap the assert_recognizes in an assert_raises, e.g.:

@@@ ruby
test &quot;should not route to index when using http&quot; do
  assert_raises(ActionController::RoutingError) do
    assert_recognizes({ :controller =&gt; &quot;foos&quot;, :action =&gt; &quot;index&quot; }, &quot;http://test.host/foos&quot;)
  end
end
@@@

There is an issue with class based constraints as the recognize_path method in ActionDispatch::Routing::RouteSet bypasses the constraints app. However I think I can fix that with a bit of refactoring of ActionDispatch::Routing::Mapper::Constraints so that I can check a constraint without doing a call.

Be aware though this is a functional test method - if there's a dependency in your class based constraint that needs the full application running then you're best off using an integration test, RSpec request spec or Cucumber feature for checking the constraint is working.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In terms of testing a constraint against a protocol you have to
pass a full url to assert_recognizes, e.g:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;test &quot;should route to index when using https&quot; do
  assert_recognizes({ :controller =&amp;gt; &quot;foos&quot;, :action =&amp;gt; &quot;index&quot; }, &quot;https://test.host/foos&quot;)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For testing that a route fails to recognize then wrap the
assert_recognizes in an assert_raises, e.g.:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;test &quot;should not route to index when using http&quot; do
  assert_raises(ActionController::RoutingError) do
    assert_recognizes({ :controller =&amp;gt; &quot;foos&quot;, :action =&amp;gt; &quot;index&quot; }, &quot;http://test.host/foos&quot;)
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;There is an issue with class based constraints as the
recognize_path method in ActionDispatch::Routing::RouteSet bypasses
the constraints app. However I think I can fix that with a bit of
refactoring of ActionDispatch::Routing::Mapper::Constraints so that
I can check a constraint without doing a call.&lt;/p&gt;
&lt;p&gt;Be aware though this is a functional test method - if there's a
dependency in your class based constraint that needs the full
application running then you're best off using an integration test,
RSpec request spec or Cucumber feature for checking the constraint
is working.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-13T16:40:05+00:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2011-02-13T16:40:25+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">12</version>
      <user-name>Andrew White</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-13T16:48:41+00:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2011-02-13T16:49:00+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">13</version>
      <user-name>Andrew White</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>(from [e9ae88af2038f4d29e437a937f2ce63ffd935d5f]) Fix assert_recognizes with block constraints [#5805 state:resolved]
https://github.com/rails/rails/commit/e9ae88af2038f4d29e437a937f2ce63ffd935d5f</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/e9ae88af2038f4d29e437a937f2ce63ffd935d5f&quot;
title=
&quot;Changeset [e9ae88af2038f4d29e437a937f2ce63ffd935d5f]&quot;&gt;[e9ae88af2038f4d29e437a937f2ce63ffd935d5f]&lt;/a&gt;)
Fix assert_recognizes with block constraints [&lt;a href=
&quot;/projects/8994/tickets/5805&quot; title=&quot;Ticket #5805&quot;&gt;#5805&lt;/a&gt;
state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/e9ae88af2038f4d29e437a937f2ce63ffd935d5f&quot;&gt;
https://github.com/rails/rails/commit/e9ae88af2038f4d29e437a937f2ce...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-13T23:41:29+00:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2011-02-13T23:41:48+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">14</version>
      <user-name>Repository</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>(from [385be358cfa80cedff113ba57338e83ca8ac2b52]) Fix assert_recognizes with block constraints [#5805 state:resolved]
https://github.com/rails/rails/commit/385be358cfa80cedff113ba57338e83ca8ac2b52</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/385be358cfa80cedff113ba57338e83ca8ac2b52&quot;
title=
&quot;Changeset [385be358cfa80cedff113ba57338e83ca8ac2b52]&quot;&gt;[385be358cfa80cedff113ba57338e83ca8ac2b52]&lt;/a&gt;)
Fix assert_recognizes with block constraints [&lt;a href=
&quot;/projects/8994/tickets/5805&quot; title=&quot;Ticket #5805&quot;&gt;#5805&lt;/a&gt;
state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/385be358cfa80cedff113ba57338e83ca8ac2b52&quot;&gt;
https://github.com/rails/rails/commit/385be358cfa80cedff113ba57338e...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-13T23:41:32+00:00</created-at>
      <creator-id type="integer">105957</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5805</number>
      <permalink>assert_recognizes-does-not-support-constraints</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[PATCH] assert_recognizes does not support constraints</title>
      <updated-at type="datetime">2011-02-13T23:42:08+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">15</version>
      <user-name>Repository</user-name>
      <creator-name>ms (at budstikka)</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5805</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>abb420eeef66004af0c34aaa21f10e938fc869ca</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-10-15T11:41:15+01:00</created-at>
      <filename>constraints.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">721644</id>
      <size type="integer">1286</size>
      <uploader-id type="integer">105957</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/721644/constraints.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>499b10047c9c0ebdcfc95a99828a54236898928a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-08T13:26:43+00:00</created-at>
      <filename>constraints.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">758373</id>
      <size type="integer">1005</size>
      <uploader-id type="integer">90556</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/758373/constraints.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>7759baf4564b4aa72009fd7e6eda41b873007d6b</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-08T13:37:50+00:00</created-at>
      <filename>constraints.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">758387</id>
      <size type="integer">1745</size>
      <uploader-id type="integer">90556</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/758387/constraints.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>760ccf6f0d78499dd25043127f735c7fac5f1183</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-08T14:02:59+00:00</created-at>
      <filename>constraints-v3.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">758421</id>
      <size type="integer">2876</size>
      <uploader-id type="integer">90556</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/758421/constraints-v3.patch</url>
    </attachment>
  </attachments>
</ticket>
