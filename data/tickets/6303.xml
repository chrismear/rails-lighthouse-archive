<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-18T08:52:31+00:00</created-at>
  <creator-id type="integer">54374</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6303</number>
  <permalink>some-strings-do-not-serializeunserialize-correctly</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;serialize yaml&quot;</tag>
  <title>some strings do not serialize/unserialize correctly</title>
  <updated-at type="datetime">2011-04-19T01:02:11+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">4</version>
  <user-name>rails</user-name>
  <creator-name>alpinegizmo</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6303</url>
  <priority-name nil="true"></priority-name>
  <original-body>I have a serialized field that can contain markdown wiki content. In some cases, saving perfectly ordinary Markdown content will return a YAML::DomainType object, rather than the original string.

For example this markdown document starts with an image and then has a horizontal rule:

@@@
![Rails](http://rubyonrails.org/images/rails.png)
-----
@@@

However, storing this string in a serialized field causes ActiveRecord to return a YAML::DomainType object, rather than the original string. This happens because the test in object_from_yaml that checks whether a String is just a String, or if it is a serialized object, isn't strict enough. This markdown string has a line that starts with --- (which is enough to get ActiveRecord to call YAML::load on the string), and the ! at the beginning looks to the yaml parser like a domaintype specification. 

My proposed fix is to change the test for serialized YAML content from /^---/ to /\A---/.</original-body>
  <latest-body>I have a serialized field that can contain markdown wiki content. In some cases, saving perfectly ordinary Markdown content will return a YAML::DomainType object, rather than the original string.

For example this markdown document starts with an image and then has a horizontal rule:

@@@
![Rails](http://rubyonrails.org/images/rails.png)
-----
@@@

However, storing this string in a serialized field causes ActiveRecord to return a YAML::DomainType object, rather than the original string. This happens because the test in object_from_yaml that checks whether a String is just a String, or if it is a serialized object, isn't strict enough. This markdown string has a line that starts with --- (which is enough to get ActiveRecord to call YAML::load on the string), and the ! at the beginning looks to the yaml parser like a domaintype specification. 

My proposed fix is to change the test for serialized YAML content from /^---/ to /\A---/.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have a serialized field that can contain markdown wiki
content. In some cases, saving perfectly ordinary Markdown content
will return a YAML::DomainType object, rather than the original
string.&lt;/p&gt;
&lt;p&gt;For example this markdown document starts with an image and then
has a horizontal rule:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;![Rails](http://rubyonrails.org/images/rails.png)
-----&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, storing this string in a serialized field causes
ActiveRecord to return a YAML::DomainType object, rather than the
original string. This happens because the test in object_from_yaml
that checks whether a String is just a String, or if it is a
serialized object, isn't strict enough. This markdown string has a
line that starts with --- (which is enough to get ActiveRecord to
call YAML::load on the string), and the ! at the beginning looks to
the yaml parser like a domaintype specification.&lt;/p&gt;
&lt;p&gt;My proposed fix is to change the test for serialized YAML
content from /^---/ to /\A---/.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a serialized field that can contain markdown wiki content. In some cases, saving perfectly ordinary Markdown content will return a YAML::DomainType object, rather than the original string.

For example this markdown document starts with an image and then has a horizontal rule:

@@@
![Rails](http://rubyonrails.org/images/rails.png)
-----
@@@

However, storing this string in a serialized field causes ActiveRecord to return a YAML::DomainType object, rather than the original string. This happens because the test in object_from_yaml that checks whether a String is just a String, or if it is a serialized object, isn't strict enough. This markdown string has a line that starts with --- (which is enough to get ActiveRecord to call YAML::load on the string), and the ! at the beginning looks to the yaml parser like a domaintype specification. 

My proposed fix is to change the test for serialized YAML content from /^---/ to /\A---/.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a serialized field that can contain markdown wiki
content. In some cases, saving perfectly ordinary Markdown content
will return a YAML::DomainType object, rather than the original
string.&lt;/p&gt;
&lt;p&gt;For example this markdown document starts with an image and then
has a horizontal rule:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;![Rails](http://rubyonrails.org/images/rails.png)
-----&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, storing this string in a serialized field causes
ActiveRecord to return a YAML::DomainType object, rather than the
original string. This happens because the test in object_from_yaml
that checks whether a String is just a String, or if it is a
serialized object, isn't strict enough. This markdown string has a
line that starts with --- (which is enough to get ActiveRecord to
call YAML::load on the string), and the ! at the beginning looks to
the yaml parser like a domaintype specification.&lt;/p&gt;
&lt;p&gt;My proposed fix is to change the test for serialized YAML
content from /^---/ to /\A---/.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-17T20:40:24+00:00</created-at>
      <creator-id type="integer">54374</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6303</number>
      <permalink>some-strings-do-not-serializeunserialize-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;serialize yaml&quot;</tag>
      <title>some strings do not serialize/unserialize correctly</title>
      <updated-at type="datetime">2011-01-17T20:40:28+00:00</updated-at>
      <user-id type="integer">54374</user-id>
      <version type="integer">1</version>
      <user-name>alpinegizmo</user-name>
      <creator-name>alpinegizmo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6303</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Party dresses are a whole genre of &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-vneck-wedding-dresses-11&quot;&gt;V-neck wedding dresses&lt;/a&gt;&lt;/b&gt; that include all the dresses you could possibly need to look drop dead gorgeous at any bash. &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-evening-dresses-45&quot;&gt;Evening Dresses&lt;/a&gt;&lt;/b&gt;, cocktail dresses, prom gown, homecoming dresses, &lt;b&gt;&lt;a href=&quot;http://www.bridalgownsinlove.com/cheap-cocktail-dresses-46&quot;&gt;Cocktail Dresses&lt;/a&gt;&lt;/b&gt;, sun dress, wrap dress and so much more! The list is virtually inexhaustible!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Party dresses are a whole genre of &lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-vneck-wedding-dresses-11&quot;&gt;V-neck
wedding dresses&lt;/a&gt;&lt;/b&gt; that include all the dresses you could
possibly need to look drop dead gorgeous at any bash. &lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-evening-dresses-45&quot;&gt;Evening
Dresses&lt;/a&gt;&lt;/b&gt;, cocktail dresses, prom gown, homecoming dresses,
&lt;b&gt;&lt;a href=
&quot;http://www.bridalgownsinlove.com/cheap-cocktail-dresses-46&quot;&gt;Cocktail
Dresses&lt;/a&gt;&lt;/b&gt;, sun dress, wrap dress and so much more! The list
is virtually inexhaustible!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-18T08:28:07+00:00</created-at>
      <creator-id type="integer">54374</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6303</number>
      <permalink>some-strings-do-not-serializeunserialize-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;serialize yaml&quot;</tag>
      <title>some strings do not serialize/unserialize correctly</title>
      <updated-at type="datetime">2011-01-18T08:52:31+00:00</updated-at>
      <user-id type="integer">133048</user-id>
      <version type="integer">2</version>
      <user-name>mary01</user-name>
      <creator-name>alpinegizmo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6303</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-19T01:00:14+01:00</created-at>
      <creator-id type="integer">54374</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6303</number>
      <permalink>some-strings-do-not-serializeunserialize-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;serialize yaml&quot;</tag>
      <title>some strings do not serialize/unserialize correctly</title>
      <updated-at type="datetime">2011-04-19T01:01:58+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>alpinegizmo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6303</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-19T01:00:14+01:00</created-at>
      <creator-id type="integer">54374</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6303</number>
      <permalink>some-strings-do-not-serializeunserialize-correctly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;serialize yaml&quot;</tag>
      <title>some strings do not serialize/unserialize correctly</title>
      <updated-at type="datetime">2011-04-19T01:02:11+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>alpinegizmo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6303</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1438aae0a319e90cf9c966dc8f89720f79163b8a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-01-17T20:40:24+00:00</created-at>
      <filename>object_from_yaml.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">864929</id>
      <size type="integer">1177</size>
      <uploader-id type="integer">54374</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/864929/object_from_yaml.diff</url>
    </attachment>
  </attachments>
</ticket>
