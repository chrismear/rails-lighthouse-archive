From 881f7938d69291fb7fbc7a89234e6637161bda14 Mon Sep 17 00:00:00 2001
From: Jakob Skjerning <jakob@mentalized.net>
Date: Sun, 3 Apr 2011 11:42:50 +0200
Subject: [PATCH] update_attributes now accepts a block in addition to attributes hash

---
 activerecord/lib/active_record/persistence.rb |   10 +++++++++
 activerecord/test/cases/persistence_test.rb   |   28 +++++++++++++++++++++++++
 2 files changed, 38 insertions(+), 0 deletions(-)

diff --git a/activerecord/lib/active_record/persistence.rb b/activerecord/lib/active_record/persistence.rb
index a916c88..1e9cf48 100644
--- a/activerecord/lib/active_record/persistence.rb
+++ b/activerecord/lib/active_record/persistence.rb
@@ -136,11 +136,21 @@ module ActiveRecord
     # Updates the attributes of the model from the passed-in hash and saves the
     # record, all wrapped in a transaction. If the object is invalid, the saving
     # will fail and false will be returned.
+    #
+    # ==== Examples
+    #   # Updates object
+    #   user.update_attributes(:first_name => 'Jamie')
+    #
+    #   # Updates object and passes it into a block to set other attributes.
+    #   user.update_attributes(:first_name => 'Jamie') do |u|
+    #     u.is_admin = false
+    #   end
     def update_attributes(attributes)
       # The following transaction covers any possible database side-effects of the
       # attributes assignment. For example, setting the IDs of a child collection.
       with_transaction_returning_status do
         self.attributes = attributes
+        yield(self) if block_given?
         save
       end
     end
diff --git a/activerecord/test/cases/persistence_test.rb b/activerecord/test/cases/persistence_test.rb
index 9aa13f0..c2643a2 100644
--- a/activerecord/test/cases/persistence_test.rb
+++ b/activerecord/test/cases/persistence_test.rb
@@ -512,6 +512,34 @@ class PersistencesTest < ActiveRecord::TestCase
     Reply.reset_callbacks(:validate)
   end
 
+  def test_update_attributes_with_block
+    company = Company.find(1)
+    assert_equal "37signals", company.name
+    assert_equal 1, company.rating
+
+    company.update_attributes(:name => '37signals, LLC') do |c|
+      c.rating = 37
+    end
+
+    company.reload
+    assert_equal "37signals, LLC", company.name
+    assert_equal 37, company.rating
+  end
+
+  def test_update_attributes!_with_block
+    company = Company.find(1)
+    assert_equal "37signals", company.name
+    assert_equal 1, company.rating
+
+    company.update_attributes!(:name => '37signals, LLC') do |c|
+      c.rating = 37
+    end
+
+    company.reload
+    assert_equal "37signals, LLC", company.name
+    assert_equal 37, company.rating
+  end
+
   def test_destroyed_returns_boolean
     developer = Developer.first
     assert_equal false, developer.destroyed?
-- 
1.7.4.1

