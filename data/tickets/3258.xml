<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-25T15:09:21+01:00</created-at>
  <creator-id type="integer">71024</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3258</number>
  <permalink>chained-polymorphic-association-many-to-many-not-working-on-activerecord-append</permalink>
  <priority type="integer">150553</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord polymorphic rails</tag>
  <title>Chained Polymorphic Association (Many-to-Many) not working on ActiveRecord append</title>
  <updated-at type="datetime">2010-10-06T06:42:05+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">3</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>swoolley</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3258</url>
  <priority-name nil="true"></priority-name>
  <original-body>I have a chained polymorphic association on two many-to-many relationships.
I am using Ruby 1.8.7
I am using Rails 2.3.4
I am using ActiveRecord 2.3.4
I have the following relationship:

GROUP
  |
  &gt;- GROUPABILITY (polymorphic)
  |
 TAG
  |
  &gt;- TAGABILITY (polymorphic)
  |
CONTACT

The idea is a CONTACT can have many TAGS and a TAG can belong to many GROUPS. Because I plan to use both TAGS and GROUPS in more creative ways is why I want them to be a polymorphic association.

================
Models:
================

class Group &lt; ActiveRecord::Base
  has_many    :groupabilities
  has_many    :tags, :through =&gt; :groupabilities,
              :source =&gt; :tag,
              :conditions =&gt; &quot;groupabilities.groupable_type = 'Tag'&quot;  
end

class Groupability &lt; ActiveRecord::Base
  belongs_to  :group
  belongs_to  :groupable, :polymorphic =&gt; true
  
  belongs_to  :tag, :class_name =&gt; &quot;Tag&quot;,
        :foreign_key =&gt; &quot;groupable_id&quot;
end

class Tag &lt; ActiveRecord::Base
  has_many    :groupabilities, :as =&gt; :groupable
  has_many    :groups, :through =&gt; :groupabilities
  
  has_many    :tagabilities
  has_many    :contacts, :through =&gt; :tagabilities,
              :source =&gt; :contact,
              :conditions =&gt; &quot;tagabilities.tagable_type = 'Contact'&quot;
end

class Tagability &lt; ActiveRecord::Base
  belongs_to  :tag
  belongs_to  :tagable, :polymorphic =&gt; true
  
  belongs_to  :contact, :class_name =&gt; &quot;Contact&quot;,
        :foreign_key =&gt; &quot;tagable_id&quot;
  
end

class Contact &lt; ActiveRecord::Base
  has_many    :tagabilities, :as =&gt; :tagable
  has_many    :tags, :through =&gt; :tagabilities
end

================
DB:
================
class CreateGroups &lt; ActiveRecord::Migration
  def self.up
    create_table :groups do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :groups
  end
end

class CreateTags &lt; ActiveRecord::Migration
  def self.up
    create_table :tags do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :tags
  end
end

class CreateContacts &lt; ActiveRecord::Migration
  def self.up
    create_table :contacts do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :contacts
  end
end

class CreateTagabilities &lt; ActiveRecord::Migration
  def self.up
    create_table :tagabilities do |t|
      t.integer   :tagable_id
      t.string    :tagable_type
      t.integer   :tag_id
      t.timestamps
    end
  end

  def self.down
    drop_table :tagabilities
  end
end

class CreateGroupabilities &lt; ActiveRecord::Migration
  def self.up
    create_table :groupabilities do |t|
      t.integer   :groupable_id
      t.string    :groupable_type
      t.integer   :group_id
      t.timestamps
    end
  end

  def self.down
    drop_table :groupabilities
  end
end

====================
Console
====================
Loading development environment (Rails 2.3.2)
&gt;&gt; c = Contact.create(:name =&gt; &quot;First Contact&quot;)
=&gt; #&lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&gt;

&gt;&gt; t = Tag.create(:name =&gt; &quot;First Tag&quot;)
=&gt; #&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;

&gt;&gt; g = Group.create(:name =&gt; &quot;First Group&quot;)
=&gt; #&lt;Group id: 1, name: &quot;First Group&quot;, created_at: &quot;2009-09-25 13:05:55&quot;, updated_at: &quot;2009-09-25 13:05:55&quot;&gt;

&gt;&gt; c.tags
=&gt; []

&gt;&gt; c.tags &lt;&lt; t
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; c.tags
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; t.contacts
=&gt; [#&lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&gt;]

&gt;&gt; g.tags
=&gt; []

&gt;&gt; t.groups
=&gt; []

&gt;&gt; g.tags &lt;&lt; t
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; g.tags
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; t.groups
=&gt; []

&gt;&gt; Groupability.all
=&gt; [#&lt;Groupability id: 1, groupable_id: 1, groupable_type: nil, group_id: 1, created_at: &quot;2009-09-25 13:10:30&quot;, updated_at: &quot;2009-09-25 13:10:30&quot;&gt;]


====================================
The problem is that PER THE LAST LINE OF CONSOLE, groupable_type is not being set. It should be set to &quot;Tag&quot;. If I manually set the groupable_type to &quot;Tag&quot; everything works beautifully.

I have tried this in a variety of ways but it seems to be related to the fact that this is a chained polymorphic association.</original-body>
  <latest-body>I have a chained polymorphic association on two many-to-many relationships.
I am using Ruby 1.8.7
I am using Rails 2.3.4
I am using ActiveRecord 2.3.4
I have the following relationship:

GROUP
  |
  &gt;- GROUPABILITY (polymorphic)
  |
 TAG
  |
  &gt;- TAGABILITY (polymorphic)
  |
CONTACT

The idea is a CONTACT can have many TAGS and a TAG can belong to many GROUPS. Because I plan to use both TAGS and GROUPS in more creative ways is why I want them to be a polymorphic association.

================
Models:
================

class Group &lt; ActiveRecord::Base
  has_many    :groupabilities
  has_many    :tags, :through =&gt; :groupabilities,
              :source =&gt; :tag,
              :conditions =&gt; &quot;groupabilities.groupable_type = 'Tag'&quot;  
end

class Groupability &lt; ActiveRecord::Base
  belongs_to  :group
  belongs_to  :groupable, :polymorphic =&gt; true
  
  belongs_to  :tag, :class_name =&gt; &quot;Tag&quot;,
        :foreign_key =&gt; &quot;groupable_id&quot;
end

class Tag &lt; ActiveRecord::Base
  has_many    :groupabilities, :as =&gt; :groupable
  has_many    :groups, :through =&gt; :groupabilities
  
  has_many    :tagabilities
  has_many    :contacts, :through =&gt; :tagabilities,
              :source =&gt; :contact,
              :conditions =&gt; &quot;tagabilities.tagable_type = 'Contact'&quot;
end

class Tagability &lt; ActiveRecord::Base
  belongs_to  :tag
  belongs_to  :tagable, :polymorphic =&gt; true
  
  belongs_to  :contact, :class_name =&gt; &quot;Contact&quot;,
        :foreign_key =&gt; &quot;tagable_id&quot;
  
end

class Contact &lt; ActiveRecord::Base
  has_many    :tagabilities, :as =&gt; :tagable
  has_many    :tags, :through =&gt; :tagabilities
end

================
DB:
================
class CreateGroups &lt; ActiveRecord::Migration
  def self.up
    create_table :groups do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :groups
  end
end

class CreateTags &lt; ActiveRecord::Migration
  def self.up
    create_table :tags do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :tags
  end
end

class CreateContacts &lt; ActiveRecord::Migration
  def self.up
    create_table :contacts do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :contacts
  end
end

class CreateTagabilities &lt; ActiveRecord::Migration
  def self.up
    create_table :tagabilities do |t|
      t.integer   :tagable_id
      t.string    :tagable_type
      t.integer   :tag_id
      t.timestamps
    end
  end

  def self.down
    drop_table :tagabilities
  end
end

class CreateGroupabilities &lt; ActiveRecord::Migration
  def self.up
    create_table :groupabilities do |t|
      t.integer   :groupable_id
      t.string    :groupable_type
      t.integer   :group_id
      t.timestamps
    end
  end

  def self.down
    drop_table :groupabilities
  end
end

====================
Console
====================
Loading development environment (Rails 2.3.2)
&gt;&gt; c = Contact.create(:name =&gt; &quot;First Contact&quot;)
=&gt; #&lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&gt;

&gt;&gt; t = Tag.create(:name =&gt; &quot;First Tag&quot;)
=&gt; #&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;

&gt;&gt; g = Group.create(:name =&gt; &quot;First Group&quot;)
=&gt; #&lt;Group id: 1, name: &quot;First Group&quot;, created_at: &quot;2009-09-25 13:05:55&quot;, updated_at: &quot;2009-09-25 13:05:55&quot;&gt;

&gt;&gt; c.tags
=&gt; []

&gt;&gt; c.tags &lt;&lt; t
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; c.tags
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; t.contacts
=&gt; [#&lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&gt;]

&gt;&gt; g.tags
=&gt; []

&gt;&gt; t.groups
=&gt; []

&gt;&gt; g.tags &lt;&lt; t
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; g.tags
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; t.groups
=&gt; []

&gt;&gt; Groupability.all
=&gt; [#&lt;Groupability id: 1, groupable_id: 1, groupable_type: nil, group_id: 1, created_at: &quot;2009-09-25 13:10:30&quot;, updated_at: &quot;2009-09-25 13:10:30&quot;&gt;]


====================================
The problem is that PER THE LAST LINE OF CONSOLE, groupable_type is not being set. It should be set to &quot;Tag&quot;. If I manually set the groupable_type to &quot;Tag&quot; everything works beautifully.

I have tried this in a variety of ways but it seems to be related to the fact that this is a chained polymorphic association.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have a chained polymorphic association on two many-to-many
relationships.&lt;br&gt;
I am using Ruby 1.8.7&lt;br&gt;
I am using Rails 2.3.4&lt;br&gt;
I am using ActiveRecord 2.3.4&lt;br&gt;
I have the following relationship:&lt;/p&gt;
&lt;p&gt;GROUP&lt;br&gt;
| &amp;gt;- GROUPABILITY (polymorphic) | TAG | &amp;gt;- TAGABILITY
(polymorphic) | CONTACT&lt;/p&gt;
&lt;p&gt;The idea is a CONTACT can have many TAGS and a TAG can belong to
many GROUPS. Because I plan to use both TAGS and GROUPS in more
creative ways is why I want them to be a polymorphic
association.&lt;/p&gt;
&lt;p&gt;================&lt;/p&gt;
&lt;h1&gt;Models:&lt;/h1&gt;
&lt;p&gt;class Group &amp;lt; ActiveRecord::Base&lt;br&gt;
has_many :groupabilities has_many :tags, :through =&amp;gt;
:groupabilities,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;          :source =&amp;gt; :tag,
          :conditions =&amp;gt; &quot;groupabilities.groupable_type = 'Tag'&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class Groupability &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :group belongs_to :groupable, :polymorphic =&amp;gt;
true&lt;/p&gt;
&lt;p&gt;belongs_to :tag, :class_name =&amp;gt; &quot;Tag&quot;,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    :foreign_key =&amp;gt; &quot;groupable_id&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class Tag &amp;lt; ActiveRecord::Base&lt;br&gt;
has_many :groupabilities, :as =&amp;gt; :groupable has_many :groups,
:through =&amp;gt; :groupabilities&lt;/p&gt;
&lt;p&gt;has_many :tagabilities has_many :contacts, :through =&amp;gt;
:tagabilities,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;          :source =&amp;gt; :contact,
          :conditions =&amp;gt; &quot;tagabilities.tagable_type = 'Contact'&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class Tagability &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :tag belongs_to :tagable, :polymorphic =&amp;gt; true&lt;/p&gt;
&lt;p&gt;belongs_to :contact, :class_name =&amp;gt; &quot;Contact&quot;,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    :foreign_key =&amp;gt; &quot;tagable_id&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;class Contact &amp;lt; ActiveRecord::Base&lt;br&gt;
has_many :tagabilities, :as =&amp;gt; :tagable has_many :tags, :through
=&amp;gt; :tagabilities end&lt;/p&gt;
&lt;p&gt;================&lt;/p&gt;
&lt;h1&gt;DB:&lt;/h1&gt;
&lt;p&gt;class CreateGroups &amp;lt; ActiveRecord::Migration&lt;br&gt;
def self.up&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_table :groups do |t|
  t.string :name
  t.timestamps
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;def self.down&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;drop_table :groups&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;class CreateTags &amp;lt; ActiveRecord::Migration&lt;br&gt;
def self.up&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_table :tags do |t|
  t.string :name
  t.timestamps
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;def self.down&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;drop_table :tags&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;class CreateContacts &amp;lt; ActiveRecord::Migration&lt;br&gt;
def self.up&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_table :contacts do |t|
  t.string :name
  t.timestamps
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;def self.down&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;drop_table :contacts&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;class CreateTagabilities &amp;lt; ActiveRecord::Migration&lt;br&gt;
def self.up&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_table :tagabilities do |t|
  t.integer   :tagable_id
  t.string    :tagable_type
  t.integer   :tag_id
  t.timestamps
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;def self.down&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;drop_table :tagabilities&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;class CreateGroupabilities &amp;lt; ActiveRecord::Migration&lt;br&gt;
def self.up&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;create_table :groupabilities do |t|
  t.integer   :groupable_id
  t.string    :groupable_type
  t.integer   :group_id
  t.timestamps
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;def self.down&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;drop_table :groupabilities&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;====================&lt;/p&gt;
&lt;h1&gt;Console&lt;/h1&gt;
&lt;p&gt;Loading development environment (Rails 2.3.2)&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;c = Contact.create(:name =&amp;gt; &quot;First Contact&quot;) =&amp;gt; #&lt;/p&gt;
&lt;p&gt;t = Tag.create(:name =&amp;gt; &quot;First Tag&quot;) =&amp;gt; #&lt;/p&gt;
&lt;p&gt;g = Group.create(:name =&amp;gt; &quot;First Group&quot;) =&amp;gt; #&lt;/p&gt;
&lt;p&gt;c.tags =&amp;gt; []&lt;/p&gt;
&lt;p&gt;c.tags &amp;lt;&amp;lt; t =&amp;gt; [#]&lt;/p&gt;
&lt;p&gt;c.tags =&amp;gt; [#]&lt;/p&gt;
&lt;p&gt;t.contacts =&amp;gt; [#]&lt;/p&gt;
&lt;p&gt;g.tags =&amp;gt; []&lt;/p&gt;
&lt;p&gt;t.groups =&amp;gt; []&lt;/p&gt;
&lt;p&gt;g.tags &amp;lt;&amp;lt; t =&amp;gt; [#]&lt;/p&gt;
&lt;p&gt;g.tags =&amp;gt; [#]&lt;/p&gt;
&lt;p&gt;t.groups =&amp;gt; []&lt;/p&gt;
&lt;p&gt;Groupability.all =&amp;gt; [#]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;==================================== The problem is that PER THE
LAST LINE OF CONSOLE, groupable_type is not being set. It should be
set to &quot;Tag&quot;. If I manually set the groupable_type to &quot;Tag&quot;
everything works beautifully.&lt;/p&gt;
&lt;p&gt;I have tried this in a variety of ways but it seems to be
related to the fact that this is a chained polymorphic
association.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a chained polymorphic association on two many-to-many relationships.
I am using Ruby 1.8.7
I am using Rails 2.3.4
I am using ActiveRecord 2.3.4
I have the following relationship:

@@@
GROUP
  |
  &gt;- GROUPABILITY (polymorphic)
  |
 TAG
  |
  &gt;- TAGABILITY (polymorphic)
  |
CONTACT
@@@

The idea is a CONTACT can have many TAGS and a TAG can belong to many GROUPS. Because I plan to use both TAGS and GROUPS in more creative ways is why I want them to be a polymorphic association.


## Models ##
@@@
class Group &lt; ActiveRecord::Base
  has_many    :groupabilities
  has_many    :tags, :through =&gt; :groupabilities,
              :source =&gt; :tag,
              :conditions =&gt; &quot;groupabilities.groupable_type = 'Tag'&quot;  
end

class Groupability &lt; ActiveRecord::Base
  belongs_to  :group
  belongs_to  :groupable, :polymorphic =&gt; true
  
  belongs_to  :tag, :class_name =&gt; &quot;Tag&quot;,
        :foreign_key =&gt; &quot;groupable_id&quot;
end

class Tag &lt; ActiveRecord::Base
  has_many    :groupabilities, :as =&gt; :groupable
  has_many    :groups, :through =&gt; :groupabilities
  
  has_many    :tagabilities
  has_many    :contacts, :through =&gt; :tagabilities,
              :source =&gt; :contact,
              :conditions =&gt; &quot;tagabilities.tagable_type = 'Contact'&quot;
end

class Tagability &lt; ActiveRecord::Base
  belongs_to  :tag
  belongs_to  :tagable, :polymorphic =&gt; true
  
  belongs_to  :contact, :class_name =&gt; &quot;Contact&quot;,
        :foreign_key =&gt; &quot;tagable_id&quot;
  
end

class Contact &lt; ActiveRecord::Base
  has_many    :tagabilities, :as =&gt; :tagable
  has_many    :tags, :through =&gt; :tagabilities
end
@@@
## DB ##
@@@
class CreateGroups &lt; ActiveRecord::Migration
  def self.up
    create_table :groups do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :groups
  end
end

class CreateTags &lt; ActiveRecord::Migration
  def self.up
    create_table :tags do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :tags
  end
end

class CreateContacts &lt; ActiveRecord::Migration
  def self.up
    create_table :contacts do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :contacts
  end
end

class CreateTagabilities &lt; ActiveRecord::Migration
  def self.up
    create_table :tagabilities do |t|
      t.integer   :tagable_id
      t.string    :tagable_type
      t.integer   :tag_id
      t.timestamps
    end
  end

  def self.down
    drop_table :tagabilities
  end
end

class CreateGroupabilities &lt; ActiveRecord::Migration
  def self.up
    create_table :groupabilities do |t|
      t.integer   :groupable_id
      t.string    :groupable_type
      t.integer   :group_id
      t.timestamps
    end
  end

  def self.down
    drop_table :groupabilities
  end
end
@@@
## Console ##
@@@
Loading development environment (Rails 2.3.2)
&gt;&gt; c = Contact.create(:name =&gt; &quot;First Contact&quot;)
=&gt; #&lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&gt;

&gt;&gt; t = Tag.create(:name =&gt; &quot;First Tag&quot;)
=&gt; #&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;

&gt;&gt; g = Group.create(:name =&gt; &quot;First Group&quot;)
=&gt; #&lt;Group id: 1, name: &quot;First Group&quot;, created_at: &quot;2009-09-25 13:05:55&quot;, updated_at: &quot;2009-09-25 13:05:55&quot;&gt;

&gt;&gt; c.tags
=&gt; []

&gt;&gt; c.tags &lt;&lt; t
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; c.tags
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; t.contacts
=&gt; [#&lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&gt;]

&gt;&gt; g.tags
=&gt; []

&gt;&gt; t.groups
=&gt; []

&gt;&gt; g.tags &lt;&lt; t
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; g.tags
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; t.groups
=&gt; []

&gt;&gt; Groupability.all
=&gt; [#&lt;Groupability id: 1, groupable_id: 1, groupable_type: nil, group_id: 1, created_at: &quot;2009-09-25 13:10:30&quot;, updated_at: &quot;2009-09-25 13:10:30&quot;&gt;]
@@@

## Problem ##
The problem is that PER THE LAST LINE OF CONSOLE, groupable_type is not being set. It should be set to &quot;Tag&quot;. If I manually set the groupable_type to &quot;Tag&quot; everything works beautifully.

I have tried this in a variety of ways but it seems to be related to the fact that this is a chained polymorphic association.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a chained polymorphic association on two many-to-many
relationships.&lt;br&gt;
I am using Ruby 1.8.7&lt;br&gt;
I am using Rails 2.3.4&lt;br&gt;
I am using ActiveRecord 2.3.4&lt;br&gt;
I have the following relationship:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;GROUP
  |
  &amp;gt;- GROUPABILITY (polymorphic)
  |
 TAG
  |
  &amp;gt;- TAGABILITY (polymorphic)
  |
CONTACT&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The idea is a CONTACT can have many TAGS and a TAG can belong to
many GROUPS. Because I plan to use both TAGS and GROUPS in more
creative ways is why I want them to be a polymorphic
association.&lt;/p&gt;
&lt;h2&gt;Models&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;class Group &amp;lt; ActiveRecord::Base
  has_many    :groupabilities
  has_many    :tags, :through =&amp;gt; :groupabilities,
              :source =&amp;gt; :tag,
              :conditions =&amp;gt; &quot;groupabilities.groupable_type = 'Tag'&quot;  
end

class Groupability &amp;lt; ActiveRecord::Base
  belongs_to  :group
  belongs_to  :groupable, :polymorphic =&amp;gt; true
  
  belongs_to  :tag, :class_name =&amp;gt; &quot;Tag&quot;,
        :foreign_key =&amp;gt; &quot;groupable_id&quot;
end

class Tag &amp;lt; ActiveRecord::Base
  has_many    :groupabilities, :as =&amp;gt; :groupable
  has_many    :groups, :through =&amp;gt; :groupabilities
  
  has_many    :tagabilities
  has_many    :contacts, :through =&amp;gt; :tagabilities,
              :source =&amp;gt; :contact,
              :conditions =&amp;gt; &quot;tagabilities.tagable_type = 'Contact'&quot;
end

class Tagability &amp;lt; ActiveRecord::Base
  belongs_to  :tag
  belongs_to  :tagable, :polymorphic =&amp;gt; true
  
  belongs_to  :contact, :class_name =&amp;gt; &quot;Contact&quot;,
        :foreign_key =&amp;gt; &quot;tagable_id&quot;
  
end

class Contact &amp;lt; ActiveRecord::Base
  has_many    :tagabilities, :as =&amp;gt; :tagable
  has_many    :tags, :through =&amp;gt; :tagabilities
end&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;DB&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;class CreateGroups &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :groups do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :groups
  end
end

class CreateTags &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :tags do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :tags
  end
end

class CreateContacts &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :contacts do |t|
      t.string :name
      t.timestamps
    end
  end

  def self.down
    drop_table :contacts
  end
end

class CreateTagabilities &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :tagabilities do |t|
      t.integer   :tagable_id
      t.string    :tagable_type
      t.integer   :tag_id
      t.timestamps
    end
  end

  def self.down
    drop_table :tagabilities
  end
end

class CreateGroupabilities &amp;lt; ActiveRecord::Migration
  def self.up
    create_table :groupabilities do |t|
      t.integer   :groupable_id
      t.string    :groupable_type
      t.integer   :group_id
      t.timestamps
    end
  end

  def self.down
    drop_table :groupabilities
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Console&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;Loading development environment (Rails 2.3.2)
&amp;gt;&amp;gt; c = Contact.create(:name =&amp;gt; &quot;First Contact&quot;)
=&amp;gt; #&amp;lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&amp;gt;

&amp;gt;&amp;gt; t = Tag.create(:name =&amp;gt; &quot;First Tag&quot;)
=&amp;gt; #&amp;lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&amp;gt;

&amp;gt;&amp;gt; g = Group.create(:name =&amp;gt; &quot;First Group&quot;)
=&amp;gt; #&amp;lt;Group id: 1, name: &quot;First Group&quot;, created_at: &quot;2009-09-25 13:05:55&quot;, updated_at: &quot;2009-09-25 13:05:55&quot;&amp;gt;

&amp;gt;&amp;gt; c.tags
=&amp;gt; []

&amp;gt;&amp;gt; c.tags &amp;lt;&amp;lt; t
=&amp;gt; [#&amp;lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&amp;gt;]

&amp;gt;&amp;gt; c.tags
=&amp;gt; [#&amp;lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&amp;gt;]

&amp;gt;&amp;gt; t.contacts
=&amp;gt; [#&amp;lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&amp;gt;]

&amp;gt;&amp;gt; g.tags
=&amp;gt; []

&amp;gt;&amp;gt; t.groups
=&amp;gt; []

&amp;gt;&amp;gt; g.tags &amp;lt;&amp;lt; t
=&amp;gt; [#&amp;lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&amp;gt;]

&amp;gt;&amp;gt; g.tags
=&amp;gt; [#&amp;lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&amp;gt;]

&amp;gt;&amp;gt; t.groups
=&amp;gt; []

&amp;gt;&amp;gt; Groupability.all
=&amp;gt; [#&amp;lt;Groupability id: 1, groupable_id: 1, groupable_type: nil, group_id: 1, created_at: &quot;2009-09-25 13:10:30&quot;, updated_at: &quot;2009-09-25 13:10:30&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;The problem is that PER THE LAST LINE OF CONSOLE, groupable_type
is not being set. It should be set to &quot;Tag&quot;. If I manually set the
groupable_type to &quot;Tag&quot; everything works beautifully.&lt;/p&gt;
&lt;p&gt;I have tried this in a variety of ways but it seems to be
related to the fact that this is a chained polymorphic
association.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-25T15:09:21+01:00</created-at>
      <creator-id type="integer">71024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3258</number>
      <permalink>chained-polymorphic-association-many-to-many-not-working-on-activerecord-append</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord polymorphic rails</tag>
      <title>Chained Polymorphic Association (Many-to-Many) not working on ActiveRecord append</title>
      <updated-at type="datetime">2009-09-26T14:19:38+01:00</updated-at>
      <user-id type="integer">71024</user-id>
      <version type="integer">1</version>
      <user-name>swoolley</user-name>
      <creator-name>swoolley</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3258</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Reformatting Console output for visibility:

@@@
Loading development environment (Rails 2.3.2)
&gt;&gt; c = Contact.create(:name =&gt; &quot;First Contact&quot;)
=&gt; #&lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&gt;

&gt;&gt; t = Tag.create(:name =&gt; &quot;First Tag&quot;)
=&gt; #&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;

&gt;&gt; g = Group.create(:name =&gt; &quot;First Group&quot;)
=&gt; #&lt;Group id: 1, name: &quot;First Group&quot;, created_at: &quot;2009-09-25 13:05:55&quot;, updated_at: &quot;2009-09-25 13:05:55&quot;&gt;

&gt;&gt; c.tags
=&gt; []

&gt;&gt; c.tags &lt;&lt; t
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; c.tags
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; t.contacts
=&gt; [#&lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&gt;]

&gt;&gt; g.tags
=&gt; []

&gt;&gt; t.groups
=&gt; []

&gt;&gt; g.tags &lt;&lt; t
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; g.tags
=&gt; [#&lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&gt;]

&gt;&gt; t.groups
=&gt; []

&gt;&gt; Groupability.all
=&gt; [#&lt;Groupability id: 1, groupable_id: 1, groupable_type: nil, group_id: 1, created_at: &quot;2009-09-25 13:10:30&quot;, updated_at: &quot;2009-09-25 13:10:30&quot;&gt;]

@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Reformatting Console output for visibility:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Loading development environment (Rails 2.3.2)
&amp;gt;&amp;gt; c = Contact.create(:name =&amp;gt; &quot;First Contact&quot;)
=&amp;gt; #&amp;lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&amp;gt;

&amp;gt;&amp;gt; t = Tag.create(:name =&amp;gt; &quot;First Tag&quot;)
=&amp;gt; #&amp;lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&amp;gt;

&amp;gt;&amp;gt; g = Group.create(:name =&amp;gt; &quot;First Group&quot;)
=&amp;gt; #&amp;lt;Group id: 1, name: &quot;First Group&quot;, created_at: &quot;2009-09-25 13:05:55&quot;, updated_at: &quot;2009-09-25 13:05:55&quot;&amp;gt;

&amp;gt;&amp;gt; c.tags
=&amp;gt; []

&amp;gt;&amp;gt; c.tags &amp;lt;&amp;lt; t
=&amp;gt; [#&amp;lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&amp;gt;]

&amp;gt;&amp;gt; c.tags
=&amp;gt; [#&amp;lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&amp;gt;]

&amp;gt;&amp;gt; t.contacts
=&amp;gt; [#&amp;lt;Contact id: 1, name: &quot;First Contact&quot;, created_at: &quot;2009-09-25 13:05:06&quot;, updated_at: &quot;2009-09-25 13:05:06&quot;&amp;gt;]

&amp;gt;&amp;gt; g.tags
=&amp;gt; []

&amp;gt;&amp;gt; t.groups
=&amp;gt; []

&amp;gt;&amp;gt; g.tags &amp;lt;&amp;lt; t
=&amp;gt; [#&amp;lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&amp;gt;]

&amp;gt;&amp;gt; g.tags
=&amp;gt; [#&amp;lt;Tag id: 1, name: &quot;First Tag&quot;, created_at: &quot;2009-09-25 13:05:31&quot;, updated_at: &quot;2009-09-25 13:05:31&quot;&amp;gt;]

&amp;gt;&amp;gt; t.groups
=&amp;gt; []

&amp;gt;&amp;gt; Groupability.all
=&amp;gt; [#&amp;lt;Groupability id: 1, groupable_id: 1, groupable_type: nil, group_id: 1, created_at: &quot;2009-09-25 13:10:30&quot;, updated_at: &quot;2009-09-25 13:10:30&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-25T15:13:35+01:00</created-at>
      <creator-id type="integer">71024</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3258</number>
      <permalink>chained-polymorphic-association-many-to-many-not-working-on-activerecord-append</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord polymorphic rails</tag>
      <title>Chained Polymorphic Association (Many-to-Many) not working on ActiveRecord append</title>
      <updated-at type="datetime">2009-09-25T15:13:37+01:00</updated-at>
      <user-id type="integer">71024</user-id>
      <version type="integer">2</version>
      <user-name>swoolley</user-name>
      <creator-name>swoolley</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3258</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T06:42:02+01:00</created-at>
      <creator-id type="integer">71024</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3258</number>
      <permalink>chained-polymorphic-association-many-to-many-not-working-on-activerecord-append</permalink>
      <priority type="integer">150553</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord polymorphic rails</tag>
      <title>Chained Polymorphic Association (Many-to-Many) not working on ActiveRecord append</title>
      <updated-at type="datetime">2010-10-06T06:42:05+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>swoolley</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3258</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
