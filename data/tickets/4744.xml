<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">7697</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-01T14:25:52+01:00</created-at>
  <creator-id type="integer">16349</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4744</number>
  <permalink>activerecord-uses-wrong-class-for-has_many-association</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.3.5 activerecord associations</tag>
  <title>ActiveRecord uses wrong class for has_many association</title>
  <updated-at type="datetime">2010-10-07T05:21:21+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">10</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Marco Otte-Witte</creator-name>
  <assigned-user-name>Andrew White</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4744</url>
  <priority-name>Low</priority-name>
  <original-body>When I use the reportable gem (which defines a class named &quot;Saulabs::Reportable::Report&quot;) in a Rails (2.3.5) project that itself defines a &quot;Report&quot; model and an &quot;Account&quot; model that

    has_many :reports

I get the error

    undefined method `quoted_table_name' for Saulabs::Reportable::Report:Class

    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/reflection.rb:187:in `quoted_table_name'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/has_many_association.rb:97:in `construct_sql'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:21:in `initialize'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1300:in `new'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1300:in `reports'
    /Users/marcoow/tstapp/app/views/accounts/index.html.erb:11:in `_run_erb_app47views47accounts47index46html46erb'
    /Users/marcoow/tstapp/app/views/accounts/index.html.erb:8:in `each'
    /Users/marcoow/tstapp/app/views/accounts/index.html.erb:8:in `_run_erb_app47views47accounts47index46html46erb'
    /Users/marcoow/tstapp/app/controllers/accounts_controller.rb:7:in `index'

This also occurs when I specify the class name:

    has_many :reports, :class_name =&gt; ::Report.name

Since I couldn't really come up with a simple test case for this I created a sample app that demonstrates the problem: http://github.com/marcoow/activerecord_bug_sample</original-body>
  <latest-body>When I use the reportable gem (which defines a class named &quot;Saulabs::Reportable::Report&quot;) in a Rails (2.3.5) project that itself defines a &quot;Report&quot; model and an &quot;Account&quot; model that

    has_many :reports

I get the error

    undefined method `quoted_table_name' for Saulabs::Reportable::Report:Class

    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/reflection.rb:187:in `quoted_table_name'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/has_many_association.rb:97:in `construct_sql'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:21:in `initialize'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1300:in `new'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1300:in `reports'
    /Users/marcoow/tstapp/app/views/accounts/index.html.erb:11:in `_run_erb_app47views47accounts47index46html46erb'
    /Users/marcoow/tstapp/app/views/accounts/index.html.erb:8:in `each'
    /Users/marcoow/tstapp/app/views/accounts/index.html.erb:8:in `_run_erb_app47views47accounts47index46html46erb'
    /Users/marcoow/tstapp/app/controllers/accounts_controller.rb:7:in `index'

This also occurs when I specify the class name:

    has_many :reports, :class_name =&gt; ::Report.name

Since I couldn't really come up with a simple test case for this I created a sample app that demonstrates the problem: http://github.com/marcoow/activerecord_bug_sample</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When I use the reportable gem (which defines a class named
&quot;Saulabs::Reportable::Report&quot;) in a Rails (2.3.5) project that
itself defines a &quot;Report&quot; model and an &quot;Account&quot; model that&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;has_many :reports&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I get the error&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `quoted_table_name' for Saulabs::Reportable::Report:Class

/usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/reflection.rb:187:in `quoted_table_name'
/usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/has_many_association.rb:97:in `construct_sql'
/usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:21:in `initialize'
/usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1300:in `new'
/usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1300:in `reports'
/Users/marcoow/tstapp/app/views/accounts/index.html.erb:11:in `_run_erb_app47views47accounts47index46html46erb'
/Users/marcoow/tstapp/app/views/accounts/index.html.erb:8:in `each'
/Users/marcoow/tstapp/app/views/accounts/index.html.erb:8:in `_run_erb_app47views47accounts47index46html46erb'
/Users/marcoow/tstapp/app/controllers/accounts_controller.rb:7:in `index'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This also occurs when I specify the class name:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;has_many :reports, :class_name =&amp;gt; ::Report.name&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Since I couldn't really come up with a simple test case for this
I created a sample app that demonstrates the problem: &lt;a href=
&quot;http://github.com/marcoow/activerecord_bug_sample&quot;&gt;http://github.com/marcoow/activerecord_bug_sample&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When I use the reportable gem (which defines a class named &quot;Saulabs::Reportable::Report&quot;) in a Rails (2.3.5) project that itself defines a &quot;Report&quot; model and an &quot;Account&quot; model that

    has_many :reports

I get the error

    undefined method `quoted_table_name' for Saulabs::Reportable::Report:Class

    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/reflection.rb:187:in `quoted_table_name'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/has_many_association.rb:97:in `construct_sql'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:21:in `initialize'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1300:in `new'
    /usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1300:in `reports'
    /Users/marcoow/tstapp/app/views/accounts/index.html.erb:11:in `_run_erb_app47views47accounts47index46html46erb'
    /Users/marcoow/tstapp/app/views/accounts/index.html.erb:8:in `each'
    /Users/marcoow/tstapp/app/views/accounts/index.html.erb:8:in `_run_erb_app47views47accounts47index46html46erb'
    /Users/marcoow/tstapp/app/controllers/accounts_controller.rb:7:in `index'

This also occurs when I specify the class name:

    has_many :reports, :class_name =&gt; ::Report.name

Since I couldn't really come up with a simple test case for this I created a sample app that demonstrates the problem: http://github.com/marcoow/activerecord_bug_sample</body>
      <body-html>&lt;div&gt;&lt;p&gt;When I use the reportable gem (which defines a class named
&quot;Saulabs::Reportable::Report&quot;) in a Rails (2.3.5) project that
itself defines a &quot;Report&quot; model and an &quot;Account&quot; model that&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;has_many :reports&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I get the error&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `quoted_table_name' for Saulabs::Reportable::Report:Class

/usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/reflection.rb:187:in `quoted_table_name'
/usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/has_many_association.rb:97:in `construct_sql'
/usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations/association_collection.rb:21:in `initialize'
/usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1300:in `new'
/usr/local/Cellar/ruby-enterprise-edition/2010.01/lib/ruby/gems/1.8/gems/activerecord-2.3.5/lib/active_record/associations.rb:1300:in `reports'
/Users/marcoow/tstapp/app/views/accounts/index.html.erb:11:in `_run_erb_app47views47accounts47index46html46erb'
/Users/marcoow/tstapp/app/views/accounts/index.html.erb:8:in `each'
/Users/marcoow/tstapp/app/views/accounts/index.html.erb:8:in `_run_erb_app47views47accounts47index46html46erb'
/Users/marcoow/tstapp/app/controllers/accounts_controller.rb:7:in `index'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This also occurs when I specify the class name:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;has_many :reports, :class_name =&amp;gt; ::Report.name&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Since I couldn't really come up with a simple test case for this
I created a sample app that demonstrates the problem: &lt;a href=
&quot;http://github.com/marcoow/activerecord_bug_sample&quot;&gt;http://github.com/marcoow/activerecord_bug_sample&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-01T14:25:52+01:00</created-at>
      <creator-id type="integer">16349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4744</number>
      <permalink>activerecord-uses-wrong-class-for-has_many-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord &quot;activerecord associations&quot;</tag>
      <title>ActiveRecord uses wrong class for has_many association</title>
      <updated-at type="datetime">2010-06-01T14:25:57+01:00</updated-at>
      <user-id type="integer">16349</user-id>
      <version type="integer">1</version>
      <user-name>Marco Otte-Witte</user-name>
      <creator-name>Marco Otte-Witte</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4744</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-01T14:26:29+01:00</created-at>
      <creator-id type="integer">16349</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord &quot;activerecord associations&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4744</number>
      <permalink>activerecord-uses-wrong-class-for-has_many-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.5 activerecord &quot;activerecord associations&quot;</tag>
      <title>ActiveRecord uses wrong class for has_many association</title>
      <updated-at type="datetime">2010-06-01T14:26:32+01:00</updated-at>
      <user-id type="integer">16349</user-id>
      <version type="integer">2</version>
      <user-name>Marco Otte-Witte</user-name>
      <creator-name>Marco Otte-Witte</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4744</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can you open a ticket with reportable gem if you are still having an issue. It does not seem like it is a rails issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can you open a ticket with reportable gem if you are still
having an issue. It does not seem like it is a rails issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T21:34:29+01:00</created-at>
      <creator-id type="integer">16349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4744</number>
      <permalink>activerecord-uses-wrong-class-for-has_many-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.5 activerecord &quot;activerecord associations&quot;</tag>
      <title>ActiveRecord uses wrong class for has_many association</title>
      <updated-at type="datetime">2010-06-25T21:34:33+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Marco Otte-Witte</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4744</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The reportable gem includes Saulabs::Reportable into ActiveRecord::Base which makes Saulabs::Reportable::Report available inside Account. AR::Base#compute_type first looks inside the class to see if the constant is available so you need tell it to reference the top level constant by prefixing it with '::', e.g:

@@@ ruby
class Account &lt; ActiveRecord::Base
  has_many :reports, :class_name =&gt; '::Report'
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;The reportable gem includes Saulabs::Reportable into
ActiveRecord::Base which makes Saulabs::Reportable::Report
available inside Account. AR::Base#compute_type first looks inside
the class to see if the constant is available so you need tell it
to reference the top level constant by prefixing it with '::',
e.g:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Account &amp;lt; ActiveRecord::Base
  has_many :reports, :class_name =&amp;gt; '::Report'
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-25T22:16:54+01:00</created-at>
      <creator-id type="integer">16349</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4744</number>
      <permalink>activerecord-uses-wrong-class-for-has_many-association</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.5 activerecord &quot;activerecord associations&quot;</tag>
      <title>ActiveRecord uses wrong class for has_many association</title>
      <updated-at type="datetime">2010-06-25T22:16:59+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">4</version>
      <user-name>Andrew White</user-name>
      <creator-name>Marco Otte-Witte</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4744</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ok, I tried to fix it with

    :class_name =&gt; ::Report.name

but that wouldn't fix it of course. Guess ::Report.name is 'Report' not '::Report'</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, I tried to fix it with&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;:class_name =&amp;gt; ::Report.name&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;but that wouldn't fix it of course. Guess ::Report.name is
'Report' not '::Report'&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-28T09:37:55+01:00</created-at>
      <creator-id type="integer">16349</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4744</number>
      <permalink>activerecord-uses-wrong-class-for-has_many-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.5 activerecord &quot;activerecord associations&quot;</tag>
      <title>ActiveRecord uses wrong class for has_many association</title>
      <updated-at type="datetime">2010-06-28T09:38:01+01:00</updated-at>
      <user-id type="integer">16349</user-id>
      <version type="integer">5</version>
      <user-name>Marco Otte-Witte</user-name>
      <creator-name>Marco Otte-Witte</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4744</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The :class_name option should be passed a string '::Report' - by doing as ::Report.name it removes the leading scope operator.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The :class_name option should be passed a string '::Report' - by
doing as ::Report.name it removes the leading scope operator.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-28T09:45:15+01:00</created-at>
      <creator-id type="integer">16349</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4744</number>
      <permalink>activerecord-uses-wrong-class-for-has_many-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.5 activerecord &quot;activerecord associations&quot;</tag>
      <title>ActiveRecord uses wrong class for has_many association</title>
      <updated-at type="datetime">2010-06-28T09:45:22+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">6</version>
      <user-name>Andrew White</user-name>
      <creator-name>Marco Otte-Witte</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4744</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes, that's what I meant to say.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, that's what I meant to say.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-28T09:47:09+01:00</created-at>
      <creator-id type="integer">16349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4744</number>
      <permalink>activerecord-uses-wrong-class-for-has_many-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.5 activerecord &quot;activerecord associations&quot;</tag>
      <title>ActiveRecord uses wrong class for has_many association</title>
      <updated-at type="datetime">2010-06-28T09:47:14+01:00</updated-at>
      <user-id type="integer">16349</user-id>
      <version type="integer">7</version>
      <user-name>Marco Otte-Witte</user-name>
      <creator-name>Marco Otte-Witte</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4744</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Which version of rails are you using?

This definition for the Account model works for me in 2.3.8:

@@@ ruby
  class Account &lt; ActiveRecord::Base
    has_many :reports, :class_name =&gt; '::Report'
  end

  &gt;&gt; Account.first.reports
  =&gt; [#&lt;Report id: 1, account_id: 1, created_at: &quot;2010-06-28 08:53:34&quot;, updated_at: &quot;2010-06-28 08:53:34&quot;&gt;]
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Which version of rails are you using?&lt;/p&gt;
&lt;p&gt;This definition for the Account model works for me in 2.3.8:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  class Account &amp;lt; ActiveRecord::Base
    has_many :reports, :class_name =&amp;gt; '::Report'
  end

  &amp;gt;&amp;gt; Account.first.reports
  =&amp;gt; [#&amp;lt;Report id: 1, account_id: 1, created_at: &quot;2010-06-28 08:53:34&quot;, updated_at: &quot;2010-06-28 08:53:34&quot;&amp;gt;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-28T10:00:27+01:00</created-at>
      <creator-id type="integer">16349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4744</number>
      <permalink>activerecord-uses-wrong-class-for-has_many-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.5 activerecord &quot;activerecord associations&quot;</tag>
      <title>ActiveRecord uses wrong class for has_many association</title>
      <updated-at type="datetime">2010-06-28T10:00:34+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">8</version>
      <user-name>Andrew White</user-name>
      <creator-name>Marco Otte-Witte</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4744</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yep, the version with '::Report' works, the one with ::Report.name does not since that will result in 'Report' which will then result in Reportable's Report class being found since Saulabs::Reportable is included in ActiveRecord::Base.

I don't think this is specific to any Rails version. I tried it with 2.3.5.

However, this is not a Rails/ActiveRecord problem - the ticket really is invalid as noted above.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yep, the version with '::Report' works, the one with
::Report.name does not since that will result in 'Report' which
will then result in Reportable's Report class being found since
Saulabs::Reportable is included in ActiveRecord::Base.&lt;/p&gt;
&lt;p&gt;I don't think this is specific to any Rails version. I tried it
with 2.3.5.&lt;/p&gt;
&lt;p&gt;However, this is not a Rails/ActiveRecord problem - the ticket
really is invalid as noted above.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-28T10:04:28+01:00</created-at>
      <creator-id type="integer">16349</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4744</number>
      <permalink>activerecord-uses-wrong-class-for-has_many-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.5 activerecord &quot;activerecord associations&quot;</tag>
      <title>ActiveRecord uses wrong class for has_many association</title>
      <updated-at type="datetime">2010-06-28T10:04:42+01:00</updated-at>
      <user-id type="integer">16349</user-id>
      <version type="integer">9</version>
      <user-name>Marco Otte-Witte</user-name>
      <creator-name>Marco Otte-Witte</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4744</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">7697</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/30789)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/30789&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-07T05:21:21+01:00</created-at>
      <creator-id type="integer">16349</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.5 activerecord &quot;activerecord associations&quot;
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4744</number>
      <permalink>activerecord-uses-wrong-class-for-has_many-association</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.3.5 activerecord associations</tag>
      <title>ActiveRecord uses wrong class for has_many association</title>
      <updated-at type="datetime">2010-10-07T05:21:21+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">10</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Marco Otte-Witte</creator-name>
      <assigned-user-name>Andrew White</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4744</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
