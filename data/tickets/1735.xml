<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-01-12T05:35:53+00:00</created-at>
  <creator-id type="integer">20509</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1735</number>
  <permalink>after_save-callback-should-not-be-called-if-a-before_-callback-was-cancelled</permalink>
  <priority type="integer">1044</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>after_save before_create before_update callback patch</tag>
  <title>after_save callback should not be called if a before_* callback was cancelled</title>
  <updated-at type="datetime">2009-01-18T10:12:32+00:00</updated-at>
  <user-id type="integer">18887</user-id>
  <version type="integer">6</version>
  <user-name>Mathijs Kwik</user-name>
  <creator-name>Michael Lovitt</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1735</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Two problems:

* When *creating* an AR object, if a *before_create* callback returns false, any after_save callbacks will still be invoked. 
* When *updating* an AR object, if a *before_update* callback returns false, any after_save callbacks will still be invoked. 

This behavior is incorrect. According to the Rails docs, &quot;if a before_* callback returns false, all the later callbacks and the associated action are canceled.&quot; 

I've attached a patch with tests and a fix.</original-body>
  <latest-body>Two problems:

* When *creating* an AR object, if a *before_create* callback returns false, any after_save callbacks will still be invoked. 
* When *updating* an AR object, if a *before_update* callback returns false, any after_save callbacks will still be invoked. 

This behavior is incorrect. According to the Rails docs, &quot;if a before_* callback returns false, all the later callbacks and the associated action are canceled.&quot; 

I've attached a patch with tests and a fix.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Two problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When &lt;em&gt;creating&lt;/em&gt; an AR object, if a
&lt;em&gt;before_create&lt;/em&gt; callback returns false, any after_save
callbacks will still be invoked.&lt;/li&gt;
&lt;li&gt;When &lt;em&gt;updating&lt;/em&gt; an AR object, if a
&lt;em&gt;before_update&lt;/em&gt; callback returns false, any after_save
callbacks will still be invoked.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This behavior is incorrect. According to the Rails docs, &quot;if a
before_* callback returns false, all the later callbacks and the
associated action are canceled.&quot;&lt;/p&gt;
&lt;p&gt;I've attached a patch with tests and a fix.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Two problems:

* When *creating* an AR object, if a *before_create* callback returns false, any after_save callbacks will still be invoked. 
* When *updating* an AR object, if a *before_update* callback returns false, any after_save callbacks will still be invoked. 

This behavior is incorrect. According to the Rails docs, &quot;if a before_* callback returns false, all the later callbacks and the associated action are canceled.&quot; 

I've attached a patch with tests and a fix.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Two problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When &lt;em&gt;creating&lt;/em&gt; an AR object, if a
&lt;em&gt;before_create&lt;/em&gt; callback returns false, any after_save
callbacks will still be invoked.&lt;/li&gt;
&lt;li&gt;When &lt;em&gt;updating&lt;/em&gt; an AR object, if a
&lt;em&gt;before_update&lt;/em&gt; callback returns false, any after_save
callbacks will still be invoked.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This behavior is incorrect. According to the Rails docs, &quot;if a
before_* callback returns false, all the later callbacks and the
associated action are canceled.&quot;&lt;/p&gt;
&lt;p&gt;I've attached a patch with tests and a fix.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-12T05:35:53+00:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1735</number>
      <permalink>after_save-callback-should-not-be-called-if-a-before_-callback-was-cancelled</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>after_save before_create before_update callback patch</tag>
      <title>after_save callback should not be called if a before_* callback was cancelled</title>
      <updated-at type="datetime">2009-01-12T05:35:58+00:00</updated-at>
      <user-id type="integer">20509</user-id>
      <version type="integer">1</version>
      <user-name>Michael Lovitt</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1735</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I have observed the reported behaviour.  The scenario I observed is this:  A before_create callback 'cancels' the save;  the object is not saved.  the after_save callback is still called.

The documentation suggests that the after_save callback would not be called in such a scenario.

I have reviewed the patch; the patch is straight-forward and effective.  I also reviewed the test cases; I am glad to see that, with the application of the patch, the cancelling of callback chains is actually tested now (I could not find a test cases for this scenario prior to applying the patch).</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have observed the reported behaviour. The scenario I observed
is this: A before_create callback 'cancels' the save; the object is
not saved. the after_save callback is still called.&lt;/p&gt;
&lt;p&gt;The documentation suggests that the after_save callback would
not be called in such a scenario.&lt;/p&gt;
&lt;p&gt;I have reviewed the patch; the patch is straight-forward and
effective. I also reviewed the test cases; I am glad to see that,
with the application of the patch, the cancelling of callback
chains is actually tested now (I could not find a test cases for
this scenario prior to applying the patch).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-15T17:33:57+00:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1735</number>
      <permalink>after_save-callback-should-not-be-called-if-a-before_-callback-was-cancelled</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>after_save before_create before_update callback patch</tag>
      <title>after_save callback should not be called if a before_* callback was cancelled</title>
      <updated-at type="datetime">2009-01-15T17:33:59+00:00</updated-at>
      <user-id type="integer">43276</user-id>
      <version type="integer">2</version>
      <user-name>Pablo Mercado</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1735</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I don't know if this is correct or not.

I think it would break a lot of applications, so if this patch is accepted, at least a deprecation warning should be set.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't know if this is correct or not.&lt;/p&gt;
&lt;p&gt;I think it would break a lot of applications, so if this patch
is accepted, at least a deprecation warning should be set.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-15T21:03:33+00:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1735</number>
      <permalink>after_save-callback-should-not-be-called-if-a-before_-callback-was-cancelled</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>after_save before_create before_update callback patch</tag>
      <title>after_save callback should not be called if a before_* callback was cancelled</title>
      <updated-at type="datetime">2009-01-15T21:03:36+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">3</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1735</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This change is consistent with the documentation so I'm going to apply it.

However I think we'll just put it into 2.3, not a 2.2 point release.  This should limit the risk of surprise breakage.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This change is consistent with the documentation so I'm going to
apply it.&lt;/p&gt;
&lt;p&gt;However I think we'll just put it into 2.3, not a 2.2 point
release. This should limit the risk of surprise breakage.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-15T21:09:42+00:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1735</number>
      <permalink>after_save-callback-should-not-be-called-if-a-before_-callback-was-cancelled</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>after_save before_create before_update callback patch</tag>
      <title>after_save callback should not be called if a before_* callback was cancelled</title>
      <updated-at type="datetime">2009-01-15T21:09:43+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1735</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [7a0e7c7270548138a333bc39aab5aec80580174b]) Fixed broken after_save callback; was being called when before_create was canceled or before_update was canceled

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
[#1735 state:committed]
http://github.com/rails/rails/commit/7a0e7c7270548138a333bc39aab5aec80580174b</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [7a0e7c7270548138a333bc39aab5aec80580174b]) Fixed broken
after_save callback; was being called when before_create was
canceled or before_update was canceled&lt;/p&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski &lt;a href=&quot;mailto:michael@koziarski.com&quot;&gt;michael@koziarski.com&lt;/a&gt; [&lt;a href=&quot;/projects/8994/tickets/1735&quot; title=&quot;Ticket #1735&quot;&gt;#1735&lt;/a&gt;
state:committed] &lt;a href=&quot;http://github.com/rails/rails/commit/7a0e7c7270548138a333bc39aab5aec80580174b&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-15T21:12:51+00:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1735</number>
      <permalink>after_save-callback-should-not-be-called-if-a-before_-callback-was-cancelled</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>after_save before_create before_update callback patch</tag>
      <title>after_save callback should not be called if a before_* callback was cancelled</title>
      <updated-at type="datetime">2009-01-15T21:12:52+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1735</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The description of the bug in the changelog is wrong.
Look at the code before the patch, it has:
&quot;return false if callback(:before_save) == false&quot;
in it. So the case mentioned in the changelog (after save still executing if before_save fails) is wrong.

The problem this patch is trying to fix, is that after_save is being called if a before_create or before_update has cancelled the saving. Not a before_save. That one worked already. This is also the reason why the other before/after callbacks didn't need 'fixing'</body>
      <body-html>&lt;div&gt;&lt;p&gt;The description of the bug in the changelog is wrong. Look at
the code before the patch, it has: &quot;return false if
callback(:before_save) == false&quot; in it. So the case mentioned in
the changelog (after save still executing if before_save fails) is
wrong.&lt;/p&gt;
&lt;p&gt;The problem this patch is trying to fix, is that after_save is
being called if a before_create or before_update has cancelled the
saving. Not a before_save. That one worked already. This is also
the reason why the other before/after callbacks didn't need
'fixing'&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-18T10:12:27+00:00</created-at>
      <creator-id type="integer">20509</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1735</number>
      <permalink>after_save-callback-should-not-be-called-if-a-before_-callback-was-cancelled</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>after_save before_create before_update callback patch</tag>
      <title>after_save callback should not be called if a before_* callback was cancelled</title>
      <updated-at type="datetime">2009-01-18T10:12:32+00:00</updated-at>
      <user-id type="integer">18887</user-id>
      <version type="integer">6</version>
      <user-name>Mathijs Kwik</user-name>
      <creator-name>Michael Lovitt</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1735</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>bd3016adbb6c934e51fea7d1627a8936ad5f312d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-12T05:35:53+00:00</created-at>
      <filename>after_save_callback_should_not_be_called_when_prior_callbacks_are_cancelled.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">77290</id>
      <size type="integer">3810</size>
      <uploader-id type="integer">20509</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/77290/after_save_callback_should_not_be_called_when_prior_callbacks_are_cancelled.diff</url>
    </attachment>
  </attachments>
</ticket>
