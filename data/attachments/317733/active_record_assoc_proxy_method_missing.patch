From 3e31dcb8caa1dc3194fe10713f85abbbb4866b07 Mon Sep 17 00:00:00 2001
From: Karl Varga <kjvarga@gmail.com>
Date: Wed, 11 Nov 2009 16:01:48 +0800
Subject: [PATCH] Don't raise a NoMethodError if the target does not respond_to? method.  This excludes methods on target that are implemented using method_missing.  And if the method really doesn't exist, target.send(method, args) will raise a NoMethodError itself...so let it do that.

---
 .../associations/association_proxy.rb              |    5 -----
 1 files changed, 0 insertions(+), 5 deletions(-)

diff --git a/activerecord/lib/active_record/associations/association_proxy.rb b/activerecord/lib/active_record/associations/association_proxy.rb
index 75218c0..25c4231 100644
--- a/activerecord/lib/active_record/associations/association_proxy.rb
+++ b/activerecord/lib/active_record/associations/association_proxy.rb
@@ -202,11 +202,6 @@ module ActiveRecord
         # Forwards any missing method call to the \target.
         def method_missing(method, *args)
           if load_target
-            unless @target.respond_to?(method)
-              message = "undefined method `#{method.to_s}' for \"#{@target}\":#{@target.class.to_s}"
-              raise NoMethodError, message
-            end
-
             if block_given?
               @target.send(method, *args)  { |*block_args| yield(*block_args) }
             else
-- 
1.6.4.4

