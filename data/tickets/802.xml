<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-08-11T21:39:11+01:00</created-at>
  <creator-id type="integer">8262</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">802</number>
  <permalink>eager-load-application-classes-can-block-migration</permalink>
  <priority type="integer">48</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>bug cache_classes eager_loading edge migrations rake</tag>
  <title>Eager load application classes can block migration</title>
  <updated-at type="datetime">2010-01-27T10:56:24+00:00</updated-at>
  <user-id type="integer">32013</user-id>
  <version type="integer">21</version>
  <user-name>apeiros</user-name>
  <creator-name>Cyril Mougel</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
  <priority-name nil="true"></priority-name>
  <original-body>Since commit 89ec72c2:&quot;http://github.com/rails/rails/commit/89ec72c2&quot; that add an eager loading in intializer, the execution of rake db:migrate in production mode with &quot;config.cache_classe = true&quot; can failed and block all migration.

If in a class Model, you use an ActiveRecord request to populate information in loading, the initialisation failed with this initialisation because there are no information in Database, because you want create it.

My case where I have this problem is with attachment_fu. In has_attachment, I made a request to Settings database. So it's failed in initialisation and I can't create database by rake db:migrate.

A solution is block the cache_classe during migration task, but I don't know how made otherwise update the production.rb file.</original-body>
  <latest-body>Since commit 89ec72c2:&quot;http://github.com/rails/rails/commit/89ec72c2&quot; that add an eager loading in intializer, the execution of rake db:migrate in production mode with &quot;config.cache_classe = true&quot; can failed and block all migration.

If in a class Model, you use an ActiveRecord request to populate information in loading, the initialisation failed with this initialisation because there are no information in Database, because you want create it.

My case where I have this problem is with attachment_fu. In has_attachment, I made a request to Settings database. So it's failed in initialisation and I can't create database by rake db:migrate.

A solution is block the cache_classe during migration task, but I don't know how made otherwise update the production.rb file.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Since commit 89ec72c2:&quot;http://github.com/rails/rails/commit/89ec72c2&quot; that add an eager loading in intializer, the execution of rake db:migrate in production mode with &quot;config.cache_classe = true&quot; can failed and block all migration.&lt;/p&gt;

&lt;p&gt;If in a class Model, you use an ActiveRecord request to populate information in loading, the initialisation failed with this initialisation because there are no information in Database, because you want create it.&lt;/p&gt;

&lt;p&gt;My case where I have this problem is with attachment_fu. In has_attachment, I made a request to Settings database. So it's failed in initialisation and I can't create database by rake db:migrate.&lt;/p&gt;

&lt;p&gt;A solution is block the cache_classe during migration task, but I don't know how made otherwise update the production.rb file.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Since commit 89ec72c2:&quot;http://github.com/rails/rails/commit/89ec72c2&quot; that add an eager loading in intializer, the execution of rake db:migrate in production mode with &quot;config.cache_classe = true&quot; can failed and block all migration.

If in a class Model, you use an ActiveRecord request to populate information in loading, the initialisation failed with this initialisation because there are no information in Database, because you want create it.

My case where I have this problem is with attachment_fu. In has_attachment, I made a request to Settings database. So it's failed in initialisation and I can't create database by rake db:migrate.

A solution is block the cache_classe during migration task, but I don't know how made otherwise update the production.rb file.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Since commit 89ec72c2:&quot;http://github.com/rails/rails/commit/89ec72c2&quot; that add an eager loading in intializer, the execution of rake db:migrate in production mode with &quot;config.cache_classe = true&quot; can failed and block all migration.&lt;/p&gt;

&lt;p&gt;If in a class Model, you use an ActiveRecord request to populate information in loading, the initialisation failed with this initialisation because there are no information in Database, because you want create it.&lt;/p&gt;

&lt;p&gt;My case where I have this problem is with attachment_fu. In has_attachment, I made a request to Settings database. So it's failed in initialisation and I can't create database by rake db:migrate.&lt;/p&gt;

&lt;p&gt;A solution is block the cache_classe during migration task, but I don't know how made otherwise update the production.rb file.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-11T21:39:12+01:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2008-08-11T21:39:12+01:00</updated-at>
      <user-id type="integer">8262</user-id>
      <version type="integer">1</version>
      <user-name>Cyril Mougel</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-22T19:36:40+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>bug eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2008-11-22T19:36:43+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Would someone please explain why this is wontfix? Or explain where I may be going wrong?

1) I create a new model with a class and migration
2) I run `cap deploy:migrations`
3) Capistrano runs `rake db:migrate`
4) Rails boots and tries to load_application_classes
5) Rails fails to load the new model class, since the table doesn't exist
6) The migration doesn't run</body>
      <body-html>&lt;div&gt;&lt;p&gt;Would someone please explain why this is wontfix? Or explain
where I may be going wrong?&lt;/p&gt;
&lt;p&gt;1) I create a new model with a class and migration 2) I run
&lt;code&gt;cap deploy:migrations&lt;/code&gt; 3) Capistrano runs &lt;code&gt;rake
db:migrate&lt;/code&gt; 4) Rails boots and tries to
load_application_classes 5) Rails fails to load the new model
class, since the table doesn't exist 6) The migration doesn't
run&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-29T01:06:54+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>bug eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2008-11-29T01:06:55+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">3</version>
      <user-name>cainlevy</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Sorry for the poor formatting there.

I've discovered how my environment (and that of the original poster) may be considered unusual: I have a plugin that adds functionality to my model, but must check #column_names to function correctly. So loading the class is enough to trigger checking the database, precipitating the SQL table-not-found exception.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry for the poor formatting there.&lt;/p&gt;
&lt;p&gt;I've discovered how my environment (and that of the original
poster) may be considered unusual: I have a plugin that adds
functionality to my model, but must check #column_names to function
correctly. So loading the class is enough to trigger checking the
database, precipitating the SQL table-not-found exception.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-29T01:21:33+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>bug eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2008-11-29T01:21:39+00:00</updated-at>
      <user-id type="integer">8964</user-id>
      <version type="integer">4</version>
      <user-name>cainlevy</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-29T17:43:58+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- 
:state: wontfix
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2008-11-29T17:44:02+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">5</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have a similar chicken and egg problem using ActiveScaffold with Rails 2.2.2. (IE, when trying to rake db:migrate, controllers get loaded, causing active_scaffold to try to reflect on the DB to get the model columns, but it can't because the DB table doesn't exist yet). It doesn't seem to happen when raking production, which is awfully odd, since I'm pretty sure my test and production environments are pretty similar....</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have a similar chicken and egg problem using ActiveScaffold
with Rails 2.2.2. (IE, when trying to rake db:migrate, controllers
get loaded, causing active_scaffold to try to reflect on the DB to
get the model columns, but it can't because the DB table doesn't
exist yet). It doesn't seem to happen when raking production, which
is awfully odd, since I'm pretty sure my test and production
environments are pretty similar....&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-05T07:48:13+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2008-12-05T07:48:14+00:00</updated-at>
      <user-id type="integer">37047</user-id>
      <version type="integer">6</version>
      <user-name>ragaskar</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>to expand on ragaskar's point, it happends whenever config.cache_classes is on, which is typically production and test.</body>
      <body-html>&lt;div&gt;&lt;p&gt;to expand on ragaskar's point, it happends whenever
config.cache_classes is on, which is typically production and
test.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-16T14:30:31+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2008-12-16T14:30:35+00:00</updated-at>
      <user-id type="integer">22556</user-id>
      <version type="integer">7</version>
      <user-name>gaffo</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes, sorry, I've later confirmed that it does occur with prod AND test, or anywhere cache_classes is on. 

For those looking for a workaround while waiting for a fix, this has worked for me: 

config.cache_classes = (File.basename($0) == &quot;rake&quot; &amp;&amp; ARGV.include?(&quot;db:migrate&quot;)) ?
false : true

Pretty icky though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, sorry, I've later confirmed that it does occur with prod
AND test, or anywhere cache_classes is on.&lt;/p&gt;
&lt;p&gt;For those looking for a workaround while waiting for a fix, this
has worked for me:&lt;/p&gt;
&lt;p&gt;config.cache_classes = (File.basename($0) == &quot;rake&quot; &amp;amp;&amp;amp;
ARGV.include?(&quot;db:migrate&quot;)) ? false : true&lt;/p&gt;
&lt;p&gt;Pretty icky though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-16T15:35:32+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2008-12-16T15:35:35+00:00</updated-at>
      <user-id type="integer">37047</user-id>
      <version type="integer">8</version>
      <user-name>ragaskar</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Another  workaround might be to have a separate environment with cache_classes set to false, but set to use the same database. Then you do 

RAILS_ENV=production_no_cache rake db:migrate</body>
      <body-html>&lt;div&gt;&lt;p&gt;Another workaround might be to have a separate environment with
cache_classes set to false, but set to use the same database. Then
you do&lt;/p&gt;
&lt;p&gt;RAILS_ENV=production_no_cache rake db:migrate&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-16T19:08:07+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2008-12-16T19:08:12+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">9</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-16T22:17:34+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2008-12-16T22:17:40+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">10</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm unfamiliar with the codebase specifically but I'm working on writing some failing tests... 

So if the issue is with cache_classes, is this something that should be tested in migrations, in ActiveRecord, or in ActiveSupport?

I played around with the code, but I couldn't reliably reproduce the error because I'm not sure how to trigger the cache_classes event in the migrations tests... which leads me to believe it doesn't belong there.

BUT, it is an interesting problem because it occurs when loading classes that depend on column information that will exist after migrations run, etc...

What are thoughts on how to handle this?

(Sorry for the length... more or less rubber-ducking the problem to better understand.)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm unfamiliar with the codebase specifically but I'm working on
writing some failing tests...&lt;/p&gt;
&lt;p&gt;So if the issue is with cache_classes, is this something that
should be tested in migrations, in ActiveRecord, or in
ActiveSupport?&lt;/p&gt;
&lt;p&gt;I played around with the code, but I couldn't reliably reproduce
the error because I'm not sure how to trigger the cache_classes
event in the migrations tests... which leads me to believe it
doesn't belong there.&lt;/p&gt;
&lt;p&gt;BUT, it is an interesting problem because it occurs when loading
classes that depend on column information that will exist after
migrations run, etc...&lt;/p&gt;
&lt;p&gt;What are thoughts on how to handle this?&lt;/p&gt;
&lt;p&gt;(Sorry for the length... more or less rubber-ducking the problem
to better understand.)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-25T08:26:11+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2008-12-25T08:26:15+00:00</updated-at>
      <user-id type="integer">12316</user-id>
      <version type="integer">11</version>
      <user-name>Matt Todd</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm having the same problem, with ActiveScaffold, and Rails-2.2.2.

Found a less icky work-around, though: disabling eager-loading of classes with:

config.eager_load_paths.clear</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm having the same problem, with ActiveScaffold, and
Rails-2.2.2.&lt;/p&gt;
&lt;p&gt;Found a less icky work-around, though: disabling eager-loading
of classes with:&lt;/p&gt;
&lt;p&gt;config.eager_load_paths.clear&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-06T10:47:40+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: bug eager_loading edge migrations rake
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache_classes eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2009-01-06T10:47:44+00:00</updated-at>
      <user-id type="integer">13115</user-id>
      <version type="integer">12</version>
      <user-name>Mike Williams</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Looks like this problem shows up when using Ruport acts_as_reportable as well when RAILS_ENV is not development.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks like this problem shows up when using Ruport
acts_as_reportable as well when RAILS_ENV is not development.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-19T20:10:42+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache_classes eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2009-01-19T20:10:46+00:00</updated-at>
      <user-id type="integer">44189</user-id>
      <version type="integer">13</version>
      <user-name>Robert J Berger</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [f716ab92bf4872db635903f7b57f1c0d025e40a4]) Disable eager loading for all rake tasks [#802 state:resolved]
http://github.com/rails/rails/commit/f716ab92bf4872db635903f7b57f1c0d025e40a4</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [f716ab92bf4872db635903f7b57f1c0d025e40a4]) Disable eager
loading for all rake tasks [&lt;a href=&quot;/projects/8994/tickets/802&quot; title=&quot;Ticket #802&quot;&gt;#802&lt;/a&gt; state:resolved] &lt;a href=&quot;http://github.com/rails/rails/commit/f716ab92bf4872db635903f7b57f1c0d025e40a4&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-27T21:48:23+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug cache_classes eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2009-01-27T21:48:25+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">14</version>
      <user-name>Repository</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Will this fix be backported to 2.2 (please)?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Will this fix be backported to 2.2 (please)?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-27T22:09:29+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug cache_classes eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2009-01-27T22:09:33+00:00</updated-at>
      <user-id type="integer">17728</user-id>
      <version type="integer">15</version>
      <user-name>spovich</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>On 2.3-RC1 having config.threadsafe!, and the fixes in http://github.com/rails/rails/commit/f716ab92bf4872db635903f7b57f1c0d025e40a4, still causes the same issue. If config.threadsafe! is is commented out everything runs as expected.</body>
      <body-html>&lt;div&gt;&lt;p&gt;On 2.3-RC1 having config.threadsafe!, and the fixes in &lt;a href=&quot;http://github.com/rails/rails/commit/f716ab92bf4872db635903f7b57f1c0d025e40a4&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;, still causes the same
issue. If config.threadsafe! is is commented out everything runs as
expected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-15T20:39:12+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug cache_classes eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2009-02-15T20:39:15+00:00</updated-at>
      <user-id type="integer">21335</user-id>
      <version type="integer">16</version>
      <user-name>Kenneth Kalmer</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-15T22:14:12+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- 
:state: resolved
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bug cache_classes eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2009-02-15T22:14:18+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">17</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Kenneth I can't reproduce the threadsafe! issue. I created a fresh rails app and it does not load any of the classes in the app folder (attached test app).

If its still an issue on master please open a new ticket with more information about the error you received.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Kenneth I can't reproduce the threadsafe! issue. I created a
fresh rails app and it does not load any of the classes in the app
folder (attached test app).&lt;/p&gt;
&lt;p&gt;If its still an issue on master please open a new ticket with
more information about the error you received.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-16T20:33:14+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug cache_classes eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2009-02-16T20:33:16+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">18</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@John Dell, this is the temporary fix we applied to our code until we upgrade to Rails 2.3

http://whatcodecraves.com/articles/2009/03/17/rails_2.2.2_chicken_and_egg_migrations_headache</body>
      <body-html>&lt;div&gt;&lt;p&gt;@John Dell, this is the temporary fix we applied to our code
until we upgrade to Rails 2.3&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://whatcodecraves.com/articles/2009/03/17/rails_2.2.2_chicken_and_egg_migrations_headache&quot;&gt;
http://whatcodecraves.com/articl...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-18T06:06:56+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug cache_classes eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2009-03-18T06:06:59+00:00</updated-at>
      <user-id type="integer">20137</user-id>
      <version type="integer">19</version>
      <user-name>Jerry Cheung</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This fix may have been regressed. My current application is having the cached_class issue using Rails 2.3.  The error occurs when running the migration rake task with an environment other than development:

$ rake db:migrate RAILS_ENV=test

The failure is the same chicken-egg problem where the model is attempting to access the database table before it has been migrated.  Updating the cache_class setting in the test environment file fixes the issue.

Also of note is that we updated this application from Rails 2.2.2 and did run all the rails:update task when doing so. Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This fix may have been regressed. My current application is
having the cached_class issue using Rails 2.3. The error occurs
when running the migration rake task with an environment other than
development:&lt;/p&gt;
&lt;p&gt;$ rake db:migrate RAILS_ENV=test&lt;/p&gt;
&lt;p&gt;The failure is the same chicken-egg problem where the model is
attempting to access the database table before it has been
migrated. Updating the cache_class setting in the test environment
file fixes the issue.&lt;/p&gt;
&lt;p&gt;Also of note is that we updated this application from Rails
2.2.2 and did run all the rails:update task when doing so.
Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-07-21T16:27:47+01:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug cache_classes eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2009-07-21T16:27:55+01:00</updated-at>
      <user-id type="integer">18336</user-id>
      <version type="integer">20</version>
      <user-name>Peer Allan</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>We had a similar issue and tracked it down to a badly behaving plugin that loaded the rails environment by itself *prior* to anything (that is: via require ...). Thus the whole environment was loaded before anything started and caused the break.
A properly behaving task will just depend on the :environment task instead of loading it itself (task :myplugin_task =&gt; :environment).
Hope that helps somebody.</body>
      <body-html>&lt;div&gt;&lt;p&gt;We had a similar issue and tracked it down to a badly behaving
plugin that loaded the rails environment by itself &lt;em&gt;prior&lt;/em&gt;
to anything (that is: via require ...). Thus the whole environment
was loaded before anything started and caused the break.&lt;br&gt;
A properly behaving task will just depend on the :environment task
instead of loading it itself (task :myplugin_task =&amp;gt;
:environment).&lt;br&gt;
Hope that helps somebody.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-27T10:56:21+00:00</created-at>
      <creator-id type="integer">8262</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">802</number>
      <permalink>eager-load-application-classes-can-block-migration</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>bug cache_classes eager_loading edge migrations rake</tag>
      <title>Eager load application classes can block migration</title>
      <updated-at type="datetime">2010-01-27T10:56:24+00:00</updated-at>
      <user-id type="integer">32013</user-id>
      <version type="integer">21</version>
      <user-name>apeiros</user-name>
      <creator-name>Cyril Mougel</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/802</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>64be0f4bb4c876322e0f629fc74925463ba112a0</code>
      <content-type>application/zip</content-type>
      <created-at type="datetime">2009-02-16T20:33:14+00:00</created-at>
      <filename>migrations.zip</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">89338</id>
      <size type="integer">97710</size>
      <uploader-id type="integer">424</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/89338/migrations.zip</url>
    </attachment>
  </attachments>
</ticket>
