<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-08T06:05:24+01:00</created-at>
  <creator-id type="integer">12926</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5768</number>
  <permalink>a-set-of-includes-in-active-records-break-when-i-add-an-order</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>A set of includes in active records break when I add an order</title>
  <updated-at type="datetime">2010-12-21T19:50:47+00:00</updated-at>
  <user-id type="integer">11330</user-id>
  <version type="integer">3</version>
  <user-name>Jon Leighton</user-name>
  <creator-name>J. Pablo Fernandez</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5768</url>
  <priority-name>Low</priority-name>
  <original-body>I'll give you more context information bellow, but first, let me show you some active records call.

First a simple &quot;let's get a clock&quot;:

@@@ ruby
    @user.clocks.find(@clock.id)
@@@

that works. Then, let's include some associations

@@@ ruby
    @user.clocks.includes(:users).find(@clock.id)
    @user.clocks.includes(:users, :runs).find(@clock.id)
    @user.clocks.includes(:users, :runs =&gt; :user_runs).find(@clock.id)
@@@ ruby

all right. Now let's order them:

@@@ ruby
    @user.clocks.includes(:users).order(&quot;users.name&quot;).find(@clock.id)
    @user.clocks.includes(:users, :runs).order(&quot;users.name&quot;).find(@clock.id)
    @user.clocks.includes(:users, :runs =&gt; :user_runs).order(&quot;users.name&quot;).find(@clock.id)
@@@

all work except the last one. The last one throws this error:

@@@
    ActiveRecord::ConfigurationError: Association named 'user_runs' was not found; perhaps you misspelled it?
@@@

but note that the same includes in the previous set of queries, without the order, worked fine (although I think it was not retrieving :user_runs).

Interestingly enough, if I try to run it with the old syntax:

@@@ ruby
   @user.clocks.find(@clock.id, :include =&gt; [:users, {:runs =&gt; :user_runs}], :order =&gt; &quot;users.name&quot;)
@@@

it doesn't throw an exception.

Is this not a bug? am I missing something?</original-body>
  <latest-body>I'll give you more context information bellow, but first, let me show you some active records call.

First a simple &quot;let's get a clock&quot;:

@@@ ruby
    @user.clocks.find(@clock.id)
@@@

that works. Then, let's include some associations

@@@ ruby
    @user.clocks.includes(:users).find(@clock.id)
    @user.clocks.includes(:users, :runs).find(@clock.id)
    @user.clocks.includes(:users, :runs =&gt; :user_runs).find(@clock.id)
@@@ ruby

all right. Now let's order them:

@@@ ruby
    @user.clocks.includes(:users).order(&quot;users.name&quot;).find(@clock.id)
    @user.clocks.includes(:users, :runs).order(&quot;users.name&quot;).find(@clock.id)
    @user.clocks.includes(:users, :runs =&gt; :user_runs).order(&quot;users.name&quot;).find(@clock.id)
@@@

all work except the last one. The last one throws this error:

@@@
    ActiveRecord::ConfigurationError: Association named 'user_runs' was not found; perhaps you misspelled it?
@@@

but note that the same includes in the previous set of queries, without the order, worked fine (although I think it was not retrieving :user_runs).

Interestingly enough, if I try to run it with the old syntax:

@@@ ruby
   @user.clocks.find(@clock.id, :include =&gt; [:users, {:runs =&gt; :user_runs}], :order =&gt; &quot;users.name&quot;)
@@@

it doesn't throw an exception.

Is this not a bug? am I missing something?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'll give you more context information bellow, but first, let me
show you some active records call.&lt;/p&gt;
&lt;p&gt;First a simple &quot;let's get a clock&quot;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    @user.clocks.find(@clock.id)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;that works. Then, let's include some associations&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;    @user.clocks.includes(:users).find(@clock.id)
    @user.clocks.includes(:users, :runs).find(@clock.id)
    @user.clocks.includes(:users, :runs =&amp;gt; :user_runs).find(@clock.id)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;all right. Now let's order them:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;    @user.clocks.includes(:users).order(&quot;users.name&quot;).find(@clock.id)
    @user.clocks.includes(:users, :runs).order(&quot;users.name&quot;).find(@clock.id)
    @user.clocks.includes(:users, :runs =&amp;gt; :user_runs).order(&quot;users.name&quot;).find(@clock.id)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;all work except the last one. The last one throws this
error:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    ActiveRecord::ConfigurationError: Association named 'user_runs' was not found; perhaps you misspelled it?&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;but note that the same includes in the previous set of queries,
without the order, worked fine (although I think it was not
retrieving :user_runs).&lt;/p&gt;
&lt;p&gt;Interestingly enough, if I try to run it with the old
syntax:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;   @user.clocks.find(@clock.id, :include =&amp;gt; [:users, {:runs =&amp;gt; :user_runs}], :order =&amp;gt; &quot;users.name&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;it doesn't throw an exception.&lt;/p&gt;
&lt;p&gt;Is this not a bug? am I missing something?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'll give you more context information bellow, but first, let me show you some active records call.

First a simple &quot;let's get a clock&quot;:

@@@ ruby
    @user.clocks.find(@clock.id)
@@@

that works. Then, let's include some associations

@@@ ruby
    @user.clocks.includes(:users).find(@clock.id)
    @user.clocks.includes(:users, :runs).find(@clock.id)
    @user.clocks.includes(:users, :runs =&gt; :user_runs).find(@clock.id)
@@@ ruby

all right. Now let's order them:

@@@ ruby
    @user.clocks.includes(:users).order(&quot;users.name&quot;).find(@clock.id)
    @user.clocks.includes(:users, :runs).order(&quot;users.name&quot;).find(@clock.id)
    @user.clocks.includes(:users, :runs =&gt; :user_runs).order(&quot;users.name&quot;).find(@clock.id)
@@@

all work except the last one. The last one throws this error:

@@@
    ActiveRecord::ConfigurationError: Association named 'user_runs' was not found; perhaps you misspelled it?
@@@

but note that the same includes in the previous set of queries, without the order, worked fine (although I think it was not retrieving :user_runs).

Interestingly enough, if I try to run it with the old syntax:

@@@ ruby
   @user.clocks.find(@clock.id, :include =&gt; [:users, {:runs =&gt; :user_runs}], :order =&gt; &quot;users.name&quot;)
@@@

it doesn't throw an exception.

Is this not a bug? am I missing something?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'll give you more context information bellow, but first, let me
show you some active records call.&lt;/p&gt;
&lt;p&gt;First a simple &quot;let's get a clock&quot;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;    @user.clocks.find(@clock.id)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;that works. Then, let's include some associations&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;    @user.clocks.includes(:users).find(@clock.id)
    @user.clocks.includes(:users, :runs).find(@clock.id)
    @user.clocks.includes(:users, :runs =&amp;gt; :user_runs).find(@clock.id)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;all right. Now let's order them:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;    @user.clocks.includes(:users).order(&quot;users.name&quot;).find(@clock.id)
    @user.clocks.includes(:users, :runs).order(&quot;users.name&quot;).find(@clock.id)
    @user.clocks.includes(:users, :runs =&amp;gt; :user_runs).order(&quot;users.name&quot;).find(@clock.id)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;all work except the last one. The last one throws this
error:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    ActiveRecord::ConfigurationError: Association named 'user_runs' was not found; perhaps you misspelled it?&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;but note that the same includes in the previous set of queries,
without the order, worked fine (although I think it was not
retrieving :user_runs).&lt;/p&gt;
&lt;p&gt;Interestingly enough, if I try to run it with the old
syntax:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;   @user.clocks.find(@clock.id, :include =&amp;gt; [:users, {:runs =&amp;gt; :user_runs}], :order =&amp;gt; &quot;users.name&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;it doesn't throw an exception.&lt;/p&gt;
&lt;p&gt;Is this not a bug? am I missing something?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T06:05:24+01:00</created-at>
      <creator-id type="integer">12926</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5768</number>
      <permalink>a-set-of-includes-in-active-records-break-when-i-add-an-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>A set of includes in active records break when I add an order</title>
      <updated-at type="datetime">2010-10-08T06:06:27+01:00</updated-at>
      <user-id type="integer">12926</user-id>
      <version type="integer">1</version>
      <user-name>J. Pablo Fernandez</user-name>
      <creator-name>J. Pablo Fernandez</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5768</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is the relevant context:

@@@ ruby
class User &lt; ActiveRecord::Base
  has_and_belongs_to_many :clocks
  has_many :runs, :through =&gt; :clocks
  has_many :user_runs
  #...
end

class Clock &lt; ActiveRecord::Base
  has_and_belongs_to_many :users
  has_many :runs
  # ...
end

class Run &lt; ActiveRecord::Base
  belongs_to :clock
  has_many :user_runs
  # ...
end

class UserRun &lt; ActiveRecord::Base
  belongs_to :run
  belongs_to :user
  # ...
end
@@@

and

@@@ ruby
  create_table &quot;clocks&quot;, :force =&gt; true do |t|
  end

  create_table &quot;clocks_users&quot;, :id =&gt; false, :force =&gt; true do |t|
    t.integer &quot;clock_id&quot;, :null =&gt; false
    t.integer &quot;user_id&quot;,  :null =&gt; false
  end

  create_table &quot;runs&quot;, :force =&gt; true do |t|
    t.integer  &quot;clock_id&quot;
  end

  create_table &quot;user_runs&quot;, :force =&gt; true do |t|
    t.integer  &quot;run_id&quot;
    t.integer  &quot;user_id&quot;
  end

  create_table &quot;users&quot;, :force =&gt; true do |t|
  end
@@@


Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is the relevant context:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :clocks
  has_many :runs, :through =&amp;gt; :clocks
  has_many :user_runs
  #...
end

class Clock &amp;lt; ActiveRecord::Base
  has_and_belongs_to_many :users
  has_many :runs
  # ...
end

class Run &amp;lt; ActiveRecord::Base
  belongs_to :clock
  has_many :user_runs
  # ...
end

class UserRun &amp;lt; ActiveRecord::Base
  belongs_to :run
  belongs_to :user
  # ...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  create_table &quot;clocks&quot;, :force =&amp;gt; true do |t|
  end

  create_table &quot;clocks_users&quot;, :id =&amp;gt; false, :force =&amp;gt; true do |t|
    t.integer &quot;clock_id&quot;, :null =&amp;gt; false
    t.integer &quot;user_id&quot;,  :null =&amp;gt; false
  end

  create_table &quot;runs&quot;, :force =&amp;gt; true do |t|
    t.integer  &quot;clock_id&quot;
  end

  create_table &quot;user_runs&quot;, :force =&amp;gt; true do |t|
    t.integer  &quot;run_id&quot;
    t.integer  &quot;user_id&quot;
  end

  create_table &quot;users&quot;, :force =&amp;gt; true do |t|
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T06:09:24+01:00</created-at>
      <creator-id type="integer">12926</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5768</number>
      <permalink>a-set-of-includes-in-active-records-break-when-i-add-an-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>A set of includes in active records break when I add an order</title>
      <updated-at type="datetime">2010-10-08T06:09:27+01:00</updated-at>
      <user-id type="integer">12926</user-id>
      <version type="integer">2</version>
      <user-name>J. Pablo Fernandez</user-name>
      <creator-name>J. Pablo Fernandez</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5768</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi there,

Thanks for the bug report.

I've tried out your code against Rails 3.0.3 and cannot reproduce the problem.

I'm marking as stale, let me know if the problem does still exist and I can re-open.

Jon</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi there,&lt;/p&gt;
&lt;p&gt;Thanks for the bug report.&lt;/p&gt;
&lt;p&gt;I've tried out your code against Rails 3.0.3 and cannot
reproduce the problem.&lt;/p&gt;
&lt;p&gt;I'm marking as stale, let me know if the problem does still
exist and I can re-open.&lt;/p&gt;
&lt;p&gt;Jon&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-21T19:50:29+00:00</created-at>
      <creator-id type="integer">12926</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5768</number>
      <permalink>a-set-of-includes-in-active-records-break-when-i-add-an-order</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>A set of includes in active records break when I add an order</title>
      <updated-at type="datetime">2010-12-21T19:50:47+00:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">3</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>J. Pablo Fernandez</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5768</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
