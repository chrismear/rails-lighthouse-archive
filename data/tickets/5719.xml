<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-02T10:46:21+01:00</created-at>
  <creator-id type="integer">42010</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5719</number>
  <permalink>html_safe-is-not-honored-by-string</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>2.x 3.x html_safe i18n</tag>
  <title>XSS hole in String % (with Hash) on 1.8</title>
  <updated-at type="datetime">2011-02-06T11:54:15+00:00</updated-at>
  <user-id type="integer">52078</user-id>
  <version type="integer">10</version>
  <user-name>dncastilho (at gmail)</user-name>
  <creator-name>grosser</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5719</url>
  <priority-name>Low</priority-name>
  <original-body>@@@
(&quot;&lt;a&gt;%{x}&lt;/a&gt;&quot;.html_safe % {:x=&gt;'&lt;script&gt;y&lt;/script&gt;'}).should ==
   &quot;&lt;a&gt;&amp;ltscript&amp;gty&amp;lt/script&amp;gt&lt;/a&gt;&quot;
-&gt; is &lt;a&gt;&lt;script&gt;y&lt;/script&gt;&lt;/a&gt;
-&gt; is still html_safe?
@@@

This leads to xss holes when e.g. replacing words in translations.
normal %
@@@
&quot;%s aa&quot;.html_safe % ['&lt;script&gt;x&lt;/script&gt;']
@@@
is also affected</original-body>
  <latest-body>@@@
(&quot;&lt;a&gt;%{x}&lt;/a&gt;&quot;.html_safe % {:x=&gt;'&lt;script&gt;y&lt;/script&gt;'}).should ==
   &quot;&lt;a&gt;&amp;ltscript&amp;gty&amp;lt/script&amp;gt&lt;/a&gt;&quot;
-&gt; is &lt;a&gt;&lt;script&gt;y&lt;/script&gt;&lt;/a&gt;
-&gt; is still html_safe?
@@@

This leads to xss holes when e.g. replacing words in translations.
normal %
@@@
&quot;%s aa&quot;.html_safe % ['&lt;script&gt;x&lt;/script&gt;']
@@@
is also affected</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;(&quot;&amp;lt;a&amp;gt;%{x}&amp;lt;/a&amp;gt;&quot;.html_safe % {:x=&amp;gt;'&amp;lt;script&amp;gt;y&amp;lt;/script&amp;gt;'}).should ==
   &quot;&amp;lt;a&amp;gt;&amp;amp;ltscript&amp;amp;gty&amp;amp;lt/script&amp;amp;gt&amp;lt;/a&amp;gt;&quot;
-&amp;gt; is &amp;lt;a&amp;gt;&amp;lt;script&amp;gt;y&amp;lt;/script&amp;gt;&amp;lt;/a&amp;gt;
-&amp;gt; is still html_safe?&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This leads to xss holes when e.g. replacing words in
translations.&lt;br&gt;
normal %&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&quot;%s aa&quot;.html_safe % ['&amp;lt;script&amp;gt;x&amp;lt;/script&amp;gt;']&lt;/code&gt;
&lt;/pre&gt;
is also affected&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@
(&quot;&lt;a&gt;%{x}&lt;/a&gt;&quot;.html_safe % {:x=&gt;'&lt;script&gt;y&lt;/script&gt;'}).should ==
   &quot;&lt;a&gt;&amp;ltscript&amp;gty&amp;lt/script&amp;gt&lt;/a&gt;&quot;
-&gt; is &lt;a&gt;&lt;script&gt;y&lt;/script&gt;&lt;/a&gt;
-&gt; is still html_safe?
@@@

This leads to xss holes when e.g. replacing words in translations.
normal %
@@@
&quot;%s aa&quot;.html_safe % ['&lt;script&gt;x&lt;/script&gt;']
@@@
is also affected</body>
      <body-html>&lt;div&gt;&lt;pre&gt;
&lt;code&gt;(&quot;&amp;lt;a&amp;gt;%{x}&amp;lt;/a&amp;gt;&quot;.html_safe % {:x=&amp;gt;'&amp;lt;script&amp;gt;y&amp;lt;/script&amp;gt;'}).should ==
   &quot;&amp;lt;a&amp;gt;&amp;amp;ltscript&amp;amp;gty&amp;amp;lt/script&amp;amp;gt&amp;lt;/a&amp;gt;&quot;
-&amp;gt; is &amp;lt;a&amp;gt;&amp;lt;script&amp;gt;y&amp;lt;/script&amp;gt;&amp;lt;/a&amp;gt;
-&amp;gt; is still html_safe?&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This leads to xss holes when e.g. replacing words in
translations.&lt;br&gt;
normal %&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&quot;%s aa&quot;.html_safe % ['&amp;lt;script&amp;gt;x&amp;lt;/script&amp;gt;']&lt;/code&gt;
&lt;/pre&gt;
is also affected&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-28T07:31:43+01:00</created-at>
      <creator-id type="integer">42010</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5719</number>
      <permalink>html_safe-is-not-honored-by-string</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.x 3.x html_safe i18n</tag>
      <title>html_safe is not honored by String#%</title>
      <updated-at type="datetime">2010-09-28T07:31:45+01:00</updated-at>
      <user-id type="integer">42010</user-id>
      <version type="integer">1</version>
      <user-name>grosser</user-name>
      <creator-name>grosser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5719</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is only a very restrictive set of operations on string that return html_safe strings (IIRC, `&lt;&lt;`, `+` and `concat`). Other operations return unsafe strings by design. For example, in Rails 3.0.0:

    ruby-1.9.2-p0 &gt; (&quot;%s aa&quot;.html_safe % ['&lt;script&gt;x&lt;/script&gt;']).html_safe?
     =&gt; false 
    ruby-1.9.2-p0 &gt; (&quot;&lt;a&gt;%{x}&lt;/a&gt;&quot;.html_safe % {:x=&gt;'&lt;script&gt;y&lt;/script&gt;'}).html_safe?
     =&gt; false

So, there are no XSS holes, but if you want to preserve HTML markup from the original string, you have to do it yourself.</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is only a very restrictive set of operations on string
that return html_safe strings (IIRC, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;,
&lt;code&gt;+&lt;/code&gt; and &lt;code&gt;concat&lt;/code&gt;). Other operations return
unsafe strings by design. For example, in Rails 3.0.0:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ruby-1.9.2-p0 &amp;gt; (&quot;%s aa&quot;.html_safe % ['&amp;lt;script&amp;gt;x&amp;lt;/script&amp;gt;']).html_safe?
 =&amp;gt; false 
ruby-1.9.2-p0 &amp;gt; (&quot;&amp;lt;a&amp;gt;%{x}&amp;lt;/a&amp;gt;&quot;.html_safe % {:x=&amp;gt;'&amp;lt;script&amp;gt;y&amp;lt;/script&amp;gt;'}).html_safe?
 =&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So, there are no XSS holes, but if you want to preserve HTML
markup from the original string, you have to do it yourself.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-30T09:59:14+01:00</created-at>
      <creator-id type="integer">42010</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5719</number>
      <permalink>html_safe-is-not-honored-by-string</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.x 3.x html_safe i18n</tag>
      <title>html_safe is not honored by String#%</title>
      <updated-at type="datetime">2010-09-30T09:59:15+01:00</updated-at>
      <user-id type="integer">14798</user-id>
      <version type="integer">2</version>
      <user-name>Bruno Michel</user-name>
      <creator-name>grosser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5719</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ahh % with array is not affected
@@@
ree-1.8.7-2010.01 &gt; (&quot;%s aa&quot;.html_safe % ['&lt;script&gt;x&lt;/script&gt;']).html_safe?
 =&gt; false 
@@@

but % with hash is:
@@@
ree-1.8.7-2010.01 &gt; (&quot;&lt;a&gt;%{x}&lt;/a&gt;&quot;.html_safe % {:x=&gt;'&lt;script&gt;y&lt;/script&gt;'}).html_safe?
 =&gt; true
@@@

so maybe its a 1.8 bug</body>
      <body-html>&lt;div&gt;&lt;p&gt;ahh % with array is not affected&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ree-1.8.7-2010.01 &amp;gt; (&quot;%s aa&quot;.html_safe % ['&amp;lt;script&amp;gt;x&amp;lt;/script&amp;gt;']).html_safe?
 =&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;but % with hash is:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ree-1.8.7-2010.01 &amp;gt; (&quot;&amp;lt;a&amp;gt;%{x}&amp;lt;/a&amp;gt;&quot;.html_safe % {:x=&amp;gt;'&amp;lt;script&amp;gt;y&amp;lt;/script&amp;gt;'}).html_safe?
 =&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;so maybe its a 1.8 bug&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-30T14:22:39+01:00</created-at>
      <creator-id type="integer">42010</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5719</number>
      <permalink>html_safe-is-not-honored-by-string</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.x 3.x html_safe i18n</tag>
      <title>html_safe is not honored by String#%</title>
      <updated-at type="datetime">2010-09-30T14:22:43+01:00</updated-at>
      <user-id type="integer">42010</user-id>
      <version type="integer">3</version>
      <user-name>grosser</user-name>
      <creator-name>grosser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5719</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-06T06:55:19+01:00</created-at>
      <creator-id type="integer">42010</creator-id>
      <diffable-attributes type="yaml">--- 
:title: html_safe is not honored by String#%
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5719</number>
      <permalink>html_safe-is-not-honored-by-string</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.x 3.x html_safe i18n</tag>
      <title>XSS hole in String % (with Hash) on 1.8</title>
      <updated-at type="datetime">2010-10-06T06:55:23+01:00</updated-at>
      <user-id type="integer">42010</user-id>
      <version type="integer">4</version>
      <user-name>grosser</user-name>
      <creator-name>grosser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5719</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think this is a REE related issue. 1.8 doesn't even support the Hash syntax, and here's what happens on 1.9:

@@@
&#10140;  irb
ruby-1.9.2-p0 &gt; require 'active_support/core_ext/string/output_safety'
 =&gt; true 
ruby-1.9.2-p0 &gt; (&quot;%{foo}&quot;.html_safe % {:foo =&gt; '&lt;script&gt;&lt;/script&gt;'}).html_safe?
 =&gt; false 
@@@

Maybe REE's String#% manipulates `self` instead of making a new String object?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think this is a REE related issue. 1.8 doesn't even support
the Hash syntax, and here's what happens on 1.9:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;#10140;  irb
ruby-1.9.2-p0 &amp;gt; require 'active_support/core_ext/string/output_safety'
 =&amp;gt; true 
ruby-1.9.2-p0 &amp;gt; (&quot;%{foo}&quot;.html_safe % {:foo =&amp;gt; '&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;'}).html_safe?
 =&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Maybe REE's String#% manipulates &lt;code&gt;self&lt;/code&gt; instead of
making a new String object?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-08T09:23:22+01:00</created-at>
      <creator-id type="integer">42010</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5719</number>
      <permalink>html_safe-is-not-honored-by-string</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.x 3.x html_safe i18n</tag>
      <title>XSS hole in String % (with Hash) on 1.8</title>
      <updated-at type="datetime">2010-10-08T09:23:28+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">5</version>
      <user-name>David Trasbo</user-name>
      <creator-name>grosser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5719</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The i18n gem loaded by rails adds the % method supporting hash to string.
(This kind of replacement is often used when adding something into translations.)

@@@
ree-1.8.7-2010.01 &gt; &quot;%{x}y&quot; %{:x=&gt;1}
 =&gt; &quot;1y&quot; 
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;The i18n gem loaded by rails adds the % method supporting hash
to string.&lt;br&gt;
(This kind of replacement is often used when adding something into
translations.)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ree-1.8.7-2010.01 &amp;gt; &quot;%{x}y&quot; %{:x=&amp;gt;1}
 =&amp;gt; &quot;1y&quot;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-08T14:24:44+01:00</created-at>
      <creator-id type="integer">42010</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5719</number>
      <permalink>html_safe-is-not-honored-by-string</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.x 3.x html_safe i18n</tag>
      <title>XSS hole in String % (with Hash) on 1.8</title>
      <updated-at type="datetime">2010-10-08T14:24:49+01:00</updated-at>
      <user-id type="integer">42010</user-id>
      <version type="integer">6</version>
      <user-name>grosser</user-name>
      <creator-name>grosser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5719</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Which means this is not Rails' but i18n's fault.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Which means this is not Rails' but i18n's fault.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-08T15:21:42+01:00</created-at>
      <creator-id type="integer">42010</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5719</number>
      <permalink>html_safe-is-not-honored-by-string</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.x 3.x html_safe i18n</tag>
      <title>XSS hole in String % (with Hash) on 1.8</title>
      <updated-at type="datetime">2010-10-08T15:21:43+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">7</version>
      <user-name>David Trasbo</user-name>
      <creator-name>grosser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5719</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I think rails should take care of all html_safe related methods, so they do not get spread out into multiple places.

My idea for a patch:
@@@
if (&quot;%{x}&quot;.html_safe%{:x=&gt;1}).html_safe? # fix hash replacement being safe on ruby 1.8
  module HtmlSafePercent
    def %(*args)
      String.new(super)
    end
  end
  String.send(:include, HtmlSafePercent)
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think rails should take care of all html_safe related methods,
so they do not get spread out into multiple places.&lt;/p&gt;
&lt;p&gt;My idea for a patch:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;if (&quot;%{x}&quot;.html_safe%{:x=&amp;gt;1}).html_safe? # fix hash replacement being safe on ruby 1.8
  module HtmlSafePercent&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;&lt;code&gt;def %(*args)
  String.new(super)
end&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
  end
  String.send(:include, HtmlSafePercent)
end
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-08T17:55:23+01:00</created-at>
      <creator-id type="integer">42010</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5719</number>
      <permalink>html_safe-is-not-honored-by-string</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.x 3.x html_safe i18n</tag>
      <title>XSS hole in String % (with Hash) on 1.8</title>
      <updated-at type="datetime">2010-10-08T17:55:26+01:00</updated-at>
      <user-id type="integer">42010</user-id>
      <version type="integer">8</version>
      <user-name>grosser</user-name>
      <creator-name>grosser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5719</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>that should have been one block...</body>
      <body-html>&lt;div&gt;&lt;p&gt;that should have been one block...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-08T17:56:58+01:00</created-at>
      <creator-id type="integer">42010</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5719</number>
      <permalink>html_safe-is-not-honored-by-string</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.x 3.x html_safe i18n</tag>
      <title>XSS hole in String % (with Hash) on 1.8</title>
      <updated-at type="datetime">2010-10-08T17:56:59+01:00</updated-at>
      <user-id type="integer">42010</user-id>
      <version type="integer">9</version>
      <user-name>grosser</user-name>
      <creator-name>grosser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5719</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>also affecting me on rails 3 + ruby 1.9.2 ... pretty annoying! does anyone have a patch suggestion for this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;also affecting me on rails 3 + ruby 1.9.2 ... pretty annoying!
does anyone have a patch suggestion for this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-06T11:54:08+00:00</created-at>
      <creator-id type="integer">42010</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5719</number>
      <permalink>html_safe-is-not-honored-by-string</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>2.x 3.x html_safe i18n</tag>
      <title>XSS hole in String % (with Hash) on 1.8</title>
      <updated-at type="datetime">2011-02-06T11:54:15+00:00</updated-at>
      <user-id type="integer">52078</user-id>
      <version type="integer">10</version>
      <user-name>dncastilho (at gmail)</user-name>
      <creator-name>grosser</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5719</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
