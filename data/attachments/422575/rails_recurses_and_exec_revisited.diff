From d5494a15b941a94f2566a20e0f8e2b19a022e3ff Mon Sep 17 00:00:00 2001
From: Xavier Noria <fxn@hashref.com>
Date: Tue, 23 Feb 2010 23:41:13 +0100
Subject: [PATCH] let the rails command recurse upwards looking for script/rails, and exec ruby on it for better portability

---
 railties/bin/rails |   37 ++++++++++++++++++++++++++++---------
 1 files changed, 28 insertions(+), 9 deletions(-)

diff --git a/railties/bin/rails b/railties/bin/rails
index 72c47b5..173f122 100755
--- a/railties/bin/rails
+++ b/railties/bin/rails
@@ -1,11 +1,30 @@
-if File.exists?(Dir.getwd + '/script/rails')
-  exec(Dir.getwd + '/script/rails', *ARGV)
-else
-  railties_path = File.expand_path('../../lib', __FILE__)
-  $:.unshift(railties_path) if File.directory?(railties_path) && !$:.include?(railties_path)
+require 'rbconfig'
 
-  require 'rails/ruby_version_check'
-  Signal.trap("INT") { puts; exit }
+module Rails
+  module ScriptRailsLoader
+    RUBY = File.join(*RbConfig::CONFIG.values_at("bindir", "ruby_install_name")) + RbConfig::CONFIG["EXEEXT"]
+    SCRIPT_RAILS = File.join('script', 'rails')
 
-  require 'rails/commands/application'
-end
\ No newline at end of file
+    def self.exec_script_rails!
+      cwd = Dir.pwd
+      exec RUBY, SCRIPT_RAILS, *ARGV if File.exists?(SCRIPT_RAILS)
+      Dir.chdir("..") do
+        # Recurse in a chdir block: if the search fails we want to be sure
+        # the application is generated in the original working directory.
+        exec_script_rails! unless cwd == Dir.pwd
+      end
+    rescue SystemCallError
+      # could not chdir, no problem just return
+    end
+  end
+end
+
+Rails::ScriptRailsLoader.exec_script_rails!
+
+railties_path = File.expand_path('../../lib', __FILE__)
+$:.unshift(railties_path) if File.directory?(railties_path) && !$:.include?(railties_path)
+
+require 'rails/ruby_version_check'
+Signal.trap("INT") { puts; exit }
+
+require 'rails/commands/application'
-- 
1.6.6

