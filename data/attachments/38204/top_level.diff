diff --git a/actionpack/lib/action_view/partials.rb b/actionpack/lib/action_view/partials.rb
index eb74d4a..3b58c83 100644
--- a/actionpack/lib/action_view/partials.rb
+++ b/actionpack/lib/action_view/partials.rb
@@ -146,7 +146,12 @@ module ActionView
 
       def find_partial_path(partial_path)
         if partial_path.include?('/')
-          "#{File.dirname(partial_path)}/_#{File.basename(partial_path)}"
+          dirname = File.dirname(partial_path)
+          if dirname == '/'
+            "/_#{File.basename(partial_path)}"
+          else
+            "#{File.dirname(partial_path)}/_#{File.basename(partial_path)}"
+          end
         elsif respond_to?(:controller)
           "#{controller.class.controller_path}/_#{partial_path}"
         else
diff --git a/actionpack/test/fixtures/_top_level_partial.html.erb b/actionpack/test/fixtures/_top_level_partial.html.erb
new file mode 100644
index 0000000..0b1c2e4
--- /dev/null
+++ b/actionpack/test/fixtures/_top_level_partial.html.erb
@@ -0,0 +1 @@
+top level partial html
\ No newline at end of file
diff --git a/actionpack/test/fixtures/_top_level_partial_only.erb b/actionpack/test/fixtures/_top_level_partial_only.erb
new file mode 100644
index 0000000..44f25b6
--- /dev/null
+++ b/actionpack/test/fixtures/_top_level_partial_only.erb
@@ -0,0 +1 @@
+top level partial
\ No newline at end of file
diff --git a/actionpack/test/template/render_test.rb b/actionpack/test/template/render_test.rb
index c37bac9..31cfdce 100644
--- a/actionpack/test/template/render_test.rb
+++ b/actionpack/test/template/render_test.rb
@@ -19,6 +19,10 @@ class ViewRenderTest < Test::Unit::TestCase
     assert_equal "Hello world!", @view.render("test/hello_world")
   end
 
+  def test_render_file_at_top_level
+    assert_equal 'Elastica', @view.render('/shared')
+  end
+
   def test_render_file_with_full_path
     template_path = File.join(File.dirname(__FILE__), '../fixtures/test/hello_world.erb')
     assert_equal "Hello world!", @view.render(:file => template_path)
@@ -47,6 +51,20 @@ class ViewRenderTest < Test::Unit::TestCase
     assert_equal "only partial", @view.render(:partial => "test/partial_only")
   end
 
+  def test_render_partial_with_format
+    assert_equal 'partial html', @view.render(:partial => 'test/partial')
+  end
+
+  def test_render_partial_at_top_level
+    # file fixtures/_top_level_partial_only.erb (not fixtures/test)
+    assert_equal 'top level partial', @view.render(:partial => '/top_level_partial_only')
+  end
+
+  def test_render_partial_with_format_at_top_level
+    # file fixtures/_top_level_partial.html.erb (not fixtures/test, with format extension)
+    assert_equal 'top level partial html', @view.render(:partial => '/top_level_partial')
+  end
+
   def test_render_partial_with_locals
     assert_equal "5", @view.render(:partial => "test/counter", :locals => { :counter_counter => 5 })
   end
