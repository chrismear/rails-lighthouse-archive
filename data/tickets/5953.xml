<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-04-22T06:48:03+01:00</created-at>
  <creator-id type="integer">90556</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5953</number>
  <permalink>sti-type-not-updatable</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;activerecord rails3&quot;</tag>
  <title>STI type not updatable</title>
  <updated-at type="datetime">2011-05-04T08:46:57+01:00</updated-at>
  <user-id type="integer">92848</user-id>
  <version type="integer">13</version>
  <user-name>victorcoder</user-name>
  <creator-name>Dim</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
  <priority-name>Low</priority-name>
  <original-body>Imagine you have the following scenario:

@@@ class Employer &lt; ActiveRecord::Base
end

class Manager &lt; Employer
end

employer = Employer.find(1)          # =&gt; #&lt;Employer&gt;
manager  = employer.becomes(Manager) # =&gt; #&lt;Manager&gt;
manager.save!                        # =&gt; #&lt;Manager&gt;
Employer.find(1)                     # =&gt; #&lt;Employer&gt;
@@@

The problem is in `Persistence#update` (https://github.com/rails/rails/blob/920660b19c5419c6df1c234a84e7fec71b169544/activerecord/lib/active_record/persistence.rb#L252). It calls `Base#unscoped` which calls `Base#relation` where `type_condition` is automatically applied. The resulting SQL statement is therefore `UPDATE employers SET .... WHERE employers.id = 1 AND employers.type = 'Manager'` and although #save! doesn't throw an error the record is not actually updated.

A test case is attached.</original-body>
  <latest-body>Imagine you have the following scenario:

@@@ class Employer &lt; ActiveRecord::Base
end

class Manager &lt; Employer
end

employer = Employer.find(1)          # =&gt; #&lt;Employer&gt;
manager  = employer.becomes(Manager) # =&gt; #&lt;Manager&gt;
manager.save!                        # =&gt; #&lt;Manager&gt;
Employer.find(1)                     # =&gt; #&lt;Employer&gt;
@@@

The problem is in `Persistence#update` (https://github.com/rails/rails/blob/920660b19c5419c6df1c234a84e7fec71b169544/activerecord/lib/active_record/persistence.rb#L252). It calls `Base#unscoped` which calls `Base#relation` where `type_condition` is automatically applied. The resulting SQL statement is therefore `UPDATE employers SET .... WHERE employers.id = 1 AND employers.type = 'Manager'` and although #save! doesn't throw an error the record is not actually updated.

A test case is attached.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Imagine you have the following scenario:&lt;/p&gt;
&lt;p&gt;@@@ class Employer &amp;lt; ActiveRecord::Base end&lt;/p&gt;
&lt;p&gt;class Manager &amp;lt; Employer&lt;br&gt;
end&lt;/p&gt;
&lt;p&gt;employer = Employer.find(1) # =&amp;gt; #&lt;br&gt;
manager = employer.becomes(Manager) # =&amp;gt; #&lt;br&gt;
manager.save! # =&amp;gt; #&lt;br&gt;
Employer.find(1) # =&amp;gt; #&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
The problem is in &lt;/code&gt;Persistence#update (https://github.com/rails/rails/blob/920660b19c5419c6df1c234a84e7fec71b169544/activerecord/lib/active_record/persistence.rb#L252). It calls &lt;code&gt;Base#unscoped&lt;/code&gt; which calls &lt;code&gt;Base#relation&lt;/code&gt; where &lt;code&gt;type_condition&lt;/code&gt; is automatically applied. The resulting SQL statement is therefore &lt;code&gt;UPDATE employers SET .... WHERE employers.id = 1 AND employers.type = 'Manager'&lt;/code&gt; and although #save! doesn't throw an error the record is not actually updated.

&lt;br&gt;
A test case is attached.
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Imagine you have the following scenario:

@@@ class Employer &lt; ActiveRecord::Base
end

class Manager &lt; Employer
end

employer = Employer.find(1)          # =&gt; #&lt;Employer&gt;
manager  = employer.becomes(Manager) # =&gt; #&lt;Manager&gt;
manager.save!                        # =&gt; #&lt;Manager&gt;
Employer.find(1)                     # =&gt; #&lt;Employer&gt;
@@@

The problem is in `Persistence#update` (https://github.com/rails/rails/blob/920660b19c5419c6df1c234a84e7fec71b169544/activerecord/lib/active_record/persistence.rb#L252). It calls `Base#unscoped` which calls `Base#relation` where `type_condition` is automatically applied. The resulting SQL statement is therefore `UPDATE employers SET .... WHERE employers.id = 1 AND employers.type = 'Manager'` and although #save! doesn't throw an error the record is not actually updated.

A test case is attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Imagine you have the following scenario:&lt;/p&gt;
&lt;p&gt;@@@ class Employer &amp;lt; ActiveRecord::Base end&lt;/p&gt;
&lt;p&gt;class Manager &amp;lt; Employer&lt;br&gt;
end&lt;/p&gt;
&lt;p&gt;employer = Employer.find(1) # =&amp;gt; #&lt;br&gt;
manager = employer.becomes(Manager) # =&amp;gt; #&lt;br&gt;
manager.save! # =&amp;gt; #&lt;br&gt;
Employer.find(1) # =&amp;gt; #&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
The problem is in &lt;/code&gt;Persistence#update (https://github.com/rails/rails/blob/920660b19c5419c6df1c234a84e7fec71b169544/activerecord/lib/active_record/persistence.rb#L252). It calls &lt;code&gt;Base#unscoped&lt;/code&gt; which calls &lt;code&gt;Base#relation&lt;/code&gt; where &lt;code&gt;type_condition&lt;/code&gt; is automatically applied. The resulting SQL statement is therefore &lt;code&gt;UPDATE employers SET .... WHERE employers.id = 1 AND employers.type = 'Manager'&lt;/code&gt; and although #save! doesn't throw an error the record is not actually updated.

&lt;br&gt;
A test case is attached.
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-11T16:28:59+00:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2010-11-11T16:29:05+00:00</updated-at>
      <user-id type="integer">90556</user-id>
      <version type="integer">1</version>
      <user-name>Dim</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry about the previous formatting issues, here again:

Imagine you have the following scenario:

@@@
class Employer &lt; ActiveRecord::Base
end

class Manager &lt; Employer
end

employer = Employer.find(1)          # =&gt; #&lt;Employer&gt;
manager  = employer.becomes(Manager) # =&gt; #&lt;Manager&gt;
manager.save!                        # =&gt; #&lt;Manager&gt;
Employer.find(1)                     # =&gt; #&lt;Employer&gt;
@@@

The problem is in [`Persistence#update`](https://github.com/rails/rails/blob/920660b19c5419c6df1c234a84e7fec71b169544/activerecord/lib/active_record/persistence.rb#L252). It calls `Base#unscoped` which calls `Base#relation` where `type_condition` is automatically applied. The resulting SQL statement is therefore 

@@@
UPDATE employers SET .... WHERE employers.id = 1 AND employers.type = 'Manager'` 
@@@

and although #save! doesn't throw an error the record is not actually updated.

A test case is attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry about the previous formatting issues, here again:&lt;/p&gt;
&lt;p&gt;Imagine you have the following scenario:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Employer &amp;lt; ActiveRecord::Base
end

class Manager &amp;lt; Employer
end

employer = Employer.find(1)          # =&amp;gt; #&amp;lt;Employer&amp;gt;
manager  = employer.becomes(Manager) # =&amp;gt; #&amp;lt;Manager&amp;gt;
manager.save!                        # =&amp;gt; #&amp;lt;Manager&amp;gt;
Employer.find(1)                     # =&amp;gt; #&amp;lt;Employer&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The problem is in &lt;a href=
&quot;https://github.com/rails/rails/blob/920660b19c5419c6df1c234a84e7fec71b169544/activerecord/lib/active_record/persistence.rb#L252&quot;&gt;
&lt;code&gt;Persistence#update&lt;/code&gt;&lt;/a&gt;. It calls
&lt;code&gt;Base#unscoped&lt;/code&gt; which calls &lt;code&gt;Base#relation&lt;/code&gt;
where &lt;code&gt;type_condition&lt;/code&gt; is automatically applied. The
resulting SQL statement is therefore&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;UPDATE employers SET .... WHERE employers.id = 1 AND employers.type = 'Manager'`&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and although #save! doesn't throw an error the record is not
actually updated.&lt;/p&gt;
&lt;p&gt;A test case is attached.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-11T16:31:33+00:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2010-11-11T16:31:35+00:00</updated-at>
      <user-id type="integer">90556</user-id>
      <version type="integer">2</version>
      <user-name>Dim</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I don't know about becomes. Is it rails thing or your own implementation? If it is your implementation then can you post the method?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't know about becomes. Is it rails thing or your own
implementation? If it is your implementation then can you post the
method?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-11T16:52:55+00:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2010-11-11T16:52:57+00:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">3</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Here the links:

* [Code](http://github.com/rails/rails/blob/920660b19c5419c6df1c234a84e7fec71b169544/activerecord/lib/active_record/persistence.rb#L93)
* [Documentation](http://api.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-becomes)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here the links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=
&quot;http://github.com/rails/rails/blob/920660b19c5419c6df1c234a84e7fec71b169544/activerecord/lib/active_record/persistence.rb#L93&quot;&gt;
Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=
&quot;http://api.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-becomes&quot;&gt;
Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-11T16:56:24+00:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2010-11-11T16:56:26+00:00</updated-at>
      <user-id type="integer">90556</user-id>
      <version type="integer">4</version>
      <user-name>Dim</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [de2933e1a062f0752512eb0ec60f7217f4890f8c]) STI type is now updated when calling AR::Base.becomes on subclasses [#5953 state:resolved]
https://github.com/rails/rails/commit/de2933e1a062f0752512eb0ec60f7217f4890f8c</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/de2933e1a062f0752512eb0ec60f7217f4890f8c&quot;
title=
&quot;Changeset [de2933e1a062f0752512eb0ec60f7217f4890f8c]&quot;&gt;[de2933e1a062f0752512eb0ec60f7217f4890f8c]&lt;/a&gt;)
STI type is now updated when calling AR::Base.becomes on subclasses
[&lt;a href=&quot;/projects/8994/tickets/5953&quot; title=
&quot;Ticket #5953&quot;&gt;#5953&lt;/a&gt; state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/de2933e1a062f0752512eb0ec60f7217f4890f8c&quot;&gt;
https://github.com/rails/rails/commit/de2933e1a062f0752512eb0ec60f7...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-11T18:17:41+00:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2010-11-11T18:17:43+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Applied.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Applied.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-11T18:17:49+00:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2010-11-11T18:17:52+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">6</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Looking at the docs it seems that becomes is more for temporarily mutating an instance so that it appears as its superclass for rendering purposes (partials, polymorphic routes, etc.). You're trying to use it the other way round - making a superclass become a subclass. 

There should be an official way of mutating an object to a different class and saving the change back to the database but I don't think becomes should be it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looking at the docs it seems that becomes is more for
temporarily mutating an instance so that it appears as its
superclass for rendering purposes (partials, polymorphic routes,
etc.). You're trying to use it the other way round - making a
superclass become a subclass.&lt;/p&gt;
&lt;p&gt;There should be an official way of mutating an object to a
different class and saving the change back to the database but I
don't think becomes should be it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-11T18:21:29+00:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- 
:state: resolved
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2010-11-11T18:21:32+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">7</version>
      <user-name>Andrew White</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Not sure, I think `becomes` is already doing most of the job pretty well, but it's certainly incomplete.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Not sure, I think &lt;code&gt;becomes&lt;/code&gt; is already doing most of
the job pretty well, but it's certainly incomplete.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-11T18:29:04+00:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2010-11-11T18:29:05+00:00</updated-at>
      <user-id type="integer">90556</user-id>
      <version type="integer">8</version>
      <user-name>Dim</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-11T19:18:05+00:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2011-02-11T19:18:56+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-11T19:18:05+00:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2011-02-11T19:19:58+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">10</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This may be stale, but it's still a problem. AFAICS, you can't update the type of an STI record.

If a user changes an ArticleReference to a BookReference, I use #becomes on it, but then the update call tries to update a BookReference with that ID, and there isn't one. I think it's incorrect behavior to use the type column to find a single record - just the id should be used, as was apparently done in Rails &lt; 3.

My workaround is

    Reference.connection.execute &quot;UPDATE `references` SET type = '#{@reference.type}' 
      WHERE id = '#{@reference.id}'&quot;
    @reference.update_attributes params[:reference]</body>
      <body-html>&lt;div&gt;&lt;p&gt;This may be stale, but it's still a problem. AFAICS, you can't
update the type of an STI record.&lt;/p&gt;
&lt;p&gt;If a user changes an ArticleReference to a BookReference, I use
#becomes on it, but then the update call tries to update a
BookReference with that ID, and there isn't one. I think it's
incorrect behavior to use the type column to find a single record -
just the id should be used, as was apparently done in Rails &amp;lt;
3.&lt;/p&gt;
&lt;p&gt;My workaround is&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Reference.connection.execute &quot;UPDATE `references` SET type = '#{@reference.type}' 
  WHERE id = '#{@reference.id}'&quot;
@reference.update_attributes params[:reference]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-18T02:01:23+01:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2011-04-18T02:01:31+01:00</updated-at>
      <user-id type="integer">12071</user-id>
      <version type="integer">11</version>
      <user-name>Mark Wilden</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>PDF to JPG Converter is a more efficient pdf to jpg conversion software
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to image converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to tiff converter&lt;/a&gt;
which is able to convert pdf to jpg format with original output quality and fast conversion speed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;PDF to JPG Converter is a more efficient pdf to jpg conversion
software&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg
converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to
image converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to
tiff converter&lt;/a&gt;&lt;br&gt;
which is able to convert pdf to jpg format with original output
quality and fast conversion speed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-22T04:48:45+01:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2011-04-22T06:48:03+01:00</updated-at>
      <user-id type="integer">146598</user-id>
      <version type="integer">12</version>
      <user-name>machen</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>What's the status of this issue, it should be fixed?

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What's the status of this issue, it should be fixed?&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-05-04T08:46:48+01:00</created-at>
      <creator-id type="integer">90556</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5953</number>
      <permalink>sti-type-not-updatable</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;activerecord rails3&quot;</tag>
      <title>STI type not updatable</title>
      <updated-at type="datetime">2011-05-04T08:46:57+01:00</updated-at>
      <user-id type="integer">92848</user-id>
      <version type="integer">13</version>
      <user-name>victorcoder</user-name>
      <creator-name>Dim</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5953</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>11ed793abeb100f4cacec6a710dcff3d5d3bb915</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-11-11T16:28:59+00:00</created-at>
      <filename>sti-test.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">766071</id>
      <size type="integer">716</size>
      <uploader-id type="integer">90556</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/766071/sti-test.patch</url>
    </attachment>
  </attachments>
</ticket>
