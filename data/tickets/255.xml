<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-26T16:59:34+01:00</created-at>
  <creator-id type="integer">392</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">255</number>
  <permalink>activerecord-condition-hashes-should-respect-ruby-range-syntax</permalink>
  <priority type="integer">15927</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>activerecord edge enhancement patch</tag>
  <title>activerecord condition hashes should respect ruby range syntax</title>
  <updated-at type="datetime">2009-08-08T23:05:38+01:00</updated-at>
  <user-id type="integer">7211</user-id>
  <version type="integer">7</version>
  <user-name>CancelProfileIsBroken</user-name>
  <creator-name>Alex Arnell</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/255</url>
  <priority-name nil="true"></priority-name>
  <original-body>Ruby has some explicit rules for Ranges,

@@@ ruby
a = 1..10 =&gt; 1 through 10
b = 1...10 =&gt; 1 through 9

but activerecord doesn't follow those rules when uses condition hashes.  Take for example:

@@@ ruby
date_range = (2.weeks.ago.to_date)...(Date.today)
Post.find(:all, :conditions =&gt; { :published_at =&gt; date_range })

When I read this could I would expect that query to return all the posts that happened in the last two weeks prior to today.  However this is not the case.  Activerecord uses the BETWEEN sql syntax to handle ranges, which means that the above query actually runs equivalently to (min &lt;= published_at AND published_at &lt;= max).

Attached is a patch (including tests) that corrects this behavior.</original-body>
  <latest-body>Ruby has some explicit rules for Ranges,

@@@ ruby
a = 1..10 =&gt; 1 through 10
b = 1...10 =&gt; 1 through 9

but activerecord doesn't follow those rules when uses condition hashes.  Take for example:

@@@ ruby
date_range = (2.weeks.ago.to_date)...(Date.today)
Post.find(:all, :conditions =&gt; { :published_at =&gt; date_range })

When I read this could I would expect that query to return all the posts that happened in the last two weeks prior to today.  However this is not the case.  Activerecord uses the BETWEEN sql syntax to handle ranges, which means that the above query actually runs equivalently to (min &lt;= published_at AND published_at &lt;= max).

Attached is a patch (including tests) that corrects this behavior.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
Ruby has some explicit rules for Ranges,
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;a = 1..10 =&amp;gt; 1 through 10
b = 1...10 =&amp;gt; 1 through 9

but activerecord doesn't follow those rules when uses condition hashes.  Take for example:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
date_range = (2.weeks.ago.to_date)...(Date.today)
&lt;/p&gt;&lt;p&gt;
Post.find(:all, :conditions =&gt; { :published_at =&gt; date_range })
&lt;/p&gt;&lt;p&gt;
When I read this could I would expect that query to return all the posts that happened in the last two weeks prior to today.  However this is not the case.  Activerecord uses the BETWEEN sql syntax to handle ranges, which means that the above query actually runs equivalently to (min &amp;lt;= published_at AND published_at &amp;lt;= max).
&lt;/p&gt;&lt;p&gt;
Attached is a patch (including tests) that corrects this behavior.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ruby has some explicit rules for Ranges,

@@@ ruby
a = 1..10 =&gt; 1 through 10
b = 1...10 =&gt; 1 through 9
@@@

but activerecord doesn't follow those rules when uses condition hashes.  Take for example:

@@@ ruby
date_range = (2.weeks.ago.to_date)...(Date.today)
Post.find(:all, :conditions =&gt; { :published_at =&gt; date_range })
@@@

When I read this could I would expect that query to return all the posts that happened in the last two weeks prior to today.  However this is not the case.  Activerecord uses the BETWEEN sql syntax to handle ranges, which means that the above query actually runs equivalently to (min &lt;= published_at AND published_at &lt;= max).

Attached is a patch (including tests) that corrects this behavior.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Ruby has some explicit rules for Ranges,
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;a = 1..10 =&amp;gt; 1 through 10
b = 1...10 =&amp;gt; 1 through 9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
but activerecord doesn't follow those rules when uses condition hashes.  Take for example:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;date_range = (2.weeks.ago.to_date)...(Date.today)
Post.find(:all, :conditions =&amp;gt; { :published_at =&amp;gt; date_range })&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
When I read this could I would expect that query to return all the posts that happened in the last two weeks prior to today.  However this is not the case.  Activerecord uses the BETWEEN sql syntax to handle ranges, which means that the above query actually runs equivalently to (min &amp;lt;= published_at AND published_at &amp;lt;= max).
&lt;/p&gt;&lt;p&gt;
Attached is a patch (including tests) that corrects this behavior.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-26T17:00:53+01:00</created-at>
      <creator-id type="integer">392</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">255</number>
      <permalink>activerecord-condition-hashes-should-respect-ruby-range-syntax</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>activerecord condition hashes should respect ruby range syntax</title>
      <updated-at type="datetime">2008-05-26T17:00:53+01:00</updated-at>
      <user-id type="integer">392</user-id>
      <version type="integer">1</version>
      <user-name>Alex Arnell</user-name>
      <creator-name>Alex Arnell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/255</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>updated ticket with proper git formatted patch</body>
      <body-html>&lt;div&gt;&lt;p&gt;
updated ticket with proper git formatted patch
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-26T19:00:45+01:00</created-at>
      <creator-id type="integer">392</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">255</number>
      <permalink>activerecord-condition-hashes-should-respect-ruby-range-syntax</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>activerecord condition hashes should respect ruby range syntax</title>
      <updated-at type="datetime">2008-05-26T19:00:45+01:00</updated-at>
      <user-id type="integer">392</user-id>
      <version type="integer">2</version>
      <user-name>Alex Arnell</user-name>
      <creator-name>Alex Arnell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/255</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I feel the check should be made in attribute_condition() method. I understand it might require a bit more refactoring, but that's worth it.

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I feel the check should be made in attribute_condition() method. I understand it might require a bit more refactoring, but that's worth it.
&lt;/p&gt;&lt;p&gt;
Thanks.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-17T17:28:31+01:00</created-at>
      <creator-id type="integer">392</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">255</number>
      <permalink>activerecord-condition-hashes-should-respect-ruby-range-syntax</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>activerecord condition hashes should respect ruby range syntax</title>
      <updated-at type="datetime">2008-06-17T17:28:31+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>Alex Arnell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/255</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Pratik</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-03T14:48:55+01:00</created-at>
      <creator-id type="integer">392</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">255</number>
      <permalink>activerecord-condition-hashes-should-respect-ruby-range-syntax</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord bugmash edge enhancement patch</tag>
      <title>activerecord condition hashes should respect ruby range syntax</title>
      <updated-at type="datetime">2009-08-03T14:49:01+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">4</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Alex Arnell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/255</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Pratik</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>not reproducible. 

The functionality has already been implemented:

@@@ ruby
  # activerecord/test/cases/finder_test
  def test_find_on_hash_conditions_with_end_exclusive_range
    assert_equal [1,2,3], Topic.find(:all, :conditions =&gt; { :id =&gt; 1..3 }).map(&amp;:id).sort
    assert_equal [1,2], Topic.find(:all, :conditions =&gt; { :id =&gt; 1...3 }).map(&amp;:id).sort
    assert_raise(ActiveRecord::RecordNotFound) { Topic.find(3, :conditions =&gt; { :id =&gt; 2...3 }) }
  end
@@@

(and the patch does not apply)</body>
      <body-html>&lt;div&gt;&lt;p&gt;not reproducible.&lt;/p&gt;
&lt;p&gt;The functionality has already been implemented:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  # activerecord/test/cases/finder_test
  def test_find_on_hash_conditions_with_end_exclusive_range
    assert_equal [1,2,3], Topic.find(:all, :conditions =&amp;gt; { :id =&amp;gt; 1..3 }).map(&amp;amp;:id).sort
    assert_equal [1,2], Topic.find(:all, :conditions =&amp;gt; { :id =&amp;gt; 1...3 }).map(&amp;amp;:id).sort
    assert_raise(ActiveRecord::RecordNotFound) { Topic.find(3, :conditions =&amp;gt; { :id =&amp;gt; 2...3 }) }
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(and the patch does not apply)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T15:26:29+01:00</created-at>
      <creator-id type="integer">392</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">255</number>
      <permalink>activerecord-condition-hashes-should-respect-ruby-range-syntax</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord bugmash edge enhancement patch</tag>
      <title>activerecord condition hashes should respect ruby range syntax</title>
      <updated-at type="datetime">2009-08-08T15:26:35+01:00</updated-at>
      <user-id type="integer">65618</user-id>
      <version type="integer">5</version>
      <user-name>dira</user-name>
      <creator-name>Alex Arnell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/255</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Pratik</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>What dira said - this was fixed in http://github.com/rails/rails/commit/9991868d85b25da672bf119bfcbff22a4bb6e8f1</body>
      <body-html>&lt;div&gt;&lt;p&gt;What dira said - this was fixed in &lt;a href=
&quot;http://github.com/rails/rails/commit/9991868d85b25da672bf119bfcbff22a4bb6e8f1&quot;&gt;
http://github.com/rails/rails/commit/9991868d85b25da672bf119bfcbff2...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T15:42:19+01:00</created-at>
      <creator-id type="integer">392</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">255</number>
      <permalink>activerecord-condition-hashes-should-respect-ruby-range-syntax</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord bugmash edge enhancement patch</tag>
      <title>activerecord condition hashes should respect ruby range syntax</title>
      <updated-at type="datetime">2009-08-08T15:42:23+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">6</version>
      <user-name>Pratik</user-name>
      <creator-name>Alex Arnell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/255</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Pratik</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-08T23:05:35+01:00</created-at>
      <creator-id type="integer">392</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord bugmash edge enhancement patch
:assigned_user: 1366
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">255</number>
      <permalink>activerecord-condition-hashes-should-respect-ruby-range-syntax</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>activerecord edge enhancement patch</tag>
      <title>activerecord condition hashes should respect ruby range syntax</title>
      <updated-at type="datetime">2009-08-08T23:05:38+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">7</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Alex Arnell</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/255</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>5bdf706d15751d7e9e5871e25206aac25c803d00</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-26T19:00:45+01:00</created-at>
      <filename>fix-ar-range-conditions.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">24521</id>
      <size type="integer">2863</size>
      <uploader-id type="integer">392</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/24521/fix-ar-range-conditions.diff</url>
    </attachment>
  </attachments>
</ticket>
