From d1bb1b80c9f1ed139666e1a442ca9a2b2e65fc03 Mon Sep 17 00:00:00 2001
From: Santiago Pastorino <santiago@wyeworks.com>
Date: Wed, 16 Jun 2010 18:01:51 -0300
Subject: [PATCH] No more :safe => true on options, now we rely on input's safety only to be more consistent with other methods

[#4825 state:committed]
---
 actionpack/lib/action_view/helpers/text_helper.rb |   10 +++++-----
 actionpack/test/template/text_helper_test.rb      |   21 ---------------------
 2 files changed, 5 insertions(+), 26 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/text_helper.rb b/actionpack/lib/action_view/helpers/text_helper.rb
index 3b37fd6..3d772bd 100644
--- a/actionpack/lib/action_view/helpers/text_helper.rb
+++ b/actionpack/lib/action_view/helpers/text_helper.rb
@@ -84,7 +84,7 @@ module ActionView
 
         options.reverse_merge!(:length => 30)
 
-        text = h(text) unless text.html_safe? || options[:safe]
+        text = h(text) unless text.html_safe?
         text.truncate(options.delete(:length), options) if text
       end
 
@@ -116,7 +116,7 @@ module ActionView
         end
         options.reverse_merge!(:highlighter => '<strong class="highlight">\1</strong>')
 
-        text = h(text) unless text.html_safe? || options[:safe]
+        text = h(text) unless text.html_safe?
         if text.blank? || phrases.blank?
           text
         else
@@ -251,10 +251,10 @@ module ActionView
       #
       #   simple_format("Look ma! A class!", :class => 'description')
       #   # => "<p class='description'>Look ma! A class!</p>"
-      def simple_format(text, html_options={}, options={})
+      def simple_format(text, html_options={})
         text = '' if text.nil?
         start_tag = tag('p', html_options, true)
-        text = h(text) unless text.html_safe? || options[:safe]
+        text = h(text) unless text.html_safe?
         text.gsub!(/\r\n?/, "\n")                    # \r\n and \r -> \n
         text.gsub!(/\n\n+/, "</p>\n\n#{start_tag}")  # 2+ newline  -> paragraph
         text.gsub!(/([^\n]\n)(?=[^\n])/, '\1<br />') # 1 newline   -> br
@@ -498,7 +498,7 @@ module ActionView
               link_text = block_given?? yield(href) : href
               href = 'http://' + href unless scheme
 
-              content_tag(:a, link_text, link_attributes.merge('href' => href), !(options[:safe] || text.html_safe?)) + punctuation.reverse.join('')
+              content_tag(:a, link_text, link_attributes.merge('href' => href), !text.html_safe?) + punctuation.reverse.join('')
             end
           end.html_safe
         end
diff --git a/actionpack/test/template/text_helper_test.rb b/actionpack/test/template/text_helper_test.rb
index b0a4c2a..3a8ce23 100644
--- a/actionpack/test/template/text_helper_test.rb
+++ b/actionpack/test/template/text_helper_test.rb
@@ -44,10 +44,6 @@ class TextHelperTest < ActionView::TestCase
     assert_equal "<p>&lt;b&gt; test with unsafe string &lt;/b&gt;&lt;script&gt;code!&lt;/script&gt;</p>", simple_format("<b> test with unsafe string </b><script>code!</script>")
   end
 
-  def test_simple_format_should_not_escape_input_if_safe_option
-    assert_equal "<p><b> test with unsafe string </b><script>code!</script></p>", simple_format("<b> test with unsafe string </b><script>code!</script>", {}, :safe => true)
-  end
-
   def test_simple_format_should_not_escape_safe_input
     assert_equal "<p><b> test with safe string </b></p>", simple_format("<b> test with safe string </b>".html_safe)
   end
@@ -65,11 +61,6 @@ class TextHelperTest < ActionView::TestCase
     assert_equal "Hello &lt...", truncate("Hello <script>code!</script>World!!", :length => 12)
   end
 
-  def test_truncate_should_not_escape_input_if_safe_option
-    assert_equal "Hello <sc...", truncate("Hello <script>code!</script>World!", :length => 12, :safe => true)
-    assert_equal "Hello <sc...", truncate("Hello <script>code!</script>World!!", :length => 12, :safe => true)
-  end
-
   def test_truncate_should_not_escape_safe_input
     assert_equal "Hello <sc...", truncate("Hello <script>code!</script>World!".html_safe, :length => 12)
     assert_equal "Hello <sc...", truncate("Hello <script>code!</script>World!!".html_safe, :length => 12)
@@ -145,13 +136,6 @@ class TextHelperTest < ActionView::TestCase
     )
   end
 
-  def test_highlight_should_not_escape_input_if_safe_option
-    assert_equal(
-      "This is a <strong class=\"highlight\">beautiful</strong> morning<script>code!</script>",
-      highlight("This is a beautiful morning<script>code!</script>", "beautiful", :safe => true)
-    )
-  end
-
   def test_highlight_should_not_escape_safe_input
     assert_equal(
       "This is a <strong class=\"highlight\">beautiful</strong> morning<script>code!</script>",
@@ -435,11 +419,6 @@ class TextHelperTest < ActionView::TestCase
     assert_equal %{<a href="http://www.rubyonrails.com?id=1&amp;num=2">http://www.rubyonrails.com?id=1&amp;num=2</a>}, auto_link(link_raw)
   end
 
-  def test_auto_link_should_sanitize_unsafe_input
-    link_raw     = %{http://www.rubyonrails.com?id=1&num=2}
-    assert_equal %{<a href="http://www.rubyonrails.com?id=1&num=2">http://www.rubyonrails.com?id=1&num=2</a>}, auto_link(link_raw, :safe => true)
-  end
-
   def test_auto_link_should_not_sanitize_safe_input
     link_raw     = %{http://www.rubyonrails.com?id=1&num=2}
     assert_equal %{<a href="http://www.rubyonrails.com?id=1&num=2">http://www.rubyonrails.com?id=1&num=2</a>}, auto_link(link_raw.html_safe)
-- 
1.7.1

