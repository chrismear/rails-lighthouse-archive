<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-27T20:40:46+00:00</created-at>
  <creator-id type="integer">52179</creator-id>
  <milestone-due-on type="datetime">2009-08-31T00:00:00+01:00</milestone-due-on>
  <milestone-id type="integer">41987</milestone-id>
  <number type="integer">2363</number>
  <permalink>sqlite-errors-when-using-dbfile-directive-in-databaseyml</permalink>
  <priority type="integer">15</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2-3-stable 2.3.2 database database.yml dbfile railties sqlite sqlite3</tag>
  <title>Sqlite errors when using dbfile directive in database.yml</title>
  <updated-at type="datetime">2009-08-04T01:08:09+01:00</updated-at>
  <user-id type="integer">52179</user-id>
  <version type="integer">4</version>
  <user-name>David Kelso</user-name>
  <creator-name>David Kelso</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2363</url>
  <milestone-title>2.3.4</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Hi there!

So, after many hours of debugging why my script/dbconsole wouldn't run, I've discovered that I was using the dbfile directive in my database.yml. eg:

@@@
development:
  adapter: sqlite3
  dbfile: db/development.db
@@@

This makes script/dbconsole crash with the following message:

@@@
/opt/local/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/commands/dbconsole.rb:80:in `exec': can't convert nil into String (TypeError)
	from /opt/local/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/commands/dbconsole.rb:80
	from /opt/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require'
	from /opt/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require'
	from script/dbconsole:3
@@@

Changing to use the 'database' directive fixes this problem. Is there any reason the 'dbfile' directive is still around? Is this really a bug in the sqlite-ruby gem?

First time bug reporting, so I'm sure I'm doing things wrong. Let me know where to start if I need to do tests/patches/whatnot.

david</original-body>
  <latest-body>Hi there!

So, after many hours of debugging why my script/dbconsole wouldn't run, I've discovered that I was using the dbfile directive in my database.yml. eg:

@@@
development:
  adapter: sqlite3
  dbfile: db/development.db
@@@

This makes script/dbconsole crash with the following message:

@@@
/opt/local/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/commands/dbconsole.rb:80:in `exec': can't convert nil into String (TypeError)
	from /opt/local/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/commands/dbconsole.rb:80
	from /opt/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require'
	from /opt/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require'
	from script/dbconsole:3
@@@

Changing to use the 'database' directive fixes this problem. Is there any reason the 'dbfile' directive is still around? Is this really a bug in the sqlite-ruby gem?

First time bug reporting, so I'm sure I'm doing things wrong. Let me know where to start if I need to do tests/patches/whatnot.

david</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hi there!&lt;/p&gt;
&lt;p&gt;So, after many hours of debugging why my script/dbconsole
wouldn't run, I've discovered that I was using the dbfile directive
in my database.yml. eg:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
development:
  adapter: sqlite3
  dbfile: db/development.db
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This makes script/dbconsole crash with the following
message:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
/opt/local/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/commands/dbconsole.rb:80:in `exec': can't convert nil into String (TypeError)
	from /opt/local/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/commands/dbconsole.rb:80
	from /opt/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require'
	from /opt/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require'
	from script/dbconsole:3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Changing to use the 'database' directive fixes this problem. Is
there any reason the 'dbfile' directive is still around? Is this
really a bug in the sqlite-ruby gem?&lt;/p&gt;
&lt;p&gt;First time bug reporting, so I'm sure I'm doing things wrong.
Let me know where to start if I need to do
tests/patches/whatnot.&lt;/p&gt;
&lt;p&gt;david&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi there!

So, after many hours of debugging why my script/dbconsole wouldn't run, I've discovered that I was using the dbfile directive in my database.yml. eg:

@@@
development:
  adapter: sqlite3
  dbfile: db/development.db
@@@

This makes script/dbconsole crash with the following message:

@@@
/opt/local/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/commands/dbconsole.rb:80:in `exec': can't convert nil into String (TypeError)
	from /opt/local/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/commands/dbconsole.rb:80
	from /opt/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require'
	from /opt/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require'
	from script/dbconsole:3
@@@

Changing to use the 'database' directive fixes this problem. Is there any reason the 'dbfile' directive is still around? Is this really a bug in the sqlite-ruby gem?

First time bug reporting, so I'm sure I'm doing things wrong. Let me know where to start if I need to do tests/patches/whatnot.

david</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi there!&lt;/p&gt;
&lt;p&gt;So, after many hours of debugging why my script/dbconsole
wouldn't run, I've discovered that I was using the dbfile directive
in my database.yml. eg:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
development:
  adapter: sqlite3
  dbfile: db/development.db
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This makes script/dbconsole crash with the following
message:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
/opt/local/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/commands/dbconsole.rb:80:in `exec': can't convert nil into String (TypeError)
	from /opt/local/lib/ruby/gems/1.8/gems/rails-2.3.2/lib/commands/dbconsole.rb:80
	from /opt/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require'
	from /opt/local/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require'
	from script/dbconsole:3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Changing to use the 'database' directive fixes this problem. Is
there any reason the 'dbfile' directive is still around? Is this
really a bug in the sqlite-ruby gem?&lt;/p&gt;
&lt;p&gt;First time bug reporting, so I'm sure I'm doing things wrong.
Let me know where to start if I need to do
tests/patches/whatnot.&lt;/p&gt;
&lt;p&gt;david&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-27T20:40:46+00:00</created-at>
      <creator-id type="integer">52179</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2363</number>
      <permalink>sqlite-errors-when-using-dbfile-directive-in-databaseyml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.2 database database.yml sqlite</tag>
      <title>Sqlite errors when using dbfile directive in database.yml</title>
      <updated-at type="datetime">2009-03-27T20:40:50+00:00</updated-at>
      <user-id type="integer">52179</user-id>
      <version type="integer">1</version>
      <user-name>David Kelso</user-name>
      <creator-name>David Kelso</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2363</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I just found a related issue with using `rake db:drop` given a SQLite database.

The related block of code from `railties/lib/tasks/databases.rake`:

@@@ ruby
  def drop_database(config)
    case config['adapter']
    # ...
    when /^sqlite/
      FileUtils.rm(File.join(RAILS_ROOT, config['database']))
    # ...
    end
  end
@@@

If this is called when only the dbfile config option is provided, you get an error as you'd expect:

  Couldn't drop  : #&lt;TypeError: can't convert nil into String&gt;

Looked in 2-3-stable and it seems like there are some places where both are supported and others (like the two mentioned here) where only the `database` key is used.

The way forward it seems it to be one of these two options:

 1. officially deprecate `dbfile` and therefore include code to warn users of this fact
 2. ensure support for `dbfile` everywhere the `database` config option is used

I've attached a patch against 2-3-stable that should fix the two issues mentioned in this ticket, but making the above decision is more important for this ticket.

Assigning to the last committer to the line in question for `databases.rake` just to have someone listed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just found a related issue with using &lt;code&gt;rake
db:drop&lt;/code&gt; given a SQLite database.&lt;/p&gt;
&lt;p&gt;The related block of code from
&lt;code&gt;railties/lib/tasks/databases.rake&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  def drop_database(config)
    case config['adapter']
    # ...
    when /^sqlite/
      FileUtils.rm(File.join(RAILS_ROOT, config['database']))
    # ...
    end
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If this is called when only the dbfile config option is
provided, you get an error as you'd expect:&lt;/p&gt;
&lt;p&gt;Couldn't drop : #&amp;lt;TypeError: can't convert nil into
String&amp;gt;&lt;/p&gt;
&lt;p&gt;Looked in 2-3-stable and it seems like there are some places
where both are supported and others (like the two mentioned here)
where only the &lt;code&gt;database&lt;/code&gt; key is used.&lt;/p&gt;
&lt;p&gt;The way forward it seems it to be one of these two options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;officially deprecate &lt;code&gt;dbfile&lt;/code&gt; and therefore include
code to warn users of this fact&lt;/li&gt;
&lt;li&gt;ensure support for &lt;code&gt;dbfile&lt;/code&gt; everywhere the
&lt;code&gt;database&lt;/code&gt; config option is used&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I've attached a patch against 2-3-stable that should fix the two
issues mentioned in this ticket, but making the above decision is
more important for this ticket.&lt;/p&gt;
&lt;p&gt;Assigning to the last committer to the line in question for
&lt;code&gt;databases.rake&lt;/code&gt; just to have someone listed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-13T15:51:51+01:00</created-at>
      <creator-id type="integer">52179</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3.2 database database.yml sqlite
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2363</number>
      <permalink>sqlite-errors-when-using-dbfile-directive-in-databaseyml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable 2.3.2 database database.yml dbfile railties sqlite sqlite3</tag>
      <title>Sqlite errors when using dbfile directive in database.yml</title>
      <updated-at type="datetime">2009-05-13T15:51:53+01:00</updated-at>
      <user-id type="integer">41366</user-id>
      <version type="integer">2</version>
      <user-name>Paul Hinze</user-name>
      <creator-name>David Kelso</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2363</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>2-3-stable: http://github.com/rails/rails/commit/32cfd4c2f8cebf3dd331b2f830a268dbf637adf3
master: http://github.com/rails/rails/commit/cdf60e46cc01e5f7b14e95a0b7d914516fcdcbc1</body>
      <body-html>&lt;div&gt;&lt;p&gt;2-3-stable: &lt;a href=
&quot;http://github.com/rails/rails/commit/32cfd4c2f8cebf3dd331b2f830a268dbf637adf3&quot;&gt;
http://github.com/rails/rails/commit/32cfd4c2f8cebf3dd331b2f830a268...&lt;/a&gt;&lt;br&gt;
master: &lt;a href=
&quot;http://github.com/rails/rails/commit/cdf60e46cc01e5f7b14e95a0b7d914516fcdcbc1&quot;&gt;
http://github.com/rails/rails/commit/cdf60e46cc01e5f7b14e95a0b7d914...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-02T02:24:02+01:00</created-at>
      <creator-id type="integer">52179</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">41987</milestone-id>
      <number type="integer">2363</number>
      <permalink>sqlite-errors-when-using-dbfile-directive-in-databaseyml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable 2.3.2 database database.yml dbfile railties sqlite sqlite3</tag>
      <title>Sqlite errors when using dbfile directive in database.yml</title>
      <updated-at type="datetime">2009-08-02T02:24:05+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>David Kelso</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2363</url>
      <milestone-title>2.3.4</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Great! Thanks for solving this!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Great! Thanks for solving this!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-08-04T01:08:05+01:00</created-at>
      <creator-id type="integer">52179</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">41987</milestone-id>
      <number type="integer">2363</number>
      <permalink>sqlite-errors-when-using-dbfile-directive-in-databaseyml</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2-3-stable 2.3.2 database database.yml dbfile railties sqlite sqlite3</tag>
      <title>Sqlite errors when using dbfile directive in database.yml</title>
      <updated-at type="datetime">2009-08-04T01:08:09+01:00</updated-at>
      <user-id type="integer">52179</user-id>
      <version type="integer">4</version>
      <user-name>David Kelso</user-name>
      <creator-name>David Kelso</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2363</url>
      <milestone-title>2.3.4</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>6fb684cbef0294dad0d6fc6d0c3be796123d27ea</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-05-13T15:51:51+01:00</created-at>
      <filename>add_missing_dbfile_cases_for_sqlite.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">122081</id>
      <size type="integer">1341</size>
      <uploader-id type="integer">41366</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/122081/add_missing_dbfile_cases_for_sqlite.patch</url>
    </attachment>
  </attachments>
</ticket>
