<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-11T22:37:38+00:00</created-at>
  <creator-id type="integer">15613</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2217</number>
  <permalink>association-reload-fails-due-to-cached-finder_sql</permalink>
  <priority type="integer">1408</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>Association reload fails due to cached @finder_sql</title>
  <updated-at type="datetime">2011-02-02T18:33:04+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">4</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Jacob Burkhart</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2217</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>assuming that:

@@@ ruby
class Tag &lt; ActiveRecord::Base
  has_one  :tagging
@@@
and
@@@ ruby
class Tagging &lt; ActiveRecord::Base
  belongs_to :tag
@@@

This test fails on the second assert_equal after tag.tagging.reload

@@@ ruby
  def test_where_reload_assoc_fails
    tag = Tag.new
    ing = Tagging.new
    
    ing.tag = tag
    tag.tagging = ing
    
    tag.save!
    
    assert_equal(ing, tag.tagging)

    tag.tagging.reload

    assert_equal(ing, tag.tagging)
  end
@@@

Here is an almost identical test that passes

@@@ ruby
  def test_where_reload_assoc_works
    tag = Tag.new
    ing = Tagging.new
    
    ing.tag = tag
    tag.tagging = ing
    
    tag.save!
    
    assert_equal(ing, tag.tagging)

    tag.reload

    assert_equal(ing, tag.tagging)
  end
@@@</original-body>
  <latest-body>assuming that:

@@@ ruby
class Tag &lt; ActiveRecord::Base
  has_one  :tagging
@@@
and
@@@ ruby
class Tagging &lt; ActiveRecord::Base
  belongs_to :tag
@@@

This test fails on the second assert_equal after tag.tagging.reload

@@@ ruby
  def test_where_reload_assoc_fails
    tag = Tag.new
    ing = Tagging.new
    
    ing.tag = tag
    tag.tagging = ing
    
    tag.save!
    
    assert_equal(ing, tag.tagging)

    tag.tagging.reload

    assert_equal(ing, tag.tagging)
  end
@@@

Here is an almost identical test that passes

@@@ ruby
  def test_where_reload_assoc_works
    tag = Tag.new
    ing = Tagging.new
    
    ing.tag = tag
    tag.tagging = ing
    
    tag.save!
    
    assert_equal(ing, tag.tagging)

    tag.reload

    assert_equal(ing, tag.tagging)
  end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;assuming that:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Tag &amp;lt; ActiveRecord::Base
  has_one  :tagging
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Tagging &amp;lt; ActiveRecord::Base
  belongs_to :tag
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This test fails on the second assert_equal after
tag.tagging.reload&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  def test_where_reload_assoc_fails
    tag = Tag.new
    ing = Tagging.new
    
    ing.tag = tag
    tag.tagging = ing
    
    tag.save!
    
    assert_equal(ing, tag.tagging)

    tag.tagging.reload

    assert_equal(ing, tag.tagging)
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is an almost identical test that passes&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  def test_where_reload_assoc_works
    tag = Tag.new
    ing = Tagging.new
    
    ing.tag = tag
    tag.tagging = ing
    
    tag.save!
    
    assert_equal(ing, tag.tagging)

    tag.reload

    assert_equal(ing, tag.tagging)
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>assuming that:

@@@ ruby
class Tag &lt; ActiveRecord::Base
  has_one  :tagging
@@@
and
@@@ ruby
class Tagging &lt; ActiveRecord::Base
  belongs_to :tag
@@@

This test fails on the second assert_equal after tag.tagging.reload

@@@ ruby
  def test_where_reload_assoc_fails
    tag = Tag.new
    ing = Tagging.new
    
    ing.tag = tag
    tag.tagging = ing
    
    tag.save!
    
    assert_equal(ing, tag.tagging)

    tag.tagging.reload

    assert_equal(ing, tag.tagging)
  end
@@@

Here is an almost identical test that passes

@@@ ruby
  def test_where_reload_assoc_works
    tag = Tag.new
    ing = Tagging.new
    
    ing.tag = tag
    tag.tagging = ing
    
    tag.save!
    
    assert_equal(ing, tag.tagging)

    tag.reload

    assert_equal(ing, tag.tagging)
  end
@@@


The problem appears to be that the tag.tagging.reload uses a cached @finder_sql which was generated when the association was first referenced (when assigning the Not yet saved &quot;ing&quot; object to it) At that point the finder_sql was generated to include this line:

@@@ ruby
  &quot;#{@reflection.quoted_table_name}.#{@reflection.options[:as]}_id = #{owner_quoted_id} AND &quot; +
@@@ 

And owner_quoted_id is nil at this point because &quot;tag&quot; is not yet saved.

So when we tag.tagging.reload we execute this bad cached SQL that says &quot;tag_id = NULL&quot;</body>
      <body-html>&lt;div&gt;&lt;p&gt;assuming that:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Tag &amp;lt; ActiveRecord::Base
  has_one  :tagging
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Tagging &amp;lt; ActiveRecord::Base
  belongs_to :tag
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This test fails on the second assert_equal after
tag.tagging.reload&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  def test_where_reload_assoc_fails
    tag = Tag.new
    ing = Tagging.new
    
    ing.tag = tag
    tag.tagging = ing
    
    tag.save!
    
    assert_equal(ing, tag.tagging)

    tag.tagging.reload

    assert_equal(ing, tag.tagging)
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is an almost identical test that passes&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  def test_where_reload_assoc_works
    tag = Tag.new
    ing = Tagging.new
    
    ing.tag = tag
    tag.tagging = ing
    
    tag.save!
    
    assert_equal(ing, tag.tagging)

    tag.reload

    assert_equal(ing, tag.tagging)
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem appears to be that the tag.tagging.reload uses a
cached @finder_sql which was generated when the association was
first referenced (when assigning the Not yet saved &quot;ing&quot; object to
it) At that point the finder_sql was generated to include this
line:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  &amp;quot;#{@reflection.quoted_table_name}.#{@reflection.options[:as]}_id = #{owner_quoted_id} AND &amp;quot; +
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And owner_quoted_id is nil at this point because &quot;tag&quot; is not
yet saved.&lt;/p&gt;
&lt;p&gt;So when we tag.tagging.reload we execute this bad cached SQL
that says &quot;tag_id = NULL&quot;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-11T22:37:38+00:00</created-at>
      <creator-id type="integer">15613</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2217</number>
      <permalink>association-reload-fails-due-to-cached-finder_sql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Association reload fails due to cached @finder_sql</title>
      <updated-at type="datetime">2009-03-11T22:42:11+00:00</updated-at>
      <user-id type="integer">15613</user-id>
      <version type="integer">1</version>
      <user-name>Jacob Burkhart</user-name>
      <creator-name>Jacob Burkhart</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2217</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:41+01:00</created-at>
      <creator-id type="integer">15613</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2217</number>
      <permalink>association-reload-fails-due-to-cached-finder_sql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Association reload fails due to cached @finder_sql</title>
      <updated-at type="datetime">2010-05-04T18:48:41+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Jacob Burkhart</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2217</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:53:55+00:00</created-at>
      <creator-id type="integer">15613</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2217</number>
      <permalink>association-reload-fails-due-to-cached-finder_sql</permalink>
      <priority type="integer">1408</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Association reload fails due to cached @finder_sql</title>
      <updated-at type="datetime">2011-02-02T18:32:27+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jacob Burkhart</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2217</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:53:56+00:00</created-at>
      <creator-id type="integer">15613</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2217</number>
      <permalink>association-reload-fails-due-to-cached-finder_sql</permalink>
      <priority type="integer">1408</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Association reload fails due to cached @finder_sql</title>
      <updated-at type="datetime">2011-02-02T18:33:04+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jacob Burkhart</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2217</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
