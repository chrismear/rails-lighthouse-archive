<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-22T08:32:33+00:00</created-at>
  <creator-id type="integer">81520</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4386</number>
  <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
  <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
  <updated-at type="datetime">2011-04-24T14:54:44+01:00</updated-at>
  <user-id type="integer">146771</user-id>
  <version type="integer">28</version>
  <user-name>Brian Buchalter</user-name>
  <creator-name>Jens</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
  <priority-name>Low</priority-name>
  <original-body>Problem: Upon destroying an ActiveRecord::Base object, the &quot;before_destroy&quot; method - which should trigger a transaction rollback if returning false - is only exceuted AFTER all child objects have been destroyed via &quot;:dependent =&gt; :destroy&quot;.

However, this prevents the before_destroy method from seeing those same child objects, in case it needs them to determine whether the destruction should be successful.

Expected behaviour:
before_destroy should be called _before_ any objects are destroyed, even child records. The before_destroy context should see the original state of the application as if &quot;destroy&quot; was never called. It should be executed within the &quot;destroy&quot; transaction, however, so that any changes it makes can be rolled back.


@@@ ruby
class Foo &lt; AR::Base
 has_many :children, :dependent =&gt; :destroy
 has_many :grandchildren, :through =&gt; :children

 before_destroy :check
 def check
  # will always be true since all grandchildren have already been destroyed at this stage
  return self.grandchildren.still_there.empty?
 end
end

class Child &lt; AR::Base
 has_many :grandchildren
 belongs_to :foo
end

class Grandchild &lt; AR::Base
 belongs_to :child
 named_scope :still_there, :conditions =&gt; ...
end
@@@</original-body>
  <latest-body>Problem: Upon destroying an ActiveRecord::Base object, the &quot;before_destroy&quot; method - which should trigger a transaction rollback if returning false - is only exceuted AFTER all child objects have been destroyed via &quot;:dependent =&gt; :destroy&quot;.

However, this prevents the before_destroy method from seeing those same child objects, in case it needs them to determine whether the destruction should be successful.

Expected behaviour:
before_destroy should be called _before_ any objects are destroyed, even child records. The before_destroy context should see the original state of the application as if &quot;destroy&quot; was never called. It should be executed within the &quot;destroy&quot; transaction, however, so that any changes it makes can be rolled back.


@@@ ruby
class Foo &lt; AR::Base
 has_many :children, :dependent =&gt; :destroy
 has_many :grandchildren, :through =&gt; :children

 before_destroy :check
 def check
  # will always be true since all grandchildren have already been destroyed at this stage
  return self.grandchildren.still_there.empty?
 end
end

class Child &lt; AR::Base
 has_many :grandchildren
 belongs_to :foo
end

class Grandchild &lt; AR::Base
 belongs_to :child
 named_scope :still_there, :conditions =&gt; ...
end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Problem: Upon destroying an ActiveRecord::Base object, the
&quot;before_destroy&quot; method - which should trigger a transaction
rollback if returning false - is only exceuted AFTER all child
objects have been destroyed via &quot;:dependent =&amp;gt; :destroy&quot;.&lt;/p&gt;
&lt;p&gt;However, this prevents the before_destroy method from seeing
those same child objects, in case it needs them to determine
whether the destruction should be successful.&lt;/p&gt;
&lt;p&gt;Expected behaviour:&lt;br&gt;
before_destroy should be called &lt;em&gt;before&lt;/em&gt; any objects are
destroyed, even child records. The before_destroy context should
see the original state of the application as if &quot;destroy&quot; was never
called. It should be executed within the &quot;destroy&quot; transaction,
however, so that any changes it makes can be rolled back.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Foo &amp;lt; AR::Base
 has_many :children, :dependent =&amp;gt; :destroy
 has_many :grandchildren, :through =&amp;gt; :children

 before_destroy :check
 def check
  # will always be true since all grandchildren have already been destroyed at this stage
  return self.grandchildren.still_there.empty?
 end
end

class Child &amp;lt; AR::Base
 has_many :grandchildren
 belongs_to :foo
end

class Grandchild &amp;lt; AR::Base
 belongs_to :child
 named_scope :still_there, :conditions =&amp;gt; ...
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Problem: Upon destroying an ActiveRecord::Base object, the &quot;before_destroy&quot; method - which should trigger a transaction rollback if returning false - is only exceuted AFTER all child objects have been destroyed via &quot;:dependent =&gt; :destroy&quot;.

However, this prevents the before_destroy method from seeing those same child objects, in case it needs them to determine whether the destruction should be successful.

Expected behaviour:
before_destroy should be called _before_ any objects are destroyed, even child records. The before_destroy context should see the original state of the application as if &quot;destroy&quot; was never called. It should be executed within the &quot;destroy&quot; transaction, however, so that any changes it makes can be rolled back.


@@@ ruby
class Foo &lt; AR::Base
 has_many :children, :dependent =&gt; :destroy
 has_many :grandchildren, :through =&gt; :children

 before_destroy :check
 def check
  # will always be true since all grandchildren have already been destroyed at this stage
  return self.grandchildren.still_there.empty?
 end
end

class Child &lt; AR::Base
 has_many :grandchildren
 belongs_to :foo
end

class Grandchild &lt; AR::Base
 belongs_to :child
 named_scope :still_there, :conditions =&gt; ...
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Problem: Upon destroying an ActiveRecord::Base object, the
&quot;before_destroy&quot; method - which should trigger a transaction
rollback if returning false - is only exceuted AFTER all child
objects have been destroyed via &quot;:dependent =&amp;gt; :destroy&quot;.&lt;/p&gt;
&lt;p&gt;However, this prevents the before_destroy method from seeing
those same child objects, in case it needs them to determine
whether the destruction should be successful.&lt;/p&gt;
&lt;p&gt;Expected behaviour:&lt;br&gt;
before_destroy should be called &lt;em&gt;before&lt;/em&gt; any objects are
destroyed, even child records. The before_destroy context should
see the original state of the application as if &quot;destroy&quot; was never
called. It should be executed within the &quot;destroy&quot; transaction,
however, so that any changes it makes can be rolled back.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Foo &amp;lt; AR::Base
 has_many :children, :dependent =&amp;gt; :destroy
 has_many :grandchildren, :through =&amp;gt; :children

 before_destroy :check
 def check
  # will always be true since all grandchildren have already been destroyed at this stage
  return self.grandchildren.still_there.empty?
 end
end

class Child &amp;lt; AR::Base
 has_many :grandchildren
 belongs_to :foo
end

class Grandchild &amp;lt; AR::Base
 belongs_to :child
 named_scope :still_there, :conditions =&amp;gt; ...
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-13T21:42:53+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-04-13T21:42:54+01:00</updated-at>
      <user-id type="integer">81520</user-id>
      <version type="integer">1</version>
      <user-name>Jens</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Could you perhaps create another method that you can call BEFORE calling destroy on the Foo record?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could you perhaps create another method that you can call BEFORE
calling destroy on the Foo record?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-14T04:22:59+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-04-14T04:23:02+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">2</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Another option is to override the destroy method, e.g:

@@@ ruby
class Order &lt; ActiveRecord::Base
  has_many :items

  def destroy
    ok_to_destroy? ? super : self
  end

  private
    def ok_to_destroy?
      errors.clear
      errors.add(:items, &quot;Can't destroy order as items have been processed&quot;) if items.processed_any?
      errors.empty?
    end
  end
end

class Item &lt; ActiveRecord::Base
  belongs_to :order
  named_scope :processed, :conditions =&gt; { :processed =&gt; true }
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;Another option is to override the destroy method, e.g:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Order &amp;lt; ActiveRecord::Base
  has_many :items

  def destroy
    ok_to_destroy? ? super : self
  end

  private
    def ok_to_destroy?
      errors.clear
      errors.add(:items, &quot;Can't destroy order as items have been processed&quot;) if items.processed_any?
      errors.empty?
    end
  end
end

class Item &amp;lt; ActiveRecord::Base
  belongs_to :order
  named_scope :processed, :conditions =&amp;gt; { :processed =&amp;gt; true }
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-14T08:46:03+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-04-14T08:46:05+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">3</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thank you for the hints!

Creating another method and manually calling this before destroying children is IMO exactly what :before_destroy should be for. Right? Also, I would have to insert this in a dozen places where complex dependencies exist, so this is not really a solution.

Overriding &quot;destroy&quot; can be a solution if I do not accidentally touch Rails internals (as in overriding the &quot;initialize&quot; method, which can have numerous side effects).

But I still regard this as a bug: before_destroy should either be renamed, or be executed _before_ anything ist _destroyed_, including child objects.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thank you for the hints!&lt;/p&gt;
&lt;p&gt;Creating another method and manually calling this before
destroying children is IMO exactly what :before_destroy should be
for. Right? Also, I would have to insert this in a dozen places
where complex dependencies exist, so this is not really a
solution.&lt;/p&gt;
&lt;p&gt;Overriding &quot;destroy&quot; can be a solution if I do not accidentally
touch Rails internals (as in overriding the &quot;initialize&quot; method,
which can have numerous side effects).&lt;/p&gt;
&lt;p&gt;But I still regard this as a bug: before_destroy should either
be renamed, or be executed &lt;em&gt;before&lt;/em&gt; anything ist
&lt;em&gt;destroyed&lt;/em&gt;, including child objects.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-15T06:44:12+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-04-15T06:44:12+01:00</updated-at>
      <user-id type="integer">81520</user-id>
      <version type="integer">4</version>
      <user-name>Jens</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The problem is that the child records are deleted using a before_destroy callback as well and the callbacks are executed in the order that they're added. This can't be changed to after_destroy because if foreign keys are being used in the database it will cause an error if they're not cascading deletes and the child records won't be found to have their destroy methods called if cascading deletes are enabled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The problem is that the child records are deleted using a
before_destroy callback as well and the callbacks are executed in
the order that they're added. This can't be changed to
after_destroy because if foreign keys are being used in the
database it will cause an error if they're not cascading deletes
and the child records won't be found to have their destroy methods
called if cascading deletes are enabled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-15T10:17:42+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-04-15T10:17:45+01:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">5</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Then this issue is maybe more general than I thought. Perhaps we need a way to order the  callbacks? Something like

@@@&#160;ruby
Class Foo &lt; AR::Base
   # adds :check to the beginning of the before_destroy chain
   before_destroy :check, :order =&gt; :first
   # default, adds :check to the end of the before_destroy chain
   before_destroy :check, :order =&gt; :last
   ...
end
@@@

Same for all other callbacks.

IMHO this is absolutely necessary if Rails also uses these callbacks internally, since  the callbacks give the impression that the user has complete control over them, which is not true.

Alternatively (and maybe better), the child deletion procedure (and other internal routines which use before_ / after_ callbacks) need to be rewritten to be executed _after_ all _before_ callbacks, or _before_ all _after_ callbacks, respectively, since this is what the user expects according to the naming of these procedures and their documentation, which does not mention that pre-defined callbacks already exist internally.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Then this issue is maybe more general than I thought. Perhaps we
need a way to order the callbacks? Something like&lt;/p&gt;
&lt;p&gt;@@@&amp;nbsp;ruby Class Foo &amp;lt; AR::Base&lt;br&gt;
# adds :check to the beginning of the before_destroy chain
before_destroy :check, :order =&amp;gt; :first # default, adds :check
to the end of the before_destroy chain before_destroy :check,
:order =&amp;gt; :last ... end&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
Same for all other callbacks.&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
IMHO this is absolutely necessary if Rails also uses these callbacks internally, since  the callbacks give the impression that the user has complete control over them, which is not true.&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
Alternatively (and maybe better), the child deletion procedure (and other internal routines which use before&lt;em&gt; / after&lt;/em&gt; callbacks) need to be rewritten to be executed &lt;em&gt;after&lt;/em&gt; all &lt;em&gt;before&lt;/em&gt; callbacks, or &lt;em&gt;before&lt;/em&gt; all &lt;em&gt;after&lt;/em&gt; callbacks, respectively, since this is what the user expects according to the naming of these procedures and their documentation, which does not mention that pre-defined callbacks already exist internally.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-16T06:23:20+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-07-29T19:49:20+01:00</updated-at>
      <user-id type="integer">81520</user-id>
      <version type="integer">6</version>
      <user-name>Jens</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Argh, formatting messed up. (Why? preview worked..)

Then this issue is maybe more general than I thought. Perhaps we need a way to order the  callbacks? Something like

@@@ ruby
Class Foo &lt; AR::Base
   # adds :check to the beginning of the before_destroy chain
   before_destroy :check, :order =&gt; :first
   # default, adds :check to the end of the before_destroy chain
   before_destroy :check, :order =&gt; :last
   ...
end
@@@

Same for all other callbacks.

IMHO this is absolutely necessary if Rails also uses these callbacks internally, since  the callbacks give the impression that the user has complete control over them, which is not true.

Alternatively, the child deletion procedure (and other internal routines which use before_ / after_ callbacks) need to be rewritten to be executed _after_ all _before_ callbacks, or _before_ all _after_ callbacks, respectively, since this is what the user expects (IMHO) according to the naming of these procedures and their documentation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Argh, formatting messed up. (Why? preview worked..)&lt;/p&gt;
&lt;p&gt;Then this issue is maybe more general than I thought. Perhaps we
need a way to order the callbacks? Something like&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;Class Foo &amp;lt; AR::Base
   # adds :check to the beginning of the before_destroy chain
   before_destroy :check, :order =&amp;gt; :first
   # default, adds :check to the end of the before_destroy chain
   before_destroy :check, :order =&amp;gt; :last
   ...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Same for all other callbacks.&lt;/p&gt;
&lt;p&gt;IMHO this is absolutely necessary if Rails also uses these
callbacks internally, since the callbacks give the impression that
the user has complete control over them, which is not true.&lt;/p&gt;
&lt;p&gt;Alternatively, the child deletion procedure (and other internal
routines which use before &lt;em&gt;/ after&lt;/em&gt; callbacks) need to be
rewritten to be executed &lt;em&gt;after&lt;/em&gt; all &lt;em&gt;before&lt;/em&gt;
callbacks, or &lt;em&gt;before&lt;/em&gt; all &lt;em&gt;after&lt;/em&gt; callbacks,
respectively, since this is what the user expects (IMHO) according
to the naming of these procedures and their documentation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-16T06:27:30+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-04-16T06:27:32+01:00</updated-at>
      <user-id type="integer">81520</user-id>
      <version type="integer">7</version>
      <user-name>Jens</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ng unique &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/36038-replica-3064.html&quot;&gt;36038 replica&lt;/a&gt;&lt;/b&gt; ropes the vend but &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-oris-watches.html&quot;&gt;quality replica Oris&lt;/a&gt;&lt;/b&gt; if does not appeaal &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/wj1116-ba0570-replica-2787.html&quot;&gt;WJ1116.BA0570 replica&lt;/a&gt;&lt;/b&gt; to her style; right &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; consign symbolize a wilderness &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/coutura-replica.html&quot;&gt;cheap Coutura replica watches&lt;/a&gt;&lt;/b&gt; of time. Ebay is &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/naut05-replica-1501.html&quot;&gt;Technomarine NAUT05 Replica&lt;/a&gt;&lt;/b&gt; in fact a woorld &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-franck-muller-watches.html&quot;&gt;Replica Franck Muller Watches&lt;/a&gt;&lt;/b&gt; of it's acquiesce salt &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-louis-vuitton-watches.html&quot;&gt;Replica Louis Vuitton&lt;/a&gt;&lt;/b&gt; away a comprehend of &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/t33-7-688-81-replica-1307.html&quot;&gt;T33.7.688.81 replica&lt;/a&gt;&lt;/b&gt; rues further policies you &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; commitment push on by considering a membre or you entrust acquisition your account suspended or</body>
      <body-html>&lt;div&gt;&lt;p&gt;ng unique &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/36038-replica-3064.html&quot;&gt;36038
replica&lt;/a&gt;&lt;/b&gt; ropes the vend but &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-oris-watches.html&quot;&gt;
quality replica Oris&lt;/a&gt;&lt;/b&gt; if does not appeaal &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/wj1116-ba0570-replica-2787.html&quot;&gt;
WJ1116.BA0570 replica&lt;/a&gt;&lt;/b&gt; to her style; right &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; consign
symbolize a wilderness &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/coutura-replica.html&quot;&gt;cheap
Coutura replica watches&lt;/a&gt;&lt;/b&gt; of time. Ebay is &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/naut05-replica-1501.html&quot;&gt;Technomarine
NAUT05 Replica&lt;/a&gt;&lt;/b&gt; in fact a woorld &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-franck-muller-watches.html&quot;&gt;
Replica Franck Muller Watches&lt;/a&gt;&lt;/b&gt; of it's acquiesce salt
&lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-louis-vuitton-watches.html&quot;&gt;
Replica Louis Vuitton&lt;/a&gt;&lt;/b&gt; away a comprehend of &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/t33-7-688-81-replica-1307.html&quot;&gt;
T33.7.688.81 replica&lt;/a&gt;&lt;/b&gt; rues further policies you &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; commitment
push on by considering a membre or you entrust acquisition your
account suspended or&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-20T07:40:08+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-07-20T08:07:34+01:00</updated-at>
      <user-id type="integer">107927</user-id>
      <version type="integer">8</version>
      <user-name>a4490302sc</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>stitching of &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com&quot;&gt;gucci handbags&lt;/a&gt;&lt;/b&gt; the bag if you &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com/bag/chanel-unlimited-print-zip-top-handbag-black-a46123-9322-1138.html&quot;&gt;Chanel Unlimited Print Zip Top Handbag Black A46123-9322 sale&lt;/a&gt;&lt;/b&gt; know what to look &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com/bag/chanel-cambon-line-bowling-bag-white-snake-ccs-a25171-9454-1229.html&quot;&gt;cheap Chanel Cambon Line Bowling Bag White Snake CCs A25171-9454&lt;/a&gt;&lt;/b&gt; for. Cheap imitation is &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com&quot;&gt;knock off gucci purses&lt;/a&gt;&lt;/b&gt; made of vinyl or &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com&quot;&gt;vintage gucci purses&lt;/a&gt;&lt;/b&gt; plastic. I he &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com/bag/chanel-lambskin-clutch-bag-fuschia-a618-9571-1296.html&quot;&gt;Chanel  Lambskin clutch bag fuschia  A618-9571 outlet&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com&quot;&gt;gucci purses discount&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com/collection/gucci-agendas.html&quot;&gt;vintage Gucci Travel &amp; Business Gucci agendas&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com/collection/gucci-travel-business.html&quot;&gt;Gucci Travel &amp; Business online&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com/bag/chanel-cc-lambskin-evening-clutch-wallet-white-a351178-9897-1486.html&quot;&gt;Chanel CC Lambskin Evening Clutch Wallet white A351178-9897&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;stitching of &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com&quot;&gt;gucci
handbags&lt;/a&gt;&lt;/b&gt; the bag if you &lt;b&gt;&lt;a href=
&quot;http://www.myguccioutlet.com/bag/chanel-unlimited-print-zip-top-handbag-black-a46123-9322-1138.html&quot;&gt;
Chanel Unlimited Print Zip Top Handbag Black A46123-9322
sale&lt;/a&gt;&lt;/b&gt; know what to look &lt;b&gt;&lt;a href=
&quot;http://www.myguccioutlet.com/bag/chanel-cambon-line-bowling-bag-white-snake-ccs-a25171-9454-1229.html&quot;&gt;
cheap Chanel Cambon Line Bowling Bag White Snake CCs
A25171-9454&lt;/a&gt;&lt;/b&gt; for. Cheap imitation is &lt;b&gt;&lt;a href=
&quot;http://www.myguccioutlet.com&quot;&gt;knock off gucci purses&lt;/a&gt;&lt;/b&gt; made
of vinyl or &lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com&quot;&gt;vintage gucci
purses&lt;/a&gt;&lt;/b&gt; plastic. I he &lt;b&gt;&lt;a href=
&quot;http://www.myguccioutlet.com/bag/chanel-lambskin-clutch-bag-fuschia-a618-9571-1296.html&quot;&gt;
Chanel Lambskin clutch bag fuschia A618-9571 outlet&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=&quot;http://www.myguccioutlet.com&quot;&gt;gucci purses
discount&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.myguccioutlet.com/collection/gucci-agendas.html&quot;&gt;vintage
Gucci Travel &amp;amp; Business Gucci agendas&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.myguccioutlet.com/collection/gucci-travel-business.html&quot;&gt;
Gucci Travel &amp;amp; Business online&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.myguccioutlet.com/bag/chanel-cc-lambskin-evening-clutch-wallet-white-a351178-9897-1486.html&quot;&gt;
Chanel CC Lambskin Evening Clutch Wallet white
A351178-9897&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-26T04:50:29+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-07-26T04:51:58+01:00</updated-at>
      <user-id type="integer">108790</user-id>
      <version type="integer">9</version>
      <user-name>zhuzhu</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree with you Jens.
What you think about the callbacks implementation could be a stack(LIFO) ? so the :dependent =&gt; :destroy will be executed after all before_destroy callbacks, what i think is the expected behavior.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree with you Jens.&lt;br&gt;
What you think about the callbacks implementation could be a
stack(LIFO) ? so the :dependent =&amp;gt; :destroy will be executed
after all before_destroy callbacks, what i think is the expected
behavior.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-29T19:24:34+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-07-29T19:24:37+01:00</updated-at>
      <user-id type="integer">62461</user-id>
      <version type="integer">10</version>
      <user-name>guilherme</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Jen

Can you try with rails edge. I am not able to reproduce this problem.

@@@ ruby
class Car &lt; ActiveRecord::Base
  has_many :brakes, :dependent =&gt; :destroy
  before_destroy :check

  def check
    false
  end

  def self.lab
    Car.delete_all
    Brake.delete_all

    car = Car.create(:name =&gt; 'honda')
    car.brakes.create(:name =&gt; 'b1')
    car.reload
    car.destroy
    puts Car.count #=&gt; 1 if check returns false. 0 if check returns true
    puts Brake.count #=&gt; 1 if check returns false. 0 if check returns true
  end

end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Jen&lt;/p&gt;
&lt;p&gt;Can you try with rails edge. I am not able to reproduce this
problem.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Car &amp;lt; ActiveRecord::Base
  has_many :brakes, :dependent =&amp;gt; :destroy
  before_destroy :check

  def check
    false
  end

  def self.lab
    Car.delete_all
    Brake.delete_all

    car = Car.create(:name =&amp;gt; 'honda')
    car.brakes.create(:name =&amp;gt; 'b1')
    car.reload
    car.destroy
    puts Car.count #=&amp;gt; 1 if check returns false. 0 if check returns true
    puts Brake.count #=&amp;gt; 1 if check returns false. 0 if check returns true
  end

end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T14:54:46+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-08-11T14:54:49+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">11</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>i encountered this too in 3.0.0.rc
to workaround this issue i didnt use the dependent option and instead created an before_destroy callback which destroys all associations for me. i put it after all other before_destroy callbacks.

As Andrew White pointed out, doing the destroy of the associations in a after_destroy callback collides with fk contraints.

so the destroy of the associated objects should happen after the before_destroy callbacks but before the destroy.


@Neeraj Singh

you dont cover the described behaviour.
your example just shows that the children are not destroyed if the callback chain is interrupted cause all changes are rolled back.

the problem is as Jens described that in the before callbacks the children are already all gone. this happens because the before_destroy callback registered by the has_many is called before the other callback.you could simply fix this by altering the order, and register the other callbacks first, but i like to declare the associations first.

@@@ ruby
class Car &lt; ActiveRecord::Base
  has_many :brakes, :dependent =&gt; :destroy
  before_destroy :check

  def check
    false unless brakes.empty?
  end

  def self.lab
    Car.delete_all
    Brake.delete_all

    car = Car.create(:name =&gt; 'honda')
    car.brakes.create(:name =&gt; 'b1')
    car.reload
    car.destroy
    puts Car.count #=&gt;  0 
    puts Brake.count #=&gt; 0
  end

@@@

I know this example is kinda stupid but it shows the problem.
In check brakes is already empty.</body>
      <body-html>&lt;div&gt;&lt;p&gt;i encountered this too in 3.0.0.rc&lt;br&gt;
to workaround this issue i didnt use the dependent option and
instead created an before_destroy callback which destroys all
associations for me. i put it after all other before_destroy
callbacks.&lt;/p&gt;
&lt;p&gt;As Andrew White pointed out, doing the destroy of the
associations in a after_destroy callback collides with fk
contraints.&lt;/p&gt;
&lt;p&gt;so the destroy of the associated objects should happen after the
before_destroy callbacks but before the destroy.&lt;/p&gt;
&lt;p&gt;@Neeraj Singh&lt;/p&gt;
&lt;p&gt;you dont cover the described behaviour.&lt;br&gt;
your example just shows that the children are not destroyed if the
callback chain is interrupted cause all changes are rolled
back.&lt;/p&gt;
&lt;p&gt;the problem is as Jens described that in the before callbacks
the children are already all gone. this happens because the
before_destroy callback registered by the has_many is called before
the other callback.you could simply fix this by altering the order,
and register the other callbacks first, but i like to declare the
associations first.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Car &amp;lt; ActiveRecord::Base
  has_many :brakes, :dependent =&amp;gt; :destroy
  before_destroy :check

  def check
    false unless brakes.empty?
  end

  def self.lab
    Car.delete_all
    Brake.delete_all

    car = Car.create(:name =&amp;gt; 'honda')
    car.brakes.create(:name =&amp;gt; 'b1')
    car.reload
    car.destroy
    puts Car.count #=&amp;gt;  0 
    puts Brake.count #=&amp;gt; 0
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I know this example is kinda stupid but it shows the
problem.&lt;br&gt;
In check brakes is already empty.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T17:06:14+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-08-11T17:06:15+01:00</updated-at>
      <user-id type="integer">33030</user-id>
      <version type="integer">12</version>
      <user-name>Kane</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The order of callbacks matter. Checkout #2765 in which extra record was getting created because of order of callbacks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The order of callbacks matter. Checkout &lt;a href=
&quot;/projects/8994/tickets/2765&quot; title=&quot;Ticket #2765&quot;&gt;#2765&lt;/a&gt; in
which extra record was getting created because of order of
callbacks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T17:32:28+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-08-11T17:32:30+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">13</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>yea i know as i said the problem can be avoided by altering the order.
but the issue here is that this is not so obvious for the user and whether the actual behaviour is the right one.</body>
      <body-html>&lt;div&gt;&lt;p&gt;yea i know as i said the problem can be avoided by altering the
order.&lt;br&gt;
but the issue here is that this is not so obvious for the user and
whether the actual behaviour is the right one.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-11T22:32:29+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-08-11T22:32:35+01:00</updated-at>
      <user-id type="integer">33030</user-id>
      <version type="integer">14</version>
      <user-name>Kane</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-08T01:17:44+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-11-08T23:12:06+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">15</version>
      <user-name>jim123456</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You must Remember the gorgeous shoes wore at the Sex and the City Movie, the shoes are just &lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/manolo-blahnik-something-blue-satin-pump-p-1479.html&quot;&gt;manolo blahnik something blue&lt;/a&gt; satin pumps.
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;Manolo Blahnik&lt;/a&gt; high heels at the beginning are of a bit vague, but the design of a pair of &lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;Manolo Blahnik Shoes&lt;/a&gt; is loved by many women.Sexy and confident women just like a famous star.Spears at many times at court in Los Angeles playing for the fight when the custody of her child was found wearing &lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;Manolo Shoes&lt;/a&gt;.
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/manolo-blahnik-something-blue-satin-pump-p-1479.html&quot;&gt;manolo blahnik something blue&lt;/a&gt; bridal shoes
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/wedding-shoes-c-16.html&quot;&gt;wedding shoes&lt;/a&gt; manolo blahnik
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;manolo blahnik wedding shoes&lt;/a&gt; - best designer wedding shoes
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;manolo blahnik bridal shoes&lt;/a&gt; - best bridal shoes
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;blahnik manolo&lt;/a&gt; sex and the city shoes
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/jimmy-choo-shoes-c-8.html&quot;&gt;jimmy choo&lt;/a&gt; shoes
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/giuseppe-zanotti-shoes-c-12.html&quot;&gt;giuseppe zanotti&lt;/a&gt; shoes
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/ferragamo-shoes-c-13.html&quot;&gt;ferragamo&lt;/a&gt; shoes
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/christian-dior-shoes-c-14.html&quot;&gt;christian dior&lt;/a&gt; shoes
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/tory-burch-shoes-c-19.html&quot;&gt;tory burch&lt;/a&gt; shoes
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/lanvin-shoes-c-18.html&quot;&gt;lanvin&lt;/a&gt; shoes
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/cesare-paciotti-shoes-c-17.html&quot;&gt;cesare paciotti&lt;/a&gt; shoes
&lt;a href=&quot;http://www.christianlouboutinshoesshop.com/&quot;&gt;christian louboutin&lt;/a&gt; shoes
&lt;a href=&quot;http://www.designershoeshouse.com/&quot;&gt;designer shoes&lt;/a&gt; diamond pumps</body>
      <body-html>&lt;div&gt;&lt;p&gt;You must Remember the gorgeous shoes wore at the Sex and the
City Movie, the shoes are just &lt;a href=
&quot;http://www.manoloblahnikdesignershoes.com/manolo-blahnik-something-blue-satin-pump-p-1479.html&quot;&gt;
manolo blahnik something blue&lt;/a&gt; satin pumps.&lt;br&gt;
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;Manolo
Blahnik&lt;/a&gt; high heels at the beginning are of a bit vague, but the
design of a pair of &lt;a href=
&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;Manolo Blahnik
Shoes&lt;/a&gt; is loved by many women.Sexy and confident women just like
a famous star.Spears at many times at court in Los Angeles playing
for the fight when the custody of her child was found wearing
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;Manolo
Shoes&lt;/a&gt;.&lt;br&gt;
&lt;a href=
&quot;http://www.manoloblahnikdesignershoes.com/manolo-blahnik-something-blue-satin-pump-p-1479.html&quot;&gt;
manolo blahnik something blue&lt;/a&gt; bridal shoes&lt;br&gt;
&lt;a href=
&quot;http://www.manoloblahnikdesignershoes.com/wedding-shoes-c-16.html&quot;&gt;
wedding shoes&lt;/a&gt; manolo blahnik&lt;br&gt;
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;manolo blahnik
wedding shoes&lt;/a&gt; - best designer wedding shoes&lt;br&gt;
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;manolo blahnik
bridal shoes&lt;/a&gt; - best bridal shoes&lt;br&gt;
&lt;a href=&quot;http://www.manoloblahnikdesignershoes.com/&quot;&gt;blahnik
manolo&lt;/a&gt; sex and the city shoes&lt;br&gt;
&lt;a href=
&quot;http://www.manoloblahnikdesignershoes.com/jimmy-choo-shoes-c-8.html&quot;&gt;
jimmy choo&lt;/a&gt; shoes&lt;br&gt;
&lt;a href=
&quot;http://www.manoloblahnikdesignershoes.com/giuseppe-zanotti-shoes-c-12.html&quot;&gt;
giuseppe zanotti&lt;/a&gt; shoes&lt;br&gt;
&lt;a href=
&quot;http://www.manoloblahnikdesignershoes.com/ferragamo-shoes-c-13.html&quot;&gt;
ferragamo&lt;/a&gt; shoes&lt;br&gt;
&lt;a href=
&quot;http://www.manoloblahnikdesignershoes.com/christian-dior-shoes-c-14.html&quot;&gt;
christian dior&lt;/a&gt; shoes&lt;br&gt;
&lt;a href=
&quot;http://www.manoloblahnikdesignershoes.com/tory-burch-shoes-c-19.html&quot;&gt;
tory burch&lt;/a&gt; shoes&lt;br&gt;
&lt;a href=
&quot;http://www.manoloblahnikdesignershoes.com/lanvin-shoes-c-18.html&quot;&gt;lanvin&lt;/a&gt;
shoes&lt;br&gt;
&lt;a href=
&quot;http://www.manoloblahnikdesignershoes.com/cesare-paciotti-shoes-c-17.html&quot;&gt;
cesare paciotti&lt;/a&gt; shoes&lt;br&gt;
&lt;a href=&quot;http://www.christianlouboutinshoesshop.com/&quot;&gt;christian
louboutin&lt;/a&gt; shoes&lt;br&gt;
&lt;a href=&quot;http://www.designershoeshouse.com/&quot;&gt;designer shoes&lt;/a&gt;
diamond pumps&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-09T13:39:17+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-11-11T20:11:13+00:00</updated-at>
      <user-id type="integer">124162</user-id>
      <version type="integer">16</version>
      <user-name>blahnik</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree. The before_destroy callback needs to be before the dependent destroy callback.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree. The before_destroy callback needs to be before the
dependent destroy callback.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-09T15:57:46+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-11-09T16:03:00+00:00</updated-at>
      <user-id type="integer">29137</user-id>
      <version type="integer">17</version>
      <user-name>Ellis Berner</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I had same problem,

the solution was easy and scary at the same time. I just moved before_destroy definition before association definition

I had never supposed such order was significant, and actually i'd prefer not but so it seems

here the same situation
http://blog.ireneros.com/rails-model-callbacks-and-associations-order</body>
      <body-html>&lt;div&gt;&lt;p&gt;I had same problem,&lt;/p&gt;
&lt;p&gt;the solution was easy and scary at the same time. I just moved
before_destroy definition before association definition&lt;/p&gt;
&lt;p&gt;I had never supposed such order was significant, and actually
i'd prefer not but so it seems&lt;/p&gt;
&lt;p&gt;here the same situation&lt;br&gt;
&lt;a href=
&quot;http://blog.ireneros.com/rails-model-callbacks-and-associations-order&quot;&gt;
http://blog.ireneros.com/rails-model-callbacks-and-associations-order&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-16T16:50:10+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-12-16T16:50:35+00:00</updated-at>
      <user-id type="integer">129286</user-id>
      <version type="integer">18</version>
      <user-name>masciugo</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Probably related to #6191</body>
      <body-html>&lt;div&gt;&lt;p&gt;Probably related to &lt;a href=&quot;/projects/8994/tickets/6191&quot; title=
&quot;Ticket #6191&quot;&gt;#6191&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-19T08:18:40+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-12-19T08:19:06+00:00</updated-at>
      <user-id type="integer">129516</user-id>
      <version type="integer">19</version>
      <user-name>Golly</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-28T03:04:31+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2010-12-28T03:36:16+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">20</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can someone check if this is still an issue after we pushed a fix for #6191 ?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can someone check if this is still an issue after we pushed a
fix for &lt;a href=&quot;/projects/8994/tickets/6191&quot; title=
&quot;Ticket #6191&quot;&gt;#6191&lt;/a&gt; ?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-04T21:42:59+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2011-02-04T21:43:34+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">21</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It's still there - it can't be easily fixed since both callbacks in the same chain. As masciugo points out you can work around the problem by moving the before_destroy call before the association definition. Perhaps a more longterm solution is to add a destroy/delete validation callback. Obviously this would be a different validation process - no point in validating uniqueness on something you're about to destroy.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's still there - it can't be easily fixed since both callbacks
in the same chain. As masciugo points out you can work around the
problem by moving the before_destroy call before the association
definition. Perhaps a more longterm solution is to add a
destroy/delete validation callback. Obviously this would be a
different validation process - no point in validating uniqueness on
something you're about to destroy.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-09T03:31:18+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2011-02-09T03:31:54+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">22</version>
      <user-name>Andrew White</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-14T02:24:17+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2011-02-14T05:41:54+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">23</version>
      <user-name>xixi</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-14T09:28:55+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2011-02-14T09:36:20+00:00</updated-at>
      <user-id type="integer">136894</user-id>
      <version type="integer">24</version>
      <user-name>tdfgd</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-16T06:29:47+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2011-02-22T08:32:33+00:00</updated-at>
      <user-id type="integer">137256</user-id>
      <version type="integer">25</version>
      <user-name>gfsd</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-19T01:35:28+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2011-02-19T09:28:18+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">26</version>
      <user-name>mklo</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-26T02:03:55+00:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2011-03-26T02:19:27+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">27</version>
      <user-name>bingbing</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've recently encountered this problem as well.  Still not fixed?  Seems like a core piece of functionality...</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've recently encountered this problem as well. Still not fixed?
Seems like a core piece of functionality...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-24T14:54:03+01:00</created-at>
      <creator-id type="integer">81520</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4386</number>
      <permalink>dependent-destroy-deletes-children-before-before_destroy-is-executed</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord before_destroy callback has_many &quot;rails 2.3.5&quot;</tag>
      <title>dependent =&gt; :destroy deletes children before &quot;before_destroy&quot; is executed</title>
      <updated-at type="datetime">2011-04-24T14:54:44+01:00</updated-at>
      <user-id type="integer">146771</user-id>
      <version type="integer">28</version>
      <user-name>Brian Buchalter</user-name>
      <creator-name>Jens</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4386</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
