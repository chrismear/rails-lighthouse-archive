<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-27T15:29:09+00:00</created-at>
  <creator-id type="integer">42084</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2360</number>
  <permalink>debugging-regression-for-conflicting-param-types</permalink>
  <priority type="integer">1521</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>Debugging regression for conflicting param types</title>
  <updated-at type="datetime">2011-02-02T17:33:47+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">6</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>trappist</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2360</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>In Rails 2.1.x (and possibly 2.2.x but I don't have an app to test) if you pass conflicting parameter types like
?x=&amp;x[y]=
we get a stack trace with helpful information:

  Conflicting types for parameter containers. Expected an instance of Hash but found an instance of String. This can be caused by colliding Array and Hash parameters like qs[]=value&amp;qs[key]=value. (The parameters received were &quot;&quot;.)

In 2.3 (and maybe 2.2) we get something much less helpful, making the problem potentially difficult to track down:

/!\ FAILSAFE /!\  2009-03-27
  Status: 500 Internal Server Error
  You have a nil object when you didn't expect it!
The error occurred while evaluating nil.each_pair
    /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/hash/indifferent_access.rb:46:in `update'
    /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/hash/indifferent_access.rb:91:in `merge'
    /usr/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/request.rb:381:in `parameters'
...

Nowhere in the stack trace does it point to a line of your application's code, and nowhere is there a hint that such a pair of parameters has sneaked in.  Hopefully this doesn't come up often, but given the previous existence of such a useful error message, I imagine I'm not the first person to do this and have to spend time tracking it down, so it would be nice to have this back.</original-body>
  <latest-body>In Rails 2.1.x (and possibly 2.2.x but I don't have an app to test) if you pass conflicting parameter types like
?x=&amp;x[y]=
we get a stack trace with helpful information:

  Conflicting types for parameter containers. Expected an instance of Hash but found an instance of String. This can be caused by colliding Array and Hash parameters like qs[]=value&amp;qs[key]=value. (The parameters received were &quot;&quot;.)

In 2.3 (and maybe 2.2) we get something much less helpful, making the problem potentially difficult to track down:

/!\ FAILSAFE /!\  2009-03-27
  Status: 500 Internal Server Error
  You have a nil object when you didn't expect it!
The error occurred while evaluating nil.each_pair
    /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/hash/indifferent_access.rb:46:in `update'
    /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/hash/indifferent_access.rb:91:in `merge'
    /usr/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/request.rb:381:in `parameters'
...

Nowhere in the stack trace does it point to a line of your application's code, and nowhere is there a hint that such a pair of parameters has sneaked in.  Hopefully this doesn't come up often, but given the previous existence of such a useful error message, I imagine I'm not the first person to do this and have to spend time tracking it down, so it would be nice to have this back.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In Rails 2.1.x (and possibly 2.2.x but I don't have an app to
test) if you pass conflicting parameter types like ?x=&amp;amp;x[y]= we
get a stack trace with helpful information:&lt;/p&gt;
&lt;p&gt;Conflicting types for parameter containers. Expected an instance
of Hash but found an instance of String. This can be caused by
colliding Array and Hash parameters like
qs[]=value&amp;amp;qs[key]=value. (The parameters received were
&quot;&quot;.)&lt;/p&gt;
&lt;p&gt;In 2.3 (and maybe 2.2) we get something much less helpful,
making the problem potentially difficult to track down:&lt;/p&gt;
&lt;p&gt;/!\ FAILSAFE /!\ 2009-03-27 Status: 500 Internal Server Error
You have a nil object when you didn't expect it! The error occurred
while evaluating nil.each_pair&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/hash/indifferent_access.rb:46:in `update'
/usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/hash/indifferent_access.rb:91:in `merge'
/usr/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/request.rb:381:in `parameters'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Nowhere in the stack trace does it point to a line of your
application's code, and nowhere is there a hint that such a pair of
parameters has sneaked in. Hopefully this doesn't come up often,
but given the previous existence of such a useful error message, I
imagine I'm not the first person to do this and have to spend time
tracking it down, so it would be nice to have this back.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In Rails 2.1.x (and possibly 2.2.x but I don't have an app to test) if you pass conflicting parameter types like
?x=&amp;x[y]=
we get a stack trace with helpful information:

  Conflicting types for parameter containers. Expected an instance of Hash but found an instance of String. This can be caused by colliding Array and Hash parameters like qs[]=value&amp;qs[key]=value. (The parameters received were &quot;&quot;.)

In 2.3 (and maybe 2.2) we get something much less helpful, making the problem potentially difficult to track down:

/!\ FAILSAFE /!\  2009-03-27
  Status: 500 Internal Server Error
  You have a nil object when you didn't expect it!
The error occurred while evaluating nil.each_pair
    /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/hash/indifferent_access.rb:46:in `update'
    /usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/hash/indifferent_access.rb:91:in `merge'
    /usr/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/request.rb:381:in `parameters'
...

Nowhere in the stack trace does it point to a line of your application's code, and nowhere is there a hint that such a pair of parameters has sneaked in.  Hopefully this doesn't come up often, but given the previous existence of such a useful error message, I imagine I'm not the first person to do this and have to spend time tracking it down, so it would be nice to have this back.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In Rails 2.1.x (and possibly 2.2.x but I don't have an app to
test) if you pass conflicting parameter types like ?x=&amp;amp;x[y]= we
get a stack trace with helpful information:&lt;/p&gt;
&lt;p&gt;Conflicting types for parameter containers. Expected an instance
of Hash but found an instance of String. This can be caused by
colliding Array and Hash parameters like
qs[]=value&amp;amp;qs[key]=value. (The parameters received were
&quot;&quot;.)&lt;/p&gt;
&lt;p&gt;In 2.3 (and maybe 2.2) we get something much less helpful,
making the problem potentially difficult to track down:&lt;/p&gt;
&lt;p&gt;/!\ FAILSAFE /!\ 2009-03-27 Status: 500 Internal Server Error
You have a nil object when you didn't expect it! The error occurred
while evaluating nil.each_pair&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/hash/indifferent_access.rb:46:in `update'
/usr/lib/ruby/gems/1.8/gems/activesupport-2.3.2/lib/active_support/core_ext/hash/indifferent_access.rb:91:in `merge'
/usr/lib/ruby/gems/1.8/gems/actionpack-2.3.2/lib/action_controller/request.rb:381:in `parameters'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Nowhere in the stack trace does it point to a line of your
application's code, and nowhere is there a hint that such a pair of
parameters has sneaked in. Hopefully this doesn't come up often,
but given the previous existence of such a useful error message, I
imagine I'm not the first person to do this and have to spend time
tracking it down, so it would be nice to have this back.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-27T15:29:09+00:00</created-at>
      <creator-id type="integer">42084</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2360</number>
      <permalink>debugging-regression-for-conflicting-param-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Debugging regression for conflicting param types</title>
      <updated-at type="datetime">2009-03-27T15:29:11+00:00</updated-at>
      <user-id type="integer">42084</user-id>
      <version type="integer">1</version>
      <user-name>trappist</user-name>
      <creator-name>trappist</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2360</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Just to confirm I had this problem too in 2.3 and had no idea where the problem was until I read this ticket. Thank you for that!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just to confirm I had this problem too in 2.3 and had no idea
where the problem was until I read this ticket. Thank you for
that!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-01T11:20:18+01:00</created-at>
      <creator-id type="integer">42084</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2360</number>
      <permalink>debugging-regression-for-conflicting-param-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Debugging regression for conflicting param types</title>
      <updated-at type="datetime">2009-09-01T11:20:21+01:00</updated-at>
      <user-id type="integer">62746</user-id>
      <version type="integer">2</version>
      <user-name>krani1 (at 0x82)</user-name>
      <creator-name>trappist</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2360</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>One thing to add to people who find this ticket here looking for the error.

I got this because of a javascript price formatter. The javascript worked by taking specific input fields, hiding it, and creating a new text field with _formatted added to the end of the name.

Thus there were 2 fields with the names: product[price] and product[price]_formatted. 

Having this will output this error. Just thought I would add this here for people googling the error. I found this problem when upgrading an app from 2.1.1 to 2.3.4.</body>
      <body-html>&lt;div&gt;&lt;p&gt;One thing to add to people who find this ticket here looking for
the error.&lt;/p&gt;
&lt;p&gt;I got this because of a javascript price formatter. The
javascript worked by taking specific input fields, hiding it, and
creating a new text field with _formatted added to the end of the
name.&lt;/p&gt;
&lt;p&gt;Thus there were 2 fields with the names: product[price] and
product[price]_formatted.&lt;/p&gt;
&lt;p&gt;Having this will output this error. Just thought I would add
this here for people googling the error. I found this problem when
upgrading an app from 2.1.1 to 2.3.4.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-27T14:32:29+00:00</created-at>
      <creator-id type="integer">42084</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2360</number>
      <permalink>debugging-regression-for-conflicting-param-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Debugging regression for conflicting param types</title>
      <updated-at type="datetime">2009-11-27T14:32:31+00:00</updated-at>
      <user-id type="integer">24627</user-id>
      <version type="integer">3</version>
      <user-name>J&#243;n Gr&#233;tar Borg&#254;&#243;rsson</user-name>
      <creator-name>trappist</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2360</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:44+01:00</created-at>
      <creator-id type="integer">42084</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2360</number>
      <permalink>debugging-regression-for-conflicting-param-types</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Debugging regression for conflicting param types</title>
      <updated-at type="datetime">2010-05-04T18:48:44+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>trappist</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2360</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:40:08+00:00</created-at>
      <creator-id type="integer">42084</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2360</number>
      <permalink>debugging-regression-for-conflicting-param-types</permalink>
      <priority type="integer">1521</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Debugging regression for conflicting param types</title>
      <updated-at type="datetime">2011-02-02T17:33:47+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>trappist</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2360</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:40:10+00:00</created-at>
      <creator-id type="integer">42084</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2360</number>
      <permalink>debugging-regression-for-conflicting-param-types</permalink>
      <priority type="integer">1521</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Debugging regression for conflicting param types</title>
      <updated-at type="datetime">2011-02-02T17:33:40+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>trappist</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2360</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
