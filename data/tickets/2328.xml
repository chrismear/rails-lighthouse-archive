<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-24T15:32:22+00:00</created-at>
  <creator-id type="integer">33609</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2328</number>
  <permalink>named_scope-sum-should-delegate-to-enumerable</permalink>
  <priority type="integer">1494</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>named_scope</tag>
  <title>named_scope sum should delegate to Enumerable</title>
  <updated-at type="datetime">2011-02-02T17:36:03+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">6</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Greg Weber</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2328</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>The sum method in named_scope assumes ActiveRecord sum.  There may be other enumerable conflicts.

I am currently using the following implementation for sum

      # sum with a block goes to Enumerable, otherwise it is an ActiveRecord calculation
      def sum(*args, &amp;block)
        if block
          proxy_found.sum(*args, &amp;block)
        else
          super(*args)
        end || 0
      end</original-body>
  <latest-body>The sum method in named_scope assumes ActiveRecord sum.  There may be other enumerable conflicts.

I am currently using the following implementation for sum

      # sum with a block goes to Enumerable, otherwise it is an ActiveRecord calculation
      def sum(*args, &amp;block)
        if block
          proxy_found.sum(*args, &amp;block)
        else
          super(*args)
        end || 0
      end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The sum method in named_scope assumes ActiveRecord sum. There
may be other enumerable conflicts.&lt;/p&gt;
&lt;p&gt;I am currently using the following implementation for sum&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  # sum with a block goes to Enumerable, otherwise it is an ActiveRecord calculation
  def sum(*args, &amp;amp;block)
    if block
      proxy_found.sum(*args, &amp;amp;block)
    else
      super(*args)
    end || 0
  end
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The sum method in named_scope assumes ActiveRecord sum.  There may be other enumerable conflicts.

I am currently using the following implementation for sum

      # sum with a block goes to Enumerable, otherwise it is an ActiveRecord calculation
      def sum(*args, &amp;block)
        if block
          proxy_found.sum(*args, &amp;block)
        else
          super(*args)
        end || 0
      end</body>
      <body-html>&lt;div&gt;&lt;p&gt;The sum method in named_scope assumes ActiveRecord sum. There
may be other enumerable conflicts.&lt;/p&gt;
&lt;p&gt;I am currently using the following implementation for sum&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  # sum with a block goes to Enumerable, otherwise it is an ActiveRecord calculation
  def sum(*args, &amp;amp;block)
    if block
      proxy_found.sum(*args, &amp;amp;block)
    else
      super(*args)
    end || 0
  end
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-24T15:32:22+00:00</created-at>
      <creator-id type="integer">33609</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2328</number>
      <permalink>named_scope-sum-should-delegate-to-enumerable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>named_scope</tag>
      <title>named_scope sum should delegate to Enumerable</title>
      <updated-at type="datetime">2009-03-24T15:32:25+00:00</updated-at>
      <user-id type="integer">33609</user-id>
      <version type="integer">1</version>
      <user-name>Greg Weber</user-name>
      <creator-name>Greg Weber</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2328</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Personally i think that named_scope's sum being an activerecord sum is the right thing - scopes generally behave almost exactly like the original class, just with extra conditions, order etc... (much like associations)

Uou can always force the named_scope to an array and call sum on that if you really want Enumerable's sum</body>
      <body-html>&lt;div&gt;&lt;p&gt;Personally i think that named_scope's sum being an activerecord
sum is the right thing - scopes generally behave almost exactly
like the original class, just with extra conditions, order etc...
(much like associations)&lt;/p&gt;
&lt;p&gt;Uou can always force the named_scope to an array and call sum on
that if you really want Enumerable's sum&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-08T00:08:22+01:00</created-at>
      <creator-id type="integer">33609</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2328</number>
      <permalink>named_scope-sum-should-delegate-to-enumerable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>named_scope</tag>
      <title>named_scope sum should delegate to Enumerable</title>
      <updated-at type="datetime">2009-05-08T00:08:26+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Greg Weber</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2328</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have the same implementation now for Enumerable#count. The main problem with the idea behind this ticket would be if someone extended ActiveRecord sum or count to use blocks, it wouldn't work. to_a is a reasonable solution.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have the same implementation now for Enumerable#count. The
main problem with the idea behind this ticket would be if someone
extended ActiveRecord sum or count to use blocks, it wouldn't work.
to_a is a reasonable solution.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-13T07:13:59+01:00</created-at>
      <creator-id type="integer">33609</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2328</number>
      <permalink>named_scope-sum-should-delegate-to-enumerable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>named_scope</tag>
      <title>named_scope sum should delegate to Enumerable</title>
      <updated-at type="datetime">2009-05-13T07:14:02+01:00</updated-at>
      <user-id type="integer">33609</user-id>
      <version type="integer">3</version>
      <user-name>Greg Weber</user-name>
      <creator-name>Greg Weber</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2328</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:43+01:00</created-at>
      <creator-id type="integer">33609</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2328</number>
      <permalink>named_scope-sum-should-delegate-to-enumerable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>named_scope</tag>
      <title>named_scope sum should delegate to Enumerable</title>
      <updated-at type="datetime">2010-05-04T18:48:43+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Greg Weber</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2328</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:40:47+00:00</created-at>
      <creator-id type="integer">33609</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2328</number>
      <permalink>named_scope-sum-should-delegate-to-enumerable</permalink>
      <priority type="integer">1494</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>named_scope</tag>
      <title>named_scope sum should delegate to Enumerable</title>
      <updated-at type="datetime">2011-02-02T17:35:57+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Greg Weber</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2328</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:40:48+00:00</created-at>
      <creator-id type="integer">33609</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2328</number>
      <permalink>named_scope-sum-should-delegate-to-enumerable</permalink>
      <priority type="integer">1494</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>named_scope</tag>
      <title>named_scope sum should delegate to Enumerable</title>
      <updated-at type="datetime">2011-02-02T17:36:03+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Greg Weber</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2328</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
