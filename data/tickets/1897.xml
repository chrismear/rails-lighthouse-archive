<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-06T17:25:18+00:00</created-at>
  <creator-id type="integer">46500</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1897</number>
  <permalink>rails-22-auto-source-code-reloading-broken-when-using-configthreadsafe</permalink>
  <priority type="integer">1163</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2.2 auto code debug reload source</tag>
  <title>Rails 2.2 auto source code reloading broken when using config.threadsafe!</title>
  <updated-at type="datetime">2009-02-10T17:36:16+00:00</updated-at>
  <user-id type="integer">7211</user-id>
  <version type="integer">9</version>
  <user-name>CancelProfileIsBroken</user-name>
  <creator-name>Joseph Chen</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1897</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>If config.threadsafe! is added to config/environments/development.rb, then auto source code reloading stops working.

I noticed that I would make a change to a view and would always have to restart the server before the change would take effect.  After a few hours of debugging, I finally tracked it down to this configuration setting.</original-body>
  <latest-body>If config.threadsafe! is added to config/environments/development.rb, then auto source code reloading stops working.

I noticed that I would make a change to a view and would always have to restart the server before the change would take effect.  After a few hours of debugging, I finally tracked it down to this configuration setting.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;If config.threadsafe! is added to
config/environments/development.rb, then auto source code reloading
stops working.&lt;/p&gt;
&lt;p&gt;I noticed that I would make a change to a view and would always
have to restart the server before the change would take effect.
After a few hours of debugging, I finally tracked it down to this
configuration setting.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>If config.threadsafe! is added to config/environments/development.rb, then auto source code reloading stops working.

I noticed that I would make a change to a view and would always have to restart the server before the change would take effect.  After a few hours of debugging, I finally tracked it down to this configuration setting.

To reproduce this problem, I simply created a new Rails 2.2 project, generated a scaffold for something, and then added config.threadsafe! to the development.rb.  Changes to views don't take effect until restarting the server.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If config.threadsafe! is added to
config/environments/development.rb, then auto source code reloading
stops working.&lt;/p&gt;
&lt;p&gt;I noticed that I would make a change to a view and would always
have to restart the server before the change would take effect.
After a few hours of debugging, I finally tracked it down to this
configuration setting.&lt;/p&gt;
&lt;p&gt;To reproduce this problem, I simply created a new Rails 2.2
project, generated a scaffold for something, and then added
config.threadsafe! to the development.rb. Changes to views don't
take effect until restarting the server.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-06T17:25:18+00:00</created-at>
      <creator-id type="integer">46500</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1897</number>
      <permalink>rails-22-auto-source-code-reloading-broken-when-using-configthreadsafe</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 auto code debug reload source</tag>
      <title>Rails 2.2 auto source code reloading broken when using config.threadsafe!</title>
      <updated-at type="datetime">2009-02-06T17:28:22+00:00</updated-at>
      <user-id type="integer">46500</user-id>
      <version type="integer">1</version>
      <user-name>Joseph Chen</user-name>
      <creator-name>Joseph Chen</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1897</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-07T13:39:13+00:00</created-at>
      <creator-id type="integer">46500</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1897</number>
      <permalink>rails-22-auto-source-code-reloading-broken-when-using-configthreadsafe</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 auto code debug reload source</tag>
      <title>Rails 2.2 auto source code reloading broken when using config.threadsafe!</title>
      <updated-at type="datetime">2009-02-07T13:39:18+00:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">2</version>
      <user-name>DHH</user-name>
      <creator-name>Joseph Chen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1897</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You cannot run a threadsafe development environment. Reloading classes is not threadsafe, thats why threadsafe! intentionally disables class reloading.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You cannot run a threadsafe development environment. Reloading
classes is not threadsafe, thats why threadsafe! intentionally
disables class reloading.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-07T17:00:06+00:00</created-at>
      <creator-id type="integer">46500</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1897</number>
      <permalink>rails-22-auto-source-code-reloading-broken-when-using-configthreadsafe</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.2 auto code debug reload source</tag>
      <title>Rails 2.2 auto source code reloading broken when using config.threadsafe!</title>
      <updated-at type="datetime">2009-02-07T17:00:10+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Joseph Chen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1897</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There are 2 separate issues here:

1) Threadsafe development environment not supported:

Why is threadsafe development environment not supported?  Technically, it can be implemented, right?  What is it in Rails that prevents us from supporting threadsafe reloading of classes?  I see that you marked the bug as wontfix.  Is this because the problem cannot be solved? Or is it because it is not worth solving and would involve too much time?

There is NO indication anywhere that the above is not supported.  There is no documentation saying this is not supported.  Nor are any errors or warnings displayed when threadsafe! is configured in development mode.  At the VERY LEAST, you should put a warning in the console saying that you have threadsafety disabled and are running in dev mode.

We spent several hours tracking this bug down and it was very frustrating.  A simple message somewhere would have saved us a lot of time.  I'm sure that this is probably going to come up more and more often as more people move over to 2.2 threadsafe code, and definitely are going to want to test their code in a threadsafe development mode.

2) Intentionally disabling class reloading for development mode is AGAINST the whole spirit of Ruby on Rails.  Why was this solution implemented? Think about it... every time I make any change in a view, model, controller, etc. I have to restart the server.  The whole idea of rapid development and DRY.. well throw that out the window because everytime I make even the most minute change, I have to restart the server.

I would much rather have threadsafety ALWAYS disabled in development mode and keep class reloading than the other way around.</body>
      <body-html>&lt;div&gt;&lt;p&gt;There are 2 separate issues here:&lt;/p&gt;
&lt;p&gt;1) Threadsafe development environment not supported:&lt;/p&gt;
&lt;p&gt;Why is threadsafe development environment not supported?
Technically, it can be implemented, right? What is it in Rails that
prevents us from supporting threadsafe reloading of classes? I see
that you marked the bug as wontfix. Is this because the problem
cannot be solved? Or is it because it is not worth solving and
would involve too much time?&lt;/p&gt;
&lt;p&gt;There is NO indication anywhere that the above is not supported.
There is no documentation saying this is not supported. Nor are any
errors or warnings displayed when threadsafe! is configured in
development mode. At the VERY LEAST, you should put a warning in
the console saying that you have threadsafety disabled and are
running in dev mode.&lt;/p&gt;
&lt;p&gt;We spent several hours tracking this bug down and it was very
frustrating. A simple message somewhere would have saved us a lot
of time. I'm sure that this is probably going to come up more and
more often as more people move over to 2.2 threadsafe code, and
definitely are going to want to test their code in a threadsafe
development mode.&lt;/p&gt;
&lt;p&gt;2) Intentionally disabling class reloading for development mode
is AGAINST the whole spirit of Ruby on Rails. Why was this solution
implemented? Think about it... every time I make any change in a
view, model, controller, etc. I have to restart the server. The
whole idea of rapid development and DRY.. well throw that out the
window because everytime I make even the most minute change, I have
to restart the server.&lt;/p&gt;
&lt;p&gt;I would much rather have threadsafety ALWAYS disabled in
development mode and keep class reloading than the other way
around.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-09T19:13:37+00:00</created-at>
      <creator-id type="integer">46500</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1897</number>
      <permalink>rails-22-auto-source-code-reloading-broken-when-using-configthreadsafe</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.2 auto code debug reload source</tag>
      <title>Rails 2.2 auto source code reloading broken when using config.threadsafe!</title>
      <updated-at type="datetime">2009-02-09T19:13:38+00:00</updated-at>
      <user-id type="integer">46500</user-id>
      <version type="integer">4</version>
      <user-name>Joseph Chen</user-name>
      <creator-name>Joseph Chen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1897</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Joseph Chen, it is not implemented because it cannot be implemented. Thread-safety is fundamentally incompatible with class reloading. Asking for a thread-safe environment that also supports class reloading is like asking a person to hold a speech while chewing on food. It cannot be done.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Joseph Chen, it is not implemented because it cannot be
implemented. Thread-safety is fundamentally incompatible with class
reloading. Asking for a thread-safe environment that also supports
class reloading is like asking a person to hold a speech while
chewing on food. It cannot be done.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-09T20:36:45+00:00</created-at>
      <creator-id type="integer">46500</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1897</number>
      <permalink>rails-22-auto-source-code-reloading-broken-when-using-configthreadsafe</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.2 auto code debug reload source</tag>
      <title>Rails 2.2 auto source code reloading broken when using config.threadsafe!</title>
      <updated-at type="datetime">2009-02-09T20:36:49+00:00</updated-at>
      <user-id type="integer">10679</user-id>
      <version type="integer">5</version>
      <user-name>Hongli Lai</user-name>
      <creator-name>Joseph Chen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1897</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>But you have a point: if it cannot be supported, Rails should at least output a warning when one tries to do both. It should also be documented.</body>
      <body-html>&lt;div&gt;&lt;p&gt;But you have a point: if it cannot be supported, Rails should at
least output a warning when one tries to do both. It should also be
documented.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-09T20:37:56+00:00</created-at>
      <creator-id type="integer">46500</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1897</number>
      <permalink>rails-22-auto-source-code-reloading-broken-when-using-configthreadsafe</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.2 auto code debug reload source</tag>
      <title>Rails 2.2 auto source code reloading broken when using config.threadsafe!</title>
      <updated-at type="datetime">2009-02-09T20:37:58+00:00</updated-at>
      <user-id type="integer">10679</user-id>
      <version type="integer">6</version>
      <user-name>Hongli Lai</user-name>
      <creator-name>Joseph Chen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1897</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The core point also being that running something in a thread-safe environment is a performance optimization technique. It doesn't matter for development mode. Just like you don't run with class caching turned on either.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The core point also being that running something in a
thread-safe environment is a performance optimization technique. It
doesn't matter for development mode. Just like you don't run with
class caching turned on either.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-10T10:32:00+00:00</created-at>
      <creator-id type="integer">46500</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1897</number>
      <permalink>rails-22-auto-source-code-reloading-broken-when-using-configthreadsafe</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.2 auto code debug reload source</tag>
      <title>Rails 2.2 auto source code reloading broken when using config.threadsafe!</title>
      <updated-at type="datetime">2009-02-10T10:32:05+00:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">7</version>
      <user-name>DHH</user-name>
      <creator-name>Joseph Chen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1897</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thank you Hongli and DHH for the explanations.

DHH - I agree with you that in general, running in thread-safe mode is more of a performance optimization, like caching.  But there are always exceptions to this - at times, I have enabled caching in development mode to try to track down an issue that we suspected was caused by having caching turned on.

But never mind about caching, that's a separate issue... we have a few reasons why we had enabled threadsafe mode in development:

1) We were working with DataFabric's ActiveRecord sharding plugin and after we ran into some difficulty setting it up, we wanted to make sure that the plugin worked with ActiveRecord 2.2.  The plugin involves thread local storage and thread pooling when running under ActiveRecord 2.2, and not knowing what the problem was, we were trying to debug the issue.  Thinking that maybe this might have something to do with threadsafety, we enabled the flag while debugging.

2) We were interested in using JRuby and had read about the benefits of having threadsafe turned on for JRuby.  I would imagine that most users of Rails under JRuby would want to have the threadsafety turned on by default in development mode.

3) We were not aware of any drawbacks to having threadsafety turned on in development mode.  In general, I think that having the development environment match up to the production environment as closely as possible without significantly impacting productivity is a good practice because then you can catch things that might come up in production earlier.  In our case, if there are no drawbacks, then why not enable it?  In retrospect, had there been some documentation or warning about not enable this feature in development mode, we would not have done this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thank you Hongli and DHH for the explanations.&lt;/p&gt;
&lt;p&gt;DHH - I agree with you that in general, running in thread-safe
mode is more of a performance optimization, like caching. But there
are always exceptions to this - at times, I have enabled caching in
development mode to try to track down an issue that we suspected
was caused by having caching turned on.&lt;/p&gt;
&lt;p&gt;But never mind about caching, that's a separate issue... we have
a few reasons why we had enabled threadsafe mode in
development:&lt;/p&gt;
&lt;p&gt;1) We were working with DataFabric's ActiveRecord sharding
plugin and after we ran into some difficulty setting it up, we
wanted to make sure that the plugin worked with ActiveRecord 2.2.
The plugin involves thread local storage and thread pooling when
running under ActiveRecord 2.2, and not knowing what the problem
was, we were trying to debug the issue. Thinking that maybe this
might have something to do with threadsafety, we enabled the flag
while debugging.&lt;/p&gt;
&lt;p&gt;2) We were interested in using JRuby and had read about the
benefits of having threadsafe turned on for JRuby. I would imagine
that most users of Rails under JRuby would want to have the
threadsafety turned on by default in development mode.&lt;/p&gt;
&lt;p&gt;3) We were not aware of any drawbacks to having threadsafety
turned on in development mode. In general, I think that having the
development environment match up to the production environment as
closely as possible without significantly impacting productivity is
a good practice because then you can catch things that might come
up in production earlier. In our case, if there are no drawbacks,
then why not enable it? In retrospect, had there been some
documentation or warning about not enable this feature in
development mode, we would not have done this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-10T17:13:29+00:00</created-at>
      <creator-id type="integer">46500</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1897</number>
      <permalink>rails-22-auto-source-code-reloading-broken-when-using-configthreadsafe</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.2 auto code debug reload source</tag>
      <title>Rails 2.2 auto source code reloading broken when using config.threadsafe!</title>
      <updated-at type="datetime">2009-02-10T17:13:34+00:00</updated-at>
      <user-id type="integer">46500</user-id>
      <version type="integer">8</version>
      <user-name>Joseph Chen</user-name>
      <creator-name>Joseph Chen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1897</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I added some documentation to be more explicit about this in the docrails project. It'll merge back to core rails, and show up on the Rails Guides site, presently.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I added some documentation to be more explicit about this in the
docrails project. It'll merge back to core rails, and show up on
the Rails Guides site, presently.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-10T17:36:14+00:00</created-at>
      <creator-id type="integer">46500</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1897</number>
      <permalink>rails-22-auto-source-code-reloading-broken-when-using-configthreadsafe</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2.2 auto code debug reload source</tag>
      <title>Rails 2.2 auto source code reloading broken when using config.threadsafe!</title>
      <updated-at type="datetime">2009-02-10T17:36:16+00:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">9</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Joseph Chen</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1897</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
