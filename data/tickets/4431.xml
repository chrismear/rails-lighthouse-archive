<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-03-03T09:20:22+00:00</created-at>
  <creator-id type="integer">7315</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4431</number>
  <permalink>inconsistent-support-in-assigns-api</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>inconsistent support in assigns API</title>
  <updated-at type="datetime">2011-03-03T09:20:22+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">2</version>
  <user-name>Repository</user-name>
  <creator-name>David Chelimsky</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4431</url>
  <priority-name nil="true"></priority-name>
  <original-body>On http://github.com/rails/rails/blob/master/actionpack/lib/action_controller/test_case.rb, the docs say you can access assigns with `assigns(:key)`.

It turns out that you can actually access assigns in any of these three ways:

@@@ ruby
assigns(:key)
assigns(&quot;key&quot;)
assigns[&quot;key&quot;]
@@@

But you can not access assigns with `assigns[:key]`. Actually, you can use `assigns[:key]`, but it always returns nil, leading to false results in tests with no indication that you're doing something wrong.

My thought is that if you can use strings or symbols with `assigns(...)`, you should probably be able to use strings or symbols with `assigns[...]`. The alternative would be to prevent access with keys (or warn in that case), but that seems like overkill to me.

Here's a patch to handle the more flexible case:

http://github.com/dchelimsky/rails/commit/9531c36bbc681b5b905f695b8bbcc2d954fb52d9</original-body>
  <latest-body>On http://github.com/rails/rails/blob/master/actionpack/lib/action_controller/test_case.rb, the docs say you can access assigns with `assigns(:key)`.

It turns out that you can actually access assigns in any of these three ways:

@@@ ruby
assigns(:key)
assigns(&quot;key&quot;)
assigns[&quot;key&quot;]
@@@

But you can not access assigns with `assigns[:key]`. Actually, you can use `assigns[:key]`, but it always returns nil, leading to false results in tests with no indication that you're doing something wrong.

My thought is that if you can use strings or symbols with `assigns(...)`, you should probably be able to use strings or symbols with `assigns[...]`. The alternative would be to prevent access with keys (or warn in that case), but that seems like overkill to me.

Here's a patch to handle the more flexible case:

http://github.com/dchelimsky/rails/commit/9531c36bbc681b5b905f695b8bbcc2d954fb52d9</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;On &lt;a href=
&quot;http://github.com/rails/rails/blob/master/actionpack/lib/action_controller/test_case.rb&quot;&gt;
http://github.com/rails/rails/blob/master/actionpack/lib/action_con...&lt;/a&gt;,
the docs say you can access assigns with
&lt;code&gt;assigns(:key)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It turns out that you can actually access assigns in any of
these three ways:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;assigns(:key)
assigns(&quot;key&quot;)
assigns[&quot;key&quot;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But you can not access assigns with &lt;code&gt;assigns[:key]&lt;/code&gt;.
Actually, you can use &lt;code&gt;assigns[:key]&lt;/code&gt;, but it always
returns nil, leading to false results in tests with no indication
that you're doing something wrong.&lt;/p&gt;
&lt;p&gt;My thought is that if you can use strings or symbols with
&lt;code&gt;assigns(...)&lt;/code&gt;, you should probably be able to use
strings or symbols with &lt;code&gt;assigns[...]&lt;/code&gt;. The alternative
would be to prevent access with keys (or warn in that case), but
that seems like overkill to me.&lt;/p&gt;
&lt;p&gt;Here's a patch to handle the more flexible case:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/dchelimsky/rails/commit/9531c36bbc681b5b905f695b8bbcc2d954fb52d9&quot;&gt;
http://github.com/dchelimsky/rails/commit/9531c36bbc681b5b905f695b8...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>On http://github.com/rails/rails/blob/master/actionpack/lib/action_controller/test_case.rb, the docs say you can access assigns with `assigns(:key)`.

It turns out that you can actually access assigns in any of these three ways:

@@@ ruby
assigns(:key)
assigns(&quot;key&quot;)
assigns[&quot;key&quot;]
@@@

But you can not access assigns with `assigns[:key]`. Actually, you can use `assigns[:key]`, but it always returns nil, leading to false results in tests with no indication that you're doing something wrong.

My thought is that if you can use strings or symbols with `assigns(...)`, you should probably be able to use strings or symbols with `assigns[...]`. The alternative would be to prevent access with keys (or warn in that case), but that seems like overkill to me.

Here's a patch to handle the more flexible case:

http://github.com/dchelimsky/rails/commit/9531c36bbc681b5b905f695b8bbcc2d954fb52d9</body>
      <body-html>&lt;div&gt;&lt;p&gt;On &lt;a href=
&quot;http://github.com/rails/rails/blob/master/actionpack/lib/action_controller/test_case.rb&quot;&gt;
http://github.com/rails/rails/blob/master/actionpack/lib/action_con...&lt;/a&gt;,
the docs say you can access assigns with
&lt;code&gt;assigns(:key)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It turns out that you can actually access assigns in any of
these three ways:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;assigns(:key)
assigns(&quot;key&quot;)
assigns[&quot;key&quot;]&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But you can not access assigns with &lt;code&gt;assigns[:key]&lt;/code&gt;.
Actually, you can use &lt;code&gt;assigns[:key]&lt;/code&gt;, but it always
returns nil, leading to false results in tests with no indication
that you're doing something wrong.&lt;/p&gt;
&lt;p&gt;My thought is that if you can use strings or symbols with
&lt;code&gt;assigns(...)&lt;/code&gt;, you should probably be able to use
strings or symbols with &lt;code&gt;assigns[...]&lt;/code&gt;. The alternative
would be to prevent access with keys (or warn in that case), but
that seems like overkill to me.&lt;/p&gt;
&lt;p&gt;Here's a patch to handle the more flexible case:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/dchelimsky/rails/commit/9531c36bbc681b5b905f695b8bbcc2d954fb52d9&quot;&gt;
http://github.com/dchelimsky/rails/commit/9531c36bbc681b5b905f695b8...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-17T20:55:21+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4431</number>
      <permalink>inconsistent-support-in-assigns-api</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>inconsistent support in assigns API</title>
      <updated-at type="datetime">2010-04-17T20:55:24+01:00</updated-at>
      <user-id type="integer">7315</user-id>
      <version type="integer">1</version>
      <user-name>David Chelimsky</user-name>
      <creator-name>David Chelimsky</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4431</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [4327ad51abfddde822766702d154df11bd5b47a3]) access assigns as a method or hash, with strings or symbols [#4431 state:resolved]
http://github.com/rails/rails/commit/4327ad51abfddde822766702d154df11bd5b47a3</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/4327ad51abfddde822766702d154df11bd5b47a3&quot;
title=
&quot;Changeset [4327ad51abfddde822766702d154df11bd5b47a3]&quot;&gt;[4327ad51abfddde822766702d154df11bd5b47a3]&lt;/a&gt;)
access assigns as a method or hash, with strings or symbols
[&lt;a href=&quot;/projects/8994/tickets/4431&quot; title=
&quot;Ticket #4431&quot;&gt;#4431&lt;/a&gt; state:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/4327ad51abfddde822766702d154df11bd5b47a3&quot;&gt;
http://github.com/rails/rails/commit/4327ad51abfddde822766702d154df...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-17T20:59:23+01:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4431</number>
      <permalink>inconsistent-support-in-assigns-api</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>inconsistent support in assigns API</title>
      <updated-at type="datetime">2010-04-17T20:59:24+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>David Chelimsky</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4431</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;a href=&quot;http://www.guccioutletkey.com/&quot;&gt;gucci sneakers&lt;/a&gt; gucci sneakers
&lt;a href=&quot;http://www.guccioutletkey.com/&quot;&gt;gucci shoes&lt;/a&gt; gucci shoes
&lt;a href=&quot;http://www.guccioutletkey.com/&quot;&gt;gucci outlet&lt;/a&gt; gucci outlet&lt;
&lt;a href=&quot;http://www.guccioutletkey.com/&quot;&gt;gucci shoes for sale&lt;/a&gt; gucci shoes for sale</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http://www.guccioutletkey.com/&quot;&gt;gucci sneakers&lt;/a&gt;
gucci sneakers&lt;br&gt;
&lt;a href=&quot;http://www.guccioutletkey.com/&quot;&gt;gucci shoes&lt;/a&gt; gucci
shoes&lt;br&gt;
&lt;a href=&quot;http://www.guccioutletkey.com/&quot;&gt;gucci outlet&lt;/a&gt; gucci
outlet&amp;lt;&lt;br&gt;
&lt;a href=&quot;http://www.guccioutletkey.com/&quot;&gt;gucci shoes for sale&lt;/a&gt;
gucci shoes for sale&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-03T08:06:50+00:00</created-at>
      <creator-id type="integer">7315</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4431</number>
      <permalink>inconsistent-support-in-assigns-api</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>inconsistent support in assigns API</title>
      <updated-at type="datetime">2011-03-03T09:20:22+00:00</updated-at>
      <user-id type="integer">139624</user-id>
      <version type="integer">3</version>
      <user-name>cheap coach bags</user-name>
      <creator-name>David Chelimsky</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4431</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
