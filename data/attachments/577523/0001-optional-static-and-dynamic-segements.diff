From 76d2e817682f82d751d61aa18d355a3f63f9be02 Mon Sep 17 00:00:00 2001
From: Paul Barry <mail@paulbarry.com>
Date: Fri, 25 Jun 2010 22:01:56 -0400
Subject: [PATCH 1/2] Fixed normalize_path in Routing::Mapper to handle optional prefix segments with static and dynamic parts

---
 actionpack/lib/action_dispatch/routing/mapper.rb |    2 +-
 actionpack/test/dispatch/routing_test.rb         |   46 ++++++++++++++++++++++
 2 files changed, 47 insertions(+), 1 deletions(-)

diff --git a/actionpack/lib/action_dispatch/routing/mapper.rb b/actionpack/lib/action_dispatch/routing/mapper.rb
index 67a6290..95df6e4 100644
--- a/actionpack/lib/action_dispatch/routing/mapper.rb
+++ b/actionpack/lib/action_dispatch/routing/mapper.rb
@@ -194,7 +194,7 @@ module ActionDispatch
       # for root cases, where the latter is the correct one.
       def self.normalize_path(path)
         path = Rack::Mount::Utils.normalize_path(path)
-        path.sub!(%r{/(\(+)/?:}, '\1/:') unless path =~ %r{^/\(+:.*\)$}
+        path.sub!(%r{/(\(+)/?([^:]*):}, '\1/\2:') unless path =~ %r{^/\(+:.*\)$}
         path
       end
 
diff --git a/actionpack/test/dispatch/routing_test.rb b/actionpack/test/dispatch/routing_test.rb
index 68e3dd6..e02a716 100644
--- a/actionpack/test/dispatch/routing_test.rb
+++ b/actionpack/test/dispatch/routing_test.rb
@@ -308,6 +308,10 @@ class TestRoutingMapper < ActionDispatch::IntegrationTest
         match "index", :to => 'private#index'
       end
 
+      get "(/:username)/followers" => "followers#index"
+      get "/groups(/user/:username)" => "groups#index"
+      get "(/user/:username)/photos" => "photos#index"
+
       match "whatever/:controller(/:action(/:id))"
 
       resource :profile do
@@ -1457,6 +1461,48 @@ class TestRoutingMapper < ActionDispatch::IntegrationTest
     end
   end
 
+  def test_url_generator_for_optional_prefix_dynamic_segment
+    with_test_routes do
+      get '/bob/followers'
+      assert_equal 'followers#index', @response.body
+      assert_equal 'http://www.example.com/bob/followers',
+        url_for(:controller => "followers", :action => "index", :username => "bob")
+
+      get '/followers'
+      assert_equal 'followers#index', @response.body
+      assert_equal 'http://www.example.com/followers',
+        url_for(:controller => "followers", :action => "index", :username => nil)
+    end
+  end
+
+  def test_url_generator_for_optional_suffix_static_and_dynamic_segment
+    with_test_routes do
+      get '/groups/user/bob'
+      assert_equal 'groups#index', @response.body
+      assert_equal 'http://www.example.com/groups/user/bob',
+        url_for(:controller => "groups", :action => "index", :username => "bob")
+
+      get '/groups'
+      assert_equal 'groups#index', @response.body
+      assert_equal 'http://www.example.com/groups',
+        url_for(:controller => "groups", :action => "index", :username => nil)
+    end
+  end
+
+  def test_url_generator_for_optional_prefix_static_and_dynamic_segment
+    with_test_routes do
+      get 'user/bob/photos'
+      assert_equal 'photos#index', @response.body
+      assert_equal 'http://www.example.com/user/bob/photos',
+        url_for(:controller => "photos", :action => "index", :username => "bob")
+
+      get 'photos'
+      assert_equal 'photos#index', @response.body
+      assert_equal 'http://www.example.com/photos',
+        url_for(:controller => "photos", :action => "index", :username => nil)
+    end
+  end
+
   private
     def with_test_routes
       yield
-- 
1.7.1


From 2b2feed9eb74eac53e69b61caccff212d523b46d Mon Sep 17 00:00:00 2001
From: Andrew White <andyw@pixeltrix.co.uk>
Date: Sat, 26 Jun 2010 10:46:24 +0100
Subject: [PATCH 2/2] Support optional static segements as well

---
 actionpack/lib/action_dispatch/routing/mapper.rb |    2 +-
 actionpack/test/dispatch/routing_test.rb         |   34 ++++++++++++++++++++++
 2 files changed, 35 insertions(+), 1 deletions(-)

diff --git a/actionpack/lib/action_dispatch/routing/mapper.rb b/actionpack/lib/action_dispatch/routing/mapper.rb
index 95df6e4..279e79f 100644
--- a/actionpack/lib/action_dispatch/routing/mapper.rb
+++ b/actionpack/lib/action_dispatch/routing/mapper.rb
@@ -194,7 +194,7 @@ module ActionDispatch
       # for root cases, where the latter is the correct one.
       def self.normalize_path(path)
         path = Rack::Mount::Utils.normalize_path(path)
-        path.sub!(%r{/(\(+)/?([^:]*):}, '\1/\2:') unless path =~ %r{^/\(+:.*\)$}
+        path.gsub!(%r{/(\(+)/?}, '\1/') unless path =~ %r{^/\(+[^/]+\)$}
         path
       end
 
diff --git a/actionpack/test/dispatch/routing_test.rb b/actionpack/test/dispatch/routing_test.rb
index e02a716..9753f18 100644
--- a/actionpack/test/dispatch/routing_test.rb
+++ b/actionpack/test/dispatch/routing_test.rb
@@ -312,6 +312,12 @@ class TestRoutingMapper < ActionDispatch::IntegrationTest
       get "/groups(/user/:username)" => "groups#index"
       get "(/user/:username)/photos" => "photos#index"
 
+      scope '(groups)' do
+        scope '(discussions)' do
+          resources :messages
+        end
+      end
+
       match "whatever/:controller(/:action(/:id))"
 
       resource :profile do
@@ -1503,6 +1509,34 @@ class TestRoutingMapper < ActionDispatch::IntegrationTest
     end
   end
 
+  def test_url_recognition_for_optional_static_segments
+    with_test_routes do
+      get '/groups/discussions/messages'
+      assert_equal 'messages#index', @response.body
+
+      get '/groups/discussions/messages/1'
+      assert_equal 'messages#show', @response.body
+
+      get '/groups/messages'
+      assert_equal 'messages#index', @response.body
+
+      get '/groups/messages/1'
+      assert_equal 'messages#show', @response.body
+
+      get '/discussions/messages'
+      assert_equal 'messages#index', @response.body
+
+      get '/discussions/messages/1'
+      assert_equal 'messages#show', @response.body
+
+      get '/messages'
+      assert_equal 'messages#index', @response.body
+
+      get '/messages/1'
+      assert_equal 'messages#show', @response.body
+    end
+  end
+
   private
     def with_test_routes
       yield
-- 
1.7.1

