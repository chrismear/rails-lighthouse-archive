From 626acb72e2aba08fdb0f09026aabf176ba780461 Mon Sep 17 00:00:00 2001
From: Darragh Curran <darragh@peelmeagrape.net>
Date: Fri, 26 Sep 2008 12:14:06 +0100
Subject: [PATCH] helper :all works for ActionMailers - just like Controllers

---
 actionmailer/lib/action_mailer/helpers.rb          |    7 +++++++
 .../test/fixtures/helpers/another_helper.rb        |    5 +++++
 actionmailer/test/mail_helper_test.rb              |   17 ++++++++++++++---
 3 files changed, 26 insertions(+), 3 deletions(-)
 create mode 100644 actionmailer/test/fixtures/helpers/another_helper.rb

diff --git a/actionmailer/lib/action_mailer/helpers.rb b/actionmailer/lib/action_mailer/helpers.rb
index 5f6dcd7..cd6bc25 100644
--- a/actionmailer/lib/action_mailer/helpers.rb
+++ b/actionmailer/lib/action_mailer/helpers.rb
@@ -1,5 +1,6 @@
 module ActionMailer
   module Helpers #:nodoc:
+    HELPERS_DIR = (defined?(RAILS_ROOT) ? "#{RAILS_ROOT}/app/helpers" : "app/helpers")
     def self.included(base) #:nodoc:
       # Initialize the base module to aggregate its helpers.
       base.class_inheritable_accessor :master_helper_module
@@ -42,6 +43,8 @@ module ActionMailer
           case arg
             when Module
               add_template_helper(arg)
+            when :all
+              helper(all_application_helpers)
             when String, Symbol
               file_name  = arg.to_s.underscore + '_helper'
               class_name = file_name.camelize
@@ -98,6 +101,10 @@ module ActionMailer
             raise unless e.is_missing?("helpers/#{child.name.to_s.underscore}_helper")
           end
         end
+        def all_application_helpers
+          extract = /^#{Regexp.quote(HELPERS_DIR)}\/?(.*)_helper.rb$/
+          Dir["#{HELPERS_DIR}/**/*_helper.rb"].map { |file| file.sub extract, '\1' }
+        end
     end
 
     private
diff --git a/actionmailer/test/fixtures/helpers/another_helper.rb b/actionmailer/test/fixtures/helpers/another_helper.rb
new file mode 100644
index 0000000..189a9e7
--- /dev/null
+++ b/actionmailer/test/fixtures/helpers/another_helper.rb
@@ -0,0 +1,5 @@
+module AnotherHelper
+  def something_crazy
+    "crazy!!!!"
+  end
+end
diff --git a/actionmailer/test/mail_helper_test.rb b/actionmailer/test/mail_helper_test.rb
index e94aeff..564d7ea 100644
--- a/actionmailer/test/mail_helper_test.rb
+++ b/actionmailer/test/mail_helper_test.rb
@@ -6,6 +6,8 @@ module MailerHelper
   end
 end
 
+ActionMailer::Helpers::HELPERS_DIR.replace File.dirname(__FILE__) + '/fixtures/helpers'
+
 class HelperMailer < ActionMailer::Base
   helper MailerHelper
   helper :example
@@ -51,7 +53,9 @@ class HelperMailer < ActionMailer::Base
     end
     helper_method :name_of_the_mailer_class
 end
-
+class AllHelpersMailer < ActionMailer::Base
+  helper :all
+end
 class MailerHelperTest < Test::Unit::TestCase
   def new_mail( charset="utf-8" )
     mail = TMail::Mail.new
@@ -91,5 +95,12 @@ class MailerHelperTest < Test::Unit::TestCase
     assert_match %r{  But soft!}, mail.encoded
     assert_match %r{east, and\n  Juliet}, mail.encoded
   end
-end
-
+  
+  def test_helper_all_includes_all_helpers
+    methods = AllHelpersMailer.master_helper_module.instance_methods.map(&:to_s)
+    # example_helper.rb
+    assert methods.include?('example_format')
+    # another_helper.rb
+    assert methods.include?('something_crazy')
+  end
+end
\ No newline at end of file
-- 
1.5.5.1


From f96ea2d52f95b30b603d3fc5e920888690ce717b Mon Sep 17 00:00:00 2001
From: Darragh Curran <darragh@peelmeagrape.net>
Date: Fri, 26 Sep 2008 12:18:36 +0100
Subject: [PATCH] added note about helper :all to rdoc

---
 actionmailer/lib/action_mailer/helpers.rb |    3 +
 helper_all_for_mailers.diff               |   97 +++++++++++++++++++++++++++++
 2 files changed, 100 insertions(+), 0 deletions(-)
 create mode 100644 helper_all_for_mailers.diff

diff --git a/actionmailer/lib/action_mailer/helpers.rb b/actionmailer/lib/action_mailer/helpers.rb
index cd6bc25..720d704 100644
--- a/actionmailer/lib/action_mailer/helpers.rb
+++ b/actionmailer/lib/action_mailer/helpers.rb
@@ -38,6 +38,9 @@ module ActionMailer
       # evaluates the block in the template class, adding method +foo+.
       #   helper(:three, BlindHelper) { def mice() 'mice' end }
       # does all three.
+      # When the argument is the symbol <tt>:all</tt>, the mailer will include all helpers from 
+      # <tt>RAILS_ROOT/app/helpers/**/*.rb</tt>.
+      #   helper :all
       def helper(*args, &block)
         args.flatten.each do |arg|
           case arg
diff --git a/helper_all_for_mailers.diff b/helper_all_for_mailers.diff
new file mode 100644
index 0000000..dd0933c
--- /dev/null
+++ b/helper_all_for_mailers.diff
@@ -0,0 +1,97 @@
+From 626acb72e2aba08fdb0f09026aabf176ba780461 Mon Sep 17 00:00:00 2001
+From: Darragh Curran <darragh@peelmeagrape.net>
+Date: Fri, 26 Sep 2008 12:14:06 +0100
+Subject: [PATCH] helper :all works for ActionMailers - just like Controllers
+
+---
+ actionmailer/lib/action_mailer/helpers.rb          |    7 +++++++
+ .../test/fixtures/helpers/another_helper.rb        |    5 +++++
+ actionmailer/test/mail_helper_test.rb              |   17 ++++++++++++++---
+ 3 files changed, 26 insertions(+), 3 deletions(-)
+ create mode 100644 actionmailer/test/fixtures/helpers/another_helper.rb
+
+diff --git a/actionmailer/lib/action_mailer/helpers.rb b/actionmailer/lib/action_mailer/helpers.rb
+index 5f6dcd7..cd6bc25 100644
+--- a/actionmailer/lib/action_mailer/helpers.rb
++++ b/actionmailer/lib/action_mailer/helpers.rb
+@@ -1,5 +1,6 @@
+ module ActionMailer
+   module Helpers #:nodoc:
++    HELPERS_DIR = (defined?(RAILS_ROOT) ? "#{RAILS_ROOT}/app/helpers" : "app/helpers")
+     def self.included(base) #:nodoc:
+       # Initialize the base module to aggregate its helpers.
+       base.class_inheritable_accessor :master_helper_module
+@@ -42,6 +43,8 @@ module ActionMailer
+           case arg
+             when Module
+               add_template_helper(arg)
++            when :all
++              helper(all_application_helpers)
+             when String, Symbol
+               file_name  = arg.to_s.underscore + '_helper'
+               class_name = file_name.camelize
+@@ -98,6 +101,10 @@ module ActionMailer
+             raise unless e.is_missing?("helpers/#{child.name.to_s.underscore}_helper")
+           end
+         end
++        def all_application_helpers
++          extract = /^#{Regexp.quote(HELPERS_DIR)}\/?(.*)_helper.rb$/
++          Dir["#{HELPERS_DIR}/**/*_helper.rb"].map { |file| file.sub extract, '\1' }
++        end
+     end
+ 
+     private
+diff --git a/actionmailer/test/fixtures/helpers/another_helper.rb b/actionmailer/test/fixtures/helpers/another_helper.rb
+new file mode 100644
+index 0000000..189a9e7
+--- /dev/null
++++ b/actionmailer/test/fixtures/helpers/another_helper.rb
+@@ -0,0 +1,5 @@
++module AnotherHelper
++  def something_crazy
++    "crazy!!!!"
++  end
++end
+diff --git a/actionmailer/test/mail_helper_test.rb b/actionmailer/test/mail_helper_test.rb
+index e94aeff..564d7ea 100644
+--- a/actionmailer/test/mail_helper_test.rb
++++ b/actionmailer/test/mail_helper_test.rb
+@@ -6,6 +6,8 @@ module MailerHelper
+   end
+ end
+ 
++ActionMailer::Helpers::HELPERS_DIR.replace File.dirname(__FILE__) + '/fixtures/helpers'
++
+ class HelperMailer < ActionMailer::Base
+   helper MailerHelper
+   helper :example
+@@ -51,7 +53,9 @@ class HelperMailer < ActionMailer::Base
+     end
+     helper_method :name_of_the_mailer_class
+ end
+-
++class AllHelpersMailer < ActionMailer::Base
++  helper :all
++end
+ class MailerHelperTest < Test::Unit::TestCase
+   def new_mail( charset="utf-8" )
+     mail = TMail::Mail.new
+@@ -91,5 +95,12 @@ class MailerHelperTest < Test::Unit::TestCase
+     assert_match %r{  But soft!}, mail.encoded
+     assert_match %r{east, and\n  Juliet}, mail.encoded
+   end
+-end
+-
++  
++  def test_helper_all_includes_all_helpers
++    methods = AllHelpersMailer.master_helper_module.instance_methods.map(&:to_s)
++    # example_helper.rb
++    assert methods.include?('example_format')
++    # another_helper.rb
++    assert methods.include?('something_crazy')
++  end
++end
+\ No newline at end of file
+-- 
+1.5.5.1
+
-- 
1.5.5.1

