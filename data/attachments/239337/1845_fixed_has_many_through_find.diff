From b8ac536c41f10958cf089d3d79a53c303f243512 Mon Sep 17 00:00:00 2001
From: railsbob <anup.narkhede@gmail.com>
Date: Sun, 9 Aug 2009 13:01:42 +0100
Subject: [PATCH] Fixed find for has_many :through association_collection

---
 .../associations/has_many_through_association.rb   |    2 +-
 .../has_many_through_associations_test.rb          |    6 ++++++
 2 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/associations/has_many_through_association.rb b/activerecord/lib/active_record/associations/has_many_through_association.rb
index ed7c3a6..f4507c9 100644
--- a/activerecord/lib/active_record/associations/has_many_through_association.rb
+++ b/activerecord/lib/active_record/associations/has_many_through_association.rb
@@ -54,7 +54,7 @@ module ActiveRecord
           options[:select]  = construct_select(options[:select])
           options[:from]  ||= construct_from
           options[:joins]   = construct_joins(options[:joins])
-          options[:include] = @reflection.source_reflection.options[:include] if options[:include].nil?
+          options[:include] = @reflection.source_reflection.options[:include] if options[:include].nil? && @reflection.source_reflection.options[:include]
         end
         
         def insert_record(record, force = true, validate = true)
diff --git a/activerecord/test/cases/associations/has_many_through_associations_test.rb b/activerecord/test/cases/associations/has_many_through_associations_test.rb
index f6b4a42..3d84767 100644
--- a/activerecord/test/cases/associations/has_many_through_associations_test.rb
+++ b/activerecord/test/cases/associations/has_many_through_associations_test.rb
@@ -299,4 +299,10 @@ class HasManyThroughAssociationsTest < ActiveRecord::TestCase
   def test_has_many_association_through_a_has_many_association_with_nonstandard_primary_keys
     assert_equal 1, owners(:blackbeard).toys.count
   end
+
+  def test_find_on_has_many_association_collection_with_include_and_conditions
+    post_with_no_comments = nil
+    assert_nothing_raised { post_with_no_comments = people(:michael).posts_with_no_comments.find(:first) }
+    assert_equal post_with_no_comments, posts(:authorless)
+  end
 end
-- 
1.6.0.2

