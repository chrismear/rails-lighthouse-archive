<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-04-16T17:18:24+01:00</created-at>
  <creator-id type="integer">17426</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">8</number>
  <permalink>fixture-caching-does-not-work-with-prefixed-suffixed-tables</permalink>
  <priority type="integer">10849</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.0-stable activerecord fixtures patch</tag>
  <title>Fixture caching does not work with prefixed/suffixed tables</title>
  <updated-at type="datetime">2008-04-30T23:00:15+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">3</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Rhett Sutphin</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/8</url>
  <priority-name nil="true"></priority-name>
  <original-body>The fixture caching introduced with Rails 2 doesn't work if your project uses ActiveRecord::Base.table_name_prefix (or _suffix).  You will get a NoMethodError with a stacktrace like this:

You have a nil object when you didn't expect it!
The error occurred while evaluating nil.table_name
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `load_fixtures'
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `each'
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `load_fixtures'
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:941:in `setup'
...and so on.

The problem is that the fixtures are stored in the cache using the actual table name (i.e., with the prefix and/or suffix), but looked up using the fixture name (without the prefix or suffix).

A workaround is to use set_fixture_class, but since the table names  all follow a pattern, this is not very DRY.  A better solution would be to index the cache by the fixture name instead of the table name.  Patch coming soon.</original-body>
  <latest-body>The fixture caching introduced with Rails 2 doesn't work if your project uses ActiveRecord::Base.table_name_prefix (or _suffix).  You will get a NoMethodError with a stacktrace like this:

You have a nil object when you didn't expect it!
The error occurred while evaluating nil.table_name
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `load_fixtures'
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `each'
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `load_fixtures'
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:941:in `setup'
...and so on.

The problem is that the fixtures are stored in the cache using the actual table name (i.e., with the prefix and/or suffix), but looked up using the fixture name (without the prefix or suffix).

A workaround is to use set_fixture_class, but since the table names  all follow a pattern, this is not very DRY.  A better solution would be to index the cache by the fixture name instead of the table name.  Patch coming soon.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
The fixture caching introduced with Rails 2 doesn't work if your project uses ActiveRecord::Base.table_name_prefix (or _suffix).  You will get a NoMethodError with a stacktrace like this:
&lt;/p&gt;&lt;p&gt;
You have a nil object when you didn't expect it!
&lt;/p&gt;&lt;p&gt;
The error occurred while evaluating nil.table_name
&lt;/p&gt;&lt;p&gt;
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `load_fixtures'
&lt;/p&gt;&lt;p&gt;
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `each'
&lt;/p&gt;&lt;p&gt;
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `load_fixtures'
&lt;/p&gt;&lt;p&gt;
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:941:in `setup'
&lt;/p&gt;&lt;p&gt;
...and so on.
&lt;/p&gt;&lt;p&gt;
The problem is that the fixtures are stored in the cache using the actual table name (i.e., with the prefix and/or suffix), but looked up using the fixture name (without the prefix or suffix).
&lt;/p&gt;&lt;p&gt;
A workaround is to use set_fixture_class, but since the table names  all follow a pattern, this is not very DRY.  A better solution would be to index the cache by the fixture name instead of the table name.  Patch coming soon.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The fixture caching introduced with Rails 2 doesn't work if your project uses ActiveRecord::Base.table_name_prefix (or _suffix).  You will get a NoMethodError with a stacktrace like this:

You have a nil object when you didn't expect it!
The error occurred while evaluating nil.table_name
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `load_fixtures'
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `each'
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `load_fixtures'
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:941:in `setup'
...and so on.

The problem is that the fixtures are stored in the cache using the actual table name (i.e., with the prefix and/or suffix), but looked up using the fixture name (without the prefix or suffix).

A workaround is to use set_fixture_class, but since the table names  all follow a pattern, this is not very DRY.  A better solution would be to index the cache by the fixture name instead of the table name.  Patch coming soon.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The fixture caching introduced with Rails 2 doesn't work if your project uses ActiveRecord::Base.table_name_prefix (or _suffix).  You will get a NoMethodError with a stacktrace like this:
&lt;/p&gt;&lt;p&gt;
You have a nil object when you didn't expect it!
&lt;/p&gt;&lt;p&gt;
The error occurred while evaluating nil.table_name
&lt;/p&gt;&lt;p&gt;
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `load_fixtures'
&lt;/p&gt;&lt;p&gt;
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `each'
&lt;/p&gt;&lt;p&gt;
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:1003:in `load_fixtures'
&lt;/p&gt;&lt;p&gt;
proj/vendor/rails/activerecord/lib/active_record/fixtures.rb:941:in `setup'
&lt;/p&gt;&lt;p&gt;
...and so on.
&lt;/p&gt;&lt;p&gt;
The problem is that the fixtures are stored in the cache using the actual table name (i.e., with the prefix and/or suffix), but looked up using the fixture name (without the prefix or suffix).
&lt;/p&gt;&lt;p&gt;
A workaround is to use set_fixture_class, but since the table names  all follow a pattern, this is not very DRY.  A better solution would be to index the cache by the fixture name instead of the table name.  Patch coming soon.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-16T17:18:25+01:00</created-at>
      <creator-id type="integer">17426</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">8</number>
      <permalink>fixture-caching-does-not-work-with-prefixed-suffixed-tables</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fixture caching does not work with prefixed/suffixed tables</title>
      <updated-at type="datetime">2008-04-16T17:18:25+01:00</updated-at>
      <user-id type="integer">17426</user-id>
      <version type="integer">1</version>
      <user-name>Rhett Sutphin</user-name>
      <creator-name>Rhett Sutphin</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/8</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've fixed this in a fork of the 2-0-branch on github.  The fix is present in this tree (and is the only change):

http://github.com/rsutphin/rails/tree/5d8246392514685a5e0d1d444068badd06075eea

I'm not sure if this is the right way to submit git-based patches, so I'm attaching a traditional patch, too.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I've fixed this in a fork of the 2-0-branch on github.  The fix is present in this tree (and is the only change):
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rsutphin/rails/tree/5d8246392514685a5e0d1d444068badd06075eea&quot;&gt;http://github.com/rsutphin/rails...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
I'm not sure if this is the right way to submit git-based patches, so I'm attaching a traditional patch, too.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-04-21T23:13:17+01:00</created-at>
      <creator-id type="integer">17426</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">8</number>
      <permalink>fixture-caching-does-not-work-with-prefixed-suffixed-tables</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Fixture caching does not work with prefixed/suffixed tables</title>
      <updated-at type="datetime">2008-04-21T23:13:17+01:00</updated-at>
      <user-id type="integer">17426</user-id>
      <version type="integer">2</version>
      <user-name>Rhett Sutphin</user-name>
      <creator-name>Rhett Sutphin</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/8</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>http://github.com/rails/rails/commit/b4c33711c52dc78e6ff63469a5caa89f9a67c61a</body>
      <body-html>&lt;div&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/b4c33711c52dc78e6ff63469a5caa89f9a67c61a&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-04-30T23:00:15+01:00</created-at>
      <creator-id type="integer">17426</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">8</number>
      <permalink>fixture-caching-does-not-work-with-prefixed-suffixed-tables</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>Fixture caching does not work with prefixed/suffixed tables</title>
      <updated-at type="datetime">2008-04-30T23:00:15+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Rhett Sutphin</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/8</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>0166b5d9df65a9e133795cf9da6cef1e2ce5a1e7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-04-21T23:13:17+01:00</created-at>
      <filename>ticket8-prefixed_table_fixture_caching.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">19563</id>
      <size type="integer">1744</size>
      <uploader-id type="integer">17426</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/19563/ticket8-prefixed_table_fixture_caching.patch</url>
    </attachment>
  </attachments>
</ticket>
