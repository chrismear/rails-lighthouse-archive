<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-16T20:05:15+00:00</created-at>
  <creator-id type="integer">8875</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2258</number>
  <permalink>libxml-xml_mini-backend-producing-incorrect-hashes</permalink>
  <priority type="integer">1436</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activesupport backend jdom jruby libxml nokogiri test xml_mini</tag>
  <title>libxml xml_mini backend producing incorrect hashes</title>
  <updated-at type="datetime">2011-02-02T18:29:56+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">5</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Stephen Bannasch</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2258</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Using the xml_mini backend: 'LibXML' results in incorrect hashs when some input XML.

I'd like to extend the REXML equivalency tests that Aaron (tenderlove) has added for Nokogiri to cover all three xml_mini backends:

* LibXML, Nokogiri, and JDOM

for JDOM backend, see: #2238

But I'm not sure what is the cleanest way to do this.

I have a test in this repo:

http://github.com/stepheneb/rails_hash_from_xml/tree/master

that shows at least one way LibXML fails.

Please take a a look at that test and let me know if that or some other pattern would be useful for expressing a set of tests for all the xml_mini backends.</original-body>
  <latest-body>Using the xml_mini backend: 'LibXML' results in incorrect hashs when some input XML.

I'd like to extend the REXML equivalency tests that Aaron (tenderlove) has added for Nokogiri to cover all three xml_mini backends:

* LibXML, Nokogiri, and JDOM

for JDOM backend, see: #2238

But I'm not sure what is the cleanest way to do this.

I have a test in this repo:

http://github.com/stepheneb/rails_hash_from_xml/tree/master

that shows at least one way LibXML fails.

Please take a a look at that test and let me know if that or some other pattern would be useful for expressing a set of tests for all the xml_mini backends.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Using the xml_mini backend: 'LibXML' results in incorrect hashs
when some input XML.&lt;/p&gt;
&lt;p&gt;I'd like to extend the REXML equivalency tests that Aaron
(tenderlove) has added for Nokogiri to cover all three xml_mini
backends:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LibXML, Nokogiri, and JDOM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;for JDOM backend, see: &lt;a href=&quot;/projects/8994/tickets/2238&quot; title=&quot;Ticket #2238&quot;&gt;#2238&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But I'm not sure what is the cleanest way to do this.&lt;/p&gt;
&lt;p&gt;I have a test in this repo:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/stepheneb/rails_hash_from_xml/tree/master&quot;&gt;http://github.com/stepheneb/rail...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;that shows at least one way LibXML fails.&lt;/p&gt;
&lt;p&gt;Please take a a look at that test and let me know if that or
some other pattern would be useful for expressing a set of tests
for all the xml_mini backends.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Using the xml_mini backend: 'LibXML' results in incorrect hashs when some input XML.

I'd like to extend the REXML equivalency tests that Aaron (tenderlove) has added for Nokogiri to cover all three xml_mini backends:

* LibXML, Nokogiri, and JDOM

for JDOM backend, see: #2238

But I'm not sure what is the cleanest way to do this.

I have a test in this repo:

http://github.com/stepheneb/rails_hash_from_xml/tree/master

that shows at least one way LibXML fails.

Please take a a look at that test and let me know if that or some other pattern would be useful for expressing a set of tests for all the xml_mini backends.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Using the xml_mini backend: 'LibXML' results in incorrect hashs
when some input XML.&lt;/p&gt;
&lt;p&gt;I'd like to extend the REXML equivalency tests that Aaron
(tenderlove) has added for Nokogiri to cover all three xml_mini
backends:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LibXML, Nokogiri, and JDOM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;for JDOM backend, see: &lt;a href=&quot;/projects/8994/tickets/2238&quot; title=&quot;Ticket #2238&quot;&gt;#2238&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But I'm not sure what is the cleanest way to do this.&lt;/p&gt;
&lt;p&gt;I have a test in this repo:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/stepheneb/rails_hash_from_xml/tree/master&quot;&gt;http://github.com/stepheneb/rail...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;that shows at least one way LibXML fails.&lt;/p&gt;
&lt;p&gt;Please take a a look at that test and let me know if that or
some other pattern would be useful for expressing a set of tests
for all the xml_mini backends.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-16T20:05:16+00:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2258</number>
      <permalink>libxml-xml_mini-backend-producing-incorrect-hashes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport backend jdom jruby libxml nokogiri test xml_mini</tag>
      <title>libxml xml_mini backend producing incorrect hashes</title>
      <updated-at type="datetime">2009-03-16T20:05:18+00:00</updated-at>
      <user-id type="integer">8875</user-id>
      <version type="integer">1</version>
      <user-name>Stephen Bannasch</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2258</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've updated my tests so that I've got 10 of the nokogiri tests running for all the alternate xml_mini backends.

The code is here:

http://github.com/stepheneb/rails_hash_from_xml/blob/823a8b6b4c2bad04a27e9131082d816e8c19990e/test/test_rexml_equality.rb

libxml fails two.

The readme.txt file here shows the results of running the tests for all the backends:

http://github.com/stepheneb/rails_hash_from_xml/tree/master

Nokogiri and JDOM pass all 10.

I'll see about getting a real patch attached here soon.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've updated my tests so that I've got 10 of the nokogiri tests
running for all the alternate xml_mini backends.&lt;/p&gt;
&lt;p&gt;The code is here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/stepheneb/rails_hash_from_xml/blob/823a8b6b4c2bad04a27e9131082d816e8c19990e/test/test_rexml_equality.rb&quot;&gt;
http://github.com/stepheneb/rail...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;libxml fails two.&lt;/p&gt;
&lt;p&gt;The readme.txt file here shows the results of running the tests
for all the backends:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/stepheneb/rails_hash_from_xml/tree/master&quot;&gt;http://github.com/stepheneb/rail...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nokogiri and JDOM pass all 10.&lt;/p&gt;
&lt;p&gt;I'll see about getting a real patch attached here soon.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-16T22:40:53+00:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2258</number>
      <permalink>libxml-xml_mini-backend-producing-incorrect-hashes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport backend jdom jruby libxml nokogiri test xml_mini</tag>
      <title>libxml xml_mini backend producing incorrect hashes</title>
      <updated-at type="datetime">2009-03-16T22:40:54+00:00</updated-at>
      <user-id type="integer">8875</user-id>
      <version type="integer">2</version>
      <user-name>Stephen Bannasch</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2258</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:42+01:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2258</number>
      <permalink>libxml-xml_mini-backend-producing-incorrect-hashes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport backend jdom jruby libxml nokogiri test xml_mini</tag>
      <title>libxml xml_mini backend producing incorrect hashes</title>
      <updated-at type="datetime">2010-05-04T18:48:42+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">3</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2258</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:53:21+00:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2258</number>
      <permalink>libxml-xml_mini-backend-producing-incorrect-hashes</permalink>
      <priority type="integer">1436</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activesupport backend jdom jruby libxml nokogiri test xml_mini</tag>
      <title>libxml xml_mini backend producing incorrect hashes</title>
      <updated-at type="datetime">2011-02-02T18:29:44+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2258</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:53:22+00:00</created-at>
      <creator-id type="integer">8875</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2258</number>
      <permalink>libxml-xml_mini-backend-producing-incorrect-hashes</permalink>
      <priority type="integer">1436</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activesupport backend jdom jruby libxml nokogiri test xml_mini</tag>
      <title>libxml xml_mini backend producing incorrect hashes</title>
      <updated-at type="datetime">2011-02-02T18:29:56+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Stephen Bannasch</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2258</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
