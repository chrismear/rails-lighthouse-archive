From 6022a3b93a0f6cf9fd948d4ac4c40632ec79b7e4 Mon Sep 17 00:00:00 2001
From: Sven Fuchs <svenfuchs@artweb-design.de>
Date: Tue, 18 Nov 2008 09:59:46 +0100
Subject: [PATCH] use :en as a default locale (in favor of :en-US)

---
 actionpack/lib/action_view.rb                      |    2 +-
 actionpack/lib/action_view/helpers/date_helper.rb  |    2 +-
 actionpack/lib/action_view/locale/en-US.yml        |   91 -------------------
 actionpack/lib/action_view/locale/en.yml           |   91 +++++++++++++++++++
 .../template/active_record_helper_i18n_test.rb     |   24 +++---
 actionpack/test/template/date_helper_i18n_test.rb  |   22 +++---
 .../test/template/number_helper_i18n_test.rb       |   30 +++---
 .../test/template/translation_helper_test.rb       |    6 +-
 activerecord/lib/active_record.rb                  |    2 +-
 activerecord/lib/active_record/locale/en-US.yml    |   54 -----------
 activerecord/lib/active_record/locale/en.yml       |   54 +++++++++++
 activerecord/test/cases/i18n_test.rb               |   12 ++--
 activerecord/test/cases/validations_i18n_test.rb   |   96 ++++++++++----------
 activesupport/lib/active_support.rb                |    2 +-
 activesupport/lib/active_support/locale/en-US.yml  |   32 -------
 activesupport/lib/active_support/locale/en.yml     |   32 +++++++
 .../lib/active_support/vendor/i18n-0.0.1/i18n.rb   |    6 +-
 activesupport/test/i18n_test.rb                    |    4 +-
 18 files changed, 281 insertions(+), 281 deletions(-)
 delete mode 100644 actionpack/lib/action_view/locale/en-US.yml
 create mode 100644 actionpack/lib/action_view/locale/en.yml
 delete mode 100644 activerecord/lib/active_record/locale/en-US.yml
 create mode 100644 activerecord/lib/active_record/locale/en.yml
 delete mode 100644 activesupport/lib/active_support/locale/en-US.yml
 create mode 100644 activesupport/lib/active_support/locale/en.yml

diff --git a/actionpack/lib/action_view.rb b/actionpack/lib/action_view.rb
index 7cd9b63..7b1d3f8 100644
--- a/actionpack/lib/action_view.rb
+++ b/actionpack/lib/action_view.rb
@@ -43,7 +43,7 @@ require 'action_view/base'
 require 'action_view/partials'
 require 'action_view/template_error'
 
-I18n.load_path << "#{File.dirname(__FILE__)}/action_view/locale/en-US.yml"
+I18n.load_path << "#{File.dirname(__FILE__)}/action_view/locale/en.yml"
 
 require 'action_view/helpers'
 
diff --git a/actionpack/lib/action_view/helpers/date_helper.rb b/actionpack/lib/action_view/helpers/date_helper.rb
index 919c937..22108dd 100644
--- a/actionpack/lib/action_view/helpers/date_helper.rb
+++ b/actionpack/lib/action_view/helpers/date_helper.rb
@@ -131,7 +131,7 @@ module ActionView
       # * <tt>:order</tt>             - Set to an array containing <tt>:day</tt>, <tt>:month</tt> and <tt>:year</tt> do
       #   customize the order in which the select fields are shown. If you leave out any of the symbols, the respective
       #   select will not be shown (like when you set <tt>:discard_xxx => true</tt>. Defaults to the order defined in
-      #   the respective locale (e.g. [:year, :month, :day] in the en-US locale that ships with Rails).
+      #   the respective locale (e.g. [:year, :month, :day] in the en locale that ships with Rails).
       # * <tt>:include_blank</tt>     - Include a blank option in every select field so it's possible to set empty
       #   dates.
       # * <tt>:default</tt>           - Set a default date if the affected date isn't set or is nil.
diff --git a/actionpack/lib/action_view/locale/en-US.yml b/actionpack/lib/action_view/locale/en-US.yml
deleted file mode 100644
index 818f2f9..0000000
--- a/actionpack/lib/action_view/locale/en-US.yml
+++ /dev/null
@@ -1,91 +0,0 @@
-"en-US":
-  number:
-    # Used in number_with_delimiter()
-    # These are also the defaults for 'currency', 'percentage', 'precision', and 'human'
-    format:
-      # Sets the separator between the units, for more precision (e.g. 1.0 / 2.0 == 0.5)
-      separator: "."
-      # Delimets thousands (e.g. 1,000,000 is a million) (always in groups of three)
-      delimiter: ","
-      # Number of decimals, behind the separator (the number 1 with a precision of 2 gives: 1.00)
-      precision: 3
-      
-    # Used in number_to_currency()
-    currency:
-      format:
-        # Where is the currency sign? %u is the currency unit, %n the number (default: $5.00)
-        format: "%u%n"
-        unit: "$"
-        # These three are to override number.format and are optional
-        separator: "."
-        delimiter: ","
-        precision: 2
-        
-    # Used in number_to_percentage()
-    percentage:
-      format:
-        # These three are to override number.format and are optional
-        # separator: 
-        delimiter: ""
-        # precision: 
-        
-    # Used in number_to_precision()
-    precision:
-      format:
-        # These three are to override number.format and are optional
-        # separator:
-        delimiter: ""
-        # precision:
-        
-    # Used in number_to_human_size()
-    human:
-      format:
-        # These three are to override number.format and are optional
-        # separator: 
-        delimiter: ""
-        precision: 1
-
-  # Used in distance_of_time_in_words(), distance_of_time_in_words_to_now(), time_ago_in_words()
-  datetime:
-    distance_in_words:
-      half_a_minute: "half a minute"
-      less_than_x_seconds:
-        one:   "less than 1 second"
-        other: "less than {{count}} seconds"
-      x_seconds:
-        one:   "1 second"
-        other: "{{count}} seconds"
-      less_than_x_minutes:
-        one:   "less than a minute"
-        other: "less than {{count}} minutes"
-      x_minutes:
-        one:   "1 minute"
-        other: "{{count}} minutes"
-      about_x_hours:
-        one:   "about 1 hour"
-        other: "about {{count}} hours"
-      x_days:
-        one:   "1 day"
-        other: "{{count}} days"
-      about_x_months:
-        one:   "about 1 month"
-        other: "about {{count}} months"
-      x_months:
-        one:   "1 month"
-        other: "{{count}} months"
-      about_x_years:
-        one:   "about 1 year"
-        other: "about {{count}} years"
-      over_x_years:
-        one:   "over 1 year"
-        other: "over {{count}} years"
-
-  activerecord:
-    errors:
-      template:
-        header:
-          one:    "1 error prohibited this {{model}} from being saved"
-          other:  "{{count}} errors prohibited this {{model}} from being saved"
-        # The variable :count is also available
-        body: "There were problems with the following fields:"
-
diff --git a/actionpack/lib/action_view/locale/en.yml b/actionpack/lib/action_view/locale/en.yml
new file mode 100644
index 0000000..002226f
--- /dev/null
+++ b/actionpack/lib/action_view/locale/en.yml
@@ -0,0 +1,91 @@
+"en":
+  number:
+    # Used in number_with_delimiter()
+    # These are also the defaults for 'currency', 'percentage', 'precision', and 'human'
+    format:
+      # Sets the separator between the units, for more precision (e.g. 1.0 / 2.0 == 0.5)
+      separator: "."
+      # Delimets thousands (e.g. 1,000,000 is a million) (always in groups of three)
+      delimiter: ","
+      # Number of decimals, behind the separator (the number 1 with a precision of 2 gives: 1.00)
+      precision: 3
+      
+    # Used in number_to_currency()
+    currency:
+      format:
+        # Where is the currency sign? %u is the currency unit, %n the number (default: $5.00)
+        format: "%u%n"
+        unit: "$"
+        # These three are to override number.format and are optional
+        separator: "."
+        delimiter: ","
+        precision: 2
+        
+    # Used in number_to_percentage()
+    percentage:
+      format:
+        # These three are to override number.format and are optional
+        # separator: 
+        delimiter: ""
+        # precision: 
+        
+    # Used in number_to_precision()
+    precision:
+      format:
+        # These three are to override number.format and are optional
+        # separator:
+        delimiter: ""
+        # precision:
+        
+    # Used in number_to_human_size()
+    human:
+      format:
+        # These three are to override number.format and are optional
+        # separator: 
+        delimiter: ""
+        precision: 1
+
+  # Used in distance_of_time_in_words(), distance_of_time_in_words_to_now(), time_ago_in_words()
+  datetime:
+    distance_in_words:
+      half_a_minute: "half a minute"
+      less_than_x_seconds:
+        one:   "less than 1 second"
+        other: "less than {{count}} seconds"
+      x_seconds:
+        one:   "1 second"
+        other: "{{count}} seconds"
+      less_than_x_minutes:
+        one:   "less than a minute"
+        other: "less than {{count}} minutes"
+      x_minutes:
+        one:   "1 minute"
+        other: "{{count}} minutes"
+      about_x_hours:
+        one:   "about 1 hour"
+        other: "about {{count}} hours"
+      x_days:
+        one:   "1 day"
+        other: "{{count}} days"
+      about_x_months:
+        one:   "about 1 month"
+        other: "about {{count}} months"
+      x_months:
+        one:   "1 month"
+        other: "{{count}} months"
+      about_x_years:
+        one:   "about 1 year"
+        other: "about {{count}} years"
+      over_x_years:
+        one:   "over 1 year"
+        other: "over {{count}} years"
+
+  activerecord:
+    errors:
+      template:
+        header:
+          one:    "1 error prohibited this {{model}} from being saved"
+          other:  "{{count}} errors prohibited this {{model}} from being saved"
+        # The variable :count is also available
+        body: "There were problems with the following fields:"
+
diff --git a/actionpack/test/template/active_record_helper_i18n_test.rb b/actionpack/test/template/active_record_helper_i18n_test.rb
index 7ba9659..7e6bf70 100644
--- a/actionpack/test/template/active_record_helper_i18n_test.rb
+++ b/actionpack/test/template/active_record_helper_i18n_test.rb
@@ -10,37 +10,37 @@ class ActiveRecordHelperI18nTest < Test::Unit::TestCase
       @object_name = 'book'
       stubs(:content_tag).returns 'content_tag'
 
-      I18n.stubs(:t).with(:'header', :locale => 'en-US', :scope => [:activerecord, :errors, :template], :count => 1, :model => '').returns "1 error prohibited this  from being saved"
-      I18n.stubs(:t).with(:'body', :locale => 'en-US', :scope => [:activerecord, :errors, :template]).returns 'There were problems with the following fields:'
+      I18n.stubs(:t).with(:'header', :locale => 'en', :scope => [:activerecord, :errors, :template], :count => 1, :model => '').returns "1 error prohibited this  from being saved"
+      I18n.stubs(:t).with(:'body', :locale => 'en', :scope => [:activerecord, :errors, :template]).returns 'There were problems with the following fields:'
     end
 
     def test_error_messages_for_given_a_header_option_it_does_not_translate_header_message
-      I18n.expects(:translate).with(:'header', :locale => 'en-US', :scope => [:activerecord, :errors, :template], :count => 1, :model => '').never
-      error_messages_for(:object => @object, :header_message => 'header message', :locale => 'en-US')
+      I18n.expects(:translate).with(:'header', :locale => 'en', :scope => [:activerecord, :errors, :template], :count => 1, :model => '').never
+      error_messages_for(:object => @object, :header_message => 'header message', :locale => 'en')
     end
 
     def test_error_messages_for_given_no_header_option_it_translates_header_message
-      I18n.expects(:t).with(:'header', :locale => 'en-US', :scope => [:activerecord, :errors, :template], :count => 1, :model => '').returns 'header message'
+      I18n.expects(:t).with(:'header', :locale => 'en', :scope => [:activerecord, :errors, :template], :count => 1, :model => '').returns 'header message'
       I18n.expects(:t).with('', :default => '', :count => 1, :scope => [:activerecord, :models]).once.returns ''
-      error_messages_for(:object => @object, :locale => 'en-US')
+      error_messages_for(:object => @object, :locale => 'en')
     end
 
     def test_error_messages_for_given_a_message_option_it_does_not_translate_message
-      I18n.expects(:t).with(:'body', :locale => 'en-US', :scope => [:activerecord, :errors, :template]).never
+      I18n.expects(:t).with(:'body', :locale => 'en', :scope => [:activerecord, :errors, :template]).never
       I18n.expects(:t).with('', :default => '', :count => 1, :scope => [:activerecord, :models]).once.returns ''
-      error_messages_for(:object => @object, :message => 'message', :locale => 'en-US')
+      error_messages_for(:object => @object, :message => 'message', :locale => 'en')
     end
 
     def test_error_messages_for_given_no_message_option_it_translates_message
-      I18n.expects(:t).with(:'body', :locale => 'en-US', :scope => [:activerecord, :errors, :template]).returns 'There were problems with the following fields:'
+      I18n.expects(:t).with(:'body', :locale => 'en', :scope => [:activerecord, :errors, :template]).returns 'There were problems with the following fields:'
       I18n.expects(:t).with('', :default => '', :count => 1, :scope => [:activerecord, :models]).once.returns ''
-      error_messages_for(:object => @object, :locale => 'en-US')
+      error_messages_for(:object => @object, :locale => 'en')
     end
     
     def test_error_messages_for_given_object_name_it_translates_object_name
-      I18n.expects(:t).with(:header, :locale => 'en-US', :scope => [:activerecord, :errors, :template], :count => 1, :model => @object_name).returns "1 error prohibited this #{@object_name} from being saved"
+      I18n.expects(:t).with(:header, :locale => 'en', :scope => [:activerecord, :errors, :template], :count => 1, :model => @object_name).returns "1 error prohibited this #{@object_name} from being saved"
       I18n.expects(:t).with(@object_name, :default => @object_name, :count => 1, :scope => [:activerecord, :models]).once.returns @object_name
-      error_messages_for(:object => @object, :locale => 'en-US', :object_name => @object_name)
+      error_messages_for(:object => @object, :locale => 'en', :object_name => @object_name)
     end
   end
 end
diff --git a/actionpack/test/template/date_helper_i18n_test.rb b/actionpack/test/template/date_helper_i18n_test.rb
index bf3b258..dc9616d 100644
--- a/actionpack/test/template/date_helper_i18n_test.rb
+++ b/actionpack/test/template/date_helper_i18n_test.rb
@@ -41,11 +41,11 @@ class DateHelperDistanceOfTimeInWordsI18nTests < Test::Unit::TestCase
       key, count = *expected
       to = @from + diff
 
-      options = {:locale => 'en-US', :scope => :'datetime.distance_in_words'}
+      options = {:locale => 'en', :scope => :'datetime.distance_in_words'}
       options[:count] = count if count
 
       I18n.expects(:t).with(key, options)
-      distance_of_time_in_words(@from, to, include_seconds, :locale => 'en-US')
+      distance_of_time_in_words(@from, to, include_seconds, :locale => 'en')
     end
 
     def test_distance_of_time_pluralizations
@@ -78,36 +78,36 @@ class DateHelperSelectTagsI18nTests < Test::Unit::TestCase
 
   uses_mocha 'date_helper_select_tags_i18n_tests' do
     def setup
-      I18n.stubs(:translate).with(:'date.month_names', :locale => 'en-US').returns Date::MONTHNAMES
+      I18n.stubs(:translate).with(:'date.month_names', :locale => 'en').returns Date::MONTHNAMES
     end
 
     # select_month
 
     def test_select_month_given_use_month_names_option_does_not_translate_monthnames
       I18n.expects(:translate).never
-      select_month(8, :locale => 'en-US', :use_month_names => Date::MONTHNAMES)
+      select_month(8, :locale => 'en', :use_month_names => Date::MONTHNAMES)
     end
 
     def test_select_month_translates_monthnames
-      I18n.expects(:translate).with(:'date.month_names', :locale => 'en-US').returns Date::MONTHNAMES
-      select_month(8, :locale => 'en-US')
+      I18n.expects(:translate).with(:'date.month_names', :locale => 'en').returns Date::MONTHNAMES
+      select_month(8, :locale => 'en')
     end
 
     def test_select_month_given_use_short_month_option_translates_abbr_monthnames
-      I18n.expects(:translate).with(:'date.abbr_month_names', :locale => 'en-US').returns Date::ABBR_MONTHNAMES
-      select_month(8, :locale => 'en-US', :use_short_month => true)
+      I18n.expects(:translate).with(:'date.abbr_month_names', :locale => 'en').returns Date::ABBR_MONTHNAMES
+      select_month(8, :locale => 'en', :use_short_month => true)
     end
 
     # date_or_time_select
 
     def test_date_or_time_select_given_an_order_options_does_not_translate_order
       I18n.expects(:translate).never
-      datetime_select('post', 'updated_at', :order => [:year, :month, :day], :locale => 'en-US')
+      datetime_select('post', 'updated_at', :order => [:year, :month, :day], :locale => 'en')
     end
 
     def test_date_or_time_select_given_no_order_options_translates_order
-      I18n.expects(:translate).with(:'date.order', :locale => 'en-US').returns [:year, :month, :day]
-      datetime_select('post', 'updated_at', :locale => 'en-US')
+      I18n.expects(:translate).with(:'date.order', :locale => 'en').returns [:year, :month, :day]
+      datetime_select('post', 'updated_at', :locale => 'en')
     end
   end
 end
\ No newline at end of file
diff --git a/actionpack/test/template/number_helper_i18n_test.rb b/actionpack/test/template/number_helper_i18n_test.rb
index 2ee7f43..67c61a5 100644
--- a/actionpack/test/template/number_helper_i18n_test.rb
+++ b/actionpack/test/template/number_helper_i18n_test.rb
@@ -13,42 +13,42 @@ class NumberHelperI18nTests < Test::Unit::TestCase
       @percentage_defaults = { :delimiter => '' }
       @precision_defaults = { :delimiter => '' }
 
-      I18n.backend.store_translations 'en-US', :number => { :format => @number_defaults,
+      I18n.backend.store_translations 'en', :number => { :format => @number_defaults,
         :currency => { :format => @currency_defaults }, :human => @human_defaults }
     end
 
     def test_number_to_currency_translates_currency_formats
-      I18n.expects(:translate).with(:'number.format', :locale => 'en-US', :raise => true).returns(@number_defaults)
-      I18n.expects(:translate).with(:'number.currency.format', :locale => 'en-US',
+      I18n.expects(:translate).with(:'number.format', :locale => 'en', :raise => true).returns(@number_defaults)
+      I18n.expects(:translate).with(:'number.currency.format', :locale => 'en',
                                     :raise => true).returns(@currency_defaults)
-      number_to_currency(1, :locale => 'en-US')
+      number_to_currency(1, :locale => 'en')
     end
 
     def test_number_with_precision_translates_number_formats
-      I18n.expects(:translate).with(:'number.format', :locale => 'en-US', :raise => true).returns(@number_defaults)
-      I18n.expects(:translate).with(:'number.precision.format', :locale => 'en-US',
+      I18n.expects(:translate).with(:'number.format', :locale => 'en', :raise => true).returns(@number_defaults)
+      I18n.expects(:translate).with(:'number.precision.format', :locale => 'en',
                                     :raise => true).returns(@precision_defaults)
-      number_with_precision(1, :locale => 'en-US')
+      number_with_precision(1, :locale => 'en')
     end
 
     def test_number_with_delimiter_translates_number_formats
-      I18n.expects(:translate).with(:'number.format', :locale => 'en-US', :raise => true).returns(@number_defaults)
-      number_with_delimiter(1, :locale => 'en-US')
+      I18n.expects(:translate).with(:'number.format', :locale => 'en', :raise => true).returns(@number_defaults)
+      number_with_delimiter(1, :locale => 'en')
     end
 
     def test_number_to_percentage_translates_number_formats
-      I18n.expects(:translate).with(:'number.format', :locale => 'en-US', :raise => true).returns(@number_defaults)
-      I18n.expects(:translate).with(:'number.percentage.format', :locale => 'en-US',
+      I18n.expects(:translate).with(:'number.format', :locale => 'en', :raise => true).returns(@number_defaults)
+      I18n.expects(:translate).with(:'number.percentage.format', :locale => 'en',
                                     :raise => true).returns(@percentage_defaults)
-      number_to_percentage(1, :locale => 'en-US')
+      number_to_percentage(1, :locale => 'en')
     end
 
     def test_number_to_human_size_translates_human_formats
-      I18n.expects(:translate).with(:'number.format', :locale => 'en-US', :raise => true).returns(@number_defaults)
-      I18n.expects(:translate).with(:'number.human.format', :locale => 'en-US',
+      I18n.expects(:translate).with(:'number.format', :locale => 'en', :raise => true).returns(@number_defaults)
+      I18n.expects(:translate).with(:'number.human.format', :locale => 'en',
                                     :raise => true).returns(@human_defaults)
       # can't be called with 1 because this directly returns without calling I18n.translate
-      number_to_human_size(1025, :locale => 'en-US')
+      number_to_human_size(1025, :locale => 'en')
     end
   end
 end
diff --git a/actionpack/test/template/translation_helper_test.rb b/actionpack/test/template/translation_helper_test.rb
index 1b28a59..d0d65cb 100644
--- a/actionpack/test/template/translation_helper_test.rb
+++ b/actionpack/test/template/translation_helper_test.rb
@@ -10,12 +10,12 @@ class TranslationHelperTest < Test::Unit::TestCase
     end
     
     def test_delegates_to_i18n_setting_the_raise_option
-      I18n.expects(:translate).with(:foo, :locale => 'en-US', :raise => true)
-      translate :foo, :locale => 'en-US'
+      I18n.expects(:translate).with(:foo, :locale => 'en', :raise => true)
+      translate :foo, :locale => 'en'
     end
     
     def test_returns_missing_translation_message_wrapped_into_span
-      expected = '<span class="translation_missing">en-US, foo</span>'
+      expected = '<span class="translation_missing">en, foo</span>'
       assert_equal expected, translate(:foo)
     end
   
diff --git a/activerecord/lib/active_record.rb b/activerecord/lib/active_record.rb
index 219cd30..7fdef17 100644
--- a/activerecord/lib/active_record.rb
+++ b/activerecord/lib/active_record.rb
@@ -78,4 +78,4 @@ require 'active_record/connection_adapters/abstract_adapter'
 require 'active_record/schema_dumper'
 
 require 'active_record/i18n_interpolation_deprecation'
-I18n.load_path << File.dirname(__FILE__) + '/active_record/locale/en-US.yml'
+I18n.load_path << File.dirname(__FILE__) + '/active_record/locale/en.yml'
diff --git a/activerecord/lib/active_record/locale/en-US.yml b/activerecord/lib/active_record/locale/en-US.yml
deleted file mode 100644
index 421f0eb..0000000
--- a/activerecord/lib/active_record/locale/en-US.yml
+++ /dev/null
@@ -1,54 +0,0 @@
-en-US:
-  activerecord:
-    errors:
-      # The values :model, :attribute and :value are always available for interpolation
-      # The value :count is available when applicable. Can be used for pluralization.
-      messages:
-        inclusion: "is not included in the list"
-        exclusion: "is reserved"
-        invalid: "is invalid"
-        confirmation: "doesn't match confirmation"
-        accepted: "must be accepted"
-        empty: "can't be empty"
-        blank: "can't be blank"
-        too_long: "is too long (maximum is {{count}} characters)"
-        too_short: "is too short (minimum is {{count}} characters)"
-        wrong_length: "is the wrong length (should be {{count}} characters)"
-        taken: "has already been taken"
-        not_a_number: "is not a number"
-        greater_than: "must be greater than {{count}}"
-        greater_than_or_equal_to: "must be greater than or equal to {{count}}"
-        equal_to: "must be equal to {{count}}"
-        less_than: "must be less than {{count}}"
-        less_than_or_equal_to: "must be less than or equal to {{count}}"
-        odd: "must be odd"
-        even: "must be even"
-        # Append your own errors here or at the model/attributes scope.
-
-      # You can define own errors for models or model attributes.
-      # The values :model, :attribute and :value are always available for interpolation.
-      #
-      # For example,
-      #   models:
-      #     user:
-      #       blank: "This is a custom blank message for {{model}}: {{attribute}}"
-      #       attributes:
-      #         login:
-      #           blank: "This is a custom blank message for User login"
-      # Will define custom blank validation message for User model and 
-      # custom blank validation message for login attribute of User model.
-      models:
-        
-    # Translate model names. Used in Model.human_name().
-    #models:
-      # For example,
-      #   user: "Dude"
-      # will translate User model name to "Dude"
-    
-    # Translate model attribute names. Used in Model.human_attribute_name(attribute).
-    #attributes:
-      # For example,
-      #   user:
-      #     login: "Handle"
-      # will translate User attribute "login" as "Handle"
-
diff --git a/activerecord/lib/active_record/locale/en.yml b/activerecord/lib/active_record/locale/en.yml
new file mode 100644
index 0000000..7e20543
--- /dev/null
+++ b/activerecord/lib/active_record/locale/en.yml
@@ -0,0 +1,54 @@
+en:
+  activerecord:
+    errors:
+      # The values :model, :attribute and :value are always available for interpolation
+      # The value :count is available when applicable. Can be used for pluralization.
+      messages:
+        inclusion: "is not included in the list"
+        exclusion: "is reserved"
+        invalid: "is invalid"
+        confirmation: "doesn't match confirmation"
+        accepted: "must be accepted"
+        empty: "can't be empty"
+        blank: "can't be blank"
+        too_long: "is too long (maximum is {{count}} characters)"
+        too_short: "is too short (minimum is {{count}} characters)"
+        wrong_length: "is the wrong length (should be {{count}} characters)"
+        taken: "has already been taken"
+        not_a_number: "is not a number"
+        greater_than: "must be greater than {{count}}"
+        greater_than_or_equal_to: "must be greater than or equal to {{count}}"
+        equal_to: "must be equal to {{count}}"
+        less_than: "must be less than {{count}}"
+        less_than_or_equal_to: "must be less than or equal to {{count}}"
+        odd: "must be odd"
+        even: "must be even"
+        # Append your own errors here or at the model/attributes scope.
+
+      # You can define own errors for models or model attributes.
+      # The values :model, :attribute and :value are always available for interpolation.
+      #
+      # For example,
+      #   models:
+      #     user:
+      #       blank: "This is a custom blank message for {{model}}: {{attribute}}"
+      #       attributes:
+      #         login:
+      #           blank: "This is a custom blank message for User login"
+      # Will define custom blank validation message for User model and 
+      # custom blank validation message for login attribute of User model.
+      models:
+        
+    # Translate model names. Used in Model.human_name().
+    #models:
+      # For example,
+      #   user: "Dude"
+      # will translate User model name to "Dude"
+    
+    # Translate model attribute names. Used in Model.human_attribute_name(attribute).
+    #attributes:
+      # For example,
+      #   user:
+      #     login: "Handle"
+      # will translate User attribute "login" as "Handle"
+
diff --git a/activerecord/test/cases/i18n_test.rb b/activerecord/test/cases/i18n_test.rb
index ea06e37..b1db662 100644
--- a/activerecord/test/cases/i18n_test.rb
+++ b/activerecord/test/cases/i18n_test.rb
@@ -9,32 +9,32 @@ class ActiveRecordI18nTests < Test::Unit::TestCase
   end
   
   def test_translated_model_attributes
-    I18n.backend.store_translations 'en-US', :activerecord => {:attributes => {:topic => {:title => 'topic title attribute'} } }
+    I18n.backend.store_translations 'en', :activerecord => {:attributes => {:topic => {:title => 'topic title attribute'} } }
     assert_equal 'topic title attribute', Topic.human_attribute_name('title')
   end
 
   def test_translated_model_attributes_with_sti
-    I18n.backend.store_translations 'en-US', :activerecord => {:attributes => {:reply => {:title => 'reply title attribute'} } }
+    I18n.backend.store_translations 'en', :activerecord => {:attributes => {:reply => {:title => 'reply title attribute'} } }
     assert_equal 'reply title attribute', Reply.human_attribute_name('title')
   end
 
   def test_translated_model_attributes_with_sti_fallback
-    I18n.backend.store_translations 'en-US', :activerecord => {:attributes => {:topic => {:title => 'topic title attribute'} } }
+    I18n.backend.store_translations 'en', :activerecord => {:attributes => {:topic => {:title => 'topic title attribute'} } }
     assert_equal 'topic title attribute', Reply.human_attribute_name('title')
   end
 
   def test_translated_model_names
-    I18n.backend.store_translations 'en-US', :activerecord => {:models => {:topic => 'topic model'} }
+    I18n.backend.store_translations 'en', :activerecord => {:models => {:topic => 'topic model'} }
     assert_equal 'topic model', Topic.human_name
   end
 
   def test_translated_model_names_with_sti
-    I18n.backend.store_translations 'en-US', :activerecord => {:models => {:reply => 'reply model'} }
+    I18n.backend.store_translations 'en', :activerecord => {:models => {:reply => 'reply model'} }
     assert_equal 'reply model', Reply.human_name
   end
 
   def test_translated_model_names_with_sti_fallback
-    I18n.backend.store_translations 'en-US', :activerecord => {:models => {:topic => 'topic model'} }
+    I18n.backend.store_translations 'en', :activerecord => {:models => {:topic => 'topic model'} }
     assert_equal 'topic model', Reply.human_name
   end
 end
diff --git a/activerecord/test/cases/validations_i18n_test.rb b/activerecord/test/cases/validations_i18n_test.rb
index b2df98c..f59e3f7 100644
--- a/activerecord/test/cases/validations_i18n_test.rb
+++ b/activerecord/test/cases/validations_i18n_test.rb
@@ -9,7 +9,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
     @old_load_path, @old_backend = I18n.load_path, I18n.backend
     I18n.load_path.clear
     I18n.backend = I18n::Backend::Simple.new
-    I18n.backend.store_translations('en-US', :activerecord => {:errors => {:messages => {:custom => nil}}})
+    I18n.backend.store_translations('en', :activerecord => {:errors => {:messages => {:custom => nil}}})
   end
 
   def teardown
@@ -165,7 +165,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
     def test_errors_full_messages_translates_human_attribute_name_for_model_attributes
       @topic.errors.instance_variable_set :@errors, { 'title' => ['empty'] }
       I18n.expects(:translate).with(:"topic.title", :default => ['Title'], :scope => [:activerecord, :attributes], :count => 1).returns('Title')
-      @topic.errors.full_messages :locale => 'en-US'
+      @topic.errors.full_messages :locale => 'en'
     end
   end
 
@@ -429,8 +429,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_confirmation_of w/o mocha
 
   def test_validates_confirmation_of_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:confirmation => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:confirmation => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:confirmation => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:confirmation => 'global message'}}}
 
     Topic.validates_confirmation_of :title
     @topic.title_confirmation = 'foo'
@@ -439,7 +439,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_confirmation_of_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:confirmation => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:confirmation => 'global message'}}}
 
     Topic.validates_confirmation_of :title
     @topic.title_confirmation = 'foo'
@@ -450,8 +450,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_acceptance_of w/o mocha
 
   def test_validates_acceptance_of_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:accepted => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:accepted => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:accepted => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:accepted => 'global message'}}}
 
     Topic.validates_acceptance_of :title, :allow_nil => false
     @topic.valid?
@@ -459,7 +459,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_acceptance_of_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:accepted => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:accepted => 'global message'}}}
 
     Topic.validates_acceptance_of :title, :allow_nil => false
     @topic.valid?
@@ -469,8 +469,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_presence_of w/o mocha
 
   def test_validates_presence_of_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:blank => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:blank => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:blank => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:blank => 'global message'}}}
 
     Topic.validates_presence_of :title
     @topic.valid?
@@ -478,7 +478,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_presence_of_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:blank => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:blank => 'global message'}}}
 
     Topic.validates_presence_of :title
     @topic.valid?
@@ -488,8 +488,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_length_of :within w/o mocha
 
   def test_validates_length_of_within_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:too_short => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:too_short => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:too_short => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:too_short => 'global message'}}}
 
     Topic.validates_length_of :title, :within => 3..5
     @topic.valid?
@@ -497,7 +497,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_length_of_within_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:too_short => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:too_short => 'global message'}}}
 
     Topic.validates_length_of :title, :within => 3..5
     @topic.valid?
@@ -507,8 +507,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_length_of :is w/o mocha
 
   def test_validates_length_of_within_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:wrong_length => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:wrong_length => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:wrong_length => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:wrong_length => 'global message'}}}
 
     Topic.validates_length_of :title, :is => 5
     @topic.valid?
@@ -516,7 +516,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_length_of_within_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:wrong_length => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:wrong_length => 'global message'}}}
 
     Topic.validates_length_of :title, :is => 5
     @topic.valid?
@@ -526,8 +526,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_uniqueness_of w/o mocha
 
   def test_validates_length_of_within_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:wrong_length => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:wrong_length => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:wrong_length => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:wrong_length => 'global message'}}}
 
     Topic.validates_length_of :title, :is => 5
     @topic.valid?
@@ -535,7 +535,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_length_of_within_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:wrong_length => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:wrong_length => 'global message'}}}
 
     Topic.validates_length_of :title, :is => 5
     @topic.valid?
@@ -546,8 +546,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_format_of w/o mocha
 
   def test_validates_format_of_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:invalid => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:invalid => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:invalid => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:invalid => 'global message'}}}
 
     Topic.validates_format_of :title, :with => /^[1-9][0-9]*$/
     @topic.valid?
@@ -555,7 +555,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_format_of_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:invalid => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:invalid => 'global message'}}}
 
     Topic.validates_format_of :title, :with => /^[1-9][0-9]*$/
     @topic.valid?
@@ -565,8 +565,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_inclusion_of w/o mocha
 
   def test_validates_inclusion_of_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:inclusion => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:inclusion => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:inclusion => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:inclusion => 'global message'}}}
 
     Topic.validates_inclusion_of :title, :in => %w(a b c)
     @topic.valid?
@@ -574,7 +574,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_inclusion_of_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:inclusion => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:inclusion => 'global message'}}}
 
     Topic.validates_inclusion_of :title, :in => %w(a b c)
     @topic.valid?
@@ -584,8 +584,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_exclusion_of w/o mocha
 
   def test_validates_exclusion_of_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:exclusion => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:exclusion => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:exclusion => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:exclusion => 'global message'}}}
 
     Topic.validates_exclusion_of :title, :in => %w(a b c)
     @topic.title = 'a'
@@ -594,7 +594,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_exclusion_of_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:exclusion => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:exclusion => 'global message'}}}
 
     Topic.validates_exclusion_of :title, :in => %w(a b c)
     @topic.title = 'a'
@@ -605,8 +605,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_numericality_of without :only_integer w/o mocha
 
   def test_validates_numericality_of_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:not_a_number => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:not_a_number => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:not_a_number => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:not_a_number => 'global message'}}}
 
     Topic.validates_numericality_of :title
     @topic.title = 'a'
@@ -615,7 +615,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_numericality_of_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:not_a_number => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:not_a_number => 'global message'}}}
 
     Topic.validates_numericality_of :title, :only_integer => true
     @topic.title = 'a'
@@ -626,8 +626,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_numericality_of with :only_integer w/o mocha
 
   def test_validates_numericality_of_only_integer_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:not_a_number => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:not_a_number => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:not_a_number => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:not_a_number => 'global message'}}}
 
     Topic.validates_numericality_of :title, :only_integer => true
     @topic.title = 'a'
@@ -636,7 +636,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_numericality_of_only_integer_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:not_a_number => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:not_a_number => 'global message'}}}
 
     Topic.validates_numericality_of :title, :only_integer => true
     @topic.title = 'a'
@@ -647,8 +647,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_numericality_of :odd w/o mocha
 
   def test_validates_numericality_of_odd_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:odd => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:odd => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:odd => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:odd => 'global message'}}}
 
     Topic.validates_numericality_of :title, :only_integer => true, :odd => true
     @topic.title = 0
@@ -657,7 +657,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_numericality_of_odd_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:odd => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:odd => 'global message'}}}
 
     Topic.validates_numericality_of :title, :only_integer => true, :odd => true
     @topic.title = 0
@@ -668,8 +668,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_numericality_of :less_than w/o mocha
 
   def test_validates_numericality_of_less_than_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:less_than => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:less_than => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:less_than => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:less_than => 'global message'}}}
 
     Topic.validates_numericality_of :title, :only_integer => true, :less_than => 0
     @topic.title = 1
@@ -678,7 +678,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_numericality_of_less_than_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:less_than => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:less_than => 'global message'}}}
 
     Topic.validates_numericality_of :title, :only_integer => true, :less_than => 0
     @topic.title = 1
@@ -690,8 +690,8 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   # validates_associated w/o mocha
 
   def test_validates_associated_finds_custom_model_key_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:replies => {:invalid => 'custom message'}}}}}}
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:invalid => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:replies => {:invalid => 'custom message'}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:invalid => 'global message'}}}
 
     Topic.validates_associated :replies
     replied_topic.valid?
@@ -699,7 +699,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_associated_finds_global_default_translation
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:invalid => 'global message'}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:invalid => 'global message'}}}
 
     Topic.validates_associated :replies
     replied_topic.valid?
@@ -707,7 +707,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validations_with_message_symbol_must_translate
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:messages => {:custom_error => "I am a custom error"}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:messages => {:custom_error => "I am a custom error"}}}
     Topic.validates_presence_of :title, :message => :custom_error
     @topic.title = nil
     @topic.valid?
@@ -715,7 +715,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_with_message_symbol_must_translate_per_attribute
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:custom_error => "I am a custom error"}}}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:attributes => {:title => {:custom_error => "I am a custom error"}}}}}}
     Topic.validates_presence_of :title, :message => :custom_error
     @topic.title = nil
     @topic.valid?
@@ -723,7 +723,7 @@ class ActiveRecordValidationsI18nTests < ActiveSupport::TestCase
   end
 
   def test_validates_with_message_symbol_must_translate_per_model
-    I18n.backend.store_translations 'en-US', :activerecord => {:errors => {:models => {:topic => {:custom_error => "I am a custom error"}}}}
+    I18n.backend.store_translations 'en', :activerecord => {:errors => {:models => {:topic => {:custom_error => "I am a custom error"}}}}
     Topic.validates_presence_of :title, :message => :custom_error
     @topic.title = nil
     @topic.valid?
@@ -743,7 +743,7 @@ class ActiveRecordValidationsGenerateMessageI18nTests < Test::Unit::TestCase
   def setup
     reset_callbacks Topic
     @topic = Topic.new
-    I18n.backend.store_translations :'en-US', {
+    I18n.backend.store_translations :'en', {
       :activerecord => {
         :errors => {
           :messages => {
diff --git a/activesupport/lib/active_support.rb b/activesupport/lib/active_support.rb
index 202f4ce..d2a7df8 100644
--- a/activesupport/lib/active_support.rb
+++ b/activesupport/lib/active_support.rb
@@ -58,4 +58,4 @@ require 'active_support/secure_random'
 
 require 'active_support/rescuable'
 
-I18n.load_path << File.dirname(__FILE__) + '/active_support/locale/en-US.yml'
+I18n.load_path << File.dirname(__FILE__) + '/active_support/locale/en.yml'
diff --git a/activesupport/lib/active_support/locale/en-US.yml b/activesupport/lib/active_support/locale/en-US.yml
deleted file mode 100644
index c31694b..0000000
--- a/activesupport/lib/active_support/locale/en-US.yml
+++ /dev/null
@@ -1,32 +0,0 @@
-en-US:
-  date:
-    formats:
-      # Use the strftime parameters for formats.
-      # When no format has been given, it uses default.
-      # You can provide other formats here if you like!
-      default: "%Y-%m-%d"
-      short: "%b %d"
-      long: "%B %d, %Y"
-      
-    day_names: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday]
-    abbr_day_names: [Sun, Mon, Tue, Wed, Thu, Fri, Sat]
-      
-    # Don't forget the nil at the beginning; there's no such thing as a 0th month
-    month_names: [~, January, February, March, April, May, June, July, August, September, October, November, December]
-    abbr_month_names: [~, Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec]
-    # Used in date_select and datime_select.
-    order: [ :year, :month, :day ]
-
-  time:
-    formats:
-      default: "%a, %d %b %Y %H:%M:%S %z"
-      short: "%d %b %H:%M"
-      long: "%B %d, %Y %H:%M"
-    am: "am"
-    pm: "pm"
-      
-# Used in array.to_sentence.
-  support:
-    array:
-      sentence_connector: "and"
-      skip_last_comma: false
diff --git a/activesupport/lib/active_support/locale/en.yml b/activesupport/lib/active_support/locale/en.yml
new file mode 100644
index 0000000..92132ca
--- /dev/null
+++ b/activesupport/lib/active_support/locale/en.yml
@@ -0,0 +1,32 @@
+en:
+  date:
+    formats:
+      # Use the strftime parameters for formats.
+      # When no format has been given, it uses default.
+      # You can provide other formats here if you like!
+      default: "%Y-%m-%d"
+      short: "%b %d"
+      long: "%B %d, %Y"
+      
+    day_names: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday]
+    abbr_day_names: [Sun, Mon, Tue, Wed, Thu, Fri, Sat]
+      
+    # Don't forget the nil at the beginning; there's no such thing as a 0th month
+    month_names: [~, January, February, March, April, May, June, July, August, September, October, November, December]
+    abbr_month_names: [~, Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec]
+    # Used in date_select and datime_select.
+    order: [ :year, :month, :day ]
+
+  time:
+    formats:
+      default: "%a, %d %b %Y %H:%M:%S %z"
+      short: "%d %b %H:%M"
+      long: "%B %d, %Y %H:%M"
+    am: "am"
+    pm: "pm"
+      
+# Used in array.to_sentence.
+  support:
+    array:
+      sentence_connector: "and"
+      skip_last_comma: false
diff --git a/activesupport/lib/active_support/vendor/i18n-0.0.1/i18n.rb b/activesupport/lib/active_support/vendor/i18n-0.0.1/i18n.rb
index 40e82d8..2ffe361 100755
--- a/activesupport/lib/active_support/vendor/i18n-0.0.1/i18n.rb
+++ b/activesupport/lib/active_support/vendor/i18n-0.0.1/i18n.rb
@@ -11,7 +11,7 @@ require 'i18n/exceptions'
 module I18n  
   @@backend = nil
   @@load_path = nil
-  @@default_locale = :'en-US'
+  @@default_locale = :'en'
   @@exception_handler = :default_exception_handler
     
   class << self
@@ -25,7 +25,7 @@ module I18n
       @@backend = backend
     end
   
-    # Returns the current default locale. Defaults to 'en-US'
+    # Returns the current default locale. Defaults to 'en'
     def default_locale
       @@default_locale 
     end
@@ -57,7 +57,7 @@ module I18n
     # files which are either named *.rb and contain plain Ruby Hashes or are
     # named *.yml and contain YAML data. So for the SimpleBackend clients may
     # register translation files like this:
-    #   I18n.load_path << 'path/to/locale/en-US.yml'
+    #   I18n.load_path << 'path/to/locale/en.yml'
     def load_path
       @@load_path ||= []
     end
diff --git a/activesupport/test/i18n_test.rb b/activesupport/test/i18n_test.rb
index db5bd5e..da930c8 100644
--- a/activesupport/test/i18n_test.rb
+++ b/activesupport/test/i18n_test.rb
@@ -83,9 +83,9 @@ class I18nTest < Test::Unit::TestCase
 
   def test_to_sentence
     assert_equal 'a, b, and c', %w[a b c].to_sentence
-    I18n.backend.store_translations 'en-US', :support => { :array => { :skip_last_comma => true } }
+    I18n.backend.store_translations 'en', :support => { :array => { :skip_last_comma => true } }
     assert_equal 'a, b and c', %w[a b c].to_sentence
   ensure
-    I18n.backend.store_translations 'en-US', :support => { :array => { :skip_last_comma => false } }
+    I18n.backend.store_translations 'en', :support => { :array => { :skip_last_comma => false } }
   end
 end
-- 
1.5.3.7

