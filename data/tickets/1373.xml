<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-14T06:30:06+00:00</created-at>
  <creator-id type="integer">37489</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1373</number>
  <permalink>activerecordestablish_connection-uses-class-variable-instead-of-accessor-method</permalink>
  <priority type="integer">769</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>ActiveRecord.establish_connection uses class variable instead of accessor method</title>
  <updated-at type="datetime">2009-03-10T17:07:15+00:00</updated-at>
  <user-id type="integer">37489</user-id>
  <version type="integer">4</version>
  <user-name>ronin-37489 (at lighthouseapp)</user-name>
  <creator-name>ronin-37489 (at lighthouseapp)</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1373</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Is there a reason ActiveRecord.establish_connection uses
@@connection_handler.establish_connection instead of
connection_handler.establish_connection?  I'm trying to make a
subclass of ActiveRecord::Base that has it's own ConnectionHandler
instance and I would want to leave ActiveRecord::Base connection
handler exactly the same.  Here is what I'm trying to do:

class AnotherActiveRecord &lt; ActiveRecord::Base
  @@another_connection_handler =
ActiveRecord::ConnectionAdapters::ConnectionHandler.new
  def connection_handler
    @@another_connection_handler
  end
end

Would it be possible for establish_connection to use
connection_handler accessor method so that this overloading can be
done easier?  Or is there a better way to do this?

Thanks!</original-body>
  <latest-body>Is there a reason ActiveRecord.establish_connection uses
@@connection_handler.establish_connection instead of
connection_handler.establish_connection?  I'm trying to make a
subclass of ActiveRecord::Base that has it's own ConnectionHandler
instance and I would want to leave ActiveRecord::Base connection
handler exactly the same.  Here is what I'm trying to do:

class AnotherActiveRecord &lt; ActiveRecord::Base
  @@another_connection_handler =
ActiveRecord::ConnectionAdapters::ConnectionHandler.new
  def connection_handler
    @@another_connection_handler
  end
end

Would it be possible for establish_connection to use
connection_handler accessor method so that this overloading can be
done easier?  Or is there a better way to do this?

Thanks!</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Is there a reason ActiveRecord.establish_connection uses
@@connection_handler.establish_connection instead of
connection_handler.establish_connection? I'm trying to make a
subclass of ActiveRecord::Base that has it's own ConnectionHandler
instance and I would want to leave ActiveRecord::Base connection
handler exactly the same. Here is what I'm trying to do:&lt;/p&gt;
&lt;p&gt;class AnotherActiveRecord &amp;lt; ActiveRecord::Base
@@another_connection_handler =
ActiveRecord::ConnectionAdapters::ConnectionHandler.new def
connection_handler&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;@@another_connection_handler
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;
&lt;p&gt;Would it be possible for establish_connection to use
connection_handler accessor method so that this overloading can be
done easier? Or is there a better way to do this?&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Is there a reason `ActiveRecord.establish_connection` uses
`@@connection_handler.establish_connection` instead of
`connection_handler.establish_connection?`  I'm trying to make a
subclass of `ActiveRecord::Base` that has it's own `ConnectionHandler`
instance and I would want to leave `ActiveRecord::Base`'s connection
handler exactly the same.  Here is what I'm trying to do:

@@@ ruby
class AnotherActiveRecord &lt; ActiveRecord::Base
  @@another_connection_handler = ActiveRecord::ConnectionAdapters::ConnectionHandler.new
  def connection_handler
    @@another_connection_handler
  end
end
@@@

Would it be possible for `establish_connection` to use
`connection_handler` accessor method so that this overloading can be
done easier?  Or is there a better way to do this?

Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is there a reason &lt;code&gt;ActiveRecord.establish_connection&lt;/code&gt;
uses &lt;code&gt;@@connection_handler.establish_connection&lt;/code&gt; instead
of &lt;code&gt;connection_handler.establish_connection?&lt;/code&gt; I'm trying
to make a subclass of &lt;code&gt;ActiveRecord::Base&lt;/code&gt; that has it's
own &lt;code&gt;ConnectionHandler&lt;/code&gt; instance and I would want to
leave &lt;code&gt;ActiveRecord::Base&lt;/code&gt;'s connection handler exactly
the same. Here is what I'm trying to do:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class AnotherActiveRecord &amp;lt; ActiveRecord::Base
  @@another_connection_handler = ActiveRecord::ConnectionAdapters::ConnectionHandler.new
  def connection_handler
    @@another_connection_handler
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Would it be possible for &lt;code&gt;establish_connection&lt;/code&gt; to
use &lt;code&gt;connection_handler&lt;/code&gt; accessor method so that this
overloading can be done easier? Or is there a better way to do
this?&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-14T06:30:06+00:00</created-at>
      <creator-id type="integer">37489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1373</number>
      <permalink>activerecordestablish_connection-uses-class-variable-instead-of-accessor-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>ActiveRecord.establish_connection uses class variable instead of accessor method</title>
      <updated-at type="datetime">2008-11-14T06:32:44+00:00</updated-at>
      <user-id type="integer">37489</user-id>
      <version type="integer">1</version>
      <user-name>ronin-37489 (at lighthouseapp)</user-name>
      <creator-name>ronin-37489 (at lighthouseapp)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1373</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You should just call establish_connection() from the model instead of overriding connection_handler.

@@@ ruby
class Model &lt; ActiveRecord::Base
  establish_connection ...
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;You should just call establish_connection() from the model
instead of overriding connection_handler.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Model &amp;lt; ActiveRecord::Base
  establish_connection ...
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-10T12:29:43+00:00</created-at>
      <creator-id type="integer">37489</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1373</number>
      <permalink>activerecordestablish_connection-uses-class-variable-instead-of-accessor-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>ActiveRecord.establish_connection uses class variable instead of accessor method</title>
      <updated-at type="datetime">2009-03-10T12:29:50+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>ronin-37489 (at lighthouseapp)</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1373</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I would normally do just that.  However, for this case, I need to connect to many databases with the same schema.  Therefore, if the connection handler has a cache of connections based on the model name, then this would work.  Ideally, the connection handler should cache on the hostname + database name + table.  Or, in my case, overriding the connection handler with it's own cache.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I would normally do just that. However, for this case, I need to
connect to many databases with the same schema. Therefore, if the
connection handler has a cache of connections based on the model
name, then this would work. Ideally, the connection handler should
cache on the hostname + database name + table. Or, in my case,
overriding the connection handler with it's own cache.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-10T17:05:56+00:00</created-at>
      <creator-id type="integer">37489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1373</number>
      <permalink>activerecordestablish_connection-uses-class-variable-instead-of-accessor-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>ActiveRecord.establish_connection uses class variable instead of accessor method</title>
      <updated-at type="datetime">2009-03-10T17:06:09+00:00</updated-at>
      <user-id type="integer">37489</user-id>
      <version type="integer">3</version>
      <user-name>ronin-37489 (at lighthouseapp)</user-name>
      <creator-name>ronin-37489 (at lighthouseapp)</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1373</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>correction: *...then this would not work..*</body>
      <body-html>&lt;div&gt;&lt;p&gt;correction: &lt;em&gt;...then this would not work..&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-10T17:06:43+00:00</created-at>
      <creator-id type="integer">37489</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1373</number>
      <permalink>activerecordestablish_connection-uses-class-variable-instead-of-accessor-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>ActiveRecord.establish_connection uses class variable instead of accessor method</title>
      <updated-at type="datetime">2009-03-10T17:07:15+00:00</updated-at>
      <user-id type="integer">37489</user-id>
      <version type="integer">4</version>
      <user-name>ronin-37489 (at lighthouseapp)</user-name>
      <creator-name>ronin-37489 (at lighthouseapp)</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1373</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
