<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-16T21:33:01+01:00</created-at>
  <creator-id type="integer">23491</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4876</number>
  <permalink>no-method</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activemodel validations</tag>
  <title>No method '_validate_callbacks'</title>
  <updated-at type="datetime">2010-07-16T16:43:35+01:00</updated-at>
  <user-id type="integer">40263</user-id>
  <version type="integer">9</version>
  <user-name>Neeraj Singh</user-name>
  <creator-name>Luke van der Hoeven</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4876</url>
  <priority-name>Low</priority-name>
  <original-body>I have the following code

@@@ ruby
class AnswerValidator &lt; ActiveModel::EachValidator
  def validate_each(record, attribute, value)
    record.errors[attribute] &lt;&lt; (options[:message] || &quot;question not answered&quot;) if value.nil? and !record.errors[attribute].include?(options[:message] || &quot;question not answered&quot;)
  end

end

class Answer
  include ActiveModel::Validations

  attr_accessor :id

  def to_param
    (id = self.id) ? id.to_s : nil
  end

   def to_key
     persisted? ? nil : [id]
   end  

  #answer will always be new
  def persisted?
    false
  end

  def set_attributes(values)
    values.each do |k,v|
      self.send &quot;#{k}=&quot;.to_sym, v
    end
  end


  def initialize(questions=nil)
    # create accessor methods
    if questions
      questions.each do |q|        
        name = q[&quot;sqt_name&quot;].gsub(/(-|\s)/, &quot;_&quot;).downcase.to_sym

        class_eval {
          attr_accessor name
          validates name, :answer =&gt; true if q['sqt_required_fl']
        }
      end    
    end
  end  
end
@@@

Everytime initialize gets run (via @answer = Answer.new(@survey.survey_questions))

I get the following error:
NoMethodError (undefined method `_validate_callbacks' for #&lt;Class:Answer&gt;):
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/class/inheritable_attributes.rb:172:in `_validate_callbacks'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:580:in `_update_validate_superclass_callbacks'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:435:in `send'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:435:in `__update_callbacks'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:474:in `set_callback'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations.rb:128:in `validate'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:82:in `validates_with'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:70:in `each'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:70:in `validates_with'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:88:in `validates'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:81:in `each'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:81:in `validates'
  /code/survey-app/app/models/answer.rb:46:in `initialize'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/kernel/singleton_class.rb:11:in `class_eval'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/kernel/singleton_class.rb:11:in `class_eval'
  /code/survey-app/app/models/answer.rb:44:in `initialize'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_collection.rb:408:in `method_missing'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `method_missing'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `each'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `send'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `method_missing'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_collection.rb:408:in `method_missing'
  /code/survey-app/app/models/answer.rb:41:in `initialize'
  /code/survey-app/app/controllers/answers_controller.rb:15:in `new'
  /code/survey-app/app/controllers/answers_controller.rb:15:in `new'
...

This worked fine in 3.0.0.beta. Tried looking through the changelogs but can't really tell if anything changed here.

Using Rails 3.0.0.beta4 + Ruby 1.8.7 (tried 1.9.1/2 as well).</original-body>
  <latest-body>I have the following code

@@@ ruby
class AnswerValidator &lt; ActiveModel::EachValidator
  def validate_each(record, attribute, value)
    record.errors[attribute] &lt;&lt; (options[:message] || &quot;question not answered&quot;) if value.nil? and !record.errors[attribute].include?(options[:message] || &quot;question not answered&quot;)
  end

end

class Answer
  include ActiveModel::Validations

  attr_accessor :id

  def to_param
    (id = self.id) ? id.to_s : nil
  end

   def to_key
     persisted? ? nil : [id]
   end  

  #answer will always be new
  def persisted?
    false
  end

  def set_attributes(values)
    values.each do |k,v|
      self.send &quot;#{k}=&quot;.to_sym, v
    end
  end


  def initialize(questions=nil)
    # create accessor methods
    if questions
      questions.each do |q|        
        name = q[&quot;sqt_name&quot;].gsub(/(-|\s)/, &quot;_&quot;).downcase.to_sym

        class_eval {
          attr_accessor name
          validates name, :answer =&gt; true if q['sqt_required_fl']
        }
      end    
    end
  end  
end
@@@

Everytime initialize gets run (via @answer = Answer.new(@survey.survey_questions))

I get the following error:
NoMethodError (undefined method `_validate_callbacks' for #&lt;Class:Answer&gt;):
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/class/inheritable_attributes.rb:172:in `_validate_callbacks'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:580:in `_update_validate_superclass_callbacks'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:435:in `send'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:435:in `__update_callbacks'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:474:in `set_callback'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations.rb:128:in `validate'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:82:in `validates_with'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:70:in `each'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:70:in `validates_with'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:88:in `validates'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:81:in `each'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:81:in `validates'
  /code/survey-app/app/models/answer.rb:46:in `initialize'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/kernel/singleton_class.rb:11:in `class_eval'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/kernel/singleton_class.rb:11:in `class_eval'
  /code/survey-app/app/models/answer.rb:44:in `initialize'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_collection.rb:408:in `method_missing'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `method_missing'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `each'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `send'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `method_missing'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_collection.rb:408:in `method_missing'
  /code/survey-app/app/models/answer.rb:41:in `initialize'
  /code/survey-app/app/controllers/answers_controller.rb:15:in `new'
  /code/survey-app/app/controllers/answers_controller.rb:15:in `new'
...

This worked fine in 3.0.0.beta. Tried looking through the changelogs but can't really tell if anything changed here.

Using Rails 3.0.0.beta4 + Ruby 1.8.7 (tried 1.9.1/2 as well).</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have the following code&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class AnswerValidator &amp;lt; ActiveModel::EachValidator
  def validate_each(record, attribute, value)
    record.errors[attribute] &amp;lt;&amp;lt; (options[:message] || &quot;question not answered&quot;) if value.nil? and !record.errors[attribute].include?(options[:message] || &quot;question not answered&quot;)
  end

end

class Answer
  include ActiveModel::Validations

  attr_accessor :id

  def to_param
    (id = self.id) ? id.to_s : nil
  end

   def to_key
     persisted? ? nil : [id]
   end  

  #answer will always be new
  def persisted?
    false
  end

  def set_attributes(values)
    values.each do |k,v|
      self.send &quot;#{k}=&quot;.to_sym, v
    end
  end


  def initialize(questions=nil)
    # create accessor methods
    if questions
      questions.each do |q|        
        name = q[&quot;sqt_name&quot;].gsub(/(-|\s)/, &quot;_&quot;).downcase.to_sym

        class_eval {
          attr_accessor name
          validates name, :answer =&amp;gt; true if q['sqt_required_fl']
        }
      end    
    end
  end  
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Everytime initialize gets run (via @answer =
Answer.new(@survey.survey_questions))&lt;/p&gt;
&lt;p&gt;I get the following error:&lt;br&gt;
NoMethodError (undefined method &lt;code&gt;_validate_callbacks' for
#&amp;lt;Class:Answer&amp;gt;):&amp;lt;br/&amp;gt;
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/class/inheritable_attributes.rb:172:in&lt;/code&gt;_validate_callbacks'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:580:in
&lt;code&gt;_update_validate_superclass_callbacks'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:435:in&lt;/code&gt;send'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:435:in
&lt;code&gt;__update_callbacks'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:474:in&lt;/code&gt;set_callback'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations.rb:128:in
&lt;code&gt;validate'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:82:in&lt;/code&gt;validates_with'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:70:in
&lt;code&gt;each'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:70:in&lt;/code&gt;validates_with'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:88:in
&lt;code&gt;validates'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:81:in&lt;/code&gt;each'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:81:in
&lt;code&gt;validates'
/code/survey-app/app/models/answer.rb:46:in&lt;/code&gt;initialize'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/kernel/singleton_class.rb:11:in
&lt;code&gt;class_eval'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/kernel/singleton_class.rb:11:in&lt;/code&gt;class_eval'
/code/survey-app/app/models/answer.rb:44:in &lt;code&gt;initialize'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_collection.rb:408:in&lt;/code&gt;method_missing'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in
&lt;code&gt;method_missing'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in&lt;/code&gt;each'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in
&lt;code&gt;send'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in&lt;/code&gt;method_missing'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_collection.rb:408:in
&lt;code&gt;method_missing'
/code/survey-app/app/models/answer.rb:41:in&lt;/code&gt;initialize'
/code/survey-app/app/controllers/answers_controller.rb:15:in
&lt;code&gt;new'
/code/survey-app/app/controllers/answers_controller.rb:15:in&lt;/code&gt;new'
...&lt;/p&gt;
&lt;p&gt;This worked fine in 3.0.0.beta. Tried looking through the
changelogs but can't really tell if anything changed here.&lt;/p&gt;
&lt;p&gt;Using Rails 3.0.0.beta4 + Ruby 1.8.7 (tried 1.9.1/2 as
well).&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have the following code

@@@ ruby
class AnswerValidator &lt; ActiveModel::EachValidator
  def validate_each(record, attribute, value)
    record.errors[attribute] &lt;&lt; (options[:message] || &quot;question not answered&quot;) if value.nil? and !record.errors[attribute].include?(options[:message] || &quot;question not answered&quot;)
  end

end

class Answer
  include ActiveModel::Validations

  attr_accessor :id

  def to_param
    (id = self.id) ? id.to_s : nil
  end

   def to_key
     persisted? ? nil : [id]
   end  

  #answer will always be new
  def persisted?
    false
  end

  def set_attributes(values)
    values.each do |k,v|
      self.send &quot;#{k}=&quot;.to_sym, v
    end
  end


  def initialize(questions=nil)
    # create accessor methods
    if questions
      questions.each do |q|        
        name = q[&quot;sqt_name&quot;].gsub(/(-|\s)/, &quot;_&quot;).downcase.to_sym

        class_eval {
          attr_accessor name
          validates name, :answer =&gt; true if q['sqt_required_fl']
        }
      end    
    end
  end  
end
@@@

Everytime initialize gets run (via @answer = Answer.new(@survey.survey_questions))

I get the following error:
NoMethodError (undefined method `_validate_callbacks' for #&lt;Class:Answer&gt;):
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/class/inheritable_attributes.rb:172:in `_validate_callbacks'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:580:in `_update_validate_superclass_callbacks'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:435:in `send'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:435:in `__update_callbacks'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:474:in `set_callback'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations.rb:128:in `validate'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:82:in `validates_with'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:70:in `each'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:70:in `validates_with'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:88:in `validates'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:81:in `each'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:81:in `validates'
  /code/survey-app/app/models/answer.rb:46:in `initialize'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/kernel/singleton_class.rb:11:in `class_eval'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/kernel/singleton_class.rb:11:in `class_eval'
  /code/survey-app/app/models/answer.rb:44:in `initialize'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_collection.rb:408:in `method_missing'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `method_missing'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `each'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `send'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in `method_missing'
  /home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_collection.rb:408:in `method_missing'
  /code/survey-app/app/models/answer.rb:41:in `initialize'
  /code/survey-app/app/controllers/answers_controller.rb:15:in `new'
  /code/survey-app/app/controllers/answers_controller.rb:15:in `new'
...

This worked fine in 3.0.0.beta. Tried looking through the changelogs but can't really tell if anything changed here.

Using Rails 3.0.0.beta4 + Ruby 1.8.7 (tried 1.9.1/2 as well).</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have the following code&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class AnswerValidator &amp;lt; ActiveModel::EachValidator
  def validate_each(record, attribute, value)
    record.errors[attribute] &amp;lt;&amp;lt; (options[:message] || &quot;question not answered&quot;) if value.nil? and !record.errors[attribute].include?(options[:message] || &quot;question not answered&quot;)
  end

end

class Answer
  include ActiveModel::Validations

  attr_accessor :id

  def to_param
    (id = self.id) ? id.to_s : nil
  end

   def to_key
     persisted? ? nil : [id]
   end  

  #answer will always be new
  def persisted?
    false
  end

  def set_attributes(values)
    values.each do |k,v|
      self.send &quot;#{k}=&quot;.to_sym, v
    end
  end


  def initialize(questions=nil)
    # create accessor methods
    if questions
      questions.each do |q|        
        name = q[&quot;sqt_name&quot;].gsub(/(-|\s)/, &quot;_&quot;).downcase.to_sym

        class_eval {
          attr_accessor name
          validates name, :answer =&amp;gt; true if q['sqt_required_fl']
        }
      end    
    end
  end  
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Everytime initialize gets run (via @answer =
Answer.new(@survey.survey_questions))&lt;/p&gt;
&lt;p&gt;I get the following error:&lt;br&gt;
NoMethodError (undefined method &lt;code&gt;_validate_callbacks' for
#&amp;lt;Class:Answer&amp;gt;):&amp;lt;br/&amp;gt;
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/class/inheritable_attributes.rb:172:in&lt;/code&gt;_validate_callbacks'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:580:in
&lt;code&gt;_update_validate_superclass_callbacks'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:435:in&lt;/code&gt;send'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:435:in
&lt;code&gt;__update_callbacks'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/callbacks.rb:474:in&lt;/code&gt;set_callback'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations.rb:128:in
&lt;code&gt;validate'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:82:in&lt;/code&gt;validates_with'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:70:in
&lt;code&gt;each'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/with.rb:70:in&lt;/code&gt;validates_with'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:88:in
&lt;code&gt;validates'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:81:in&lt;/code&gt;each'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activemodel-3.0.0.beta4/lib/active_model/validations/validates.rb:81:in
&lt;code&gt;validates'
/code/survey-app/app/models/answer.rb:46:in&lt;/code&gt;initialize'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/kernel/singleton_class.rb:11:in
&lt;code&gt;class_eval'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activesupport-3.0.0.beta4/lib/active_support/core_ext/kernel/singleton_class.rb:11:in&lt;/code&gt;class_eval'
/code/survey-app/app/models/answer.rb:44:in &lt;code&gt;initialize'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_collection.rb:408:in&lt;/code&gt;method_missing'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in
&lt;code&gt;method_missing'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in&lt;/code&gt;each'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in
&lt;code&gt;send'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_proxy.rb:214:in&lt;/code&gt;method_missing'
/home/server/.rvm/gems/ruby-1.8.7-p249/gems/activerecord-3.0.0.beta4/lib/active_record/associations/association_collection.rb:408:in
&lt;code&gt;method_missing'
/code/survey-app/app/models/answer.rb:41:in&lt;/code&gt;initialize'
/code/survey-app/app/controllers/answers_controller.rb:15:in
&lt;code&gt;new'
/code/survey-app/app/controllers/answers_controller.rb:15:in&lt;/code&gt;new'
...&lt;/p&gt;
&lt;p&gt;This worked fine in 3.0.0.beta. Tried looking through the
changelogs but can't really tell if anything changed here.&lt;/p&gt;
&lt;p&gt;Using Rails 3.0.0.beta4 + Ruby 1.8.7 (tried 1.9.1/2 as
well).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-16T21:33:01+01:00</created-at>
      <creator-id type="integer">23491</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4876</number>
      <permalink>no-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel validations</tag>
      <title>No method '</title>
      <updated-at type="datetime">2010-06-16T21:33:03+01:00</updated-at>
      <user-id type="integer">23491</user-id>
      <version type="integer">1</version>
      <user-name>Luke van der Hoeven</user-name>
      <creator-name>Luke van der Hoeven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4876</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-16T22:37:29+01:00</created-at>
      <creator-id type="integer">23491</creator-id>
      <diffable-attributes type="yaml">--- 
:title: No method '
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4876</number>
      <permalink>no-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel validations</tag>
      <title>No method '_validate_callbacks'</title>
      <updated-at type="datetime">2010-06-16T22:37:31+01:00</updated-at>
      <user-id type="integer">23491</user-id>
      <version type="integer">2</version>
      <user-name>Luke van der Hoeven</user-name>
      <creator-name>Luke van der Hoeven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4876</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Also, ran a few other setups, I can get around this using 3.0.0.beta under Ruby 1.9.1. All 1.8.7 configurations (including 3.0.0.beta) appear to break.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also, ran a few other setups, I can get around this using
3.0.0.beta under Ruby 1.9.1. All 1.8.7 configurations (including
3.0.0.beta) appear to break.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-16T22:38:32+01:00</created-at>
      <creator-id type="integer">23491</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4876</number>
      <permalink>no-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel validations</tag>
      <title>No method '_validate_callbacks'</title>
      <updated-at type="datetime">2010-06-16T22:38:34+01:00</updated-at>
      <user-id type="integer">23491</user-id>
      <version type="integer">3</version>
      <user-name>Luke van der Hoeven</user-name>
      <creator-name>Luke van der Hoeven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4876</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>And again, more testing:
Works with Ruby 1.9.2.</body>
      <body-html>&lt;div&gt;&lt;p&gt;And again, more testing:&lt;br&gt;
Works with Ruby 1.9.2.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-16T22:50:22+01:00</created-at>
      <creator-id type="integer">23491</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4876</number>
      <permalink>no-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel validations</tag>
      <title>No method '_validate_callbacks'</title>
      <updated-at type="datetime">2010-06-16T22:50:23+01:00</updated-at>
      <user-id type="integer">23491</user-id>
      <version type="integer">4</version>
      <user-name>Luke van der Hoeven</user-name>
      <creator-name>Luke van der Hoeven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4876</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Could you add a failing test against Rails ActiveModel test suite? Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could you add a failing test against Rails ActiveModel test
suite? Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-22T16:32:31+01:00</created-at>
      <creator-id type="integer">23491</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4876</number>
      <permalink>no-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel validations</tag>
      <title>No method '_validate_callbacks'</title>
      <updated-at type="datetime">2010-06-22T16:32:39+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">5</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Luke van der Hoeven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4876</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Luke Can you try with the latest code. When I try to recreate your problem on my machine I get following error.

@@@ ruby
ArgumentError: Attribute names must be symbols
@@@

which is referring to this block

@@@ ruby
       class_eval {
          attr_accessor name
          validates name, :answer =&gt; true
        }
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Luke Can you try with the latest code. When I try to recreate
your problem on my machine I get following error.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ArgumentError: Attribute names must be symbols&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;which is referring to this block&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;       class_eval {
          attr_accessor name
          validates name, :answer =&amp;gt; true
        }&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-22T21:43:38+01:00</created-at>
      <creator-id type="integer">23491</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4876</number>
      <permalink>no-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel validations</tag>
      <title>No method '_validate_callbacks'</title>
      <updated-at type="datetime">2010-06-22T21:43:49+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">6</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Luke van der Hoeven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4876</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Luke not sure what I did last time.

This time I not able to proceed because you did not show survey_question model.

Also I am not sure what is the intent of having class_eval.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Luke not sure what I did last time.&lt;/p&gt;
&lt;p&gt;This time I not able to proceed because you did not show
survey_question model.&lt;/p&gt;
&lt;p&gt;Also I am not sure what is the intent of having class_eval.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-16T04:05:07+01:00</created-at>
      <creator-id type="integer">23491</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4876</number>
      <permalink>no-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activemodel validations</tag>
      <title>No method '_validate_callbacks'</title>
      <updated-at type="datetime">2010-07-16T04:05:09+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">7</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Luke van der Hoeven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4876</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Turns out it had to do with class reloading underneath the dynamically generated survey code. Had to enable class caching in dev mode. This can be considered resolved, thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Turns out it had to do with class reloading underneath the
dynamically generated survey code. Had to enable class caching in
dev mode. This can be considered resolved, thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-16T16:42:28+01:00</created-at>
      <creator-id type="integer">23491</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4876</number>
      <permalink>no-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activemodel validations</tag>
      <title>No method '_validate_callbacks'</title>
      <updated-at type="datetime">2010-07-16T16:42:30+01:00</updated-at>
      <user-id type="integer">23491</user-id>
      <version type="integer">8</version>
      <user-name>Luke van der Hoeven</user-name>
      <creator-name>Luke van der Hoeven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4876</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-16T16:43:33+01:00</created-at>
      <creator-id type="integer">23491</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4876</number>
      <permalink>no-method</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activemodel validations</tag>
      <title>No method '_validate_callbacks'</title>
      <updated-at type="datetime">2010-07-16T16:43:35+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">9</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Luke van der Hoeven</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4876</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
