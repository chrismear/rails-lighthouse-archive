<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-24T18:26:33+01:00</created-at>
  <creator-id type="integer">10618</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4684</number>
  <permalink>ascii-8bit-and-utf-8-hell</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>duplicate</state>
  <tag>&quot;rails3 encoding ruby1.9 mysql&quot;</tag>
  <title>ASCII-8BIT and  UTF-8 hell</title>
  <updated-at type="datetime">2010-05-24T18:39:55+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">2</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Jaroslaw Zabiello</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4684</url>
  <priority-name>Low</priority-name>
  <original-body>MySQL drive does not recognize nor enforce UTF-8 encoding for Ruby 1.9. There is a problem with MySQL text and varchar fields for Rails3 and Ruby 1.9. They are not correctly encoded. Instead of UTF-8 they come as ASCII-8BIT, binary data, and when it is mixed with other UTF-8 text, Rails will raise an exception. 

field = MyModel.first.field

field.encoding # =&gt; ASCII-8BIT

currently it has to dirty fix:

field = MyModel.first.field.force_encoding('UTF-8').encoding # =&gt; UTF-8

The patch enforce UTF-8 encoding for Active Record and MySQL.</original-body>
  <latest-body>MySQL drive does not recognize nor enforce UTF-8 encoding for Ruby 1.9. There is a problem with MySQL text and varchar fields for Rails3 and Ruby 1.9. They are not correctly encoded. Instead of UTF-8 they come as ASCII-8BIT, binary data, and when it is mixed with other UTF-8 text, Rails will raise an exception. 

field = MyModel.first.field

field.encoding # =&gt; ASCII-8BIT

currently it has to dirty fix:

field = MyModel.first.field.force_encoding('UTF-8').encoding # =&gt; UTF-8

The patch enforce UTF-8 encoding for Active Record and MySQL.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;MySQL drive does not recognize nor enforce UTF-8 encoding for
Ruby 1.9. There is a problem with MySQL text and varchar fields for
Rails3 and Ruby 1.9. They are not correctly encoded. Instead of
UTF-8 they come as ASCII-8BIT, binary data, and when it is mixed
with other UTF-8 text, Rails will raise an exception.&lt;/p&gt;
&lt;p&gt;field = MyModel.first.field&lt;/p&gt;
&lt;p&gt;field.encoding # =&amp;gt; ASCII-8BIT&lt;/p&gt;
&lt;p&gt;currently it has to dirty fix:&lt;/p&gt;
&lt;p&gt;field = MyModel.first.field.force_encoding('UTF-8').encoding #
=&amp;gt; UTF-8&lt;/p&gt;
&lt;p&gt;The patch enforce UTF-8 encoding for Active Record and
MySQL.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>MySQL drive does not recognize nor enforce UTF-8 encoding for Ruby 1.9. There is a problem with MySQL text and varchar fields for Rails3 and Ruby 1.9. They are not correctly encoded. Instead of UTF-8 they come as ASCII-8BIT, binary data, and when it is mixed with other UTF-8 text, Rails will raise an exception. 

field = MyModel.first.field

field.encoding # =&gt; ASCII-8BIT

currently it has to dirty fix:

field = MyModel.first.field.force_encoding('UTF-8').encoding # =&gt; UTF-8

The patch enforce UTF-8 encoding for Active Record and MySQL.</body>
      <body-html>&lt;div&gt;&lt;p&gt;MySQL drive does not recognize nor enforce UTF-8 encoding for
Ruby 1.9. There is a problem with MySQL text and varchar fields for
Rails3 and Ruby 1.9. They are not correctly encoded. Instead of
UTF-8 they come as ASCII-8BIT, binary data, and when it is mixed
with other UTF-8 text, Rails will raise an exception.&lt;/p&gt;
&lt;p&gt;field = MyModel.first.field&lt;/p&gt;
&lt;p&gt;field.encoding # =&amp;gt; ASCII-8BIT&lt;/p&gt;
&lt;p&gt;currently it has to dirty fix:&lt;/p&gt;
&lt;p&gt;field = MyModel.first.field.force_encoding('UTF-8').encoding #
=&amp;gt; UTF-8&lt;/p&gt;
&lt;p&gt;The patch enforce UTF-8 encoding for Active Record and
MySQL.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-24T18:26:33+01:00</created-at>
      <creator-id type="integer">10618</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4684</number>
      <permalink>ascii-8bit-and-utf-8-hell</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;rails3 encoding ruby1.9 mysql&quot;</tag>
      <title>ASCII-8BIT and  UTF-8 hell</title>
      <updated-at type="datetime">2010-05-24T18:26:35+01:00</updated-at>
      <user-id type="integer">10618</user-id>
      <version type="integer">1</version>
      <user-name>Jaroslaw Zabiello</user-name>
      <creator-name>Jaroslaw Zabiello</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4684</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>#4683</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;/projects/8994/tickets/4683&quot; title=
&quot;Ticket #4683&quot;&gt;#4683&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-05-24T18:39:52+01:00</created-at>
      <creator-id type="integer">10618</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4684</number>
      <permalink>ascii-8bit-and-utf-8-hell</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>duplicate</state>
      <tag>&quot;rails3 encoding ruby1.9 mysql&quot;</tag>
      <title>ASCII-8BIT and  UTF-8 hell</title>
      <updated-at type="datetime">2010-05-24T18:39:55+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Jaroslaw Zabiello</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4684</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>efe0cabe341e0f4c560f194f8bfb32e287aa6965</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-24T18:26:33+01:00</created-at>
      <filename>0001-enforced-utf-8-encoding-for-wrong-ascii-8bit-encodin.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">532247</id>
      <size type="integer">2610</size>
      <uploader-id type="integer">10618</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/532247/0001-enforced-utf-8-encoding-for-wrong-ascii-8bit-encodin.patch</url>
    </attachment>
  </attachments>
</ticket>
