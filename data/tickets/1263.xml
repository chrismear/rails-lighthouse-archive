<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-24T10:23:00+01:00</created-at>
  <creator-id type="integer">35527</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1263</number>
  <permalink>functional-tests-sessions-and-the-put-method</permalink>
  <priority type="integer">668</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>bug functional put session test</tag>
  <title>#put method does not respect sessions in functional tests</title>
  <updated-at type="datetime">2008-12-15T21:33:33+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">3</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>ronin-35527 (at lighthouseapp)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1263</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I have got two functional tests for a SettingsController and a PagesController. In the SettingsController I have got a save action which responds to the &quot;PUT&quot; method. That action I'm testing this way:

login_as :quentin
put :save, {}, :settings =&gt; [{:id =&gt; settings(:site_name).id, :value =&gt; &quot;Hello world&quot;}]
assert_redirected_to :controller =&gt; &quot;settings&quot;, :action =&gt; &quot;index&quot;

But this test fails even though it works the same way as all my other tests that includes authentication. This is the failure:

expected a redirect to &lt;{&quot;action&quot;=&gt;&quot;index&quot;, &quot;controller&quot;=&gt;&quot;settings&quot;}&gt;, found one to &lt;{&quot;action&quot;=&gt;&quot;ne
w&quot;, &quot;controller&quot;=&gt;&quot;sessions&quot;}&gt;, a difference of &lt;{&quot;action&quot;=&gt;&quot;new&quot;, &quot;controller&quot;=&gt;&quot;sessions&quot;}&gt;

My PagesController has an update action that also responds to the &quot;PUT&quot; method. It's tested nearly the same way as above, and I'm basicly getting the same failure saying: You're not authenticated/authorized.

The #login_as helper method looks like this:

def login_as(user)
  @request.session[:user_id] = user ? users(user).id : nil
end

I actually think the problem is the #put method that ActionController::Integration::Session provides. It doesn't seem to know that I want to assign session values to the requests. Can anyone confirm this?</original-body>
  <latest-body>I have got two functional tests for a SettingsController and a PagesController. In the SettingsController I have got a save action which responds to the &quot;PUT&quot; method. That action I'm testing this way:

login_as :quentin
put :save, {}, :settings =&gt; [{:id =&gt; settings(:site_name).id, :value =&gt; &quot;Hello world&quot;}]
assert_redirected_to :controller =&gt; &quot;settings&quot;, :action =&gt; &quot;index&quot;

But this test fails even though it works the same way as all my other tests that includes authentication. This is the failure:

expected a redirect to &lt;{&quot;action&quot;=&gt;&quot;index&quot;, &quot;controller&quot;=&gt;&quot;settings&quot;}&gt;, found one to &lt;{&quot;action&quot;=&gt;&quot;ne
w&quot;, &quot;controller&quot;=&gt;&quot;sessions&quot;}&gt;, a difference of &lt;{&quot;action&quot;=&gt;&quot;new&quot;, &quot;controller&quot;=&gt;&quot;sessions&quot;}&gt;

My PagesController has an update action that also responds to the &quot;PUT&quot; method. It's tested nearly the same way as above, and I'm basicly getting the same failure saying: You're not authenticated/authorized.

The #login_as helper method looks like this:

def login_as(user)
  @request.session[:user_id] = user ? users(user).id : nil
end

I actually think the problem is the #put method that ActionController::Integration::Session provides. It doesn't seem to know that I want to assign session values to the requests. Can anyone confirm this?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I have got two functional tests for a SettingsController and a
PagesController. In the SettingsController I have got a save action
which responds to the &quot;PUT&quot; method. That action I'm testing this
way:&lt;/p&gt;
&lt;p&gt;login_as :quentin put :save, {}, :settings =&amp;gt; [{:id =&amp;gt;
settings(:site_name).id, :value =&amp;gt; &quot;Hello world&quot;}]
assert_redirected_to :controller =&amp;gt; &quot;settings&quot;, :action =&amp;gt;
&quot;index&quot;&lt;/p&gt;
&lt;p&gt;But this test fails even though it works the same way as all my
other tests that includes authentication. This is the failure:&lt;/p&gt;
&lt;p&gt;expected a redirect to &amp;lt;{&quot;action&quot;=&amp;gt;&quot;index&quot;,
&quot;controller&quot;=&amp;gt;&quot;settings&quot;}&amp;gt;, found one to
&amp;lt;{&quot;action&quot;=&amp;gt;&quot;ne w&quot;, &quot;controller&quot;=&amp;gt;&quot;sessions&quot;}&amp;gt;, a
difference of &amp;lt;{&quot;action&quot;=&amp;gt;&quot;new&quot;,
&quot;controller&quot;=&amp;gt;&quot;sessions&quot;}&amp;gt;&lt;/p&gt;
&lt;p&gt;My PagesController has an update action that also responds to
the &quot;PUT&quot; method. It's tested nearly the same way as above, and I'm
basicly getting the same failure saying: You're not
authenticated/authorized.&lt;/p&gt;
&lt;p&gt;The #login_as helper method looks like this:&lt;/p&gt;
&lt;p&gt;def login_as(user) @request.session[:user_id] = user ?
users(user).id : nil end&lt;/p&gt;
&lt;p&gt;I actually think the problem is the #put method that
ActionController::Integration::Session provides. It doesn't seem to
know that I want to assign session values to the requests. Can
anyone confirm this?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In my functional tests I'm testing two actions in two different controllers. The first action &quot;save&quot; in the SettingsController is tested like this:
@@@
login_as :quentin
put :save, {}, :settings =&gt; [{:id =&gt; settings(:site_name).id, :value =&gt; &quot;Hello world&quot;}]
assert_redirected_to :controller =&gt; &quot;settings&quot;, :action =&gt; &quot;index&quot;
@@@
The #login_as helper method looks like this:
@@@
def login_as(user)
  @request.session[:user_id] = user ? users(user).id : nil
end
@@@
It assigns a session variable to the request. My other action &quot;update&quot; in the PagesController is also tested like above, using the #put method that makes a new PUT request. But the two tests fails and the failure message is similar to this:
@@@
expected a redirect to &lt;{&quot;action&quot;=&gt;&quot;index&quot;, &quot;controller&quot;=&gt;&quot;settings&quot;}&gt;, found one to &lt;{&quot;action&quot;=&gt;&quot;ne
w&quot;, &quot;controller&quot;=&gt;&quot;sessions&quot;}&gt;, a difference of &lt;{&quot;action&quot;=&gt;&quot;new&quot;, &quot;controller&quot;=&gt;&quot;sessions&quot;}&gt;
@@@
What this actually means is, that there is no &quot;user_id&quot; session variable which must mean that #put doesn't respect sessions. Can anyone confirm this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;In my functional tests I'm testing two actions in two different
controllers. The first action &quot;save&quot; in the SettingsController is
tested like this:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
login_as :quentin
put :save, {}, :settings =&amp;gt; [{:id =&amp;gt; settings(:site_name).id, :value =&amp;gt; &amp;quot;Hello world&amp;quot;}]
assert_redirected_to :controller =&amp;gt; &amp;quot;settings&amp;quot;, :action =&amp;gt; &amp;quot;index&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The #login_as helper method looks like this:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
def login_as(user)
  @request.session[:user_id] = user ? users(user).id : nil
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It assigns a session variable to the request. My other action
&quot;update&quot; in the PagesController is also tested like above, using
the #put method that makes a new PUT request. But the two tests
fails and the failure message is similar to this:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
expected a redirect to &amp;lt;{&amp;quot;action&amp;quot;=&amp;gt;&amp;quot;index&amp;quot;, &amp;quot;controller&amp;quot;=&amp;gt;&amp;quot;settings&amp;quot;}&amp;gt;, found one to &amp;lt;{&amp;quot;action&amp;quot;=&amp;gt;&amp;quot;ne
w&amp;quot;, &amp;quot;controller&amp;quot;=&amp;gt;&amp;quot;sessions&amp;quot;}&amp;gt;, a difference of &amp;lt;{&amp;quot;action&amp;quot;=&amp;gt;&amp;quot;new&amp;quot;, &amp;quot;controller&amp;quot;=&amp;gt;&amp;quot;sessions&amp;quot;}&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What this actually means is, that there is no &quot;user_id&quot; session
variable which must mean that #put doesn't respect sessions. Can
anyone confirm this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-24T10:23:00+01:00</created-at>
      <creator-id type="integer">35527</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1263</number>
      <permalink>functional-tests-sessions-and-the-put-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug functional put session test</tag>
      <title>#put method does not respect sessions in functional tests</title>
      <updated-at type="datetime">2008-10-27T09:12:24+00:00</updated-at>
      <user-id type="integer">35527</user-id>
      <version type="integer">1</version>
      <user-name>ronin-35527 (at lighthouseapp)</user-name>
      <creator-name>ronin-35527 (at lighthouseapp)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1263</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I just fixed this. It's supposed to look like this:

put :save, :settings =&gt; {1 =&gt; {:value =&gt; &quot;Something&quot;}

The empty curly braces caused :settings to be passed as a session variable, overriding the :user_id session variable. Never mind :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just fixed this. It's supposed to look like this:&lt;/p&gt;
&lt;p&gt;put :save, :settings =&amp;gt; {1 =&amp;gt; {:value =&amp;gt;
&quot;Something&quot;}&lt;/p&gt;
&lt;p&gt;The empty curly braces caused :settings to be passed as a
session variable, overriding the :user_id session variable. Never
mind :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-21T09:17:00+00:00</created-at>
      <creator-id type="integer">35527</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1263</number>
      <permalink>functional-tests-sessions-and-the-put-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bug functional put session test</tag>
      <title>#put method does not respect sessions in functional tests</title>
      <updated-at type="datetime">2008-11-21T09:17:01+00:00</updated-at>
      <user-id type="integer">35527</user-id>
      <version type="integer">2</version>
      <user-name>ronin-35527 (at lighthouseapp)</user-name>
      <creator-name>ronin-35527 (at lighthouseapp)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1263</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-15T21:33:31+00:00</created-at>
      <creator-id type="integer">35527</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1263</number>
      <permalink>functional-tests-sessions-and-the-put-method</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>bug functional put session test</tag>
      <title>#put method does not respect sessions in functional tests</title>
      <updated-at type="datetime">2008-12-15T21:33:33+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>ronin-35527 (at lighthouseapp)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1263</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
