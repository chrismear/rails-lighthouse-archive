<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">8406</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:17+00:00</created-at>
  <creator-id type="integer">32760</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2149</number>
  <permalink>inconsistent-has_many-validation</permalink>
  <priority type="integer">1362</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>Inconsistent has_many validation.</title>
  <updated-at type="datetime">2011-03-26T02:32:49+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">21</version>
  <user-name>bingbing</user-name>
  <creator-name>Keith Pitt</creator-name>
  <assigned-user-name>Eloy Duran</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>@@@ruby
class ModelA &lt; ActiveRecord::Base
  has_many :model_bs
end
@@@

@@@ruby
class ModelB &lt; ActiveRecord::Base
  validates_presence_of :name
end
@@@

I have 2 ActiveRecord model that look like the ones above. If I add an 'invalid' record to an existing record like this - the 'a' record becomes invalid.

@@@ruby
  a = ModelA.create
  a.model_bs &lt;&lt; ModelB.new :name =&gt; nil
  a.valid? # =&gt; false
@@@

However, if I do something like this:

@@@ruby
  a = ModelA.create
  a.model_bs &lt;&lt; ModelB.create
  a.valid? # =&gt; true
  a.model_bs.first.name = nil
  a.valid? # =&gt; true
@@@

the parent record is still valid even though I make an existing child record invalid. I have solved the problem by adding a:

@@@ruby
  validates_associated :model_bs
@@@

but it seems a little odd to me to have an inconsistent default behaviour. Is this a bug or a feature?</original-body>
  <latest-body>@@@ruby
class ModelA &lt; ActiveRecord::Base
  has_many :model_bs
end
@@@

@@@ruby
class ModelB &lt; ActiveRecord::Base
  validates_presence_of :name
end
@@@

I have 2 ActiveRecord model that look like the ones above. If I add an 'invalid' record to an existing record like this - the 'a' record becomes invalid.

@@@ruby
  a = ModelA.create
  a.model_bs &lt;&lt; ModelB.new :name =&gt; nil
  a.valid? # =&gt; false
@@@

However, if I do something like this:

@@@ruby
  a = ModelA.create
  a.model_bs &lt;&lt; ModelB.create
  a.valid? # =&gt; true
  a.model_bs.first.name = nil
  a.valid? # =&gt; true
@@@

the parent record is still valid even though I make an existing child record invalid. I have solved the problem by adding a:

@@@ruby
  validates_associated :model_bs
@@@

but it seems a little odd to me to have an inconsistent default behaviour. Is this a bug or a feature?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;@@@ruby class ModelA &amp;lt; ActiveRecord::Base has_many :model_bs
end&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;

@@@ruby
class ModelB &amp;lt; ActiveRecord::Base
  validates_presence_of :name
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have 2 ActiveRecord model that look like the ones above. If I
add an 'invalid' record to an existing record like this - the 'a'
record becomes invalid.&lt;/p&gt;
&lt;p&gt;@@@ruby a = ModelA.create a.model_bs &amp;lt;&amp;lt; ModelB.new :name
=&amp;gt; nil a.valid? # =&amp;gt; false&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;

However, if I do something like this:

@@@ruby
  a = ModelA.create
  a.model_bs &amp;lt;&amp;lt; ModelB.create
  a.valid? # =&amp;gt; true
  a.model_bs.first.name = nil
  a.valid? # =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the parent record is still valid even though I make an existing
child record invalid. I have solved the problem by adding a:&lt;/p&gt;
&lt;p&gt;@@@ruby validates_associated :model_bs&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;

but it seems a little odd to me to have an inconsistent default behaviour. Is this a bug or a feature?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@ ruby
class ModelA &lt; ActiveRecord::Base
  has_many :model_bs
end
class ModelB &lt; ActiveRecord::Base
  belongs_to :model_a
  validates_presence_of :name
end
@@@

I have 2 ActiveRecord model that look like the ones above. If I add an 'invalid' record to an existing record like this - the 'a' record becomes invalid.

@@@ ruby
  a = ModelA.create
  a.model_bs &lt;&lt; ModelB.new :name =&gt; nil
  a.valid? # =&gt; false
@@@

However, if I do something like this:

@@@ ruby
  a = ModelA.create
  a.model_bs &lt;&lt; ModelB.create
  a.valid? # =&gt; true
  a.model_bs.first.name = nil
  a.valid? # =&gt; true
@@@

the parent record is still valid even though I make an existing child record invalid. I have solved the problem by adding a:

@@@ ruby
  validates_associated :model_bs
@@@

but it seems a little odd to me to have an inconsistent default behaviour. Is this a bug or a feature?</body>
      <body-html>&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class ModelA &amp;lt; ActiveRecord::Base
  has_many :model_bs
end
class ModelB &amp;lt; ActiveRecord::Base
  belongs_to :model_a
  validates_presence_of :name
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have 2 ActiveRecord model that look like the ones above. If I
add an 'invalid' record to an existing record like this - the 'a'
record becomes invalid.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  a = ModelA.create
  a.model_bs &amp;lt;&amp;lt; ModelB.new :name =&amp;gt; nil
  a.valid? # =&amp;gt; false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, if I do something like this:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  a = ModelA.create
  a.model_bs &amp;lt;&amp;lt; ModelB.create
  a.valid? # =&amp;gt; true
  a.model_bs.first.name = nil
  a.valid? # =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the parent record is still valid even though I make an existing
child record invalid. I have solved the problem by adding a:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  validates_associated :model_bs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but it seems a little odd to me to have an inconsistent default
behaviour. Is this a bug or a feature?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T04:41:28+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-rc1 activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-06T04:46:24+00:00</updated-at>
      <user-id type="integer">32760</user-id>
      <version type="integer">1</version>
      <user-name>Keith Pitt</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Just to clarify a bit. Judging by the tag you are sure this was introduced in the _first_ 2.3 release candidate?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just to clarify a bit. Judging by the tag you are sure this was
introduced in the &lt;em&gt;first&lt;/em&gt; 2.3 release candidate?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T10:13:08+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-rc1 activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-06T10:13:10+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">2</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I added that tag because thats the version I'm using (I thought that might be useful). But I haven't checked to see if its in the current stable version of rails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I added that tag because thats the version I'm using (I thought
that might be useful). But I haven't checked to see if its in the
current stable version of rails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-06T23:18:20+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-rc1 activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-06T23:18:25+00:00</updated-at>
      <user-id type="integer">32760</user-id>
      <version type="integer">3</version>
      <user-name>Keith Pitt</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It would be very helpful if you could identify where (if) this was introduced.

Thanks</body>
      <body-html>&lt;div&gt;&lt;p&gt;It would be very helpful if you could identify where (if) this
was introduced.&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-07T11:52:54+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.3-rc1 activerecord
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-07T11:52:58+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">4</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Whats the best (fastest) way for me to do that?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Whats the best (fastest) way for me to do that?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-07T12:38:21+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-07T12:38:24+00:00</updated-at>
      <user-id type="integer">32760</user-id>
      <version type="integer">5</version>
      <user-name>Keith Pitt</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&gt; However, if I do something like this:
&gt;
&gt; @@@ ruby
&gt; a = ModelA.create
&gt; a.model_bs &lt;&lt; ModelB.create
&gt; a.valid? # =&gt; true
&gt; a.model_bs.first.name = nil
&gt; a.valid? # =&gt; true
&gt; @@@
&gt;
&gt; the parent record is still valid even though I make an existing child record invalid.

Hmm, actually this might be because the target on the existing parent isn't loaded when using #push (See http://is.gd/mgf4).

If the target isn't loaded yet and you then use #first, it will _not_ load the target. So that specific object you get returned is not going to be found by autosave association when iterating over any loaded records.

You should be able to verify this by:

* Not creating a parent object, so it's still new when #&lt;&lt; is called and the target will be loaded.
* First load the target before using #first, because then #first will simply return from the loaded target. You can use this as a trick to make sure it's loaded: a.model_bs.class

If it is this problem, then there's unfortunately no easier solution. However, I do found that using #first is something which is often only done in tests or script/console. Is that the case?

I actually created a patch for this once, but it won't get applied in that state which I agree with. See #1751</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;However, if I do something like this:&lt;/p&gt;
&lt;p&gt;@@@ ruby a = ModelA.create a.model_bs &amp;lt;&amp;lt; ModelB.create
a.valid? # =&amp;gt; true a.model_bs.first.name = nil a.valid? # =&amp;gt;
true @@@&lt;/p&gt;
&lt;p&gt;the parent record is still valid even though I make an existing
child record invalid.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hmm, actually this might be because the target on the existing
parent isn't loaded when using #push (See &lt;a href=&quot;http://is.gd/mgf4).%3C/p&quot;&gt;http://is.gd/mgf4).&lt;/a&gt;&lt;/p&gt;
&amp;gt;
&lt;p&gt;If the target isn't loaded yet and you then use #first, it will
&lt;em&gt;not&lt;/em&gt; load the target. So that specific object you get
returned is not going to be found by autosave association when
iterating over any loaded records.&lt;/p&gt;
&lt;p&gt;You should be able to verify this by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Not creating a parent object, so it's still new when #&amp;lt;&amp;lt;
is called and the target will be loaded.&lt;/li&gt;
&lt;li&gt;First load the target before using #first, because then #first
will simply return from the loaded target. You can use this as a
trick to make sure it's loaded: a.model_bs.class&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If it is this problem, then there's unfortunately no easier
solution. However, I do found that using #first is something which
is often only done in tests or script/console. Is that the
case?&lt;/p&gt;
&lt;p&gt;I actually created a patch for this once, but it won't get
applied in that state which I agree with. See &lt;a href=&quot;/projects/8994/tickets/1751&quot; title=&quot;Ticket #1751&quot;&gt;#1751&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-07T12:49:09+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-07T12:53:43+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">6</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Jeez, formatting is a pita. I edited it a few times, hope you can understand it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jeez, formatting is a pita. I edited it a few times, hope you
can understand it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-07T12:54:12+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-07T12:54:16+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">7</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&gt; Whats the best (fastest) way for me to do that?

The fastest way to find where a bug was introduced, if it was, would be to use git-bisect. You create a file with a failing test and then do the whole git-bisect workflow and run the test each time to see where it/if it was introduced.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;Whats the best (fastest) way for me to do that?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The fastest way to find where a bug was introduced, if it was,
would be to use git-bisect. You create a file with a failing test
and then do the whole git-bisect workflow and run the test each
time to see where it/if it was introduced.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-07T12:58:22+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-07T12:58:24+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">8</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Oh and I forgot to add that it is weird that validates_associated would fix this&#8230;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Oh and I forgot to add that it is weird that
validates_associated would fix this&amp;#8230;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-07T13:05:20+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-07T13:05:23+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">9</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is very strange, because by default has_many validation was supposed to have :validate =&gt; true.

Can you please try:

  has_many :model_bs, :validate =&gt; true

And without the validates_associated?

If you can still see a failure scenario, this is a serious bug, since validates_associated is behaving in a different way then :validate =&gt; true.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is very strange, because by default has_many validation was
supposed to have :validate =&amp;gt; true.&lt;/p&gt;
&lt;p&gt;Can you please try:&lt;/p&gt;
&lt;p&gt;has_many :model_bs, :validate =&amp;gt; true&lt;/p&gt;
&lt;p&gt;And without the validates_associated?&lt;/p&gt;
&lt;p&gt;If you can still see a failure scenario, this is a serious bug,
since validates_associated is behaving in a different way then
:validate =&amp;gt; true.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-08T16:57:50+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-08T16:57:53+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">10</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&gt; has_many :model_bs, :validate =&gt; true

Tried that - but it still fails.

I tried this, as per your thoughts Eloy ( hopefully I understood them correctly, your saying the problem is the parent not being loaded by just doing a #first? )

@@@
  a = ModelA.create
  a.model_bs &lt;&lt; ModelB.create
  a.valid? # =&gt; true
  
  x = a.model_bs.first
  y = x.model_a
  x.name = nil
  y.valid? # =&gt; true
@@@

But alas, still doesn't work as expected.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;has_many :model_bs, :validate =&amp;gt; true&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tried that - but it still fails.&lt;/p&gt;
&lt;p&gt;I tried this, as per your thoughts Eloy ( hopefully I understood
them correctly, your saying the problem is the parent not being
loaded by just doing a #first? )&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
  a = ModelA.create
  a.model_bs &amp;lt;&amp;lt; ModelB.create
  a.valid? # =&amp;gt; true
  
  x = a.model_bs.first
  y = x.model_a
  x.name = nil
  y.valid? # =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But alas, still doesn't work as expected.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-10T01:16:51+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-10T01:16:55+00:00</updated-at>
      <user-id type="integer">32760</user-id>
      <version type="integer">11</version>
      <user-name>Keith Pitt</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here is my test script. I tested it with rails 2.2 (stable) and my tests fail. I went back to 2.1 but got more errors (not to do with me tests) - do I need to go back any further?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is my test script. I tested it with rails 2.2 (stable) and
my tests fail. I went back to 2.1 but got more errors (not to do
with me tests) - do I need to go back any further?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-10T03:42:38+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-10T03:42:43+00:00</updated-at>
      <user-id type="integer">32760</user-id>
      <version type="integer">12</version>
      <user-name>Keith Pitt</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&gt; I tested it with rails 2.2 (stable) and my tests fail. I went back to 2.1 but got more errors (not to do with me tests) - do I need to go back any further?

That won't be necessary. Today I had some time to play with this (thanks for your test example) and it's pretty clear why this doesn't work. In the case of a collection association (such as a has_many) on a _not_ new parent, only new associated records will be validated.
(Also the default for a collection association is :validate =&gt; true, so setting that won't matter either.)

So to answer your very first question: It's not a bug, it's a feature.

The examples in which you expect that clearing the name of an existing Post will make the parent invalid won't work, as it simply skips that associated record. And trying to add new records with #&lt;&lt; won't work either, as they're automatically saved. (Use #build for that.)

If you do want to always validate _all_ associated records, you could enable :autosave. That way any loaded record will always get validated. However, they will also get saved together with the parent, but that might not be a problem in your situation. Keep in mind though that the problem about using #first still applies.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;I tested it with rails 2.2 (stable) and my tests fail. I went
back to 2.1 but got more errors (not to do with me tests) - do I
need to go back any further?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That won't be necessary. Today I had some time to play with this
(thanks for your test example) and it's pretty clear why this
doesn't work. In the case of a collection association (such as a
has_many) on a &lt;em&gt;not&lt;/em&gt; new parent, only new associated records
will be validated. (Also the default for a collection association
is :validate =&amp;gt; true, so setting that won't matter either.)&lt;/p&gt;
&lt;p&gt;So to answer your very first question: It's not a bug, it's a
feature.&lt;/p&gt;
&lt;p&gt;The examples in which you expect that clearing the name of an
existing Post will make the parent invalid won't work, as it simply
skips that associated record. And trying to add new records with
#&amp;lt;&amp;lt; won't work either, as they're automatically saved. (Use
#build for that.)&lt;/p&gt;
&lt;p&gt;If you do want to always validate &lt;em&gt;all&lt;/em&gt; associated
records, you could enable :autosave. That way any loaded record
will always get validated. However, they will also get saved
together with the parent, but that might not be a problem in your
situation. Keep in mind though that the problem about using #first
still applies.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-10T08:54:00+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-10T08:54:02+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">13</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&gt; I tried this, as per your thoughts Eloy ( hopefully I understood them correctly, your saying the problem is the parent not being loaded by just doing a #first? )

You didn't completely got my earlier comment, which is understandable as it can be strange/unexpected. What I mean is that you can't use #first or #last in this way _unless_ the &#8216;target&#8217; was loaded first by calling, for instance, #each on the collection. See #1752 for more info. But it won't matter in your case.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;I tried this, as per your thoughts Eloy ( hopefully I understood
them correctly, your saying the problem is the parent not being
loaded by just doing a #first? )&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You didn't completely got my earlier comment, which is
understandable as it can be strange/unexpected. What I mean is that
you can't use #first or #last in this way &lt;em&gt;unless&lt;/em&gt; the
&amp;#8216;target&amp;#8217; was loaded first by calling, for instance,
#each on the collection. See &lt;a href=&quot;/projects/8994/tickets/1752&quot; title=&quot;Ticket #1752&quot;&gt;#1752&lt;/a&gt; for more info. But it won't matter
in your case.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-10T08:54:40+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>activerecord</tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2009-03-10T08:54:45+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">14</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T21:47:19+01:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">1362</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2010-10-09T21:47:24+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">16</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra footwear&lt;/a&gt;&lt;/strong&gt; is called a modern vintage and has been since their   introduction in 2003 where they began in Europe. Every &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; has some type of   ornament, adornment or hardware and is comprised of aged leather that is bought   from around the world. These &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra uk&lt;/a&gt;&lt;/strong&gt; are culturally engaging and allow for the woman   wearing them to be enveloped in luxury.With new cuts and styles and hand stitched shoes, these &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;, heels or flats will make every foot look like it stepped out of vintage Hollywood. This   &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland shoes&lt;/a&gt;&lt;/strong&gt; have been worn and coveted by many of the most famous females in   recent history. One such &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach outlet&lt;/a&gt;&lt;/strong&gt;, Jennifer Aniston, wears them in public and at   home.This company makes many different unique styles of &lt;strong&gt;&lt;strong&gt;&lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;bags outlet&lt;/strong&gt;&lt;/a&gt; from ankle booties   to sandals, pumps, &lt;strong&gt;&lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets online&lt;/strong&gt;&lt;/a&gt;, platforms and wedges. One &lt;strong&gt;&lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bag&lt;/strong&gt;&lt;/a&gt; in particular is ideal   for the gothic style sense; it is patent leather and laces up the front of the   shaft. There are also zippers on each side, and this shoe offers a flat heel of   a half inch.Another great &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets sale&lt;/strong&gt;&lt;/a&gt; is featured in People's Style Watch and is called a   platform bootie. This &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;&lt;strong&gt;ture religion jeans&lt;/strong&gt;&lt;/a&gt; has a raised panel in front of the ankle as well as   a heel that measures 4.5 inches. The front offers a leather bandage appearance   and is considered high fashion.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This &lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra
footwear&lt;/a&gt;&lt;/strong&gt; is called a modern vintage and has been since
their introduction in 2003 where they began in Europe. Every
&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt;
has some type of ornament, adornment or hardware and is comprised
of aged leather that is bought from around the world. These
&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra uk&lt;/a&gt;&lt;/strong&gt; are
culturally engaging and allow for the woman wearing them to be
enveloped in luxury.With new cuts and styles and hand stitched
shoes, these &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;,
heels or flats will make every foot look like it stepped out of
vintage Hollywood. This &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland shoes&lt;/a&gt;&lt;/strong&gt;
have been worn and coveted by many of the most famous females in
recent history. One such &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach outlet&lt;/a&gt;&lt;/strong&gt;, Jennifer
Aniston, wears them in public and at home.This company makes many
different unique styles of &lt;strong&gt;&lt;strong&gt;&lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;bags
outlet&lt;/strong&gt;&lt;/a&gt; from ankle booties to sandals, pumps,
&lt;strong&gt;&lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets
online&lt;/strong&gt;&lt;/a&gt;, platforms and wedges. One &lt;strong&gt;&lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton
bag&lt;/strong&gt;&lt;/a&gt; in particular is ideal for the gothic style sense;
it is patent leather and laces up the front of the shaft. There are
also zippers on each side, and this shoe offers a flat heel of a
half inch.Another great &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets
sale&lt;/strong&gt;&lt;/a&gt; is featured in People's Style Watch and is called
a platform bootie. This &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;&lt;strong&gt;ture religion
jeans&lt;/strong&gt;&lt;/a&gt; has a raised panel in front of the ankle as well
as a heel that measures 4.5 inches. The front offers a leather
bandage appearance and is considered high
fashion.&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-06T08:03:44+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">1362</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2010-11-08T23:11:57+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">17</version>
      <user-name>jim123456</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-28T03:10:21+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">1362</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2010-12-28T03:36:18+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">18</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-14T03:13:32+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">1362</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2011-02-14T05:42:00+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">19</version>
      <user-name>xixi</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T01:16:34+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">1362</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2011-02-19T09:28:17+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">20</version>
      <user-name>mklo</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:09:25+00:00</created-at>
      <creator-id type="integer">32760</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2149</number>
      <permalink>inconsistent-has_many-validation</permalink>
      <priority type="integer">1362</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Inconsistent has_many validation.</title>
      <updated-at type="datetime">2011-03-26T02:32:49+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">21</version>
      <user-name>bingbing</user-name>
      <creator-name>Keith Pitt</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2149</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>72c384510bd0c77e2c304a99ff7a62131567abd0</code>
      <content-type>text/x-ruby-script</content-type>
      <created-at type="datetime">2009-03-10T03:42:38+00:00</created-at>
      <filename>2149-inconsistent-has_many-validation.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">97861</id>
      <size type="integer">1852</size>
      <uploader-id type="integer">32760</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/97861/2149-inconsistent-has_many-validation.rb</url>
    </attachment>
  </attachments>
</ticket>
