<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-02-19T09:28:19+00:00</created-at>
  <creator-id type="integer">370</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2594</number>
  <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
  <priority type="integer">1732</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag nil="true"></tag>
  <title>Bug with polymorphic has_one :as pointing to STI record</title>
  <updated-at type="datetime">2011-03-26T02:41:42+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">29</version>
  <user-name>bingbing</user-name>
  <creator-name>Ruy Asan</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>For example, given:

@@@ ruby
class Sponsor &lt; ActiveRecord::Base
  belongs_to :sponsorable, :polymorphic =&gt; true
end

class Organization &lt; ActiveRecord::Base
end

class SponsorableOrganization &lt; Organization
  has_one  :sponsor, :as =&gt; :sponsorable
end
@@@

`Sponsor#sponsorable` will work as expected, however, `SponsorableOrganization#sponsor` will always query for `sponrable_type = 'Organization'`, which will fail.

This is because, for some reason, `ActiveRecord::Associations::HasOneAssociation#construct_sql` will explicitly try to insert `@owner.class.base_class` into the query (rather then just `@owner.class`).

I used annotate to try and figure out just why, but I have been unable to - as far as I can tell, this behavior has simply been cargo-culted forward from its original implementation *4 years* ago ;)


Patch with tests included.</original-body>
  <latest-body>For example, given:

@@@ ruby
class Sponsor &lt; ActiveRecord::Base
  belongs_to :sponsorable, :polymorphic =&gt; true
end

class Organization &lt; ActiveRecord::Base
end

class SponsorableOrganization &lt; Organization
  has_one  :sponsor, :as =&gt; :sponsorable
end
@@@

`Sponsor#sponsorable` will work as expected, however, `SponsorableOrganization#sponsor` will always query for `sponrable_type = 'Organization'`, which will fail.

This is because, for some reason, `ActiveRecord::Associations::HasOneAssociation#construct_sql` will explicitly try to insert `@owner.class.base_class` into the query (rather then just `@owner.class`).

I used annotate to try and figure out just why, but I have been unable to - as far as I can tell, this behavior has simply been cargo-culted forward from its original implementation *4 years* ago ;)


Patch with tests included.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;For example, given:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Sponsor &amp;lt; ActiveRecord::Base
  belongs_to :sponsorable, :polymorphic =&amp;gt; true
end

class Organization &amp;lt; ActiveRecord::Base
end

class SponsorableOrganization &amp;lt; Organization
  has_one  :sponsor, :as =&amp;gt; :sponsorable
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Sponsor#sponsorable&lt;/code&gt; will work as expected, however,
&lt;code&gt;SponsorableOrganization#sponsor&lt;/code&gt; will always query for
&lt;code&gt;sponrable_type = 'Organization'&lt;/code&gt;, which will fail.&lt;/p&gt;
&lt;p&gt;This is because, for some reason,
&lt;code&gt;ActiveRecord::Associations::HasOneAssociation#construct_sql&lt;/code&gt;
will explicitly try to insert &lt;code&gt;@owner.class.base_class&lt;/code&gt;
into the query (rather then just &lt;code&gt;@owner.class&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;I used annotate to try and figure out just why, but I have been
unable to - as far as I can tell, this behavior has simply been
cargo-culted forward from its original implementation &lt;em&gt;4
years&lt;/em&gt; ago ;)&lt;/p&gt;
&lt;p&gt;Patch with tests included.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>For example, given:

@@@ ruby
class Sponsor &lt; ActiveRecord::Base
  belongs_to :sponsorable, :polymorphic =&gt; true
end

class Organization &lt; ActiveRecord::Base
end

class SponsorableOrganization &lt; Organization
  has_one  :sponsor, :as =&gt; :sponsorable
end
@@@

`Sponsor#sponsorable` will work as expected, however, `SponsorableOrganization#sponsor` will always query for `sponrable_type = 'Organization'`, which will fail.

This is because, for some reason, `ActiveRecord::Associations::HasOneAssociation#construct_sql` will explicitly try to insert `@owner.class.base_class` into the query (rather then just `@owner.class`).

I used annotate to try and figure out just why, but I have been unable to - as far as I can tell, this behavior has simply been cargo-culted forward from its original implementation *4 years* ago ;)


Patch with tests included.</body>
      <body-html>&lt;div&gt;&lt;p&gt;For example, given:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class Sponsor &amp;lt; ActiveRecord::Base
  belongs_to :sponsorable, :polymorphic =&amp;gt; true
end

class Organization &amp;lt; ActiveRecord::Base
end

class SponsorableOrganization &amp;lt; Organization
  has_one  :sponsor, :as =&amp;gt; :sponsorable
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Sponsor#sponsorable&lt;/code&gt; will work as expected, however,
&lt;code&gt;SponsorableOrganization#sponsor&lt;/code&gt; will always query for
&lt;code&gt;sponrable_type = 'Organization'&lt;/code&gt;, which will fail.&lt;/p&gt;
&lt;p&gt;This is because, for some reason,
&lt;code&gt;ActiveRecord::Associations::HasOneAssociation#construct_sql&lt;/code&gt;
will explicitly try to insert &lt;code&gt;@owner.class.base_class&lt;/code&gt;
into the query (rather then just &lt;code&gt;@owner.class&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;I used annotate to try and figure out just why, but I have been
unable to - as far as I can tell, this behavior has simply been
cargo-culted forward from its original implementation &lt;em&gt;4
years&lt;/em&gt; ago ;)&lt;/p&gt;
&lt;p&gt;Patch with tests included.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-01T21:32:24+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord has_one polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-01T21:32:28+01:00</updated-at>
      <user-id type="integer">370</user-id>
      <version type="integer">1</version>
      <user-name>Ruy Asan</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-01T21:35:24+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2-3-stable activerecord has_one polymorphic sti
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-01T21:35:26+01:00</updated-at>
      <user-id type="integer">370</user-id>
      <version type="integer">2</version>
      <user-name>Ruy Asan</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-01T21:58:28+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-01T21:58:32+01:00</updated-at>
      <user-id type="integer">25348</user-id>
      <version type="integer">3</version>
      <user-name>patcito</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [99c103be1165da9c8299bc0977188ecf167e06a5]) Fixed bug with polymorphic has_one :as pointing to an STI record

[#2594 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/99c103be1165da9c8299bc0977188ecf167e06a5</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [99c103be1165da9c8299bc0977188ecf167e06a5]) Fixed bug with
polymorphic has_one :as pointing to an STI record&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/2594&quot; title=&quot;Ticket #2594&quot;&gt;#2594&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/99c103be1165da9c8299bc0977188ecf167e06a5&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-01T22:50:31+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-01T22:50:32+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [93c557828e1873004911acfd25d3b3903210bc40]) Fixed bug with polymorphic has_one :as pointing to an STI record

[#2594 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/93c557828e1873004911acfd25d3b3903210bc40</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [93c557828e1873004911acfd25d3b3903210bc40]) Fixed bug with
polymorphic has_one :as pointing to an STI record&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/2594&quot; title=&quot;Ticket #2594&quot;&gt;#2594&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/93c557828e1873004911acfd25d3b3903210bc40&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-01T22:50:32+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-01T22:50:33+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Unfortunately it looks like this commit broke the &quot;create_association&quot; methods as the record gets interested into the table using the base class name but it is now querying using the child-class name.

Happy to try and put together a patch to rectify this, but seeing as how it started failing a ton of our scenarios in our app it makes me question whether this is appropriate for a point-release.  Seems like all records which were inserted using the base-class style would need to be updated, which could break a ton of apps.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Unfortunately it looks like this commit broke the
&quot;create_association&quot; methods as the record gets interested into the
table using the base class name but it is now querying using the
child-class name.&lt;/p&gt;
&lt;p&gt;Happy to try and put together a patch to rectify this, but
seeing as how it started failing a ton of our scenarios in our app
it makes me question whether this is appropriate for a
point-release. Seems like all records which were inserted using the
base-class style would need to be updated, which could break a ton
of apps.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-11T19:50:53+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-11T19:50:59+01:00</updated-at>
      <user-id type="integer">10486</user-id>
      <version type="integer">6</version>
      <user-name>Josh Knowles</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I didn't see that this breaks existing behavior. No tests fail, unfortunately. Reverting.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I didn't see that this breaks existing behavior. No tests fail,
unfortunately. Reverting.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-11T20:00:02+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-11T20:00:05+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">7</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [35e17850819d99d78a3bd02865652c7882201bf0]) Revert &quot;Fixed bug with polymorphic has_one :as pointing to an STI record&quot;

[#2594 state:open]

This reverts commit 93c557828e1873004911acfd25d3b3903210bc40.
http://github.com/rails/rails/commit/35e17850819d99d78a3bd02865652c7882201bf0</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [35e17850819d99d78a3bd02865652c7882201bf0]) Revert &quot;Fixed
bug with polymorphic has_one :as pointing to an STI record&quot;&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/2594&quot; title=&quot;Ticket #2594&quot;&gt;#2594&lt;/a&gt; state:open]&lt;/p&gt;
&lt;p&gt;This reverts commit 93c557828e1873004911acfd25d3b3903210bc40.
&lt;a href=&quot;http://github.com/rails/rails/commit/35e17850819d99d78a3bd02865652c7882201bf0&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-11T20:22:30+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- 
:state: committed
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-11T20:22:31+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [ddbeb15a5e7e0c3c5f316ccf65b557bc5311a6c4]) Revert &quot;Fixed bug with polymorphic has_one :as pointing to an STI record&quot;

[#2594 state:open]

This reverts commit 99c103be1165da9c8299bc0977188ecf167e06a5.
http://github.com/rails/rails/commit/ddbeb15a5e7e0c3c5f316ccf65b557bc5311a6c4</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [ddbeb15a5e7e0c3c5f316ccf65b557bc5311a6c4]) Revert &quot;Fixed
bug with polymorphic has_one :as pointing to an STI record&quot;&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/2594&quot; title=&quot;Ticket #2594&quot;&gt;#2594&lt;/a&gt; state:open]&lt;/p&gt;
&lt;p&gt;This reverts commit 99c103be1165da9c8299bc0977188ecf167e06a5.
&lt;a href=&quot;http://github.com/rails/rails/commit/ddbeb15a5e7e0c3c5f316ccf65b557bc5311a6c4&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-11T20:22:32+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-11T20:22:33+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">9</version>
      <user-name>Repository</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Darn - i thought that was too easy ;)

Do you have a patch to add some failing test units for me mr. Knowles?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Darn - i thought that was too easy ;)&lt;/p&gt;
&lt;p&gt;Do you have a patch to add some failing test units for me mr.
Knowles?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-11T20:35:34+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-11T20:35:37+01:00</updated-at>
      <user-id type="integer">370</user-id>
      <version type="integer">10</version>
      <user-name>Ruy Asan</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Ruy,

I will try and whip together a test which show-cases this behavior this evening.  Regardless of the missing test, switching the defaults is a bit concerning to me as anyone with an existing dataset is left in the cold.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Ruy,&lt;/p&gt;
&lt;p&gt;I will try and whip together a test which show-cases this
behavior this evening. Regardless of the missing test, switching
the defaults is a bit concerning to me as anyone with an existing
dataset is left in the cold.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-11T20:41:36+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-11T20:41:40+01:00</updated-at>
      <user-id type="integer">10486</user-id>
      <version type="integer">11</version>
      <user-name>Josh Knowles</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Well from my POV the existing behaviour just seemed like a flat out bug so anyone that actually ran into this issue would have had to work around it in some way. I suspected that it was possible the change would affect cases other then this particular issue, but I figured the unit tests should have caught anything really bad... guess not!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Well from my POV the existing behaviour just seemed like a flat
out bug so anyone that actually ran into this issue would have had
to work around it in some way. I suspected that it was possible the
change would affect cases other then this particular issue, but I
figured the unit tests should have caught anything really bad...
guess not!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-11T20:46:22+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-05-11T20:46:24+01:00</updated-at>
      <user-id type="integer">370</user-id>
      <version type="integer">12</version>
      <user-name>Ruy Asan</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is related to several other reported issues with STI and polymorphic associations, and they all have a similar issue: expecting that the _type field match the real type of the target object. This is not the case in the current code - the _type field is used to figure out which table to query, not the type of the result. Note that, in this example, that this will work:

@@@ ruby
Organization.find(SponsorableOrganization.first.id) # =&gt; a SponsorableOrganization object
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is related to several other reported issues with STI and
polymorphic associations, and they all have a similar issue:
expecting that the &lt;em&gt;type field match the real type of the target
object. This is not the case in the current code - the&lt;/em&gt; type
field is used to figure out which table to query, not the type of
the result. Note that, in this example, that this will work:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Organization.find(SponsorableOrganization.first.id) # =&amp;gt; a SponsorableOrganization object&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-06-08T21:25:13+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2009-06-08T21:25:20+01:00</updated-at>
      <user-id type="integer">22589</user-id>
      <version type="integer">13</version>
      <user-name>Matt Jones</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:48+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2010-05-04T18:48:48+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">14</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T04:23:41+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2-3-stable activerecord has_one patch polymorphic sti</tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2010-10-09T04:23:45+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">15</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Automatic cleanup of spam.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Automatic cleanup of spam.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T21:48:06+01:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2-3-stable activerecord has_one patch polymorphic sti
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2010-10-09T21:48:08+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">17</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were inspired by   baseball glove design and they created discount handbags with similar qualities.&lt;strong&gt;&lt;a href=&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come along until years later. The original handbag collection   had twelve designs, and they were made from supple, tan, top-quality leathers,   and showed the same excellent craftsmanship and stitching that we still expect   today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought new looks to   Coach bags. She used many new fabrics and organic materials like jersey and   wool. She created the brass hardware that is symbolic of &lt;strong&gt;&lt;a href=&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;. When   Lew Frankfort came aboard in 1979, he brought Coach to the next level, and they   became a name known the world over. Affordable luxury was not a concept that   many people knew, but now they would. Soon after Frankfort joined Coach, they   came out with a catalog, and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought its brand   relevance and strength. They designed watches starting in 1988, and also   expanded their company to Tokyo. Japan still counts among the leading purchasers   of &lt;strong&gt;&lt;a href=&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach heels. The manufacture of Coach shoes began in the mid   90's, and Reed Krakoff, the lead designer, loaned his talents to help put Coach   heels and &lt;a href=&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as their   handbags, but they are well worth the money invested in their purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that don't have   this height. &lt;strong&gt;&lt;a href=&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to style and   pizzazz. Coach platforms come in many styles, from gold loafers to slingbacks   with open toes. You may be able to find Coach shoes at discount prices online,   but be sure that you are buying genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous, Coach   shoes and &lt;a href=&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will make you   feel sporty, too. When selecting pumps or sandals to wear, you'll be happy to   count on the long-standing quality and service of the Coach company. They have   many styles to choose from, including chic and glamorous Coach boots and Coach   heels. Whether you are looking for sports shoes like Coach sneakers or sexy   shoes like Coach boots, the Coach name will never let you down.&lt;/p&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;When Coach began as Manhattan Leather Bags in 1941, they were
inspired by baseball glove design and they created discount
handbags with similar qualities.&lt;strong&gt;&lt;a href=
&quot;http://www.uk-supra.com&quot;&gt;supra shoes&lt;/a&gt;&lt;/strong&gt; didn't come
along until years later. The original handbag collection had twelve
designs, and they were made from supple, tan, top-quality leathers,
and showed the same excellent craftsmanship and stitching that we
still expect today.&lt;/p&gt;
&lt;p&gt;Coach hired a woman named Bonnie Cashin in 1962, and she brought
new looks to Coach bags. She used many new fabrics and organic
materials like jersey and wool. She created the brass hardware that
is symbolic of &lt;strong&gt;&lt;a href=
&quot;http://www.menstimberlandshoes.com&quot;&gt;timberland boots&lt;/a&gt;&lt;/strong&gt;.
When Lew Frankfort came aboard in 1979, he brought Coach to the
next level, and they became a name known the world over. Affordable
luxury was not a concept that many people knew, but now they would.
Soon after Frankfort joined Coach, they came out with a catalog,
and opened their flagship store in New York City.&lt;/p&gt;
&lt;p&gt;In the 1980's, Coach expanded and made innovations that brought
its brand relevance and strength. They designed watches starting in
1988, and also expanded their company to Tokyo. Japan still counts
among the leading purchasers of &lt;strong&gt;&lt;a href=
&quot;http://www.allofcoach.com&quot;&gt;coach purses&lt;/a&gt;&lt;/strong&gt; and Coach
heels. The manufacture of Coach shoes began in the mid 90's, and
Reed Krakoff, the lead designer, loaned his talents to help put
Coach heels and &lt;a href=
&quot;http://www.louisvuittonbagoutlet.com&quot;&gt;&lt;strong&gt;louis vuitton bags
outlet&lt;/strong&gt;&lt;/a&gt; on the map. Their shoes aren't as popular as
their handbags, but they are well worth the money invested in their
purchase.&lt;/p&gt;
&lt;p&gt;Women love heels, but at times you may want to wear shoes that
don't have this height. &lt;strong&gt;&lt;a href=
&quot;http://www.truereligionjeans-outlet.com&quot;&gt;true religion jeans
outlet&lt;/a&gt;&lt;/strong&gt; are as dedicated to comfort as they are to
style and pizzazz. Coach platforms come in many styles, from gold
loafers to slingbacks with open toes. You may be able to find Coach
shoes at discount prices online, but be sure that you are buying
genuine Coach products.&lt;/p&gt;
&lt;p&gt;If you're looking for &lt;a href=
&quot;http://www.womenmonclerjackets.com&quot;&gt;&lt;strong&gt;moncler
jackets&lt;/strong&gt;&lt;/a&gt; that will make you feel and look glamorous,
Coach shoes and &lt;a href=
&quot;http://www.chanelpursesbags.com&quot;&gt;&lt;strong&gt;chanel
purses&lt;/strong&gt;&lt;/a&gt; can do that well. Coach sneakers and heels will
make you feel sporty, too. When selecting pumps or sandals to wear,
you'll be happy to count on the long-standing quality and service
of the Coach company. They have many styles to choose from,
including chic and glamorous Coach boots and Coach heels. Whether
you are looking for sports shoes like Coach sneakers or sexy shoes
like Coach boots, the Coach name will never let you down.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-11-08T01:10:50+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2010-11-08T23:12:05+00:00</updated-at>
      <user-id type="integer">123546</user-id>
      <version type="integer">18</version>
      <user-name>jim123456</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;a href=http://www.beautiful-ugg.com &gt;ugg nederland&lt;/a&gt; with a legendary brand, first glimpse of &lt;a href=http://www.beautiful-ugg.com &gt;goedkope ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg laarzen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg australia nederland&lt;/a&gt;for both &lt;a href=http://www.beautiful-ugg.com &gt;ugg store rotterdam&lt;/a&gt;
&lt;a href=http://www.beautiful-ugg.com &gt;ugg schoenen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amsterdam&lt;/a&gt;beer-drinking cartoon appearance is not too cold, and it is a style boots, since many euramerican star street pats have sufficient terengganu Ugg snow handsome appearance and fashionable boots and the earth, Ugg sweep of popular wind continues to explode, &lt;a href=http://www.beautiful-ugg.com &gt;ugg bestellen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online kopen&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg online bestellen&lt;/a&gt; Ugg there are many fans.

About Australia Ugg sheep leather &lt;a href=http://www.beautiful-ugg.com &gt;kinder ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoop&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg maten&lt;/a&gt; history dates back to 1978, called a Brian Smith Australian young surfing member once took a batch of sheep leather boots to America. In the past years, Australia craftsman people always habits in New Zealand seaside sewing sheep leather boots, however, is the young man with the business mind bold attempt will this Australian traditional products to the United States ugg boots sale.

At that time, he only a few several pairs &lt;a href=http://www.beautiful-ugg.com &gt;ugg nl&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg in nederland&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;nep ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;echte ugg&lt;/a&gt; leather boots, with full of passion and self-confidence, began in New York street hawkers. However, the start, he has not been so good luck, one day come down, did not sell a pair of &lt;a href=http://www.beautiful-ugg.com &gt;goedkoopste ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg goedkoopste&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg voor kids&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;maten ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;online ugg bestellen&lt;/a&gt; However, he did not lose heart, even a little stubborn think sure to succeed. He believes that, in the U.S. market will have a belong to his boots of heaven and earth.

So he decided to go to California western, to find opportunities. When he arrived at the destination and found there has been part of that such a man as he, with similar sheep leather boots at the seaside sale. Here he head round business into five customer sold 48 boots. Of course, can say is California developed surfing market attracted these from Australia boutique sheep leather boots. Australia &lt;a href=http://www.beautiful-ugg.com &gt;laarzen ugg&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg amerika&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;uggs for cheap&lt;/a&gt;&lt;a href=http://www.beautiful-ugg.com &gt;ugg warmer schoenen&lt;/a&gt; sheep leather boots begins to become every surfers landed necessary article.</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=&quot;http:&quot;&gt;ugg nederland with a legendary brand, first
glimpse of &lt;a href=&quot;http:&quot;&gt;goedkope ugg&lt;a href=&quot;http:&quot;&gt;ugg
laarzen&lt;a href=&quot;http:&quot;&gt;ugg australia nederlandfor both &lt;a href=
&quot;http:&quot;&gt;ugg store rotterdam&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;ugg schoenen&lt;a href=&quot;http:&quot;&gt;ugg kopen&lt;a href=
&quot;http:&quot;&gt;ugg amsterdambeer-drinking cartoon appearance is not too
cold, and it is a style boots, since many euramerican star street
pats have sufficient terengganu Ugg snow handsome appearance and
fashionable boots and the earth, Ugg sweep of popular wind
continues to explode, &lt;a href=&quot;http:&quot;&gt;ugg bestellen&lt;a href=
&quot;http:&quot;&gt;ugg online kopen&lt;a href=&quot;http:&quot;&gt;ugg online bestellen Ugg
there are many fans.&lt;/p&gt;
&lt;p&gt;About Australia Ugg sheep leather &lt;a href=&quot;http:&quot;&gt;kinder
ugg&lt;a href=&quot;http:&quot;&gt;ugg goedkoop&lt;a href=&quot;http:&quot;&gt;ugg maten history
dates back to 1978, called a Brian Smith Australian young surfing
member once took a batch of sheep leather boots to America. In the
past years, Australia craftsman people always habits in New Zealand
seaside sewing sheep leather boots, however, is the young man with
the business mind bold attempt will this Australian traditional
products to the United States ugg boots sale.&lt;/p&gt;
&lt;p&gt;At that time, he only a few several pairs &lt;a href=&quot;http:&quot;&gt;ugg
nl&lt;a href=&quot;http:&quot;&gt;ugg in nederland&lt;a href=&quot;http:&quot;&gt;nep ugg&lt;a href=
&quot;http:&quot;&gt;echte ugg leather boots, with full of passion and
self-confidence, began in New York street hawkers. However, the
start, he has not been so good luck, one day come down, did not
sell a pair of &lt;a href=&quot;http:&quot;&gt;goedkoopste ugg&lt;a href=&quot;http:&quot;&gt;ugg
goedkoopste&lt;a href=&quot;http:&quot;&gt;ugg voor kids&lt;a href=&quot;http:&quot;&gt;maten
ugg&lt;a href=&quot;http:&quot;&gt;online ugg bestellen However, he did not lose
heart, even a little stubborn think sure to succeed. He believes
that, in the U.S. market will have a belong to his boots of heaven
and earth.&lt;/p&gt;
&lt;p&gt;So he decided to go to California western, to find
opportunities. When he arrived at the destination and found there
has been part of that such a man as he, with similar sheep leather
boots at the seaside sale. Here he head round business into five
customer sold 48 boots. Of course, can say is California developed
surfing market attracted these from Australia boutique sheep
leather boots. Australia &lt;a href=&quot;http:&quot;&gt;laarzen ugg&lt;a href=
&quot;http:&quot;&gt;ugg amerika&lt;a href=&quot;http:&quot;&gt;uggs for cheap&lt;a href=
&quot;http:&quot;&gt;ugg warmer schoenen sheep leather boots begins to become
every surfers landed necessary article.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-12-28T02:57:32+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2010-12-28T03:36:14+00:00</updated-at>
      <user-id type="integer">130424</user-id>
      <version type="integer">19</version>
      <user-name>tdtgrdhg</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>We are still seeing this happening on version 3.0.3.  We have the following code:

Coverage &lt; ActiveRecord::Base
  has_one :contact, :as =&gt; :contactable
end

ContactInfo &lt; ActiveRecord::Base
  belongs_to :contactable, :polymorphic =&gt; true
end

Here's the console output:

irb(main):001:0&gt; Coverage.first.contact
ArgumentError: wrong number of arguments (2 for 1)
        from /usr/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/has_one_association.rb:88:in `find'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/has_one_association.rb:88:in `find_target'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_proxy.rb:237:in `load_target'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_proxy.rb:118:in `reload'
        from /usr/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations.rb:1451:in `contact'
        from (irb):1</body>
      <body-html>&lt;div&gt;&lt;p&gt;We are still seeing this happening on version 3.0.3. We have the
following code:&lt;/p&gt;
&lt;p&gt;Coverage &amp;lt; ActiveRecord::Base&lt;br&gt;
has_one :contact, :as =&amp;gt; :contactable end&lt;/p&gt;
&lt;p&gt;ContactInfo &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :contactable, :polymorphic =&amp;gt; true end&lt;/p&gt;
&lt;p&gt;Here's the console output:&lt;/p&gt;
&lt;p&gt;irb(main):001:0&amp;gt; Coverage.first.contact&lt;br&gt;
ArgumentError: wrong number of arguments (2 for 1)&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    from /usr/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/has_one_association.rb:88:in `find'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/has_one_association.rb:88:in `find_target'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_proxy.rb:237:in `load_target'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations/association_proxy.rb:118:in `reload'
    from /usr/lib/ruby/gems/1.8/gems/activerecord-3.0.3/lib/active_record/associations.rb:1451:in `contact'
    from (irb):1&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-06T15:59:06+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2011-01-06T15:59:30+00:00</updated-at>
      <user-id type="integer">116485</user-id>
      <version type="integer">20</version>
      <user-name>Spencer Dillard</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Correction.  The code we had was:
Coverage &lt; ActiveRecord::Base
  has_one :contact, :as =&gt; :contactable
end
Contact &lt; ActiveRecord::Base
  belongs_to :contactable, :polymorphic =&gt; true 
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;Correction. The code we had was:&lt;br&gt;
Coverage &amp;lt; ActiveRecord::Base&lt;br&gt;
has_one :contact, :as =&amp;gt; :contactable end&lt;br&gt;
Contact &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :contactable, :polymorphic =&amp;gt; true end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-06T16:03:40+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2011-01-06T16:04:04+00:00</updated-at>
      <user-id type="integer">116485</user-id>
      <version type="integer">21</version>
      <user-name>Spencer Dillard</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This is definitely still broken in Rails 3.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is definitely still broken in Rails 3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-01-28T17:51:09+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2011-01-28T17:51:34+00:00</updated-at>
      <user-id type="integer">32843</user-id>
      <version type="integer">22</version>
      <user-name>Xac</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry for the late response.

Could one of you write a failing test for Rails? Or better yet write a patch with failing tests that fixes the issue?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry for the late response.&lt;/p&gt;
&lt;p&gt;Could one of you write a failing test for Rails? Or better yet
write a patch with failing tests that fixes the issue?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-29T00:44:32+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2011-01-29T00:45:00+00:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">23</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Xac, Rohit Arondekar As i see it is not broken in Rails 3 because to the sponsors table will be added a sponsor with sponsorable_type set to Organization (to the base_class) and so organizations(:sponsorable).sponsor will work correct.

Rails writes the base class to the #{reflection.options[:as]}_type column to give an ability to call something like a tagging.posts. Here we need to return all posts of type Post and of type SpecialPost (which is STI from Post). If we will write a class into #{reflection.options[:as]}_type instead of class.base_class we won't get posts of class SpecialPost which is not correct behavior.

I think this ticket could be closed for Rails3.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Xac, Rohit Arondekar As i see it is not broken in Rails 3
because to the sponsors table will be added a sponsor with
sponsorable_type set to Organization (to the base_class) and so
organizations(:sponsorable).sponsor will work correct.&lt;/p&gt;
&lt;p&gt;Rails writes the base class to the
#{reflection.options[:as]}&lt;em&gt;type column to give an ability to
call something like a tagging.posts. Here we need to return all
posts of type Post and of type SpecialPost (which is STI from
Post). If we will write a class into
#{reflection.options[:as]}&lt;/em&gt;type instead of class.base_class we
won't get posts of class SpecialPost which is not correct
behavior.&lt;/p&gt;
&lt;p&gt;I think this ticket could be closed for Rails3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T12:43:45+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2011-02-03T12:44:12+00:00</updated-at>
      <user-id type="integer">65953</user-id>
      <version type="integer">24</version>
      <user-name>2kan</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>@2kan, I disagree.

Storing the base_class in the type field of a polymorphic association does indeed allow the use case you give, but it does not allow efficient selection of a subset of STI types from a polymorphic association.

For example, extending your example, let's assume we also have @NiceSpecialPost@, @NastySpecialPost@ as additional subclasses of @SpecialPost@, plus @GoalPost@ as an additional subclass of @Post@.  Now consider these use cases:

* you want to get the set of NiceSpecialPosts.
* you want to get the set of SpecialPosts and it's subclasses.
* you want to get the set of GoalPosts and NiceSpecialPosts.

These are all terribly inefficient if the polymorphic type does not hold the subclass.

On the other hand, if the polymorphic type does have the subclass, then queries such as this are possible, e.g. for the second case above:
@Tags.find(:all, :include =&gt; :posts, :conditions =&gt; {:posts_type =&gt; [SpecialPosts, SpecialPosts.subclasses]})@

If you can do such a query using @find@ then you can generally achieve the same thing in an association.

Apologies if this is all a bit Rails2 - we haven't upgraded yet.  I have actually made these changes to our Rails2 installation and all of our polymorphic associations work this way because it enables queries in ActiveRecord that would otherwise be a pain to write.

Although my opinions are based on Rails2, I don't see why this doesn't affect Rails3 - I'd have thought the same use cases could only be solved in the same way in Rails3 too, but the generally approved style and syntax would be different.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@2kan, I disagree.&lt;/p&gt;
&lt;p&gt;Storing the base_class in the type field of a polymorphic
association does indeed allow the use case you give, but it does
not allow efficient selection of a subset of STI types from a
polymorphic association.&lt;/p&gt;
&lt;p&gt;For example, extending your example, let's assume we also have
@NiceSpecialPost@, &lt;code&gt;NastySpecialPost&lt;/code&gt; as additional
subclasses of @SpecialPost@, plus &lt;code&gt;GoalPost&lt;/code&gt; as an
additional subclass of &lt;code&gt;Post&lt;/code&gt;. Now consider these use
cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you want to get the set of NiceSpecialPosts.&lt;/li&gt;
&lt;li&gt;you want to get the set of SpecialPosts and it's
subclasses.&lt;/li&gt;
&lt;li&gt;you want to get the set of GoalPosts and NiceSpecialPosts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are all terribly inefficient if the polymorphic type does
not hold the subclass.&lt;/p&gt;
&lt;p&gt;On the other hand, if the polymorphic type does have the
subclass, then queries such as this are possible, e.g. for the
second case above:&lt;br&gt;
&lt;code&gt;Tags.find(:all, :include =&amp;gt; :posts, :conditions =&amp;gt;
{:posts_type =&amp;gt; [SpecialPosts,
SpecialPosts.subclasses]})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you can do such a query using &lt;code&gt;find&lt;/code&gt; then you can
generally achieve the same thing in an association.&lt;/p&gt;
&lt;p&gt;Apologies if this is all a bit Rails2 - we haven't upgraded yet.
I have actually made these changes to our Rails2 installation and
all of our polymorphic associations work this way because it
enables queries in ActiveRecord that would otherwise be a pain to
write.&lt;/p&gt;
&lt;p&gt;Although my opinions are based on Rails2, I don't see why this
doesn't affect Rails3 - I'd have thought the same use cases could
only be solved in the same way in Rails3 too, but the generally
approved style and syntax would be different.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-03T13:53:50+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2011-02-03T13:54:21+00:00</updated-at>
      <user-id type="integer">51960</user-id>
      <version type="integer">25</version>
      <user-name>Jonathan Monahan</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I agree with Jonathan. There are non-trivial performance gains by storing the actual STI class in the polymorphic type column ... effectively removing the need to make extra joins.

I've first stumbled onto this &quot;problem&quot; in Rails 1.x and have been applying patches as I've been upgrading Rails. Now I'm looking to upgrade to Rails 3 and oh no ... Rails 3 still stores the base class in polymorphic type columns and no there is no patch :(.

Going from the existing Rails behavior to what's proposed will require a migration to update the polymorphic columns and simple code changes (i.e. instead of parent_type = 'Person' you need parent_type = [Person, Person.subclasses]).

Going the other way also requires a migration but the code changes are potentially much more complex as additional joins have to be worked into the code. 

BTW, this seems to be same as [#5617](https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5617). No?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I agree with Jonathan. There are non-trivial performance gains
by storing the actual STI class in the polymorphic type column ...
effectively removing the need to make extra joins.&lt;/p&gt;
&lt;p&gt;I've first stumbled onto this &quot;problem&quot; in Rails 1.x and have
been applying patches as I've been upgrading Rails. Now I'm looking
to upgrade to Rails 3 and oh no ... Rails 3 still stores the base
class in polymorphic type columns and no there is no patch :(.&lt;/p&gt;
&lt;p&gt;Going from the existing Rails behavior to what's proposed will
require a migration to update the polymorphic columns and simple
code changes (i.e. instead of parent_type = 'Person' you need
parent_type = [Person, Person.subclasses]).&lt;/p&gt;
&lt;p&gt;Going the other way also requires a migration but the code
changes are potentially much more complex as additional joins have
to be worked into the code.&lt;/p&gt;
&lt;p&gt;BTW, this seems to be same as &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/5617&quot;&gt;
#5617&lt;/a&gt;. No?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T04:01:12+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2011-02-12T04:01:40+00:00</updated-at>
      <user-id type="integer">129732</user-id>
      <version type="integer">26</version>
      <user-name>Paul K</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-14T02:50:15+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2011-02-14T05:41:57+00:00</updated-at>
      <user-id type="integer">136860</user-id>
      <version type="integer">27</version>
      <user-name>xixi</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Today, kids as babyish as Ashcan School or nine name-conscious and trend-alert, puma ducati buying at for solid garments rather than just throwing on what&#8217;s pure. Here are just some of the brands and trends your children hungered over 2011. The 80&#8242;s Are Back. You may have noticed a trend this year for evisu jeans, supra shoes, leggings petticoats, oversized tees, and big &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; shoes. This is a look that appeals to babies girls-it&#8217;s quirky and yet smart at the same time.
&lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; with success sets the charm for manner, lifestyle and gambols. This has been believed to serve for an ideal cross flight simulator. This has been fine-looking by most jocks and the Speed Cat is an old name for the industriousness which made &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; gain millions with this business. With many people converting more wellness conscious in time, a lot wants also to commit on a good pair of cross trainers. These are very indestructible and forward-looking just like the real carrying out of a real &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt;. It consumes been systematically on the forefront of design and carrying out when it pertains comfort and style commingled.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Today, kids as babyish as Ashcan School or nine name-conscious
and trend-alert, puma ducati buying at for solid garments rather
than just throwing on what&amp;#8217;s pure. Here are just some of the
brands and trends your children hungered over 2011. The 80&amp;#8242;s
Are Back. You may have noticed a trend this year for evisu jeans,
supra shoes, leggings petticoats, oversized tees, and big &lt;a href=
&quot;http:&quot;&gt;puma speed cat shoes. This is a look that appeals to babies
girls-it&amp;#8217;s quirky and yet smart at the same time.&lt;br&gt;
&lt;a href=&quot;http:&quot;&gt;Puma future cat with success sets the charm for
manner, lifestyle and gambols. This has been believed to serve for
an ideal cross flight simulator. This has been fine-looking by most
jocks and the Speed Cat is an old name for the industriousness
which made &lt;a href=&quot;http:&quot;&gt;Puma shoes gain millions with this
business. With many people converting more wellness conscious in
time, a lot wants also to commit on a good pair of cross trainers.
These are very indestructible and forward-looking just like the
real carrying out of a real &lt;a href=&quot;http:&quot;&gt;Puma future cat. It
consumes been systematically on the forefront of design and
carrying out when it pertains comfort and style commingled.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-19T01:40:54+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2011-02-19T09:28:19+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">28</version>
      <user-name>mklo</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-26T02:13:29+00:00</created-at>
      <creator-id type="integer">370</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2594</number>
      <permalink>bug-with-polymorphic-has_one-as-pointing-to-sti-record</permalink>
      <priority type="integer">1732</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Bug with polymorphic has_one :as pointing to STI record</title>
      <updated-at type="datetime">2011-03-26T02:41:42+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">29</version>
      <user-name>bingbing</user-name>
      <creator-name>Ruy Asan</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2594</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>37a3fd6ed2d28b7427a7821fc67bce20e050cb1d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-05-01T21:32:24+01:00</created-at>
      <filename>polymorphic-sti-fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">117949</id>
      <size type="integer">4985</size>
      <uploader-id type="integer">370</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/117949/polymorphic-sti-fix.diff</url>
    </attachment>
  </attachments>
</ticket>
