<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-08T23:56:41+00:00</created-at>
  <creator-id type="integer">122553</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6253</number>
  <permalink>sqlite3-ruby-float-issue</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag nil="true"></tag>
  <title>sqlite3 Float issue</title>
  <updated-at type="datetime">2011-04-09T01:00:32+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">5</version>
  <user-name>rails</user-name>
  <creator-name>Don Wilson</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6253</url>
  <priority-name nil="true"></priority-name>
  <original-body>I'm submitting this for help collaborating on what should be done, if anything.

## Example of the issue ##

Here, I am summing -40.25, 100, and -34.59 in the database:

@@@ ruby
irb(main):001:0&gt; my_envelope.bank_transactions.sum(:amount)
=&gt; #&lt;BigDecimal:1011be570,'0.2515999999 9999997E2',27(27)&gt;
@@@

The sqlite3 methods for retrieving this data from the row returns a `double`. This means that we're dealing with normal `Float` precision issues from the moment it comes out of the database.  Then, since the column type is decimal, rails converts the number from `Float` to `BigDecimal`.  Before Ruby 1.9, Ruby would have rounded this number to 25.16 and then we would see the correct number in the `BigDecimal`.

My issue with this is that I think we can assume that people should know about precision problems with a Float, but when Rails hands them a BigDecimal, I think they should be confident that it represents the actual number.

## What do we do? ##

Would it be a good idea to round these numbers for the user before we send it to them as a BigDecimal?  We could even just call `BigDecimal.round(12)` to round to the 12th decimal place or something.  Any thoughts?</original-body>
  <latest-body>I'm submitting this for help collaborating on what should be done, if anything.

## Example of the issue ##

Here, I am summing -40.25, 100, and -34.59 in the database:

@@@ ruby
irb(main):001:0&gt; my_envelope.bank_transactions.sum(:amount)
=&gt; #&lt;BigDecimal:1011be570,'0.2515999999 9999997E2',27(27)&gt;
@@@

The sqlite3 methods for retrieving this data from the row returns a `double`. This means that we're dealing with normal `Float` precision issues from the moment it comes out of the database.  Then, since the column type is decimal, rails converts the number from `Float` to `BigDecimal`.  Before Ruby 1.9, Ruby would have rounded this number to 25.16 and then we would see the correct number in the `BigDecimal`.

My issue with this is that I think we can assume that people should know about precision problems with a Float, but when Rails hands them a BigDecimal, I think they should be confident that it represents the actual number.

## What do we do? ##

Would it be a good idea to round these numbers for the user before we send it to them as a BigDecimal?  We could even just call `BigDecimal.round(12)` to round to the 12th decimal place or something.  Any thoughts?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm submitting this for help collaborating on what should be
done, if anything.&lt;/p&gt;
&lt;h2&gt;Example of the issue&lt;/h2&gt;
&lt;p&gt;Here, I am summing -40.25, 100, and -34.59 in the database:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;irb(main):001:0&amp;gt; my_envelope.bank_transactions.sum(:amount)
=&amp;gt; #&amp;lt;BigDecimal:1011be570,'0.2515999999 9999997E2',27(27)&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The sqlite3 methods for retrieving this data from the row
returns a &lt;code&gt;double&lt;/code&gt;. This means that we're dealing with
normal &lt;code&gt;Float&lt;/code&gt; precision issues from the moment it comes
out of the database. Then, since the column type is decimal, rails
converts the number from &lt;code&gt;Float&lt;/code&gt; to
&lt;code&gt;BigDecimal&lt;/code&gt;. Before Ruby 1.9, Ruby would have rounded
this number to 25.16 and then we would see the correct number in
the &lt;code&gt;BigDecimal&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;My issue with this is that I think we can assume that people
should know about precision problems with a Float, but when Rails
hands them a BigDecimal, I think they should be confident that it
represents the actual number.&lt;/p&gt;
&lt;h2&gt;What do we do?&lt;/h2&gt;
&lt;p&gt;Would it be a good idea to round these numbers for the user
before we send it to them as a BigDecimal? We could even just call
&lt;code&gt;BigDecimal.round(12)&lt;/code&gt; to round to the 12th decimal
place or something. Any thoughts?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm submitting this for help collaborating on what should be done, if anything.

## Example of the issue ##

Here, I am summing -40.25, 100, and -34.59 in the database:

@@@ ruby
irb(main):001:0&gt; my_envelope.bank_transactions.sum(:amount)
=&gt; #&lt;BigDecimal:1011be570,'0.2515999999 9999997E2',27(27)&gt;
@@@

The sqlite3 methods for retrieving this data from the row returns a `double`. This means that we're dealing with normal `Float` precision issues from the moment it comes out of the database.  Then, since the column type is decimal, rails converts the number from `Float` to `BigDecimal`.  Before Ruby 1.9, Ruby would have rounded this number to 25.16 and then we would see the correct number in the `BigDecimal`.

My issue with this is that I think we can assume that people should know about precision problems with a Float, but when Rails hands them a BigDecimal, I think they should be confident that it represents the actual number.

## What do we do? ##

Would it be a good idea to round these numbers for the user before we send it to them as a BigDecimal?  We could even just call `BigDecimal.round(12)` to round to the 12th decimal place or something.  Any thoughts?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm submitting this for help collaborating on what should be
done, if anything.&lt;/p&gt;
&lt;h2&gt;Example of the issue&lt;/h2&gt;
&lt;p&gt;Here, I am summing -40.25, 100, and -34.59 in the database:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;irb(main):001:0&amp;gt; my_envelope.bank_transactions.sum(:amount)
=&amp;gt; #&amp;lt;BigDecimal:1011be570,'0.2515999999 9999997E2',27(27)&amp;gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The sqlite3 methods for retrieving this data from the row
returns a &lt;code&gt;double&lt;/code&gt;. This means that we're dealing with
normal &lt;code&gt;Float&lt;/code&gt; precision issues from the moment it comes
out of the database. Then, since the column type is decimal, rails
converts the number from &lt;code&gt;Float&lt;/code&gt; to
&lt;code&gt;BigDecimal&lt;/code&gt;. Before Ruby 1.9, Ruby would have rounded
this number to 25.16 and then we would see the correct number in
the &lt;code&gt;BigDecimal&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;My issue with this is that I think we can assume that people
should know about precision problems with a Float, but when Rails
hands them a BigDecimal, I think they should be confident that it
represents the actual number.&lt;/p&gt;
&lt;h2&gt;What do we do?&lt;/h2&gt;
&lt;p&gt;Would it be a good idea to round these numbers for the user
before we send it to them as a BigDecimal? We could even just call
&lt;code&gt;BigDecimal.round(12)&lt;/code&gt; to round to the 12th decimal
place or something. Any thoughts?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-05T16:27:49+00:00</created-at>
      <creator-id type="integer">122553</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6253</number>
      <permalink>sqlite3-ruby-float-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>sqlite3-ruby Float issue</title>
      <updated-at type="datetime">2011-01-05T16:27:55+00:00</updated-at>
      <user-id type="integer">122553</user-id>
      <version type="integer">1</version>
      <user-name>Don Wilson</user-name>
      <creator-name>Don Wilson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6253</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-05T16:29:13+00:00</created-at>
      <creator-id type="integer">122553</creator-id>
      <diffable-attributes type="yaml">--- 
:title: sqlite3-ruby Float issue
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6253</number>
      <permalink>sqlite3-ruby-float-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>sqlite3 Float issue</title>
      <updated-at type="datetime">2011-01-05T16:29:17+00:00</updated-at>
      <user-id type="integer">122553</user-id>
      <version type="integer">2</version>
      <user-name>Don Wilson</user-name>
      <creator-name>Don Wilson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6253</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In spite of there are thousands and millions shoes offered in the market, &lt;a href=&quot;http://www.wholesalenflstore.com/pittsburgh-steelers-jerseys-c-80.html&quot;&gt;pittsburgh steelers jerseys&lt;/a&gt; make your shoe storage cabinet &lt;a href=&quot;http://www.wholesalenflstore.com/houston-texans-jerseys-c-69.html&quot;&gt;houston texans authentic jerseys&lt;/a&gt; plenty choices by engaging a new pair of black wedge boots today, trust my word, Nike Air Max 95 shoes definitely worth more than its value. &lt;a href=&quot;http://www.wholesalenflstore.com/miami-dolphins-jerseys-c-66.html&quot;&gt;dolphins football jerseys&lt;/a&gt; This style is the aboriginal shoes to affection Air Max cushioning &lt;a href=&quot;http://www.wholesalenflstore.com/new-york-giants-jerseys-c-82.html&quot;&gt;new york giants nfl&lt;/a&gt; arrangement in both the heel and forefoot. The air max 95 wants to action you a &lt;a href=&quot;http://www.wholesalenflstore.com/womens-nfl-jerseys-c-101.html&quot;&gt;nfl jerseys for women&lt;/a&gt; brace air max shoes as adequate as fashionable. In 1995, Nike launched this &lt;a href=&quot;http://www.wholesalenflstore.com/oakland-raiders-jerseys-c-107.html&quot;&gt;oakland raiders jerseys&lt;/a&gt; version which won the high reputation in that time. Everybody loves Nike Air Max 95 that Nike had to re-issue the archetypal so abounding times. Most of the people are attracted by this unique design of Nike Air Max shoes. It comes in suede and mesh construction with some reflective 3M for visibility, and whilst this new pair makes use of none of those resources, it&#8217;ll have no difficulty being seen. These new Ninety-Fives are crafted fully in black leather, but simply because some of it&#8217;s smooth and supple while contrasting tiers are accomplished in patent leather, you receive a rather wide selection of &lt;a href=&quot;http://www.wholesalenflstore.com/san-diego-chargers-jerseys-c-76.html&quot;&gt;sd chargers jerseys&lt;/a&gt; this &#8216;un-color&#8217;. And as with pretty much any &lt;a href=&quot;http://www.wholesalenflstore.com/cincinnati-bengals-jerseys-c-78.html&quot;&gt;cincinnati bengals jerseys&lt;/a&gt; athletic shoe, adding red and white accents &lt;a href=&quot;http://www.wholesalenflstore.com/new-york-giants-jerseys-c-82.html&quot;&gt;new york giants nfl&lt;/a&gt; to a black base helps make &lt;a href=&quot;http://www.wholesalenflstore.com/cleveland-browns-jerseys-c-79.html&quot;&gt;cleveland browns jerseys&lt;/a&gt; for a must-cop. With long-term and rich experience, we believe Air &lt;a href=&quot;http://www.wholesalenflstore.com/youth-nfl-jerseys-c-100.html&quot;&gt;youth nfl football jersey&lt;/a&gt; Max shoes &lt;a href=&quot;http://www.wholesalenflstore.com/san-diego-chargers-jerseys-c-76.html&quot;&gt;san diego chargers jerseys&lt;/a&gt; will create our characterized selling points that offer new recent models with new color way based on &lt;a href=&quot;http://www.wholesalenflstore.com/detroit-lions-jerseys-c-94.html&quot;&gt;detroit lions jerseys&lt;/a&gt; our high &lt;a href=&quot;http://www.wholesalenflstore.com/philadelphia-eagles-jerseys-c-83.html&quot;&gt;philadelphia eagles jerseys&lt;/a&gt; quality, collegiate-inspired, casual luxury footwear. &lt;br/&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;In spite of there are thousands and millions shoes offered in
the market, &lt;a href=
&quot;http://www.wholesalenflstore.com/pittsburgh-steelers-jerseys-c-80.html&quot;&gt;
pittsburgh steelers jerseys&lt;/a&gt; make your shoe storage cabinet
&lt;a href=
&quot;http://www.wholesalenflstore.com/houston-texans-jerseys-c-69.html&quot;&gt;
houston texans authentic jerseys&lt;/a&gt; plenty choices by engaging a
new pair of black wedge boots today, trust my word, Nike Air Max 95
shoes definitely worth more than its value. &lt;a href=
&quot;http://www.wholesalenflstore.com/miami-dolphins-jerseys-c-66.html&quot;&gt;
dolphins football jerseys&lt;/a&gt; This style is the aboriginal shoes to
affection Air Max cushioning &lt;a href=
&quot;http://www.wholesalenflstore.com/new-york-giants-jerseys-c-82.html&quot;&gt;
new york giants nfl&lt;/a&gt; arrangement in both the heel and forefoot.
The air max 95 wants to action you a &lt;a href=
&quot;http://www.wholesalenflstore.com/womens-nfl-jerseys-c-101.html&quot;&gt;nfl
jerseys for women&lt;/a&gt; brace air max shoes as adequate as
fashionable. In 1995, Nike launched this &lt;a href=
&quot;http://www.wholesalenflstore.com/oakland-raiders-jerseys-c-107.html&quot;&gt;
oakland raiders jerseys&lt;/a&gt; version which won the high reputation
in that time. Everybody loves Nike Air Max 95 that Nike had to
re-issue the archetypal so abounding times. Most of the people are
attracted by this unique design of Nike Air Max shoes. It comes in
suede and mesh construction with some reflective 3M for visibility,
and whilst this new pair makes use of none of those resources,
it&amp;#8217;ll have no difficulty being seen. These new Ninety-Fives
are crafted fully in black leather, but simply because some of
it&amp;#8217;s smooth and supple while contrasting tiers are
accomplished in patent leather, you receive a rather wide selection
of &lt;a href=
&quot;http://www.wholesalenflstore.com/san-diego-chargers-jerseys-c-76.html&quot;&gt;
sd chargers jerseys&lt;/a&gt; this &amp;#8216;un-color&amp;#8217;. And as with
pretty much any &lt;a href=
&quot;http://www.wholesalenflstore.com/cincinnati-bengals-jerseys-c-78.html&quot;&gt;
cincinnati bengals jerseys&lt;/a&gt; athletic shoe, adding red and white
accents &lt;a href=
&quot;http://www.wholesalenflstore.com/new-york-giants-jerseys-c-82.html&quot;&gt;
new york giants nfl&lt;/a&gt; to a black base helps make &lt;a href=
&quot;http://www.wholesalenflstore.com/cleveland-browns-jerseys-c-79.html&quot;&gt;
cleveland browns jerseys&lt;/a&gt; for a must-cop. With long-term and
rich experience, we believe Air &lt;a href=
&quot;http://www.wholesalenflstore.com/youth-nfl-jerseys-c-100.html&quot;&gt;youth
nfl football jersey&lt;/a&gt; Max shoes &lt;a href=
&quot;http://www.wholesalenflstore.com/san-diego-chargers-jerseys-c-76.html&quot;&gt;
san diego chargers jerseys&lt;/a&gt; will create our characterized
selling points that offer new recent models with new color way
based on &lt;a href=
&quot;http://www.wholesalenflstore.com/detroit-lions-jerseys-c-94.html&quot;&gt;detroit
lions jerseys&lt;/a&gt; our high &lt;a href=
&quot;http://www.wholesalenflstore.com/philadelphia-eagles-jerseys-c-83.html&quot;&gt;
philadelphia eagles jerseys&lt;/a&gt; quality, collegiate-inspired,
casual luxury footwear.&lt;br&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-01-08T02:15:47+00:00</created-at>
      <creator-id type="integer">122553</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6253</number>
      <permalink>sqlite3-ruby-float-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>sqlite3 Float issue</title>
      <updated-at type="datetime">2011-01-08T23:56:41+00:00</updated-at>
      <user-id type="integer">131700</user-id>
      <version type="integer">3</version>
      <user-name>xxchenjialong</user-name>
      <creator-name>Don Wilson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6253</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-09T01:00:06+01:00</created-at>
      <creator-id type="integer">122553</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6253</number>
      <permalink>sqlite3-ruby-float-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>sqlite3 Float issue</title>
      <updated-at type="datetime">2011-04-09T01:00:11+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>Don Wilson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6253</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-09T01:00:06+01:00</created-at>
      <creator-id type="integer">122553</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6253</number>
      <permalink>sqlite3-ruby-float-issue</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>sqlite3 Float issue</title>
      <updated-at type="datetime">2011-04-09T01:00:32+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">5</version>
      <user-name>rails</user-name>
      <creator-name>Don Wilson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6253</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
