<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-02-12T07:58:08+00:00</created-at>
  <creator-id type="integer">13911</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1948</number>
  <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
  <priority type="integer">1207</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>verified</tag>
  <title>Transaction block sets model ID to non-existent row</title>
  <updated-at type="datetime">2011-02-02T17:39:30+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">19</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Farrel</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>I'm on Rails 2.2.2 with MySQL 5.0.70 with InnoDB table types. I'm running into a wierd bug where if I have two models in a transaction and the second model raises an exception, the first model still has it's ID set and it's new_record status set to false despite the row never existing.

The following is a console session showing this:

&gt;&gt; client_user = new_client_user( :first_name =&gt; nil ) # Will cause a validation to fail
=&gt; #&lt;ClientUser id: nil, login: &quot;rene173744&quot;, email_address:&quot;far...@bosman.com&quot;, first_name: nil, last_name: &quot;Sim&quot;, active: true&gt;
&gt;&gt; establishment = new_establishment( :brand =&gt; brand )
=&gt; #&lt;Establishment id: nil, brand_id: 4, name: &quot;Pretoria GrandWest&quot;, active: true&gt;
&gt;&gt; Establishment.transaction{ establishment.save!; client_user.save!  } rescue false
=&gt; false
&gt;&gt; establishment.id
=&gt; 10
&gt;&gt; establishment.new_record?
=&gt; false
&gt;&gt; client_user.id
=&gt; nil
&gt;&gt; establishment.reload
ActiveRecord::RecordNotFound: Couldn't find Establishment with ID=10
...
&gt;&gt; Establishment.count
=&gt; 4

Here's an explanation of the session:
1) I initialise a new client user, with first_name set to nil so it will fail a validation
2) I then initialise a new establishment model
3) I try and save both in a transaction block. The client_user.save! call raises an exception causing the block to roll back.
4) Yet establishment has an ID set to 10 and is marked as not being a new record.
5) As expected client_user has no ID
6) Calling reload on establishment throws an error because the row
does not exist
7) Counting up the actual rows we see it is below the ID assigned to
establishment (I did this a few times, the first time the assigned ID was 5, then 6, then 7 etc)

This causes all sorts of problems in my app when the returned @establishment is passed to form_for, it thinks the establishment exists and tries to PUT to '/establishments/10' instead of POST'ing to '/establishments'.</original-body>
  <latest-body>I'm on Rails 2.2.2 with MySQL 5.0.70 with InnoDB table types. I'm running into a wierd bug where if I have two models in a transaction and the second model raises an exception, the first model still has it's ID set and it's new_record status set to false despite the row never existing.

The following is a console session showing this:

&gt;&gt; client_user = new_client_user( :first_name =&gt; nil ) # Will cause a validation to fail
=&gt; #&lt;ClientUser id: nil, login: &quot;rene173744&quot;, email_address:&quot;far...@bosman.com&quot;, first_name: nil, last_name: &quot;Sim&quot;, active: true&gt;
&gt;&gt; establishment = new_establishment( :brand =&gt; brand )
=&gt; #&lt;Establishment id: nil, brand_id: 4, name: &quot;Pretoria GrandWest&quot;, active: true&gt;
&gt;&gt; Establishment.transaction{ establishment.save!; client_user.save!  } rescue false
=&gt; false
&gt;&gt; establishment.id
=&gt; 10
&gt;&gt; establishment.new_record?
=&gt; false
&gt;&gt; client_user.id
=&gt; nil
&gt;&gt; establishment.reload
ActiveRecord::RecordNotFound: Couldn't find Establishment with ID=10
...
&gt;&gt; Establishment.count
=&gt; 4

Here's an explanation of the session:
1) I initialise a new client user, with first_name set to nil so it will fail a validation
2) I then initialise a new establishment model
3) I try and save both in a transaction block. The client_user.save! call raises an exception causing the block to roll back.
4) Yet establishment has an ID set to 10 and is marked as not being a new record.
5) As expected client_user has no ID
6) Calling reload on establishment throws an error because the row
does not exist
7) Counting up the actual rows we see it is below the ID assigned to
establishment (I did this a few times, the first time the assigned ID was 5, then 6, then 7 etc)

This causes all sorts of problems in my app when the returned @establishment is passed to form_for, it thinks the establishment exists and tries to PUT to '/establishments/10' instead of POST'ing to '/establishments'.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm on Rails 2.2.2 with MySQL 5.0.70 with InnoDB table types.
I'm running into a wierd bug where if I have two models in a
transaction and the second model raises an exception, the first
model still has it's ID set and it's new_record status set to false
despite the row never existing.&lt;/p&gt;
&lt;p&gt;The following is a console session showing this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;client_user = new_client_user( :first_name =&amp;gt; nil ) # Will
cause a validation to fail =&amp;gt; # establishment =
new_establishment( :brand =&amp;gt; brand ) =&amp;gt; #
Establishment.transaction{ establishment.save!; client_user.save! }
rescue false =&amp;gt; false establishment.id =&amp;gt; 10
establishment.new_record? =&amp;gt; false client_user.id =&amp;gt; nil
establishment.reload ActiveRecord::RecordNotFound: Couldn't find
Establishment with ID=10 ... Establishment.count =&amp;gt; 4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here's an explanation of the session: 1) I initialise a new
client user, with first_name set to nil so it will fail a
validation 2) I then initialise a new establishment model 3) I try
and save both in a transaction block. The client_user.save! call
raises an exception causing the block to roll back. 4) Yet
establishment has an ID set to 10 and is marked as not being a new
record. 5) As expected client_user has no ID 6) Calling reload on
establishment throws an error because the row does not exist 7)
Counting up the actual rows we see it is below the ID assigned to
establishment (I did this a few times, the first time the assigned
ID was 5, then 6, then 7 etc)&lt;/p&gt;
&lt;p&gt;This causes all sorts of problems in my app when the returned
@establishment is passed to form_for, it thinks the establishment
exists and tries to PUT to '/establishments/10' instead of POST'ing
to '/establishments'.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm on Rails 2.2.2 with MySQL 5.0.70 with InnoDB table types. I'm running into a wierd bug where if I have two models in a transaction and the second model raises an exception, the first model still has it's ID set and it's new_record status set to false despite the row never existing.

The following is a console session showing this:

&gt;&gt; client_user = new_client_user( :first_name =&gt; nil ) # Will cause a validation to fail
=&gt; #&lt;ClientUser id: nil, login: &quot;rene173744&quot;, email_address:&quot;far...@bosman.com&quot;, first_name: nil, last_name: &quot;Sim&quot;, active: true&gt;
&gt;&gt; establishment = new_establishment( :brand =&gt; brand )
=&gt; #&lt;Establishment id: nil, brand_id: 4, name: &quot;Pretoria GrandWest&quot;, active: true&gt;
&gt;&gt; Establishment.transaction{ establishment.save!; client_user.save!  } rescue false
=&gt; false
&gt;&gt; establishment.id
=&gt; 10
&gt;&gt; establishment.new_record?
=&gt; false
&gt;&gt; client_user.id
=&gt; nil
&gt;&gt; establishment.reload
ActiveRecord::RecordNotFound: Couldn't find Establishment with ID=10
...
&gt;&gt; Establishment.count
=&gt; 4

Here's an explanation of the session:
1) I initialise a new client user, with first_name set to nil so it will fail a validation
2) I then initialise a new establishment model
3) I try and save both in a transaction block. The client_user.save! call raises an exception causing the block to roll back.
4) Yet establishment has an ID set to 10 and is marked as not being a new record.
5) As expected client_user has no ID
6) Calling reload on establishment throws an error because the row
does not exist
7) Counting up the actual rows we see it is below the ID assigned to
establishment (I did this a few times, the first time the assigned ID was 5, then 6, then 7 etc)

This causes all sorts of problems in my app when the returned @establishment is passed to form_for, it thinks the establishment exists and tries to PUT to '/establishments/10' instead of POST'ing to '/establishments'.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm on Rails 2.2.2 with MySQL 5.0.70 with InnoDB table types.
I'm running into a wierd bug where if I have two models in a
transaction and the second model raises an exception, the first
model still has it's ID set and it's new_record status set to false
despite the row never existing.&lt;/p&gt;
&lt;p&gt;The following is a console session showing this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;client_user = new_client_user( :first_name =&amp;gt; nil ) # Will
cause a validation to fail =&amp;gt; #&lt;a href=&quot;mailto:far...@bosman.com&quot;&gt;far...@bosman.com&lt;/a&gt;&quot;, first_name: nil,
last_name: &quot;Sim&quot;, active: true&amp;gt; establishment =
new_establishment( :brand =&amp;gt; brand ) =&amp;gt;
#Establishment.transaction{ establishment.save!; client_user.save!
} rescue false =&amp;gt; false establishment.id =&amp;gt; 10
establishment.new_record? =&amp;gt; false client_user.id =&amp;gt; nil
establishment.reload ActiveRecord::RecordNotFound: Couldn't find
Establishment with ID=10 ... Establishment.count =&amp;gt; 4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here's an explanation of the session: 1) I initialise a new
client user, with first_name set to nil so it will fail a
validation 2) I then initialise a new establishment model 3) I try
and save both in a transaction block. The client_user.save! call
raises an exception causing the block to roll back. 4) Yet
establishment has an ID set to 10 and is marked as not being a new
record. 5) As expected client_user has no ID 6) Calling reload on
establishment throws an error because the row does not exist 7)
Counting up the actual rows we see it is below the ID assigned to
establishment (I did this a few times, the first time the assigned
ID was 5, then 6, then 7 etc)&lt;/p&gt;
&lt;p&gt;This causes all sorts of problems in my app when the returned
@establishment is passed to form_for, it thinks the establishment
exists and tries to PUT to '/establishments/10' instead of POST'ing
to '/establishments'.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-12T07:58:08+00:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-02-12T07:58:14+00:00</updated-at>
      <user-id type="integer">13911</user-id>
      <version type="integer">1</version>
      <user-name>Farrel</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Whoops, here's the code block formatted correctly:
@@@
&gt;&gt; client_user = new_client_user( :first_name =&gt; nil ) # Will cause validation to fail
=&gt; #&lt;ClientUser id: nil, login: &quot;rene173744&quot;, email_address: &quot;far...@bosman.com&quot;, first_name: nil, last_name: &quot;Sim&quot;, active: true&gt;
&gt;&gt; establishment = new_establishment( :brand =&gt; brand )
=&gt; #&lt;Establishment id: nil, brand_id: 4, name: &quot;Pretoria GrandWest&quot; ,active: true&gt;
&gt;&gt; Establishment.transaction{ establishment.save!; client_user.save!  } rescue false
=&gt; false
&gt;&gt; establishment.id
=&gt; 10
&gt;&gt; establishment.new_record?
=&gt; false
&gt;&gt; client_user.id
=&gt; nil
&gt;&gt; establishment.reload
ActiveRecord::RecordNotFound: Couldn't find Establishment with ID=10
...
&gt;&gt; Establishment.count
=&gt; 4
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Whoops, here's the code block formatted correctly:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
&amp;gt;&amp;gt; client_user = new_client_user( :first_name =&amp;gt; nil ) # Will cause validation to fail
=&amp;gt; #&amp;lt;ClientUser id: nil, login: &amp;quot;rene173744&amp;quot;, email_address: &amp;quot;far...@bosman.com&amp;quot;, first_name: nil, last_name: &amp;quot;Sim&amp;quot;, active: true&amp;gt;
&amp;gt;&amp;gt; establishment = new_establishment( :brand =&amp;gt; brand )
=&amp;gt; #&amp;lt;Establishment id: nil, brand_id: 4, name: &amp;quot;Pretoria GrandWest&amp;quot; ,active: true&amp;gt;
&amp;gt;&amp;gt; Establishment.transaction{ establishment.save!; client_user.save!  } rescue false
=&amp;gt; false
&amp;gt;&amp;gt; establishment.id
=&amp;gt; 10
&amp;gt;&amp;gt; establishment.new_record?
=&amp;gt; false
&amp;gt;&amp;gt; client_user.id
=&amp;gt; nil
&amp;gt;&amp;gt; establishment.reload
ActiveRecord::RecordNotFound: Couldn't find Establishment with ID=10
...
&amp;gt;&amp;gt; Establishment.count
=&amp;gt; 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-02-12T08:01:14+00:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-02-12T08:01:16+00:00</updated-at>
      <user-id type="integer">13911</user-id>
      <version type="integer">2</version>
      <user-name>Farrel</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-05T13:40:50+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-08-05T13:40:57+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">3</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>verified</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T16:48:57+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: bugmash
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-08-09T16:48:59+01:00</updated-at>
      <user-id type="integer">24346</user-id>
      <version type="integer">4</version>
      <user-name>John Trupiano</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Failing test case patch attached.  Problem still unresolved.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Failing test case patch attached. Problem still unresolved.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T17:14:16+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-08-09T17:14:19+01:00</updated-at>
      <user-id type="integer">24346</user-id>
      <version type="integer">5</version>
      <user-name>John Trupiano</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>verified

Reproducible in Rails 2.3.2 using MySQL.</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified&lt;/p&gt;
&lt;p&gt;Reproducible in Rails 2.3.2 using MySQL.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T19:29:33+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-08-09T19:29:38+01:00</updated-at>
      <user-id type="integer">65050</user-id>
      <version type="integer">6</version>
      <user-name>David Trasbo</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>verified

+1 This is a relatively important bug. The test case fails.</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified&lt;/p&gt;
&lt;p&gt;+1 This is a relatively important bug. The test case fails.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T19:49:13+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-08-09T19:49:15+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">7</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 verified.

Ran the test, the test seems to be appropriate.  Does fail.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 verified.&lt;/p&gt;
&lt;p&gt;Ran the test, the test seems to be appropriate. Does fail.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T20:51:50+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-08-09T20:51:56+01:00</updated-at>
      <user-id type="integer">65586</user-id>
      <version type="integer">8</version>
      <user-name>Derander</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>verified in master.
+1 does seem like an important bug.</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified in master.&lt;br&gt;
+1 does seem like an important bug.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T22:58:15+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-08-09T22:58:18+01:00</updated-at>
      <user-id type="integer">30376</user-id>
      <version type="integer">9</version>
      <user-name>Hugo Peixoto</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1

Verified on master, but seems like it's going to be a fairly tricky fix.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;
&lt;p&gt;Verified on master, but seems like it's going to be a fairly
tricky fix.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T23:27:58+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-08-09T23:28:00+01:00</updated-at>
      <user-id type="integer">17315</user-id>
      <version type="integer">10</version>
      <user-name>Tristan Dunn</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Fixing this well is difficult without piling on more hacks. It points to a missing Transaction class to encapsulate this behavior, including records &quot;enrolled&quot; in the transaction.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fixing this well is difficult without piling on more hacks. It
points to a missing Transaction class to encapsulate this behavior,
including records &quot;enrolled&quot; in the transaction.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-09T23:36:58+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-08-09T23:37:02+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">11</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 verified on sqlite3 as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 verified on sqlite3 as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T01:43:08+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-09-27T01:43:12+01:00</updated-at>
      <user-id type="integer">395</user-id>
      <version type="integer">12</version>
      <user-name>Joe Van Dyk</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 verified Mysql and sqlite 3
Sounds like some kind of a GC is required when rescuing within a transaction. i traced it up until `rollback_active_record_state!` on transactions.rb, but it seems that the rollback is being preformed only on the instance that raised the exception and not all instances in the transaction as it should.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 verified Mysql and sqlite 3 Sounds like some kind of a GC is
required when rescuing within a transaction. i traced it up until
&lt;code&gt;rollback_active_record_state!&lt;/code&gt; on transactions.rb, but
it seems that the rollback is being preformed only on the instance
that raised the exception and not all instances in the transaction
as it should.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T04:48:21+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-09-27T04:48:25+01:00</updated-at>
      <user-id type="integer">36381</user-id>
      <version type="integer">13</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 verified mysql and sqlite3.

see below for an rspec example which shows the unexpected behaviour

&lt;code&gt;
require 'spec_helper'
describe Author do
  self.use_transactional_fixtures = false

  after(:each) do
    Author.destroy_all
  end

  it &quot;should behave normal when using transactions&quot; do
    my_author = nil
    begin
      Author.transaction do
        my_author = Author.new(:name =&gt; &quot;My Name&quot;)
        my_author.new_record?.should be_true
        my_author.save!
        raise &quot;some exception&quot;
      end
    rescue
    end
    Author.count.should == 0
    my_author.new_record?.should be_true
  end
end
&lt;/code&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 verified mysql and sqlite3.&lt;/p&gt;
&lt;p&gt;see below for an rspec example which shows the unexpected
behaviour&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
require 'spec_helper'&lt;br&gt;
describe Author do&lt;br&gt;
self.use_transactional_fixtures = false&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;after(:each) do&lt;/p&gt;
{mkd-extraction-c86ddf888e2dd7a0001e9ea8099dc0d0}
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;it &quot;should behave normal when using transactions&quot; do&lt;/p&gt;
{mkd-extraction-0fc41ba6a9a845baba6e5580443a47ac}
&lt;p&gt;end end&lt;br&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-04T17:38:00+00:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-12-04T17:38:03+00:00</updated-at>
      <user-id type="integer">17732</user-id>
      <version type="integer">14</version>
      <user-name>Pieter</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 breaks nested forms with validation.

Isn't it a critical issue? basically it means that transactions containing multiple objects doesn't work.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 breaks nested forms with validation.&lt;/p&gt;
&lt;p&gt;Isn't it a critical issue? basically it means that transactions
containing multiple objects doesn't work.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-09T22:07:56+00:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2009-12-09T22:07:59+00:00</updated-at>
      <user-id type="integer">79182</user-id>
      <version type="integer">15</version>
      <user-name>Amit</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/13645)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/13645&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-12T12:46:14+00:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: bugmash verified
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2010-02-12T12:46:14+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">16</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:39+01:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2010-05-04T18:48:39+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">17</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:41:23+00:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">1207</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2011-02-02T17:39:30+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">18</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:41:25+00:00</created-at>
      <creator-id type="integer">13911</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1948</number>
      <permalink>transaction-block-sets-model-id-to-non-existent-row</permalink>
      <priority type="integer">1207</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>verified</tag>
      <title>Transaction block sets model ID to non-existent row</title>
      <updated-at type="datetime">2011-02-02T17:39:08+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">19</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Farrel</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1948</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>46d11fb4516d72c0895d643e3808c893fc040c25</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-08-09T17:14:16+01:00</created-at>
      <filename>1948-failing-test-case.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">239372</id>
      <size type="integer">1683</size>
      <uploader-id type="integer">24346</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/239372/1948-failing-test-case.patch</url>
    </attachment>
  </attachments>
</ticket>
