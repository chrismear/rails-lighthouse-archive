<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-02-16T12:49:55+00:00</created-at>
  <creator-id type="integer">8551</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3970</number>
  <permalink>improve-textarea-helper-to-avoid-newline-quirk</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>bugmash</tag>
  <title>improve textarea helper to avoid newline quirk</title>
  <updated-at type="datetime">2011-02-02T17:29:00+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">9</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Fjan</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3970</url>
  <priority-name>Low</priority-name>
  <original-body>There is a little known quirk in HTML that causes a textarea tag that starts with a newline to ignore the first newline:

@@@ ruby
textarea_tag(:test1,&quot;Foobar&quot;)
textarea_tag(:test2,&quot;\r\nFoobar&quot;) # will result in a textarea with content equal to :test1 !
textarea_tag(:test3,&quot;\r\n\r\nFoobar&quot;) # will result in a text area that starts with 1 newline
@@@

This is very much an edge case, because it will only surface when _editing_ an object that starts with a newline.
The solution would be to have the textarea helper simply insert an extra newline. (Alternative would be to detect a first newline and encode it as &amp;#013;)</original-body>
  <latest-body>There is a little known quirk in HTML that causes a textarea tag that starts with a newline to ignore the first newline:

@@@ ruby
textarea_tag(:test1,&quot;Foobar&quot;)
textarea_tag(:test2,&quot;\r\nFoobar&quot;) # will result in a textarea with content equal to :test1 !
textarea_tag(:test3,&quot;\r\n\r\nFoobar&quot;) # will result in a text area that starts with 1 newline
@@@

This is very much an edge case, because it will only surface when _editing_ an object that starts with a newline.
The solution would be to have the textarea helper simply insert an extra newline. (Alternative would be to detect a first newline and encode it as &amp;#013;)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;There is a little known quirk in HTML that causes a textarea tag
that starts with a newline to ignore the first newline:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;textarea_tag(:test1,&quot;Foobar&quot;)
textarea_tag(:test2,&quot;\r\nFoobar&quot;) # will result in a textarea with content equal to :test1 !
textarea_tag(:test3,&quot;\r\n\r\nFoobar&quot;) # will result in a text area that starts with 1 newline&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is very much an edge case, because it will only surface
when &lt;em&gt;editing&lt;/em&gt; an object that starts with a newline.&lt;br&gt;
The solution would be to have the textarea helper simply insert an
extra newline. (Alternative would be to detect a first newline and
encode it as &amp;#13;)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There is a little known quirk in HTML that causes a textarea tag that starts with a newline to ignore the first newline:

@@@ ruby
textarea_tag(:test1,&quot;Foobar&quot;)
textarea_tag(:test2,&quot;\r\nFoobar&quot;) # will result in a textarea with content equal to :test1 !
textarea_tag(:test3,&quot;\r\n\r\nFoobar&quot;) # will result in a text area that starts with 1 newline
@@@

This is very much an edge case, because it will only surface when _editing_ an object that starts with a newline.
The solution would be to have the textarea helper simply insert an extra newline. (Alternative would be to detect a first newline and encode it as &amp;#013;)</body>
      <body-html>&lt;div&gt;&lt;p&gt;There is a little known quirk in HTML that causes a textarea tag
that starts with a newline to ignore the first newline:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;textarea_tag(:test1,&quot;Foobar&quot;)
textarea_tag(:test2,&quot;\r\nFoobar&quot;) # will result in a textarea with content equal to :test1 !
textarea_tag(:test3,&quot;\r\n\r\nFoobar&quot;) # will result in a text area that starts with 1 newline&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is very much an edge case, because it will only surface
when &lt;em&gt;editing&lt;/em&gt; an object that starts with a newline.&lt;br&gt;
The solution would be to have the textarea helper simply insert an
extra newline. (Alternative would be to detect a first newline and
encode it as &amp;#13;)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-16T12:49:55+00:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3970</number>
      <permalink>improve-textarea-helper-to-avoid-newline-quirk</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>improve textarea helper to avoid newline quirk</title>
      <updated-at type="datetime">2010-02-16T12:49:58+00:00</updated-at>
      <user-id type="integer">8551</user-id>
      <version type="integer">1</version>
      <user-name>Fjan</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3970</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I was intrigued by this ticket and tested it out and yes, the behaviour described above does occur for textareas in HTML (not just in Rails). So why do browsers behave in this way? According to the HTML 4.01 specification ([Appendix B.3.1](http://www.w3.org/TR/REC-html40/appendix/notes.html#h-B.3.1)):

&gt; SGML specifies that a line break immediately following a start tag must be ignored, as must a line break immediately before an end tag. This applies to all HTML elements without exception.

So, this behaviour is the &quot;correct&quot; behaviour. If the text_area_tag helper were changed then it would be behaving differently to how a normal textarea tag behaves.

Based on this, I would suggest this ticket be marked as invalid.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was intrigued by this ticket and tested it out and yes, the
behaviour described above does occur for textareas in HTML (not
just in Rails). So why do browsers behave in this way? According to
the HTML 4.01 specification (&lt;a href=
&quot;http://www.w3.org/TR/REC-html40/appendix/notes.html#h-B.3.1&quot;&gt;Appendix
B.3.1&lt;/a&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SGML specifies that a line break immediately following a start
tag must be ignored, as must a line break immediately before an end
tag. This applies to all HTML elements without exception.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, this behaviour is the &quot;correct&quot; behaviour. If the
text_area_tag helper were changed then it would be behaving
differently to how a normal textarea tag behaves.&lt;/p&gt;
&lt;p&gt;Based on this, I would suggest this ticket be marked as
invalid.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T13:42:19+01:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3970</number>
      <permalink>improve-textarea-helper-to-avoid-newline-quirk</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>improve textarea helper to avoid newline quirk</title>
      <updated-at type="datetime">2010-04-21T13:42:21+01:00</updated-at>
      <user-id type="integer">23547</user-id>
      <version type="integer">2</version>
      <user-name>Michael MacDonald</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3970</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Your observation is correct, but I don't follow your conclusion. If the correct behaviour is to ignore starting line breaks then how would adding an (ignored) line break make it behave differently? It would behave exactly as normal (and I've tested it does so on all common browsers).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Your observation is correct, but I don't follow your conclusion.
If the correct behaviour is to ignore starting line breaks then how
would adding an (ignored) line break make it behave differently? It
would behave exactly as normal (and I've tested it does so on all
common browsers).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-21T14:20:36+01:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3970</number>
      <permalink>improve-textarea-helper-to-avoid-newline-quirk</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>improve textarea helper to avoid newline quirk</title>
      <updated-at type="datetime">2010-04-21T14:20:41+01:00</updated-at>
      <user-id type="integer">8551</user-id>
      <version type="integer">3</version>
      <user-name>Fjan</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3970</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I took another look at this and I think I understand what you're trying to achieve (or more specifically, why you want this change). If the data you have is &quot;/r/nFoobar&quot;, when that is presented in a textarea the newline is ignored and not displayed. But if you were to save the form (without altering the textarea) the newline gets stripped and now your field's data is simply &quot;Foobar&quot;. Basically, if the user wishes to insert a newline at the start of a textarea, it gets stripped out.

My argument is that, this behaviour is exactly the same for standard html textarea tags so the rails helper should mimic that behaviour exactly. If you were to replace the rails helper with a straight html textarea, your behaviour would be different. HTML textareas that begin with a newline get stripped.

Having said all this, I don't see any negative ramification of inserting a newline at the start of a textarea's content as, like you said, it will simply get ignored and is the equivalent of placing the content on a newline in the source. Ultimately, it comes down to whether a rails helper should output the exact equivalent of an html tag or should it improve upon the html tag to overcome quirks such as this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I took another look at this and I think I understand what you're
trying to achieve (or more specifically, why you want this change).
If the data you have is &quot;/r/nFoobar&quot;, when that is presented in a
textarea the newline is ignored and not displayed. But if you were
to save the form (without altering the textarea) the newline gets
stripped and now your field's data is simply &quot;Foobar&quot;. Basically,
if the user wishes to insert a newline at the start of a textarea,
it gets stripped out.&lt;/p&gt;
&lt;p&gt;My argument is that, this behaviour is exactly the same for
standard html textarea tags so the rails helper should mimic that
behaviour exactly. If you were to replace the rails helper with a
straight html textarea, your behaviour would be different. HTML
textareas that begin with a newline get stripped.&lt;/p&gt;
&lt;p&gt;Having said all this, I don't see any negative ramification of
inserting a newline at the start of a textarea's content as, like
you said, it will simply get ignored and is the equivalent of
placing the content on a newline in the source. Ultimately, it
comes down to whether a rails helper should output the exact
equivalent of an html tag or should it improve upon the html tag to
overcome quirks such as this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-10T14:24:55+01:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3970</number>
      <permalink>improve-textarea-helper-to-avoid-newline-quirk</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>improve textarea helper to avoid newline quirk</title>
      <updated-at type="datetime">2010-05-10T14:24:58+01:00</updated-at>
      <user-id type="integer">23547</user-id>
      <version type="integer">4</version>
      <user-name>Michael MacDonald</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3970</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14998</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I guess the reason the SGML spec absorbs the first newline is so that handwritten markup can look prettier; a text area created by rails looks messy in the source code with the first line appearing right after the starting tag and the rest of the lines starting at the left hand column. Handwritten markup would have been the usual way to work when the spec was designed. So you could argue that by inserting the extra new line you are writing the HTML the way it was originally intended, and that the Rails way of outputting everything without new lines is what is causing the quirk.

But that's just a glass is half full / half empty discussion. I simply have a need for my users to allow text areas to start with new lines and would like to avoid monkey patching the rails helpers :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I guess the reason the SGML spec absorbs the first newline is so
that handwritten markup can look prettier; a text area created by
rails looks messy in the source code with the first line appearing
right after the starting tag and the rest of the lines starting at
the left hand column. Handwritten markup would have been the usual
way to work when the spec was designed. So you could argue that by
inserting the extra new line you are writing the HTML the way it
was originally intended, and that the Rails way of outputting
everything without new lines is what is causing the quirk.&lt;/p&gt;
&lt;p&gt;But that's just a glass is half full / half empty discussion. I
simply have a need for my users to allow text areas to start with
new lines and would like to avoid monkey patching the rails helpers
:-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-10T15:10:47+01:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3970</number>
      <permalink>improve-textarea-helper-to-avoid-newline-quirk</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>improve textarea helper to avoid newline quirk</title>
      <updated-at type="datetime">2010-05-10T15:10:49+01:00</updated-at>
      <user-id type="integer">8551</user-id>
      <version type="integer">5</version>
      <user-name>Fjan</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3970</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name>Ryan Bigg</assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-14T00:49:45+01:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:assigned_user: 14998
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3970</number>
      <permalink>improve-textarea-helper-to-avoid-newline-quirk</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash</tag>
      <title>improve textarea helper to avoid newline quirk</title>
      <updated-at type="datetime">2010-05-14T00:49:49+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">6</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3970</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-14T00:49:54+01:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3970</number>
      <permalink>improve-textarea-helper-to-avoid-newline-quirk</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash</tag>
      <title>improve textarea helper to avoid newline quirk</title>
      <updated-at type="datetime">2010-05-14T00:49:59+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">7</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3970</url>
      <priority-name nil="true"></priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:39:10+00:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3970</number>
      <permalink>improve-textarea-helper-to-avoid-newline-quirk</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bugmash</tag>
      <title>improve textarea helper to avoid newline quirk</title>
      <updated-at type="datetime">2011-02-02T17:28:28+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3970</url>
      <priority-name>Low</priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:39:11+00:00</created-at>
      <creator-id type="integer">8551</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3970</number>
      <permalink>improve-textarea-helper-to-avoid-newline-quirk</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>bugmash</tag>
      <title>improve textarea helper to avoid newline quirk</title>
      <updated-at type="datetime">2011-02-02T17:29:00+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Fjan</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3970</url>
      <priority-name>Low</priority-name>
      <assigned-user-name nil="true"></assigned-user-name>
    </version>
  </versions>
</ticket>
