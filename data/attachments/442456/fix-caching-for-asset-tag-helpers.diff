From 478f847935da15473cef693d2a1716662ebe89e3 Mon Sep 17 00:00:00 2001
From: Denis Odorcic <denis.odorcic@gmail.com>
Date: Thu, 11 Mar 2010 00:47:10 -0500
Subject: [PATCH] Made asset_tag_helper use config.perform_caching instead of ActionController::Base.perform_caching

---
 .../lib/action_view/helpers/asset_tag_helper.rb    |   28 ++++++++--------
 actionpack/test/template/asset_tag_helper_test.rb  |   36 ++++++++++----------
 2 files changed, 32 insertions(+), 32 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/asset_tag_helper.rb b/actionpack/lib/action_view/helpers/asset_tag_helper.rb
index de3d61e..67ee4a8 100644
--- a/actionpack/lib/action_view/helpers/asset_tag_helper.rb
+++ b/actionpack/lib/action_view/helpers/asset_tag_helper.rb
@@ -242,12 +242,12 @@ module ActionView
       # == Caching multiple javascripts into one
       #
       # You can also cache multiple javascripts into one file, which requires less HTTP connections to download and can better be
-      # compressed by gzip (leading to faster transfers). Caching will only happen if ActionController::Base.perform_caching
+      # compressed by gzip (leading to faster transfers). Caching will only happen if config.perform_caching
       # is set to <tt>true</tt> (which is the case by default for the Rails production environment, but not for the development
       # environment).
       #
       # ==== Examples
-      #   javascript_include_tag :all, :cache => true # when ActionController::Base.perform_caching is false =>
+      #   javascript_include_tag :all, :cache => true # when config.perform_caching is false =>
       #     <script type="text/javascript" src="/javascripts/prototype.js"></script>
       #     <script type="text/javascript" src="/javascripts/effects.js"></script>
       #     ...
@@ -255,15 +255,15 @@ module ActionView
       #     <script type="text/javascript" src="/javascripts/shop.js"></script>
       #     <script type="text/javascript" src="/javascripts/checkout.js"></script>
       #
-      #   javascript_include_tag :all, :cache => true # when ActionController::Base.perform_caching is true =>
+      #   javascript_include_tag :all, :cache => true # when config.perform_caching is true =>
       #     <script type="text/javascript" src="/javascripts/all.js"></script>
       #
-      #   javascript_include_tag "prototype", "cart", "checkout", :cache => "shop" # when ActionController::Base.perform_caching is false =>
+      #   javascript_include_tag "prototype", "cart", "checkout", :cache => "shop" # when config.perform_caching is false =>
       #     <script type="text/javascript" src="/javascripts/prototype.js"></script>
       #     <script type="text/javascript" src="/javascripts/cart.js"></script>
       #     <script type="text/javascript" src="/javascripts/checkout.js"></script>
       #
-      #   javascript_include_tag "prototype", "cart", "checkout", :cache => "shop" # when ActionController::Base.perform_caching is true =>
+      #   javascript_include_tag "prototype", "cart", "checkout", :cache => "shop" # when config.perform_caching is true =>
       #     <script type="text/javascript" src="/javascripts/shop.js"></script>
       #
       # The <tt>:recursive</tt> option is also available for caching:
@@ -275,11 +275,11 @@ module ActionView
         cache   = concat || options.delete("cache")
         recursive = options.delete("recursive")
 
-        if concat || (ActionController::Base.perform_caching && cache)
+        if concat || (config.perform_caching && cache)
           joined_javascript_name = (cache == true ? "all" : cache) + ".js"
           joined_javascript_path = File.join(joined_javascript_name[/^#{File::SEPARATOR}/] ? config.assets_dir : config.javascripts_dir, joined_javascript_name)
 
-          unless ActionController::Base.perform_caching && File.exists?(joined_javascript_path)
+          unless config.perform_caching && File.exists?(joined_javascript_path)
             write_asset_file_contents(joined_javascript_path, compute_javascript_paths(sources, recursive))
           end
           javascript_src_tag(joined_javascript_name, options)
@@ -390,25 +390,25 @@ module ActionView
       # == Caching multiple stylesheets into one
       #
       # You can also cache multiple stylesheets into one file, which requires less HTTP connections and can better be
-      # compressed by gzip (leading to faster transfers). Caching will only happen if ActionController::Base.perform_caching
+      # compressed by gzip (leading to faster transfers). Caching will only happen if config.perform_caching
       # is set to true (which is the case by default for the Rails production environment, but not for the development
       # environment). Examples:
       #
       # ==== Examples
-      #   stylesheet_link_tag :all, :cache => true # when ActionController::Base.perform_caching is false =>
+      #   stylesheet_link_tag :all, :cache => true # when config.perform_caching is false =>
       #     <link href="/stylesheets/style1.css"  media="screen" rel="stylesheet" type="text/css" />
       #     <link href="/stylesheets/styleB.css"  media="screen" rel="stylesheet" type="text/css" />
       #     <link href="/stylesheets/styleX2.css" media="screen" rel="stylesheet" type="text/css" />
       #
-      #   stylesheet_link_tag :all, :cache => true # when ActionController::Base.perform_caching is true =>
+      #   stylesheet_link_tag :all, :cache => true # when config.perform_caching is true =>
       #     <link href="/stylesheets/all.css"  media="screen" rel="stylesheet" type="text/css" />
       #
-      #   stylesheet_link_tag "shop", "cart", "checkout", :cache => "payment" # when ActionController::Base.perform_caching is false =>
+      #   stylesheet_link_tag "shop", "cart", "checkout", :cache => "payment" # when config.perform_caching is false =>
       #     <link href="/stylesheets/shop.css"  media="screen" rel="stylesheet" type="text/css" />
       #     <link href="/stylesheets/cart.css"  media="screen" rel="stylesheet" type="text/css" />
       #     <link href="/stylesheets/checkout.css" media="screen" rel="stylesheet" type="text/css" />
       #
-      #   stylesheet_link_tag "shop", "cart", "checkout", :cache => "payment" # when ActionController::Base.perform_caching is true =>
+      #   stylesheet_link_tag "shop", "cart", "checkout", :cache => "payment" # when config.perform_caching is true =>
       #     <link href="/stylesheets/payment.css"  media="screen" rel="stylesheet" type="text/css" />
       #
       # The <tt>:recursive</tt> option is also available for caching:
@@ -426,11 +426,11 @@ module ActionView
         cache   = concat || options.delete("cache")
         recursive = options.delete("recursive")
 
-        if concat || (ActionController::Base.perform_caching && cache)
+        if concat || (config.perform_caching && cache)
           joined_stylesheet_name = (cache == true ? "all" : cache) + ".css"
           joined_stylesheet_path = File.join(joined_stylesheet_name[/^#{File::SEPARATOR}/] ? config.assets_dir : config.stylesheets_dir, joined_stylesheet_name)
 
-          unless ActionController::Base.perform_caching && File.exists?(joined_stylesheet_path)
+          unless config.perform_caching && File.exists?(joined_stylesheet_path)
             write_asset_file_contents(joined_stylesheet_path, compute_stylesheet_paths(sources, recursive))
           end
           stylesheet_tag(joined_stylesheet_name, options)
diff --git a/actionpack/test/template/asset_tag_helper_test.rb b/actionpack/test/template/asset_tag_helper_test.rb
index 50c3ab0..8c3859c 100644
--- a/actionpack/test/template/asset_tag_helper_test.rb
+++ b/actionpack/test/template/asset_tag_helper_test.rb
@@ -50,7 +50,7 @@ class AssetTagHelperTest < ActionView::TestCase
   end
 
   def teardown
-    ActionController::Base.perform_caching = false
+    config.perform_caching = false
     ENV.delete('RAILS_ASSET_ID')
   end
 
@@ -419,7 +419,7 @@ class AssetTagHelperTest < ActionView::TestCase
   def test_caching_javascript_include_tag_when_caching_on
     ENV["RAILS_ASSET_ID"] = ""
     @controller.config.asset_host = 'http://a0.example.com'
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_dom_equal(
       %(<script src="http://a0.example.com/javascripts/all.js" type="text/javascript"></script>),
@@ -451,7 +451,7 @@ class AssetTagHelperTest < ActionView::TestCase
   def test_caching_javascript_include_tag_when_caching_on_with_proc_asset_host
     ENV['RAILS_ASSET_ID'] = ''
     @controller.config.asset_host = Proc.new { |source| "http://a#{source.length}.example.com" }
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_equal '/javascripts/scripts.js'.length, 23
     assert_dom_equal(
@@ -474,7 +474,7 @@ class AssetTagHelperTest < ActionView::TestCase
         "#{request.protocol}assets#{source.length}.example.com"
       end
     }
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_equal '/javascripts/vanilla.js'.length, 23
     assert_dom_equal(
@@ -514,7 +514,7 @@ class AssetTagHelperTest < ActionView::TestCase
       end
     end.new
 
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_equal '/javascripts/vanilla.js'.length, 23
     assert_dom_equal(
@@ -545,7 +545,7 @@ class AssetTagHelperTest < ActionView::TestCase
   def test_caching_javascript_include_tag_when_caching_on_and_using_subdirectory
     ENV["RAILS_ASSET_ID"] = ""
     @controller.config.asset_host = 'http://a%d.example.com'
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     hash = '/javascripts/cache/money.js'.hash % 4
     assert_dom_equal(
@@ -561,7 +561,7 @@ class AssetTagHelperTest < ActionView::TestCase
   def test_caching_javascript_include_tag_with_all_and_recursive_puts_defaults_at_the_start_of_the_file
     ENV["RAILS_ASSET_ID"] = ""
     @controller.config.asset_host = 'http://a0.example.com'
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_dom_equal(
       %(<script src="http://a0.example.com/javascripts/combined.js" type="text/javascript"></script>),
@@ -582,7 +582,7 @@ class AssetTagHelperTest < ActionView::TestCase
   def test_caching_javascript_include_tag_with_all_puts_defaults_at_the_start_of_the_file
     ENV["RAILS_ASSET_ID"] = ""
     @controller.config.asset_host = 'http://a0.example.com'
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_dom_equal(
       %(<script src="http://a0.example.com/javascripts/combined.js" type="text/javascript"></script>),
@@ -603,7 +603,7 @@ class AssetTagHelperTest < ActionView::TestCase
   def test_caching_javascript_include_tag_with_relative_url_root
     ENV["RAILS_ASSET_ID"] = ""
     @controller.config.relative_url_root = "/collaboration/hieraki"
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_dom_equal(
       %(<script src="/collaboration/hieraki/javascripts/all.js" type="text/javascript"></script>),
@@ -626,7 +626,7 @@ class AssetTagHelperTest < ActionView::TestCase
 
   def test_caching_javascript_include_tag_when_caching_off
     ENV["RAILS_ASSET_ID"] = ""
-    ActionController::Base.perform_caching = false
+    config.perform_caching = false
 
     assert_dom_equal(
       %(<script src="/javascripts/prototype.js" type="text/javascript"></script>\n<script src="/javascripts/effects.js" type="text/javascript"></script>\n<script src="/javascripts/dragdrop.js" type="text/javascript"></script>\n<script src="/javascripts/controls.js" type="text/javascript"></script>\n<script src="/javascripts/application.js" type="text/javascript"></script>\n<script src="/javascripts/bank.js" type="text/javascript"></script>\n<script src="/javascripts/robber.js" type="text/javascript"></script>\n<script src="/javascripts/version.1.0.js" type="text/javascript"></script>),
@@ -655,7 +655,7 @@ class AssetTagHelperTest < ActionView::TestCase
 
   def test_caching_javascript_include_tag_when_caching_on_and_missing_javascript_file
     ENV["RAILS_ASSET_ID"] = ""
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_raise(Errno::ENOENT) {
       javascript_include_tag('bank', 'robber', 'missing_security_guard', :cache => true)
@@ -672,7 +672,7 @@ class AssetTagHelperTest < ActionView::TestCase
 
   def test_caching_javascript_include_tag_when_caching_off_and_missing_javascript_file
     ENV["RAILS_ASSET_ID"] = ""
-    ActionController::Base.perform_caching = false
+    config.perform_caching = false
 
     assert_raise(Errno::ENOENT) {
       javascript_include_tag('bank', 'robber', 'missing_security_guard', :cache => true)
@@ -690,7 +690,7 @@ class AssetTagHelperTest < ActionView::TestCase
   def test_caching_stylesheet_link_tag_when_caching_on
     ENV["RAILS_ASSET_ID"] = ""
     @controller.config.asset_host = 'http://a0.example.com'
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_dom_equal(
       %(<link href="http://a0.example.com/stylesheets/all.css" media="screen" rel="stylesheet" type="text/css" />),
@@ -757,7 +757,7 @@ class AssetTagHelperTest < ActionView::TestCase
 
   def test_caching_stylesheet_link_tag_when_caching_on_and_missing_css_file
     ENV["RAILS_ASSET_ID"] = ""
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_raise(Errno::ENOENT) {
       stylesheet_link_tag('bank', 'robber', 'missing_security_guard', :cache => true)
@@ -778,7 +778,7 @@ class AssetTagHelperTest < ActionView::TestCase
 
   def test_caching_stylesheet_link_tag_when_caching_off_and_missing_css_file
     ENV["RAILS_ASSET_ID"] = ""
-    ActionController::Base.perform_caching = false
+    config.perform_caching = false
 
     assert_raise(Errno::ENOENT) {
       stylesheet_link_tag('bank', 'robber', 'missing_security_guard', :cache => true)
@@ -800,7 +800,7 @@ class AssetTagHelperTest < ActionView::TestCase
   def test_caching_stylesheet_link_tag_when_caching_on_with_proc_asset_host
     ENV["RAILS_ASSET_ID"] = ""
     @controller.config.asset_host = Proc.new { |source| "http://a#{source.length}.example.com" }
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_equal '/stylesheets/styles.css'.length, 23
     assert_dom_equal(
@@ -817,7 +817,7 @@ class AssetTagHelperTest < ActionView::TestCase
   def test_caching_stylesheet_link_tag_with_relative_url_root
     ENV["RAILS_ASSET_ID"] = ""
     @controller.config.relative_url_root = "/collaboration/hieraki"
-    ActionController::Base.perform_caching = true
+    config.perform_caching = true
 
     assert_dom_equal(
       %(<link href="/collaboration/hieraki/stylesheets/all.css" media="screen" rel="stylesheet" type="text/css" />),
@@ -842,7 +842,7 @@ class AssetTagHelperTest < ActionView::TestCase
 
   def test_caching_stylesheet_include_tag_when_caching_off
     ENV["RAILS_ASSET_ID"] = ""
-    ActionController::Base.perform_caching = false
+    config.perform_caching = false
 
     assert_dom_equal(
       %(<link href="/stylesheets/bank.css" media="screen" rel="stylesheet" type="text/css" />\n<link href="/stylesheets/robber.css" media="screen" rel="stylesheet" type="text/css" />\n<link href="/stylesheets/version.1.0.css" media="screen" rel="stylesheet" type="text/css" />),
-- 
1.6.0.6

