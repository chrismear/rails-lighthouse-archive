<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-05-20T15:01:06+01:00</created-at>
  <creator-id type="integer">22033</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4660</number>
  <permalink>find-in-batches-when-destroying-dependent-associations</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>batches destroy</tag>
  <title>Find in batches when destroying dependent associations</title>
  <updated-at type="datetime">2011-04-06T17:20:39+01:00</updated-at>
  <user-id type="integer">25657</user-id>
  <version type="integer">6</version>
  <user-name>swalterd</user-name>
  <creator-name>Ben Johnson</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4660</url>
  <priority-name>Low</priority-name>
  <original-body>This is more of an idea I wanted to toss up, if people like it I'll work on a commit. But find_each and find_in_batches are both in ActiveRecord. Wouldn't it make sense for the automatic hooks on destroying associations to use this? Instead of trying to load up all of the objects at once and destroy them.</original-body>
  <latest-body>This is more of an idea I wanted to toss up, if people like it I'll work on a commit. But find_each and find_in_batches are both in ActiveRecord. Wouldn't it make sense for the automatic hooks on destroying associations to use this? Instead of trying to load up all of the objects at once and destroy them.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is more of an idea I wanted to toss up, if people like it
I'll work on a commit. But find_each and find_in_batches are both
in ActiveRecord. Wouldn't it make sense for the automatic hooks on
destroying associations to use this? Instead of trying to load up
all of the objects at once and destroy them.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is more of an idea I wanted to toss up, if people like it I'll work on a commit. But find_each and find_in_batches are both in ActiveRecord. Wouldn't it make sense for the automatic hooks on destroying associations to use this? Instead of trying to load up all of the objects at once and destroy them.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is more of an idea I wanted to toss up, if people like it
I'll work on a commit. But find_each and find_in_batches are both
in ActiveRecord. Wouldn't it make sense for the automatic hooks on
destroying associations to use this? Instead of trying to load up
all of the objects at once and destroy them.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-20T15:01:06+01:00</created-at>
      <creator-id type="integer">22033</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4660</number>
      <permalink>find-in-batches-when-destroying-dependent-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>batches destroy</tag>
      <title>Find in batches when destroying dependent associations</title>
      <updated-at type="datetime">2010-05-20T15:01:08+01:00</updated-at>
      <user-id type="integer">22033</user-id>
      <version type="integer">1</version>
      <user-name>Ben Johnson</user-name>
      <creator-name>Ben Johnson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4660</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-21T00:42:16+01:00</created-at>
      <creator-id type="integer">22033</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4660</number>
      <permalink>find-in-batches-when-destroying-dependent-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>batches destroy</tag>
      <title>Find in batches when destroying dependent associations</title>
      <updated-at type="datetime">2010-05-21T00:42:21+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">2</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Ben Johnson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4660</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:38:32+00:00</created-at>
      <creator-id type="integer">22033</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4660</number>
      <permalink>find-in-batches-when-destroying-dependent-associations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>batches destroy</tag>
      <title>Find in batches when destroying dependent associations</title>
      <updated-at type="datetime">2011-02-02T17:25:34+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Ben Johnson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4660</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:38:34+00:00</created-at>
      <creator-id type="integer">22033</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4660</number>
      <permalink>find-in-batches-when-destroying-dependent-associations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>batches destroy</tag>
      <title>Find in batches when destroying dependent associations</title>
      <updated-at type="datetime">2011-02-02T17:25:31+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Ben Johnson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4660</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:06:13+00:00</created-at>
      <creator-id type="integer">22033</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4660</number>
      <permalink>find-in-batches-when-destroying-dependent-associations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>batches destroy</tag>
      <title>Find in batches when destroying dependent associations</title>
      <updated-at type="datetime">2011-03-26T02:25:14+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">5</version>
      <user-name>bingbing</user-name>
      <creator-name>Ben Johnson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4660</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I would like something like this in Rails.  Either as the default for dependent =&gt; :destroy or as an another dependent option.  Like :destroy_in_batches.  For an object that has a lot of associated objects, and when each of those objects has many associated objects, the memory cost of loading all of them into before your run the destroy is high.  Right now to solve the problem we do two things.  First we do a soft delete of the object and then kick off a delayed job to do the real delete.  But then we also have to create before_destroy methods for some associations for speed and memory consumption reasons.  These then do the batch destroy.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I would like something like this in Rails. Either as the default
for dependent =&amp;gt; :destroy or as an another dependent option.
Like :destroy_in_batches. For an object that has a lot of
associated objects, and when each of those objects has many
associated objects, the memory cost of loading all of them into
before your run the destroy is high. Right now to solve the problem
we do two things. First we do a soft delete of the object and then
kick off a delayed job to do the real delete. But then we also have
to create before_destroy methods for some associations for speed
and memory consumption reasons. These then do the batch
destroy.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-06T17:20:33+01:00</created-at>
      <creator-id type="integer">22033</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4660</number>
      <permalink>find-in-batches-when-destroying-dependent-associations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>batches destroy</tag>
      <title>Find in batches when destroying dependent associations</title>
      <updated-at type="datetime">2011-04-06T17:20:39+01:00</updated-at>
      <user-id type="integer">25657</user-id>
      <version type="integer">6</version>
      <user-name>swalterd</user-name>
      <creator-name>Ben Johnson</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4660</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
