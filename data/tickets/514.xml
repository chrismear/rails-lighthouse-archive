<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-30T11:52:16+01:00</created-at>
  <creator-id type="integer">10510</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">514</number>
  <permalink>rails-configuration-default_cache_store-not-called</permalink>
  <priority type="integer">11</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.1 activesupport bug railties</tag>
  <title>Rails::Configuration default_cache_store not called</title>
  <updated-at type="datetime">2008-11-22T18:58:10+00:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">3</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Rob Anderton</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/514</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>The Rails::Configuration class initialize method does not call the default_cache_store method to assign a default value to the cache_store attribute.

If no cache store is explicitly configured then later, when the global cache is actually initialised (in the initialize_cache method of Rails::Initializer) and because the configuration.cache_store attribute is nil, then the default cache store is always a MemoryStore regardless of whether or not the tmp/cache directory exists.</original-body>
  <latest-body>The Rails::Configuration class initialize method does not call the default_cache_store method to assign a default value to the cache_store attribute.

If no cache store is explicitly configured then later, when the global cache is actually initialised (in the initialize_cache method of Rails::Initializer) and because the configuration.cache_store attribute is nil, then the default cache store is always a MemoryStore regardless of whether or not the tmp/cache directory exists.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
The Rails::Configuration class initialize method does not call the default_cache_store method to assign a default value to the cache_store attribute.
&lt;/p&gt;&lt;p&gt;
If no cache store is explicitly configured then later, when the global cache is actually initialised (in the initialize_cache method of Rails::Initializer) and because the configuration.cache_store attribute is nil, then the default cache store is always a MemoryStore regardless of whether or not the tmp/cache directory exists.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The Rails::Configuration class initialize method does not call the default_cache_store method to assign a default value to the cache_store attribute.

If no cache store is explicitly configured then later, when the global cache is actually initialised (in the initialize_cache method of Rails::Initializer) and because the configuration.cache_store attribute is nil, then the default cache store is always a MemoryStore regardless of whether or not the tmp/cache directory exists.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The Rails::Configuration class initialize method does not call the default_cache_store method to assign a default value to the cache_store attribute.
&lt;/p&gt;&lt;p&gt;
If no cache store is explicitly configured then later, when the global cache is actually initialised (in the initialize_cache method of Rails::Initializer) and because the configuration.cache_store attribute is nil, then the default cache store is always a MemoryStore regardless of whether or not the tmp/cache directory exists.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-30T11:52:16+01:00</created-at>
      <creator-id type="integer">10510</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">514</number>
      <permalink>rails-configuration-default_cache_store-not-called</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activesupport bug railties</tag>
      <title>Rails::Configuration default_cache_store not called</title>
      <updated-at type="datetime">2008-06-30T11:52:16+01:00</updated-at>
      <user-id type="integer">10510</user-id>
      <version type="integer">1</version>
      <user-name>Rob Anderton</user-name>
      <creator-name>Rob Anderton</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/514</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1

I recently run into this issue, because Rails 2.1 kept storing my cache in memory, instead of tmp/cache and I had to debug extensively.

(I wanted to preserve cache content between deploys on a particular ActiveResource-based application. No need to flush precious cached content because of some minor change in CSS, better done with precision aim of Cap/Rake task).</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;I recently run into this issue, because Rails 2.1 kept storing my cache in memory, instead of tmp/cache and I had to debug extensively.&lt;/p&gt;

&lt;p&gt;(I wanted to preserve cache content between deploys on a particular ActiveResource-based application. No need to flush precious cached content because of some minor change in CSS, better done with precision aim of Cap/Rake task).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-08-19T10:23:34+01:00</created-at>
      <creator-id type="integer">10510</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activesupport bug railties
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">514</number>
      <permalink>rails-configuration-default_cache_store-not-called</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1 activesupport bug railties</tag>
      <title>Rails::Configuration default_cache_store not called</title>
      <updated-at type="datetime">2008-08-19T10:23:34+01:00</updated-at>
      <user-id type="integer">16364</user-id>
      <version type="integer">2</version>
      <user-name>Karel Mina&#345;&#237;k</user-name>
      <creator-name>Rob Anderton</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/514</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Looks like this was added.

@@@ ruby
    def initialize_cache
      unless defined?(RAILS_CACHE)
        silence_warnings { Object.const_set &quot;RAILS_CACHE&quot;, ActiveSupport::Cache.lookup_store(configuration.cache_store) }
      end
    end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks like this was added.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
    def initialize_cache
      unless defined?(RAILS_CACHE)
        silence_warnings { Object.const_set &amp;quot;RAILS_CACHE&amp;quot;, ActiveSupport::Cache.lookup_store(configuration.cache_store) }
      end
    end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-22T18:58:05+00:00</created-at>
      <creator-id type="integer">10510</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">514</number>
      <permalink>rails-configuration-default_cache_store-not-called</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.1 activesupport bug railties</tag>
      <title>Rails::Configuration default_cache_store not called</title>
      <updated-at type="datetime">2008-11-22T18:58:10+00:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">3</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Rob Anderton</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/514</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
