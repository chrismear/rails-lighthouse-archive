<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-03-16T03:59:08+00:00</created-at>
  <creator-id type="integer">90872</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4188</number>
  <permalink>class-cache-should-reload-in-each-user-session</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>&quot;class cache&quot; production</tag>
  <title>class cache should reload in each user session</title>
  <updated-at type="datetime">2010-03-27T14:02:35+00:00</updated-at>
  <user-id type="integer">19965</user-id>
  <version type="integer">2</version>
  <user-name>Jos&#233; Valim</user-name>
  <creator-name>yachi</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4188</url>
  <priority-name>Low</priority-name>
  <original-body>Let's say i have to set the user's timezone in Time.zone when the user visit the site, but when an anonymous user comes, the timezone of the last user is still stored in Time class. So now i have to reset the Time.zone in every session in production mode. Is is an expected behaviour?
And another issue i hit about class cache is that i have some controllers that users could access without email confirmation after registration and the boolean of confirmation check is stored in UserSession(Authlogic) class. So once a user trigger the disable_confirmation_check, other users could access all the site without email confirmation.
These do not happen in development mode since classes are reloaded every time. It may cause security issues if developers are not aware of what they do are involved with class variables which is only persistence in production mode.</original-body>
  <latest-body>Let's say i have to set the user's timezone in Time.zone when the user visit the site, but when an anonymous user comes, the timezone of the last user is still stored in Time class. So now i have to reset the Time.zone in every session in production mode. Is is an expected behaviour?
And another issue i hit about class cache is that i have some controllers that users could access without email confirmation after registration and the boolean of confirmation check is stored in UserSession(Authlogic) class. So once a user trigger the disable_confirmation_check, other users could access all the site without email confirmation.
These do not happen in development mode since classes are reloaded every time. It may cause security issues if developers are not aware of what they do are involved with class variables which is only persistence in production mode.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Let's say i have to set the user's timezone in Time.zone when
the user visit the site, but when an anonymous user comes, the
timezone of the last user is still stored in Time class. So now i
have to reset the Time.zone in every session in production mode. Is
is an expected behaviour?&lt;br&gt;
And another issue i hit about class cache is that i have some
controllers that users could access without email confirmation
after registration and the boolean of confirmation check is stored
in UserSession(Authlogic) class. So once a user trigger the
disable_confirmation_check, other users could access all the site
without email confirmation.&lt;br&gt;
These do not happen in development mode since classes are reloaded
every time. It may cause security issues if developers are not
aware of what they do are involved with class variables which is
only persistence in production mode.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Let's say i have to set the user's timezone in Time.zone when the user visit the site, but when an anonymous user comes, the timezone of the last user is still stored in Time class. So now i have to reset the Time.zone in every session in production mode. Is is an expected behaviour?
And another issue i hit about class cache is that i have some controllers that users could access without email confirmation after registration and the boolean of confirmation check is stored in UserSession(Authlogic) class. So once a user trigger the disable_confirmation_check, other users could access all the site without email confirmation.
These do not happen in development mode since classes are reloaded every time. It may cause security issues if developers are not aware of what they do are involved with class variables which is only persistence in production mode.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Let's say i have to set the user's timezone in Time.zone when
the user visit the site, but when an anonymous user comes, the
timezone of the last user is still stored in Time class. So now i
have to reset the Time.zone in every session in production mode. Is
is an expected behaviour?&lt;br&gt;
And another issue i hit about class cache is that i have some
controllers that users could access without email confirmation
after registration and the boolean of confirmation check is stored
in UserSession(Authlogic) class. So once a user trigger the
disable_confirmation_check, other users could access all the site
without email confirmation.&lt;br&gt;
These do not happen in development mode since classes are reloaded
every time. It may cause security issues if developers are not
aware of what they do are involved with class variables which is
only persistence in production mode.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-16T03:59:08+00:00</created-at>
      <creator-id type="integer">90872</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4188</number>
      <permalink>class-cache-should-reload-in-each-user-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;class cache&quot; production</tag>
      <title>class cache should reload in each user session</title>
      <updated-at type="datetime">2010-03-16T03:59:09+00:00</updated-at>
      <user-id type="integer">90872</user-id>
      <version type="integer">1</version>
      <user-name>yachi</user-name>
      <creator-name>yachi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4188</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes, those are the expected behavior. If you store such values in the class, those behaviors will trigger. You need to work on your implementation.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes, those are the expected behavior. If you store such values
in the class, those behaviors will trigger. You need to work on
your implementation.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-27T14:02:33+00:00</created-at>
      <creator-id type="integer">90872</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4188</number>
      <permalink>class-cache-should-reload-in-each-user-session</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>&quot;class cache&quot; production</tag>
      <title>class cache should reload in each user session</title>
      <updated-at type="datetime">2010-03-27T14:02:35+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">2</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>yachi</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4188</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
