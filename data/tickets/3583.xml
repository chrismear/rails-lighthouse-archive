<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-12-16T17:44:23+00:00</created-at>
  <creator-id type="integer">64236</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3583</number>
  <permalink>activerecord-transaction-sometimes-throw-the-wrong-exception</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord postgres transaction</tag>
  <title>[PATCH] ActiveRecord transaction sometimes throw the wrong exception</title>
  <updated-at type="datetime">2011-02-02T18:39:29+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">6</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>John Pignata</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3583</url>
  <priority-name nil="true"></priority-name>
  <original-body>We're seeing a problem in one of our applications under Postgres whereby exceptions thrown during transactions are being logged as nil RuntimeErrors. Consequently we never actually get the original exception from the transaction and makes root cause analysis &quot;hard.&quot; 

The rescue block attempts to re-raise the last exception but first checks that the original exception is of a certain type. Since that check is always happening it should always ensure it's returning that original exception.

The attached patch explicitly returns the original exception.</original-body>
  <latest-body>We're seeing a problem in one of our applications under Postgres whereby exceptions thrown during transactions are being logged as nil RuntimeErrors. Consequently we never actually get the original exception from the transaction and makes root cause analysis &quot;hard.&quot; 

The rescue block attempts to re-raise the last exception but first checks that the original exception is of a certain type. Since that check is always happening it should always ensure it's returning that original exception.

The attached patch explicitly returns the original exception.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;We're seeing a problem in one of our applications under Postgres
whereby exceptions thrown during transactions are being logged as
nil RuntimeErrors. Consequently we never actually get the original
exception from the transaction and makes root cause analysis
&quot;hard.&quot;&lt;/p&gt;
&lt;p&gt;The rescue block attempts to re-raise the last exception but
first checks that the original exception is of a certain type.
Since that check is always happening it should always ensure it's
returning that original exception.&lt;/p&gt;
&lt;p&gt;The attached patch explicitly returns the original
exception.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>We're seeing a problem in one of our applications under Postgres whereby exceptions thrown during transactions are being logged as nil RuntimeErrors. Consequently we never actually get the original exception from the transaction and makes root cause analysis &quot;hard.&quot; 

The rescue block attempts to re-raise the last exception but first checks that the original exception is of a certain type. Since that check is always happening it should always ensure it's returning that original exception.

The attached patch explicitly returns the original exception.</body>
      <body-html>&lt;div&gt;&lt;p&gt;We're seeing a problem in one of our applications under Postgres
whereby exceptions thrown during transactions are being logged as
nil RuntimeErrors. Consequently we never actually get the original
exception from the transaction and makes root cause analysis
&quot;hard.&quot;&lt;/p&gt;
&lt;p&gt;The rescue block attempts to re-raise the last exception but
first checks that the original exception is of a certain type.
Since that check is always happening it should always ensure it's
returning that original exception.&lt;/p&gt;
&lt;p&gt;The attached patch explicitly returns the original
exception.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-16T17:44:23+00:00</created-at>
      <creator-id type="integer">64236</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3583</number>
      <permalink>activerecord-transaction-sometimes-throw-the-wrong-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord postgres transaction</tag>
      <title>ActiveRecord transaction sometimes throw the wrong exception</title>
      <updated-at type="datetime">2009-12-16T17:44:26+00:00</updated-at>
      <user-id type="integer">64236</user-id>
      <version type="integer">1</version>
      <user-name>John Pignata</user-name>
      <creator-name>John Pignata</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3583</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-18T02:47:06+00:00</created-at>
      <creator-id type="integer">64236</creator-id>
      <diffable-attributes type="yaml">--- 
:title: ActiveRecord transaction sometimes throw the wrong exception
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3583</number>
      <permalink>activerecord-transaction-sometimes-throw-the-wrong-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord postgres transaction</tag>
      <title>[PATCH] ActiveRecord transaction sometimes throw the wrong exception</title>
      <updated-at type="datetime">2009-12-18T02:47:10+00:00</updated-at>
      <user-id type="integer">64236</user-id>
      <version type="integer">2</version>
      <user-name>John Pignata</user-name>
      <creator-name>John Pignata</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3583</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-15T22:09:28+00:00</created-at>
      <creator-id type="integer">64236</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord postgres transaction
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3583</number>
      <permalink>activerecord-transaction-sometimes-throw-the-wrong-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord bugmash postgres transaction</tag>
      <title>[PATCH] ActiveRecord transaction sometimes throw the wrong exception</title>
      <updated-at type="datetime">2010-01-15T22:09:30+00:00</updated-at>
      <user-id type="integer">64236</user-id>
      <version type="integer">3</version>
      <user-name>John Pignata</user-name>
      <creator-name>John Pignata</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3583</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/13645)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/13645&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-02-12T12:46:20+00:00</created-at>
      <creator-id type="integer">64236</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord bugmash postgres transaction
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3583</number>
      <permalink>activerecord-transaction-sometimes-throw-the-wrong-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord postgres transaction</tag>
      <title>[PATCH] ActiveRecord transaction sometimes throw the wrong exception</title>
      <updated-at type="datetime">2010-02-12T12:46:20+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">4</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>John Pignata</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3583</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:55:09+00:00</created-at>
      <creator-id type="integer">64236</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3583</number>
      <permalink>activerecord-transaction-sometimes-throw-the-wrong-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord postgres transaction</tag>
      <title>[PATCH] ActiveRecord transaction sometimes throw the wrong exception</title>
      <updated-at type="datetime">2011-02-02T18:39:16+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>John Pignata</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3583</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:55:10+00:00</created-at>
      <creator-id type="integer">64236</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3583</number>
      <permalink>activerecord-transaction-sometimes-throw-the-wrong-exception</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord postgres transaction</tag>
      <title>[PATCH] ActiveRecord transaction sometimes throw the wrong exception</title>
      <updated-at type="datetime">2011-02-02T18:39:29+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>John Pignata</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3583</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b0408ea8cf5ca965256802ad4d4effd9df0db622</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-12-16T17:44:24+00:00</created-at>
      <filename>always_raise_first_exception_in_transaction.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">354922</id>
      <size type="integer">1161</size>
      <uploader-id type="integer">64236</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/354922/always_raise_first_exception_in_transaction.diff</url>
    </attachment>
  </attachments>
</ticket>
