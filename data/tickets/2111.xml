<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">8406</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-03-02T09:03:29+00:00</created-at>
  <creator-id type="integer">18882</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2111</number>
  <permalink>nested-forms-reject_if-is-behaving-stupidly</permalink>
  <priority type="integer">1333</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag nil="true"></tag>
  <title>Nested forms reject_if is behaving stupidly</title>
  <updated-at type="datetime">2009-05-28T10:39:22+01:00</updated-at>
  <user-id type="integer">29092</user-id>
  <version type="integer">5</version>
  <user-name>david.cizek (at gmail)</user-name>
  <creator-name>ronin-18882 (at lighthouseapp)</creator-name>
  <assigned-user-name>Eloy Duran</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2111</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This used to work:

accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; proc { |attr| attr[:number].blank? }

Now it doesn't because the attribute needs to be a string and not a symbol

accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; proc { |attr| attr[&quot;number&quot;].blank? }

This should work both ways.

It would also be nice to support a method on the reject_if call

accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; :blank?

Which would call the phone_number.blank? method

This was the way it worked with the attribute_fu plugin which was the best nested forms implementation in Rails before this came along</original-body>
  <latest-body>This used to work:

accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; proc { |attr| attr[:number].blank? }

Now it doesn't because the attribute needs to be a string and not a symbol

accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; proc { |attr| attr[&quot;number&quot;].blank? }

This should work both ways.

It would also be nice to support a method on the reject_if call

accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; :blank?

Which would call the phone_number.blank? method

This was the way it worked with the attribute_fu plugin which was the best nested forms implementation in Rails before this came along</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This used to work:&lt;/p&gt;
&lt;p&gt;accepts_nested_attributes_for :phone_numbers, :allow_destroy
=&amp;gt; true, :reject_if =&amp;gt; proc { |attr| attr[:number].blank?
}&lt;/p&gt;
&lt;p&gt;Now it doesn't because the attribute needs to be a string and
not a symbol&lt;/p&gt;
&lt;p&gt;accepts_nested_attributes_for :phone_numbers, :allow_destroy
=&amp;gt; true, :reject_if =&amp;gt; proc { |attr| attr[&quot;number&quot;].blank?
}&lt;/p&gt;
&lt;p&gt;This should work both ways.&lt;/p&gt;
&lt;p&gt;It would also be nice to support a method on the reject_if
call&lt;/p&gt;
&lt;p&gt;accepts_nested_attributes_for :phone_numbers, :allow_destroy
=&amp;gt; true, :reject_if =&amp;gt; :blank?&lt;/p&gt;
&lt;p&gt;Which would call the phone_number.blank? method&lt;/p&gt;
&lt;p&gt;This was the way it worked with the attribute_fu plugin which
was the best nested forms implementation in Rails before this came
along&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This used to work:

accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; proc { |attr| attr[:number].blank? }

Now it doesn't because the attribute needs to be a string and not a symbol

accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; proc { |attr| attr[&quot;number&quot;].blank? }

This should work both ways.

It would also be nice to support a method on the reject_if call

accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; :blank?

Which would call the phone_number.blank? method

This was the way it worked with the attribute_fu plugin which was the best nested forms implementation in Rails before this came along</body>
      <body-html>&lt;div&gt;&lt;p&gt;This used to work:&lt;/p&gt;
&lt;p&gt;accepts_nested_attributes_for :phone_numbers, :allow_destroy
=&amp;gt; true, :reject_if =&amp;gt; proc { |attr| attr[:number].blank?
}&lt;/p&gt;
&lt;p&gt;Now it doesn't because the attribute needs to be a string and
not a symbol&lt;/p&gt;
&lt;p&gt;accepts_nested_attributes_for :phone_numbers, :allow_destroy
=&amp;gt; true, :reject_if =&amp;gt; proc { |attr| attr[&quot;number&quot;].blank?
}&lt;/p&gt;
&lt;p&gt;This should work both ways.&lt;/p&gt;
&lt;p&gt;It would also be nice to support a method on the reject_if
call&lt;/p&gt;
&lt;p&gt;accepts_nested_attributes_for :phone_numbers, :allow_destroy
=&amp;gt; true, :reject_if =&amp;gt; :blank?&lt;/p&gt;
&lt;p&gt;Which would call the phone_number.blank? method&lt;/p&gt;
&lt;p&gt;This was the way it worked with the attribute_fu plugin which
was the best nested forms implementation in Rails before this came
along&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-03-02T09:03:29+00:00</created-at>
      <creator-id type="integer">18882</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2111</number>
      <permalink>nested-forms-reject_if-is-behaving-stupidly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Nested forms reject_if is behaving stupidly</title>
      <updated-at type="datetime">2009-03-02T09:03:34+00:00</updated-at>
      <user-id type="integer">18882</user-id>
      <version type="integer">1</version>
      <user-name>ronin-18882 (at lighthouseapp)</user-name>
      <creator-name>ronin-18882 (at lighthouseapp)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2111</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&gt; accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; proc { |attr| attr[:number].blank? }
&gt;
&gt; Now it doesn't because the attribute needs to be a string and not a symbol
&gt;
&gt; accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; proc { |attr| attr[&quot;number&quot;].blank? }

Are you giving it a hash yourself? For instance, from a test case?

If that's the case, you need to choose one form or the other, not both. In a regular request flow you will always get a HashWithIndifferentAccess. So it won't matter.

&gt; This should work both ways.

I disagree. This same &#8220;issue&#8221; comes up in other parts of Rails as well, but most of the times it's in test cases. You as the developer should use the appropriate form.

&gt; It would also be nice to support a method on the reject_if call
&gt;accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; :blank?
&gt; Which would call the phone_number.blank? method
&gt; This was the way it worked with the attribute_fu plugin which was the best nested forms implementation in Rails before this came along

I would happy to apply such a patch.

But please open a new ticket for it. As the issue you have, which is mentioned in the title, is a totally different one.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;accepts_nested_attributes_for :phone_numbers, :allow_destroy
=&amp;gt; true, :reject_if =&amp;gt; proc { |attr| attr[:number].blank?
}&lt;/p&gt;
&lt;p&gt;Now it doesn't because the attribute needs to be a string and
not a symbol&lt;/p&gt;
&lt;p&gt;accepts_nested_attributes_for :phone_numbers, :allow_destroy
=&amp;gt; true, :reject_if =&amp;gt; proc { |attr| attr[&quot;number&quot;].blank?
}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Are you giving it a hash yourself? For instance, from a test
case?&lt;/p&gt;
&lt;p&gt;If that's the case, you need to choose one form or the other,
not both. In a regular request flow you will always get a
HashWithIndifferentAccess. So it won't matter.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This should work both ways.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I disagree. This same &amp;#8220;issue&amp;#8221; comes up in other
parts of Rails as well, but most of the times it's in test cases.
You as the developer should use the appropriate form.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It would also be nice to support a method on the reject_if call
accepts_nested_attributes_for :phone_numbers, :allow_destroy =&amp;gt;
true, :reject_if =&amp;gt; :blank? Which would call the
phone_number.blank? method This was the way it worked with the
attribute_fu plugin which was the best nested forms implementation
in Rails before this came along&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I would happy to apply such a patch.&lt;/p&gt;
&lt;p&gt;But please open a new ticket for it. As the issue you have,
which is mentioned in the title, is a totally different one.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-02T11:14:36+00:00</created-at>
      <creator-id type="integer">18882</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2111</number>
      <permalink>nested-forms-reject_if-is-behaving-stupidly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Nested forms reject_if is behaving stupidly</title>
      <updated-at type="datetime">2009-03-02T11:15:06+00:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">2</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>ronin-18882 (at lighthouseapp)</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2111</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The first issue: attr[:number].blank? or attr[&quot;number&quot;].blank? cause problems for me, too. Not using testcase, just regular behaviour. From debugging (attrs are the ones pushed to Proc):

@@@
(rdb:1) attrs
{&quot;value&quot;=&gt;&quot;&quot;}
(rdb:1) attrs[:value]
nil
(rdb:1) attrs[:value].blank?
true
@@@

Little more testing:

@@@
(rdb:1) attrs
{&quot;value&quot;=&gt;&quot;text&quot;}
(rdb:1) attrs.class
Hash
(rdb:1) a=HashWithIndifferentAccess.new
{}
(rdb:1) a.class
HashWithIndifferentAccess
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;The first issue: attr[:number].blank? or attr[&quot;number&quot;].blank?
cause problems for me, too. Not using testcase, just regular
behaviour. From debugging (attrs are the ones pushed to Proc):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;(rdb:1) attrs
{&quot;value&quot;=&amp;gt;&quot;&quot;}
(rdb:1) attrs[:value]
nil
(rdb:1) attrs[:value].blank?
true&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Little more testing:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;(rdb:1) attrs
{&quot;value&quot;=&amp;gt;&quot;text&quot;}
(rdb:1) attrs.class
Hash
(rdb:1) a=HashWithIndifferentAccess.new
{}
(rdb:1) a.class
HashWithIndifferentAccess&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-21T15:16:36+01:00</created-at>
      <creator-id type="integer">18882</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2111</number>
      <permalink>nested-forms-reject_if-is-behaving-stupidly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Nested forms reject_if is behaving stupidly</title>
      <updated-at type="datetime">2009-05-21T16:52:22+01:00</updated-at>
      <user-id type="integer">29092</user-id>
      <version type="integer">3</version>
      <user-name>david.cizek (at gmail)</user-name>
      <creator-name>ronin-18882 (at lighthouseapp)</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2111</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi David,

I'm not quite sure what it is that you're saying. Could you please elaborate your point? Thanks.

For what it's worth, this is what I get from your examples which work for me as expected:

@@@
% irb -rrubygems -ractivesupport
irb(main):001:0&gt; h = HashWithIndifferentAccess.new
=&gt; {}
irb(main):002:0&gt; h[&quot;value&quot;] = &quot;&quot;
=&gt; &quot;&quot;
irb(main):003:0&gt; h
=&gt; {&quot;value&quot;=&gt;&quot;&quot;}
irb(main):004:0&gt; h[&quot;value&quot;].blank?
=&gt; true
irb(main):005:0&gt; h[:value].blank?
=&gt; true
irb(main):006:0&gt; h[&quot;value&quot;] = &quot;text&quot;
=&gt; &quot;text&quot;
irb(main):007:0&gt; h[&quot;value&quot;].blank?
=&gt; false
irb(main):008:0&gt; h[:value].blank?
=&gt; false
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi David,&lt;/p&gt;
&lt;p&gt;I'm not quite sure what it is that you're saying. Could you
please elaborate your point? Thanks.&lt;/p&gt;
&lt;p&gt;For what it's worth, this is what I get from your examples which
work for me as expected:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;% irb -rrubygems -ractivesupport
irb(main):001:0&amp;gt; h = HashWithIndifferentAccess.new
=&amp;gt; {}
irb(main):002:0&amp;gt; h[&quot;value&quot;] = &quot;&quot;
=&amp;gt; &quot;&quot;
irb(main):003:0&amp;gt; h
=&amp;gt; {&quot;value&quot;=&amp;gt;&quot;&quot;}
irb(main):004:0&amp;gt; h[&quot;value&quot;].blank?
=&amp;gt; true
irb(main):005:0&amp;gt; h[:value].blank?
=&amp;gt; true
irb(main):006:0&amp;gt; h[&quot;value&quot;] = &quot;text&quot;
=&amp;gt; &quot;text&quot;
irb(main):007:0&amp;gt; h[&quot;value&quot;].blank?
=&amp;gt; false
irb(main):008:0&amp;gt; h[:value].blank?
=&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-21T16:58:04+01:00</created-at>
      <creator-id type="integer">18882</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2111</number>
      <permalink>nested-forms-reject_if-is-behaving-stupidly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Nested forms reject_if is behaving stupidly</title>
      <updated-at type="datetime">2009-05-21T16:58:07+01:00</updated-at>
      <user-id type="integer">8406</user-id>
      <version type="integer">4</version>
      <user-name>Eloy Duran</user-name>
      <creator-name>ronin-18882 (at lighthouseapp)</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2111</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">8406</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi Eloy,
sorry for my poor articulation.

The problem seems to be that in the example 

accepts_nested_attributes_for :phone_numbers, :allow_destroy =&gt; true, :reject_if =&gt; proc { |attr| attr[:number].blank? }

the attr seems NOT to be a HashWithIndifferentAccess but just Hash and therefore the Proc condition always fail as written (even if there is nested non blank attr[&quot;number&quot;]), needs to be 

...:reject_if =&gt; proc { |attr| attr[&quot;number&quot;].blank? }

and then it works.
David</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Eloy,&lt;br&gt;
sorry for my poor articulation.&lt;/p&gt;
&lt;p&gt;The problem seems to be that in the example&lt;/p&gt;
&lt;p&gt;accepts_nested_attributes_for :phone_numbers, :allow_destroy
=&amp;gt; true, :reject_if =&amp;gt; proc { |attr| attr[:number].blank?
}&lt;/p&gt;
&lt;p&gt;the attr seems NOT to be a HashWithIndifferentAccess but just
Hash and therefore the Proc condition always fail as written (even
if there is nested non blank attr[&quot;number&quot;]), needs to be&lt;/p&gt;
&lt;p&gt;...:reject_if =&amp;gt; proc { |attr| attr[&quot;number&quot;].blank? }&lt;/p&gt;
&lt;p&gt;and then it works.&lt;br&gt;
David&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-28T10:39:20+01:00</created-at>
      <creator-id type="integer">18882</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2111</number>
      <permalink>nested-forms-reject_if-is-behaving-stupidly</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>Nested forms reject_if is behaving stupidly</title>
      <updated-at type="datetime">2009-05-28T10:39:22+01:00</updated-at>
      <user-id type="integer">29092</user-id>
      <version type="integer">5</version>
      <user-name>david.cizek (at gmail)</user-name>
      <creator-name>ronin-18882 (at lighthouseapp)</creator-name>
      <assigned-user-name>Eloy Duran</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2111</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
