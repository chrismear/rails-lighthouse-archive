<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-03-30T08:06:33+01:00</created-at>
  <creator-id type="integer">38622</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6648</number>
  <permalink>postgresql-add-column-behaves-differently-to-other-adaptors-sqlite-mysql-when-specifying-default</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>2-3-stable add_column migration postgresql</tag>
  <title>PostgreSQL add column behaves differently to other adaptors (SQlite, MySQL) when specifying default</title>
  <updated-at type="datetime">2011-04-25T17:12:03+01:00</updated-at>
  <user-id type="integer">38622</user-id>
  <version type="integer">6</version>
  <user-name>John Barker</user-name>
  <creator-name>John Barker</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6648</url>
  <priority-name nil="true"></priority-name>
  <original-body>When adding a column to a table with a migration, like so:

@@@ ruby
  add_column :receivables, :arrears, :boolean, :default =&gt; false
@@@

and using SQLite or MySQL, the column will be added, and all rows will have a value of false for the new column. On PostgreSQL it will contain NULL. 

@@@ ruby
  Receivable.first.arrears =&gt; nil
@@@

This seems a little inconsistent to me so I've written a patch, tested against 2-3-stable and PostgreSQL 9.0.3. It does the add column in one query which is consistent with the other two adaptors mentioned. 

Perhaps this consistency is not required, but it's been a bit of a headache migrating from these two databases to postgresql because of it. 

Of note: this way is slower, as now add_column needs to write all the default values for the table. If you need the old behaviour simply break out the add column and default:

@@@ ruby
  add_column :receivables, :arrears, :boolean
  change_column_default :receivables, :arrears, false
@@@</original-body>
  <latest-body>When adding a column to a table with a migration, like so:

@@@ ruby
  add_column :receivables, :arrears, :boolean, :default =&gt; false
@@@

and using SQLite or MySQL, the column will be added, and all rows will have a value of false for the new column. On PostgreSQL it will contain NULL. 

@@@ ruby
  Receivable.first.arrears =&gt; nil
@@@

This seems a little inconsistent to me so I've written a patch, tested against 2-3-stable and PostgreSQL 9.0.3. It does the add column in one query which is consistent with the other two adaptors mentioned. 

Perhaps this consistency is not required, but it's been a bit of a headache migrating from these two databases to postgresql because of it. 

Of note: this way is slower, as now add_column needs to write all the default values for the table. If you need the old behaviour simply break out the add column and default:

@@@ ruby
  add_column :receivables, :arrears, :boolean
  change_column_default :receivables, :arrears, false
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When adding a column to a table with a migration, like so:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  add_column :receivables, :arrears, :boolean, :default =&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and using SQLite or MySQL, the column will be added, and all
rows will have a value of false for the new column. On PostgreSQL
it will contain NULL.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  Receivable.first.arrears =&amp;gt; nil&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This seems a little inconsistent to me so I've written a patch,
tested against 2-3-stable and PostgreSQL 9.0.3. It does the add
column in one query which is consistent with the other two adaptors
mentioned.&lt;/p&gt;
&lt;p&gt;Perhaps this consistency is not required, but it's been a bit of
a headache migrating from these two databases to postgresql because
of it.&lt;/p&gt;
&lt;p&gt;Of note: this way is slower, as now add_column needs to write
all the default values for the table. If you need the old behaviour
simply break out the add column and default:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  add_column :receivables, :arrears, :boolean
  change_column_default :receivables, :arrears, false&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When adding a column to a table with a migration, like so:

@@@ ruby
  add_column :receivables, :arrears, :boolean, :default =&gt; false
@@@

and using SQLite or MySQL, the column will be added, and all rows will have a value of false for the new column. On PostgreSQL it will contain NULL. 

@@@ ruby
  Receivable.first.arrears =&gt; nil
@@@

This seems a little inconsistent to me so I've written a patch, tested against 2-3-stable and PostgreSQL 9.0.3. It does the add column in one query which is consistent with the other two adaptors mentioned. 

Perhaps this consistency is not required, but it's been a bit of a headache migrating from these two databases to postgresql because of it. 

Of note: this way is slower, as now add_column needs to write all the default values for the table. If you need the old behaviour simply break out the add column and default:

@@@ ruby
  add_column :receivables, :arrears, :boolean
  change_column_default :receivables, :arrears, false
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;When adding a column to a table with a migration, like so:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  add_column :receivables, :arrears, :boolean, :default =&amp;gt; false&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and using SQLite or MySQL, the column will be added, and all
rows will have a value of false for the new column. On PostgreSQL
it will contain NULL.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  Receivable.first.arrears =&amp;gt; nil&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This seems a little inconsistent to me so I've written a patch,
tested against 2-3-stable and PostgreSQL 9.0.3. It does the add
column in one query which is consistent with the other two adaptors
mentioned.&lt;/p&gt;
&lt;p&gt;Perhaps this consistency is not required, but it's been a bit of
a headache migrating from these two databases to postgresql because
of it.&lt;/p&gt;
&lt;p&gt;Of note: this way is slower, as now add_column needs to write
all the default values for the table. If you need the old behaviour
simply break out the add column and default:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;  add_column :receivables, :arrears, :boolean
  change_column_default :receivables, :arrears, false&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-30T08:06:33+01:00</created-at>
      <creator-id type="integer">38622</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6648</number>
      <permalink>postgresql-add-column-behaves-differently-to-other-adaptors-sqlite-mysql-when-specifying-default</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable add_column migration postgresql</tag>
      <title>PostgreSQL add column behaves differently to other adaptors (SQlite, MySQL) when specifying default</title>
      <updated-at type="datetime">2011-03-30T08:06:36+01:00</updated-at>
      <user-id type="integer">38622</user-id>
      <version type="integer">1</version>
      <user-name>John Barker</user-name>
      <creator-name>John Barker</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6648</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm not sure why your migrations aren't doing this, but PostgreSQL does set the default values on new columns in an ALTER TABLE:

@@@ sql
    $ psql test
    psql (9.0.3)
    Type &quot;help&quot; for help.

    test=&gt; create table foo ( id serial, name text );
    NOTICE:  CREATE TABLE will create implicit sequence &quot;foo_id_seq&quot; for serial column &quot;foo.id&quot;
    CREATE TABLE
    test=&gt; copy foo (name) from stdin;
    Enter data to be copied followed by a newline.
    End with a backslash and a period on a line by itself.
    &gt;&gt; Tricky  
    &gt;&gt; Dicky
    &gt;&gt; Ricky
    &gt;&gt; Micky
    &gt;&gt; Maude
    &gt;&gt; \.
    test=&gt; select * from foo;
     id |  name  
    ----+--------
      1 | Tricky
      2 | Dicky
      3 | Ricky
      4 | Micky
      5 | Maude
    (5 rows)
    
    test=&gt; alter table foo add column signed boolean default false;
    ALTER TABLE
    test=&gt; select * from foo;
     id |  name  | signed 
    ----+--------+--------
      1 | Tricky | f
      2 | Dicky  | f
      3 | Ricky  | f
      4 | Micky  | f
      5 | Maude  | f
    (5 rows)
    
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm not sure why your migrations aren't doing this, but
PostgreSQL does set the default values on new columns in an ALTER
TABLE:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;sql&quot;&gt;    $ psql test
    psql (9.0.3)
    Type &quot;help&quot; for help.

    test=&amp;gt; create table foo ( id serial, name text );
    NOTICE:  CREATE TABLE will create implicit sequence &quot;foo_id_seq&quot; for serial column &quot;foo.id&quot;
    CREATE TABLE
    test=&amp;gt; copy foo (name) from stdin;
    Enter data to be copied followed by a newline.
    End with a backslash and a period on a line by itself.
    &amp;gt;&amp;gt; Tricky  
    &amp;gt;&amp;gt; Dicky
    &amp;gt;&amp;gt; Ricky
    &amp;gt;&amp;gt; Micky
    &amp;gt;&amp;gt; Maude
    &amp;gt;&amp;gt; \.
    test=&amp;gt; select * from foo;
     id |  name  
    ----+--------
      1 | Tricky
      2 | Dicky
      3 | Ricky
      4 | Micky
      5 | Maude
    (5 rows)
    
    test=&amp;gt; alter table foo add column signed boolean default false;
    ALTER TABLE
    test=&amp;gt; select * from foo;
     id |  name  | signed 
    ----+--------+--------
      1 | Tricky | f
      2 | Dicky  | f
      3 | Ricky  | f
      4 | Micky  | f
      5 | Maude  | f
    (5 rows)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-19T15:28:33+01:00</created-at>
      <creator-id type="integer">38622</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6648</number>
      <permalink>postgresql-add-column-behaves-differently-to-other-adaptors-sqlite-mysql-when-specifying-default</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable add_column migration postgresql</tag>
      <title>PostgreSQL add column behaves differently to other adaptors (SQlite, MySQL) when specifying default</title>
      <updated-at type="datetime">2011-04-19T15:28:37+01:00</updated-at>
      <user-id type="integer">35508</user-id>
      <version type="integer">2</version>
      <user-name>Michael Granger</user-name>
      <creator-name>John Barker</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6648</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Rails actually sends separate commands to the database when you do an add_column, not a single alter table statement. Your example SQL alter table statement is the same behaviour introduced in my patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Rails actually sends separate commands to the database when you
do an add_column, not a single alter table statement. Your example
SQL alter table statement is the same behaviour introduced in my
patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-23T11:16:42+01:00</created-at>
      <creator-id type="integer">38622</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6648</number>
      <permalink>postgresql-add-column-behaves-differently-to-other-adaptors-sqlite-mysql-when-specifying-default</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable add_column migration postgresql</tag>
      <title>PostgreSQL add column behaves differently to other adaptors (SQlite, MySQL) when specifying default</title>
      <updated-at type="datetime">2011-04-23T11:16:48+01:00</updated-at>
      <user-id type="integer">38622</user-id>
      <version type="integer">3</version>
      <user-name>John Barker</user-name>
      <creator-name>John Barker</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6648</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm sorry, I must have read the diff backwards for some reason. Your patch modifies it to do exactly what I'd expect.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm sorry, I must have read the diff backwards for some reason.
Your patch modifies it to do exactly what I'd expect.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-24T04:09:22+01:00</created-at>
      <creator-id type="integer">38622</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6648</number>
      <permalink>postgresql-add-column-behaves-differently-to-other-adaptors-sqlite-mysql-when-specifying-default</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable add_column migration postgresql</tag>
      <title>PostgreSQL add column behaves differently to other adaptors (SQlite, MySQL) when specifying default</title>
      <updated-at type="datetime">2011-04-24T04:09:27+01:00</updated-at>
      <user-id type="integer">35508</user-id>
      <version type="integer">4</version>
      <user-name>Michael Granger</user-name>
      <creator-name>John Barker</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6648</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I think the patch was not created the way Rails Guides [explains](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-a-patch), so I cannot apply it for testing. Could you please re-create it?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I think the patch was not created the way Rails Guides &lt;a href=
&quot;http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-a-patch&quot;&gt;
explains&lt;/a&gt;, so I cannot apply it for testing. Could you please
re-create it?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-24T04:40:59+01:00</created-at>
      <creator-id type="integer">38622</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6648</number>
      <permalink>postgresql-add-column-behaves-differently-to-other-adaptors-sqlite-mysql-when-specifying-default</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable add_column migration postgresql</tag>
      <title>PostgreSQL add column behaves differently to other adaptors (SQlite, MySQL) when specifying default</title>
      <updated-at type="datetime">2011-04-24T04:41:38+01:00</updated-at>
      <user-id type="integer">142270</user-id>
      <version type="integer">5</version>
      <user-name>Juan Manuel Cuello</user-name>
      <creator-name>John Barker</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6648</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just realised this was also fixed in master, so simply back-ported the fix and made the diff as per the guide, applied it with 'git am ...' and it works, passes all the rake tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just realised this was also fixed in master, so simply
back-ported the fix and made the diff as per the guide, applied it
with 'git am ...' and it works, passes all the rake tests.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-25T17:11:52+01:00</created-at>
      <creator-id type="integer">38622</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6648</number>
      <permalink>postgresql-add-column-behaves-differently-to-other-adaptors-sqlite-mysql-when-specifying-default</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable add_column migration postgresql</tag>
      <title>PostgreSQL add column behaves differently to other adaptors (SQlite, MySQL) when specifying default</title>
      <updated-at type="datetime">2011-04-25T17:12:03+01:00</updated-at>
      <user-id type="integer">38622</user-id>
      <version type="integer">6</version>
      <user-name>John Barker</user-name>
      <creator-name>John Barker</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6648</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a47c1612b69db2bec822abbc3072ae4094b21aa2</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-03-30T08:06:34+01:00</created-at>
      <filename>postgresql_add_column.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">984981</id>
      <size type="integer">1773</size>
      <uploader-id type="integer">38622</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/984981/postgresql_add_column.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>7806fa6bf8a346c32aaaf7dd35aef388b1a232ab</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-04-25T17:11:52+01:00</created-at>
      <filename>postgresql_add_column.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">1030709</id>
      <size type="integer">1898</size>
      <uploader-id type="integer">38622</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/1030709/postgresql_add_column.diff</url>
    </attachment>
  </attachments>
</ticket>
