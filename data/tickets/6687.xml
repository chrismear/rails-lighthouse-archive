<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-08T15:28:54+01:00</created-at>
  <creator-id type="integer">94532</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6687</number>
  <permalink>x-forwarded-for-ignored-when-trusted</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag nil="true"></tag>
  <title>X-Forwarded-For ignored when &quot;trusted&quot;</title>
  <updated-at type="datetime">2011-04-08T15:28:56+01:00</updated-at>
  <user-id type="integer">94532</user-id>
  <version type="integer">1</version>
  <user-name>jaswope</user-name>
  <creator-name>jaswope</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6687</url>
  <priority-name nil="true"></priority-name>
  <original-body>ActionDispatch:RemoteIp ignores X-Forwarded-For if all of the IPs it contains are considered trusted proxies.  This list includes localhost and all private addresses.

This impacts applications that are hosted behind a reverse proxy (proxying to localhost) and accessed from a private IP, such as intranet applications. Aside from making the remote ip detection incorrect, this causes problems with ActionDispatch::Request.local?, causing it to incorrectly return true, which in turn causes default configurations of Rails apps to show stack traces when they shouldn't.

The offending line appears to be here: https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/middleware/remote_ip.rb#L34

Perhaps it should fall back to the last ip in the forwarded for chain instead:
@@@ ruby
return forwarded_ips.reject { |ip| ip =~ @trusted_proxies }.last || forwarded_ips.last
@@@</original-body>
  <latest-body>ActionDispatch:RemoteIp ignores X-Forwarded-For if all of the IPs it contains are considered trusted proxies.  This list includes localhost and all private addresses.

This impacts applications that are hosted behind a reverse proxy (proxying to localhost) and accessed from a private IP, such as intranet applications. Aside from making the remote ip detection incorrect, this causes problems with ActionDispatch::Request.local?, causing it to incorrectly return true, which in turn causes default configurations of Rails apps to show stack traces when they shouldn't.

The offending line appears to be here: https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/middleware/remote_ip.rb#L34

Perhaps it should fall back to the last ip in the forwarded for chain instead:
@@@ ruby
return forwarded_ips.reject { |ip| ip =~ @trusted_proxies }.last || forwarded_ips.last
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;ActionDispatch:RemoteIp ignores X-Forwarded-For if all of the
IPs it contains are considered trusted proxies. This list includes
localhost and all private addresses.&lt;/p&gt;
&lt;p&gt;This impacts applications that are hosted behind a reverse proxy
(proxying to localhost) and accessed from a private IP, such as
intranet applications. Aside from making the remote ip detection
incorrect, this causes problems with
ActionDispatch::Request.local?, causing it to incorrectly return
true, which in turn causes default configurations of Rails apps to
show stack traces when they shouldn't.&lt;/p&gt;
&lt;p&gt;The offending line appears to be here: &lt;a href=
&quot;https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/middleware/remote_ip.rb#L34&quot;&gt;
https://github.com/rails/rails/blob/master/actionpack/lib/action_di...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Perhaps it should fall back to the last ip in the forwarded for
chain instead:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;return forwarded_ips.reject { |ip| ip =~ @trusted_proxies }.last || forwarded_ips.last&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ActionDispatch:RemoteIp ignores X-Forwarded-For if all of the IPs it contains are considered trusted proxies.  This list includes localhost and all private addresses.

This impacts applications that are hosted behind a reverse proxy (proxying to localhost) and accessed from a private IP, such as intranet applications. Aside from making the remote ip detection incorrect, this causes problems with ActionDispatch::Request.local?, causing it to incorrectly return true, which in turn causes default configurations of Rails apps to show stack traces when they shouldn't.

The offending line appears to be here: https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/middleware/remote_ip.rb#L34

Perhaps it should fall back to the last ip in the forwarded for chain instead:
@@@ ruby
return forwarded_ips.reject { |ip| ip =~ @trusted_proxies }.last || forwarded_ips.last
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;ActionDispatch:RemoteIp ignores X-Forwarded-For if all of the
IPs it contains are considered trusted proxies. This list includes
localhost and all private addresses.&lt;/p&gt;
&lt;p&gt;This impacts applications that are hosted behind a reverse proxy
(proxying to localhost) and accessed from a private IP, such as
intranet applications. Aside from making the remote ip detection
incorrect, this causes problems with
ActionDispatch::Request.local?, causing it to incorrectly return
true, which in turn causes default configurations of Rails apps to
show stack traces when they shouldn't.&lt;/p&gt;
&lt;p&gt;The offending line appears to be here: &lt;a href=
&quot;https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/middleware/remote_ip.rb#L34&quot;&gt;
https://github.com/rails/rails/blob/master/actionpack/lib/action_di...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Perhaps it should fall back to the last ip in the forwarded for
chain instead:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;return forwarded_ips.reject { |ip| ip =~ @trusted_proxies }.last || forwarded_ips.last&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-08T15:28:54+01:00</created-at>
      <creator-id type="integer">94532</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6687</number>
      <permalink>x-forwarded-for-ignored-when-trusted</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>X-Forwarded-For ignored when &quot;trusted&quot;</title>
      <updated-at type="datetime">2011-04-08T15:28:56+01:00</updated-at>
      <user-id type="integer">94532</user-id>
      <version type="integer">1</version>
      <user-name>jaswope</user-name>
      <creator-name>jaswope</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6687</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
