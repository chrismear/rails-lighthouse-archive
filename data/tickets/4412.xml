<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-04-16T03:54:03+01:00</created-at>
  <creator-id type="integer">52029</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4412</number>
  <permalink>timestamped-migrations-should-detect-collisions</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord engines migrations rails3 timestamped_migrations</tag>
  <title>[PATCH] Timestamped migrations should detect collisions</title>
  <updated-at type="datetime">2010-04-19T03:52:12+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">4</version>
  <user-name>Repository</user-name>
  <creator-name>phs</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4412</url>
  <priority-name nil="true"></priority-name>
  <original-body>The timestamp in timestamped migrations does not account for other migrations sharing the same timestamp.  The corner case was previously pathological.

One reasonable use case is @James Adam 's suggestion for engine migrations in #2058.  Briefly, engine migrations are copied into the host app.  They are re-indexed at the same time, preserving their relative order while letting the host application keep a single, linear schema history.

This copy &amp; re-index can add many migrations to an application at once, which ActiveRecord::Generators::Base.next_migration_number will naively timestamp to the same second.

One solution is to have next_migration_number push the returned timestamp 1 second into the future until there's no collision.  I'll see if I can brew up a patch.</original-body>
  <latest-body>The timestamp in timestamped migrations does not account for other migrations sharing the same timestamp.  The corner case was previously pathological.

One reasonable use case is @James Adam 's suggestion for engine migrations in #2058.  Briefly, engine migrations are copied into the host app.  They are re-indexed at the same time, preserving their relative order while letting the host application keep a single, linear schema history.

This copy &amp; re-index can add many migrations to an application at once, which ActiveRecord::Generators::Base.next_migration_number will naively timestamp to the same second.

One solution is to have next_migration_number push the returned timestamp 1 second into the future until there's no collision.  I'll see if I can brew up a patch.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;The timestamp in timestamped migrations does not account for
other migrations sharing the same timestamp. The corner case was
previously pathological.&lt;/p&gt;
&lt;p&gt;One reasonable use case is @James Adam 's suggestion for engine
migrations in &lt;a href=&quot;/projects/8994/tickets/2058&quot; title=
&quot;Ticket #2058&quot;&gt;#2058&lt;/a&gt;. Briefly, engine migrations are copied
into the host app. They are re-indexed at the same time, preserving
their relative order while letting the host application keep a
single, linear schema history.&lt;/p&gt;
&lt;p&gt;This copy &amp;amp; re-index can add many migrations to an
application at once, which
ActiveRecord::Generators::Base.next_migration_number will naively
timestamp to the same second.&lt;/p&gt;
&lt;p&gt;One solution is to have next_migration_number push the returned
timestamp 1 second into the future until there's no collision. I'll
see if I can brew up a patch.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The timestamp in timestamped migrations does not account for other migrations sharing the same timestamp.  The corner case was previously pathological.

One reasonable use case is @James Adam 's suggestion for engine migrations in #2058.  Briefly, engine migrations are copied into the host app.  They are re-indexed at the same time, preserving their relative order while letting the host application keep a single, linear schema history.

This copy &amp; re-index can add many migrations to an application at once, which ActiveRecord::Generators::Base.next_migration_number will naively timestamp to the same second.

One solution is to have next_migration_number push the returned timestamp 1 second into the future until there's no collision.  I'll see if I can brew up a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The timestamp in timestamped migrations does not account for
other migrations sharing the same timestamp. The corner case was
previously pathological.&lt;/p&gt;
&lt;p&gt;One reasonable use case is @James Adam 's suggestion for engine
migrations in &lt;a href=&quot;/projects/8994/tickets/2058&quot; title=
&quot;Ticket #2058&quot;&gt;#2058&lt;/a&gt;. Briefly, engine migrations are copied
into the host app. They are re-indexed at the same time, preserving
their relative order while letting the host application keep a
single, linear schema history.&lt;/p&gt;
&lt;p&gt;This copy &amp;amp; re-index can add many migrations to an
application at once, which
ActiveRecord::Generators::Base.next_migration_number will naively
timestamp to the same second.&lt;/p&gt;
&lt;p&gt;One solution is to have next_migration_number push the returned
timestamp 1 second into the future until there's no collision. I'll
see if I can brew up a patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-16T03:54:03+01:00</created-at>
      <creator-id type="integer">52029</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4412</number>
      <permalink>timestamped-migrations-should-detect-collisions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord engines migrations rails3 timestamped_migrations</tag>
      <title>Timestamped migrations should detect collisions</title>
      <updated-at type="datetime">2010-04-16T03:54:05+01:00</updated-at>
      <user-id type="integer">52029</user-id>
      <version type="integer">1</version>
      <user-name>phs</user-name>
      <creator-name>phs</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4412</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The patch.  Timestamp migration numbers are [current timestamp, current_migration_number + 1].max</body>
      <body-html>&lt;div&gt;&lt;p&gt;The patch. Timestamp migration numbers are [current timestamp,
current_migration_number + 1].max&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-16T06:38:54+01:00</created-at>
      <creator-id type="integer">52029</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4412</number>
      <permalink>timestamped-migrations-should-detect-collisions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord engines migrations rails3 timestamped_migrations</tag>
      <title>Timestamped migrations should detect collisions</title>
      <updated-at type="datetime">2010-04-16T06:39:00+01:00</updated-at>
      <user-id type="integer">52029</user-id>
      <version type="integer">2</version>
      <user-name>phs</user-name>
      <creator-name>phs</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4412</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-16T06:39:34+01:00</created-at>
      <creator-id type="integer">52029</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Timestamped migrations should detect collisions
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4412</number>
      <permalink>timestamped-migrations-should-detect-collisions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord engines migrations rails3 timestamped_migrations</tag>
      <title>[PATCH] Timestamped migrations should detect collisions</title>
      <updated-at type="datetime">2010-04-16T06:39:35+01:00</updated-at>
      <user-id type="integer">52029</user-id>
      <version type="integer">3</version>
      <user-name>phs</user-name>
      <creator-name>phs</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4412</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [64373937a393518a6e6a63255176ca297d3c009e]) Make the migration generator handle pre-existing migrations with the same timestamp.

In the event a migration already exists with that number, the new migration's timestamp will be incremented by 1.

[#4412 state:resolved]

Signed-off-by: Michael Koziarski &lt;michael@koziarski.com&gt;
http://github.com/rails/rails/commit/64373937a393518a6e6a63255176ca297d3c009e</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/64373937a393518a6e6a63255176ca297d3c009e&quot;
title=
&quot;Changeset [64373937a393518a6e6a63255176ca297d3c009e]&quot;&gt;[64373937a393518a6e6a63255176ca297d3c009e]&lt;/a&gt;)
Make the migration generator handle pre-existing migrations with
the same timestamp.&lt;/p&gt;
&lt;p&gt;In the event a migration already exists with that number, the
new migration's timestamp will be incremented by 1.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/4412&quot; title=
&quot;Ticket #4412&quot;&gt;#4412&lt;/a&gt; state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Michael Koziarski
&lt;a&gt;michael@koziarski.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/64373937a393518a6e6a63255176ca297d3c009e&quot;&gt;
http://github.com/rails/rails/commit/64373937a393518a6e6a63255176ca...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-04-19T03:52:11+01:00</created-at>
      <creator-id type="integer">52029</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4412</number>
      <permalink>timestamped-migrations-should-detect-collisions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord engines migrations rails3 timestamped_migrations</tag>
      <title>[PATCH] Timestamped migrations should detect collisions</title>
      <updated-at type="datetime">2010-04-19T03:52:12+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>phs</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4412</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>862f022f8c753d46da6a77a3ea5e702ba9a7b974</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-04-16T06:38:54+01:00</created-at>
      <filename>avoid_collisions_with_timestamped_migrations.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">485024</id>
      <size type="integer">2468</size>
      <uploader-id type="integer">52029</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/485024/avoid_collisions_with_timestamped_migrations.diff</url>
    </attachment>
  </attachments>
</ticket>
