<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-03T14:57:00+01:00</created-at>
  <creator-id type="integer">22086</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">316</number>
  <permalink>select-with-alias-tablenames-broken</permalink>
  <priority type="integer">15104</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>select with alias tablenames broken</title>
  <updated-at type="datetime">2008-08-23T14:02:38+01:00</updated-at>
  <user-id type="integer">14890</user-id>
  <version type="integer">2</version>
  <user-name>Tarmo T&#228;nav</user-name>
  <creator-name>Martin Bosner</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/316</url>
  <priority-name nil="true"></priority-name>
  <original-body>This worked before i upgraded to rails 2.1 (from 1.2.6) using mysql:

Model.find(:all,:conditions=&gt;&quot;1&quot;,:joins=&gt;&quot;as alias left join model2 as alias2 on alias.id = alias2.line_id&quot;)

To get it working you need to remove the alias or insert a custom select option:

Model.find(:all,select=&gt;&quot;*&quot;,:conditions=&gt;&quot;1&quot;,:joins=&gt;&quot;as alias left join model2 as alias2 on alias.id = alias2.line_id&quot;)

It seems that the later rails version add the default model tablename to the query e.g.:  

select original_table_name.* from ...


That does not work because it needs the alias in the statement.

Is that a bug or a feature?</original-body>
  <latest-body>This worked before i upgraded to rails 2.1 (from 1.2.6) using mysql:

Model.find(:all,:conditions=&gt;&quot;1&quot;,:joins=&gt;&quot;as alias left join model2 as alias2 on alias.id = alias2.line_id&quot;)

To get it working you need to remove the alias or insert a custom select option:

Model.find(:all,select=&gt;&quot;*&quot;,:conditions=&gt;&quot;1&quot;,:joins=&gt;&quot;as alias left join model2 as alias2 on alias.id = alias2.line_id&quot;)

It seems that the later rails version add the default model tablename to the query e.g.:  

select original_table_name.* from ...


That does not work because it needs the alias in the statement.

Is that a bug or a feature?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
This worked before i upgraded to rails 2.1 (from 1.2.6) using mysql:
&lt;/p&gt;&lt;p&gt;
Model.find(:all,:conditions=&gt;&quot;1&quot;,:joins=&gt;&quot;as alias left join model2 as alias2 on alias.id = alias2.line_id&quot;)
&lt;/p&gt;&lt;p&gt;
To get it working you need to remove the alias or insert a custom select option:
&lt;/p&gt;&lt;p&gt;
Model.find(:all,select=&gt;&quot;*&quot;,:conditions=&gt;&quot;1&quot;,:joins=&gt;&quot;as alias left join model2 as alias2 on alias.id = alias2.line_id&quot;)
&lt;/p&gt;&lt;p&gt;
It seems that the later rails version add the default model tablename to the query e.g.:
&lt;/p&gt;&lt;p&gt;
select original_table_name.* from ...
&lt;/p&gt;&lt;p&gt;
That does not work because it needs the alias in the statement.
&lt;/p&gt;&lt;p&gt;
Is that a bug or a feature?
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This worked before i upgraded to rails 2.1 (from 1.2.6) using mysql:

Model.find(:all,:conditions=&gt;&quot;1&quot;,:joins=&gt;&quot;as alias left join model2 as alias2 on alias.id = alias2.line_id&quot;)

To get it working you need to remove the alias or insert a custom select option:

Model.find(:all,select=&gt;&quot;*&quot;,:conditions=&gt;&quot;1&quot;,:joins=&gt;&quot;as alias left join model2 as alias2 on alias.id = alias2.line_id&quot;)

It seems that the later rails version add the default model tablename to the query e.g.:  

select original_table_name.* from ...


That does not work because it needs the alias in the statement.

Is that a bug or a feature?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
This worked before i upgraded to rails 2.1 (from 1.2.6) using mysql:
&lt;/p&gt;&lt;p&gt;
Model.find(:all,:conditions=&gt;&quot;1&quot;,:joins=&gt;&quot;as alias left join model2 as alias2 on alias.id = alias2.line_id&quot;)
&lt;/p&gt;&lt;p&gt;
To get it working you need to remove the alias or insert a custom select option:
&lt;/p&gt;&lt;p&gt;
Model.find(:all,select=&gt;&quot;*&quot;,:conditions=&gt;&quot;1&quot;,:joins=&gt;&quot;as alias left join model2 as alias2 on alias.id = alias2.line_id&quot;)
&lt;/p&gt;&lt;p&gt;
It seems that the later rails version add the default model tablename to the query e.g.:
&lt;/p&gt;&lt;p&gt;
select original_table_name.* from ...
&lt;/p&gt;&lt;p&gt;
That does not work because it needs the alias in the statement.
&lt;/p&gt;&lt;p&gt;
Is that a bug or a feature?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-03T14:57:00+01:00</created-at>
      <creator-id type="integer">22086</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">316</number>
      <permalink>select-with-alias-tablenames-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>select with alias tablenames broken</title>
      <updated-at type="datetime">2008-06-03T14:57:00+01:00</updated-at>
      <user-id type="integer">22086</user-id>
      <version type="integer">1</version>
      <user-name>Martin Bosner</user-name>
      <creator-name>Martin Bosner</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/316</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I believe this is a feature, we wouldn't want joins to mask any attribute without explicit user approval. For example if you join multiple tables and select &quot;*&quot; then it becomes unclear which table's &quot;id&quot; attribute should be returned.

I'll close this for now, until convincing arguments are given for why this should be changed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I believe this is a feature, we wouldn't want joins to mask any attribute without explicit user approval. For example if you join multiple tables and select &quot;*&quot; then it becomes unclear which table's &quot;id&quot; attribute should be returned.&lt;/p&gt;

&lt;p&gt;I'll close this for now, until convincing arguments are given for why this should be changed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-23T14:02:38+01:00</created-at>
      <creator-id type="integer">22086</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">316</number>
      <permalink>select-with-alias-tablenames-broken</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>select with alias tablenames broken</title>
      <updated-at type="datetime">2008-08-23T14:02:38+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">2</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Martin Bosner</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/316</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
