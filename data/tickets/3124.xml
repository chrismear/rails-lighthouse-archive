<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-01T01:05:56+01:00</created-at>
  <creator-id type="integer">15783</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3124</number>
  <permalink>railsinfo-requires-version-for-unwanted-frameworks</permalink>
  <priority type="integer">136087</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag nil="true"></tag>
  <title>Rails::Info requires version for unwanted frameworks</title>
  <updated-at type="datetime">2009-09-01T10:30:25+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">4</version>
  <user-name>Repository</user-name>
  <creator-name>Geoff Buesing</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3124</url>
  <priority-name nil="true"></priority-name>
  <original-body>Currently, Rails::Info will attempt to load framework/version for all frameworks, even ones that have been opted out of via config.frameworks -=.

Problems arise because the top level framework constant, e.g. ActiveRecord, is defined when active_record/version is required, and this messes with detection of the framework's existence via: 

@@@ ruby
defined?(ActiveRecord)
@@@

...which is done in ActionController::Dispatcher.define_dispatcher_callbacks, rake db:test:prepare, and in many external libraries. Things break, because these libraries aren't actually loaded, just the bare module with the VERSION module included.

The problem only happens when Rails::Info is called, either via the default rails info page, or when required by a library. One particularly popular external library that requires Rails::Info: the New Relic RPM plugin.

To fix this, I'm just checking to see if the constant is defined before requiring 'framework_name/version'. Another way to fix this would be, to use Rails.configuration.frameworks.

I couldn't figure out a way to write a proper test for this.</original-body>
  <latest-body>Currently, Rails::Info will attempt to load framework/version for all frameworks, even ones that have been opted out of via config.frameworks -=.

Problems arise because the top level framework constant, e.g. ActiveRecord, is defined when active_record/version is required, and this messes with detection of the framework's existence via: 

@@@ ruby
defined?(ActiveRecord)
@@@

...which is done in ActionController::Dispatcher.define_dispatcher_callbacks, rake db:test:prepare, and in many external libraries. Things break, because these libraries aren't actually loaded, just the bare module with the VERSION module included.

The problem only happens when Rails::Info is called, either via the default rails info page, or when required by a library. One particularly popular external library that requires Rails::Info: the New Relic RPM plugin.

To fix this, I'm just checking to see if the constant is defined before requiring 'framework_name/version'. Another way to fix this would be, to use Rails.configuration.frameworks.

I couldn't figure out a way to write a proper test for this.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Currently, Rails::Info will attempt to load framework/version
for all frameworks, even ones that have been opted out of via
config.frameworks -=.&lt;/p&gt;
&lt;p&gt;Problems arise because the top level framework constant, e.g.
ActiveRecord, is defined when active_record/version is required,
and this messes with detection of the framework's existence
via:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;defined?(ActiveRecord)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...which is done in
ActionController::Dispatcher.define_dispatcher_callbacks, rake
db:test:prepare, and in many external libraries. Things break,
because these libraries aren't actually loaded, just the bare
module with the VERSION module included.&lt;/p&gt;
&lt;p&gt;The problem only happens when Rails::Info is called, either via
the default rails info page, or when required by a library. One
particularly popular external library that requires Rails::Info:
the New Relic RPM plugin.&lt;/p&gt;
&lt;p&gt;To fix this, I'm just checking to see if the constant is defined
before requiring 'framework_name/version'. Another way to fix this
would be, to use Rails.configuration.frameworks.&lt;/p&gt;
&lt;p&gt;I couldn't figure out a way to write a proper test for this.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Currently, Rails::Info will attempt to load framework/version for all frameworks, even ones that have been opted out of via config.frameworks -=.

Problems arise because the top level framework constant, e.g. ActiveRecord, is defined when active_record/version is required, and this messes with detection of the framework's existence via: 

@@@ ruby
defined?(ActiveRecord)
@@@

...which is done in ActionController::Dispatcher.define_dispatcher_callbacks, rake db:test:prepare, and in many external libraries. Things break, because these libraries aren't actually loaded, just the bare module with the VERSION module included.

The problem only happens when Rails::Info is called, either via the default rails info page, or when required by a library. One particularly popular external library that requires Rails::Info: the New Relic RPM plugin.

To fix this, I'm just checking to see if the constant is defined before requiring 'framework_name/version'. Another way to fix this would be, to use Rails.configuration.frameworks.

I couldn't figure out a way to write a proper test for this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Currently, Rails::Info will attempt to load framework/version
for all frameworks, even ones that have been opted out of via
config.frameworks -=.&lt;/p&gt;
&lt;p&gt;Problems arise because the top level framework constant, e.g.
ActiveRecord, is defined when active_record/version is required,
and this messes with detection of the framework's existence
via:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;defined?(ActiveRecord)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...which is done in
ActionController::Dispatcher.define_dispatcher_callbacks, rake
db:test:prepare, and in many external libraries. Things break,
because these libraries aren't actually loaded, just the bare
module with the VERSION module included.&lt;/p&gt;
&lt;p&gt;The problem only happens when Rails::Info is called, either via
the default rails info page, or when required by a library. One
particularly popular external library that requires Rails::Info:
the New Relic RPM plugin.&lt;/p&gt;
&lt;p&gt;To fix this, I'm just checking to see if the constant is defined
before requiring 'framework_name/version'. Another way to fix this
would be, to use Rails.configuration.frameworks.&lt;/p&gt;
&lt;p&gt;I couldn't figure out a way to write a proper test for this.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-01T01:05:56+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3124</number>
      <permalink>railsinfo-requires-version-for-unwanted-frameworks</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails::Info requires version for unwanted frameworks</title>
      <updated-at type="datetime">2009-09-01T01:06:01+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">1</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3124</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm having a problem uploading my patchfile to Lighthouse -- but this is what the change looks like:

@@@ ruby
      def framework_version(framework)
        if Object.const_defined?(framework.classify)
          require &quot;#{framework}/version&quot;
          &quot;#{framework.classify}::VERSION::STRING&quot;.constantize
        end
      end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm having a problem uploading my patchfile to Lighthouse -- but
this is what the change looks like:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;      def framework_version(framework)
        if Object.const_defined?(framework.classify)
          require &quot;#{framework}/version&quot;
          &quot;#{framework.classify}::VERSION::STRING&quot;.constantize
        end
      end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-01T01:07:41+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3124</number>
      <permalink>railsinfo-requires-version-for-unwanted-frameworks</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Rails::Info requires version for unwanted frameworks</title>
      <updated-at type="datetime">2009-09-01T01:07:47+01:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">2</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3124</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [cc1efe7e5af32789a9ed0f80528e629861dbe6a7]) Rails::Info doesn't require version for unwanted frameworks

[#3124 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/cc1efe7e5af32789a9ed0f80528e629861dbe6a7</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/cc1efe7e5af32789a9ed0f80528e629861dbe6a7&quot;
title=
&quot;Changeset [cc1efe7e5af32789a9ed0f80528e629861dbe6a7]&quot;&gt;[cc1efe7e5af32789a9ed0f80528e629861dbe6a7]&lt;/a&gt;)
Rails::Info doesn't require version for unwanted frameworks&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/3124&quot; title=
&quot;Ticket #3124&quot;&gt;#3124&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/cc1efe7e5af32789a9ed0f80528e629861dbe6a7&quot;&gt;
http://github.com/rails/rails/commit/cc1efe7e5af32789a9ed0f80528e62...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-09-01T10:30:24+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3124</number>
      <permalink>railsinfo-requires-version-for-unwanted-frameworks</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>Rails::Info requires version for unwanted frameworks</title>
      <updated-at type="datetime">2009-09-01T10:30:25+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3124</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [6bf17770af2a563b037b961a8dbe84f63f9c929c]) Rails::Info doesn't require version for unwanted frameworks

[#3124 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/6bf17770af2a563b037b961a8dbe84f63f9c929c</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/6bf17770af2a563b037b961a8dbe84f63f9c929c&quot;
title=
&quot;Changeset [6bf17770af2a563b037b961a8dbe84f63f9c929c]&quot;&gt;[6bf17770af2a563b037b961a8dbe84f63f9c929c]&lt;/a&gt;)
Rails::Info doesn't require version for unwanted frameworks&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/3124&quot; title=
&quot;Ticket #3124&quot;&gt;#3124&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=
&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/6bf17770af2a563b037b961a8dbe84f63f9c929c&quot;&gt;
http://github.com/rails/rails/commit/6bf17770af2a563b037b961a8dbe84...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-09-01T10:30:24+01:00</created-at>
      <creator-id type="integer">15783</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3124</number>
      <permalink>railsinfo-requires-version-for-unwanted-frameworks</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>Rails::Info requires version for unwanted frameworks</title>
      <updated-at type="datetime">2009-09-01T10:30:25+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Geoff Buesing</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3124</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>7b582d273e52ab4ff28fe0c662b9895c716583ec</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-09-01T04:45:50+01:00</created-at>
      <filename>rails_info_bug.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">257691</id>
      <size type="integer">1000</size>
      <uploader-id type="integer">15783</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/257691/rails_info_bug.diff</url>
    </attachment>
  </attachments>
</ticket>
