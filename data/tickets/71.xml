<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-01T03:06:17+01:00</created-at>
  <creator-id type="integer">5060</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">71</number>
  <permalink>add-change_table-to-core</permalink>
  <priority type="integer">10511</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord edge migrations patch</tag>
  <title>[patch] change_table block</title>
  <updated-at type="datetime">2008-05-03T17:30:10+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">8</version>
  <user-name>Repository</user-name>
  <creator-name>Jeff Dean</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/71</url>
  <priority-name nil="true"></priority-name>
  <original-body>I created a fork that adds change_table to migrations like so:

@@@ ruby
change_table :videos do |t|
  t.add_timestamps
  t.add_belongs_to :goat
  t.add_string :name, :email, :limit =&gt; 20
  t.remove_column :name, :email
  t.string :some_string
  t.rename :some_new_name
  t.drop
end
@@@

This brings &quot;Sexy Migrations&quot;:http://ryandaigle.com/articles/2007/5/6/what-s-new-in-edge-rails-bringin-sexy-back to the change table helpers as well, in the same style as create_table.

It contains wrappers for all of the migration functions, tests and docs.  Some have metioned that &quot;rename&quot; and &quot;drop&quot; are confusing, but I find the alternatives confusing.  I'd be open to removing &quot;rename&quot; and &quot;drop&quot; and updating the tests and docs if that's necessary.

This also makes remove_column take an array, so that the sexy migration &quot;t.string :name, :email&quot; has a counterpart &quot;remove_column(s) :name, :email&quot;

* Read more info at &quot;http://github.com/zilkey/rails/wikis&quot;:http://github.com/zilkey/rails/wikis
* You can read through the docs at &quot;http://ar.zilkey.com/&quot;:http://ar.zilkey.com/
* You can pull from git://github.com/zilkey/rails.git with:

@@@
$ git remote add zilkey git://github.com/zilkey/rails.git
$ git checkout -b zilkey/master
$ git pull zilkey
@@@

(or however you normally pull requests)

I'd be happy to provide and upload a patch as well, but now that github exists, I can't see any reason to (pulling seems much faster and easier).  But if not having a patch is a blocker, I'll upload one.

Feedback so far has been tepid, but I think this is a strong and useful addition, one that I use regularly now in production.  It's a big feature to add, but it's very well tested and documented.</original-body>
  <latest-body>I created a fork that adds change_table to migrations like so:

@@@ ruby
change_table :videos do |t|
  t.add_timestamps
  t.add_belongs_to :goat
  t.add_string :name, :email, :limit =&gt; 20
  t.remove_column :name, :email
  t.string :some_string
  t.rename :some_new_name
  t.drop
end
@@@

This brings &quot;Sexy Migrations&quot;:http://ryandaigle.com/articles/2007/5/6/what-s-new-in-edge-rails-bringin-sexy-back to the change table helpers as well, in the same style as create_table.

It contains wrappers for all of the migration functions, tests and docs.  Some have metioned that &quot;rename&quot; and &quot;drop&quot; are confusing, but I find the alternatives confusing.  I'd be open to removing &quot;rename&quot; and &quot;drop&quot; and updating the tests and docs if that's necessary.

This also makes remove_column take an array, so that the sexy migration &quot;t.string :name, :email&quot; has a counterpart &quot;remove_column(s) :name, :email&quot;

* Read more info at &quot;http://github.com/zilkey/rails/wikis&quot;:http://github.com/zilkey/rails/wikis
* You can read through the docs at &quot;http://ar.zilkey.com/&quot;:http://ar.zilkey.com/
* You can pull from git://github.com/zilkey/rails.git with:

@@@
$ git remote add zilkey git://github.com/zilkey/rails.git
$ git checkout -b zilkey/master
$ git pull zilkey
@@@

(or however you normally pull requests)

I'd be happy to provide and upload a patch as well, but now that github exists, I can't see any reason to (pulling seems much faster and easier).  But if not having a patch is a blocker, I'll upload one.

Feedback so far has been tepid, but I think this is a strong and useful addition, one that I use regularly now in production.  It's a big feature to add, but it's very well tested and documented.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
I created a fork that adds change_table to migrations like so:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;change_table :videos do |t|
  t.add_timestamps
  t.add_belongs_to :goat
  t.add_string :name, :email, :limit =&amp;gt; 20
  t.remove_column :name, :email
  t.string :some_string
  t.rename :some_new_name
  t.drop
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This brings &lt;a href=&quot;http://ryandaigle.com/articles/2007/5/6/what-s-new-in-edge-rails-bringin-sexy-back&quot;&gt;Sexy Migrations&lt;/a&gt; to the change table helpers as well, in the same style as create_table.
&lt;/p&gt;&lt;p&gt;
It contains wrappers for all of the migration functions, tests and docs.  Some have metioned that &quot;rename&quot; and &quot;drop&quot; are confusing, but I find the alternatives confusing.  I'd be open to removing &quot;rename&quot; and &quot;drop&quot; and updating the tests and docs if that's necessary.
&lt;/p&gt;&lt;p&gt;
This also makes remove_column take an array, so that the sexy migration &quot;t.string :name, :email&quot; has a counterpart &quot;remove_column(s) :name, :email&quot;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
Read more info at &lt;a href=&quot;http://github.com/zilkey/rails/wikis&quot;&gt;http://github.com/zilkey/rails/wikis&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
You can read through the docs at &lt;a href=&quot;http://ar.zilkey.com/&quot;&gt;http://ar.zilkey.com/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
You can pull from git://github.com/zilkey/rails.git with:
&lt;/li&gt;&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;$ git remote add zilkey git://github.com/zilkey/rails.git
$ git checkout -b zilkey/master
$ git pull zilkey&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
(or however you normally pull requests)
&lt;/p&gt;&lt;p&gt;
I'd be happy to provide and upload a patch as well, but now that github exists, I can't see any reason to (pulling seems much faster and easier).  But if not having a patch is a blocker, I'll upload one.
&lt;/p&gt;&lt;p&gt;
Feedback so far has been tepid, but I think this is a strong and useful addition, one that I use regularly now in production.  It's a big feature to add, but it's very well tested and documented.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I created a fork that adds change_table to migrations like so:

@@@ ruby
change_table :videos do |t|
  t.add_timestamps
  t.add_belongs_to :goat
  t.add_string :name, :email, :limit =&gt; 20
  t.remove_column :name, :email
  t.string :some_string
  t.rename :some_new_name
  t.drop
end
@@@

This brings &quot;Sexy Migrations&quot;:http://ryandaigle.com/articles/2007/5/6/what-s-new-in-edge-rails-bringin-sexy-back to the change table helpers as well, in the same style as create_table.

It contains wrappers for all of the migration functions, tests and docs.  Some have metioned that &quot;rename&quot; and &quot;drop&quot; are confusing, but I find the alternatives confusing.  I'd be open to removing &quot;rename&quot; and &quot;drop&quot; and updating the tests and docs if that's necessary.

This also makes remove_column take an array, so that the sexy migration &quot;t.string :name, :email&quot; has a counterpart &quot;remove_column(s) :name, :email&quot;

* Read more info at &quot;http://github.com/zilkey/rails/wikis&quot;:http://github.com/zilkey/rails/wikis
* You can read through the docs at &quot;http://ar.zilkey.com/&quot;:http://ar.zilkey.com/
* You can pull from git://github.com/zilkey/rails.git with:

@@@
$ git remote add zilkey git://github.com/zilkey/rails.git
$ git checkout -b zilkey/master
$ git pull zilkey
@@@

(or however you normally pull requests)

I'd be happy to provide and upload a patch as well, but now that github exists, I can't see any reason to (pulling seems much faster and easier).  But if not having a patch is a blocker, I'll upload one.

Feedback so far has been tepid, but I think this is a strong and useful addition, one that I use regularly now in production.  It's a big feature to add, but it's very well tested and documented.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I created a fork that adds change_table to migrations like so:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;change_table :videos do |t|
  t.add_timestamps
  t.add_belongs_to :goat
  t.add_string :name, :email, :limit =&amp;gt; 20
  t.remove_column :name, :email
  t.string :some_string
  t.rename :some_new_name
  t.drop
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This brings &lt;a href=&quot;http://ryandaigle.com/articles/2007/5/6/what-s-new-in-edge-rails-bringin-sexy-back&quot;&gt;Sexy Migrations&lt;/a&gt; to the change table helpers as well, in the same style as create_table.
&lt;/p&gt;&lt;p&gt;
It contains wrappers for all of the migration functions, tests and docs.  Some have metioned that &quot;rename&quot; and &quot;drop&quot; are confusing, but I find the alternatives confusing.  I'd be open to removing &quot;rename&quot; and &quot;drop&quot; and updating the tests and docs if that's necessary.
&lt;/p&gt;&lt;p&gt;
This also makes remove_column take an array, so that the sexy migration &quot;t.string :name, :email&quot; has a counterpart &quot;remove_column(s) :name, :email&quot;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
Read more info at &lt;a href=&quot;http://github.com/zilkey/rails/wikis&quot;&gt;http://github.com/zilkey/rails/wikis&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
You can read through the docs at &lt;a href=&quot;http://ar.zilkey.com/&quot;&gt;http://ar.zilkey.com/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;
You can pull from git://github.com/zilkey/rails.git with:
&lt;/li&gt;&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;$ git remote add zilkey git://github.com/zilkey/rails.git
$ git checkout -b zilkey/master
$ git pull zilkey&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
(or however you normally pull requests)
&lt;/p&gt;&lt;p&gt;
I'd be happy to provide and upload a patch as well, but now that github exists, I can't see any reason to (pulling seems much faster and easier).  But if not having a patch is a blocker, I'll upload one.
&lt;/p&gt;&lt;p&gt;
Feedback so far has been tepid, but I think this is a strong and useful addition, one that I use regularly now in production.  It's a big feature to add, but it's very well tested and documented.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T03:06:17+01:00</created-at>
      <creator-id type="integer">5060</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">71</number>
      <permalink>add-change_table-to-core</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Add change_table to core?</title>
      <updated-at type="datetime">2008-05-01T03:06:17+01:00</updated-at>
      <user-id type="integer">5060</user-id>
      <version type="integer">1</version>
      <user-name>Jeff Dean</user-name>
      <creator-name>Jeff Dean</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/71</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Thoughts: Make the add_ implicit, just like in create_table, so you do t.string :column to add a column. Then you can drop column from remote for just doing t.remove :column. I don't think drop and rename fit well. Otherwise, I like it!</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Thoughts: Make the add_ implicit, just like in create_table, so you do t.string :column to add a column. Then you can drop column from remote for just doing t.remove :column. I don't think drop and rename fit well. Otherwise, I like it!
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T04:40:35+01:00</created-at>
      <creator-id type="integer">5060</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">71</number>
      <permalink>add-change_table-to-core</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Add change_table to core?</title>
      <updated-at type="datetime">2008-05-01T04:40:35+01:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">2</version>
      <user-name>DHH</user-name>
      <creator-name>Jeff Dean</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/71</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Also, pulling is actually a big hassle. Please do upload a patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Also, pulling is actually a big hassle. Please do upload a patch.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T05:27:19+01:00</created-at>
      <creator-id type="integer">5060</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">71</number>
      <permalink>add-change_table-to-core</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Add change_table to core?</title>
      <updated-at type="datetime">2008-05-01T05:27:19+01:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">3</version>
      <user-name>DHH</user-name>
      <creator-name>Jeff Dean</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/71</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I agree that removing add_ makes it much clearer.  However, removing those makes the naming a bit less clear to me.  I've made those changes and provided 2 patches here so that you can choose the style you like the most:

* Regular Version which omits the word &quot;column&quot; and looks more like create_table with:
** t.change
** t.change_default
** t.rename
* Verbose Version which retains the word &quot;column&quot; and looks more like regular change helpers with:
** t.change_column
** t.change_column_default
** t.rename_column

Each patch has appropriate passing tests and documentation and are identical except for the 3 methods mentioned above.

The regular patch produces all of the following methods:

@@@ ruby
change_table :table do |t|
 t.column
 t.index
 t.timestamps
 t.change
 t.change_default
 t.rename
 t.references
 t.belongs_to
 t.string 
 t.text 
 t.integer 
 t.float 
 t.decimal 
 t.datetime 
 t.timestamp 
 t.time 
 t.date 
 t.binary 
 t.boolean
 t.remove
 t.remove_references
 t.remove_belongs_to
 t.remove_index
 t.remove_timestamps
end
@@@

The verbose patch produces all of the following methods:

@@@ ruby
change_table :table do |t|
  t.column
  t.index
  t.timestamps
  t.change_column
  t.change_column_default
  t.rename_column
  t.references
  t.belongs_to
  t.string 
  t.text 
  t.integer 
  t.float 
  t.decimal 
  t.datetime 
  t.timestamp 
  t.time 
  t.date 
  t.binary 
  t.boolean
  t.remove
  t.remove_references
  t.remove_belongs_to
  t.remove_index
  t.remove_timestamps
end
@@@

I've removed the helpers for &quot;drop_table&quot; and &quot;rename_table&quot;.  In both patches, &quot;remove_column&quot; now takes an array of field names, with updated tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I agree that removing add_ makes it much clearer.  However, removing those makes the naming a bit less clear to me.  I've made those changes and provided 2 patches here so that you can choose the style you like the most:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
Regular Version which omits the word &quot;column&quot; and looks more like create_table with:
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
** t.change
&lt;/p&gt;&lt;p&gt;
** t.change_default
&lt;/p&gt;&lt;p&gt;
** t.rename
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
Verbose Version which retains the word &quot;column&quot; and looks more like regular change helpers with:
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
** t.change_column
&lt;/p&gt;&lt;p&gt;
** t.change_column_default
&lt;/p&gt;&lt;p&gt;
** t.rename_column
&lt;/p&gt;&lt;p&gt;
Each patch has appropriate passing tests and documentation and are identical except for the 3 methods mentioned above.
&lt;/p&gt;&lt;p&gt;
The regular patch produces all of the following methods:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;change_table :table do |t|
 t.column
 t.index
 t.timestamps
 t.change
 t.change_default
 t.rename
 t.references
 t.belongs_to
 t.string 
 t.text 
 t.integer 
 t.float 
 t.decimal 
 t.datetime 
 t.timestamp 
 t.time 
 t.date 
 t.binary 
 t.boolean
 t.remove
 t.remove_references
 t.remove_belongs_to
 t.remove_index
 t.remove_timestamps
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
The verbose patch produces all of the following methods:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;change_table :table do |t|
  t.column
  t.index
  t.timestamps
  t.change_column
  t.change_column_default
  t.rename_column
  t.references
  t.belongs_to
  t.string 
  t.text 
  t.integer 
  t.float 
  t.decimal 
  t.datetime 
  t.timestamp 
  t.time 
  t.date 
  t.binary 
  t.boolean
  t.remove
  t.remove_references
  t.remove_belongs_to
  t.remove_index
  t.remove_timestamps
end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
I've removed the helpers for &quot;drop_table&quot; and &quot;rename_table&quot;.  In both patches, &quot;remove_column&quot; now takes an array of field names, with updated tests.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T10:13:55+01:00</created-at>
      <creator-id type="integer">5060</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">71</number>
      <permalink>add-change_table-to-core</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Add change_table to core?</title>
      <updated-at type="datetime">2008-05-01T10:13:55+01:00</updated-at>
      <user-id type="integer">5060</user-id>
      <version type="integer">4</version>
      <user-name>Jeff Dean</user-name>
      <creator-name>Jeff Dean</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/71</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(the list formatting got eaten on that last post...)

Here's the verbose patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(the list formatting got eaten on that last post...)
&lt;/p&gt;&lt;p&gt;
Here's the verbose patch.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T10:14:45+01:00</created-at>
      <creator-id type="integer">5060</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">71</number>
      <permalink>add-change_table-to-core</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Add change_table to core?</title>
      <updated-at type="datetime">2008-05-01T10:14:45+01:00</updated-at>
      <user-id type="integer">5060</user-id>
      <version type="integer">5</version>
      <user-name>Jeff Dean</user-name>
      <creator-name>Jeff Dean</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/71</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Getting the following failures on rake test_sqlite3 in AR after applying:

  1) Failure:
test_integer_creates_integer_column(ChangeTableMigrationsTest)
    [(eval):1:in `add_column'
     (eval):16:in `integer'
     (eval):5:in `each'
     (eval):5:in `integer'
     ./test/cases/migration_test.rb:1253:in `test_integer_creates_integer_column'
     ./test/cases/migration_test.rb:1345:in `with_change_table'
     ./test/cases/../../lib/active_record/connection_adapters/abstract/schema_statements.rb:165:in `change_table'
     ./test/cases/migration_test.rb:1344:in `with_change_table'
     ./test/cases/migration_test.rb:1250:in `test_integer_creates_integer_column'
     ./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `__send__'
     ./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `run']:
#&lt;Mock:0x1f05310&gt;.add_column(:delete_me, :foo, 'integer', {}) - expected calls: 0, actual calls: 1
Similar expectations:
add_column(:delete_me, :foo, 'int(11)', {})
add_column(:delete_me, :bar, 'int(11)', {})

  2) Failure:
test_add_remove_single_field_using_an_array_of_arguments(MigrationTest)
    [./test/cases/migration_test.rb:471:in `test_add_remove_single_field_using_an_array_of_arguments'
     ./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `__send__'
     ./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `run']:
&lt;false&gt; is not true.

  3) Failure:
test_add_remove_single_field_using_multiple_string_arguments(MigrationTest)
    [./test/cases/migration_test.rb:423:in `test_add_remove_single_field_using_multiple_string_arguments'
     ./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `__send__'
     ./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `run']:
&lt;false&gt; is not true.

  4) Failure:
test_add_remove_single_field_using_multiple_symbol_arguments(MigrationTest)
    [./test/cases/migration_test.rb:441:in `test_add_remove_single_field_using_multiple_symbol_arguments'
     ./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `__send__'
     ./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `run']:
&lt;false&gt; is not true.

  5) Failure:
test_remove_columns_works_like_remove_column(MigrationTest)
    [./test/cases/migration_test.rb:477:in `test_remove_columns_works_like_remove_column'
     ./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `__send__'
     ./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `run']:
&lt;false&gt; is not true.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Getting the following failures on rake test_sqlite3 in AR after applying:
&lt;/p&gt;&lt;p&gt;
1) Failure:
&lt;/p&gt;&lt;p&gt;
test_integer_creates_integer_column(ChangeTableMigrationsTest)
&lt;/p&gt;&lt;p&gt;
[(eval):1:in `add_column'
&lt;/p&gt;&lt;p&gt;
(eval):16:in `integer'
&lt;/p&gt;&lt;p&gt;
(eval):5:in `each'
&lt;/p&gt;&lt;p&gt;
(eval):5:in `integer'
&lt;/p&gt;&lt;p&gt;
./test/cases/migration_test.rb:1253:in `test_integer_creates_integer_column'
&lt;/p&gt;&lt;p&gt;
./test/cases/migration_test.rb:1345:in `with_change_table'
&lt;/p&gt;&lt;p&gt;
./test/cases/../../lib/active_record/connection_adapters/abstract/schema_statements.rb:165:in `change_table'
&lt;/p&gt;&lt;p&gt;
./test/cases/migration_test.rb:1344:in `with_change_table'
&lt;/p&gt;&lt;p&gt;
./test/cases/migration_test.rb:1250:in `test_integer_creates_integer_column'
&lt;/p&gt;&lt;p&gt;
./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `__send__'
&lt;/p&gt;&lt;p&gt;
./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `run']:
&lt;/p&gt;&lt;p&gt;
#.add_column(:delete_me, :foo, 'integer', {}) - expected calls: 0, actual calls: 1
&lt;/p&gt;&lt;p&gt;
Similar expectations:
&lt;/p&gt;&lt;p&gt;
add_column(:delete_me, :foo, 'int(11)', {})
&lt;/p&gt;&lt;p&gt;
add_column(:delete_me, :bar, 'int(11)', {})
&lt;/p&gt;&lt;p&gt;
2) Failure:
&lt;/p&gt;&lt;p&gt;
test_add_remove_single_field_using_an_array_of_arguments(MigrationTest)
&lt;/p&gt;&lt;p&gt;
[./test/cases/migration_test.rb:471:in `test_add_remove_single_field_using_an_array_of_arguments'
&lt;/p&gt;&lt;p&gt;
./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `__send__'
&lt;/p&gt;&lt;p&gt;
./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `run']:
&lt;/p&gt;&lt;p&gt;
 is not true.
&lt;/p&gt;&lt;p&gt;
3) Failure:
&lt;/p&gt;&lt;p&gt;
test_add_remove_single_field_using_multiple_string_arguments(MigrationTest)
&lt;/p&gt;&lt;p&gt;
[./test/cases/migration_test.rb:423:in `test_add_remove_single_field_using_multiple_string_arguments'
&lt;/p&gt;&lt;p&gt;
./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `__send__'
&lt;/p&gt;&lt;p&gt;
./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `run']:
&lt;/p&gt;&lt;p&gt;
 is not true.
&lt;/p&gt;&lt;p&gt;
4) Failure:
&lt;/p&gt;&lt;p&gt;
test_add_remove_single_field_using_multiple_symbol_arguments(MigrationTest)
&lt;/p&gt;&lt;p&gt;
[./test/cases/migration_test.rb:441:in `test_add_remove_single_field_using_multiple_symbol_arguments'
&lt;/p&gt;&lt;p&gt;
./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `__send__'
&lt;/p&gt;&lt;p&gt;
./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `run']:
&lt;/p&gt;&lt;p&gt;
 is not true.
&lt;/p&gt;&lt;p&gt;
5) Failure:
&lt;/p&gt;&lt;p&gt;
test_remove_columns_works_like_remove_column(MigrationTest)
&lt;/p&gt;&lt;p&gt;
[./test/cases/migration_test.rb:477:in `test_remove_columns_works_like_remove_column'
&lt;/p&gt;&lt;p&gt;
./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `__send__'
&lt;/p&gt;&lt;p&gt;
./test/cases/../../lib/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:59:in `run']:
&lt;/p&gt;&lt;p&gt;
 is not true.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-01T23:45:29+01:00</created-at>
      <creator-id type="integer">5060</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">71</number>
      <permalink>add-change_table-to-core</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Add change_table to core?</title>
      <updated-at type="datetime">2008-05-01T23:45:29+01:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">6</version>
      <user-name>DHH</user-name>
      <creator-name>Jeff Dean</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/71</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Sorry to have taken your time with that - I've updated the patches to include tests that run in:

* MySQL
* PostgreSQL
* SQLite3

I don't have any of the other databases installed, so I can't vouch for those, but SQLite should work as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Sorry to have taken your time with that - I've updated the patches to include tests that run in:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
MySQL
&lt;/li&gt;&lt;li&gt;
PostgreSQL
&lt;/li&gt;&lt;li&gt;
SQLite3
&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;
I don't have any of the other databases installed, so I can't vouch for those, but SQLite should work as well.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-02T04:58:19+01:00</created-at>
      <creator-id type="integer">5060</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Add change_table to core?
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">71</number>
      <permalink>add-change_table-to-core</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>[patch] change_table block</title>
      <updated-at type="datetime">2008-05-02T04:58:19+01:00</updated-at>
      <user-id type="integer">5060</user-id>
      <version type="integer">7</version>
      <user-name>Jeff Dean</user-name>
      <creator-name>Jeff Dean</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/71</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [96980bd561d79824b6cb6efbcbecdcbf8785d452]) Added change_table for migrations (Jeff Dean) [#71 state:resolved]
http://github.com/rails/rails/commit/96980bd561d79824b6cb6efbcbecdcbf8785d452</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [96980bd561d79824b6cb6efbcbecdcbf8785d452]) Added change_table for migrations (Jeff Dean) [#71 state:resolved]
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/96980bd561d79824b6cb6efbcbecdcbf8785d452&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-03T17:30:10+01:00</created-at>
      <creator-id type="integer">5060</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">71</number>
      <permalink>add-change_table-to-core</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>[patch] change_table block</title>
      <updated-at type="datetime">2008-05-03T17:30:10+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">8</version>
      <user-name>Repository</user-name>
      <creator-name>Jeff Dean</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/71</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>4a4f8a042524f9e7f1736a3a0246f87d6a35e091</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-02T04:58:19+01:00</created-at>
      <filename>change_table_with_passing_tests.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">21172</id>
      <size type="integer">21126</size>
      <uploader-id type="integer">5060</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/21172/change_table_with_passing_tests.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>1b0d889df1ce393de79fdeff24b72ba9c68e1e9d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-02T04:58:47+01:00</created-at>
      <filename>change_table_verbose_with_passing_tests.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">21173</id>
      <size type="integer">20980</size>
      <uploader-id type="integer">5060</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/21173/change_table_verbose_with_passing_tests.patch</url>
    </attachment>
  </attachments>
</ticket>
