<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:11+00:00</created-at>
  <creator-id type="integer">21958</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4637</number>
  <permalink>patch-fix-json-serialization-of-activemodelerrors</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activemodel activesupport json patch serialization</tag>
  <title>[PATCH] Fix JSON serialization of ActiveModel::Errors</title>
  <updated-at type="datetime">2011-02-19T09:28:11+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">5</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Sam Pohlenz</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4637</url>
  <priority-name nil="true"></priority-name>
  <original-body>JSON encoding an ActiveModel::Errors object with :only option currently breaks:

    &gt;&gt; ActiveSupport::JSON.encode(ActiveModel::Errors.new(nil), :only =&gt; :attribute)
    ArgumentError: wrong number of arguments (0 for 1)
	from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `initialize'
	from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `new'
	from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `slice'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:210:in `as_json'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:48:in `encode'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:62:in `check_for_circular_references'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:47:in `encode'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:32:in `encode'
	from (irb):2

This fails as Hash#slice in ActiveSupport tries to instantiate a new ActiveModel::Errors with no arguments (one arg is required).

This patch changes the behavior of Hash#slice to dup and clear the hash, which will work even when hash subclasses change the #initialize parameters.</original-body>
  <latest-body>JSON encoding an ActiveModel::Errors object with :only option currently breaks:

    &gt;&gt; ActiveSupport::JSON.encode(ActiveModel::Errors.new(nil), :only =&gt; :attribute)
    ArgumentError: wrong number of arguments (0 for 1)
	from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `initialize'
	from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `new'
	from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `slice'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:210:in `as_json'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:48:in `encode'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:62:in `check_for_circular_references'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:47:in `encode'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:32:in `encode'
	from (irb):2

This fails as Hash#slice in ActiveSupport tries to instantiate a new ActiveModel::Errors with no arguments (one arg is required).

This patch changes the behavior of Hash#slice to dup and clear the hash, which will work even when hash subclasses change the #initialize parameters.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;JSON encoding an ActiveModel::Errors object with :only option
currently breaks:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; ActiveSupport::JSON.encode(ActiveModel::Errors.new(nil), :only =&amp;gt; :attribute)
ArgumentError: wrong number of arguments (0 for 1)
from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `initialize'
from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `new'
from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `slice'
from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:210:in `as_json'
from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:48:in `encode'
from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:62:in `check_for_circular_references'
from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:47:in `encode'
from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:32:in `encode'
from (irb):2&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This fails as Hash#slice in ActiveSupport tries to instantiate a
new ActiveModel::Errors with no arguments (one arg is
required).&lt;/p&gt;
&lt;p&gt;This patch changes the behavior of Hash#slice to dup and clear
the hash, which will work even when hash subclasses change the
#initialize parameters.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>JSON encoding an ActiveModel::Errors object with :only option currently breaks:

    &gt;&gt; ActiveSupport::JSON.encode(ActiveModel::Errors.new(nil), :only =&gt; :attribute)
    ArgumentError: wrong number of arguments (0 for 1)
	from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `initialize'
	from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `new'
	from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `slice'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:210:in `as_json'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:48:in `encode'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:62:in `check_for_circular_references'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:47:in `encode'
	from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:32:in `encode'
	from (irb):2

This fails as Hash#slice in ActiveSupport tries to instantiate a new ActiveModel::Errors with no arguments (one arg is required).

This patch changes the behavior of Hash#slice to dup and clear the hash, which will work even when hash subclasses change the #initialize parameters.</body>
      <body-html>&lt;div&gt;&lt;p&gt;JSON encoding an ActiveModel::Errors object with :only option
currently breaks:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;gt;&amp;gt; ActiveSupport::JSON.encode(ActiveModel::Errors.new(nil), :only =&amp;gt; :attribute)
ArgumentError: wrong number of arguments (0 for 1)
from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `initialize'
from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `new'
from /Users/sam/Development/rails/activesupport/lib/active_support/core_ext/hash/slice.rb:17:in `slice'
from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:210:in `as_json'
from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:48:in `encode'
from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:62:in `check_for_circular_references'
from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:47:in `encode'
from /Users/sam/Development/rails/activesupport/lib/active_support/json/encoding.rb:32:in `encode'
from (irb):2&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This fails as Hash#slice in ActiveSupport tries to instantiate a
new ActiveModel::Errors with no arguments (one arg is
required).&lt;/p&gt;
&lt;p&gt;This patch changes the behavior of Hash#slice to dup and clear
the hash, which will work even when hash subclasses change the
#initialize parameters.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-18T08:48:47+01:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4637</number>
      <permalink>patch-fix-json-serialization-of-activemodelerrors</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel activesupport json patch serialization</tag>
      <title>[PATCH] Fix JSON serialization of ActiveModel::Errors</title>
      <updated-at type="datetime">2010-05-18T08:48:49+01:00</updated-at>
      <user-id type="integer">21958</user-id>
      <version type="integer">1</version>
      <user-name>Sam Pohlenz</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4637</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-21T00:50:11+01:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4637</number>
      <permalink>patch-fix-json-serialization-of-activemodelerrors</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel activesupport json patch serialization</tag>
      <title>[PATCH] Fix JSON serialization of ActiveModel::Errors</title>
      <updated-at type="datetime">2010-05-21T00:50:15+01:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">2</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4637</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>What's strange in the patch is that the test is in activemodel while the code change is in activesupport. The change also implies that now all slice operations will first dup the hash before clearing it, which might be a performance problem, but I have no data to back that. You might want to just override slice in ActiveModel::Errors if you just want it to be serializable. Or maybe just use Hash.new in slice.

I attached a patch with a test related to the change in activesupport anyway.</body>
      <body-html>&lt;div&gt;&lt;p&gt;What's strange in the patch is that the test is in activemodel
while the code change is in activesupport. The change also implies
that now all slice operations will first dup the hash before
clearing it, which might be a performance problem, but I have no
data to back that. You might want to just override slice in
ActiveModel::Errors if you just want it to be serializable. Or
maybe just use Hash.new in slice.&lt;/p&gt;
&lt;p&gt;I attached a patch with a test related to the change in
activesupport anyway.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-21T13:46:46+01:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4637</number>
      <permalink>patch-fix-json-serialization-of-activemodelerrors</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activemodel activesupport json patch serialization</tag>
      <title>[PATCH] Fix JSON serialization of ActiveModel::Errors</title>
      <updated-at type="datetime">2010-05-21T13:46:58+01:00</updated-at>
      <user-id type="integer">99481</user-id>
      <version type="integer">3</version>
      <user-name>&#201;tienne Barri&#233;</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4637</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:38:24+00:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4637</number>
      <permalink>patch-fix-json-serialization-of-activemodelerrors</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activemodel activesupport json patch serialization</tag>
      <title>[PATCH] Fix JSON serialization of ActiveModel::Errors</title>
      <updated-at type="datetime">2011-02-02T17:24:52+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4637</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:38:27+00:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4637</number>
      <permalink>patch-fix-json-serialization-of-activemodelerrors</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activemodel activesupport json patch serialization</tag>
      <title>[PATCH] Fix JSON serialization of ActiveModel::Errors</title>
      <updated-at type="datetime">2011-02-02T17:25:02+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">5</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4637</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T00:18:27+00:00</created-at>
      <creator-id type="integer">21958</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4637</number>
      <permalink>patch-fix-json-serialization-of-activemodelerrors</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activemodel activesupport json patch serialization</tag>
      <title>[PATCH] Fix JSON serialization of ActiveModel::Errors</title>
      <updated-at type="datetime">2011-02-19T09:28:11+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">6</version>
      <user-name>mklo</user-name>
      <creator-name>Sam Pohlenz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4637</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>b9b48b47bda436d5c9302181f31fd54199ae7741</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-18T08:48:47+01:00</created-at>
      <filename>fix-json-serialization-of-activemodel-errors.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">524609</id>
      <size type="integer">2000</size>
      <uploader-id type="integer">21958</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/524609/fix-json-serialization-of-activemodel-errors.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>2032d1e752ff36c107e0abb16d35a55d81aa3699</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-05-21T13:46:46+01:00</created-at>
      <filename>hash-slice-subclasses.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">529801</id>
      <size type="integer">1097</size>
      <uploader-id type="integer">99481</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/529801/hash-slice-subclasses.patch</url>
    </attachment>
  </attachments>
</ticket>
