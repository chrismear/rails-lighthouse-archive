<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-12-23T21:18:10+00:00</created-at>
  <creator-id type="integer">115417</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6218</number>
  <permalink>rails-3-random-associations-behavior-returning-activerecordrelation</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>&quot;activerecord relation&quot; problem rails303</tag>
  <title>Rails 3 random associations behavior returning ActiveRecord::Relation</title>
  <updated-at type="datetime">2011-03-25T00:00:23+00:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">4</version>
  <user-name>rails</user-name>
  <creator-name>Gerardo</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6218</url>
  <priority-name nil="true"></priority-name>
  <original-body>I am currently having a strange issue with an application migrated from rails 2.3.8 to rails 3 (3.0.1, 3.0.2, 3.0.3). At random moments associations behave strangely. In some cases, an associated object will return the Relation object, instead of the corresponding model. This seems to happen mostly on polymorphic associations. For example:

class A
  belongs_to :b, :polymorphic =&gt; true
end

class B
  has_many :a, :as =&gt; :source
end

When invoking &quot;a.b&quot; this will &quot;sometimes&quot; return the Relation object (causing a &quot;undefined method ... for ActiveRecord::Relation&quot; error to raise) and some other times it will return the correct B object. When the relation object is returned, it may sometimes be &quot;fixed&quot; temporarily by restarting the server, but it will eventually show up again.

Another issue i get is that when &quot;getting&quot; associated objects, sometimes the required filters are not automatically applied (where element id = ...). this causes the query to return the first object in the table and not the correct associated object.

This is becoming a very frustrating issue, specially since i don't seem to find anyone else with this or similar issues.

All finder methods in the application have been migrated to the new rails form, but this strange behavior remains.

The current configuration being used is: Ubuntu 10, nginx server + passenger (3.0.2), rails (3.0.3), ruby 1.9.2p0 (2010-08-18 revision 29036)</original-body>
  <latest-body>I am currently having a strange issue with an application migrated from rails 2.3.8 to rails 3 (3.0.1, 3.0.2, 3.0.3). At random moments associations behave strangely. In some cases, an associated object will return the Relation object, instead of the corresponding model. This seems to happen mostly on polymorphic associations. For example:

class A
  belongs_to :b, :polymorphic =&gt; true
end

class B
  has_many :a, :as =&gt; :source
end

When invoking &quot;a.b&quot; this will &quot;sometimes&quot; return the Relation object (causing a &quot;undefined method ... for ActiveRecord::Relation&quot; error to raise) and some other times it will return the correct B object. When the relation object is returned, it may sometimes be &quot;fixed&quot; temporarily by restarting the server, but it will eventually show up again.

Another issue i get is that when &quot;getting&quot; associated objects, sometimes the required filters are not automatically applied (where element id = ...). this causes the query to return the first object in the table and not the correct associated object.

This is becoming a very frustrating issue, specially since i don't seem to find anyone else with this or similar issues.

All finder methods in the application have been migrated to the new rails form, but this strange behavior remains.

The current configuration being used is: Ubuntu 10, nginx server + passenger (3.0.2), rails (3.0.3), ruby 1.9.2p0 (2010-08-18 revision 29036)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I am currently having a strange issue with an application
migrated from rails 2.3.8 to rails 3 (3.0.1, 3.0.2, 3.0.3). At
random moments associations behave strangely. In some cases, an
associated object will return the Relation object, instead of the
corresponding model. This seems to happen mostly on polymorphic
associations. For example:&lt;/p&gt;
&lt;p&gt;class A&lt;br&gt;
belongs_to :b, :polymorphic =&amp;gt; true end&lt;/p&gt;
&lt;p&gt;class B&lt;br&gt;
has_many :a, :as =&amp;gt; :source end&lt;/p&gt;
&lt;p&gt;When invoking &quot;a.b&quot; this will &quot;sometimes&quot; return the Relation
object (causing a &quot;undefined method ... for ActiveRecord::Relation&quot;
error to raise) and some other times it will return the correct B
object. When the relation object is returned, it may sometimes be
&quot;fixed&quot; temporarily by restarting the server, but it will
eventually show up again.&lt;/p&gt;
&lt;p&gt;Another issue i get is that when &quot;getting&quot; associated objects,
sometimes the required filters are not automatically applied (where
element id = ...). this causes the query to return the first object
in the table and not the correct associated object.&lt;/p&gt;
&lt;p&gt;This is becoming a very frustrating issue, specially since i
don't seem to find anyone else with this or similar issues.&lt;/p&gt;
&lt;p&gt;All finder methods in the application have been migrated to the
new rails form, but this strange behavior remains.&lt;/p&gt;
&lt;p&gt;The current configuration being used is: Ubuntu 10, nginx server
+ passenger (3.0.2), rails (3.0.3), ruby 1.9.2p0 (2010-08-18
revision 29036)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am currently having a strange issue with an application migrated from rails 2.3.8 to rails 3 (3.0.1, 3.0.2, 3.0.3). At random moments associations behave strangely. In some cases, an associated object will return the Relation object, instead of the corresponding model. This seems to happen mostly on polymorphic associations. For example:

class A
  belongs_to :b, :polymorphic =&gt; true
end

class B
  has_many :a, :as =&gt; :source
end

When invoking &quot;a.b&quot; this will &quot;sometimes&quot; return the Relation object (causing a &quot;undefined method ... for ActiveRecord::Relation&quot; error to raise) and some other times it will return the correct B object. When the relation object is returned, it may sometimes be &quot;fixed&quot; temporarily by restarting the server, but it will eventually show up again.

Another issue i get is that when &quot;getting&quot; associated objects, sometimes the required filters are not automatically applied (where element id = ...). this causes the query to return the first object in the table and not the correct associated object.

This is becoming a very frustrating issue, specially since i don't seem to find anyone else with this or similar issues.

All finder methods in the application have been migrated to the new rails form, but this strange behavior remains.

The current configuration being used is: Ubuntu 10, nginx server + passenger (3.0.2), rails (3.0.3), ruby 1.9.2p0 (2010-08-18 revision 29036)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am currently having a strange issue with an application
migrated from rails 2.3.8 to rails 3 (3.0.1, 3.0.2, 3.0.3). At
random moments associations behave strangely. In some cases, an
associated object will return the Relation object, instead of the
corresponding model. This seems to happen mostly on polymorphic
associations. For example:&lt;/p&gt;
&lt;p&gt;class A&lt;br&gt;
belongs_to :b, :polymorphic =&amp;gt; true end&lt;/p&gt;
&lt;p&gt;class B&lt;br&gt;
has_many :a, :as =&amp;gt; :source end&lt;/p&gt;
&lt;p&gt;When invoking &quot;a.b&quot; this will &quot;sometimes&quot; return the Relation
object (causing a &quot;undefined method ... for ActiveRecord::Relation&quot;
error to raise) and some other times it will return the correct B
object. When the relation object is returned, it may sometimes be
&quot;fixed&quot; temporarily by restarting the server, but it will
eventually show up again.&lt;/p&gt;
&lt;p&gt;Another issue i get is that when &quot;getting&quot; associated objects,
sometimes the required filters are not automatically applied (where
element id = ...). this causes the query to return the first object
in the table and not the correct associated object.&lt;/p&gt;
&lt;p&gt;This is becoming a very frustrating issue, specially since i
don't seem to find anyone else with this or similar issues.&lt;/p&gt;
&lt;p&gt;All finder methods in the application have been migrated to the
new rails form, but this strange behavior remains.&lt;/p&gt;
&lt;p&gt;The current configuration being used is: Ubuntu 10, nginx server
+ passenger (3.0.2), rails (3.0.3), ruby 1.9.2p0 (2010-08-18
revision 29036)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-23T21:18:10+00:00</created-at>
      <creator-id type="integer">115417</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6218</number>
      <permalink>rails-3-random-associations-behavior-returning-activerecordrelation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord relation&quot; problem rails3.0.3</tag>
      <title>Rails 3 random associations behavior returning ActiveRecord::Relation</title>
      <updated-at type="datetime">2010-12-23T21:18:13+00:00</updated-at>
      <user-id type="integer">115417</user-id>
      <version type="integer">1</version>
      <user-name>Gerardo</user-name>
      <creator-name>Gerardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6218</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>After digging a bit deeper into the Active Record code, my coworker and I found that the belongs_to_association.rb and belongs_to_polymorphic_association.rb were still using the old finder methods in the &quot;find_target&quot; method.

We ran a couple tests by logging the resulting objects of this method from different queries and discovered the old finders were returning the ActiveRecord::Relation at random moments (loading the same object it would sometimes return the object and other times the Relation object).

We overrode the find_target method for these 2 classes in initializer files, changing the finders used there to the new rails3 format (klass.select(...).where(...), etc). This seems to have solved the issue.

The &quot;has_many&quot; association files are already using the new format, so these haven't caused any issues.

We applied these &quot;fixes&quot; to the rails 3.0.3 and hope that they will be resolved in future releases.

Attached are our initializer files in case someone else bumps into this problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;After digging a bit deeper into the Active Record code, my
coworker and I found that the belongs_to_association.rb and
belongs_to_polymorphic_association.rb were still using the old
finder methods in the &quot;find_target&quot; method.&lt;/p&gt;
&lt;p&gt;We ran a couple tests by logging the resulting objects of this
method from different queries and discovered the old finders were
returning the ActiveRecord::Relation at random moments (loading the
same object it would sometimes return the object and other times
the Relation object).&lt;/p&gt;
&lt;p&gt;We overrode the find_target method for these 2 classes in
initializer files, changing the finders used there to the new
rails3 format (klass.select(...).where(...), etc). This seems to
have solved the issue.&lt;/p&gt;
&lt;p&gt;The &quot;has_many&quot; association files are already using the new
format, so these haven't caused any issues.&lt;/p&gt;
&lt;p&gt;We applied these &quot;fixes&quot; to the rails 3.0.3 and hope that they
will be resolved in future releases.&lt;/p&gt;
&lt;p&gt;Attached are our initializer files in case someone else bumps
into this problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-24T20:41:40+00:00</created-at>
      <creator-id type="integer">115417</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6218</number>
      <permalink>rails-3-random-associations-behavior-returning-activerecordrelation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord relation&quot; problem rails3.0.3</tag>
      <title>Rails 3 random associations behavior returning ActiveRecord::Relation</title>
      <updated-at type="datetime">2010-12-24T20:41:41+00:00</updated-at>
      <user-id type="integer">115417</user-id>
      <version type="integer">2</version>
      <user-name>Gerardo</user-name>
      <creator-name>Gerardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6218</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-25T00:00:11+00:00</created-at>
      <creator-id type="integer">115417</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord relation\&quot; problem rails3.0.3&quot;
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6218</number>
      <permalink>rails-3-random-associations-behavior-returning-activerecordrelation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;activerecord relation&quot; problem rails303</tag>
      <title>Rails 3 random associations behavior returning ActiveRecord::Relation</title>
      <updated-at type="datetime">2011-03-25T00:00:16+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>Gerardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6218</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-25T00:00:11+00:00</created-at>
      <creator-id type="integer">115417</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6218</number>
      <permalink>rails-3-random-associations-behavior-returning-activerecordrelation</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>&quot;activerecord relation&quot; problem rails303</tag>
      <title>Rails 3 random associations behavior returning ActiveRecord::Relation</title>
      <updated-at type="datetime">2011-03-25T00:00:23+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">4</version>
      <user-name>rails</user-name>
      <creator-name>Gerardo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6218</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>89539cfe0c7cf7fbcee06da020308e82e3e1cf61</code>
      <content-type>application/x-ruby</content-type>
      <created-at type="datetime">2010-12-24T20:41:40+00:00</created-at>
      <filename>belongs_to_association.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">834709</id>
      <size type="integer">880</size>
      <uploader-id type="integer">115417</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/834709/belongs_to_association.rb</url>
    </attachment>
    <attachment type="Attachment">
      <code>6a0a62e1fddeab3ebb8ff5ce1da433a1cab5de03</code>
      <content-type>application/x-ruby</content-type>
      <created-at type="datetime">2010-12-24T20:41:40+00:00</created-at>
      <filename>belongs_to_polymorphic_association.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">834710</id>
      <size type="integer">816</size>
      <uploader-id type="integer">115417</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/834710/belongs_to_polymorphic_association.rb</url>
    </attachment>
  </attachments>
</ticket>
