<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-07-22T14:18:32+01:00</created-at>
  <creator-id type="integer">53009</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">2939</number>
  <permalink>patch-basesave-should-retain-prefix_options</permalink>
  <priority type="integer">2019</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activeresource patch</tag>
  <title>[PATCH] Base.save should retain prefix_options</title>
  <updated-at type="datetime">2010-10-09T03:29:57+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">3</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>avijayr (at gmail)</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2939</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is similar to https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/810 - in the sense that when you find an ActiveResource object (which is nested inside another AR), and then call save on it, the prefix_options are lost. This means that any subsequent calls to save or reload would not work without finding the object again.

The fix would be:
          def load_attributes_from_response(response)
            if response['Content-Length'] != &quot;0&quot; &amp;&amp; response.body.strip.size &gt; 0
              load(@prefix_options.stringify_keys.merge(self.class.format.decode(response.body)))
            end
          end</original-body>
  <latest-body>This is similar to https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/810 - in the sense that when you find an ActiveResource object (which is nested inside another AR), and then call save on it, the prefix_options are lost. This means that any subsequent calls to save or reload would not work without finding the object again.

The fix would be:
          def load_attributes_from_response(response)
            if response['Content-Length'] != &quot;0&quot; &amp;&amp; response.body.strip.size &gt; 0
              load(@prefix_options.stringify_keys.merge(self.class.format.decode(response.body)))
            end
          end</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is similar to &lt;a href=&quot;https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/810&quot;&gt;
https://rails.lighthouseapp.com/...&lt;/a&gt; - in the sense that when
you find an ActiveResource object (which is nested inside another
AR), and then call save on it, the prefix_options are lost. This
means that any subsequent calls to save or reload would not work
without finding the object again.&lt;/p&gt;
&lt;p&gt;The fix would be:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      def load_attributes_from_response(response)
        if response['Content-Length'] != &quot;0&quot; &amp;amp;&amp;amp; response.body.strip.size &amp;gt; 0
          load(@prefix_options.stringify_keys.merge(self.class.format.decode(response.body)))
        end
      end
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is similar to https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/810 - in the sense that when you find an ActiveResource object (which is nested inside another AR), and then call save on it, the prefix_options are lost. This means that any subsequent calls to save or reload would not work without finding the object again.

The fix would be (in ActiveResource::Base) :
          def load_attributes_from_response(response)
            if response['Content-Length'] != &quot;0&quot; &amp;&amp; response.body.strip.size &gt; 0
              load(@prefix_options.stringify_keys.merge(self.class.format.decode(response.body)))
            end
          end</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is similar to &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/810&quot;&gt;
https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets...&lt;/a&gt;
- in the sense that when you find an ActiveResource object (which
is nested inside another AR), and then call save on it, the
prefix_options are lost. This means that any subsequent calls to
save or reload would not work without finding the object again.&lt;/p&gt;
&lt;p&gt;The fix would be (in ActiveResource::Base) :&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;      def load_attributes_from_response(response)
        if response['Content-Length'] != &quot;0&quot; &amp;amp;&amp;amp; response.body.strip.size &amp;gt; 0
          load(@prefix_options.stringify_keys.merge(self.class.format.decode(response.body)))
        end
      end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-07-22T14:18:32+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2939</number>
      <permalink>patch-basesave-should-retain-prefix_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource patch</tag>
      <title>[PATCH] Base.save should retain prefix_options</title>
      <updated-at type="datetime">2009-07-22T14:18:59+01:00</updated-at>
      <user-id type="integer">53009</user-id>
      <version type="integer">1</version>
      <user-name>avijayr (at gmail)</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2939</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:54+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2939</number>
      <permalink>patch-basesave-should-retain-prefix_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activeresource patch</tag>
      <title>[PATCH] Base.save should retain prefix_options</title>
      <updated-at type="datetime">2010-05-04T18:48:54+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-09T03:29:54+01:00</created-at>
      <creator-id type="integer">53009</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">2939</number>
      <permalink>patch-basesave-should-retain-prefix_options</permalink>
      <priority type="integer">2019</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activeresource patch</tag>
      <title>[PATCH] Base.save should retain prefix_options</title>
      <updated-at type="datetime">2010-10-09T03:29:57+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">3</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>avijayr (at gmail)</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2939</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
