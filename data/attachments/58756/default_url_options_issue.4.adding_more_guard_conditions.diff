From e252d699e9852a779753df645d813dd9afa13118 Mon Sep 17 00:00:00 2001
From: Tom Lea <contrib@tomlea.co.uk>
Date: Sat, 1 Nov 2008 16:37:59 +0000
Subject: [PATCH] When optomised named route url generators are called, we must take care to check for default_url_options on both the current scope (for when attached to a controller) and on the controller (for when included in a view).

---
 .../lib/action_controller/routing/optimisations.rb |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/actionpack/lib/action_controller/routing/optimisations.rb b/actionpack/lib/action_controller/routing/optimisations.rb
index 894d410..6f9d103 100644
--- a/actionpack/lib/action_controller/routing/optimisations.rb
+++ b/actionpack/lib/action_controller/routing/optimisations.rb
@@ -62,9 +62,9 @@ module ActionController
           # if they're using foo_url(:id=>2) it's one
           # argument, but we don't want to generate /foos/id2
           if number_of_arguments == 1
-            "(!defined?(default_url_options) || default_url_options.blank?) && defined?(request) && request && args.size == 1 && !args.first.is_a?(Hash)"
+            "(!defined?(default_url_options) || default_url_options.blank?) && (!defined?(controller.default_url_options) || controller.default_url_options.blank?) && defined?(request) && request && args.size == 1 && !args.first.is_a?(Hash)"
           else
-            "(!defined?(default_url_options) || default_url_options.blank?) && defined?(request) && request && args.size == #{number_of_arguments}"
+            "(!defined?(default_url_options) || default_url_options.blank?) && (!defined?(controller.default_url_options) || controller.default_url_options.blank?) && defined?(request) && request && args.size == #{number_of_arguments}"
           end
         end
 
@@ -99,7 +99,7 @@ module ActionController
       # argument
       class PositionalArgumentsWithAdditionalParams < PositionalArguments
         def guard_condition
-          "(!defined?(default_url_options) || default_url_options.blank?) && defined?(request) && request && args.size == #{route.segment_keys.size + 1} && !args.last.has_key?(:anchor) && !args.last.has_key?(:port) && !args.last.has_key?(:host)"
+          "(!defined?(default_url_options) || default_url_options.blank?) && (!defined?(controller.default_url_options) || controller.default_url_options.blank?) && defined?(request) && request && args.size == #{route.segment_keys.size + 1} && !args.last.has_key?(:anchor) && !args.last.has_key?(:port) && !args.last.has_key?(:host)"
         end
 
         # This case uses almost the same code as positional arguments,
-- 
1.5.5.4

