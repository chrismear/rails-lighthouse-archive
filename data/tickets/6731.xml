<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-20T16:49:09+01:00</created-at>
  <creator-id type="integer">78336</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6731</number>
  <permalink>arel-from-git-seems-to-have-broken-except</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>arel</tag>
  <title>Arel from git seems to have broken &quot;except&quot;</title>
  <updated-at type="datetime">2011-04-20T16:49:39+01:00</updated-at>
  <user-id type="integer">78336</user-id>
  <version type="integer">1</version>
  <user-name>Mathieu Arnold</user-name>
  <creator-name>Mathieu Arnold</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6731</url>
  <priority-name nil="true"></priority-name>
  <original-body>I was playing with the latest arel, rails and squeel, and I tried a simple thing :

@@@ ruby
Facture.joins(:devise).sum(&quot;montant_ttc / taux&quot;)
@@@

which used to work, but now does :

@@@ sql
SELECT SUM(montant_ttc / taux) AS sum_id FROM &quot;facture&quot; INNER JOIN &quot;devise&quot; ON &quot;devise&quot;.&quot;id_devise&quot; = &quot;facture&quot;.&quot;id_devise&quot; ORDER BY numero
@@@

The query is perfect, only the last part, ORDER BY numero, which comes from a default_scope, should not be there. I tried adding an except(:order) but it seems a noop right now...</original-body>
  <latest-body>I was playing with the latest arel, rails and squeel, and I tried a simple thing :

@@@ ruby
Facture.joins(:devise).sum(&quot;montant_ttc / taux&quot;)
@@@

which used to work, but now does :

@@@ sql
SELECT SUM(montant_ttc / taux) AS sum_id FROM &quot;facture&quot; INNER JOIN &quot;devise&quot; ON &quot;devise&quot;.&quot;id_devise&quot; = &quot;facture&quot;.&quot;id_devise&quot; ORDER BY numero
@@@

The query is perfect, only the last part, ORDER BY numero, which comes from a default_scope, should not be there. I tried adding an except(:order) but it seems a noop right now...</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I was playing with the latest arel, rails and squeel, and I
tried a simple thing :&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Facture.joins(:devise).sum(&quot;montant_ttc / taux&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;which used to work, but now does :&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT SUM(montant_ttc / taux) AS sum_id FROM &quot;facture&quot; INNER JOIN &quot;devise&quot; ON &quot;devise&quot;.&quot;id_devise&quot; = &quot;facture&quot;.&quot;id_devise&quot; ORDER BY numero&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The query is perfect, only the last part, ORDER BY numero, which
comes from a default_scope, should not be there. I tried adding an
except(:order) but it seems a noop right now...&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I was playing with the latest arel, rails and squeel, and I tried a simple thing :

@@@ ruby
Facture.joins(:devise).sum(&quot;montant_ttc / taux&quot;)
@@@

which used to work, but now does :

@@@ sql
SELECT SUM(montant_ttc / taux) AS sum_id FROM &quot;facture&quot; INNER JOIN &quot;devise&quot; ON &quot;devise&quot;.&quot;id_devise&quot; = &quot;facture&quot;.&quot;id_devise&quot; ORDER BY numero
@@@

The query is perfect, only the last part, ORDER BY numero, which comes from a default_scope, should not be there. I tried adding an except(:order) but it seems a noop right now...</body>
      <body-html>&lt;div&gt;&lt;p&gt;I was playing with the latest arel, rails and squeel, and I
tried a simple thing :&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;Facture.joins(:devise).sum(&quot;montant_ttc / taux&quot;)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;which used to work, but now does :&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;sql&quot;&gt;SELECT SUM(montant_ttc / taux) AS sum_id FROM &quot;facture&quot; INNER JOIN &quot;devise&quot; ON &quot;devise&quot;.&quot;id_devise&quot; = &quot;facture&quot;.&quot;id_devise&quot; ORDER BY numero&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The query is perfect, only the last part, ORDER BY numero, which
comes from a default_scope, should not be there. I tried adding an
except(:order) but it seems a noop right now...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-20T16:49:09+01:00</created-at>
      <creator-id type="integer">78336</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6731</number>
      <permalink>arel-from-git-seems-to-have-broken-except</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel</tag>
      <title>Arel from git seems to have broken &quot;except&quot;</title>
      <updated-at type="datetime">2011-04-20T16:49:37+01:00</updated-at>
      <user-id type="integer">78336</user-id>
      <version type="integer">1</version>
      <user-name>Mathieu Arnold</user-name>
      <creator-name>Mathieu Arnold</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6731</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
