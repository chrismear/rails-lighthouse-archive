From 43bdafa7e80e58cb82821551aeabef92ed73b7b8 Mon Sep 17 00:00:00 2001
From: Andrew White <andyw@pixeltrix.co.uk>
Date: Thu, 15 Apr 2010 15:25:53 +0100
Subject: [PATCH] Add failing test for shallow routing

---
 actionpack/test/dispatch/routing_test.rb |  132 ++++++++++++++++++++++++++++++
 1 files changed, 132 insertions(+), 0 deletions(-)

diff --git a/actionpack/test/dispatch/routing_test.rb b/actionpack/test/dispatch/routing_test.rb
index 82c45f3..83d6286 100644
--- a/actionpack/test/dispatch/routing_test.rb
+++ b/actionpack/test/dispatch/routing_test.rb
@@ -156,6 +156,16 @@ class TestRoutingMapper < ActionDispatch::IntegrationTest
         resources :comments, :except => :destroy
       end
 
+      resources :threads, :shallow => true do
+        resources :messages do
+          resources :comments do
+            member do
+              post :preview
+            end
+          end
+        end
+      end
+
       resources :sheep
 
       match 'sprockets.js' => ::TestRoutingMapper::SprocketsApp
@@ -1077,6 +1087,128 @@ class TestRoutingMapper < ActionDispatch::IntegrationTest
     end
   end
 
+  def test_shallow_nested_resources
+    with_test_routes do
+      # Threads
+      get '/threads'
+      assert_equal 'threads#index', @response.body
+      assert_equal '/threads', threads_path
+
+      post '/threads'
+      assert_equal 'threads#create', @response.body
+
+      get '/threads.xml'
+      assert_equal 'threads#index', @response.body
+      assert_equal '/threads.xml', threads_path(:format => 'xml')
+
+      get '/threads/new'
+      assert_equal 'threads#new', @response.body
+      assert_equal '/threads/new', new_thread_path
+
+      get '/threads/new.xml'
+      assert_equal 'threads#new', @response.body
+      assert_equal '/threads/new.xml', new_thread_path(:format => 'xml')
+
+      get '/threads/1'
+      assert_equal 'threads#show', @response.body
+      assert_equal '/threads/1', thread_path(:id => '1')
+
+      get '/threads/1.xml'
+      assert_equal 'threads#show', @response.body
+      assert_equal '/threads/1.xml', thread_path(:id => '1', :format => 'xml')
+
+      get '/threads/1/edit'
+      assert_equal 'threads#edit', @response.body
+      assert_equal '/threads/1/edit', edit_thread_path(:id => '1')
+
+      put '/threads/1'
+      assert_equal 'threads#update', @response.body
+
+      delete '/threads/1'
+      assert_equal 'threads#destroy', @response.body
+
+      # Messages
+      get '/threads/1/messages'
+      assert_equal 'messages#index', @response.body
+      assert_equal '/threads/1/messages', thread_messages_path(:thread_id => '1')
+
+      post '/threads/1/messages'
+      assert_equal 'messages#create', @response.body
+
+      get '/threads/1/messages.xml'
+      assert_equal 'messages#index', @response.body
+      assert_equal '/threads/1/messages.xml', thread_messages_path(:thread_id => '1', :format => 'xml')
+
+      get '/threads/1/messages/new'
+      assert_equal 'messages#new', @response.body
+      assert_equal '/threads/1/messages/new', new_thread_message_path(:thread_id => '1')
+
+      get '/threads/1/messages/new.xml'
+      assert_equal 'messages#new', @response.body
+      assert_equal '/threads/1/messages/new.xml', new_thread_message_path(:thread_id => '1', :format => 'xml')
+
+      get '/messages/2'
+      assert_equal 'messages#show', @response.body
+      assert_equal '/messages/2', message_path(:id => '2')
+
+      get '/messages/2.xml'
+      assert_equal 'messages#show', @response.body
+      assert_equal '/messages/2.xml', message_path(:id => '2', :format => 'xml')
+
+      get '/messages/2/edit'
+      assert_equal 'messages#edit', @response.body
+      assert_equal '/messages/2/edit', edit_message_path(:id => '2')
+
+      put '/messages/2'
+      assert_equal 'messages#update', @response.body
+
+      delete '/messages/2'
+      assert_equal 'messages#destroy', @response.body
+
+      #Comments
+      get '/threads/1/messages/2/comments'
+      assert_equal 'comments#index', @response.body
+      assert_equal '/threads/1/messages/2/comments', thread_message_comments_path(:thread_id => '1', :message_id => '2')
+
+      post '/threads/1/messages/2/comments'
+      assert_equal 'comments#create', @response.body
+
+      get '/threads/1/messages/2/comments.xml'
+      assert_equal 'comments#index', @response.body
+      assert_equal '/threads/1/messages/2/comments.xml', thread_message_comments_path(:thread_id => '1', :message_id => '2', :format => 'xml')
+
+      get '/threads/1/messages/2/comments/new'
+      assert_equal 'comments#new', @response.body
+      assert_equal '/threads/1/messages/2/comments/new', new_thread_message_comment_path(:thread_id => '1', :message_id => '2')
+
+      get '/threads/1/messages/2/comments/new.xml'
+      assert_equal 'comments#new', @response.body
+      assert_equal '/threads/1/messages/2/comments/new.xml', new_thread_message_comment_path(:thread_id => '1', :message_id => '2', :format => 'xml')
+
+      get '/comments/3'
+      assert_equal 'comments#show', @response.body
+      assert_equal '/comments/3', comment_path(:id => '3')
+
+      get '/comments/3.xml'
+      assert_equal 'comments#show', @response.body
+      assert_equal '/comments/3.xml', comment_path(:id => '3', :format => 'xml')
+
+      get '/comments/3/edit'
+      assert_equal 'comments#edit', @response.body
+      assert_equal '/comments/3/edit', edit_comment_path(:id => '3')
+
+      put '/comments/3'
+      assert_equal 'comments#update', @response.body
+
+      delete '/comments/3'
+      assert_equal 'comments#destroy', @response.body
+
+      post '/comments/3/preview'
+      assert_equal 'comments#preview', @response.body
+      assert_equal '/comments/3/preview', preview_comment_path(:id => '3')
+    end
+  end
+
   private
     def with_test_routes
       yield
-- 
1.7.1

