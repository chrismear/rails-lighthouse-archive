<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-12T01:41:26+00:00</created-at>
  <creator-id type="integer">136726</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6419</number>
  <permalink>debugger-statements-not-triggering-the-debugger-in-rails-304</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag nil="true"></tag>
  <title>debugger statements not triggering the debugger in rails 3.0.4</title>
  <updated-at type="datetime">2011-02-13T00:46:38+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">5</version>
  <user-name>Repository</user-name>
  <creator-name>Ross Heflin</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6419</url>
  <priority-name nil="true"></priority-name>
  <original-body># Summary: #

Updated a rails app from 3.0.3 to 3.0.4 today
and discovered I could no longer hit breakpoints set within tests.
Attached, you'll find a simple project which duplicates this behavior.

I'm not sure if this is particularly a regression in rails,
but I don't see this behavior when using rails 3.0.3 with this project

# To Reproduce the Issue: #

Blow out the attached tarball and cd into the foo directory, run the following commands:

    rake db:reset
    bundle install
    rake test

# Expected Behavior: #

A debugger statement w/in the FooTest should be hit and opened in rdb with output like the following:

    rheflin@elitethis:~/src/foo$ rake test
    (in /home/rheflin/src/bs)
    Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    [2, 11] in test/unit/foo_test.rb
       2  
       3  class FooTest &lt; ActiveSupport::TestCase
       4    # Replace this with your real tests.
       5    test &quot;the truth&quot; do
       6      debugger
    =&gt; 7      assert false
       8    end
       9  end
    test/unit/foo_test.rb:7
    assert false
    (rdb:1) 

# Actual Behavior: #

What actually happens is the breakpoint gets skipped and the test fails.

    rheflin@elitethis:~/src/foo$ rake test
    (in /home/rheflin/src/foo)
    Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    F
    Finished in 0.265451 seconds.

      1) Failure:
    test_the_truth(FooTest) [test/unit/foo_test.rb:7]:
    Failed assertion, no message given.

    1 tests, 1 assertions, 1 failures, 0 errors, 0 skips

    Test run options: --seed 36151
    Errors running test:units!
    rheflin@elitethis:~/src/foo$

# Workaround #

To get the breakpoint to trigger (as it did in 3.0.3) explicitly add require 'ruby-debug' to the test/test_helper.rb file so its contents match the following:

--- modified test/test_helper.rb
    ENV[&quot;RAILS_ENV&quot;] = &quot;test&quot;
    require File.expand_path('../../config/environment', __FILE__)
    require 'rails/test_help'
    require 'ruby-debug'

    class ActiveSupport::TestCase
      # Setup all fixtures in test/fixtures/*.(yml|csv) for all tests in alphabetical order.
      #
      # Note: You'll currently still have to declare fixtures explicitly in integration tests
      # -- they do not yet inherit this setting
      fixtures :all

      # Add more helper methods to be used by all tests here...
    end
---

Then the breakpoint will be hit and you should drop into the debugger:

    rheflin@elitethis:~/src/foo$ rake test
    (in /home/rheflin/src/bs)
    Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    [2, 11] in test/unit/foo_test.rb
       2  
       3  class FooTest &lt; ActiveSupport::TestCase
       4    # Replace this with your real tests.
       5    test &quot;the truth&quot; do
       6      debugger
    =&gt; 7      assert false
       8    end
       9  end
    test/unit/foo_test.rb:7
    assert false
    (rdb:1) 

My Environment details (in case they're needed):
OS: Ubuntu Linux 10.10 (maverick)
Arch: x86_64
Ruby: 1.9.2p136 (built by rvm 1.2.6)

I'll be happy to provide more information if needed, let me know.</original-body>
  <latest-body># Summary: #

Updated a rails app from 3.0.3 to 3.0.4 today
and discovered I could no longer hit breakpoints set within tests.
Attached, you'll find a simple project which duplicates this behavior.

I'm not sure if this is particularly a regression in rails,
but I don't see this behavior when using rails 3.0.3 with this project

# To Reproduce the Issue: #

Blow out the attached tarball and cd into the foo directory, run the following commands:

    rake db:reset
    bundle install
    rake test

# Expected Behavior: #

A debugger statement w/in the FooTest should be hit and opened in rdb with output like the following:

    rheflin@elitethis:~/src/foo$ rake test
    (in /home/rheflin/src/bs)
    Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    [2, 11] in test/unit/foo_test.rb
       2  
       3  class FooTest &lt; ActiveSupport::TestCase
       4    # Replace this with your real tests.
       5    test &quot;the truth&quot; do
       6      debugger
    =&gt; 7      assert false
       8    end
       9  end
    test/unit/foo_test.rb:7
    assert false
    (rdb:1) 

# Actual Behavior: #

What actually happens is the breakpoint gets skipped and the test fails.

    rheflin@elitethis:~/src/foo$ rake test
    (in /home/rheflin/src/foo)
    Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    F
    Finished in 0.265451 seconds.

      1) Failure:
    test_the_truth(FooTest) [test/unit/foo_test.rb:7]:
    Failed assertion, no message given.

    1 tests, 1 assertions, 1 failures, 0 errors, 0 skips

    Test run options: --seed 36151
    Errors running test:units!
    rheflin@elitethis:~/src/foo$

# Workaround #

To get the breakpoint to trigger (as it did in 3.0.3) explicitly add require 'ruby-debug' to the test/test_helper.rb file so its contents match the following:

--- modified test/test_helper.rb
    ENV[&quot;RAILS_ENV&quot;] = &quot;test&quot;
    require File.expand_path('../../config/environment', __FILE__)
    require 'rails/test_help'
    require 'ruby-debug'

    class ActiveSupport::TestCase
      # Setup all fixtures in test/fixtures/*.(yml|csv) for all tests in alphabetical order.
      #
      # Note: You'll currently still have to declare fixtures explicitly in integration tests
      # -- they do not yet inherit this setting
      fixtures :all

      # Add more helper methods to be used by all tests here...
    end
---

Then the breakpoint will be hit and you should drop into the debugger:

    rheflin@elitethis:~/src/foo$ rake test
    (in /home/rheflin/src/bs)
    Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    [2, 11] in test/unit/foo_test.rb
       2  
       3  class FooTest &lt; ActiveSupport::TestCase
       4    # Replace this with your real tests.
       5    test &quot;the truth&quot; do
       6      debugger
    =&gt; 7      assert false
       8    end
       9  end
    test/unit/foo_test.rb:7
    assert false
    (rdb:1) 

My Environment details (in case they're needed):
OS: Ubuntu Linux 10.10 (maverick)
Arch: x86_64
Ruby: 1.9.2p136 (built by rvm 1.2.6)

I'll be happy to provide more information if needed, let me know.</latest-body>
  <original-body-html>&lt;div&gt;&lt;h1&gt;Summary:&lt;/h1&gt;
&lt;p&gt;Updated a rails app from 3.0.3 to 3.0.4 today&lt;br&gt;
and discovered I could no longer hit breakpoints set within
tests.&lt;br&gt;
Attached, you'll find a simple project which duplicates this
behavior.&lt;/p&gt;
&lt;p&gt;I'm not sure if this is particularly a regression in rails,&lt;br&gt;
but I don't see this behavior when using rails 3.0.3 with this
project&lt;/p&gt;
&lt;h1&gt;To Reproduce the Issue:&lt;/h1&gt;
&lt;p&gt;Blow out the attached tarball and cd into the foo directory, run
the following commands:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rake db:reset
bundle install
rake test&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;Expected Behavior:&lt;/h1&gt;
&lt;p&gt;A debugger statement w/in the FooTest should be hit and opened
in rdb with output like the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rheflin@elitethis:~/src/foo$ rake test
(in /home/rheflin/src/bs)
Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
[2, 11] in test/unit/foo_test.rb
   2  
   3  class FooTest &amp;lt; ActiveSupport::TestCase
   4    # Replace this with your real tests.
   5    test &quot;the truth&quot; do
   6      debugger
=&amp;gt; 7      assert false
   8    end
   9  end
test/unit/foo_test.rb:7
assert false
(rdb:1)&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;Actual Behavior:&lt;/h1&gt;
&lt;p&gt;What actually happens is the breakpoint gets skipped and the
test fails.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rheflin@elitethis:~/src/foo$ rake test
(in /home/rheflin/src/foo)
Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
F
Finished in 0.265451 seconds.

  1) Failure:
test_the_truth(FooTest) [test/unit/foo_test.rb:7]:
Failed assertion, no message given.

1 tests, 1 assertions, 1 failures, 0 errors, 0 skips

Test run options: --seed 36151
Errors running test:units!
rheflin@elitethis:~/src/foo$&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;Workaround&lt;/h1&gt;
&lt;p&gt;To get the breakpoint to trigger (as it did in 3.0.3) explicitly
add require 'ruby-debug' to the test/test_helper.rb file so its
contents match the following:&lt;/p&gt;
&lt;p&gt;--- modified test/test_helper.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ENV[&quot;RAILS_ENV&quot;] = &quot;test&quot;
require File.expand_path('../../config/environment', __FILE__)
require 'rails/test_help'
require 'ruby-debug'

class ActiveSupport::TestCase
  # Setup all fixtures in test/fixtures/*.(yml|csv) for all tests in alphabetical order.
  #
  # Note: You'll currently still have to declare fixtures explicitly in integration tests
  # -- they do not yet inherit this setting
  fixtures :all

  # Add more helper methods to be used by all tests here...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Then the breakpoint will be hit and you should drop into the
debugger:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rheflin@elitethis:~/src/foo$ rake test
(in /home/rheflin/src/bs)
Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
[2, 11] in test/unit/foo_test.rb
   2  
   3  class FooTest &amp;lt; ActiveSupport::TestCase
   4    # Replace this with your real tests.
   5    test &quot;the truth&quot; do
   6      debugger
=&amp;gt; 7      assert false
   8    end
   9  end
test/unit/foo_test.rb:7
assert false
(rdb:1)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;My Environment details (in case they're needed):&lt;br&gt;
OS: Ubuntu Linux 10.10 (maverick)&lt;br&gt;
Arch: x86_64&lt;br&gt;
Ruby: 1.9.2p136 (built by rvm 1.2.6)&lt;/p&gt;
&lt;p&gt;I'll be happy to provide more information if needed, let me
know.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body># Summary: #

Updated a rails app from 3.0.3 to 3.0.4 today
and discovered I could no longer hit breakpoints set within tests.
Attached, you'll find a simple project which duplicates this behavior.

I'm not sure if this is particularly a regression in rails,
but I don't see this behavior when using rails 3.0.3 with this project

# To Reproduce the Issue: #

Blow out the attached tarball and cd into the foo directory, run the following commands:

    rake db:reset
    bundle install
    rake test

# Expected Behavior: #

A debugger statement w/in the FooTest should be hit and opened in rdb with output like the following:

    rheflin@elitethis:~/src/foo$ rake test
    (in /home/rheflin/src/bs)
    Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    [2, 11] in test/unit/foo_test.rb
       2  
       3  class FooTest &lt; ActiveSupport::TestCase
       4    # Replace this with your real tests.
       5    test &quot;the truth&quot; do
       6      debugger
    =&gt; 7      assert false
       8    end
       9  end
    test/unit/foo_test.rb:7
    assert false
    (rdb:1) 

# Actual Behavior: #

What actually happens is the breakpoint gets skipped and the test fails.

    rheflin@elitethis:~/src/foo$ rake test
    (in /home/rheflin/src/foo)
    Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    F
    Finished in 0.265451 seconds.

      1) Failure:
    test_the_truth(FooTest) [test/unit/foo_test.rb:7]:
    Failed assertion, no message given.

    1 tests, 1 assertions, 1 failures, 0 errors, 0 skips

    Test run options: --seed 36151
    Errors running test:units!
    rheflin@elitethis:~/src/foo$

# Workaround #

To get the breakpoint to trigger (as it did in 3.0.3) explicitly add require 'ruby-debug' to the test/test_helper.rb file so its contents match the following:

--- modified test/test_helper.rb
    ENV[&quot;RAILS_ENV&quot;] = &quot;test&quot;
    require File.expand_path('../../config/environment', __FILE__)
    require 'rails/test_help'
    require 'ruby-debug'

    class ActiveSupport::TestCase
      # Setup all fixtures in test/fixtures/*.(yml|csv) for all tests in alphabetical order.
      #
      # Note: You'll currently still have to declare fixtures explicitly in integration tests
      # -- they do not yet inherit this setting
      fixtures :all

      # Add more helper methods to be used by all tests here...
    end
---

Then the breakpoint will be hit and you should drop into the debugger:

    rheflin@elitethis:~/src/foo$ rake test
    (in /home/rheflin/src/bs)
    Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    [2, 11] in test/unit/foo_test.rb
       2  
       3  class FooTest &lt; ActiveSupport::TestCase
       4    # Replace this with your real tests.
       5    test &quot;the truth&quot; do
       6      debugger
    =&gt; 7      assert false
       8    end
       9  end
    test/unit/foo_test.rb:7
    assert false
    (rdb:1) 

My Environment details (in case they're needed):
OS: Ubuntu Linux 10.10 (maverick)
Arch: x86_64
Ruby: 1.9.2p136 (built by rvm 1.2.6)

I'll be happy to provide more information if needed, let me know.</body>
      <body-html>&lt;div&gt;&lt;h1&gt;Summary:&lt;/h1&gt;
&lt;p&gt;Updated a rails app from 3.0.3 to 3.0.4 today&lt;br&gt;
and discovered I could no longer hit breakpoints set within
tests.&lt;br&gt;
Attached, you'll find a simple project which duplicates this
behavior.&lt;/p&gt;
&lt;p&gt;I'm not sure if this is particularly a regression in rails,&lt;br&gt;
but I don't see this behavior when using rails 3.0.3 with this
project&lt;/p&gt;
&lt;h1&gt;To Reproduce the Issue:&lt;/h1&gt;
&lt;p&gt;Blow out the attached tarball and cd into the foo directory, run
the following commands:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rake db:reset
bundle install
rake test&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;Expected Behavior:&lt;/h1&gt;
&lt;p&gt;A debugger statement w/in the FooTest should be hit and opened
in rdb with output like the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rheflin@elitethis:~/src/foo$ rake test
(in /home/rheflin/src/bs)
Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
[2, 11] in test/unit/foo_test.rb
   2  
   3  class FooTest &amp;lt; ActiveSupport::TestCase
   4    # Replace this with your real tests.
   5    test &quot;the truth&quot; do
   6      debugger
=&amp;gt; 7      assert false
   8    end
   9  end
test/unit/foo_test.rb:7
assert false
(rdb:1)&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;Actual Behavior:&lt;/h1&gt;
&lt;p&gt;What actually happens is the breakpoint gets skipped and the
test fails.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rheflin@elitethis:~/src/foo$ rake test
(in /home/rheflin/src/foo)
Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
F
Finished in 0.265451 seconds.

  1) Failure:
test_the_truth(FooTest) [test/unit/foo_test.rb:7]:
Failed assertion, no message given.

1 tests, 1 assertions, 1 failures, 0 errors, 0 skips

Test run options: --seed 36151
Errors running test:units!
rheflin@elitethis:~/src/foo$&lt;/code&gt;
&lt;/pre&gt;
&lt;h1&gt;Workaround&lt;/h1&gt;
&lt;p&gt;To get the breakpoint to trigger (as it did in 3.0.3) explicitly
add require 'ruby-debug' to the test/test_helper.rb file so its
contents match the following:&lt;/p&gt;
&lt;p&gt;--- modified test/test_helper.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ENV[&quot;RAILS_ENV&quot;] = &quot;test&quot;
require File.expand_path('../../config/environment', __FILE__)
require 'rails/test_help'
require 'ruby-debug'

class ActiveSupport::TestCase
  # Setup all fixtures in test/fixtures/*.(yml|csv) for all tests in alphabetical order.
  #
  # Note: You'll currently still have to declare fixtures explicitly in integration tests
  # -- they do not yet inherit this setting
  fixtures :all

  # Add more helper methods to be used by all tests here...
end&lt;/code&gt;
&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Then the breakpoint will be hit and you should drop into the
debugger:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;rheflin@elitethis:~/src/foo$ rake test
(in /home/rheflin/src/bs)
Loaded suite /home/rheflin/.rvm/gems/ruby-1.9.2-p136/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
[2, 11] in test/unit/foo_test.rb
   2  
   3  class FooTest &amp;lt; ActiveSupport::TestCase
   4    # Replace this with your real tests.
   5    test &quot;the truth&quot; do
   6      debugger
=&amp;gt; 7      assert false
   8    end
   9  end
test/unit/foo_test.rb:7
assert false
(rdb:1)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;My Environment details (in case they're needed):&lt;br&gt;
OS: Ubuntu Linux 10.10 (maverick)&lt;br&gt;
Arch: x86_64&lt;br&gt;
Ruby: 1.9.2p136 (built by rvm 1.2.6)&lt;/p&gt;
&lt;p&gt;I'll be happy to provide more information if needed, let me
know.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T01:41:26+00:00</created-at>
      <creator-id type="integer">136726</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6419</number>
      <permalink>debugger-statements-not-triggering-the-debugger-in-rails-304</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>debugger statements not triggering the debugger in rails 3.0.4</title>
      <updated-at type="datetime">2011-02-12T01:41:28+00:00</updated-at>
      <user-id type="integer">136726</user-id>
      <version type="integer">1</version>
      <user-name>Ross Heflin</user-name>
      <creator-name>Ross Heflin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6419</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Try to change line in your Gemfile containing ruby-debug19:
@@@ ruby
 gem &quot;ruby-debug19&quot;, :require =&gt; &quot;ruby-debug&quot;
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Try to change line in your Gemfile containing
ruby-debug19:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt; gem &quot;ruby-debug19&quot;, :require =&amp;gt; &quot;ruby-debug&quot;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T11:55:09+00:00</created-at>
      <creator-id type="integer">136726</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6419</number>
      <permalink>debugger-statements-not-triggering-the-debugger-in-rails-304</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>debugger statements not triggering the debugger in rails 3.0.4</title>
      <updated-at type="datetime">2011-02-12T11:55:12+00:00</updated-at>
      <user-id type="integer">31422</user-id>
      <version type="integer">2</version>
      <user-name>Wojciech Wn&#281;trzak</user-name>
      <creator-name>Ross Heflin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6419</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I just checked, and on rails master, Gemfile is generated with this example, but without proper require.
I'm adding a patch with working example of ruby-debug19 gem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just checked, and on rails master, Gemfile is generated with
this example, but without proper require.&lt;br&gt;
I'm adding a patch with working example of ruby-debug19 gem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-12T12:36:53+00:00</created-at>
      <creator-id type="integer">136726</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6419</number>
      <permalink>debugger-statements-not-triggering-the-debugger-in-rails-304</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>debugger statements not triggering the debugger in rails 3.0.4</title>
      <updated-at type="datetime">2011-02-12T12:37:01+00:00</updated-at>
      <user-id type="integer">31422</user-id>
      <version type="integer">3</version>
      <user-name>Wojciech Wn&#281;trzak</user-name>
      <creator-name>Ross Heflin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6419</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [22e14ea5739f552dfc663f563835fa27669d627d]) added proper require for ruby-debug19 gem to generated Gemfile

[#6419 state:committed]

Signed-off-by: Santiago Pastorino &lt;santiago@wyeworks.com&gt;
https://github.com/rails/rails/commit/22e14ea5739f552dfc663f563835fa27669d627d</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/22e14ea5739f552dfc663f563835fa27669d627d&quot;
title=
&quot;Changeset [22e14ea5739f552dfc663f563835fa27669d627d]&quot;&gt;[22e14ea5739f552dfc663f563835fa27669d627d]&lt;/a&gt;)
added proper require for ruby-debug19 gem to generated Gemfile&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/6419&quot; title=
&quot;Ticket #6419&quot;&gt;#6419&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Santiago Pastorino &lt;a href=
&quot;mailto:santiago@wyeworks.com&quot;&gt;santiago@wyeworks.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/22e14ea5739f552dfc663f563835fa27669d627d&quot;&gt;
https://github.com/rails/rails/commit/22e14ea5739f552dfc663f563835f...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-13T00:41:25+00:00</created-at>
      <creator-id type="integer">136726</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6419</number>
      <permalink>debugger-statements-not-triggering-the-debugger-in-rails-304</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>debugger statements not triggering the debugger in rails 3.0.4</title>
      <updated-at type="datetime">2011-02-13T00:41:29+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Ross Heflin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6419</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [9c6f9c98b84827a55eba203c89611b7d9afd3cde]) added proper require for ruby-debug19 gem to generated Gemfile

[#6419 state:committed]

Signed-off-by: Santiago Pastorino &lt;santiago@wyeworks.com&gt;
https://github.com/rails/rails/commit/9c6f9c98b84827a55eba203c89611b7d9afd3cde</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/9c6f9c98b84827a55eba203c89611b7d9afd3cde&quot;
title=
&quot;Changeset [9c6f9c98b84827a55eba203c89611b7d9afd3cde]&quot;&gt;[9c6f9c98b84827a55eba203c89611b7d9afd3cde]&lt;/a&gt;)
added proper require for ruby-debug19 gem to generated Gemfile&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/6419&quot; title=
&quot;Ticket #6419&quot;&gt;#6419&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Santiago Pastorino &lt;a href=
&quot;mailto:santiago@wyeworks.com&quot;&gt;santiago@wyeworks.com&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;https://github.com/rails/rails/commit/9c6f9c98b84827a55eba203c89611b7d9afd3cde&quot;&gt;
https://github.com/rails/rails/commit/9c6f9c98b84827a55eba203c89611...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-13T00:46:32+00:00</created-at>
      <creator-id type="integer">136726</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6419</number>
      <permalink>debugger-statements-not-triggering-the-debugger-in-rails-304</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag nil="true"></tag>
      <title>debugger statements not triggering the debugger in rails 3.0.4</title>
      <updated-at type="datetime">2011-02-13T00:46:38+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Ross Heflin</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6419</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>270dbf8e06259edb48c03067925e6ce6db791824</code>
      <content-type>application/x-compressed-tar</content-type>
      <created-at type="datetime">2011-02-12T01:56:56+00:00</created-at>
      <filename>foo.tgz</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">909319</id>
      <size type="integer">85407</size>
      <uploader-id type="integer">136726</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/909319/foo.tgz</url>
    </attachment>
    <attachment type="Attachment">
      <code>39e6f7c762d31f3cb878fdce6331a71baa85b30d</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-12T12:36:53+00:00</created-at>
      <filename>proper_require_for_ruby-debu19_gem_in_generated_gemfile.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">909491</id>
      <size type="integer">932</size>
      <uploader-id type="integer">31422</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/909491/proper_require_for_ruby-debu19_gem_in_generated_gemfile.diff</url>
    </attachment>
  </attachments>
</ticket>
