<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-17T06:48:07+00:00</created-at>
  <creator-id type="integer">10460</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5568</number>
  <permalink>239-destroy_all-destroys-loaded-records-that-do-not-match-the-scope-on-associations</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord destroy_all has_many named_scope patch regression</tag>
  <title>2.3.9 destroy_all destroys loaded records that do not match the scope on associations</title>
  <updated-at type="datetime">2011-02-17T06:48:07+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">7</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Will Bryant</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5568</url>
  <priority-name>Low</priority-name>
  <original-body>Release 2.3.9's commit https://github.com/rails/rails/commit/b41c3ba154c2038ecc7b230693662257833869b8 introduced a nasty bug that causes some_association.some_scope.destroy_all to destroy any records that were loaded in some_association, even if they do not match some_scope.

For example, see the attached test case, where I create some records on an association, and then destroy_all on a scope of that association.

In ActiveRecord::Associations::AssociationCollection#load_target, the new code adds back all the records in @target, which are then returned in the target array to destroy_all, which then destroys them.

This didn't previously happen as that method previously only added back in any new records.  So I have attached a patch that solves this particular case by only adding back the new records.  This restores the prior behavior in this respect

One could argue though that this whole method needs a rewrite to have clearer semantics with respect to scopes.</original-body>
  <latest-body>Release 2.3.9's commit https://github.com/rails/rails/commit/b41c3ba154c2038ecc7b230693662257833869b8 introduced a nasty bug that causes some_association.some_scope.destroy_all to destroy any records that were loaded in some_association, even if they do not match some_scope.

For example, see the attached test case, where I create some records on an association, and then destroy_all on a scope of that association.

In ActiveRecord::Associations::AssociationCollection#load_target, the new code adds back all the records in @target, which are then returned in the target array to destroy_all, which then destroys them.

This didn't previously happen as that method previously only added back in any new records.  So I have attached a patch that solves this particular case by only adding back the new records.  This restores the prior behavior in this respect

One could argue though that this whole method needs a rewrite to have clearer semantics with respect to scopes.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Release 2.3.9's commit &lt;a href=
&quot;https://github.com/rails/rails/commit/b41c3ba154c2038ecc7b230693662257833869b8&quot;&gt;
https://github.com/rails/rails/commit/b41c3ba154c2038ecc7b230693662...&lt;/a&gt;
introduced a nasty bug that causes
some_association.some_scope.destroy_all to destroy any records that
were loaded in some_association, even if they do not match
some_scope.&lt;/p&gt;
&lt;p&gt;For example, see the attached test case, where I create some
records on an association, and then destroy_all on a scope of that
association.&lt;/p&gt;
&lt;p&gt;In
ActiveRecord::Associations::AssociationCollection#load_target, the
new code adds back all the records in @target, which are then
returned in the target array to destroy_all, which then destroys
them.&lt;/p&gt;
&lt;p&gt;This didn't previously happen as that method previously only
added back in any new records. So I have attached a patch that
solves this particular case by only adding back the new records.
This restores the prior behavior in this respect&lt;/p&gt;
&lt;p&gt;One could argue though that this whole method needs a rewrite to
have clearer semantics with respect to scopes.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Release 2.3.9's commit https://github.com/rails/rails/commit/b41c3ba154c2038ecc7b230693662257833869b8 introduced a nasty bug that causes some_association.some_scope.destroy_all to destroy any records that were loaded in some_association, even if they do not match some_scope.

For example, see the attached test case, where I create some records on an association, and then destroy_all on a scope of that association.

In ActiveRecord::Associations::AssociationCollection#load_target, the new code adds back all the records in @target, which are then returned in the target array to destroy_all, which then destroys them.

This didn't previously happen as that method previously only added back in any new records.  So I have attached a patch that solves this particular case by only adding back the new records.  This restores the prior behavior in this respect

One could argue though that this whole method needs a rewrite to have clearer semantics with respect to scopes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Release 2.3.9's commit &lt;a href=
&quot;https://github.com/rails/rails/commit/b41c3ba154c2038ecc7b230693662257833869b8&quot;&gt;
https://github.com/rails/rails/commit/b41c3ba154c2038ecc7b230693662...&lt;/a&gt;
introduced a nasty bug that causes
some_association.some_scope.destroy_all to destroy any records that
were loaded in some_association, even if they do not match
some_scope.&lt;/p&gt;
&lt;p&gt;For example, see the attached test case, where I create some
records on an association, and then destroy_all on a scope of that
association.&lt;/p&gt;
&lt;p&gt;In
ActiveRecord::Associations::AssociationCollection#load_target, the
new code adds back all the records in @target, which are then
returned in the target array to destroy_all, which then destroys
them.&lt;/p&gt;
&lt;p&gt;This didn't previously happen as that method previously only
added back in any new records. So I have attached a patch that
solves this particular case by only adding back the new records.
This restores the prior behavior in this respect&lt;/p&gt;
&lt;p&gt;One could argue though that this whole method needs a rewrite to
have clearer semantics with respect to scopes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-07T10:32:42+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5568</number>
      <permalink>239-destroy_all-destroys-loaded-records-that-do-not-match-the-scope-on-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord regression destroy_all load_target has_many named_scope&quot;</tag>
      <title>2.3.9 destroy_all destroys loaded records that do not match the scope on associations</title>
      <updated-at type="datetime">2010-11-08T14:34:47+00:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">1</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5568</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-07T10:39:38+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5568</number>
      <permalink>239-destroy_all-destroys-loaded-records-that-do-not-match-the-scope-on-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord regression destroy_all load_target has_many named_scope&quot;</tag>
      <title>2.3.9 destroy_all destroys loaded records that do not match the scope on associations</title>
      <updated-at type="datetime">2010-09-07T10:39:42+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">2</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5568</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Pratik, would you mind taking a look at this?  Hoping you know a lot more about the original patch than me :).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Pratik, would you mind taking a look at this? Hoping you know a
lot more about the original patch than me :).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-07T10:41:04+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5568</number>
      <permalink>239-destroy_all-destroys-loaded-records-that-do-not-match-the-scope-on-associations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;activerecord regression destroy_all load_target has_many named_scope&quot;</tag>
      <title>2.3.9 destroy_all destroys loaded records that do not match the scope on associations</title>
      <updated-at type="datetime">2010-09-07T10:41:06+01:00</updated-at>
      <user-id type="integer">10460</user-id>
      <version type="integer">3</version>
      <user-name>Will Bryant</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5568</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-10T09:02:58+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;activerecord regression destroy_all load_target has_many named_scope\&quot;&quot;
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5568</number>
      <permalink>239-destroy_all-destroys-loaded-records-that-do-not-match-the-scope-on-associations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord destroy_all has_many named_scope patch regression</tag>
      <title>2.3.9 destroy_all destroys loaded records that do not match the scope on associations</title>
      <updated-at type="datetime">2010-10-10T09:03:02+01:00</updated-at>
      <user-id type="integer">94458</user-id>
      <version type="integer">4</version>
      <user-name>Jeff Kreeftmeijer</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5568</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just confirmed this behaviour on Rails 2.3.9.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Just confirmed this behaviour on Rails 2.3.9.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-18T17:14:43+01:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5568</number>
      <permalink>239-destroy_all-destroys-loaded-records-that-do-not-match-the-scope-on-associations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord destroy_all has_many named_scope patch regression</tag>
      <title>2.3.9 destroy_all destroys loaded records that do not match the scope on associations</title>
      <updated-at type="datetime">2010-10-18T17:14:50+01:00</updated-at>
      <user-id type="integer">101278</user-id>
      <version type="integer">5</version>
      <user-name>Gon&#231;alo Silva</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5568</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-09T00:31:52+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5568</number>
      <permalink>239-destroy_all-destroys-loaded-records-that-do-not-match-the-scope-on-associations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord destroy_all has_many named_scope patch regression</tag>
      <title>2.3.9 destroy_all destroys loaded records that do not match the scope on associations</title>
      <updated-at type="datetime">2011-02-09T00:35:28+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5568</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-09T00:31:52+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5568</number>
      <permalink>239-destroy_all-destroys-loaded-records-that-do-not-match-the-scope-on-associations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord destroy_all has_many named_scope patch regression</tag>
      <title>2.3.9 destroy_all destroys loaded records that do not match the scope on associations</title>
      <updated-at type="datetime">2011-02-09T00:36:34+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5568</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-17T05:55:24+00:00</created-at>
      <creator-id type="integer">10460</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5568</number>
      <permalink>239-destroy_all-destroys-loaded-records-that-do-not-match-the-scope-on-associations</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord destroy_all has_many named_scope patch regression</tag>
      <title>2.3.9 destroy_all destroys loaded records that do not match the scope on associations</title>
      <updated-at type="datetime">2011-02-17T06:48:07+00:00</updated-at>
      <user-id type="integer">137442</user-id>
      <version type="integer">8</version>
      <user-name>gfh</user-name>
      <creator-name>Will Bryant</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5568</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>477b4ebbb40a9dcc29582410138e25c13c6bdb90</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-07T10:39:38+01:00</created-at>
      <filename>0001-don-t-add-non-new-records-back-to-the-target-array-a.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">661286</id>
      <size type="integer">3314</size>
      <uploader-id type="integer">10460</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/661286/0001-don-t-add-non-new-records-back-to-the-target-array-a.patch</url>
    </attachment>
  </attachments>
</ticket>
