From 77adc903f900c6e4e00589963159fd63c4cb50fe Mon Sep 17 00:00:00 2001
From: Diego Algorta <diego@oboxodo.com>
Date: Mon, 10 May 2010 05:15:53 -0300
Subject: [PATCH] Fix bug for singular_ids when relationship uses :include. Fixes existing failing test.

---
 activerecord/lib/active_record/associations.rb |    4 +++-
 activerecord/lib/active_record/relation.rb     |   14 +++++++++++++-
 2 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/activerecord/lib/active_record/associations.rb b/activerecord/lib/active_record/associations.rb
index 0a3c7c6..7353c03 100755
--- a/activerecord/lib/active_record/associations.rb
+++ b/activerecord/lib/active_record/associations.rb
@@ -1398,7 +1398,9 @@ module ActiveRecord
                 primary_key = reflection.source_reflection.primary_key_name
                 send(through.name).select("DISTINCT #{through.quoted_table_name}.#{primary_key}").map!(&:"#{primary_key}")
               else
-                send(reflection.name).select("#{reflection.quoted_table_name}.#{reflection.klass.primary_key}").map!(&:id)
+                send(reflection.name).select("#{reflection.quoted_table_name}.#{reflection.klass.primary_key}").ignoring_includes do |relation|
+                  relation.map!(&:id)
+                end
               end
             end
           end
diff --git a/activerecord/lib/active_record/relation.rb b/activerecord/lib/active_record/relation.rb
index 4e62187..2a0886e 100644
--- a/activerecord/lib/active_record/relation.rb
+++ b/activerecord/lib/active_record/relation.rb
@@ -20,6 +20,7 @@ module ActiveRecord
 
       @implicit_readonly = nil
       @loaded            = nil
+      @ignore_includes   = false
 
       SINGLE_VALUE_METHODS.each {|v| instance_variable_set(:"@#{v}_value", nil)}
       (ASSOCIATION_METHODS + MULTI_VALUE_METHODS).each {|v| instance_variable_set(:"@#{v}_values", [])}
@@ -64,7 +65,7 @@ module ActiveRecord
       @records = eager_loading? ? find_with_associations : @klass.find_by_sql(arel.to_sql)
 
       preload = @preload_values
-      preload +=  @includes_values unless eager_loading?
+      preload +=  @includes_values unless eager_loading? || should_ignore_includes?
       preload.each {|associations| @klass.send(:preload_associations, @records, associations) }
 
       # @readonly_value is true only if set explicity. @implicit_readonly is true if there are JOINS and no explicit SELECT.
@@ -311,6 +312,17 @@ module ActiveRecord
       @should_eager_load ||= (@eager_load_values.any? || (@includes_values.any? && references_eager_loaded_tables?))
     end
 
+    def should_ignore_includes?
+      @ignore_includes
+    end
+
+    def ignoring_includes
+      @ignore_includes = true
+      yield self
+    ensure
+      @ignore_includes = false
+    end
+
     def ==(other)
       case other
       when Relation
-- 
1.6.3.3

