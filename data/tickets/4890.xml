<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">19965</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-06-17T18:02:16+01:00</created-at>
  <creator-id type="integer">103676</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">4890</number>
  <permalink>correct-output-from-activemodelerrors-to_json</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>&quot;active model&quot; active_model errors json rails3 to_json</tag>
  <title>Correct output from ActiveModel::Errors to_json</title>
  <updated-at type="datetime">2010-10-15T23:01:56+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">14</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Samuel Kadolph</creator-name>
  <assigned-user-name>Jos&#233; Valim</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>ActiveModel::Errors#to_xml correctly outputs valid XML that can be used to display all errors. ActiveModel::Errors#to_json does not output valid JSON because it does not have a custom implementation of to_json to deal with ActiveModel::Errors#each which flattens the attribute errors array.

@@@ ruby
irb(main):001:0&gt; u = User.create
=&gt; #&lt;User id: nil, username: nil&gt;
irb(main):002:0&gt; u.errors
=&gt; #&lt;OrderedHash {:username=&gt;[&quot;is too short (...snip...)&quot;, &quot;can't be blank&quot;]}&gt;
irb(main):003:0&gt; puts u.errors.to_xml

&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;errors&gt;
  &lt;error&gt;Username is too short (minimum is 3 characters)&lt;/error&gt;
  &lt;error&gt;Username can't be blank&lt;/error&gt;
&lt;/errors&gt;
=&gt; nil
irb(main):004:0&gt; puts u.errors.to_json
{&quot;username&quot;:&quot;is too short (minimum is 3 characters)&quot;,&quot;username&quot;:&quot;can't be blank&quot;}
=&gt; nil
@@@

This JSON is invalid and when parsed would only give one error message per attribute.
ActiveModel::Errors#to_json should return the same messages as to_xml.
@@@ ruby
[&quot;Username is too short (minimum is 3 characters)&quot;,&quot;Username can't be blank&quot;]
@@@</original-body>
  <latest-body>ActiveModel::Errors#to_xml correctly outputs valid XML that can be used to display all errors. ActiveModel::Errors#to_json does not output valid JSON because it does not have a custom implementation of to_json to deal with ActiveModel::Errors#each which flattens the attribute errors array.

@@@ ruby
irb(main):001:0&gt; u = User.create
=&gt; #&lt;User id: nil, username: nil&gt;
irb(main):002:0&gt; u.errors
=&gt; #&lt;OrderedHash {:username=&gt;[&quot;is too short (...snip...)&quot;, &quot;can't be blank&quot;]}&gt;
irb(main):003:0&gt; puts u.errors.to_xml

&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;errors&gt;
  &lt;error&gt;Username is too short (minimum is 3 characters)&lt;/error&gt;
  &lt;error&gt;Username can't be blank&lt;/error&gt;
&lt;/errors&gt;
=&gt; nil
irb(main):004:0&gt; puts u.errors.to_json
{&quot;username&quot;:&quot;is too short (minimum is 3 characters)&quot;,&quot;username&quot;:&quot;can't be blank&quot;}
=&gt; nil
@@@

This JSON is invalid and when parsed would only give one error message per attribute.
ActiveModel::Errors#to_json should return the same messages as to_xml.
@@@ ruby
[&quot;Username is too short (minimum is 3 characters)&quot;,&quot;Username can't be blank&quot;]
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;ActiveModel::Errors#to_xml correctly outputs valid XML that can
be used to display all errors. ActiveModel::Errors#to_json does not
output valid JSON because it does not have a custom implementation
of to_json to deal with ActiveModel::Errors#each which flattens the
attribute errors array.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;irb(main):001:0&amp;gt; u = User.create
=&amp;gt; #&amp;lt;User id: nil, username: nil&amp;gt;
irb(main):002:0&amp;gt; u.errors
=&amp;gt; #&amp;lt;OrderedHash {:username=&amp;gt;[&quot;is too short (...snip...)&quot;, &quot;can't be blank&quot;]}&amp;gt;
irb(main):003:0&amp;gt; puts u.errors.to_xml

&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;errors&amp;gt;
  &amp;lt;error&amp;gt;Username is too short (minimum is 3 characters)&amp;lt;/error&amp;gt;
  &amp;lt;error&amp;gt;Username can't be blank&amp;lt;/error&amp;gt;
&amp;lt;/errors&amp;gt;
=&amp;gt; nil
irb(main):004:0&amp;gt; puts u.errors.to_json
{&quot;username&quot;:&quot;is too short (minimum is 3 characters)&quot;,&quot;username&quot;:&quot;can't be blank&quot;}
=&amp;gt; nil&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This JSON is invalid and when parsed would only give one error
message per attribute.&lt;br&gt;
ActiveModel::Errors#to_json should return the same messages as
to_xml.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;[&quot;Username is too short (minimum is 3 characters)&quot;,&quot;Username can't be blank&quot;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>ActiveModel::Errors#to_xml correctly outputs valid XML that can be used to display all errors. ActiveModel::Errors#to_json does not output valid JSON because it does not have a custom implementation of to_json to deal with ActiveModel::Errors#each which flattens the attribute errors array.

@@@ ruby
irb(main):001:0&gt; u = User.create
=&gt; #&lt;User id: nil, username: nil&gt;
irb(main):002:0&gt; u.errors
=&gt; #&lt;OrderedHash {:username=&gt;[&quot;is too short (...snip...)&quot;, &quot;can't be blank&quot;]}&gt;
irb(main):003:0&gt; puts u.errors.to_xml

&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;errors&gt;
  &lt;error&gt;Username is too short (minimum is 3 characters)&lt;/error&gt;
  &lt;error&gt;Username can't be blank&lt;/error&gt;
&lt;/errors&gt;
=&gt; nil
irb(main):004:0&gt; puts u.errors.to_json
{&quot;username&quot;:&quot;is too short (minimum is 3 characters)&quot;,&quot;username&quot;:&quot;can't be blank&quot;}
=&gt; nil
@@@

This JSON is invalid and when parsed would only give one error message per attribute.
ActiveModel::Errors#to_json should return the same messages as to_xml.
@@@ ruby
[&quot;Username is too short (minimum is 3 characters)&quot;,&quot;Username can't be blank&quot;]
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;ActiveModel::Errors#to_xml correctly outputs valid XML that can
be used to display all errors. ActiveModel::Errors#to_json does not
output valid JSON because it does not have a custom implementation
of to_json to deal with ActiveModel::Errors#each which flattens the
attribute errors array.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;irb(main):001:0&amp;gt; u = User.create
=&amp;gt; #&amp;lt;User id: nil, username: nil&amp;gt;
irb(main):002:0&amp;gt; u.errors
=&amp;gt; #&amp;lt;OrderedHash {:username=&amp;gt;[&quot;is too short (...snip...)&quot;, &quot;can't be blank&quot;]}&amp;gt;
irb(main):003:0&amp;gt; puts u.errors.to_xml

&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;errors&amp;gt;
  &amp;lt;error&amp;gt;Username is too short (minimum is 3 characters)&amp;lt;/error&amp;gt;
  &amp;lt;error&amp;gt;Username can't be blank&amp;lt;/error&amp;gt;
&amp;lt;/errors&amp;gt;
=&amp;gt; nil
irb(main):004:0&amp;gt; puts u.errors.to_json
{&quot;username&quot;:&quot;is too short (minimum is 3 characters)&quot;,&quot;username&quot;:&quot;can't be blank&quot;}
=&amp;gt; nil&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This JSON is invalid and when parsed would only give one error
message per attribute.&lt;br&gt;
ActiveModel::Errors#to_json should return the same messages as
to_xml.&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;[&quot;Username is too short (minimum is 3 characters)&quot;,&quot;Username can't be blank&quot;]&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-17T18:02:16+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active model&quot; active_model errors json to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-17T18:02:18+01:00</updated-at>
      <user-id type="integer">103676</user-id>
      <version type="integer">1</version>
      <user-name>Samuel Kadolph</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The solution is to override the ActiveModel::Errors#as_json method to give the full_messages array to be converted to JSON. Patch is attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The solution is to override the ActiveModel::Errors#as_json
method to give the full_messages array to be converted to JSON.
Patch is attached.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-17T18:11:58+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active model&quot; active_model errors json to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-17T18:12:05+01:00</updated-at>
      <user-id type="integer">103676</user-id>
      <version type="integer">2</version>
      <user-name>Samuel Kadolph</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Complete patch is attached. (Sorry, new to the whole patching rails thing.)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Complete patch is attached. (Sorry, new to the whole patching
rails thing.)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-17T18:45:25+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active model&quot; active_model errors json to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-17T18:45:28+01:00</updated-at>
      <user-id type="integer">103676</user-id>
      <version type="integer">3</version>
      <user-name>Samuel Kadolph</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>The patch looks great, but it need tests to ensure we won't have a regression later.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The patch looks great, but it need tests to ensure we won't have
a regression later.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-22T16:39:00+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active model&quot; active_model errors json to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-22T16:39:09+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">4</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Trying to create a test for this one but running into stack level too deep issue. 

Hopefully I'll have a test patch soon. :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Trying to create a test for this one but running into stack
level too deep issue.&lt;/p&gt;
&lt;p&gt;Hopefully I'll have a test patch soon. :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-23T22:07:22+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active model&quot; active_model errors json to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-23T22:07:28+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">5</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I've been looking into writing a test case for this but I have to get the tests for rails going first which hasn't been easy on Windows and our only other Unix server with ruby 1.8.7 is for production and I won't be installing the oodles of gems that rails dev requires.

That aside, I did notice there is no test case for ActiveModel::Errors#to_xml. So it would be beneficial to write a case for that as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've been looking into writing a test case for this but I have
to get the tests for rails going first which hasn't been easy on
Windows and our only other Unix server with ruby 1.8.7 is for
production and I won't be installing the oodles of gems that rails
dev requires.&lt;/p&gt;
&lt;p&gt;That aside, I did notice there is no test case for
ActiveModel::Errors#to_xml. So it would be beneficial to write a
case for that as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-23T22:11:50+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active model&quot; active_model errors json to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-23T22:11:58+01:00</updated-at>
      <user-id type="integer">103676</user-id>
      <version type="integer">6</version>
      <user-name>Samuel Kadolph</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Neeraj, I think it's expected that you run into StackLevelTooDeep before the patch is applied. :) It means your test is correct!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Neeraj, I think it's expected that you run into
StackLevelTooDeep before the patch is applied. :) It means your
test is correct!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T08:41:22+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;active model&quot; active_model errors json to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-25T08:41:28+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">7</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>There are couple of things going on which is making me pause and think. 

- in the test if I do topic.errors.to_json then it blows up saying to_json is not defined which does not make sense since active_model requires active_support which in turn requires json. So all objects should have to_json. I don't fully understand how autoload works so I need to learn that.

- if I explicitly say require active_support/json to bring to_json then I get &quot;stack level too deep&quot; even with the fix in.

I am looking into it. expect some delays :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;There are couple of things going on which is making me pause and
think.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;in the test if I do topic.errors.to_json then it blows up saying
to_json is not defined which does not make sense since active_model
requires active_support which in turn requires json. So all objects
should have to_json. I don't fully understand how autoload works so
I need to learn that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if I explicitly say require active_support/json to bring to_json
then I get &quot;stack level too deep&quot; even with the fix in.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am looking into it. expect some delays :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T15:48:36+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: &quot;\&quot;active model\&quot; active_model errors json to_json&quot;
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;active model&quot; active_model errors json rails3 to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-25T15:48:45+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">8</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>JSON is autoloaded, but the to_json method is only added after you load it. So you need to explicitly require the json file (in tests).

About the stack level too deep error, could you please paste the strack trace here (not necessarily the whole backtrace ;))?</body>
      <body-html>&lt;div&gt;&lt;p&gt;JSON is autoloaded, but the to_json method is only added after
you load it. So you need to explicitly require the json file (in
tests).&lt;/p&gt;
&lt;p&gt;About the stack level too deep error, could you please paste the
strack trace here (not necessarily the whole backtrace ;))?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T16:05:59+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;active model&quot; active_model errors json rails3 to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-25T16:06:10+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">9</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>test requires 'cases/helper'. helper in turn requires active_model which in turn requires active_support.

JSON is eagerly autoloaded in active_support. json.rb in turn requires encoding. So I fail to understand why to_json will be missing. Sorry for being so thick. 

@@@ ruby
eager_autoload do
  autoload :JSON
end
 
require 'active_support/json/decoding'
require 'active_support/json/encoding'
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;test requires 'cases/helper'. helper in turn requires
active_model which in turn requires active_support.&lt;/p&gt;
&lt;p&gt;JSON is eagerly autoloaded in active_support. json.rb in turn
requires encoding. So I fail to understand why to_json will be
missing. Sorry for being so thick.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;eager_autoload do
  autoload :JSON
end
 
require 'active_support/json/decoding'
require 'active_support/json/encoding'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T16:15:23+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;active model&quot; active_model errors json rails3 to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-25T16:15:31+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">10</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I added following line to test/cases/validations/presence_validation_test.rb

@@@ ruby
require &quot;active_support/json/encoding&quot;

# added last three tests
  test 'accepts array arguments' do
    Topic.validates_presence_of %w(title content)
    t = Topic.new
    assert t.invalid?
    assert_equal [&quot;can't be blank&quot;], t.errors[:title]
    assert_equal [&quot;can't be blank&quot;], t.errors[:content]
    assert_match %r{&lt;error&gt;Title can't be blank&lt;/error&gt;}, t.errors.to_xml
    assert_match %r{&lt;error&gt;Content can't be blank&lt;/error&gt;}, t.errors.to_xml
    assert_nothing_raised { t.errors.to_json }
  end
@@@

This is the exception I am getting in its entirety

@@@ ruby
$ ruby -Itest test/cases/validations/presence_validation_test.rb -n /test_accepts_array_arguments/
Loaded suite test/cases/validations/presence_validation_test
Started
F
Finished in 0.048406 seconds.

  1) Failure:
test_accepts_array_arguments(PresenceValidationTest)
    [test/cases/validations/presence_validation_test.rb:44:in `test_accepts_array_arguments'
     /Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
     /Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
     /Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/callbacks.rb:408:in `_run_setup_callbacks'
     /Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run']:
Exception raised:
Class: &lt;SystemStackError&gt;
Message: &lt;&quot;stack level too deep&quot;&gt;
---Backtrace---
test/cases/validations/presence_validation_test.rb:44:in `to_json'
test/cases/validations/presence_validation_test.rb:44:in `test_accepts_array_arguments'
test/cases/validations/presence_validation_test.rb:44:in `test_accepts_array_arguments'
/Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
/Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
/Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/callbacks.rb:408:in `_run_setup_callbacks'
/Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run'
---------------

1 tests, 6 assertions, 1 failures, 0 errors
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;I added following line to
test/cases/validations/presence_validation_test.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;require &quot;active_support/json/encoding&quot;

# added last three tests
  test 'accepts array arguments' do
    Topic.validates_presence_of %w(title content)
    t = Topic.new
    assert t.invalid?
    assert_equal [&quot;can't be blank&quot;], t.errors[:title]
    assert_equal [&quot;can't be blank&quot;], t.errors[:content]
    assert_match %r{&amp;lt;error&amp;gt;Title can't be blank&amp;lt;/error&amp;gt;}, t.errors.to_xml
    assert_match %r{&amp;lt;error&amp;gt;Content can't be blank&amp;lt;/error&amp;gt;}, t.errors.to_xml
    assert_nothing_raised { t.errors.to_json }
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is the exception I am getting in its entirety&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;$ ruby -Itest test/cases/validations/presence_validation_test.rb -n /test_accepts_array_arguments/
Loaded suite test/cases/validations/presence_validation_test
Started
F
Finished in 0.048406 seconds.

  1) Failure:
test_accepts_array_arguments(PresenceValidationTest)
    [test/cases/validations/presence_validation_test.rb:44:in `test_accepts_array_arguments'
     /Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
     /Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
     /Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/callbacks.rb:408:in `_run_setup_callbacks'
     /Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run']:
Exception raised:
Class: &amp;lt;SystemStackError&amp;gt;
Message: &amp;lt;&quot;stack level too deep&quot;&amp;gt;
---Backtrace---
test/cases/validations/presence_validation_test.rb:44:in `to_json'
test/cases/validations/presence_validation_test.rb:44:in `test_accepts_array_arguments'
test/cases/validations/presence_validation_test.rb:44:in `test_accepts_array_arguments'
/Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
/Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
/Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/callbacks.rb:408:in `_run_setup_callbacks'
/Users/nsingh/dev/working/rails_tickets/r_4890/vendor/bundler/gems/rails-16a5e918a06649ffac24fd5873b875daf66212ad-master/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run'
---------------

1 tests, 6 assertions, 1 failures, 0 errors&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-25T16:19:49+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;active model&quot; active_model errors json rails3 to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-25T16:20:04+01:00</updated-at>
      <user-id type="integer">40263</user-id>
      <version type="integer">11</version>
      <user-name>Neeraj Singh</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Ok, I went deep down this problem and it turned out to be the JSON gem overwriting the to_json implementation for all core classes so Rails implementation was never used. The gem implementation does not work with hash inheritance, making ActiveSupport::OrderedHash fail when serialized to_json (and consequently ActiveModel::Errors). Patch is coming soon.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, I went deep down this problem and it turned out to be the
JSON gem overwriting the to_json implementation for all core
classes so Rails implementation was never used. The gem
implementation does not work with hash inheritance, making
ActiveSupport::OrderedHash fail when serialized to_json (and
consequently ActiveModel::Errors). Patch is coming soon.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-26T10:51:46+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>&quot;active model&quot; active_model errors json rails3 to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-26T10:51:52+01:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">12</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>(from [7bd85a8fc2d216a5e2b1d0380df572f782a54d1c]) Work around the fact the JSON gem was overwriting to_json implementation for all Ruby core classes.

This is required because the JSON gem is incompatible with Rails behavior and was not allowing ActiveModel::Errors to be serialized.
So we need to ensure Rails implementation is the one triggered. [#4890 state:resolved]
http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572f782a54d1c</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/7bd85a8fc2d216a5e2b1d0380df572f782a54d1c&quot;
title=
&quot;Changeset [7bd85a8fc2d216a5e2b1d0380df572f782a54d1c]&quot;&gt;[7bd85a8fc2d216a5e2b1d0380df572f782a54d1c]&lt;/a&gt;)
Work around the fact the JSON gem was overwriting to_json
implementation for all Ruby core classes.&lt;/p&gt;
&lt;p&gt;This is required because the JSON gem is incompatible with Rails
behavior and was not allowing ActiveModel::Errors to be
serialized.&lt;br&gt;
So we need to ensure Rails implementation is the one triggered.
[&lt;a href=&quot;/projects/8994/tickets/4890&quot; title=
&quot;Ticket #4890&quot;&gt;#4890&lt;/a&gt; state:resolved]&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572f782a54d1c&quot;&gt;
http://github.com/rails/rails/commit/7bd85a8fc2d216a5e2b1d0380df572...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-06-26T11:10:56+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;active model&quot; active_model errors json rails3 to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-06-26T11:11:02+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">13</version>
      <user-name>Repository</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">19965</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:56+01:00</created-at>
      <creator-id type="integer">103676</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">4890</number>
      <permalink>correct-output-from-activemodelerrors-to_json</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>&quot;active model&quot; active_model errors json rails3 to_json</tag>
      <title>Correct output from ActiveModel::Errors to_json</title>
      <updated-at type="datetime">2010-10-15T23:01:56+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">14</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Samuel Kadolph</creator-name>
      <assigned-user-name>Jos&#233; Valim</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4890</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>2843b131fc90b956365f20858b0e7e716d5900f8</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-17T18:11:58+01:00</created-at>
      <filename>correct_output_from_errors_to_json.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">563840</id>
      <size type="integer">628</size>
      <uploader-id type="integer">103676</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/563840/correct_output_from_errors_to_json.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>4ca3085809774559f14b3b573adc7d21600e121e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-17T18:45:25+01:00</created-at>
      <filename>0001-fixed-activemodel-errors-to_json-output.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">563890</id>
      <size type="integer">1403</size>
      <uploader-id type="integer">103676</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/563890/0001-fixed-activemodel-errors-to_json-output.patch</url>
    </attachment>
  </attachments>
</ticket>
