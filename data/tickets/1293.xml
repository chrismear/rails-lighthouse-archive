<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-30T01:22:27+00:00</created-at>
  <creator-id type="integer">5139</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1293</number>
  <permalink>mysql-adapter-doesnt-reconnect-on-lost-connection</permalink>
  <priority type="integer">698</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord mysql</tag>
  <title>MySQL adapter doesn't reconnect on lost connection</title>
  <updated-at type="datetime">2011-03-26T02:21:43+00:00</updated-at>
  <user-id type="integer">142823</user-id>
  <version type="integer">7</version>
  <user-name>bingbing</user-name>
  <creator-name>Esad Hajdarevic</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1293</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>(copied from trac ticket #10277, looks like it's not yet fixed) 

A connection to the MySQL server will time out after some time, depending on your server's wait_timeout and interactive_timeout settings, which are per default set to something like 8 days, so this problem will occur only in long running production environments.

The real problem is that when rails encounters the &quot;Lost connection&quot; error, it doesn't try to reconnect (weirdly enough, this behaviour was there in rails 0.13 but was kicked out for some reason!?). It remains unclear to me what LOST_CONNECTION_ERROR_MESSAGE constant in the mysql_adapter.rb is used for? (it is inthere as of AR-1.15.5).

This problem doesn't occur in development environment, as the dispatcher (see dispatcher.rb) calls ActiveRecord::Base.verify_active_connections! that takes care of this.

Could someone comment on this before I write/submit a patch? Why was the old behaviour kicked out? Why isn't Mysql#reconnect= used? (the reconnect behaviour is supported by the MySQL binding)</original-body>
  <latest-body>(copied from trac ticket #10277, looks like it's not yet fixed) 

A connection to the MySQL server will time out after some time, depending on your server's wait_timeout and interactive_timeout settings, which are per default set to something like 8 days, so this problem will occur only in long running production environments.

The real problem is that when rails encounters the &quot;Lost connection&quot; error, it doesn't try to reconnect (weirdly enough, this behaviour was there in rails 0.13 but was kicked out for some reason!?). It remains unclear to me what LOST_CONNECTION_ERROR_MESSAGE constant in the mysql_adapter.rb is used for? (it is inthere as of AR-1.15.5).

This problem doesn't occur in development environment, as the dispatcher (see dispatcher.rb) calls ActiveRecord::Base.verify_active_connections! that takes care of this.

Could someone comment on this before I write/submit a patch? Why was the old behaviour kicked out? Why isn't Mysql#reconnect= used? (the reconnect behaviour is supported by the MySQL binding)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;(copied from trac ticket &lt;a href=&quot;/projects/8994/tickets/10277&quot; title=&quot;Ticket #10277&quot;&gt;#10277&lt;/a&gt;, looks like it's not yet
fixed)&lt;/p&gt;
&lt;p&gt;A connection to the MySQL server will time out after some time,
depending on your server's wait_timeout and interactive_timeout
settings, which are per default set to something like 8 days, so
this problem will occur only in long running production
environments.&lt;/p&gt;
&lt;p&gt;The real problem is that when rails encounters the &quot;Lost
connection&quot; error, it doesn't try to reconnect (weirdly enough,
this behaviour was there in rails 0.13 but was kicked out for some
reason!?). It remains unclear to me what
LOST_CONNECTION_ERROR_MESSAGE constant in the mysql_adapter.rb is
used for? (it is inthere as of AR-1.15.5).&lt;/p&gt;
&lt;p&gt;This problem doesn't occur in development environment, as the
dispatcher (see dispatcher.rb) calls
ActiveRecord::Base.verify_active_connections! that takes care of
this.&lt;/p&gt;
&lt;p&gt;Could someone comment on this before I write/submit a patch? Why
was the old behaviour kicked out? Why isn't Mysql#reconnect= used?
(the reconnect behaviour is supported by the MySQL binding)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(copied from trac ticket #10277, looks like it's not yet fixed) 

A connection to the MySQL server will time out after some time, depending on your server's wait_timeout and interactive_timeout settings, which are per default set to something like 8 days, so this problem will occur only in long running production environments.

The real problem is that when rails encounters the &quot;Lost connection&quot; error, it doesn't try to reconnect (weirdly enough, this behaviour was there in rails 0.13 but was kicked out for some reason!?). It remains unclear to me what LOST_CONNECTION_ERROR_MESSAGE constant in the mysql_adapter.rb is used for? (it is inthere as of AR-1.15.5).

This problem doesn't occur in development environment, as the dispatcher (see dispatcher.rb) calls ActiveRecord::Base.verify_active_connections! that takes care of this.

Could someone comment on this before I write/submit a patch? Why was the old behaviour kicked out? Why isn't Mysql#reconnect= used? (the reconnect behaviour is supported by the MySQL binding)</body>
      <body-html>&lt;div&gt;&lt;p&gt;(copied from trac ticket &lt;a href=&quot;/projects/8994/tickets/10277&quot; title=&quot;Ticket #10277&quot;&gt;#10277&lt;/a&gt;, looks like it's not yet
fixed)&lt;/p&gt;
&lt;p&gt;A connection to the MySQL server will time out after some time,
depending on your server's wait_timeout and interactive_timeout
settings, which are per default set to something like 8 days, so
this problem will occur only in long running production
environments.&lt;/p&gt;
&lt;p&gt;The real problem is that when rails encounters the &quot;Lost
connection&quot; error, it doesn't try to reconnect (weirdly enough,
this behaviour was there in rails 0.13 but was kicked out for some
reason!?). It remains unclear to me what
LOST_CONNECTION_ERROR_MESSAGE constant in the mysql_adapter.rb is
used for? (it is inthere as of AR-1.15.5).&lt;/p&gt;
&lt;p&gt;This problem doesn't occur in development environment, as the
dispatcher (see dispatcher.rb) calls
ActiveRecord::Base.verify_active_connections! that takes care of
this.&lt;/p&gt;
&lt;p&gt;Could someone comment on this before I write/submit a patch? Why
was the old behaviour kicked out? Why isn't Mysql#reconnect= used?
(the reconnect behaviour is supported by the MySQL binding)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-30T01:22:27+00:00</created-at>
      <creator-id type="integer">5139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1293</number>
      <permalink>mysql-adapter-doesnt-reconnect-on-lost-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord mysql</tag>
      <title>MySQL adapter doesn't reconnect on lost connection</title>
      <updated-at type="datetime">2008-10-30T01:22:30+00:00</updated-at>
      <user-id type="integer">5139</user-id>
      <version type="integer">1</version>
      <user-name>Esad Hajdarevic</user-name>
      <creator-name>Esad Hajdarevic</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1293</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've had this happen to me before in production on edge Rails awhile back. I'm not sure why the old behavior was kicked out though, but in practice it definitely doesn't reconnect all the time.

And yup I can confirm that the LOST_CONNECTION_ERROR_MESSAGES constant is not being used anywhere in AR code.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've had this happen to me before in production on edge Rails
awhile back. I'm not sure why the old behavior was kicked out
though, but in practice it definitely doesn't reconnect all the
time.&lt;/p&gt;
&lt;p&gt;And yup I can confirm that the LOST_CONNECTION_ERROR_MESSAGES
constant is not being used anywhere in AR code.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-30T02:48:42+00:00</created-at>
      <creator-id type="integer">5139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1293</number>
      <permalink>mysql-adapter-doesnt-reconnect-on-lost-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord mysql</tag>
      <title>MySQL adapter doesn't reconnect on lost connection</title>
      <updated-at type="datetime">2008-10-30T02:48:45+00:00</updated-at>
      <user-id type="integer">586</user-id>
      <version type="integer">2</version>
      <user-name>Cheah Chu Yeow</user-name>
      <creator-name>Esad Hajdarevic</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1293</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The retry-magically code was removed as it was dangerous.  You could easily end up resubmitting an insert statement and duplicating data.

However the dispatcher in rails pre-verifies connections in production mode too, which version are you seeing this with?</body>
      <body-html>&lt;div&gt;&lt;p&gt;The retry-magically code was removed as it was dangerous. You
could easily end up resubmitting an insert statement and
duplicating data.&lt;/p&gt;
&lt;p&gt;However the dispatcher in rails pre-verifies connections in
production mode too, which version are you seeing this with?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-30T10:38:52+00:00</created-at>
      <creator-id type="integer">5139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1293</number>
      <permalink>mysql-adapter-doesnt-reconnect-on-lost-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord mysql</tag>
      <title>MySQL adapter doesn't reconnect on lost connection</title>
      <updated-at type="datetime">2008-10-30T10:38:56+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">3</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Esad Hajdarevic</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1293</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This was in 2.1.2 - is the dispatcher pre-verifying connections 2.2 or is it already in 2.1.x?</body>
      <body-html>&lt;div&gt;&lt;p&gt;This was in 2.1.2 - is the dispatcher pre-verifying connections
2.2 or is it already in 2.1.x?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-31T02:56:45+00:00</created-at>
      <creator-id type="integer">5139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1293</number>
      <permalink>mysql-adapter-doesnt-reconnect-on-lost-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord mysql</tag>
      <title>MySQL adapter doesn't reconnect on lost connection</title>
      <updated-at type="datetime">2008-10-31T02:56:46+00:00</updated-at>
      <user-id type="integer">5139</user-id>
      <version type="integer">4</version>
      <user-name>Esad Hajdarevic</user-name>
      <creator-name>Esad Hajdarevic</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1293</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The verification in 2.1 has an optimisation that you might be hitting:

verify_active_connections in connection_specifications.rb uses a timeout.  Make sure you haven't set that:

@@@
    cattr_accessor :verification_timeout, :instance_writer =&gt; false
    @@verification_timeout = 0
@@@

But the logic is:

@@@
      # Lazily verify this connection, calling &lt;tt&gt;active?&lt;/tt&gt; only if it hasn't
      # been called for +timeout+ seconds.
      def verify!(timeout)
        now = Time.now.to_i
        if (now - @last_verification) &gt; timeout
          reconnect! unless active?
          @last_verification = now
        end
      end
@@@

So that *should* be working fine.  In 2.2 we remove that setting and just always verify the connection.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The verification in 2.1 has an optimisation that you might be
hitting:&lt;/p&gt;
&lt;p&gt;verify_active_connections in connection_specifications.rb uses a
timeout. Make sure you haven't set that:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
    cattr_accessor :verification_timeout, :instance_writer =&amp;gt; false
    @@verification_timeout = 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But the logic is:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
      # Lazily verify this connection, calling &amp;lt;tt&amp;gt;active?&amp;lt;/tt&amp;gt; only if it hasn't
      # been called for +timeout+ seconds.
      def verify!(timeout)
        now = Time.now.to_i
        if (now - @last_verification) &amp;gt; timeout
          reconnect! unless active?
          @last_verification = now
        end
      end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So that &lt;em&gt;should&lt;/em&gt; be working fine. In 2.2 we remove that
setting and just always verify the connection.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-01T11:58:47+00:00</created-at>
      <creator-id type="integer">5139</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1293</number>
      <permalink>mysql-adapter-doesnt-reconnect-on-lost-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord mysql</tag>
      <title>MySQL adapter doesn't reconnect on lost connection</title>
      <updated-at type="datetime">2008-11-01T11:58:51+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">5</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Esad Hajdarevic</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1293</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Optional reconnect: key added from #1838</body>
      <body-html>&lt;div&gt;&lt;p&gt;Optional reconnect: key added from &lt;a href=&quot;/projects/8994/tickets/1838&quot; title=&quot;Ticket #1838&quot;&gt;#1838&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-07T15:06:30+00:00</created-at>
      <creator-id type="integer">5139</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1293</number>
      <permalink>mysql-adapter-doesnt-reconnect-on-lost-connection</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord mysql</tag>
      <title>MySQL adapter doesn't reconnect on lost connection</title>
      <updated-at type="datetime">2009-03-07T15:06:32+00:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">6</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Esad Hajdarevic</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1293</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton watches&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;http://www.watcheseshop.com/&quot;&gt;louis vuitton
watches&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-26T02:05:09+00:00</created-at>
      <creator-id type="integer">5139</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1293</number>
      <permalink>mysql-adapter-doesnt-reconnect-on-lost-connection</permalink>
      <priority type="integer">698</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord mysql</tag>
      <title>MySQL adapter doesn't reconnect on lost connection</title>
      <updated-at type="datetime">2011-03-26T02:21:43+00:00</updated-at>
      <user-id type="integer">142823</user-id>
      <version type="integer">7</version>
      <user-name>bingbing</user-name>
      <creator-name>Esad Hajdarevic</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1293</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
