<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-29T17:31:11+01:00</created-at>
  <creator-id type="integer">15653</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">274</number>
  <permalink>finder-include-assoc-with-same-name-as-key-fail-on-postgres</permalink>
  <priority type="integer">14595</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord associations bug edge patch postgres</tag>
  <title>Finder :include assoc with same name as key fail on Postgres</title>
  <updated-at type="datetime">2008-07-02T12:51:30+01:00</updated-at>
  <user-id type="integer">1366</user-id>
  <version type="integer">7</version>
  <user-name>Pratik</user-name>
  <creator-name>Martin Sadler</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/274</url>
  <priority-name nil="true"></priority-name>
  <original-body>On Postgres when calling find on a model with an :include that contains an association with the same name as it's key an exception is raised:

&gt;&gt; Project.find(:all, :include =&gt; 'created_by')
=&gt; Message: &lt;&quot;PGError: ERROR:  invalid input syntax for integer: \&quot;#&lt;Person:0x19e0038&gt;\&quot;\n: SELECT * FROM \&quot;people\&quot;     WHERE (\&quot;people\&quot;.id IN (E'#&lt;Person:0x19e0038&gt;')) &quot;&gt;


The basic setup is as follows:

 create_table :projects, :force =&gt; true do |t|
    t.string  :name
    t.string  :type
    t.integer :created_by
  end

class Project &lt; ActiveRecord::Base
  belongs_to              :created_by, :class_name =&gt; 'Person', :foreign_key =&gt; 'created_by'
...&lt;snip&gt;
end



This largely effects people who have used created_by, updated_by in their models. See:  http://wiki.rubyonrails.org/rails/pages/Howto+Add+created_by+and+updated_by

However there is likely to be other edge cases


I have attached the failing test case and working fix as a patch.


Notes:

1) An argument against this patch could be that best practice should be to use a column named created_by_id instead. However I would probably favor a deprecation notice / warning over this to begin with. 


2) This currently only affects Postgres and not MySQL. Given both adapters use the same code fix it suggests there maybe a deeper issue present.</original-body>
  <latest-body>On Postgres when calling find on a model with an :include that contains an association with the same name as it's key an exception is raised:

&gt;&gt; Project.find(:all, :include =&gt; 'created_by')
=&gt; Message: &lt;&quot;PGError: ERROR:  invalid input syntax for integer: \&quot;#&lt;Person:0x19e0038&gt;\&quot;\n: SELECT * FROM \&quot;people\&quot;     WHERE (\&quot;people\&quot;.id IN (E'#&lt;Person:0x19e0038&gt;')) &quot;&gt;


The basic setup is as follows:

 create_table :projects, :force =&gt; true do |t|
    t.string  :name
    t.string  :type
    t.integer :created_by
  end

class Project &lt; ActiveRecord::Base
  belongs_to              :created_by, :class_name =&gt; 'Person', :foreign_key =&gt; 'created_by'
...&lt;snip&gt;
end



This largely effects people who have used created_by, updated_by in their models. See:  http://wiki.rubyonrails.org/rails/pages/Howto+Add+created_by+and+updated_by

However there is likely to be other edge cases


I have attached the failing test case and working fix as a patch.


Notes:

1) An argument against this patch could be that best practice should be to use a column named created_by_id instead. However I would probably favor a deprecation notice / warning over this to begin with. 


2) This currently only affects Postgres and not MySQL. Given both adapters use the same code fix it suggests there maybe a deeper issue present.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
On Postgres when calling find on a model with an :include that contains an association with the same name as it's key an exception is raised:
&lt;/p&gt;&lt;p&gt;
&gt;&gt; Project.find(:all, :include =&gt; 'created_by')
&lt;/p&gt;&lt;p&gt;
=&gt; Message: &amp;lt;&quot;PGError: ERROR:  invalid input syntax for integer: \&quot;#\&quot;\n: SELECT * FROM \&quot;people\&quot;     WHERE (\&quot;people\&quot;.id IN (E'#')) &quot;&gt;
&lt;/p&gt;&lt;p&gt;
The basic setup is as follows:
&lt;/p&gt;&lt;p&gt;
create_table :projects, :force =&gt; true do |t|
&lt;/p&gt;&lt;p&gt;
t.string  :name
&lt;/p&gt;&lt;p&gt;
t.string  :type
&lt;/p&gt;&lt;p&gt;
t.integer :created_by
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Project &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
belongs_to              :created_by, :class_name =&gt; 'Person', :foreign_key =&gt; 'created_by'
&lt;/p&gt;&lt;p&gt;
...
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
This largely effects people who have used created_by, updated_by in their models. See:  &lt;a href=&quot;http://wiki.rubyonrails.org/rails/pages/Howto+Add+created_by+and+updated_by&quot;&gt;http://wiki.rubyonrails.org/rail...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
However there is likely to be other edge cases
&lt;/p&gt;&lt;p&gt;
I have attached the failing test case and working fix as a patch.
&lt;/p&gt;&lt;p&gt;
Notes:
&lt;/p&gt;&lt;p&gt;
1) An argument against this patch could be that best practice should be to use a column named created_by_id instead. However I would probably favor a deprecation notice / warning over this to begin with.
&lt;/p&gt;&lt;p&gt;
2) This currently only affects Postgres and not MySQL. Given both adapters use the same code fix it suggests there maybe a deeper issue present.
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>On Postgres when calling find on a model with an :include that contains an association with the same name as it's key an exception is raised:

&gt;&gt; Project.find(:all, :include =&gt; 'created_by')
=&gt; Message: &lt;&quot;PGError: ERROR:  invalid input syntax for integer: \&quot;#&lt;Person:0x19e0038&gt;\&quot;\n: SELECT * FROM \&quot;people\&quot;     WHERE (\&quot;people\&quot;.id IN (E'#&lt;Person:0x19e0038&gt;')) &quot;&gt;


The basic setup is as follows:

 create_table :projects, :force =&gt; true do |t|
    t.string  :name
    t.string  :type
    t.integer :created_by
  end

class Project &lt; ActiveRecord::Base
  belongs_to              :created_by, :class_name =&gt; 'Person', :foreign_key =&gt; 'created_by'
...&lt;snip&gt;
end



This largely effects people who have used created_by, updated_by in their models. See:  http://wiki.rubyonrails.org/rails/pages/Howto+Add+created_by+and+updated_by

However there is likely to be other edge cases


I have attached the failing test case and working fix as a patch.


Notes:

1) An argument against this patch could be that best practice should be to use a column named created_by_id instead. However I would probably favor a deprecation notice / warning over this to begin with. 


2) This currently only affects Postgres and not MySQL. Given both adapters use the same code fix it suggests there maybe a deeper issue present.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
On Postgres when calling find on a model with an :include that contains an association with the same name as it's key an exception is raised:
&lt;/p&gt;&lt;p&gt;
&gt;&gt; Project.find(:all, :include =&gt; 'created_by')
&lt;/p&gt;&lt;p&gt;
=&gt; Message: &amp;lt;&quot;PGError: ERROR:  invalid input syntax for integer: \&quot;#&amp;lt;Person:0x19e0038&gt;\&quot;\n: SELECT * FROM \&quot;people\&quot;     WHERE (\&quot;people\&quot;.id IN (E'#&amp;lt;Person:0x19e0038&gt;')) &quot;&gt;
&lt;/p&gt;&lt;p&gt;
The basic setup is as follows:
&lt;/p&gt;&lt;p&gt;
create_table :projects, :force =&gt; true do |t|
&lt;/p&gt;&lt;p&gt;
t.string  :name
&lt;/p&gt;&lt;p&gt;
t.string  :type
&lt;/p&gt;&lt;p&gt;
t.integer :created_by
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
class Project &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
belongs_to              :created_by, :class_name =&gt; 'Person', :foreign_key =&gt; 'created_by'
&lt;/p&gt;&lt;p&gt;
...
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
This largely effects people who have used created_by, updated_by in their models. See:  &lt;a href=&quot;http://wiki.rubyonrails.org/rails/pages/Howto+Add+created_by+and+updated_by&quot;&gt;http://wiki.rubyonrails.org/rail...&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
However there is likely to be other edge cases
&lt;/p&gt;&lt;p&gt;
I have attached the failing test case and working fix as a patch.
&lt;/p&gt;&lt;p&gt;
Notes:
&lt;/p&gt;&lt;p&gt;
1) An argument against this patch could be that best practice should be to use a column named created_by_id instead. However I would probably favor a deprecation notice / warning over this to begin with.
&lt;/p&gt;&lt;p&gt;
2) This currently only affects Postgres and not MySQL. Given both adapters use the same code fix it suggests there maybe a deeper issue present.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-29T17:31:11+01:00</created-at>
      <creator-id type="integer">15653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">274</number>
      <permalink>finder-include-assoc-with-same-name-as-key-fail-on-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Finder :include assoc with same name as key fail on Postgres</title>
      <updated-at type="datetime">2008-05-29T17:31:11+01:00</updated-at>
      <user-id type="integer">15653</user-id>
      <version type="integer">1</version>
      <user-name>Martin Sadler</user-name>
      <creator-name>Martin Sadler</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/274</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It seems to me that you are already skating on thin ice by doing this.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
It seems to me that you are already skating on thin ice by doing this.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-29T22:59:10+01:00</created-at>
      <creator-id type="integer">15653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">274</number>
      <permalink>finder-include-assoc-with-same-name-as-key-fail-on-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Finder :include assoc with same name as key fail on Postgres</title>
      <updated-at type="datetime">2008-05-29T22:59:10+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Martin Sadler</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/274</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Frederick, thanks for the comment. Would you care to expand on that?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Frederick, thanks for the comment. Would you care to expand on that?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-30T08:26:58+01:00</created-at>
      <creator-id type="integer">15653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">274</number>
      <permalink>finder-include-assoc-with-same-name-as-key-fail-on-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Finder :include assoc with same name as key fail on Postgres</title>
      <updated-at type="datetime">2008-05-30T08:26:58+01:00</updated-at>
      <user-id type="integer">15653</user-id>
      <version type="integer">3</version>
      <user-name>Martin Sadler</user-name>
      <creator-name>Martin Sadler</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/274</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Just stuff that would normally work like update_attributes (eg if you were updating a record) and generally other stuff that assumes it can use the accessors to access an attribute (which code usually should because you could have overridden that accessor with good reason)</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Just stuff that would normally work like update_attributes (eg if you were updating a record) and generally other stuff that assumes it can use the accessors to access an attribute (which code usually should because you could have overridden that accessor with good reason)
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-30T10:00:18+01:00</created-at>
      <creator-id type="integer">15653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">274</number>
      <permalink>finder-include-assoc-with-same-name-as-key-fail-on-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Finder :include assoc with same name as key fail on Postgres</title>
      <updated-at type="datetime">2008-05-30T10:00:18+01:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">4</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Martin Sadler</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/274</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm getting 2 tests failures on MySQL after applying this.

I kinda agree with Fred that you're already walking on thin ice, if not skating.

I think it'd be much easier if you just call your association 'creator' or something similar, which is not a column name.

But if the fix is very simple ( as it is in the patch ), probably wouldn't hurt to apply.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
I'm getting 2 tests failures on MySQL after applying this.
&lt;/p&gt;&lt;p&gt;
I kinda agree with Fred that you're already walking on thin ice, if not skating.
&lt;/p&gt;&lt;p&gt;
I think it'd be much easier if you just call your association 'creator' or something similar, which is not a column name.
&lt;/p&gt;&lt;p&gt;
But if the fix is very simple ( as it is in the patch ), probably wouldn't hurt to apply.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-02T02:18:18+01:00</created-at>
      <creator-id type="integer">15653</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">274</number>
      <permalink>finder-include-assoc-with-same-name-as-key-fail-on-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations bug edge patch postgres</tag>
      <title>Finder :include assoc with same name as key fail on Postgres</title>
      <updated-at type="datetime">2008-07-02T02:18:18+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>Martin Sadler</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/274</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hey Pratik, I would close this ticket for now.

I ended up renaming created_by/updated_by to created_by_id/updated_by_id in the database and made a few tweaks to the plugin to handle the change.

Makes more sense and goes with the Rails way of thinking.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Hey Pratik, I would close this ticket for now.
&lt;/p&gt;&lt;p&gt;
I ended up renaming created_by/updated_by to created_by_id/updated_by_id in the database and made a few tweaks to the plugin to handle the change.
&lt;/p&gt;&lt;p&gt;
Makes more sense and goes with the Rails way of thinking.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-07-02T08:46:00+01:00</created-at>
      <creator-id type="integer">15653</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">274</number>
      <permalink>finder-include-assoc-with-same-name-as-key-fail-on-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations bug edge patch postgres</tag>
      <title>Finder :include assoc with same name as key fail on Postgres</title>
      <updated-at type="datetime">2008-07-02T08:46:00+01:00</updated-at>
      <user-id type="integer">15653</user-id>
      <version type="integer">6</version>
      <user-name>Martin Sadler</user-name>
      <creator-name>Martin Sadler</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/274</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-07-02T12:51:30+01:00</created-at>
      <creator-id type="integer">15653</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">274</number>
      <permalink>finder-include-assoc-with-same-name-as-key-fail-on-postgres</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord associations bug edge patch postgres</tag>
      <title>Finder :include assoc with same name as key fail on Postgres</title>
      <updated-at type="datetime">2008-07-02T12:51:30+01:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">7</version>
      <user-name>Pratik</user-name>
      <creator-name>Martin Sadler</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/274</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>d007ed4032793dbf27a44b587f2a5e17f878ce2a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-05-29T17:31:11+01:00</created-at>
      <filename>finder_include_with_same_named_assoc_as_the_key.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">25013</id>
      <size type="integer">4143</size>
      <uploader-id type="integer">15653</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/25013/finder_include_with_same_named_assoc_as_the_key.diff</url>
    </attachment>
  </attachments>
</ticket>
