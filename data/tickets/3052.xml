<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-19T09:28:11+00:00</created-at>
  <creator-id type="integer">66350</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3052</number>
  <permalink>assign_nested_attributes_for_collection_association-ought-to-assign-objects-for-collection-if-an-id-is-given-but-the-object-is-currently-not-associated</permalink>
  <priority type="integer">131750</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>accepts_nested_attributes_for belongs_to</tag>
  <title>assign_nested_attributes_for_collection_association ought to assign object's for collection if an id is given but the object is currently not associated</title>
  <updated-at type="datetime">2011-02-19T09:28:11+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">9</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>yanosz</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3052</url>
  <priority-name nil="true"></priority-name>
  <original-body>Hello,

in 2.3.3 in nested_attributes.rb starting at line 284:

@@@ ruby
def assign_nested_attributes_for_collection_association(association_name, attributes_collection, allow_destroy)
  #Some sanity-checks deleted 
  attributes_collection.each do |attributes|
    attributes = attributes.stringify_keys
    if attributes['id'].blank? #Case a
      unless reject_new_record?(association_name, attributes)
        send(association_name).build(attributes.except(*UNASSIGNABLE_KEYS))
      end
    elsif existing_record = send(association_name).detect { |record| record.id.to_s == attributes['id'].to_s } #Case b
      assign_to_or_mark_for_destruction(existing_record, attributes, allow_destroy)
    end
  end
end
@@@
What if attributes['id'] is not blank (Not Case #a), but send(association_name).detect { |record| record.id.to_s == attributes['id'].to_s } is nil? (Not Case b)

Imho this that that either:
 1 The record was deleted by a concurrent process (eg another user) - thus there is none or
 2 The record is meant to be associated with the current object or
 3 The record was removed from the association by a concurrent process (eg another user)

Since the current run is done after what ever happend in 1,2,3, I propose a third case
@@@ ruby
  elsif existing_record = record.class.find_by_id(attributes['id'])
    send(association_name) &lt;&lt; existing_record
  end
@@@</original-body>
  <latest-body>Hello,

in 2.3.3 in nested_attributes.rb starting at line 284:

@@@ ruby
def assign_nested_attributes_for_collection_association(association_name, attributes_collection, allow_destroy)
  #Some sanity-checks deleted 
  attributes_collection.each do |attributes|
    attributes = attributes.stringify_keys
    if attributes['id'].blank? #Case a
      unless reject_new_record?(association_name, attributes)
        send(association_name).build(attributes.except(*UNASSIGNABLE_KEYS))
      end
    elsif existing_record = send(association_name).detect { |record| record.id.to_s == attributes['id'].to_s } #Case b
      assign_to_or_mark_for_destruction(existing_record, attributes, allow_destroy)
    end
  end
end
@@@
What if attributes['id'] is not blank (Not Case #a), but send(association_name).detect { |record| record.id.to_s == attributes['id'].to_s } is nil? (Not Case b)

Imho this that that either:
 1 The record was deleted by a concurrent process (eg another user) - thus there is none or
 2 The record is meant to be associated with the current object or
 3 The record was removed from the association by a concurrent process (eg another user)

Since the current run is done after what ever happend in 1,2,3, I propose a third case
@@@ ruby
  elsif existing_record = record.class.find_by_id(attributes['id'])
    send(association_name) &lt;&lt; existing_record
  end
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;in 2.3.3 in nested_attributes.rb starting at line 284:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
def assign_nested_attributes_for_collection_association(association_name, attributes_collection, allow_destroy)
  #Some sanity-checks deleted 
  attributes_collection.each do |attributes|
    attributes = attributes.stringify_keys
    if attributes['id'].blank? #Case a
      unless reject_new_record?(association_name, attributes)
        send(association_name).build(attributes.except(*UNASSIGNABLE_KEYS))
      end
    elsif existing_record = send(association_name).detect { |record| record.id.to_s == attributes['id'].to_s } #Case b
      assign_to_or_mark_for_destruction(existing_record, attributes, allow_destroy)
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What if attributes['id'] is not blank (Not Case #a), but
send(association_name).detect { |record| record.id.to_s ==
attributes['id'].to_s } is nil? (Not Case b)&lt;/p&gt;
&lt;p&gt;Imho this that that either: 1 The record was deleted by a
concurrent process (eg another user) - thus there is none or 2 The
record is meant to be associated with the current object or 3 The
record was removed from the association by a concurrent process (eg
another user)&lt;/p&gt;
&lt;p&gt;Since the current run is done after what ever happend in 1,2,3,
I propose a third case&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  elsif existing_record = record.class.find_by_id(attributes['id'])
    send(association_name) &amp;lt;&amp;lt; existing_record
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello,

in 2.3.3 in nested_attributes.rb starting at line 284:

@@@ ruby
def assign_nested_attributes_for_collection_association(association_name, attributes_collection, allow_destroy)
  #Some sanity-checks deleted 
  attributes_collection.each do |attributes|
    attributes = attributes.stringify_keys
    if attributes['id'].blank? #Case a
      unless reject_new_record?(association_name, attributes)
        send(association_name).build(attributes.except(*UNASSIGNABLE_KEYS))
      end
    elsif existing_record = send(association_name).detect { |record| record.id.to_s == attributes['id'].to_s } #Case b
      assign_to_or_mark_for_destruction(existing_record, attributes, allow_destroy)
    end
  end
end
@@@
What if attributes['id'] is not blank (Not Case #a), but send(association_name).detect { |record| record.id.to_s == attributes['id'].to_s } is nil? (Not Case b)

Imho this that that either:
 1. The record was deleted by a concurrent process (eg another user) - thus there is none or
 2. The record is meant to be associated with the current object or
 3. The record was removed from the association by a concurrent process (eg another user)

Since the current run is done after what ever happend in 1.,2.,3., I propose a third case
@@@ ruby
  elsif existing_record = record.class.find_by_id(attributes['id'])
    send(association_name) &lt;&lt; existing_record
  end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello,&lt;/p&gt;
&lt;p&gt;in 2.3.3 in nested_attributes.rb starting at line 284:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;def assign_nested_attributes_for_collection_association(association_name, attributes_collection, allow_destroy)
  #Some sanity-checks deleted 
  attributes_collection.each do |attributes|
    attributes = attributes.stringify_keys
    if attributes['id'].blank? #Case a
      unless reject_new_record?(association_name, attributes)
        send(association_name).build(attributes.except(*UNASSIGNABLE_KEYS))
      end
    elsif existing_record = send(association_name).detect { |record| record.id.to_s == attributes['id'].to_s } #Case b
      assign_to_or_mark_for_destruction(existing_record, attributes, allow_destroy)
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;What if attributes['id'] is not blank (Not Case #a), but
send(association_name).detect { |record| record.id.to_s ==
attributes['id'].to_s } is nil? (Not Case b)&lt;/p&gt;
&lt;p&gt;Imho this that that either:&lt;br&gt;
1. The record was deleted by a concurrent process (eg another user)
- thus there is none or 2. The record is meant to be associated
with the current object or 3. The record was removed from the
association by a concurrent process (eg another user)&lt;/p&gt;
&lt;p&gt;Since the current run is done after what ever happend in
1.,2.,3., I propose a third case&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  elsif existing_record = record.class.find_by_id(attributes['id'])&lt;br&gt;
&lt;br&gt;


&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&lt;code&gt;send(association_name) &amp;amp;lt;&amp;amp;lt; existing_record&lt;/code&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
  end
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-08-14T22:24:04+01:00</created-at>
      <creator-id type="integer">66350</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3052</number>
      <permalink>assign_nested_attributes_for_collection_association-ought-to-assign-objects-for-collection-if-an-id-is-given-but-the-object-is-currently-not-associated</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>assign_nested_attributes_for_collection_association ought to assign object's for collection if an id is given but the object is currently not associated</title>
      <updated-at type="datetime">2009-08-14T22:26:43+01:00</updated-at>
      <user-id type="integer">66350</user-id>
      <version type="integer">1</version>
      <user-name>yanosz</user-name>
      <creator-name>yanosz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3052</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I ran into this issue with 2.3.8. Currently it throws a nested_attributes_record_not_found error on line 288 of nested_attributes.rb.

This might have already been fixed somewhere else.

The use case which is causing our issue is we have Model 1 which is being created a new. Model 2 already exists and needs to be associated with Model 1 on create. Since the model_2_attributes params contains an id it throws this error.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I ran into this issue with 2.3.8. Currently it throws a
nested_attributes_record_not_found error on line 288 of
nested_attributes.rb.&lt;/p&gt;
&lt;p&gt;This might have already been fixed somewhere else.&lt;/p&gt;
&lt;p&gt;The use case which is causing our issue is we have Model 1 which
is being created a new. Model 2 already exists and needs to be
associated with Model 1 on create. Since the model_2_attributes
params contains an id it throws this error.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-09T18:56:27+01:00</created-at>
      <creator-id type="integer">66350</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3052</number>
      <permalink>assign_nested_attributes_for_collection_association-ought-to-assign-objects-for-collection-if-an-id-is-given-but-the-object-is-currently-not-associated</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>accepts_nested_attributes_for belongs_to</tag>
      <title>assign_nested_attributes_for_collection_association ought to assign object's for collection if an id is given but the object is currently not associated</title>
      <updated-at type="datetime">2010-06-09T18:56:36+01:00</updated-at>
      <user-id type="integer">21548</user-id>
      <version type="integer">2</version>
      <user-name>George Montana Harkin</user-name>
      <creator-name>yanosz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3052</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi George
is below code explains your problem
@@@ ruby
class Ship &lt; ActiveRecord::Base
  has_one :pirate, :inverse_of =&gt; :ship
  accepts_nested_attributes_for :pirate, :allow_destroy =&gt; true
end

class Pirate &lt; ActiveRecord::Base
  belongs_to :ship, :inverse_of =&gt; :pirate
end

pirate = Pirate.create(:name =&gt; 'Johnny')

ship = Ship.new
ship.pirate_attributes = { :id =&gt; pirate.id }

ActiveRecord::RecordNotFound: Couldn't find Pirate with ID=2 for Ship with ID=

@@@


If so the correct way to assign attribute is

@@@ ruby
ship.pirate_attributes = { :pirate_id =&gt; pirate.id }
@@@

I wrote this block to create test case for your problem. please apologize me if i misunderstood you.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi George&lt;br&gt;
is below code explains your problem&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Ship &amp;lt; ActiveRecord::Base
  has_one :pirate, :inverse_of =&amp;gt; :ship
  accepts_nested_attributes_for :pirate, :allow_destroy =&amp;gt; true
end&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
class Pirate &amp;lt; ActiveRecord::Base
  belongs_to :ship, :inverse_of =&amp;gt; :pirate
end&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
pirate = Pirate.create(:name =&amp;gt; 'Johnny')&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
ship = Ship.new
ship.pirate_attributes = { :id =&amp;gt; pirate.id }&lt;br&gt;
&lt;br&gt;


&lt;br&gt;
ActiveRecord::RecordNotFound: Couldn't find Pirate with ID=2 for Ship with ID=&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If so the correct way to assign attribute is&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;ship.pirate_attributes = { :pirate_id =&amp;gt; pirate.id }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I wrote this block to create test case for your problem. please
apologize me if i misunderstood you.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-09T21:51:26+01:00</created-at>
      <creator-id type="integer">66350</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3052</number>
      <permalink>assign_nested_attributes_for_collection_association-ought-to-assign-objects-for-collection-if-an-id-is-given-but-the-object-is-currently-not-associated</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>accepts_nested_attributes_for belongs_to</tag>
      <title>assign_nested_attributes_for_collection_association ought to assign object's for collection if an id is given but the object is currently not associated</title>
      <updated-at type="datetime">2010-06-09T21:51:34+01:00</updated-at>
      <user-id type="integer">54456</user-id>
      <version type="integer">3</version>
      <user-name>Subba</user-name>
      <creator-name>yanosz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3052</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>thanks subbarao, that looks simliar to the issue we're running into.

That fix is kind of a pain as we're using fields_for which automatically inserts an :id field into the attributes rather than an :pirate_id attribute.

so our example is:


class Ship &lt; ActiveRecord::Base
  has_one :pirate
  accepts_nested_attributes_for :pirate, :allow_destroy =&gt; true
end


class Pirate &lt; ActiveRecord::Base
  belongs_to :ship
end


params:
 { :ship =&gt; { :name =&gt; 'Titanic', :pirate_attributes =&gt; { :id =&gt; '2', :name =&gt; 'Leeroy' }}}



ship = Ship.new(params[:ship])

ActiveRecord::RecordNotFound: Couldn't find Pirate with ID=2 for Ship with ID=


Should our fix be a patch to fields_for when dealing with a belongs_to relationship to use :pirate_id instead of :id?  Will this even work?

Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;thanks subbarao, that looks simliar to the issue we're running
into.&lt;/p&gt;
&lt;p&gt;That fix is kind of a pain as we're using fields_for which
automatically inserts an :id field into the attributes rather than
an :pirate_id attribute.&lt;/p&gt;
&lt;p&gt;so our example is:&lt;/p&gt;
&lt;p&gt;class Ship &amp;lt; ActiveRecord::Base&lt;br&gt;
has_one :pirate accepts_nested_attributes_for :pirate,
:allow_destroy =&amp;gt; true end&lt;/p&gt;
&lt;p&gt;class Pirate &amp;lt; ActiveRecord::Base&lt;br&gt;
belongs_to :ship end&lt;/p&gt;
&lt;p&gt;params:&lt;br&gt;
{ :ship =&amp;gt; { :name =&amp;gt; 'Titanic', :pirate_attributes =&amp;gt; {
:id =&amp;gt; '2', :name =&amp;gt; 'Leeroy' }}}&lt;/p&gt;
&lt;p&gt;ship = Ship.new(params[:ship])&lt;/p&gt;
&lt;p&gt;ActiveRecord::RecordNotFound: Couldn't find Pirate with ID=2 for
Ship with ID=&lt;/p&gt;
&lt;p&gt;Should our fix be a patch to fields_for when dealing with a
belongs_to relationship to use :pirate_id instead of :id? Will this
even work?&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-09T22:06:54+01:00</created-at>
      <creator-id type="integer">66350</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3052</number>
      <permalink>assign_nested_attributes_for_collection_association-ought-to-assign-objects-for-collection-if-an-id-is-given-but-the-object-is-currently-not-associated</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>accepts_nested_attributes_for belongs_to</tag>
      <title>assign_nested_attributes_for_collection_association ought to assign object's for collection if an id is given but the object is currently not associated</title>
      <updated-at type="datetime">2010-06-09T22:06:58+01:00</updated-at>
      <user-id type="integer">21548</user-id>
      <version type="integer">4</version>
      <user-name>George Montana Harkin</user-name>
      <creator-name>yanosz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3052</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>it will fix your problem. nested attributes hash if contains id it believes existing record.</body>
      <body-html>&lt;div&gt;&lt;p&gt;it will fix your problem. nested attributes hash if contains id
it believes existing record.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-10T11:54:37+01:00</created-at>
      <creator-id type="integer">66350</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3052</number>
      <permalink>assign_nested_attributes_for_collection_association-ought-to-assign-objects-for-collection-if-an-id-is-given-but-the-object-is-currently-not-associated</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>accepts_nested_attributes_for belongs_to</tag>
      <title>assign_nested_attributes_for_collection_association ought to assign object's for collection if an id is given but the object is currently not associated</title>
      <updated-at type="datetime">2010-06-10T11:54:43+01:00</updated-at>
      <user-id type="integer">54456</user-id>
      <version type="integer">5</version>
      <user-name>Subba</user-name>
      <creator-name>yanosz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3052</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>We shouldn't have to named the id something specific. :id is the name of the field and it should create or assign the related Pirate automatically from that. If it doesn't then there is no point to the rails field name conventions.

This is definitely a bug. It is now having issues with one to many. There must be other tickets with the same issue. Seems like it is 2.3.8 related.</body>
      <body-html>&lt;div&gt;&lt;p&gt;We shouldn't have to named the id something specific. :id is the
name of the field and it should create or assign the related Pirate
automatically from that. If it doesn't then there is no point to
the rails field name conventions.&lt;/p&gt;
&lt;p&gt;This is definitely a bug. It is now having issues with one to
many. There must be other tickets with the same issue. Seems like
it is 2.3.8 related.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-11T19:34:22+01:00</created-at>
      <creator-id type="integer">66350</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3052</number>
      <permalink>assign_nested_attributes_for_collection_association-ought-to-assign-objects-for-collection-if-an-id-is-given-but-the-object-is-currently-not-associated</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>accepts_nested_attributes_for belongs_to</tag>
      <title>assign_nested_attributes_for_collection_association ought to assign object's for collection if an id is given but the object is currently not associated</title>
      <updated-at type="datetime">2010-06-11T19:34:29+01:00</updated-at>
      <user-id type="integer">21548</user-id>
      <version type="integer">6</version>
      <user-name>George Montana Harkin</user-name>
      <creator-name>yanosz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3052</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yeah, this is a duplicate of #2415</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, this is a duplicate of &lt;a href=
&quot;/projects/8994/tickets/2415&quot; title=&quot;Ticket #2415&quot;&gt;#2415&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-11T19:37:27+01:00</created-at>
      <creator-id type="integer">66350</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3052</number>
      <permalink>assign_nested_attributes_for_collection_association-ought-to-assign-objects-for-collection-if-an-id-is-given-but-the-object-is-currently-not-associated</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>accepts_nested_attributes_for belongs_to</tag>
      <title>assign_nested_attributes_for_collection_association ought to assign object's for collection if an id is given but the object is currently not associated</title>
      <updated-at type="datetime">2010-06-11T19:37:39+01:00</updated-at>
      <user-id type="integer">21548</user-id>
      <version type="integer">7</version>
      <user-name>George Montana Harkin</user-name>
      <creator-name>yanosz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3052</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:37:32+00:00</created-at>
      <creator-id type="integer">66350</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3052</number>
      <permalink>assign_nested_attributes_for_collection_association-ought-to-assign-objects-for-collection-if-an-id-is-given-but-the-object-is-currently-not-associated</permalink>
      <priority type="integer">131750</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>accepts_nested_attributes_for belongs_to</tag>
      <title>assign_nested_attributes_for_collection_association ought to assign object's for collection if an id is given but the object is currently not associated</title>
      <updated-at type="datetime">2011-02-02T17:21:08+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">8</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>yanosz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3052</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:37:34+00:00</created-at>
      <creator-id type="integer">66350</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3052</number>
      <permalink>assign_nested_attributes_for_collection_association-ought-to-assign-objects-for-collection-if-an-id-is-given-but-the-object-is-currently-not-associated</permalink>
      <priority type="integer">131750</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>accepts_nested_attributes_for belongs_to</tag>
      <title>assign_nested_attributes_for_collection_association ought to assign object's for collection if an id is given but the object is currently not associated</title>
      <updated-at type="datetime">2011-02-02T17:20:55+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>yanosz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3052</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Good &lt;a href=http://www.sale-puma.com&gt;Puma shoes sale&lt;/a&gt; information for &lt;a href=http://www.sale-puma.com&gt;Puma shoes&lt;/a&gt; fans: Yesterday, German sportswear maker Cheap Running Shoes purchased effectively lot of money Brands. The transaction entails the Cobra brand, too as linked inventory, intellectual house and endorsement contracts. It also helps make &lt;a href=http://www.sale-puma.com&gt;puma speed cat&lt;/a&gt; Shoes . They provide you with the utmost game and support all through the feet.You can happen around several types of basketball sneakers such as high-top,low-top and mid-top.The &lt;a href=http://www.sale-puma.com&gt;Puma shoes online&lt;/a&gt; and boots give you best ankle support will support want you to obtain steadiness.
As we konw,Trail &lt;a href=http://www.sale-puma.com&gt;Puma Drift Cat&lt;/a&gt; Shoes black, Trail &lt;a href=http://www.sale-puma.com&gt;Puma future cat&lt;/a&gt; ShoesWhite Black? 50 many years backshore are actually released within a great accomplishment. Trail Running Shoes speed cat shoes?go in add-on to King Pele into planet tournament finals, bottom tennis discs matchrs within pasture inhabit an vital area in hold out in Wimbledon Dun; Its working firms have premier manufacturers and major marketplace positions in distilled spirits, residence and security, and golf products. The reply go all through the &lt;a href=http://www.sale-puma.com&gt;Cheap puma shoes&lt;/a&gt; on sale-here you are able to happen around several distcoun.&lt;a href=http://www.sale-puma.com&gt;puma shoes on sale &lt;/a&gt;.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good &lt;a href=&quot;http:&quot;&gt;Puma shoes sale information for &lt;a href=
&quot;http:&quot;&gt;Puma shoes fans: Yesterday, German sportswear maker Cheap
Running Shoes purchased effectively lot of money Brands. The
transaction entails the Cobra brand, too as linked inventory,
intellectual house and endorsement contracts. It also helps make
&lt;a href=&quot;http:&quot;&gt;puma speed cat Shoes . They provide you with the
utmost game and support all through the feet.You can happen around
several types of basketball sneakers such as high-top,low-top and
mid-top.The &lt;a href=&quot;http:&quot;&gt;Puma shoes online and boots give you
best ankle support will support want you to obtain steadiness.&lt;br&gt;
As we konw,Trail &lt;a href=&quot;http:&quot;&gt;Puma Drift Cat Shoes black, Trail
&lt;a href=&quot;http:&quot;&gt;Puma future cat ShoesWhite Black? 50 many years
backshore are actually released within a great accomplishment.
Trail Running Shoes speed cat shoes?go in add-on to King Pele into
planet tournament finals, bottom tennis discs matchrs within
pasture inhabit an vital area in hold out in Wimbledon Dun; Its
working firms have premier manufacturers and major marketplace
positions in distilled spirits, residence and security, and golf
products. The reply go all through the &lt;a href=&quot;http:&quot;&gt;Cheap puma
shoes on sale-here you are able to happen around several
distcoun.&lt;a href=&quot;http:&quot;&gt;puma shoes on sale .&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-19T00:18:32+00:00</created-at>
      <creator-id type="integer">66350</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3052</number>
      <permalink>assign_nested_attributes_for_collection_association-ought-to-assign-objects-for-collection-if-an-id-is-given-but-the-object-is-currently-not-associated</permalink>
      <priority type="integer">131750</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>accepts_nested_attributes_for belongs_to</tag>
      <title>assign_nested_attributes_for_collection_association ought to assign object's for collection if an id is given but the object is currently not associated</title>
      <updated-at type="datetime">2011-02-19T09:28:11+00:00</updated-at>
      <user-id type="integer">137759</user-id>
      <version type="integer">10</version>
      <user-name>mklo</user-name>
      <creator-name>yanosz</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3052</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
