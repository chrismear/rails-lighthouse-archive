<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-10-06T21:34:52+01:00</created-at>
  <creator-id type="integer">11330</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5763</number>
  <permalink>refactoring-joindependency-and-friends</permalink>
  <priority type="integer">2</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activerecord associations patch verified</tag>
  <title>[PATCH] Refactoring JoinDependency and friends</title>
  <updated-at type="datetime">2010-10-13T16:33:40+01:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">17</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>Jon Leighton</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
  <priority-name>Medium</priority-name>
  <original-body>Bo Jeanes and I are working to finally try and create a solid patch adding nested has many through association support to Active Record. See #1152 for that.

Part of that patch will be to enable stuff like `Author.joins(:similar_authors)` where `:similar_authors` is a nested has many through association. I started looking into that and realised that I would need to make some changes to how JoinAssociation works, in order to allow it to generate an arbitrary number of actual joins.

This lead to a bit of a refactoring effort at the same time, as I did not want it to be a complete kludge that would be even harder to understand. The attached patch is the refactoring - it does nothing related to nested has many through, other than that it will enable the nested has many through stuff to be more easily added in.

I have added 3 tests which cover existing functionality which did not have tests.

All tests pass. If you want you can see our nested has many through branch here: http://github.com/bjeanes/rails, and the refactoring in particular here: http://github.com/bjeanes/rails/commit/f2b41914d6be935182d37e0c0d491352ac3de043.</original-body>
  <latest-body>Bo Jeanes and I are working to finally try and create a solid patch adding nested has many through association support to Active Record. See #1152 for that.

Part of that patch will be to enable stuff like `Author.joins(:similar_authors)` where `:similar_authors` is a nested has many through association. I started looking into that and realised that I would need to make some changes to how JoinAssociation works, in order to allow it to generate an arbitrary number of actual joins.

This lead to a bit of a refactoring effort at the same time, as I did not want it to be a complete kludge that would be even harder to understand. The attached patch is the refactoring - it does nothing related to nested has many through, other than that it will enable the nested has many through stuff to be more easily added in.

I have added 3 tests which cover existing functionality which did not have tests.

All tests pass. If you want you can see our nested has many through branch here: http://github.com/bjeanes/rails, and the refactoring in particular here: http://github.com/bjeanes/rails/commit/f2b41914d6be935182d37e0c0d491352ac3de043.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Bo Jeanes and I are working to finally try and create a solid
patch adding nested has many through association support to Active
Record. See &lt;a href=&quot;/projects/8994/tickets/1152&quot; title=
&quot;Ticket #1152&quot;&gt;#1152&lt;/a&gt; for that.&lt;/p&gt;
&lt;p&gt;Part of that patch will be to enable stuff like
&lt;code&gt;Author.joins(:similar_authors)&lt;/code&gt; where
&lt;code&gt;:similar_authors&lt;/code&gt; is a nested has many through
association. I started looking into that and realised that I would
need to make some changes to how JoinAssociation works, in order to
allow it to generate an arbitrary number of actual joins.&lt;/p&gt;
&lt;p&gt;This lead to a bit of a refactoring effort at the same time, as
I did not want it to be a complete kludge that would be even harder
to understand. The attached patch is the refactoring - it does
nothing related to nested has many through, other than that it will
enable the nested has many through stuff to be more easily added
in.&lt;/p&gt;
&lt;p&gt;I have added 3 tests which cover existing functionality which
did not have tests.&lt;/p&gt;
&lt;p&gt;All tests pass. If you want you can see our nested has many
through branch here: &lt;a href=
&quot;http://github.com/bjeanes/rails&quot;&gt;http://github.com/bjeanes/rails&lt;/a&gt;,
and the refactoring in particular here: &lt;a href=
&quot;http://github.com/bjeanes/rails/commit/f2b41914d6be935182d37e0c0d491352ac3de043&quot;&gt;
http://github.com/bjeanes/rails/commit/f2b41914d6be935182d37e0c0d49...&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Bo Jeanes and I are working to finally try and create a solid patch adding nested has many through association support to Active Record. See #1152 for that.

Part of that patch will be to enable stuff like `Author.joins(:similar_authors)` where `:similar_authors` is a nested has many through association. I started looking into that and realised that I would need to make some changes to how JoinAssociation works, in order to allow it to generate an arbitrary number of actual joins.

This lead to a bit of a refactoring effort at the same time, as I did not want it to be a complete kludge that would be even harder to understand. The attached patch is the refactoring - it does nothing related to nested has many through, other than that it will enable the nested has many through stuff to be more easily added in.

I have added 3 tests which cover existing functionality which did not have tests.

All tests pass. If you want you can see our nested has many through branch here: http://github.com/bjeanes/rails, and the refactoring in particular here: http://github.com/bjeanes/rails/commit/f2b41914d6be935182d37e0c0d491352ac3de043.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Bo Jeanes and I are working to finally try and create a solid
patch adding nested has many through association support to Active
Record. See &lt;a href=&quot;/projects/8994/tickets/1152&quot; title=
&quot;Ticket #1152&quot;&gt;#1152&lt;/a&gt; for that.&lt;/p&gt;
&lt;p&gt;Part of that patch will be to enable stuff like
&lt;code&gt;Author.joins(:similar_authors)&lt;/code&gt; where
&lt;code&gt;:similar_authors&lt;/code&gt; is a nested has many through
association. I started looking into that and realised that I would
need to make some changes to how JoinAssociation works, in order to
allow it to generate an arbitrary number of actual joins.&lt;/p&gt;
&lt;p&gt;This lead to a bit of a refactoring effort at the same time, as
I did not want it to be a complete kludge that would be even harder
to understand. The attached patch is the refactoring - it does
nothing related to nested has many through, other than that it will
enable the nested has many through stuff to be more easily added
in.&lt;/p&gt;
&lt;p&gt;I have added 3 tests which cover existing functionality which
did not have tests.&lt;/p&gt;
&lt;p&gt;All tests pass. If you want you can see our nested has many
through branch here: &lt;a href=
&quot;http://github.com/bjeanes/rails&quot;&gt;http://github.com/bjeanes/rails&lt;/a&gt;,
and the refactoring in particular here: &lt;a href=
&quot;http://github.com/bjeanes/rails/commit/f2b41914d6be935182d37e0c0d491352ac3de043&quot;&gt;
http://github.com/bjeanes/rails/commit/f2b41914d6be935182d37e0c0d49...&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-06T21:34:52+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations patch</tag>
      <title>Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-06T21:34:53+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">1</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Jon, perhaps prefix the title of this ticket with [PATCH] so they know there's a patch to apply/test instead of a problem to solve.

FWIW, +1 and this change introduces no extra detectable bugs and will go along way with regards to Jon and I finishing integrated nested has_many :through support in #1152</body>
      <body-html>&lt;div&gt;&lt;p&gt;Jon, perhaps prefix the title of this ticket with &lt;a href=
&quot;/projects/8994/changesets/PATCH&quot; title=
&quot;Changeset [PATCH]&quot;&gt;[PATCH]&lt;/a&gt; so they know there's a patch to
apply/test instead of a problem to solve.&lt;/p&gt;
&lt;p&gt;FWIW, +1 and this change introduces no extra detectable bugs and
will go along way with regards to Jon and I finishing integrated
nested has_many :through support in &lt;a href=
&quot;/projects/8994/tickets/1152&quot; title=&quot;Ticket #1152&quot;&gt;#1152&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-07T23:21:09+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations patch</tag>
      <title>Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-07T23:21:11+01:00</updated-at>
      <user-id type="integer">14618</user-id>
      <version type="integer">2</version>
      <user-name>Bodaniel Jeanes</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-07T23:22:30+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- 
:title: Refactoring JoinDependency and friends
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations patch</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-07T23:22:36+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">3</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I thought that the 'patch' tag was the official way to do it, but if [PATCH] in the title helps then why not :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I thought that the 'patch' tag was the official way to do it,
but if &lt;a href=&quot;/projects/8994/changesets/PATCH&quot; title=
&quot;Changeset [PATCH]&quot;&gt;[PATCH]&lt;/a&gt; in the title helps then why not
:)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-07T23:23:17+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations patch</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-07T23:23:20+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">4</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1 from me too. This patch applies cleanly and the tests run.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 from me too. This patch applies cleanly and the tests
run.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T03:01:31+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations patch</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-08T03:01:32+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">5</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T03:04:30+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 3
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations patch</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-08T03:04:31+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">6</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T14:57:25+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations patch</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-08T14:57:28+01:00</updated-at>
      <user-id type="integer">2171</user-id>
      <version type="integer">7</version>
      <user-name>Alex MacCaw</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T15:02:17+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord associations patch
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations patch verified</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-08T15:02:18+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">8</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Assigning to Santiago as that's what it says to do here: https://rails.lighthouseapp.com/projects/8994/ticket-assignment</body>
      <body-html>&lt;div&gt;&lt;p&gt;Assigning to Santiago as that's what it says to do here:
&lt;a href=&quot;https://rails.lighthouseapp.com/projects/8994/ticket-assignment&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/ticket-assignment&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T15:05:42+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations patch verified</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-08T15:05:44+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">9</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-08T18:29:00+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 40272
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations patch verified</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-08T18:29:03+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">10</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi @Jon,

It's very difficult for me to review this patch.  Could you break it up in to multiple patches please?  It looks like you're renaming variables and changing formatting.  It's difficult for me to tell whether you're just renaming and reformatting, or actually changing stuff.

Would you mind breaking this up to one patch that does formatting and renaming changes, and one patch that makes any refactors (like new methods, etc)?

Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi @Jon,&lt;/p&gt;
&lt;p&gt;It's very difficult for me to review this patch. Could you break
it up in to multiple patches please? It looks like you're renaming
variables and changing formatting. It's difficult for me to tell
whether you're just renaming and reformatting, or actually changing
stuff.&lt;/p&gt;
&lt;p&gt;Would you mind breaking this up to one patch that does
formatting and renaming changes, and one patch that makes any
refactors (like new methods, etc)?&lt;/p&gt;
&lt;p&gt;Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-11T18:27:30+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord associations patch verified</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-11T18:27:33+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">11</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Aaron,

Thanks for taking time to look at this, and sorry that my patch confused you.

I'm happy to split it up if that helps, but I thought perhaps it might be more useful if I provided a better explanation of what the patch actually changes. (Admittedly I should have done this originally.)

* Currently `JoinAssociation` has the methods `#relation`, `#association_join` and `#join_class`. These are used together in `ActiveRecord::QueryMethods.build_joins` to build up the joins which are necessary to join an association onto a query.
* The current situation is that joining an association will either result in one or two actual SQL `JOIN` statements being generated (depending on whether the association in question involves a join table or not). The way that `JoinAssociation` deals with this is to have `#relation` either output a single `Arel::Table` for a single join, or to output an array containing two `Arel::Table`s, for two joins. In the latter case, `#association_join` also outputs an array which has the different conditions for different joins at different positions in the array.
* The work I am doing on having arbitrarily nested associations (x goes through y which in turn goes through z) means that the current `JoinAssociation` is inflexible for this, because it is geared towards only having either one or two joins. Additionally the code already uses special cases in different situations to achieve its ends (for example, testing whether the return value of `association.relation` is an array or not, in `build_joins`).
* I wanted to refactor how `JoinAssociation` and `build_joins` worked to make them more generic.

This is the basic rationale. In terms of what I actually did:

* As I said, currently `JoinAssociation` has various methods which output various things. `build_joins` uses their output to produce the actual join, e.g. `relation.join(some_table).on(*some_conditions)`.
* Instead of this, I let `JoinAssociation` have a `#join_to(relation)` method, with the idea that `JoinAssociation` would now be responsible for adding as many joins to the relation as are necessary. `#join_to` would then return a relation with the joins added. This prevents the situation of having to pass around arrays where the different positions in the arrays take on a special meaning, etc.
* As you can see in the patch, this makes the code in `build_joins` a lot nicer - instead of all that stuff with building up the `to_join` array, we just iterate each of the `JoinAssociation`s and do `relation = association.join_to(relation)`

I also made some slightly more cosmetic changes, which seemed to 'make sense' as part of it:

* Currently `JoinAssociation` is a subclass of `JoinBase`. Instead I created an abstract `JoinPart` class which `JoinAssociation` and `JoinBase` both individually inherit from. This seems cleaner to me, as I don't think a `JoinAssociation` is a type of `JoinBase`, though they are related. For example `JoinBase` has the `table_joins` attribute which means nothing to `JoinAssociation`.
* Due to the addition of this `JoinPart` superclass, I thought it was more consistent to name the collection in `JoinDependency` to `join_parts` instead of just `joins`
* I also renamed `JoinAssociation#join_class` to `join_type`. This is purely me being opinionated about what it should be called. I'm not attached to that name and it doesn't fundamentally matter either way.
* I didn't make any sweeping formatting changes or anything like that.
* I didn't change any of the logic which actually builds the joins and their conditions.

I hope this explanation helps. I'm willing to break up the patch if you'd still like me too, but obviously happy to avoid that work if possible :) Let me know how you think it's best to proceed.

Cheers,
Jon</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Aaron,&lt;/p&gt;
&lt;p&gt;Thanks for taking time to look at this, and sorry that my patch
confused you.&lt;/p&gt;
&lt;p&gt;I'm happy to split it up if that helps, but I thought perhaps it
might be more useful if I provided a better explanation of what the
patch actually changes. (Admittedly I should have done this
originally.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Currently &lt;code&gt;JoinAssociation&lt;/code&gt; has the methods
&lt;code&gt;#relation&lt;/code&gt;, &lt;code&gt;#association_join&lt;/code&gt; and
&lt;code&gt;#join_class&lt;/code&gt;. These are used together in
&lt;code&gt;ActiveRecord::QueryMethods.build_joins&lt;/code&gt; to build up the
joins which are necessary to join an association onto a query.&lt;/li&gt;
&lt;li&gt;The current situation is that joining an association will
either result in one or two actual SQL &lt;code&gt;JOIN&lt;/code&gt; statements
being generated (depending on whether the association in question
involves a join table or not). The way that
&lt;code&gt;JoinAssociation&lt;/code&gt; deals with this is to have
&lt;code&gt;#relation&lt;/code&gt; either output a single
&lt;code&gt;Arel::Table&lt;/code&gt; for a single join, or to output an array
containing two &lt;code&gt;Arel::Table&lt;/code&gt;s, for two joins. In the
latter case, &lt;code&gt;#association_join&lt;/code&gt; also outputs an array
which has the different conditions for different joins at different
positions in the array.&lt;/li&gt;
&lt;li&gt;The work I am doing on having arbitrarily nested associations
(x goes through y which in turn goes through z) means that the
current &lt;code&gt;JoinAssociation&lt;/code&gt; is inflexible for this,
because it is geared towards only having either one or two joins.
Additionally the code already uses special cases in different
situations to achieve its ends (for example, testing whether the
return value of &lt;code&gt;association.relation&lt;/code&gt; is an array or
not, in &lt;code&gt;build_joins&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;I wanted to refactor how &lt;code&gt;JoinAssociation&lt;/code&gt; and
&lt;code&gt;build_joins&lt;/code&gt; worked to make them more generic.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is the basic rationale. In terms of what I actually
did:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As I said, currently &lt;code&gt;JoinAssociation&lt;/code&gt; has various
methods which output various things. &lt;code&gt;build_joins&lt;/code&gt; uses
their output to produce the actual join, e.g.
&lt;code&gt;relation.join(some_table).on(*some_conditions)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Instead of this, I let &lt;code&gt;JoinAssociation&lt;/code&gt; have a
&lt;code&gt;#join_to(relation)&lt;/code&gt; method, with the idea that
&lt;code&gt;JoinAssociation&lt;/code&gt; would now be responsible for adding as
many joins to the relation as are necessary. &lt;code&gt;#join_to&lt;/code&gt;
would then return a relation with the joins added. This prevents
the situation of having to pass around arrays where the different
positions in the arrays take on a special meaning, etc.&lt;/li&gt;
&lt;li&gt;As you can see in the patch, this makes the code in
&lt;code&gt;build_joins&lt;/code&gt; a lot nicer - instead of all that stuff
with building up the &lt;code&gt;to_join&lt;/code&gt; array, we just iterate
each of the &lt;code&gt;JoinAssociation&lt;/code&gt;s and do &lt;code&gt;relation =
association.join_to(relation)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also made some slightly more cosmetic changes, which seemed to
'make sense' as part of it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Currently &lt;code&gt;JoinAssociation&lt;/code&gt; is a subclass of
&lt;code&gt;JoinBase&lt;/code&gt;. Instead I created an abstract
&lt;code&gt;JoinPart&lt;/code&gt; class which &lt;code&gt;JoinAssociation&lt;/code&gt; and
&lt;code&gt;JoinBase&lt;/code&gt; both individually inherit from. This seems
cleaner to me, as I don't think a &lt;code&gt;JoinAssociation&lt;/code&gt; is a
type of &lt;code&gt;JoinBase&lt;/code&gt;, though they are related. For example
&lt;code&gt;JoinBase&lt;/code&gt; has the &lt;code&gt;table_joins&lt;/code&gt; attribute
which means nothing to &lt;code&gt;JoinAssociation&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Due to the addition of this &lt;code&gt;JoinPart&lt;/code&gt; superclass, I
thought it was more consistent to name the collection in
&lt;code&gt;JoinDependency&lt;/code&gt; to &lt;code&gt;join_parts&lt;/code&gt; instead of
just &lt;code&gt;joins&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;I also renamed &lt;code&gt;JoinAssociation#join_class&lt;/code&gt; to
&lt;code&gt;join_type&lt;/code&gt;. This is purely me being opinionated about
what it should be called. I'm not attached to that name and it
doesn't fundamentally matter either way.&lt;/li&gt;
&lt;li&gt;I didn't make any sweeping formatting changes or anything like
that.&lt;/li&gt;
&lt;li&gt;I didn't change any of the logic which actually builds the
joins and their conditions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope this explanation helps. I'm willing to break up the patch
if you'd still like me too, but obviously happy to avoid that work
if possible :) Let me know how you think it's best to proceed.&lt;/p&gt;
&lt;p&gt;Cheers,&lt;br&gt;
Jon&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-12T11:05:54+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord associations patch verified</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-12T11:05:57+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">12</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Also - if you'd like to have a chat on Skype or anything like that then let me know.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also - if you'd like to have a chat on Skype or anything like
that then let me know.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-12T11:06:27+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord associations patch verified</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-12T11:06:30+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">13</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Damn!  Thanks for the detailed explanation, I really appreciate it.  The problem though, is that the first ~200 lines of the patch are mostly formatting and changing variable names.  I think there might be one or two lines out of the first 200 that are substantial.

I'm in favor of fixing formatting and changing variable names, but it doesn't help me understand the *core* of the patch.  I like your description of the changes and I am in favor of adding this functionality, but please split this up.

I would really like one patch that does variable renaming and formatting changes, and one that adds / changes functionality.  Not just to help me understand what you're changing, but to help people in the future.  If there are bugs in your patch, I don't want people to have to wade through a 40k diff to find them.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Damn! Thanks for the detailed explanation, I really appreciate
it. The problem though, is that the first ~200 lines of the patch
are mostly formatting and changing variable names. I think there
might be one or two lines out of the first 200 that are
substantial.&lt;/p&gt;
&lt;p&gt;I'm in favor of fixing formatting and changing variable names,
but it doesn't help me understand the &lt;em&gt;core&lt;/em&gt; of the patch. I
like your description of the changes and I am in favor of adding
this functionality, but please split this up.&lt;/p&gt;
&lt;p&gt;I would really like one patch that does variable renaming and
formatting changes, and one that adds / changes functionality. Not
just to help me understand what you're changing, but to help people
in the future. If there are bugs in your patch, I don't want people
to have to wade through a 40k diff to find them.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-12T18:59:18+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord associations patch verified</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-12T18:59:20+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">14</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok, no worries. I will split it up, hopefully within the next 24 hours.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok, no worries. I will split it up, hopefully within the next 24
hours.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-12T19:48:39+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord associations patch verified</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-12T19:48:41+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">15</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Okay, here is the split up patch. There are actually four commits now:

1. Add 3 new tests for existing functionality, and fix up other tests affected by changing the fixtures
2. Do the &quot;core changes&quot; talked about here
3. Renaming/formating changes
4. I took the liberty of deleting two methods from JoinAssociation which are not used anywhere.

I have verified that the entire test suite still succeeds after these changes.

Hope this helps.

Cheers</body>
      <body-html>&lt;div&gt;&lt;p&gt;Okay, here is the split up patch. There are actually four
commits now:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add 3 new tests for existing functionality, and fix up other
tests affected by changing the fixtures&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Do the &quot;core changes&quot; talked about here&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Renaming/formating changes&lt;br&gt;&lt;/li&gt;
&lt;li&gt;I took the liberty of deleting two methods from JoinAssociation
which are not used anywhere.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I have verified that the entire test suite still succeeds after
these changes.&lt;/p&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
&lt;p&gt;Cheers&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-10-13T12:32:11+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>needs-more-info</state>
      <tag>activerecord associations patch verified</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-13T12:32:13+01:00</updated-at>
      <user-id type="integer">11330</user-id>
      <version type="integer">16</version>
      <user-name>Jon Leighton</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>@Jon awesome.  Much easier to review.  I've applied all your patches to master and pushed.  Thank you very much!</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Jon awesome. Much easier to review. I've applied all your
patches to master and pushed. Thank you very much!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-13T16:33:38+01:00</created-at>
      <creator-id type="integer">11330</creator-id>
      <diffable-attributes type="yaml">--- 
:state: needs-more-info
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5763</number>
      <permalink>refactoring-joindependency-and-friends</permalink>
      <priority type="integer">2</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord associations patch verified</tag>
      <title>[PATCH] Refactoring JoinDependency and friends</title>
      <updated-at type="datetime">2010-10-13T16:33:40+01:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">17</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Jon Leighton</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5763</url>
      <priority-name>Medium</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>aa2c9bee1e362e0a89979a609298e2290d0b2ab9</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-10-06T21:34:52+01:00</created-at>
      <filename>join_dependency_refactoring.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">707963</id>
      <size type="integer">41280</size>
      <uploader-id type="integer">11330</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/707963/join_dependency_refactoring.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>f842b2ad53ab364c73e4829e7ff38185b73b1ff4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-10-13T12:32:11+01:00</created-at>
      <filename>join_dependency_refactoring.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">717310</id>
      <size type="integer">47359</size>
      <uploader-id type="integer">11330</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/717310/join_dependency_refactoring.diff</url>
    </attachment>
  </attachments>
</ticket>
