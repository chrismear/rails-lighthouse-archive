<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-05-14T15:46:21+01:00</created-at>
  <creator-id type="integer">19819</creator-id>
  <milestone-due-on type="datetime">2009-03-18T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">9901</milestone-id>
  <number type="integer">194</number>
  <permalink>serialized-timestamps-returns-strings-on-load</permalink>
  <priority type="integer">12511</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord bug</tag>
  <title>Serialized timestamps returns strings on load</title>
  <updated-at type="datetime">2008-08-13T05:04:25+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">5</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Jacob Atzen</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/194</url>
  <milestone-title>2.1.1</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>When serializing a Time object into a textfield by the means of ActiveRecord::Base.serialize what comes back is a string.

Example:

c = CacheItem.create(:key =&gt; &quot;time&quot;, :value =&gt; Time.now)
c.value   =&gt; &quot;2008-05-14 16:45:03&quot;</original-body>
  <latest-body>When serializing a Time object into a textfield by the means of ActiveRecord::Base.serialize what comes back is a string.

Example:

c = CacheItem.create(:key =&gt; &quot;time&quot;, :value =&gt; Time.now)
c.value   =&gt; &quot;2008-05-14 16:45:03&quot;</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
When serializing a Time object into a textfield by the means of ActiveRecord::Base.serialize what comes back is a string.
&lt;/p&gt;&lt;p&gt;
Example:
&lt;/p&gt;&lt;p&gt;
c = CacheItem.create(:key =&gt; &quot;time&quot;, :value =&gt; Time.now)
&lt;/p&gt;&lt;p&gt;
c.value   =&gt; &quot;2008-05-14 16:45:03&quot;
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When serializing a Time object into a textfield by the means of ActiveRecord::Base.serialize what comes back is a string.

Example:

c = CacheItem.create(:key =&gt; &quot;time&quot;, :value =&gt; Time.now)
c.value   =&gt; &quot;2008-05-14 16:45:03&quot;</body>
      <body-html>&lt;div&gt;&lt;p&gt;
When serializing a Time object into a textfield by the means of ActiveRecord::Base.serialize what comes back is a string.
&lt;/p&gt;&lt;p&gt;
Example:
&lt;/p&gt;&lt;p&gt;
c = CacheItem.create(:key =&gt; &quot;time&quot;, :value =&gt; Time.now)
&lt;/p&gt;&lt;p&gt;
c.value   =&gt; &quot;2008-05-14 16:45:03&quot;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-05-14T15:51:11+01:00</created-at>
      <creator-id type="integer">19819</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">194</number>
      <permalink>serialized-timestamps-returns-strings-on-load</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Serialized timestamps returns strings on load</title>
      <updated-at type="datetime">2008-05-14T15:51:11+01:00</updated-at>
      <user-id type="integer">19819</user-id>
      <version type="integer">1</version>
      <user-name>Jacob Atzen</user-name>
      <creator-name>Jacob Atzen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/194</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>What does your model look like (specifically, the serialize call)?  

What does your model table schema look like (specifically the value field)?

Why don't use use a datetime column type?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
What does your model look like (specifically, the serialize call)?
&lt;/p&gt;&lt;p&gt;
What does your model table schema look like (specifically the value field)?
&lt;/p&gt;&lt;p&gt;
Why don't use use a datetime column type?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-14T15:52:29+01:00</created-at>
      <creator-id type="integer">19819</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">194</number>
      <permalink>serialized-timestamps-returns-strings-on-load</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>Serialized timestamps returns strings on load</title>
      <updated-at type="datetime">2008-05-14T15:52:29+01:00</updated-at>
      <user-id type="integer">1</user-id>
      <version type="integer">2</version>
      <user-name>Rick</user-name>
      <creator-name>Jacob Atzen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/194</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>My schema definition is:

    create_table :cached_method_items do |t|
      t.string :key
      t.text :value
      t.datetime :expires_at
      t.timestamps
    end

The model is hidden away in a module (I'm trying to create a plugin):

module CachedMethod #:nodoc:

  class Item &lt; ActiveRecord::Base
    set_table_name &quot;cached_method_items&quot;
    serialize :value
  end

end

The reason I'm not using a datetime is that this is a cache which should be
able to cache any kind of object. Serializing hashes works fine, serializing
a hash with a timestamp works fine, just not a timestamp object on it's own.
If I look in the database I can see the timestamp is serialized as
&quot;2008-05-14 16:59:45&quot; - whereas if I call YAML::dump(Time.now) I get &quot;---
2008-05-14 17:02:36.626834 +02:00\n&quot;. I'm using sqlite3 if that's of any
relevance.</body>
      <body-html>&lt;div&gt;&lt;p&gt;
My schema definition is:
&lt;/p&gt;&lt;p&gt;
create_table :cached_method_items do |t|
&lt;/p&gt;&lt;p&gt;
t.string :key
&lt;/p&gt;&lt;p&gt;
t.text :value
&lt;/p&gt;&lt;p&gt;
t.datetime :expires_at
&lt;/p&gt;&lt;p&gt;
t.timestamps
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
The model is hidden away in a module (I'm trying to create a plugin):
&lt;/p&gt;&lt;p&gt;
module CachedMethod #:nodoc:
&lt;/p&gt;&lt;p&gt;
class Item &amp;lt; ActiveRecord::Base
&lt;/p&gt;&lt;p&gt;
set_table_name &quot;cached_method_items&quot;
&lt;/p&gt;&lt;p&gt;
serialize :value
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
end
&lt;/p&gt;&lt;p&gt;
The reason I'm not using a datetime is that this is a cache which should be
&lt;/p&gt;&lt;p&gt;
able to cache any kind of object. Serializing hashes works fine, serializing
&lt;/p&gt;&lt;p&gt;
a hash with a timestamp works fine, just not a timestamp object on it's own.
&lt;/p&gt;&lt;p&gt;
If I look in the database I can see the timestamp is serialized as
&lt;/p&gt;&lt;p&gt;
&quot;2008-05-14 16:59:45&quot; - whereas if I call YAML::dump(Time.now) I get &quot;---
&lt;/p&gt;&lt;p&gt;
2008-05-14 17:02:36.626834 +02:00\n&quot;. I'm using sqlite3 if that's of any
&lt;/p&gt;&lt;p&gt;
relevance.
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-05-14T16:10:08+01:00</created-at>
      <creator-id type="integer">19819</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">194</number>
      <permalink>serialized-timestamps-returns-strings-on-load</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag nil="true"></tag>
      <title>Serialized timestamps returns strings on load</title>
      <updated-at type="datetime">2008-05-14T16:10:08+01:00</updated-at>
      <user-id type="integer">19819</user-id>
      <version type="integer">3</version>
      <user-name>Jacob Atzen</user-name>
      <creator-name>Jacob Atzen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/194</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can confirm this problem, it's clear from http://github.com/rails/rails/tree/master/activerecord/lib/active_record/connection_adapters/abstract/quoting.rb#L28 that every time/date value gets converted to_s instead of to_yaml (which is required for serialized attributes), and since the string the time/date value is converted to is not unserializable it is treated as just a string.

I'm not sure what would be a good fix here because clearly the quoting logic is very much divorced from any knowledge about serialization so it can't really decide on how to properly serialize time/date values for serialized columns.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can confirm this problem, it's clear from &lt;a href=&quot;http://github.com/rails/rails/tree/master/activerecord/lib/active_record/connection_adapters/abstract/quoting.rb#L28&quot;&gt;http://github.com/rails/rails/tr...&lt;/a&gt; that every time/date value gets converted to_s instead of to_yaml (which is required for serialized attributes), and since the string the time/date value is converted to is not unserializable it is treated as just a string.&lt;/p&gt;

&lt;p&gt;I'm not sure what would be a good fix here because clearly the quoting logic is very much divorced from any knowledge about serialization so it can't really decide on how to properly serialize time/date values for serialized columns.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-13T02:01:00+01:00</created-at>
      <creator-id type="integer">19819</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">194</number>
      <permalink>serialized-timestamps-returns-strings-on-load</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord bug</tag>
      <title>Serialized timestamps returns strings on load</title>
      <updated-at type="datetime">2008-08-13T02:01:00+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">4</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>Jacob Atzen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/194</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>dc5997f</body>
      <body-html>&lt;div&gt;&lt;p&gt;dc5997f&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-08-13T05:04:25+01:00</created-at>
      <creator-id type="integer">19819</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">9901</milestone-id>
      <number type="integer">194</number>
      <permalink>serialized-timestamps-returns-strings-on-load</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord bug</tag>
      <title>Serialized timestamps returns strings on load</title>
      <updated-at type="datetime">2008-08-13T05:04:25+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Jacob Atzen</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/194</url>
      <milestone-title>2.1.1</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c6acc90b76fd6718ac49286c853ebdec5b7b1444</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-08-13T04:24:43+01:00</created-at>
      <filename>0001-Fixed-Time-Date-object-serialization.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">38794</id>
      <size type="integer">2265</size>
      <uploader-id type="integer">14890</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/38794/0001-Fixed-Time-Date-object-serialization.patch</url>
    </attachment>
  </attachments>
</ticket>
