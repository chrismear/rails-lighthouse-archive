<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">40272</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-25T16:50:47+01:00</created-at>
  <creator-id type="integer">99411</creator-id>
  <milestone-due-on type="datetime">2010-11-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">88038</milestone-id>
  <number type="integer">5249</number>
  <permalink>active_record-does-not-follow-active_model-specs-for-to_key</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>active_record does not follow active_model specs for #to_key</title>
  <updated-at type="datetime">2010-10-15T23:01:59+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">10</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>gucki</creator-name>
  <assigned-user-name>Santiago Pastorino</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5249</url>
  <milestone-title>3.0.2</milestone-title>
  <priority-name>Low</priority-name>
  <original-body>I hit this while playing with sequel together rails rails 3.0rc. Please see #to_key here:

http://github.com/rails/rails/blob/master/activemodel/lib/active_model/conversion.rb#L39
http://github.com/rails/rails/blob/master/activerecord/lib/active_record/attribute_methods/primary_key.rb

AR is using #new_record? while AM is using #persisted? to check wether to return an id.

Consider the following code:
@news = News.create
@news.destroy
dom_id(@news)

As sequel conforms to the active_model specs the following returns &quot;new_news&quot;.
ActiveRecord does not follow the AM specs and so returns &quot;new_4545&quot;.

I think the implementation in AM is wrong and AR is correct. Otherwise a lot of old rails apps won't work anymore, because you destroy the @news in den controller and call afterwards in a template something like $('##{dom_id @news}').hide() which won't work if you check for persisted? because persisted? is false (in AR and Sequel) after the object has been destroyed.

Example using AR:
&lt;pre&gt;
ruby-1.9.2-head &gt; a = News.create
=&gt; # 
ruby-1.9.2-head &gt; a.new_record?
=&gt; false 
ruby-1.9.2-head &gt; a.persisted?
=&gt; true 
ruby-1.9.2-head &gt; a.destroyed?
=&gt; false 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
=&gt; &quot;news_2&quot; 
ruby-1.9.2-head &gt; a.destroy
=&gt; # 
ruby-1.9.2-head &gt; a.new_record?
=&gt; false 
ruby-1.9.2-head &gt; a.persisted?
=&gt; false 
ruby-1.9.2-head &gt; a.destroyed?
=&gt; true 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
=&gt; &quot;news_2&quot;
&lt;/pre&gt;

Using Sequel (or any other ORM which conforms to AM):
&lt;pre&gt;
ruby-1.9.2-head &gt; a = News.create
 =&gt; #87363, :user_id=&gt;nil, :recipient_id=&gt;0, :ref_id=&gt;nil, :ref_type=&gt;&quot;Messagein&quot;, :created_at=&gt;nil, :notification=&gt;0}&gt; 
ruby-1.9.2-head &gt; a.new?
 =&gt; false 
ruby-1.9.2-head &gt; a.persisted?
 =&gt; true 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
 =&gt; &quot;news_87363&quot; 
ruby-1.9.2-head &gt; a.destroy
 =&gt; #87363, :user_id=&gt;nil, :recipient_id=&gt;0, :ref_id=&gt;nil, :ref_type=&gt;&quot;Messagein&quot;, :created_at=&gt;nil, :notification=&gt;0}&gt; 
ruby-1.9.2-head &gt; a.new?
 =&gt; false 
ruby-1.9.2-head &gt; a.persisted?
 =&gt; false 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
 =&gt; &quot;new_news&quot; 
&lt;/pre&gt;</original-body>
  <latest-body>I hit this while playing with sequel together rails rails 3.0rc. Please see #to_key here:

http://github.com/rails/rails/blob/master/activemodel/lib/active_model/conversion.rb#L39
http://github.com/rails/rails/blob/master/activerecord/lib/active_record/attribute_methods/primary_key.rb

AR is using #new_record? while AM is using #persisted? to check wether to return an id.

Consider the following code:
@news = News.create
@news.destroy
dom_id(@news)

As sequel conforms to the active_model specs the following returns &quot;new_news&quot;.
ActiveRecord does not follow the AM specs and so returns &quot;new_4545&quot;.

I think the implementation in AM is wrong and AR is correct. Otherwise a lot of old rails apps won't work anymore, because you destroy the @news in den controller and call afterwards in a template something like $('##{dom_id @news}').hide() which won't work if you check for persisted? because persisted? is false (in AR and Sequel) after the object has been destroyed.

Example using AR:
&lt;pre&gt;
ruby-1.9.2-head &gt; a = News.create
=&gt; # 
ruby-1.9.2-head &gt; a.new_record?
=&gt; false 
ruby-1.9.2-head &gt; a.persisted?
=&gt; true 
ruby-1.9.2-head &gt; a.destroyed?
=&gt; false 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
=&gt; &quot;news_2&quot; 
ruby-1.9.2-head &gt; a.destroy
=&gt; # 
ruby-1.9.2-head &gt; a.new_record?
=&gt; false 
ruby-1.9.2-head &gt; a.persisted?
=&gt; false 
ruby-1.9.2-head &gt; a.destroyed?
=&gt; true 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
=&gt; &quot;news_2&quot;
&lt;/pre&gt;

Using Sequel (or any other ORM which conforms to AM):
&lt;pre&gt;
ruby-1.9.2-head &gt; a = News.create
 =&gt; #87363, :user_id=&gt;nil, :recipient_id=&gt;0, :ref_id=&gt;nil, :ref_type=&gt;&quot;Messagein&quot;, :created_at=&gt;nil, :notification=&gt;0}&gt; 
ruby-1.9.2-head &gt; a.new?
 =&gt; false 
ruby-1.9.2-head &gt; a.persisted?
 =&gt; true 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
 =&gt; &quot;news_87363&quot; 
ruby-1.9.2-head &gt; a.destroy
 =&gt; #87363, :user_id=&gt;nil, :recipient_id=&gt;0, :ref_id=&gt;nil, :ref_type=&gt;&quot;Messagein&quot;, :created_at=&gt;nil, :notification=&gt;0}&gt; 
ruby-1.9.2-head &gt; a.new?
 =&gt; false 
ruby-1.9.2-head &gt; a.persisted?
 =&gt; false 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
 =&gt; &quot;new_news&quot; 
&lt;/pre&gt;</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I hit this while playing with sequel together rails rails 3.0rc.
Please see #to_key here:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/blob/master/activemodel/lib/active_model/conversion.rb#L39&quot;&gt;
http://github.com/rails/rails/blob/master/activemodel/lib/active_mo...&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/blob/master/activerecord/lib/active_record/attribute_methods/primary_key.rb&quot;&gt;
http://github.com/rails/rails/blob/master/activerecord/lib/active_r...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AR is using #new_record? while AM is using #persisted? to check
wether to return an id.&lt;/p&gt;
&lt;p&gt;Consider the following code:&lt;br&gt;
@news = News.create @news.destroy dom_id(@news)&lt;/p&gt;
&lt;p&gt;As sequel conforms to the active_model specs the following
returns &quot;new_news&quot;.&lt;br&gt;
ActiveRecord does not follow the AM specs and so returns
&quot;new_4545&quot;.&lt;/p&gt;
&lt;p&gt;I think the implementation in AM is wrong and AR is correct.
Otherwise a lot of old rails apps won't work anymore, because you
destroy the @news in den controller and call afterwards in a
template something like $('##{dom_id @news}').hide() which won't
work if you check for persisted? because persisted? is false (in AR
and Sequel) after the object has been destroyed.&lt;/p&gt;
&lt;p&gt;Example using AR:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
ruby-1.9.2-head &amp;gt; a = News.create
=&amp;gt; # 
ruby-1.9.2-head &amp;gt; a.new_record?
=&amp;gt; false 
ruby-1.9.2-head &amp;gt; a.persisted?
=&amp;gt; true 
ruby-1.9.2-head &amp;gt; a.destroyed?
=&amp;gt; false 
ruby-1.9.2-head &amp;gt; ApplicationController.new.dom_id a
=&amp;gt; &quot;news_2&quot; 
ruby-1.9.2-head &amp;gt; a.destroy
=&amp;gt; # 
ruby-1.9.2-head &amp;gt; a.new_record?
=&amp;gt; false 
ruby-1.9.2-head &amp;gt; a.persisted?
=&amp;gt; false 
ruby-1.9.2-head &amp;gt; a.destroyed?
=&amp;gt; true 
ruby-1.9.2-head &amp;gt; ApplicationController.new.dom_id a
=&amp;gt; &quot;news_2&quot;
&lt;/pre&gt;
&lt;p&gt;Using Sequel (or any other ORM which conforms to AM):&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
ruby-1.9.2-head &amp;gt; a = News.create
 =&amp;gt; &lt;a href=&quot;/projects/8994/tickets/87363&quot; title=
&quot;Ticket #87363&quot;&gt;#87363&lt;/a&gt;, :user_id=&amp;gt;nil, :recipient_id=&amp;gt;0, :ref_id=&amp;gt;nil, :ref_type=&amp;gt;&quot;Messagein&quot;, :created_at=&amp;gt;nil, :notification=&amp;gt;0}&amp;gt; 
ruby-1.9.2-head &amp;gt; a.new?
 =&amp;gt; false 
ruby-1.9.2-head &amp;gt; a.persisted?
 =&amp;gt; true 
ruby-1.9.2-head &amp;gt; ApplicationController.new.dom_id a
 =&amp;gt; &quot;news_87363&quot; 
ruby-1.9.2-head &amp;gt; a.destroy
 =&amp;gt; &lt;a href=&quot;/projects/8994/tickets/87363&quot; title=
&quot;Ticket #87363&quot;&gt;#87363&lt;/a&gt;, :user_id=&amp;gt;nil, :recipient_id=&amp;gt;0, :ref_id=&amp;gt;nil, :ref_type=&amp;gt;&quot;Messagein&quot;, :created_at=&amp;gt;nil, :notification=&amp;gt;0}&amp;gt; 
ruby-1.9.2-head &amp;gt; a.new?
 =&amp;gt; false 
ruby-1.9.2-head &amp;gt; a.persisted?
 =&amp;gt; false 
ruby-1.9.2-head &amp;gt; ApplicationController.new.dom_id a
 =&amp;gt; &quot;new_news&quot; 
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I hit this while playing with sequel together rails rails 3.0rc. Please see #to_key here:

http://github.com/rails/rails/blob/master/activemodel/lib/active_model/conversion.rb#L39
http://github.com/rails/rails/blob/master/activerecord/lib/active_record/attribute_methods/primary_key.rb

AR is using #new_record? while AM is using #persisted? to check wether to return an id.

Consider the following code:
@news = News.create
@news.destroy
dom_id(@news)

As sequel conforms to the active_model specs the following returns &quot;new_news&quot;.
ActiveRecord does not follow the AM specs and so returns &quot;new_4545&quot;.

I think the implementation in AM is wrong and AR is correct. Otherwise a lot of old rails apps won't work anymore, because you destroy the @news in den controller and call afterwards in a template something like $('##{dom_id @news}').hide() which won't work if you check for persisted? because persisted? is false (in AR and Sequel) after the object has been destroyed.

Example using AR:
&lt;pre&gt;
ruby-1.9.2-head &gt; a = News.create
=&gt; # 
ruby-1.9.2-head &gt; a.new_record?
=&gt; false 
ruby-1.9.2-head &gt; a.persisted?
=&gt; true 
ruby-1.9.2-head &gt; a.destroyed?
=&gt; false 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
=&gt; &quot;news_2&quot; 
ruby-1.9.2-head &gt; a.destroy
=&gt; # 
ruby-1.9.2-head &gt; a.new_record?
=&gt; false 
ruby-1.9.2-head &gt; a.persisted?
=&gt; false 
ruby-1.9.2-head &gt; a.destroyed?
=&gt; true 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
=&gt; &quot;news_2&quot;
&lt;/pre&gt;

Using Sequel (or any other ORM which conforms to AM):
&lt;pre&gt;
ruby-1.9.2-head &gt; a = News.create
 =&gt; #87363, :user_id=&gt;nil, :recipient_id=&gt;0, :ref_id=&gt;nil, :ref_type=&gt;&quot;Messagein&quot;, :created_at=&gt;nil, :notification=&gt;0}&gt; 
ruby-1.9.2-head &gt; a.new?
 =&gt; false 
ruby-1.9.2-head &gt; a.persisted?
 =&gt; true 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
 =&gt; &quot;news_87363&quot; 
ruby-1.9.2-head &gt; a.destroy
 =&gt; #87363, :user_id=&gt;nil, :recipient_id=&gt;0, :ref_id=&gt;nil, :ref_type=&gt;&quot;Messagein&quot;, :created_at=&gt;nil, :notification=&gt;0}&gt; 
ruby-1.9.2-head &gt; a.new?
 =&gt; false 
ruby-1.9.2-head &gt; a.persisted?
 =&gt; false 
ruby-1.9.2-head &gt; ApplicationController.new.dom_id a
 =&gt; &quot;new_news&quot; 
&lt;/pre&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;I hit this while playing with sequel together rails rails 3.0rc.
Please see #to_key here:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://github.com/rails/rails/blob/master/activemodel/lib/active_model/conversion.rb#L39&quot;&gt;
http://github.com/rails/rails/blob/master/activemodel/lib/active_mo...&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://github.com/rails/rails/blob/master/activerecord/lib/active_record/attribute_methods/primary_key.rb&quot;&gt;
http://github.com/rails/rails/blob/master/activerecord/lib/active_r...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AR is using #new_record? while AM is using #persisted? to check
wether to return an id.&lt;/p&gt;
&lt;p&gt;Consider the following code:&lt;br&gt;
@news = News.create @news.destroy dom_id(@news)&lt;/p&gt;
&lt;p&gt;As sequel conforms to the active_model specs the following
returns &quot;new_news&quot;.&lt;br&gt;
ActiveRecord does not follow the AM specs and so returns
&quot;new_4545&quot;.&lt;/p&gt;
&lt;p&gt;I think the implementation in AM is wrong and AR is correct.
Otherwise a lot of old rails apps won't work anymore, because you
destroy the @news in den controller and call afterwards in a
template something like $('##{dom_id @news}').hide() which won't
work if you check for persisted? because persisted? is false (in AR
and Sequel) after the object has been destroyed.&lt;/p&gt;
&lt;p&gt;Example using AR:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
ruby-1.9.2-head &amp;gt; a = News.create
=&amp;gt; # 
ruby-1.9.2-head &amp;gt; a.new_record?
=&amp;gt; false 
ruby-1.9.2-head &amp;gt; a.persisted?
=&amp;gt; true 
ruby-1.9.2-head &amp;gt; a.destroyed?
=&amp;gt; false 
ruby-1.9.2-head &amp;gt; ApplicationController.new.dom_id a
=&amp;gt; &quot;news_2&quot; 
ruby-1.9.2-head &amp;gt; a.destroy
=&amp;gt; # 
ruby-1.9.2-head &amp;gt; a.new_record?
=&amp;gt; false 
ruby-1.9.2-head &amp;gt; a.persisted?
=&amp;gt; false 
ruby-1.9.2-head &amp;gt; a.destroyed?
=&amp;gt; true 
ruby-1.9.2-head &amp;gt; ApplicationController.new.dom_id a
=&amp;gt; &quot;news_2&quot;
&lt;/pre&gt;
&lt;p&gt;Using Sequel (or any other ORM which conforms to AM):&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
ruby-1.9.2-head &amp;gt; a = News.create
 =&amp;gt; &lt;a href=&quot;/projects/8994/tickets/87363&quot; title=
&quot;Ticket #87363&quot;&gt;#87363&lt;/a&gt;, :user_id=&amp;gt;nil, :recipient_id=&amp;gt;0, :ref_id=&amp;gt;nil, :ref_type=&amp;gt;&quot;Messagein&quot;, :created_at=&amp;gt;nil, :notification=&amp;gt;0}&amp;gt; 
ruby-1.9.2-head &amp;gt; a.new?
 =&amp;gt; false 
ruby-1.9.2-head &amp;gt; a.persisted?
 =&amp;gt; true 
ruby-1.9.2-head &amp;gt; ApplicationController.new.dom_id a
 =&amp;gt; &quot;news_87363&quot; 
ruby-1.9.2-head &amp;gt; a.destroy
 =&amp;gt; &lt;a href=&quot;/projects/8994/tickets/87363&quot; title=
&quot;Ticket #87363&quot;&gt;#87363&lt;/a&gt;, :user_id=&amp;gt;nil, :recipient_id=&amp;gt;0, :ref_id=&amp;gt;nil, :ref_type=&amp;gt;&quot;Messagein&quot;, :created_at=&amp;gt;nil, :notification=&amp;gt;0}&amp;gt; 
ruby-1.9.2-head &amp;gt; a.new?
 =&amp;gt; false 
ruby-1.9.2-head &amp;gt; a.persisted?
 =&amp;gt; false 
ruby-1.9.2-head &amp;gt; ApplicationController.new.dom_id a
 =&amp;gt; &quot;new_news&quot; 
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-30T10:00:41+01:00</created-at>
      <creator-id type="integer">99411</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5249</number>
      <permalink>active_record-does-not-follow-active_model-specs-for-to_key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>active_record does not follow active_model specs for #to_key</title>
      <updated-at type="datetime">2010-07-30T10:00:44+01:00</updated-at>
      <user-id type="integer">99411</user-id>
      <version type="integer">1</version>
      <user-name>gucki</user-name>
      <creator-name>gucki</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5249</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [1590377886820e00b1a786616518a32f3b61ec0f]) Makes AR use AMo to_key implementation

[#5249]
http://github.com/rails/rails/commit/1590377886820e00b1a786616518a32f3b61ec0f</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/1590377886820e00b1a786616518a32f3b61ec0f&quot;
title=
&quot;Changeset [1590377886820e00b1a786616518a32f3b61ec0f]&quot;&gt;[1590377886820e00b1a786616518a32f3b61ec0f]&lt;/a&gt;)
Makes AR use AMo to_key implementation&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/5249&quot; title=
&quot;Ticket #5249&quot;&gt;#5249&lt;/a&gt;] &lt;a href=
&quot;http://github.com/rails/rails/commit/1590377886820e00b1a786616518a32f3b61ec0f&quot;&gt;
http://github.com/rails/rails/commit/1590377886820e00b1a786616518a3...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-14T02:28:10+01:00</created-at>
      <creator-id type="integer">99411</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5249</number>
      <permalink>active_record-does-not-follow-active_model-specs-for-to_key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>active_record does not follow active_model specs for #to_key</title>
      <updated-at type="datetime">2010-08-14T02:28:11+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>gucki</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5249</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [ccd4364a13d7a3af9eec7672e08d0682765f5b2f]) Makes AR use AMo to_key implementation

[#5249]
http://github.com/rails/rails/commit/ccd4364a13d7a3af9eec7672e08d0682765f5b2f</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/ccd4364a13d7a3af9eec7672e08d0682765f5b2f&quot;
title=
&quot;Changeset [ccd4364a13d7a3af9eec7672e08d0682765f5b2f]&quot;&gt;[ccd4364a13d7a3af9eec7672e08d0682765f5b2f]&lt;/a&gt;)
Makes AR use AMo to_key implementation&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/5249&quot; title=
&quot;Ticket #5249&quot;&gt;#5249&lt;/a&gt;] &lt;a href=
&quot;http://github.com/rails/rails/commit/ccd4364a13d7a3af9eec7672e08d0682765f5b2f&quot;&gt;
http://github.com/rails/rails/commit/ccd4364a13d7a3af9eec7672e08d06...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-14T02:28:43+01:00</created-at>
      <creator-id type="integer">99411</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5249</number>
      <permalink>active_record-does-not-follow-active_model-specs-for-to_key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>active_record does not follow active_model specs for #to_key</title>
      <updated-at type="datetime">2010-08-14T02:28:45+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">3</version>
      <user-name>Repository</user-name>
      <creator-name>gucki</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5249</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>gucki this make me realize that it makes sense if AR uses AMo implementation. So i've pushed that.
Also if you look at the test i've changed it's ok too, a model doesn't have primary_key after being deleted.

Regarding to your ticket i think the way you're trying to hide the dom element is not the best ... take a look at this example made by Yehuda ...

@@@
$(&quot;li.item a&quot;).click(function() {
  var li   = $(this).closest(&quot;li&quot;);

  $.ajax({
    method: &quot;DELETE&quot;,
    type: &quot;json&quot;,
    url: &quot;/items/&quot; + this.data(&quot;id&quot;),
    success: function(json) {
      if(json.success) {
        li.remove();
      }
    }
  });
});
@@@

I'm closing this issue and assigning to Yehuda just in case he want to add something else</body>
      <body-html>&lt;div&gt;&lt;p&gt;gucki this make me realize that it makes sense if AR uses AMo
implementation. So i've pushed that.&lt;br&gt;
Also if you look at the test i've changed it's ok too, a model
doesn't have primary_key after being deleted.&lt;/p&gt;
&lt;p&gt;Regarding to your ticket i think the way you're trying to hide
the dom element is not the best ... take a look at this example
made by Yehuda ...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$(&quot;li.item a&quot;).click(function() {
  var li   = $(this).closest(&quot;li&quot;);

  $.ajax({
    method: &quot;DELETE&quot;,
    type: &quot;json&quot;,
    url: &quot;/items/&quot; + this.data(&quot;id&quot;),
    success: function(json) {
      if(json.success) {
        li.remove();
      }
    }
  });
});&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I'm closing this issue and assigning to Yehuda just in case he
want to add something else&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-14T02:33:41+01:00</created-at>
      <creator-id type="integer">99411</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:priority: 0
:milestone: 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5249</number>
      <permalink>active_record-does-not-follow-active_model-specs-for-to_key</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>active_record does not follow active_model specs for #to_key</title>
      <updated-at type="datetime">2010-08-14T02:33:43+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>gucki</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5249</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi Santiago, thanks for getting on this. However I still think the patch should be the other way round.

1. When an object is destroyed only the record in the db is deleted. The object itself has the same data as before, it's just old/ outdated data in some way (ex the fk is outdated) and destroyed? returns true. 

2. I don't the see anything wrong with using this old, outdated data. It's really usefully in some cases. I'm not sure if it's a good practice/ idea to replace a simple link_to(&quot;delete&quot;, @item, :method =&gt; :delete) with a rjs containing only $('##dom_id(@item).hide') with such a huge JS block as shown above.

3. It breaks A LOT of exisiting rails applications. I just googled for &quot;rails ajax tutorial detroy&quot; and found lot's of examples using the technique above within seconds. Some of them would still work but only because they hardcode the id like &quot;note_#{@note.id}&quot; and are not using dom_id, but I guess that's not really the point.

4. What are the drawbacks when you would change it the ways I suggested, so current AR behavior into AM?

Btw: I'm not sure why you close the ticket with &quot;invalid&quot;. The ticket is a valid convern/ bug report, you even created a patch. Shouldn't it be marked resolved instead (well, in fact open).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Santiago, thanks for getting on this. However I still think
the patch should be the other way round.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When an object is destroyed only the record in the db is
deleted. The object itself has the same data as before, it's just
old/ outdated data in some way (ex the fk is outdated) and
destroyed? returns true.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I don't the see anything wrong with using this old, outdated
data. It's really usefully in some cases. I'm not sure if it's a
good practice/ idea to replace a simple link_to(&quot;delete&quot;, @item,
:method =&amp;gt; :delete) with a rjs containing only
$('##dom_id(@item).hide') with such a huge JS block as shown
above.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It breaks A LOT of exisiting rails applications. I just googled
for &quot;rails ajax tutorial detroy&quot; and found lot's of examples using
the technique above within seconds. Some of them would still work
but only because they hardcode the id like &quot;note_#{@note.id}&quot; and
are not using dom_id, but I guess that's not really the point.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What are the drawbacks when you would change it the ways I
suggested, so current AR behavior into AM?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Btw: I'm not sure why you close the ticket with &quot;invalid&quot;. The
ticket is a valid convern/ bug report, you even created a patch.
Shouldn't it be marked resolved instead (well, in fact open).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-14T08:54:45+01:00</created-at>
      <creator-id type="integer">99411</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5249</number>
      <permalink>active_record-does-not-follow-active_model-specs-for-to_key</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>active_record does not follow active_model specs for #to_key</title>
      <updated-at type="datetime">2010-08-14T08:54:47+01:00</updated-at>
      <user-id type="integer">99411</user-id>
      <version type="integer">5</version>
      <user-name>gucki</user-name>
      <creator-name>gucki</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5249</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">12714</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [36a84a4f15f29b41c7cac2f8de410055006a8a8d]) Makes AR use AMo to_key implementation

[#5249]
http://github.com/rails/rails/commit/36a84a4f15f29b41c7cac2f8de410055006a8a8d</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/36a84a4f15f29b41c7cac2f8de410055006a8a8d&quot;
title=
&quot;Changeset [36a84a4f15f29b41c7cac2f8de410055006a8a8d]&quot;&gt;[36a84a4f15f29b41c7cac2f8de410055006a8a8d]&lt;/a&gt;)
Makes AR use AMo to_key implementation&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/5249&quot; title=
&quot;Ticket #5249&quot;&gt;#5249&lt;/a&gt;] &lt;a href=
&quot;http://github.com/rails/rails/commit/36a84a4f15f29b41c7cac2f8de410055006a8a8d&quot;&gt;
http://github.com/rails/rails/commit/36a84a4f15f29b41c7cac2f8de4100...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-14T12:23:28+01:00</created-at>
      <creator-id type="integer">99411</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">5249</number>
      <permalink>active_record-does-not-follow-active_model-specs-for-to_key</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag nil="true"></tag>
      <title>active_record does not follow active_model specs for #to_key</title>
      <updated-at type="datetime">2010-08-14T12:23:30+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>gucki</creator-name>
      <assigned-user-name>Yehuda Katz (wycats)</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5249</url>
      <milestone-title>3.x</milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>gucki AMo semantics were changed, ORMs should implement to_key according to this new semantics http://github.com/rails/rails/commit/d0cf212cb5a02db1b3df85e1a337ea1fc99d9b3b
Also i've reverted the AR change.</body>
      <body-html>&lt;div&gt;&lt;p&gt;gucki AMo semantics were changed, ORMs should implement to_key
according to this new semantics &lt;a href=
&quot;http://github.com/rails/rails/commit/d0cf212cb5a02db1b3df85e1a337ea1fc99d9b3b&quot;&gt;
http://github.com/rails/rails/commit/d0cf212cb5a02db1b3df85e1a337ea...&lt;/a&gt;&lt;br&gt;
Also i've reverted the AR change.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-15T15:41:01+01:00</created-at>
      <creator-id type="integer">99411</creator-id>
      <diffable-attributes type="yaml">--- 
:state: invalid
:milestone: 71472
:assigned_user: 12714
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5249</number>
      <permalink>active_record-does-not-follow-active_model-specs-for-to_key</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>active_record does not follow active_model specs for #to_key</title>
      <updated-at type="datetime">2010-08-15T15:41:04+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>gucki</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5249</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Santiago, it seems you only changed the doc of #to_key, not the implementation. Or am I missing something? :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Santiago, it seems you only changed the doc of #to_key, not the
implementation. Or am I missing something? :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-25T14:40:10+01:00</created-at>
      <creator-id type="integer">99411</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5249</number>
      <permalink>active_record-does-not-follow-active_model-specs-for-to_key</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>active_record does not follow active_model specs for #to_key</title>
      <updated-at type="datetime">2010-08-25T14:40:11+01:00</updated-at>
      <user-id type="integer">99411</user-id>
      <version type="integer">8</version>
      <user-name>gucki</user-name>
      <creator-name>gucki</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5249</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yes only the docs were changed. ORMs which conforms to AMo should implement to_key following the rules given in the docs.

Also the implementation of to_key as Jos&#233; said in the docs should be ...

@@@
respond_to?(:id) &amp;&amp; id ? [id] : nil
@@@

But Ruby 1.8.7 always respond_to id so nothing better can be done.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yes only the docs were changed. ORMs which conforms to AMo
should implement to_key following the rules given in the docs.&lt;/p&gt;
&lt;p&gt;Also the implementation of to_key as Jos&amp;eacute; said in the
docs should be ...&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;respond_to?(:id) &amp;amp;&amp;amp; id ? [id] : nil&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But Ruby 1.8.7 always respond_to id so nothing better can be
done.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-08-25T16:50:47+01:00</created-at>
      <creator-id type="integer">99411</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5249</number>
      <permalink>active_record-does-not-follow-active_model-specs-for-to_key</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>active_record does not follow active_model specs for #to_key</title>
      <updated-at type="datetime">2010-08-25T16:51:28+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>gucki</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5249</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">40272</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/31647)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/31647&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-15T23:01:59+01:00</created-at>
      <creator-id type="integer">99411</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 27004
</diffable-attributes>
      <milestone-id type="integer">88038</milestone-id>
      <number type="integer">5249</number>
      <permalink>active_record-does-not-follow-active_model-specs-for-to_key</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>active_record does not follow active_model specs for #to_key</title>
      <updated-at type="datetime">2010-10-15T23:01:59+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">10</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>gucki</creator-name>
      <assigned-user-name>Santiago Pastorino</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5249</url>
      <milestone-title>3.0.2</milestone-title>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
