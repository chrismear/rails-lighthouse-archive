<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15783</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-11-10T22:22:20+00:00</created-at>
  <creator-id type="integer">28452</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3476</number>
  <permalink>glitch-in-datehelper-with-timezones-time_ago_in_words-causing-undefined-method-abs</permalink>
  <priority type="integer">176594</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.3.4 time timewithzone timezone time_ago_in_words</tag>
  <title>Glitch in DateHelper with timezones (#time_ago_in_words causing &quot;undefined method 'abs'&quot;)</title>
  <updated-at type="datetime">2010-01-28T02:31:02+00:00</updated-at>
  <user-id type="integer">15783</user-id>
  <version type="integer">9</version>
  <user-name>Geoff Buesing</user-name>
  <creator-name>epitron</creator-name>
  <assigned-user-name>Geoff Buesing</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3476</url>
  <priority-name nil="true"></priority-name>
  <original-body>After I enabled Rails' new TimeZone features, I got this error in an obscure set of circumstances:

  ActionView::TemplateError (undefined method `abs' for Thu Feb 19 13:59:51 -0500 1970:Time)

(The exception is is thrown by DateHelper#distance_of_time_in_words, called fromDateHelper#time_ago_in_words... it's not in the backtrace, but I confirmed it in a debugger.)

It appears that Time objects and ActiveSupport::TimeWithZone objects are getting mixed together, and when you try to take their difference, the resulting object doesn't always have an #abs method.

To fix it, I just patched #time_ago_in_words to use &quot;Time.zone.now&quot; instead of &quot;Time.now&quot;:

  module ActionView::Helpers::DateHelper
    def time_ago_in_words(from_time, include_seconds = false)
      distance_of_time_in_words(from_time, Time.zone.now, include_seconds)
    end
  end

But this is a nasty hack. :)

Perhaps the default Time objects (DateTime, Time, etc.) should be patched to always return ActiveSupport::TimeWithZone objects when timezones are enabled?

(Rails version: 2.3.4)</original-body>
  <latest-body>After I enabled Rails' new TimeZone features, I got this error in an obscure set of circumstances:

  ActionView::TemplateError (undefined method `abs' for Thu Feb 19 13:59:51 -0500 1970:Time)

(The exception is is thrown by DateHelper#distance_of_time_in_words, called fromDateHelper#time_ago_in_words... it's not in the backtrace, but I confirmed it in a debugger.)

It appears that Time objects and ActiveSupport::TimeWithZone objects are getting mixed together, and when you try to take their difference, the resulting object doesn't always have an #abs method.

To fix it, I just patched #time_ago_in_words to use &quot;Time.zone.now&quot; instead of &quot;Time.now&quot;:

  module ActionView::Helpers::DateHelper
    def time_ago_in_words(from_time, include_seconds = false)
      distance_of_time_in_words(from_time, Time.zone.now, include_seconds)
    end
  end

But this is a nasty hack. :)

Perhaps the default Time objects (DateTime, Time, etc.) should be patched to always return ActiveSupport::TimeWithZone objects when timezones are enabled?

(Rails version: 2.3.4)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;After I enabled Rails' new TimeZone features, I got this error
in an obscure set of circumstances:&lt;/p&gt;
&lt;p&gt;ActionView::TemplateError (undefined method &lt;code&gt;abs' for Thu
Feb 19 13:59:51 -0500 1970:Time)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(The exception is is thrown by
DateHelper#distance_of_time_in_words, called
fromDateHelper#time_ago_in_words... it's not in the backtrace, but
I confirmed it in a debugger.)&lt;/p&gt;
&lt;p&gt;It appears that Time objects and ActiveSupport::TimeWithZone
objects are getting mixed together, and when you try to take their
difference, the resulting object doesn't always have an #abs
method.&lt;/p&gt;
&lt;p&gt;To fix it, I just patched #time_ago_in_words to use
&quot;Time.zone.now&quot; instead of &quot;Time.now&quot;:&lt;/p&gt;
&lt;p&gt;module ActionView::Helpers::DateHelper&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def time_ago_in_words(from_time, include_seconds = false)
  distance_of_time_in_words(from_time, Time.zone.now, include_seconds)
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;But this is a nasty hack. :)&lt;/p&gt;
&lt;p&gt;Perhaps the default Time objects (DateTime, Time, etc.) should
be patched to always return ActiveSupport::TimeWithZone objects
when timezones are enabled?&lt;/p&gt;
&lt;p&gt;(Rails version: 2.3.4)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>After I enabled Rails' new TimeZone features, I got this error in an obscure set of circumstances:

    ActionView::TemplateError (undefined method `abs' for Thu Feb 19 13:59:51 -0500 1970:Time)

(The exception is is thrown by DateHelper#distance_of_time_in_words, called fromDateHelper#time_ago_in_words... it's not in the backtrace, but I confirmed it in a debugger.)

It appears that Time objects and ActiveSupport::TimeWithZone objects are getting mixed together, and when you try to take their difference, the resulting object doesn't always have an #abs method.

To fix it, I just patched #time_ago_in_words to use &quot;Time.zone.now&quot; instead of &quot;Time.now&quot;:

    module ActionView::Helpers::DateHelper
      def time_ago_in_words(from_time, include_seconds = false)
        distance_of_time_in_words(from_time, Time.zone.now, include_seconds)
      end
    end

But this is a nasty hack. :)

Perhaps the default Time objects (DateTime, Time, etc.) should be patched to always return ActiveSupport::TimeWithZone objects when timezones are enabled?

(Rails version: 2.3.4)</body>
      <body-html>&lt;div&gt;&lt;p&gt;After I enabled Rails' new TimeZone features, I got this error
in an obscure set of circumstances:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActionView::TemplateError (undefined method `abs' for Thu Feb 19 13:59:51 -0500 1970:Time)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(The exception is is thrown by
DateHelper#distance_of_time_in_words, called
fromDateHelper#time_ago_in_words... it's not in the backtrace, but
I confirmed it in a debugger.)&lt;/p&gt;
&lt;p&gt;It appears that Time objects and ActiveSupport::TimeWithZone
objects are getting mixed together, and when you try to take their
difference, the resulting object doesn't always have an #abs
method.&lt;/p&gt;
&lt;p&gt;To fix it, I just patched #time_ago_in_words to use
&quot;Time.zone.now&quot; instead of &quot;Time.now&quot;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;module ActionView::Helpers::DateHelper
  def time_ago_in_words(from_time, include_seconds = false)
    distance_of_time_in_words(from_time, Time.zone.now, include_seconds)
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But this is a nasty hack. :)&lt;/p&gt;
&lt;p&gt;Perhaps the default Time objects (DateTime, Time, etc.) should
be patched to always return ActiveSupport::TimeWithZone objects
when timezones are enabled?&lt;/p&gt;
&lt;p&gt;(Rails version: 2.3.4)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-10T09:51:29+00:00</created-at>
      <creator-id type="integer">28452</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3476</number>
      <permalink>glitch-in-datehelper-with-timezones-time_ago_in_words-causing-undefined-method-abs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 time timewithzone timezone time_ago_in_words</tag>
      <title>Glitch in DateHelper with timezones (#time_ago_in_words causing &quot;undefined method 'abs'&quot;)</title>
      <updated-at type="datetime">2009-11-10T09:52:06+00:00</updated-at>
      <user-id type="integer">28452</user-id>
      <version type="integer">1</version>
      <user-name>epitron</user-name>
      <creator-name>epitron</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3476</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I can't replicate this.

With what arguments are you calling time_ago_in_words to get the error?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can't replicate this.&lt;/p&gt;
&lt;p&gt;With what arguments are you calling time_ago_in_words to get the
error?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-10T14:36:31+00:00</created-at>
      <creator-id type="integer">28452</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3476</number>
      <permalink>glitch-in-datehelper-with-timezones-time_ago_in_words-causing-undefined-method-abs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 time timewithzone timezone time_ago_in_words</tag>
      <title>Glitch in DateHelper with timezones (#time_ago_in_words causing &quot;undefined method 'abs'&quot;)</title>
      <updated-at type="datetime">2009-11-10T14:36:34+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">2</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>epitron</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3476</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The problem seems to stem from creating an ActiveSupport::TimeWithZone from a DateTime object:

    d = DateTime.parse(&quot;jan 7&quot;).in_time_zone

If you go to the console, you'll notice that Time.now - d returns a Time object (no #abs), whereas Time.now - another_time_object gives you an integer.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The problem seems to stem from creating an
ActiveSupport::TimeWithZone from a DateTime object:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;d = DateTime.parse(&quot;jan 7&quot;).in_time_zone&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you go to the console, you'll notice that Time.now - d
returns a Time object (no #abs), whereas Time.now -
another_time_object gives you an integer.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-10T21:45:03+00:00</created-at>
      <creator-id type="integer">28452</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3476</number>
      <permalink>glitch-in-datehelper-with-timezones-time_ago_in_words-causing-undefined-method-abs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.4 time timewithzone timezone time_ago_in_words</tag>
      <title>Glitch in DateHelper with timezones (#time_ago_in_words causing &quot;undefined method 'abs'&quot;)</title>
      <updated-at type="datetime">2009-11-10T21:45:05+00:00</updated-at>
      <user-id type="integer">28452</user-id>
      <version type="integer">3</version>
      <user-name>epitron</user-name>
      <creator-name>epitron</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3476</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Aha, ok, I see what the issue is -- the instance of ActiveSupport::TimeWithZone you're creating is storing the time internally as a DateTime (because you started with DateTime.parse), and Time#- with a DateTime instance as an argument returns another instance of Time, instead of a Float.

The fix should be easy enough -- we'll just need to add additional logic to Time#minus_with_coercion so that it returns a Float instead of a Time when a DateTime arg is supplied.

The current Time#- behavior with a DateTime arg seems very broken, so I see no issues with fixing it -- see example below, I have no idea how anyone could be relying on this behavior:

@@@ ruby
&gt;&gt; Time.local(2009,1,2) - DateTime.civil(2009,1,1)
=&gt; Fri Jan 02 00:00:00 -0600 1970
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Aha, ok, I see what the issue is -- the instance of
ActiveSupport::TimeWithZone you're creating is storing the time
internally as a DateTime (because you started with DateTime.parse),
and Time#- with a DateTime instance as an argument returns another
instance of Time, instead of a Float.&lt;/p&gt;
&lt;p&gt;The fix should be easy enough -- we'll just need to add
additional logic to Time#minus_with_coercion so that it returns a
Float instead of a Time when a DateTime arg is supplied.&lt;/p&gt;
&lt;p&gt;The current Time#- behavior with a DateTime arg seems very
broken, so I see no issues with fixing it -- see example below, I
have no idea how anyone could be relying on this behavior:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;&amp;gt;&amp;gt; Time.local(2009,1,2) - DateTime.civil(2009,1,1)
=&amp;gt; Fri Jan 02 00:00:00 -0600 1970&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-10T22:22:20+00:00</created-at>
      <creator-id type="integer">28452</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3476</number>
      <permalink>glitch-in-datehelper-with-timezones-time_ago_in_words-causing-undefined-method-abs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.4 time timewithzone timezone time_ago_in_words</tag>
      <title>Glitch in DateHelper with timezones (#time_ago_in_words causing &quot;undefined method 'abs'&quot;)</title>
      <updated-at type="datetime">2009-11-10T22:22:34+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">4</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>epitron</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3476</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ruby's standard library has a lot of potholes. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ruby's standard library has a lot of potholes. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-11-10T23:19:06+00:00</created-at>
      <creator-id type="integer">28452</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3476</number>
      <permalink>glitch-in-datehelper-with-timezones-time_ago_in_words-causing-undefined-method-abs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.4 time timewithzone timezone time_ago_in_words</tag>
      <title>Glitch in DateHelper with timezones (#time_ago_in_words causing &quot;undefined method 'abs'&quot;)</title>
      <updated-at type="datetime">2009-11-10T23:19:08+00:00</updated-at>
      <user-id type="integer">28452</user-id>
      <version type="integer">5</version>
      <user-name>epitron</user-name>
      <creator-name>epitron</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3476</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [e98f9579c472e75f5a8c0678f2fc54b2d681e3ec]) Time#- with a DateTime argument behaves the same as with a Time argument, i.e. returns the difference between self and arg as a Float [#3476 status:resolved]
http://github.com/rails/rails/commit/e98f9579c472e75f5a8c0678f2fc54b2d681e3ec</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/e98f9579c472e75f5a8c0678f2fc54b2d681e3ec&quot;
title=
&quot;Changeset [e98f9579c472e75f5a8c0678f2fc54b2d681e3ec]&quot;&gt;[e98f9579c472e75f5a8c0678f2fc54b2d681e3ec]&lt;/a&gt;)
Time#- with a DateTime argument behaves the same as with a Time
argument, i.e. returns the difference between self and arg as a
Float [&lt;a href=&quot;/projects/8994/tickets/3476&quot; title=
&quot;Ticket #3476&quot;&gt;#3476&lt;/a&gt; status:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/e98f9579c472e75f5a8c0678f2fc54b2d681e3ec&quot;&gt;
http://github.com/rails/rails/commit/e98f9579c472e75f5a8c0678f2fc54...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-28T02:18:10+00:00</created-at>
      <creator-id type="integer">28452</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3476</number>
      <permalink>glitch-in-datehelper-with-timezones-time_ago_in_words-causing-undefined-method-abs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.4 time timewithzone timezone time_ago_in_words</tag>
      <title>Glitch in DateHelper with timezones (#time_ago_in_words causing &quot;undefined method 'abs'&quot;)</title>
      <updated-at type="datetime">2010-01-28T02:18:10+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">6</version>
      <user-name>Repository</user-name>
      <creator-name>epitron</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3476</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(from [3f7729a66eeb362d6d4f7b0add6ca40151794b74]) Time#- with a DateTime argument behaves the same as with a Time argument, i.e. returns the difference between self and arg as a Float [#3476 status:resolved]
http://github.com/rails/rails/commit/3f7729a66eeb362d6d4f7b0add6ca40151794b74</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/3f7729a66eeb362d6d4f7b0add6ca40151794b74&quot;
title=
&quot;Changeset [3f7729a66eeb362d6d4f7b0add6ca40151794b74]&quot;&gt;[3f7729a66eeb362d6d4f7b0add6ca40151794b74]&lt;/a&gt;)
Time#- with a DateTime argument behaves the same as with a Time
argument, i.e. returns the difference between self and arg as a
Float [&lt;a href=&quot;/projects/8994/tickets/3476&quot; title=
&quot;Ticket #3476&quot;&gt;#3476&lt;/a&gt; status:resolved] &lt;a href=
&quot;http://github.com/rails/rails/commit/3f7729a66eeb362d6d4f7b0add6ca40151794b74&quot;&gt;
http://github.com/rails/rails/commit/3f7729a66eeb362d6d4f7b0add6ca4...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-28T02:25:44+00:00</created-at>
      <creator-id type="integer">28452</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3476</number>
      <permalink>glitch-in-datehelper-with-timezones-time_ago_in_words-causing-undefined-method-abs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.4 time timewithzone timezone time_ago_in_words</tag>
      <title>Glitch in DateHelper with timezones (#time_ago_in_words causing &quot;undefined method 'abs'&quot;)</title>
      <updated-at type="datetime">2010-01-28T02:25:45+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>epitron</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3476</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Turns out the standard library isn't to blame -- ActiveSupport defines DateTime#to_f, so Time#- coerces the DateTime arg #to_f and assumes we're subtracting seconds, instead of finding the difference between two times.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Turns out the standard library isn't to blame -- ActiveSupport
defines DateTime#to_f, so Time#- coerces the DateTime arg #to_f and
assumes we're subtracting seconds, instead of finding the
difference between two times.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-28T02:27:56+00:00</created-at>
      <creator-id type="integer">28452</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3476</number>
      <permalink>glitch-in-datehelper-with-timezones-time_ago_in_words-causing-undefined-method-abs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.3.4 time timewithzone timezone time_ago_in_words</tag>
      <title>Glitch in DateHelper with timezones (#time_ago_in_words causing &quot;undefined method 'abs'&quot;)</title>
      <updated-at type="datetime">2010-01-28T02:27:57+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">8</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>epitron</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3476</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15783</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-28T02:31:00+00:00</created-at>
      <creator-id type="integer">28452</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3476</number>
      <permalink>glitch-in-datehelper-with-timezones-time_ago_in_words-causing-undefined-method-abs</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3.4 time timewithzone timezone time_ago_in_words</tag>
      <title>Glitch in DateHelper with timezones (#time_ago_in_words causing &quot;undefined method 'abs'&quot;)</title>
      <updated-at type="datetime">2010-01-28T02:31:02+00:00</updated-at>
      <user-id type="integer">15783</user-id>
      <version type="integer">9</version>
      <user-name>Geoff Buesing</user-name>
      <creator-name>epitron</creator-name>
      <assigned-user-name>Geoff Buesing</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3476</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
