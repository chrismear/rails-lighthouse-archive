<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-04-22T06:48:04+01:00</created-at>
  <creator-id type="integer">27931</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">1251</number>
  <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>2.3 l10n routing url_for</tag>
  <title>default_url_options can't be used with named routes</title>
  <updated-at type="datetime">2011-04-22T06:48:04+01:00</updated-at>
  <user-id type="integer">56676</user-id>
  <version type="integer">25</version>
  <user-name>Kunal Shah</user-name>
  <creator-name>iain</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>You can't use default_url_options when you are trying to fill a variable in a route in front.

so if you have `map.resources :posts, :path_prefix =&gt; '/:locale'` and you use `post_path(@post)` then `@post` gets filled in on the `:locale` spot, instead of at it's normal point. After that it breaks because there is no `:id`

I think the solution would be that the options should be applied before the other variables supplied to the named routes.

I've tried switching `:locale` with `:id` in default_url_options but that brings you into trouble with nested routes.</original-body>
  <latest-body>You can't use default_url_options when you are trying to fill a variable in a route in front.

so if you have `map.resources :posts, :path_prefix =&gt; '/:locale'` and you use `post_path(@post)` then `@post` gets filled in on the `:locale` spot, instead of at it's normal point. After that it breaks because there is no `:id`

I think the solution would be that the options should be applied before the other variables supplied to the named routes.

I've tried switching `:locale` with `:id` in default_url_options but that brings you into trouble with nested routes.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;You can't use default_url_options when you are trying to fill a
variable in a route in front.&lt;/p&gt;
&lt;p&gt;so if you have &lt;code&gt;map.resources :posts, :path_prefix =&amp;gt;
'/:locale'&lt;/code&gt; and you use &lt;code&gt;post_path(@post)&lt;/code&gt; then
&lt;code&gt;@post&lt;/code&gt; gets filled in on the &lt;code&gt;:locale&lt;/code&gt; spot,
instead of at it's normal point. After that it breaks because there
is no &lt;code&gt;:id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I think the solution would be that the options should be applied
before the other variables supplied to the named routes.&lt;/p&gt;
&lt;p&gt;I've tried switching &lt;code&gt;:locale&lt;/code&gt; with &lt;code&gt;:id&lt;/code&gt;
in default_url_options but that brings you into trouble with nested
routes.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You can't use default_url_options when you are trying to fill a variable in a route in front.

so if you have `map.resources :posts, :path_prefix =&gt; '/:locale'` and you use `post_path(@post)` then `@post` gets filled in on the `:locale` spot, instead of at it's normal point. After that it breaks because there is no `:id`

I think the solution would be that the options should be applied before the other variables supplied to the named routes.

I've tried switching `:locale` with `:id` in default_url_options but that brings you into trouble with nested routes.</body>
      <body-html>&lt;div&gt;&lt;p&gt;You can't use default_url_options when you are trying to fill a
variable in a route in front.&lt;/p&gt;
&lt;p&gt;so if you have &lt;code&gt;map.resources :posts, :path_prefix =&amp;gt;
'/:locale'&lt;/code&gt; and you use &lt;code&gt;post_path(@post)&lt;/code&gt; then
&lt;code&gt;@post&lt;/code&gt; gets filled in on the &lt;code&gt;:locale&lt;/code&gt; spot,
instead of at it's normal point. After that it breaks because there
is no &lt;code&gt;:id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I think the solution would be that the options should be applied
before the other variables supplied to the named routes.&lt;/p&gt;
&lt;p&gt;I've tried switching &lt;code&gt;:locale&lt;/code&gt; with &lt;code&gt;:id&lt;/code&gt;
in default_url_options but that brings you into trouble with nested
routes.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-22T21:18:01+01:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-10-22T21:18:05+01:00</updated-at>
      <user-id type="integer">27931</user-id>
      <version type="integer">1</version>
      <user-name>iain</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 on this one.

This would be wonderful solution for persistent locale passing in URLs, as:

@@@
def default_url_options(options={})
  { :locale =&gt; I18n.locale }
end
@@@

would pass locale set eg. in a &lt;code&gt;before_filter&lt;/code&gt; to every route and to &lt;code&gt;params[:locale]&lt;/code&gt;.

Karel</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 on this one.&lt;/p&gt;
&lt;p&gt;This would be wonderful solution for persistent locale passing
in URLs, as:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
def default_url_options(options={})
  { :locale =&amp;gt; I18n.locale }
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;would pass locale set eg. in a &lt;code&gt;before_filter&lt;/code&gt; to
every route and to &lt;code&gt;params[:locale]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Karel&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-22T22:14:05+01:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-10-22T22:14:12+01:00</updated-at>
      <user-id type="integer">16364</user-id>
      <version type="integer">2</version>
      <user-name>Karel Mina&#345;&#237;k</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-17T14:34:19+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T14:34:21+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">3</version>
      <user-name>Pratik</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is actually fixed in 2.2 already. 

In fact I have that *exact* same snippet of code in my app :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is actually fixed in 2.2 already.&lt;/p&gt;
&lt;p&gt;In fact I have that &lt;em&gt;exact&lt;/em&gt; same snippet of code in my
app :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-17T14:36:37+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T14:36:39+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi Michael,

thanks for the update!

You got me thrilled :)

I tried to use it, and the one major problem with restful routes still stands, at least in my test case.

This declaration:

@@
&lt;%= book_path('cz', 1) %&gt;
@@

is obviously fine, but:

@@
&lt;%= book_path(1) %&gt;
@@

gives an error:

@@
Exception while calling 'book_path(1)': #1, :controller=&gt;&quot;books&quot;, :action=&gt;&quot;show&quot;}, expected: {:controller=&gt;&quot;books&quot;, :action=&gt;&quot;show&quot;}, diff: {:locale=&gt;1}&gt;
@@

I have put the test app on Github, because frankly I don't know how to test/demonstrate it otherwise.

http://github.com/karmi/test_default_url_options/tree/master

Would you be so kind and have a look what I am doing wrong?

Thanks!

Karel</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Michael,&lt;/p&gt;
&lt;p&gt;thanks for the update!&lt;/p&gt;
&lt;p&gt;You got me thrilled :)&lt;/p&gt;
&lt;p&gt;I tried to use it, and the one major problem with restful routes
still stands, at least in my test case.&lt;/p&gt;
&lt;p&gt;This declaration:&lt;/p&gt;
&lt;p&gt;@@ &amp;lt;%= book_path('cz', 1) %&amp;gt; @@&lt;/p&gt;
&lt;p&gt;is obviously fine, but:&lt;/p&gt;
&lt;p&gt;@@ &amp;lt;%= book_path(1) %&amp;gt; @@&lt;/p&gt;
&lt;p&gt;gives an error:&lt;/p&gt;
&lt;p&gt;@@ Exception while calling 'book_path(1)': &lt;a href=&quot;/projects/8994/tickets/1&quot; title=&quot;Ticket #1&quot;&gt;#1&lt;/a&gt;,
:controller=&amp;gt;&quot;books&quot;, :action=&amp;gt;&quot;show&quot;}, expected:
{:controller=&amp;gt;&quot;books&quot;, :action=&amp;gt;&quot;show&quot;}, diff:
{:locale=&amp;gt;1}&amp;gt; @@&lt;/p&gt;
&lt;p&gt;I have put the test app on Github, because frankly I don't know
how to test/demonstrate it otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/karmi/test_default_url_options/tree/master&quot;&gt;http://github.com/karmi/test_def...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Would you be so kind and have a look what I am doing wrong?&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
&lt;p&gt;Karel&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-17T15:00:35+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T15:00:37+00:00</updated-at>
      <user-id type="integer">16364</user-id>
      <version type="integer">5</version>
      <user-name>Karel Mina&#345;&#237;k</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>You can't use positional arguments with default_url_options sadly, you have to use

book_path(:id=&gt;2)</body>
      <body-html>&lt;div&gt;&lt;p&gt;You can't use positional arguments with default_url_options
sadly, you have to use&lt;/p&gt;
&lt;p&gt;book_path(:id=&amp;gt;2)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-17T15:03:49+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T15:03:55+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">6</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ha! That *does* work! 

But it's kinda incovenient to use this syntax all over the place instead of &quot;normal&quot; &lt;code&gt;book_path(1)&lt;/code&gt;...

Do you think the positional arguments can be fixed or is it something too complex?

--karmi</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ha! That &lt;em&gt;does&lt;/em&gt; work!&lt;/p&gt;
&lt;p&gt;But it's kinda incovenient to use this syntax all over the place
instead of &quot;normal&quot; &lt;code&gt;book_path(1)&lt;/code&gt;...&lt;/p&gt;
&lt;p&gt;Do you think the positional arguments can be fixed or is it
something too complex?&lt;/p&gt;
&lt;p&gt;--karmi&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-17T15:06:04+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T15:06:10+00:00</updated-at>
      <user-id type="integer">16364</user-id>
      <version type="integer">7</version>
      <user-name>Karel Mina&#345;&#237;k</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is just a side-effect of how the positional arguments work, they fill in the arguments from left to right.

so it's passing '2' for your locale.  This has been like this for a while and is pretty much an inherent limitation unfortunately.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is just a side-effect of how the positional arguments work,
they fill in the arguments from left to right.&lt;/p&gt;
&lt;p&gt;so it's passing '2' for your locale. This has been like this for
a while and is pretty much an inherent limitation
unfortunately.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-17T15:06:08+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T15:06:09+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">8</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>OK, thanks very much for this update!

I think something like &lt;code&gt;book_path(1)&lt;/code&gt; *is* something (at least) I can live with :)

Updated the silly test app @ Github. Probably need some mention in the Guides/docrails.

Thanks again!

--karmi</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, thanks very much for this update!&lt;/p&gt;
&lt;p&gt;I think something like &lt;code&gt;book_path(1)&lt;/code&gt; &lt;em&gt;is&lt;/em&gt;
something (at least) I can live with :)&lt;/p&gt;
&lt;p&gt;Updated the silly test app @ Github. Probably need some mention
in the Guides/docrails.&lt;/p&gt;
&lt;p&gt;Thanks again!&lt;/p&gt;
&lt;p&gt;--karmi&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-17T15:14:44+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T15:14:49+00:00</updated-at>
      <user-id type="integer">16364</user-id>
      <version type="integer">9</version>
      <user-name>Karel Mina&#345;&#237;k</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It's also annoying as it breaks polymorphic_url sometimes, kinda frustrating.  This would be something that could be fixed in another ticket if you wanted to help.

But the positional arguments only have two options.  Fill from right to left, or left to right.

Using right to left would fix this problem, but would break people with values like locale at the right.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It's also annoying as it breaks polymorphic_url sometimes, kinda
frustrating. This would be something that could be fixed in another
ticket if you wanted to help.&lt;/p&gt;
&lt;p&gt;But the positional arguments only have two options. Fill from
right to left, or left to right.&lt;/p&gt;
&lt;p&gt;Using right to left would fix this problem, but would break
people with values like locale at the right.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-17T15:16:59+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T15:17:03+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">10</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I attached a diff (not a patch yet) that allows us to do:

  map.user ':locale/user/:id'

And then:

  I18n.locale = 'en-US'
  user_url(1) #=&gt; http://host/en-US/user/1

  I18n.locale = 'pt-BR'
  user_url(1) #=&gt; http://host/pt-BR/user/1

  I18n.locale = 'pt-BR'
  user_url('en-US', 1) #=&gt; http://host/en-US/user/1


It just adds some extra code to named routes helpers if those routes have a :locale as segment (very straightforward).

Maybe it can be a start point to work in a solution that doesn't require us to write:

  user_url(:id =&gt; 1)

Currently everything happens automagically, but we could use defaults key:

  map ':locale/user/:id', :defaults =&gt; { :locale =&gt; 'pt-BR' }

So if it has a default value, it's not always required as positional argument. Finally, that wouldn't solve all our problems, so we could add proc handling to defaults:

  map ':locale/user/:id', :defaults =&gt; { :locale =&gt; proc{ I18n.locale } }

Of course, just brainstorming. =)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I attached a diff (not a patch yet) that allows us to do:&lt;/p&gt;
&lt;p&gt;map.user ':locale/user/:id'&lt;/p&gt;
&lt;p&gt;And then:&lt;/p&gt;
&lt;p&gt;I18n.locale = 'en-US' user_url(1) #=&amp;gt; &lt;a href=&quot;http://host/en-US/user/1&quot;&gt;http://host/en-US/user/1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I18n.locale = 'pt-BR' user_url(1) #=&amp;gt; &lt;a href=&quot;http://host/pt-BR/user/1&quot;&gt;http://host/pt-BR/user/1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I18n.locale = 'pt-BR' user_url('en-US', 1) #=&amp;gt; &lt;a href=&quot;http://host/en-US/user/1&quot;&gt;http://host/en-US/user/1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It just adds some extra code to named routes helpers if those
routes have a :locale as segment (very straightforward).&lt;/p&gt;
&lt;p&gt;Maybe it can be a start point to work in a solution that doesn't
require us to write:&lt;/p&gt;
&lt;p&gt;user_url(:id =&amp;gt; 1)&lt;/p&gt;
&lt;p&gt;Currently everything happens automagically, but we could use
defaults key:&lt;/p&gt;
&lt;p&gt;map ':locale/user/:id', :defaults =&amp;gt; { :locale =&amp;gt; 'pt-BR'
}&lt;/p&gt;
&lt;p&gt;So if it has a default value, it's not always required as
positional argument. Finally, that wouldn't solve all our problems,
so we could add proc handling to defaults:&lt;/p&gt;
&lt;p&gt;map ':locale/user/:id', :defaults =&amp;gt; { :locale =&amp;gt; proc{
I18n.locale } }&lt;/p&gt;
&lt;p&gt;Of course, just brainstorming. =)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-17T17:22:18+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T17:22:22+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">11</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Right, this works for :locale, but not for anything else.

We can't fix this with a special case that only suits the people with this one particular problem.  after all, people can use Accept-Language or cookies for locales too :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Right, this works for :locale, but not for anything else.&lt;/p&gt;
&lt;p&gt;We can't fix this with a special case that only suits the people
with this one particular problem. after all, people can use
Accept-Language or cookies for locales too :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-17T18:56:38+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T18:56:42+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">12</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>&lt;blockquote&gt;Right, this works for :locale, but not for anything else.&lt;/blockquote&gt;

Yes, that is the problem with Jos&#233;s solution. &lt;code&gt;:locale&lt;/code&gt; isn't something which should be hardcoded in Rails codebase.

&lt;blockquote&gt;people can use Accept-Language or cookies for locales too&lt;/blockquote&gt;

No no no no no, please don't mention that again :) 

As &lt;a href=&quot;http://groups.google.com/group/rails-i18n/browse_thread/thread/de73dbd1309ae640/3344e4dbcb226cdf?lnk=gst&amp;q=restful#3344e4dbcb226cdf&quot;&gt;extensively debated&lt;/a&gt;, cookies/sessions are the worst storage for locale. The resource (&quot;page&quot;) should display the same content for everyone, no matter if (s)he has a cookie or not.

(And Accept-Language is only slightly better. It may work for &quot;application&quot; type of app, eg. Lighthouse, but not for a content-oriented app, such as a magazine, website, etc.)</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;Right, this works for :locale, but not for anything
else.&lt;/blockquote&gt;
&lt;p&gt;Yes, that is the problem with Jos&amp;eacute;s solution.
&lt;code&gt;:locale&lt;/code&gt; isn't something which should be hardcoded in
Rails codebase.&lt;/p&gt;
&lt;blockquote&gt;people can use Accept-Language or cookies for locales
too&lt;/blockquote&gt;
&lt;p&gt;No no no no no, please don't mention that again :)&lt;/p&gt;
&lt;p&gt;As &lt;a href=&quot;http://groups.google.com/group/rails-i18n/browse_thread/thread/de73dbd1309ae640/3344e4dbcb226cdf?lnk=gst&amp;amp;amp;q=restful#3344e4dbcb226cdf&quot;&gt;
extensively debated&lt;/a&gt;, cookies/sessions are the worst storage for
locale. The resource (&quot;page&quot;) should display the same content for
everyone, no matter if (s)he has a cookie or not.&lt;/p&gt;
&lt;p&gt;(And Accept-Language is only slightly better. It may work for
&quot;application&quot; type of app, eg. Lighthouse, but not for a
content-oriented app, such as a magazine, website, etc.)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-17T19:29:41+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T19:29:45+00:00</updated-at>
      <user-id type="integer">16364</user-id>
      <version type="integer">13</version>
      <user-name>Karel Mina&#345;&#237;k</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Exactly, my solution is hardcoded but I would gladly implement something.

We just need to define a syntax, for example:

  map.user ':locale/user/:id', :optional =&gt; :locale

Or:

  map.page '/page/:page/:id', :optional =&gt; :page

Then we could get the :locale or :page from default_url_options.

What do you think?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Exactly, my solution is hardcoded but I would gladly implement
something.&lt;/p&gt;
&lt;p&gt;We just need to define a syntax, for example:&lt;/p&gt;
&lt;p&gt;map.user ':locale/user/:id', :optional =&amp;gt; :locale&lt;/p&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;p&gt;map.page '/page/:page/:id', :optional =&amp;gt; :page&lt;/p&gt;
&lt;p&gt;Then we could get the :locale or :page from
default_url_options.&lt;/p&gt;
&lt;p&gt;What do you think?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-17T19:41:05+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.2 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2008-11-17T19:41:08+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">14</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I might have found the solution, tell me what you think: the keys provided by default_url_options are not filled by the options provided in the url_helper. Have a look at my patch, and tell me what you think.

Sorry for it to take so long. Had to wait for [this commit](http://github.com/rails/rails/commit/a2270ef2594b97891994848138614657363f2806 &quot;commit by fxn&quot;) to be able to find the right eval  ;)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I might have found the solution, tell me what you think: the
keys provided by default_url_options are not filled by the options
provided in the url_helper. Have a look at my patch, and tell me
what you think.&lt;/p&gt;
&lt;p&gt;Sorry for it to take so long. Had to wait for &lt;a href=&quot;http://github.com/rails/rails/commit/a2270ef2594b97891994848138614657363f2806&quot; title=&quot;commit by fxn&quot;&gt;this commit&lt;/a&gt; to be able to find the right
eval ;)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-10T01:34:48+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 2.2 l10n routing url_for
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2009-01-10T01:34:49+00:00</updated-at>
      <user-id type="integer">27931</user-id>
      <version type="integer">15</version>
      <user-name>iain</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>It looks like it will brake some things because you are always removing the route segments. Example:

@@@ ruby
class UsersController
  def default_url_options
    { :locale =&gt; 'en' }
  end

  def show
    # ...
    redirect_to user_url('en', 1)
  end
@@@

Most application are doing like that right?

But you are always removing the locale segment and then when you call zip in the route generation, 'en' will match the id segment and 1 will match nothing.

A solution could be:

@@@ ruby
if route_segments.size &gt; args.size &amp;&amp; respond_to?(:default_url_options) &amp;&amp; default_url_options.respond_to?(:symbolize_keys)
  route_segments -= default_url_options.symbolize_keys.keys
end
@@@

Doing &quot;route_segments.size &gt; args.size&quot; you will just remove the segment when not enough args are sent.

Finally, I'm not sure if your implementation will work on views and helpers, because default_url_options method is not defined there. Or you will have to ask it for the controller or you will have to define default_url_options there.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It looks like it will brake some things because you are always
removing the route segments. Example:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
class UsersController
  def default_url_options
    { :locale =&amp;gt; 'en' }
  end

  def show
    # ...
    redirect_to user_url('en', 1)
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Most application are doing like that right?&lt;/p&gt;
&lt;p&gt;But you are always removing the locale segment and then when you
call zip in the route generation, 'en' will match the id segment
and 1 will match nothing.&lt;/p&gt;
&lt;p&gt;A solution could be:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
if route_segments.size &amp;gt; args.size &amp;amp;&amp;amp; respond_to?(:default_url_options) &amp;amp;&amp;amp; default_url_options.respond_to?(:symbolize_keys)
  route_segments -= default_url_options.symbolize_keys.keys
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Doing &quot;route_segments.size &amp;gt; args.size&quot; you will just remove
the segment when not enough args are sent.&lt;/p&gt;
&lt;p&gt;Finally, I'm not sure if your implementation will work on views
and helpers, because default_url_options method is not defined
there. Or you will have to ask it for the controller or you will
have to define default_url_options there.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-10T08:29:23+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2009-01-10T08:29:29+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">16</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>&gt; Most application are doing like that right?

You wouldn't need to, because it is already specified in the default_url_options. It's a choice: either specify it in the default_url_options, or specify it namelessly in the user_url. Besides, you can still override it, using user_url(1, :locale =&gt; 'fr'), when you're changing locales for instance. Doing user_url('en', 1) isn't very DRY, when needing to specify the locale every time you call a URL. I doubt many applications will go through the trouble of changing their URLs everywhere, and I'm sure everyone wants to have to have clean method_calls.


&gt; Doing &quot;route_segments.size &gt; args.size&quot; you will just remove the segment when not enough args are sent.

In Rails 2.3, there are almost always more route_segments than args, because the format is a route_segment. formatted_user_url is depricated and one should do: user_url(1, :format =&gt; :js). Every route has the :format segment, which rarely gets used (only with non-html formats). Checking for route_segments.size would be useless.

&gt; Finally, I'm not sure if your implementation will work on views and helpers.

That is a big concern, that I've forgot. I'll look into it.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;Most application are doing like that right?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You wouldn't need to, because it is already specified in the
default_url_options. It's a choice: either specify it in the
default_url_options, or specify it namelessly in the user_url.
Besides, you can still override it, using user_url(1, :locale =&amp;gt;
'fr'), when you're changing locales for instance. Doing
user_url('en', 1) isn't very DRY, when needing to specify the
locale every time you call a URL. I doubt many applications will go
through the trouble of changing their URLs everywhere, and I'm sure
everyone wants to have to have clean method_calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Doing &quot;route_segments.size &amp;gt; args.size&quot; you will just remove
the segment when not enough args are sent.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In Rails 2.3, there are almost always more route_segments than
args, because the format is a route_segment. formatted_user_url is
depricated and one should do: user_url(1, :format =&amp;gt; :js). Every
route has the :format segment, which rarely gets used (only with
non-html formats). Checking for route_segments.size would be
useless.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally, I'm not sure if your implementation will work on views
and helpers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That is a big concern, that I've forgot. I'll look into it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-10T13:30:40+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2009-01-10T13:30:45+00:00</updated-at>
      <user-id type="integer">27931</user-id>
      <version type="integer">17</version>
      <user-name>iain</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>My point about &quot;all applications are doing like that&quot; is because your current implementation will break what our application are doing now, it breaks api.

For example, in the moment I define default_url_options in my controller with :locale, all route methods that I'm passing the locale as parameter will break.

Oh, and I totally forgot that Rails 2.3 changed to have :format as an optional parameter, great point.</body>
      <body-html>&lt;div&gt;&lt;p&gt;My point about &quot;all applications are doing like that&quot; is because
your current implementation will break what our application are
doing now, it breaks api.&lt;/p&gt;
&lt;p&gt;For example, in the moment I define default_url_options in my
controller with :locale, all route methods that I'm passing the
locale as parameter will break.&lt;/p&gt;
&lt;p&gt;Oh, and I totally forgot that Rails 2.3 changed to have :format
as an optional parameter, great point.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-10T13:51:06+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2009-01-10T13:51:12+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">18</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I adjusted the patch a bit, to work in views too.

Furthermore, I pass the options passed to user_url to default_url_options, so you can do something with that. The code in the eval gets a bit out of hand. It's now long and big. Blegh.

Your problem didn't make any sense to me, but when I finally worked out a more sensible example, I finally began to see the problem ;)

@@@ ruby
map.foo 'my_foo/:foo/:bar', :controller =&gt; 'users', :action =&gt; 'do_foo'

def default_url_options(options = {})
  { :foo =&gt; 'bang' }
end

foo_url(foo, bar)
@@@

This would raise an error, because foo would fill :bar and bar would be too much. But with the :format option in routes, I cannot check for it anymore. It's either working for custom routes, or for resources. If format is such a special case, I could leave it out of the equation:

@@@ ruby
if (route_segments - [:format]).size &gt; args.size .....
@@@

Don't know how you feel about that though.

I have included a new patch, including the changes I mentioned above.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I adjusted the patch a bit, to work in views too.&lt;/p&gt;
&lt;p&gt;Furthermore, I pass the options passed to user_url to
default_url_options, so you can do something with that. The code in
the eval gets a bit out of hand. It's now long and big. Blegh.&lt;/p&gt;
&lt;p&gt;Your problem didn't make any sense to me, but when I finally
worked out a more sensible example, I finally began to see the
problem ;)&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
map.foo 'my_foo/:foo/:bar', :controller =&amp;gt; 'users', :action =&amp;gt; 'do_foo'

def default_url_options(options = {})
  { :foo =&amp;gt; 'bang' }
end

foo_url(foo, bar)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This would raise an error, because foo would fill :bar and bar
would be too much. But with the :format option in routes, I cannot
check for it anymore. It's either working for custom routes, or for
resources. If format is such a special case, I could leave it out
of the equation:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
if (route_segments - [:format]).size &amp;gt; args.size .....
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Don't know how you feel about that though.&lt;/p&gt;
&lt;p&gt;I have included a new patch, including the changes I mentioned
above.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-10T16:06:37+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2009-01-10T16:06:38+00:00</updated-at>
      <user-id type="integer">27931</user-id>
      <version type="integer">19</version>
      <user-name>iain</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Great, but why don't you try to use defined?. It would simplify things a little bit:

@@@ ruby
default_segments = if defined?(default_url_options)
  default_url_options
elsif defined?(controller.default_url_options)
  controller.default_url_options
else
  nil
end

if default_segments.is_a?(Hash)
  route_segments -= default_segments.symbolize_keys.keys
end
@@@

But I'm not sure if it won't break anything. I've already tried to solve this ticket and my first attempt was to make :locale (and only :locale) as optional (you can see the patch in this thread). It was not accepted because it's a very specific approach.

Then when I attempted to make it &quot;generic&quot;, as the one you are doing now, I couldn't get it done quickly, I ran out of time. Our biggest problem is that we are trying to guess which parameters are optional and guessing at this point could be dangerous.

Maybe the best solution would be to specify (not guess) that a segment is optional by assigning a default value. Rails has such API:

@@@ ruby
  map.connect ':controller/:action/:id', :path_prefix =&gt; ':locale', :defaults =&gt; { :locale =&gt; 'en' }
@@@

Then we just think that we have to overwrite :locale using default_url_options and everytihg will be solved. But we face some problems:

1. The hash defined in default_url_options will NOT overwrite the one specified in :defaults.

2. The segment specified as default cannot be followed by a dynamic segment. This means that we can't do this:

@@@ ruby
  map.connect ':locale/users/:username', :path_prefix =&gt; ':locale', :defaults =&gt; { :locale =&gt; 'en' }
@@@

3. map.resources does not accept :defaults option (as long as I tested it, it was ignored)

However, I cannot say exactly how many work is needed to solve those problems.

When Rails :format was made optional, it was just created a new class for it and they didn't had to handle such scenarios.

That said, maybe you could also create a new class to handle :locale segment. It would probably take some time before it gets into core (if it does) but until there it could be used as plugin. :)

Sorry for the long reply, I'm just trying to share what I discovered so far about this issue. :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Great, but why don't you try to use defined?. It would simplify
things a little bit:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
default_segments = if defined?(default_url_options)
  default_url_options
elsif defined?(controller.default_url_options)
  controller.default_url_options
else
  nil
end

if default_segments.is_a?(Hash)
  route_segments -= default_segments.symbolize_keys.keys
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But I'm not sure if it won't break anything. I've already tried
to solve this ticket and my first attempt was to make :locale (and
only :locale) as optional (you can see the patch in this thread).
It was not accepted because it's a very specific approach.&lt;/p&gt;
&lt;p&gt;Then when I attempted to make it &quot;generic&quot;, as the one you are
doing now, I couldn't get it done quickly, I ran out of time. Our
biggest problem is that we are trying to guess which parameters are
optional and guessing at this point could be dangerous.&lt;/p&gt;
&lt;p&gt;Maybe the best solution would be to specify (not guess) that a
segment is optional by assigning a default value. Rails has such
API:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  map.connect ':controller/:action/:id', :path_prefix =&amp;gt; ':locale', :defaults =&amp;gt; { :locale =&amp;gt; 'en' }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we just think that we have to overwrite :locale using
default_url_options and everytihg will be solved. But we face some
problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The hash defined in default_url_options will NOT overwrite the
one specified in :defaults.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The segment specified as default cannot be followed by a dynamic
segment. This means that we can't do this:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  map.connect ':locale/users/:username', :path_prefix =&amp;gt; ':locale', :defaults =&amp;gt; { :locale =&amp;gt; 'en' }
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;map.resources does not accept :defaults option (as long as I
tested it, it was ignored)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, I cannot say exactly how many work is needed to solve
those problems.&lt;/p&gt;
&lt;p&gt;When Rails :format was made optional, it was just created a new
class for it and they didn't had to handle such scenarios.&lt;/p&gt;
&lt;p&gt;That said, maybe you could also create a new class to handle
:locale segment. It would probably take some time before it gets
into core (if it does) but until there it could be used as plugin.
:)&lt;/p&gt;
&lt;p&gt;Sorry for the long reply, I'm just trying to share what I
discovered so far about this issue. :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-10T17:26:12+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2009-01-10T17:26:14+00:00</updated-at>
      <user-id type="integer">19965</user-id>
      <version type="integer">20</version>
      <user-name>Jos&#233; Valim</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>&gt; Great, but why don't you try to use defined?

Breaks too much tests... (although I might be able to clean it up a bit)

&gt; Sorry for the long reply

Fantastic :-)

I have been mulling it over, and what if the options passed to user_url() are passed to default_url_options as well? This way you can exclude it when needed.

@@@ ruby
def default_url_options(method, *args)
  options = args.extract_options!
  if method == :user and args.size == 2
    {}
  else
    { :locale =&gt; I18n.locale }
  end
end
@@@

This way you can keep your way of doing it, with changing it in one special location, and people start new projects can start it anew, without the check. I can even check if you use this message by checking if you use *args (i.e. a negative arity).

So, as long as you don't use the splat-operator, no args are removed, if you do, you opt-in for the new way of doing things: every key you specify in default_url_options can only be overridden when it is specified specifically in the user_url method.

This is an API change though, but a sane one I think.</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;Great, but why don't you try to use defined?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Breaks too much tests... (although I might be able to clean it
up a bit)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sorry for the long reply&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Fantastic :-)&lt;/p&gt;
&lt;p&gt;I have been mulling it over, and what if the options passed to
user_url() are passed to default_url_options as well? This way you
can exclude it when needed.&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
def default_url_options(method, *args)
  options = args.extract_options!
  if method == :user and args.size == 2
    {}
  else
    { :locale =&amp;gt; I18n.locale }
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This way you can keep your way of doing it, with changing it in
one special location, and people start new projects can start it
anew, without the check. I can even check if you use this message
by checking if you use *args (i.e. a negative arity).&lt;/p&gt;
&lt;p&gt;So, as long as you don't use the splat-operator, no args are
removed, if you do, you opt-in for the new way of doing things:
every key you specify in default_url_options can only be overridden
when it is specified specifically in the user_url method.&lt;/p&gt;
&lt;p&gt;This is an API change though, but a sane one I think.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-12T20:42:16+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2009-01-12T20:42:22+00:00</updated-at>
      <user-id type="integer">27931</user-id>
      <version type="integer">21</version>
      <user-name>iain</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>will this be included in the upcoming rails 2.3 or will we wait until the 3.0 or some 2.3.x?</body>
      <body-html>&lt;div&gt;&lt;p&gt;will this be included in the upcoming rails 2.3 or will we wait
until the 3.0 or some 2.3.x?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-16T14:26:28+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2009-02-16T14:26:31+00:00</updated-at>
      <user-id type="integer">29872</user-id>
      <version type="integer">22</version>
      <user-name>xdmx</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Wonder if maybe we could extend the routes DSL to support exclusion of some route segment params from the list of positional arguments altogether?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Wonder if maybe we could extend the routes DSL to support
exclusion of some route segment params from the list of positional
arguments altogether?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-18T00:53:38+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2009-02-18T00:53:40+00:00</updated-at>
      <user-id type="integer">4141</user-id>
      <version type="integer">23</version>
      <user-name>Brendan Baldwin</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Could do something like:

    map.with_options :prefix =&gt; ':locale',
                     :skip_arguments =&gt; [:locale] do |loc|
      loc.resources :things
    end

Or force/rework the positional arguments order:

    map.with_options :prefix =&gt; ':locale' do |loc|
      loc.resources :things, :param_order =&gt; [:id]
    end

In both of these cases, we would still use default_url_options to patch in the locale default, but methods like this would still work:

    thing_url(123)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could do something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;map.with_options :prefix =&amp;gt; ':locale',
                 :skip_arguments =&amp;gt; [:locale] do |loc|
  loc.resources :things
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Or force/rework the positional arguments order:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;map.with_options :prefix =&amp;gt; ':locale' do |loc|
  loc.resources :things, :param_order =&amp;gt; [:id]
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In both of these cases, we would still use default_url_options
to patch in the locale default, but methods like this would still
work:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;thing_url(123)
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-02-18T01:03:35+00:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2009-02-18T01:03:37+00:00</updated-at>
      <user-id type="integer">4141</user-id>
      <version type="integer">24</version>
      <user-name>Brendan Baldwin</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I'm using default_url_options to persist a query_parameter throughout all actions and views of a particular controller when that query parameter is initially present. Just so you understand my use case if the parameter is present a popup layout gets rendered instead of the full application layout and some other magic occurs.

I've had no problem using this EXCEPT for the new resource path named route as in:

map.resources :posts

new_post_path =&gt; does not retain the default url options

Any updates on this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm using default_url_options to persist a query_parameter
throughout all actions and views of a particular controller when
that query parameter is initially present. Just so you understand
my use case if the parameter is present a popup layout gets
rendered instead of the full application layout and some other
magic occurs.&lt;/p&gt;
&lt;p&gt;I've had no problem using this EXCEPT for the new resource path
named route as in:&lt;/p&gt;
&lt;p&gt;map.resources :posts&lt;/p&gt;
&lt;p&gt;new_post_path =&amp;gt; does not retain the default url options&lt;/p&gt;
&lt;p&gt;Any updates on this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-06-10T16:44:17+01:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2009-06-10T16:44:17+01:00</updated-at>
      <user-id type="integer">56676</user-id>
      <version type="integer">25</version>
      <user-name>Kunal Shah</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>PDF to JPG Converter is a more efficient pdf to jpg conversion software
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to image converter&lt;/a&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to tiff converter&lt;/a&gt;
which is able to convert pdf to jpg format with original output quality and fast conversion speed.</body>
      <body-html>&lt;div&gt;&lt;p&gt;PDF to JPG Converter is a more efficient pdf to jpg conversion
software&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-creator.html&quot;&gt;PDF Creator&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-jpg-converter.html&quot;&gt;pdf to jpg
converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-image-converter.html&quot;&gt;pdf to
image converter&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.oxpdf.com/pdf-to-tiff-converter.html&quot;&gt;pdf to
tiff converter&lt;/a&gt;&lt;br&gt;
which is able to convert pdf to jpg format with original output
quality and fast conversion speed.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-22T04:50:56+01:00</created-at>
      <creator-id type="integer">27931</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1251</number>
      <permalink>default_url_options-cant-be-used-with-named-routes</permalink>
      <priority type="integer">656</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>2.3 l10n routing url_for</tag>
      <title>default_url_options can't be used with named routes</title>
      <updated-at type="datetime">2011-04-22T06:48:04+01:00</updated-at>
      <user-id type="integer">146598</user-id>
      <version type="integer">26</version>
      <user-name>machen</user-name>
      <creator-name>iain</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1251</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>40e3e52a11449fd325dff27a5adde75bf178964a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-17T17:22:18+00:00</created-at>
      <filename>routes_locale_wise.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">62831</id>
      <size type="integer">1404</size>
      <uploader-id type="integer">19965</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/62831/routes_locale_wise.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>e20cf2cbfed4dd0b76e78e3257163a966f47d525</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-10T01:34:48+00:00</created-at>
      <filename>default_url_options.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">77050</id>
      <size type="integer">9857</size>
      <uploader-id type="integer">27931</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/77050/default_url_options.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>44a3ff854bb48af4e7f6946a7220827638f749f8</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-10T16:06:37+00:00</created-at>
      <filename>default_url_options-2.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">77108</id>
      <size type="integer">21978</size>
      <uploader-id type="integer">27931</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/77108/default_url_options-2.patch</url>
    </attachment>
  </attachments>
</ticket>
