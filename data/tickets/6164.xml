<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2010-12-14T18:54:09+00:00</created-at>
  <creator-id type="integer">32604</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6164</number>
  <permalink>eager-load-of-a-model-with-a-default_scope-of-select-also-appends-table-to-the-query</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>open</state>
  <tag>association default_scope patch</tag>
  <title>Eager load of a model with a default_scope of &quot;select&quot; also appends &quot;table&quot;.* to the query</title>
  <updated-at type="datetime">2011-03-22T04:15:25+00:00</updated-at>
  <user-id type="integer">32604</user-id>
  <version type="integer">6</version>
  <user-name>Joseph Palermo</user-name>
  <creator-name>Joseph Palermo</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6164</url>
  <priority-name nil="true"></priority-name>
  <original-body>class Thing &lt; ActiveRecord::Base
  has_many :posts
end
class Post &lt; ActiveRecord::Base
  default_scope select(column_names - ['body'])
end

Thing.includes(:posts).all does the following for the posts query:

SELECT id, fk_column_id, column1, etc, posts.* FROM posts WHERE (pages.fk_column&gt;in IN(1,2,3))

It takes the default select scope, but also appends posts.* to the end of it.

This is caused by the :select find_option in the find_associated_records inside of association_preload.rb.  This is what it is now:

:select =&gt; preload_options[:select] || options[:select] || Arel::SqlLiteral.new(&quot;#{table_name}.*&quot;)

The third || case is not needed, since that is the default for any select and it causes the above behavior.

Unless of course this is used to for some edge case behavior?  I'm guessing not, since that parameter (or something like it) was in the first commit of association_preload.rb

I can do the test and patch.  I wanted to check that this wasn't the desired behavior first though.</original-body>
  <latest-body>class Thing &lt; ActiveRecord::Base
  has_many :posts
end
class Post &lt; ActiveRecord::Base
  default_scope select(column_names - ['body'])
end

Thing.includes(:posts).all does the following for the posts query:

SELECT id, fk_column_id, column1, etc, posts.* FROM posts WHERE (pages.fk_column&gt;in IN(1,2,3))

It takes the default select scope, but also appends posts.* to the end of it.

This is caused by the :select find_option in the find_associated_records inside of association_preload.rb.  This is what it is now:

:select =&gt; preload_options[:select] || options[:select] || Arel::SqlLiteral.new(&quot;#{table_name}.*&quot;)

The third || case is not needed, since that is the default for any select and it causes the above behavior.

Unless of course this is used to for some edge case behavior?  I'm guessing not, since that parameter (or something like it) was in the first commit of association_preload.rb

I can do the test and patch.  I wanted to check that this wasn't the desired behavior first though.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;class Thing &amp;lt; ActiveRecord::Base&lt;br&gt;
has_many :posts end&lt;br&gt;
class Post &amp;lt; ActiveRecord::Base&lt;br&gt;
default_scope select(column_names - ['body']) end&lt;/p&gt;
&lt;p&gt;Thing.includes(:posts).all does the following for the posts
query:&lt;/p&gt;
&lt;p&gt;SELECT id, fk_column_id, column1, etc, posts.* FROM posts WHERE
(pages.fk_column&amp;gt;in IN(1,2,3))&lt;/p&gt;
&lt;p&gt;It takes the default select scope, but also appends posts.* to
the end of it.&lt;/p&gt;
&lt;p&gt;This is caused by the :select find_option in the
find_associated_records inside of association_preload.rb. This is
what it is now:&lt;/p&gt;
&lt;p&gt;:select =&amp;gt; preload_options[:select] || options[:select] ||
Arel::SqlLiteral.new(&quot;#{table_name}.*&quot;)&lt;/p&gt;
&lt;p&gt;The third || case is not needed, since that is the default for
any select and it causes the above behavior.&lt;/p&gt;
&lt;p&gt;Unless of course this is used to for some edge case behavior?
I'm guessing not, since that parameter (or something like it) was
in the first commit of association_preload.rb&lt;/p&gt;
&lt;p&gt;I can do the test and patch. I wanted to check that this wasn't
the desired behavior first though.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>class Thing &lt; ActiveRecord::Base
  has_many :posts
end
class Post &lt; ActiveRecord::Base
  default_scope select(column_names - ['body'])
end

Thing.includes(:posts).all does the following for the posts query:

SELECT id, fk_column_id, column1, etc, posts.* FROM posts WHERE (pages.fk_column&gt;in IN(1,2,3))

It takes the default select scope, but also appends posts.* to the end of it.

This is caused by the :select find_option in the find_associated_records inside of association_preload.rb.  This is what it is now:

:select =&gt; preload_options[:select] || options[:select] || Arel::SqlLiteral.new(&quot;#{table_name}.*&quot;)

The third || case is not needed, since that is the default for any select and it causes the above behavior.

Unless of course this is used to for some edge case behavior?  I'm guessing not, since that parameter (or something like it) was in the first commit of association_preload.rb

I can do the test and patch.  I wanted to check that this wasn't the desired behavior first though.</body>
      <body-html>&lt;div&gt;&lt;p&gt;class Thing &amp;lt; ActiveRecord::Base&lt;br&gt;
has_many :posts end&lt;br&gt;
class Post &amp;lt; ActiveRecord::Base&lt;br&gt;
default_scope select(column_names - ['body']) end&lt;/p&gt;
&lt;p&gt;Thing.includes(:posts).all does the following for the posts
query:&lt;/p&gt;
&lt;p&gt;SELECT id, fk_column_id, column1, etc, posts.* FROM posts WHERE
(pages.fk_column&amp;gt;in IN(1,2,3))&lt;/p&gt;
&lt;p&gt;It takes the default select scope, but also appends posts.* to
the end of it.&lt;/p&gt;
&lt;p&gt;This is caused by the :select find_option in the
find_associated_records inside of association_preload.rb. This is
what it is now:&lt;/p&gt;
&lt;p&gt;:select =&amp;gt; preload_options[:select] || options[:select] ||
Arel::SqlLiteral.new(&quot;#{table_name}.*&quot;)&lt;/p&gt;
&lt;p&gt;The third || case is not needed, since that is the default for
any select and it causes the above behavior.&lt;/p&gt;
&lt;p&gt;Unless of course this is used to for some edge case behavior?
I'm guessing not, since that parameter (or something like it) was
in the first commit of association_preload.rb&lt;/p&gt;
&lt;p&gt;I can do the test and patch. I wanted to check that this wasn't
the desired behavior first though.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-14T18:54:09+00:00</created-at>
      <creator-id type="integer">32604</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6164</number>
      <permalink>eager-load-of-a-model-with-a-default_scope-of-select-also-appends-table-to-the-query</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Eager load of a model with a default_scope of &quot;select&quot; also appends &quot;table&quot;.* to the query</title>
      <updated-at type="datetime">2010-12-14T18:54:12+00:00</updated-at>
      <user-id type="integer">32604</user-id>
      <version type="integer">1</version>
      <user-name>Joseph Palermo</user-name>
      <creator-name>Joseph Palermo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6164</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-15T00:00:06+00:00</created-at>
      <creator-id type="integer">32604</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6164</number>
      <permalink>eager-load-of-a-model-with-a-default_scope-of-select-also-appends-table-to-the-query</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>Eager load of a model with a default_scope of &quot;select&quot; also appends &quot;table&quot;.* to the query</title>
      <updated-at type="datetime">2011-03-15T00:00:10+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">2</version>
      <user-name>rails</user-name>
      <creator-name>Joseph Palermo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6164</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-15T00:00:07+00:00</created-at>
      <creator-id type="integer">32604</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6164</number>
      <permalink>eager-load-of-a-model-with-a-default_scope-of-select-also-appends-table-to-the-query</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Eager load of a model with a default_scope of &quot;select&quot; also appends &quot;table&quot;.* to the query</title>
      <updated-at type="datetime">2011-03-15T00:00:13+00:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">3</version>
      <user-name>rails</user-name>
      <creator-name>Joseph Palermo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6164</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I just verified this behavior still exists in Rails 3.  I'll create a test case and a fix in the next couple of days.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I just verified this behavior still exists in Rails 3. I'll
create a test case and a fix in the next couple of days.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-16T05:02:16+00:00</created-at>
      <creator-id type="integer">32604</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6164</number>
      <permalink>eager-load-of-a-model-with-a-default_scope-of-select-also-appends-table-to-the-query</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag nil="true"></tag>
      <title>Eager load of a model with a default_scope of &quot;select&quot; also appends &quot;table&quot;.* to the query</title>
      <updated-at type="datetime">2011-03-16T05:02:18+00:00</updated-at>
      <user-id type="integer">32604</user-id>
      <version type="integer">4</version>
      <user-name>Joseph Palermo</user-name>
      <creator-name>Joseph Palermo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6164</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Here is a patch with tests and the fix.  Simply removing &quot;|| table[Arel.star]&quot; broke HABTM.  So now it is only applied to HABTM eager loads.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Here is a patch with tests and the fix. Simply removing &quot;||
table[Arel.star]&quot; broke HABTM. So now it is only applied to HABTM
eager loads.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-16T15:36:04+00:00</created-at>
      <creator-id type="integer">32604</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6164</number>
      <permalink>eager-load-of-a-model-with-a-default_scope-of-select-also-appends-table-to-the-query</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>association default_scope patch</tag>
      <title>Eager load of a model with a default_scope of &quot;select&quot; also appends &quot;table&quot;.* to the query</title>
      <updated-at type="datetime">2011-03-16T15:36:07+00:00</updated-at>
      <user-id type="integer">32604</user-id>
      <version type="integer">5</version>
      <user-name>Joseph Palermo</user-name>
      <creator-name>Joseph Palermo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6164</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Missed the re-open step.
[state:open]</body>
      <body-html>&lt;div&gt;&lt;p&gt;Missed the re-open step.&lt;br&gt;
[state:open]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-22T04:15:22+00:00</created-at>
      <creator-id type="integer">32604</creator-id>
      <diffable-attributes type="yaml">--- 
:state: stale
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6164</number>
      <permalink>eager-load-of-a-model-with-a-default_scope-of-select-also-appends-table-to-the-query</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>association default_scope patch</tag>
      <title>Eager load of a model with a default_scope of &quot;select&quot; also appends &quot;table&quot;.* to the query</title>
      <updated-at type="datetime">2011-03-22T04:15:25+00:00</updated-at>
      <user-id type="integer">32604</user-id>
      <version type="integer">6</version>
      <user-name>Joseph Palermo</user-name>
      <creator-name>Joseph Palermo</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6164</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>097d6d8add00d163b3d58095b0a6eb86af22a387</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-03-16T15:36:04+00:00</created-at>
      <filename>remove_extra_select_when_associ.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">961888</id>
      <size type="integer">4385</size>
      <uploader-id type="integer">32604</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/961888/remove_extra_select_when_associ.diff</url>
    </attachment>
  </attachments>
</ticket>
