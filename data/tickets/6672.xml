<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-04-05T11:40:46+01:00</created-at>
  <creator-id type="integer">73562</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6672</number>
  <permalink>supports_disable_referential_integrity-is-wrong</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>&quot;postgresql tests&quot;</tag>
  <title>supports_disable_referential_integrity? is wrong</title>
  <updated-at type="datetime">2011-04-05T11:40:47+01:00</updated-at>
  <user-id type="integer">73562</user-id>
  <version type="integer">1</version>
  <user-name>Marcin Ma&#324;k</user-name>
  <creator-name>Marcin Ma&#324;k</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6672</url>
  <priority-name nil="true"></priority-name>
  <original-body>supports_disable_referential_integrity? in postgresql adapter on 2.3 stable looks like this:

     def supports_disable_referential_integrity?() #:nodoc:
        version = query(&quot;SHOW server_version&quot;)[0][0].split('.')
        (version[0].to_i &gt;= 8 &amp;&amp; version[1].to_i &gt;= 1) ? true : false
      rescue
        return false
      end


So it returns false for 9.0.x , which is wrong.

The correct version is in 3.0 branch:

     def supports_disable_referential_integrity?()
       postgresql_version &gt;= 80100
     end

Anybody cares to backpatch?</original-body>
  <latest-body>supports_disable_referential_integrity? in postgresql adapter on 2.3 stable looks like this:

     def supports_disable_referential_integrity?() #:nodoc:
        version = query(&quot;SHOW server_version&quot;)[0][0].split('.')
        (version[0].to_i &gt;= 8 &amp;&amp; version[1].to_i &gt;= 1) ? true : false
      rescue
        return false
      end


So it returns false for 9.0.x , which is wrong.

The correct version is in 3.0 branch:

     def supports_disable_referential_integrity?()
       postgresql_version &gt;= 80100
     end

Anybody cares to backpatch?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;supports_disable_referential_integrity? in postgresql adapter on
2.3 stable looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; def supports_disable_referential_integrity?() #:nodoc:
    version = query(&quot;SHOW server_version&quot;)[0][0].split('.')
    (version[0].to_i &amp;gt;= 8 &amp;amp;&amp;amp; version[1].to_i &amp;gt;= 1) ? true : false
  rescue
    return false
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So it returns false for 9.0.x , which is wrong.&lt;/p&gt;
&lt;p&gt;The correct version is in 3.0 branch:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; def supports_disable_referential_integrity?()
   postgresql_version &amp;gt;= 80100
 end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Anybody cares to backpatch?&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>supports_disable_referential_integrity? in postgresql adapter on 2.3 stable looks like this:

     def supports_disable_referential_integrity?() #:nodoc:
        version = query(&quot;SHOW server_version&quot;)[0][0].split('.')
        (version[0].to_i &gt;= 8 &amp;&amp; version[1].to_i &gt;= 1) ? true : false
      rescue
        return false
      end


So it returns false for 9.0.x , which is wrong.

The correct version is in 3.0 branch:

     def supports_disable_referential_integrity?()
       postgresql_version &gt;= 80100
     end

Anybody cares to backpatch?</body>
      <body-html>&lt;div&gt;&lt;p&gt;supports_disable_referential_integrity? in postgresql adapter on
2.3 stable looks like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; def supports_disable_referential_integrity?() #:nodoc:
    version = query(&quot;SHOW server_version&quot;)[0][0].split('.')
    (version[0].to_i &amp;gt;= 8 &amp;amp;&amp;amp; version[1].to_i &amp;gt;= 1) ? true : false
  rescue
    return false
  end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So it returns false for 9.0.x , which is wrong.&lt;/p&gt;
&lt;p&gt;The correct version is in 3.0 branch:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; def supports_disable_referential_integrity?()
   postgresql_version &amp;gt;= 80100
 end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Anybody cares to backpatch?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-05T11:40:46+01:00</created-at>
      <creator-id type="integer">73562</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6672</number>
      <permalink>supports_disable_referential_integrity-is-wrong</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>&quot;postgresql tests&quot;</tag>
      <title>supports_disable_referential_integrity? is wrong</title>
      <updated-at type="datetime">2011-04-05T11:40:47+01:00</updated-at>
      <user-id type="integer">73562</user-id>
      <version type="integer">1</version>
      <user-name>Marcin Ma&#324;k</user-name>
      <creator-name>Marcin Ma&#324;k</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6672</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
