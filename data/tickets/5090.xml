<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-12T07:51:23+01:00</created-at>
  <creator-id type="integer">34710</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5090</number>
  <permalink>allow-to-customize-the-gemfile-name-via-an-environment-variable</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>bootrb bundler &quot;maven jruby&quot;</tag>
  <title>allow to customize the Gemfile name via an environment variable</title>
  <updated-at type="datetime">2011-02-02T19:25:28+00:00</updated-at>
  <user-id type="integer">34710</user-id>
  <version type="integer">4</version>
  <user-name>kristian</user-name>
  <creator-name>kristian</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5090</url>
  <priority-name nil="true"></priority-name>
  <original-body>I am working on a plugin for maven (a java build and project management tool) to offer ruby, gem, rspec and rails support. the main difficulty with rails3 is that bundler and the maven plugin overlap quite a bit on functional level. so I was looking for ways let bundler and maven coexists without favoring one or the other.

the current approach is to patch the config/boot.rb in a way that is does allow to use Gemfile.maven as &quot;Gemfile&quot; (the patched file looks like this http://github.com/mkristian/jruby-maven-plugins/blob/next/rails3-maven-plugin/src/main/resources/boot.rb). so basically it obeys the environment variable BUNDLE_GEMFILE and uses it if set prior to setting the rails default.

with this patch one can take a newly created rails application and apply an maven archetype (like rails generators) to mavenize the application in a way that you can still use the rails application in the usual way as well use maven to run the webrick/mongrel server, to call generators or rake tasks or bundle the whole application into a war file for deployment.

so my aim is really to keep the rails application as it is and add a few files to use the very same with maven. but right now I need to patch the config/boot.rb to achieve this which is against the actual spirit.

so the attached patch does the same patch as maven does and I added an unit test which test most functionality. the patch is trivial but would let tools like maven to behave non invasive and maybe there are other usecases for more then one Gemfile (MRI versus JRuby when you need to lock down you dependencies, etc)</original-body>
  <latest-body>I am working on a plugin for maven (a java build and project management tool) to offer ruby, gem, rspec and rails support. the main difficulty with rails3 is that bundler and the maven plugin overlap quite a bit on functional level. so I was looking for ways let bundler and maven coexists without favoring one or the other.

the current approach is to patch the config/boot.rb in a way that is does allow to use Gemfile.maven as &quot;Gemfile&quot; (the patched file looks like this http://github.com/mkristian/jruby-maven-plugins/blob/next/rails3-maven-plugin/src/main/resources/boot.rb). so basically it obeys the environment variable BUNDLE_GEMFILE and uses it if set prior to setting the rails default.

with this patch one can take a newly created rails application and apply an maven archetype (like rails generators) to mavenize the application in a way that you can still use the rails application in the usual way as well use maven to run the webrick/mongrel server, to call generators or rake tasks or bundle the whole application into a war file for deployment.

so my aim is really to keep the rails application as it is and add a few files to use the very same with maven. but right now I need to patch the config/boot.rb to achieve this which is against the actual spirit.

so the attached patch does the same patch as maven does and I added an unit test which test most functionality. the patch is trivial but would let tools like maven to behave non invasive and maybe there are other usecases for more then one Gemfile (MRI versus JRuby when you need to lock down you dependencies, etc)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I am working on a plugin for maven (a java build and project
management tool) to offer ruby, gem, rspec and rails support. the
main difficulty with rails3 is that bundler and the maven plugin
overlap quite a bit on functional level. so I was looking for ways
let bundler and maven coexists without favoring one or the
other.&lt;/p&gt;
&lt;p&gt;the current approach is to patch the config/boot.rb in a way
that is does allow to use Gemfile.maven as &quot;Gemfile&quot; (the patched
file looks like this &lt;a href=
&quot;http://github.com/mkristian/jruby-maven-plugins/blob/next/rails3-maven-plugin/src/main/resources/boot.rb)&quot;&gt;
http://github.com/mkristian/jruby-maven-plugins/blob/next/rails3-ma...&lt;/a&gt;.
so basically it obeys the environment variable BUNDLE_GEMFILE and
uses it if set prior to setting the rails default.&lt;/p&gt;
&lt;p&gt;with this patch one can take a newly created rails application
and apply an maven archetype (like rails generators) to mavenize
the application in a way that you can still use the rails
application in the usual way as well use maven to run the
webrick/mongrel server, to call generators or rake tasks or bundle
the whole application into a war file for deployment.&lt;/p&gt;
&lt;p&gt;so my aim is really to keep the rails application as it is and
add a few files to use the very same with maven. but right now I
need to patch the config/boot.rb to achieve this which is against
the actual spirit.&lt;/p&gt;
&lt;p&gt;so the attached patch does the same patch as maven does and I
added an unit test which test most functionality. the patch is
trivial but would let tools like maven to behave non invasive and
maybe there are other usecases for more then one Gemfile (MRI
versus JRuby when you need to lock down you dependencies, etc)&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I am working on a plugin for maven (a java build and project management tool) to offer ruby, gem, rspec and rails support. the main difficulty with rails3 is that bundler and the maven plugin overlap quite a bit on functional level. so I was looking for ways let bundler and maven coexists without favoring one or the other.

the current approach is to patch the config/boot.rb in a way that is does allow to use Gemfile.maven as &quot;Gemfile&quot; (the patched file looks like this http://github.com/mkristian/jruby-maven-plugins/blob/next/rails3-maven-plugin/src/main/resources/boot.rb). so basically it obeys the environment variable BUNDLE_GEMFILE and uses it if set prior to setting the rails default.

with this patch one can take a newly created rails application and apply an maven archetype (like rails generators) to mavenize the application in a way that you can still use the rails application in the usual way as well use maven to run the webrick/mongrel server, to call generators or rake tasks or bundle the whole application into a war file for deployment.

so my aim is really to keep the rails application as it is and add a few files to use the very same with maven. but right now I need to patch the config/boot.rb to achieve this which is against the actual spirit.

so the attached patch does the same patch as maven does and I added an unit test which test most functionality. the patch is trivial but would let tools like maven to behave non invasive and maybe there are other usecases for more then one Gemfile (MRI versus JRuby when you need to lock down you dependencies, etc)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I am working on a plugin for maven (a java build and project
management tool) to offer ruby, gem, rspec and rails support. the
main difficulty with rails3 is that bundler and the maven plugin
overlap quite a bit on functional level. so I was looking for ways
let bundler and maven coexists without favoring one or the
other.&lt;/p&gt;
&lt;p&gt;the current approach is to patch the config/boot.rb in a way
that is does allow to use Gemfile.maven as &quot;Gemfile&quot; (the patched
file looks like this &lt;a href=
&quot;http://github.com/mkristian/jruby-maven-plugins/blob/next/rails3-maven-plugin/src/main/resources/boot.rb)&quot;&gt;
http://github.com/mkristian/jruby-maven-plugins/blob/next/rails3-ma...&lt;/a&gt;.
so basically it obeys the environment variable BUNDLE_GEMFILE and
uses it if set prior to setting the rails default.&lt;/p&gt;
&lt;p&gt;with this patch one can take a newly created rails application
and apply an maven archetype (like rails generators) to mavenize
the application in a way that you can still use the rails
application in the usual way as well use maven to run the
webrick/mongrel server, to call generators or rake tasks or bundle
the whole application into a war file for deployment.&lt;/p&gt;
&lt;p&gt;so my aim is really to keep the rails application as it is and
add a few files to use the very same with maven. but right now I
need to patch the config/boot.rb to achieve this which is against
the actual spirit.&lt;/p&gt;
&lt;p&gt;so the attached patch does the same patch as maven does and I
added an unit test which test most functionality. the patch is
trivial but would let tools like maven to behave non invasive and
maybe there are other usecases for more then one Gemfile (MRI
versus JRuby when you need to lock down you dependencies, etc)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-12T07:51:23+01:00</created-at>
      <creator-id type="integer">34710</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5090</number>
      <permalink>allow-to-customize-the-gemfile-name-via-an-environment-variable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>boot.rb bundler &quot;maven jruby&quot;</tag>
      <title>allow to customize the Gemfile name via an environment variable</title>
      <updated-at type="datetime">2010-07-12T07:51:28+01:00</updated-at>
      <user-id type="integer">34710</user-id>
      <version type="integer">1</version>
      <user-name>kristian</user-name>
      <creator-name>kristian</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5090</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:36:24+00:00</created-at>
      <creator-id type="integer">34710</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: boot.rb bundler &quot;maven jruby&quot;
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5090</number>
      <permalink>allow-to-customize-the-gemfile-name-via-an-environment-variable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>bootrb bundler &quot;maven jruby&quot;</tag>
      <title>allow to customize the Gemfile name via an environment variable</title>
      <updated-at type="datetime">2011-02-02T17:14:26+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">2</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>kristian</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5090</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:36:25+00:00</created-at>
      <creator-id type="integer">34710</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5090</number>
      <permalink>allow-to-customize-the-gemfile-name-via-an-environment-variable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>bootrb bundler &quot;maven jruby&quot;</tag>
      <title>allow to customize the Gemfile name via an environment variable</title>
      <updated-at type="datetime">2011-02-02T17:14:32+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>kristian</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5090</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>from my side this became obsolete over time - please close that ticket</body>
      <body-html>&lt;div&gt;&lt;p&gt;from my side this became obsolete over time - please close that
ticket&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T17:19:09+00:00</created-at>
      <creator-id type="integer">34710</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5090</number>
      <permalink>allow-to-customize-the-gemfile-name-via-an-environment-variable</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>bootrb bundler &quot;maven jruby&quot;</tag>
      <title>allow to customize the Gemfile name via an environment variable</title>
      <updated-at type="datetime">2011-02-02T19:25:28+00:00</updated-at>
      <user-id type="integer">34710</user-id>
      <version type="integer">4</version>
      <user-name>kristian</user-name>
      <creator-name>kristian</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5090</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>35878048b5cfac8e5585cdeb42de0fc00921afc5</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-07-12T07:51:23+01:00</created-at>
      <filename>conifg_boot_rb_patch.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">590686</id>
      <size type="integer">3705</size>
      <uploader-id type="integer">34710</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/590686/conifg_boot_rb_patch.diff</url>
    </attachment>
  </attachments>
</ticket>
