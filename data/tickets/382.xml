<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">4</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-06-10T17:02:30+01:00</created-at>
  <creator-id type="integer">2140</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">382</number>
  <permalink>faster-hash-except</permalink>
  <priority type="integer">18164</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activesupport core_ext patch tested</tag>
  <title>faster Hash#except</title>
  <updated-at type="datetime">2008-09-13T19:38:13+01:00</updated-at>
  <user-id type="integer">192</user-id>
  <version type="integer">6</version>
  <user-name>Mislav</user-name>
  <creator-name>Grant Hollingworth</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/382</url>
  <priority-name nil="true"></priority-name>
  <original-body>The current version of Hash#except uses include?, which is incredibly slow for a long list of keys.

This patch is based on a similar one for Merb. The Merb ticket includes benchmarks.

http://merb.lighthouseapp.com/projects/7433/tickets/352-faster-hash-except-and-only</original-body>
  <latest-body>The current version of Hash#except uses include?, which is incredibly slow for a long list of keys.

This patch is based on a similar one for Merb. The Merb ticket includes benchmarks.

http://merb.lighthouseapp.com/projects/7433/tickets/352-faster-hash-except-and-only</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;
The current version of Hash#except uses include?, which is incredibly slow for a long list of keys.
&lt;/p&gt;&lt;p&gt;
This patch is based on a similar one for Merb. The Merb ticket includes benchmarks.
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://merb.lighthouseapp.com/projects/7433/tickets/352-faster-hash-except-and-only&quot;&gt;http://merb.lighthouseapp.com/pr...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The current version of Hash#except uses include?, which is incredibly slow for a long list of keys.

This patch is based on a similar one for Merb. The Merb ticket includes benchmarks.

http://merb.lighthouseapp.com/projects/7433/tickets/352-faster-hash-except-and-only</body>
      <body-html>&lt;div&gt;&lt;p&gt;
The current version of Hash#except uses include?, which is incredibly slow for a long list of keys.
&lt;/p&gt;&lt;p&gt;
This patch is based on a similar one for Merb. The Merb ticket includes benchmarks.
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://merb.lighthouseapp.com/projects/7433/tickets/352-faster-hash-except-and-only&quot;&gt;http://merb.lighthouseapp.com/pr...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-10T17:02:30+01:00</created-at>
      <creator-id type="integer">2140</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">382</number>
      <permalink>faster-hash-except</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>faster Hash#except</title>
      <updated-at type="datetime">2008-06-10T17:02:30+01:00</updated-at>
      <user-id type="integer">2140</user-id>
      <version type="integer">1</version>
      <user-name>Grant Hollingworth</user-name>
      <creator-name>Grant Hollingworth</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/382</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>It already uses Set#include?, not Array#include?, so the benchmark is not equivalent.

Could you base a patch off the recent change made to Hash#slice?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
It already uses Set#include?, not Array#include?, so the benchmark is not equivalent.
&lt;/p&gt;&lt;p&gt;
Could you base a patch off the recent change made to Hash#slice?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-10T22:24:40+01:00</created-at>
      <creator-id type="integer">2140</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">382</number>
      <permalink>faster-hash-except</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>faster Hash#except</title>
      <updated-at type="datetime">2008-06-10T22:24:40+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Grant Hollingworth</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/382</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Okay, updated benchmarks:

&lt;pre&gt;
except: small hash, 100 000 times
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user &#160;&#160;&#160;&#160;system &#160;&#160;&#160;&#160;&#160;total &#160;&#160;&#160;&#160;&#160;&#160;&#160;real
except_reject &#160;&#160;&#160;1.250000 &#160;&#160;0.010000 &#160;&#160;1.260000 ( &#160;1.318881)
except_each &#160;&#160;&#160;&#160;&#160;0.440000 &#160;&#160;0.000000 &#160;&#160;0.440000 ( &#160;0.454850)

except: small hash, 100 000 times
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user &#160;&#160;&#160;&#160;system &#160;&#160;&#160;&#160;&#160;total &#160;&#160;&#160;&#160;&#160;&#160;&#160;real
except_reject! &#160;&#160;1.310000 &#160;&#160;0.020000 &#160;&#160;1.330000 ( &#160;1.358561)
except_each! &#160;&#160;&#160;&#160;0.150000 &#160;&#160;0.000000 &#160;&#160;0.150000 ( &#160;0.155681)

big hash, 1000 times
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user &#160;&#160;&#160;&#160;system &#160;&#160;&#160;&#160;&#160;total &#160;&#160;&#160;&#160;&#160;&#160;&#160;real
except_reject &#160;&#160;&#160;6.550000 &#160;&#160;0.050000 &#160;&#160;6.600000 ( &#160;6.696907)
except_each &#160;&#160;&#160;&#160;&#160;1.720000 &#160;&#160;0.020000 &#160;&#160;1.740000 ( &#160;1.780731)

big hash, 1000 times
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user &#160;&#160;&#160;&#160;system &#160;&#160;&#160;&#160;&#160;total &#160;&#160;&#160;&#160;&#160;&#160;&#160;real
except_reject! &#160;&#160;8.710000 &#160;&#160;0.100000 &#160;&#160;8.810000 ( &#160;9.683930)
except_each! &#160;&#160;&#160;&#160;0.080000 &#160;&#160;0.000000 &#160;&#160;0.080000 ( &#160;0.105305)
&lt;/pre&gt;

I changed the keys from a Set to an Array, like in Hash#slice. Is that what you meant?</body>
      <body-html>&lt;div&gt;&lt;p&gt;
Okay, updated benchmarks:
&lt;/p&gt;&lt;p&gt;
&lt;pre&gt;
&lt;/p&gt;&lt;p&gt;
except: small hash, 100 000 times
&lt;/p&gt;&lt;p&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user &#160;&#160;&#160;&#160;system &#160;&#160;&#160;&#160;&#160;total &#160;&#160;&#160;&#160;&#160;&#160;&#160;real
&lt;/p&gt;&lt;p&gt;
except_reject &#160;&#160;&#160;1.250000 &#160;&#160;0.010000 &#160;&#160;1.260000 ( &#160;1.318881)
&lt;/p&gt;&lt;p&gt;
except_each &#160;&#160;&#160;&#160;&#160;0.440000 &#160;&#160;0.000000 &#160;&#160;0.440000 ( &#160;0.454850)
&lt;/p&gt;&lt;p&gt;
except: small hash, 100 000 times
&lt;/p&gt;&lt;p&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user &#160;&#160;&#160;&#160;system &#160;&#160;&#160;&#160;&#160;total &#160;&#160;&#160;&#160;&#160;&#160;&#160;real
&lt;/p&gt;&lt;p&gt;
except_reject! &#160;&#160;1.310000 &#160;&#160;0.020000 &#160;&#160;1.330000 ( &#160;1.358561)
&lt;/p&gt;&lt;p&gt;
except_each! &#160;&#160;&#160;&#160;0.150000 &#160;&#160;0.000000 &#160;&#160;0.150000 ( &#160;0.155681)
&lt;/p&gt;&lt;p&gt;
big hash, 1000 times
&lt;/p&gt;&lt;p&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user &#160;&#160;&#160;&#160;system &#160;&#160;&#160;&#160;&#160;total &#160;&#160;&#160;&#160;&#160;&#160;&#160;real
&lt;/p&gt;&lt;p&gt;
except_reject &#160;&#160;&#160;6.550000 &#160;&#160;0.050000 &#160;&#160;6.600000 ( &#160;6.696907)
&lt;/p&gt;&lt;p&gt;
except_each &#160;&#160;&#160;&#160;&#160;1.720000 &#160;&#160;0.020000 &#160;&#160;1.740000 ( &#160;1.780731)
&lt;/p&gt;&lt;p&gt;
big hash, 1000 times
&lt;/p&gt;&lt;p&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user &#160;&#160;&#160;&#160;system &#160;&#160;&#160;&#160;&#160;total &#160;&#160;&#160;&#160;&#160;&#160;&#160;real
&lt;/p&gt;&lt;p&gt;
except_reject! &#160;&#160;8.710000 &#160;&#160;0.100000 &#160;&#160;8.810000 ( &#160;9.683930)
&lt;/p&gt;&lt;p&gt;
except_each! &#160;&#160;&#160;&#160;0.080000 &#160;&#160;0.000000 &#160;&#160;0.080000 ( &#160;0.105305)
&lt;/p&gt;&lt;p&gt;
&lt;/pre&gt;
&lt;/p&gt;&lt;p&gt;
I changed the keys from a Set to an Array, like in Hash#slice. Is that what you meant?
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-06-11T04:49:28+01:00</created-at>
      <creator-id type="integer">2140</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">382</number>
      <permalink>faster-hash-except</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag nil="true"></tag>
      <title>faster Hash#except</title>
      <updated-at type="datetime">2008-06-11T04:49:28+01:00</updated-at>
      <user-id type="integer">2140</user-id>
      <version type="integer">3</version>
      <user-name>Grant Hollingworth</user-name>
      <creator-name>Grant Hollingworth</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/382</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [a797375c99efc88ee1438925cdc016305c66166c]) Performance: speed up Hash#except.  [#382 state:resolved]
http://github.com/rails/rails/commit/a797375c99efc88ee1438925cdc016305c66166c</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [a797375c99efc88ee1438925cdc016305c66166c]) Performance: speed up Hash#except.  [#382 state:resolved]
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/a797375c99efc88ee1438925cdc016305c66166c&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-11T08:47:04+01:00</created-at>
      <creator-id type="integer">2140</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">382</number>
      <permalink>faster-hash-except</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>faster Hash#except</title>
      <updated-at type="datetime">2008-06-11T08:47:04+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">4</version>
      <user-name>Repository</user-name>
      <creator-name>Grant Hollingworth</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/382</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [634e462a0b70ddae2f21dbddddd07e7b340bb69c]) Performance: speed up Hash#except.  [#382 state:resolved]
http://github.com/rails/rails/commit/634e462a0b70ddae2f21dbddddd07e7b340bb69c</body>
      <body-html>&lt;div&gt;&lt;p&gt;
(from [634e462a0b70ddae2f21dbddddd07e7b340bb69c]) Performance: speed up Hash#except.  [#382 state:resolved]
&lt;/p&gt;&lt;p&gt;
&lt;a href=&quot;http://github.com/rails/rails/commit/634e462a0b70ddae2f21dbddddd07e7b340bb69c&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-06-11T08:47:20+01:00</created-at>
      <creator-id type="integer">2140</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">382</number>
      <permalink>faster-hash-except</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>faster Hash#except</title>
      <updated-at type="datetime">2008-06-11T08:47:20+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">5</version>
      <user-name>Repository</user-name>
      <creator-name>Grant Hollingworth</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/382</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>This performance optimization breaks because it's using &quot;clone&quot; instead of &quot;dup&quot;.

Consider these scenarios which are valid, but which both fail now:

@@@
obj1.freeze
obj2 = obj1.except(...)

# Mocha expectations
obj1.expects(:delete).never
obj2 = obj1.except(...)
@@@

Using &quot;dup&quot; in place of &quot;clone&quot; solves both problems. Patch attached</body>
      <body-html>&lt;div&gt;&lt;p&gt;This performance optimization breaks because it's using &quot;clone&quot;
instead of &quot;dup&quot;.&lt;/p&gt;
&lt;p&gt;Consider these scenarios which are valid, but which both fail
now:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
obj1.freeze
obj2 = obj1.except(...)

# Mocha expectations
obj1.expects(:delete).never
obj2 = obj1.except(...)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using &quot;dup&quot; in place of &quot;clone&quot; solves both problems. Patch
attached&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-09-13T19:38:04+01:00</created-at>
      <creator-id type="integer">2140</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">382</number>
      <permalink>faster-hash-except</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activesupport core_ext patch tested</tag>
      <title>faster Hash#except</title>
      <updated-at type="datetime">2008-09-13T19:38:13+01:00</updated-at>
      <user-id type="integer">192</user-id>
      <version type="integer">6</version>
      <user-name>Mislav</user-name>
      <creator-name>Grant Hollingworth</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/382</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a2505714aa0605b26c07bca88ba5c8321eff880e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-10T17:02:30+01:00</created-at>
      <filename>0001-faster-implementation-of-Hash-except.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">26682</id>
      <size type="integer">1473</size>
      <uploader-id type="integer">2140</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/26682/0001-faster-implementation-of-Hash-except.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>b4f4d8c877da6376156c82b51c859f601d08ecd4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-06-11T04:49:28+01:00</created-at>
      <filename>hash-except-no-set.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">26790</id>
      <size type="integer">1440</size>
      <uploader-id type="integer">2140</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/26790/hash-except-no-set.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>44bcc3c7e6cf61e144044d1054a80b115ae2e9f8</code>
      <content-type>text/x-ruby-script</content-type>
      <created-at type="datetime">2008-06-11T04:54:39+01:00</created-at>
      <filename>hash-except-benchmarks.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">26793</id>
      <size type="integer">1835</size>
      <uploader-id type="integer">2140</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/26793/hash-except-benchmarks.rb</url>
    </attachment>
    <attachment type="Attachment">
      <code>13c9f4de665434c04027d29edc828d6ec0b08edd</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-09-13T19:38:04+01:00</created-at>
      <filename>except-fix.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">45780</id>
      <size type="integer">1877</size>
      <uploader-id type="integer">192</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/45780/except-fix.diff</url>
    </attachment>
  </attachments>
</ticket>
