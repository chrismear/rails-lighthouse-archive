<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">3</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-08-06T21:00:44+01:00</created-at>
  <creator-id type="integer">64439</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5322</number>
  <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0.6.rc2 rails3.0rc</tag>
  <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
  <updated-at type="datetime">2011-04-16T09:58:57+01:00</updated-at>
  <user-id type="integer">138842</user-id>
  <version type="integer">17</version>
  <user-name>kmunteanu</user-name>
  <creator-name>jpfuentes2 (at gmail)</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
  <priority-name>Low</priority-name>
  <original-body>gem 'rails', '3.0.0.rc'
gem 'mysql'

When using multiple schemas in AR models, AREL throws an error whenever I try to use a schema other than the one specified in db.yml
    undefined method `name' for #&lt;Arel::Value:0x000000036b9c90&gt;
    /home/jfuentes/.rvm/gems/ruby-1.9.2-rc2/gems/arel-0.4.0/lib/arel/engines/sql/engine.rb:32:in `block in create'

Basically, my models declare which schema to access via set_table_name
@@@ ruby
class User &lt; ActiveRecord::Base
end  
class Post &lt; ActiveRecord::Base
  set_table_name 'schema_two.posts'
end
@@@

AR/AREL can only operate on the schema declared in db.yml as the database. If code uses another schema at all, it will throw the above error. This error occurs in all environments regardless if I try to access the secondary schema first or not. This behavior works fine in my rails 2.3.2 app. What's interesting to note is that rails console allows me to query both w/o any errors. 

Here is the repo with a basic test app using the two models above: git@github.com:jpfuentes2/arel-multi-schema.git

Create schemas:
@@@ bash
create database schema_one;
create database schema_two;
@@@

After creating the schemas and configuring the app/models - I migrated (which works) and then a rake db:seed which fails. I've attached the trace for db:seed and the proof that rails console cooperates w/ multiple schemas.</original-body>
  <latest-body>gem 'rails', '3.0.0.rc'
gem 'mysql'

When using multiple schemas in AR models, AREL throws an error whenever I try to use a schema other than the one specified in db.yml
    undefined method `name' for #&lt;Arel::Value:0x000000036b9c90&gt;
    /home/jfuentes/.rvm/gems/ruby-1.9.2-rc2/gems/arel-0.4.0/lib/arel/engines/sql/engine.rb:32:in `block in create'

Basically, my models declare which schema to access via set_table_name
@@@ ruby
class User &lt; ActiveRecord::Base
end  
class Post &lt; ActiveRecord::Base
  set_table_name 'schema_two.posts'
end
@@@

AR/AREL can only operate on the schema declared in db.yml as the database. If code uses another schema at all, it will throw the above error. This error occurs in all environments regardless if I try to access the secondary schema first or not. This behavior works fine in my rails 2.3.2 app. What's interesting to note is that rails console allows me to query both w/o any errors. 

Here is the repo with a basic test app using the two models above: git@github.com:jpfuentes2/arel-multi-schema.git

Create schemas:
@@@ bash
create database schema_one;
create database schema_two;
@@@

After creating the schemas and configuring the app/models - I migrated (which works) and then a rake db:seed which fails. I've attached the trace for db:seed and the proof that rails console cooperates w/ multiple schemas.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;gem 'rails', '3.0.0.rc'&lt;br&gt;
gem 'mysql'&lt;/p&gt;
&lt;p&gt;When using multiple schemas in AR models, AREL throws an error
whenever I try to use a schema other than the one specified in
db.yml&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `name' for #&amp;lt;Arel::Value:0x000000036b9c90&amp;gt;
/home/jfuentes/.rvm/gems/ruby-1.9.2-rc2/gems/arel-0.4.0/lib/arel/engines/sql/engine.rb:32:in `block in create'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Basically, my models declare which schema to access via
set_table_name&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
end&lt;br&gt;
class Post &amp;lt; ActiveRecord::Base
  set_table_name 'schema_two.posts'
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;AR/AREL can only operate on the schema declared in db.yml as the
database. If code uses another schema at all, it will throw the
above error. This error occurs in all environments regardless if I
try to access the secondary schema first or not. This behavior
works fine in my rails 2.3.2 app. What's interesting to note is
that rails console allows me to query both w/o any errors.&lt;/p&gt;
&lt;p&gt;Here is the repo with a basic test app using the two models
above: &lt;a href=
&quot;mailto:git@github.com&quot;&gt;git@github.com&lt;/a&gt;:jpfuentes2/arel-multi-schema.git&lt;/p&gt;
&lt;p&gt;Create schemas:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;create database schema_one;
create database schema_two;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After creating the schemas and configuring the app/models - I
migrated (which works) and then a rake db:seed which fails. I've
attached the trace for db:seed and the proof that rails console
cooperates w/ multiple schemas.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>gem 'rails', '3.0.0.rc'
gem 'mysql'

When using multiple schemas in AR models, AREL throws an error whenever I try to use a schema other than the one specified in db.yml
    undefined method `name' for #&lt;Arel::Value:0x000000036b9c90&gt;
    /home/jfuentes/.rvm/gems/ruby-1.9.2-rc2/gems/arel-0.4.0/lib/arel/engines/sql/engine.rb:32:in `block in create'

Basically, my models declare which schema to access via set_table_name
@@@ ruby
class User &lt; ActiveRecord::Base
end  
class Post &lt; ActiveRecord::Base
  set_table_name 'schema_two.posts'
end
@@@

AR/AREL can only operate on the schema declared in db.yml as the database. If code uses another schema at all, it will throw the above error. This error occurs in all environments regardless if I try to access the secondary schema first or not. This behavior works fine in my rails 2.3.2 app. What's interesting to note is that rails console allows me to query both w/o any errors. 

Here is the repo with a basic test app using the two models above: git@github.com:jpfuentes2/arel-multi-schema.git

Create schemas:
@@@ bash
create database schema_one;
create database schema_two;
@@@

After creating the schemas and configuring the app/models - I migrated (which works) and then a rake db:seed which fails. I've attached the trace for db:seed and the proof that rails console cooperates w/ multiple schemas.</body>
      <body-html>&lt;div&gt;&lt;p&gt;gem 'rails', '3.0.0.rc'&lt;br&gt;
gem 'mysql'&lt;/p&gt;
&lt;p&gt;When using multiple schemas in AR models, AREL throws an error
whenever I try to use a schema other than the one specified in
db.yml&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;undefined method `name' for #&amp;lt;Arel::Value:0x000000036b9c90&amp;gt;
/home/jfuentes/.rvm/gems/ruby-1.9.2-rc2/gems/arel-0.4.0/lib/arel/engines/sql/engine.rb:32:in `block in create'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Basically, my models declare which schema to access via
set_table_name&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ActiveRecord::Base
end&lt;br&gt;
class Post &amp;lt; ActiveRecord::Base
  set_table_name 'schema_two.posts'
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;AR/AREL can only operate on the schema declared in db.yml as the
database. If code uses another schema at all, it will throw the
above error. This error occurs in all environments regardless if I
try to access the secondary schema first or not. This behavior
works fine in my rails 2.3.2 app. What's interesting to note is
that rails console allows me to query both w/o any errors.&lt;/p&gt;
&lt;p&gt;Here is the repo with a basic test app using the two models
above: &lt;a href=
&quot;mailto:git@github.com&quot;&gt;git@github.com&lt;/a&gt;:jpfuentes2/arel-multi-schema.git&lt;/p&gt;
&lt;p&gt;Create schemas:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;create database schema_one;
create database schema_two;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After creating the schemas and configuring the app/models - I
migrated (which works) and then a rake db:seed which fails. I've
attached the trace for db:seed and the proof that rails console
cooperates w/ multiple schemas.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-06T21:00:44+01:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel mysql2 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2010-08-06T21:00:48+01:00</updated-at>
      <user-id type="integer">64439</user-id>
      <version type="integer">1</version>
      <user-name>jpfuentes2 (at gmail)</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>**Update:** apparently the issue is with **creating records**. I can issue a find for either model on both schemas:

When I put in this test.rb

@@@ ruby
p User.columns
p Post.columns
p Post.first
@@@

rails runner test.rb
@@@
[#&lt;ActiveRecord::ConnectionAdapters::MysqlColumn:0x000000020aece8 @null=false, @sql_type=&quot;int(11)&quot;, @name=&quot;id&quot;, @scale=nil, @precision=nil, @limit=4, @type=:integer, @default=nil, @primary=true&gt;, #&lt;ActiveRecord::ConnectionAdapters::MysqlColumn:0x000000020ae6f8 @null=true, @sql_type=&quot;varchar(255)&quot;, @name=&quot;name&quot;, @scale=nil, @precision=nil, @limit=255, @type=:string, @default=nil, @primary=false&gt;] 
[#&lt;ActiveRecord::ConnectionAdapters::MysqlColumn:0x00000002090d38 @null=false, @sql_type=&quot;int(11)&quot;, @name=&quot;id&quot;, @scale=nil, @precision=nil, @limit=4, @type=:integer, @default=nil, @primary=true&gt;, #&lt;ActiveRecord::ConnectionAdapters::MysqlColumn:0x000000020909f0 @null=true, @sql_type=&quot;varchar(255)&quot;, @name=&quot;title&quot;, @scale=nil, @precision=nil, @limit=255, @type=:string, @default=nil, @primary=false&gt;] 
nil
@@@

I get the AREL error again when I add a create to test.rb
@@@ ruby
Post.create(:title =&gt; 'test')
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; apparently the issue is with
&lt;strong&gt;creating records&lt;/strong&gt;. I can issue a find for either
model on both schemas:&lt;/p&gt;
&lt;p&gt;When I put in this test.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;p User.columns
p Post.columns
p Post.first&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;rails runner test.rb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[#&amp;lt;ActiveRecord::ConnectionAdapters::MysqlColumn:0x000000020aece8 @null=false, @sql_type=&quot;int(11)&quot;, @name=&quot;id&quot;, @scale=nil, @precision=nil, @limit=4, @type=:integer, @default=nil, @primary=true&amp;gt;, #&amp;lt;ActiveRecord::ConnectionAdapters::MysqlColumn:0x000000020ae6f8 @null=true, @sql_type=&quot;varchar(255)&quot;, @name=&quot;name&quot;, @scale=nil, @precision=nil, @limit=255, @type=:string, @default=nil, @primary=false&amp;gt;] 
[#&amp;lt;ActiveRecord::ConnectionAdapters::MysqlColumn:0x00000002090d38 @null=false, @sql_type=&quot;int(11)&quot;, @name=&quot;id&quot;, @scale=nil, @precision=nil, @limit=4, @type=:integer, @default=nil, @primary=true&amp;gt;, #&amp;lt;ActiveRecord::ConnectionAdapters::MysqlColumn:0x000000020909f0 @null=true, @sql_type=&quot;varchar(255)&quot;, @name=&quot;title&quot;, @scale=nil, @precision=nil, @limit=255, @type=:string, @default=nil, @primary=false&amp;gt;] 
nil&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I get the AREL error again when I add a create to
test.rb&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;Post.create(:title =&amp;gt; 'test')&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-08-06T21:59:30+01:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel mysql2 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2010-08-06T21:59:31+01:00</updated-at>
      <user-id type="integer">64439</user-id>
      <version type="integer">2</version>
      <user-name>jpfuentes2 (at gmail)</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Can confirm this issue...almost. We just had the same error after forgetting to restart the servers after a migration (so our model schema was different to the db schema.. I guess?).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can confirm this issue...almost. We just had the same error
after forgetting to restart the servers after a migration (so our
model schema was different to the db schema.. I guess?).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-08T20:11:31+01:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel mysql2 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2010-09-08T20:11:33+01:00</updated-at>
      <user-id type="integer">14196</user-id>
      <version type="integer">3</version>
      <user-name>keeran</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I too got the same issue with rails 3.0.0 RC2.

I have two database schema's. One is bs_development and the other is va_development.
The Project and ProjectRole model lies in bs_development schema and User model lies in va_development schema.

@@@
  Project.rb
  has_many :project_roles, :dependent =&gt; :destroy
  has_many :users, :through =&gt; :project_roles
  alias :roles :project_roles
  after_create :run_after_create

  def run_after_create
   #Make owner of project when created
   roles.create(:user =&gt; User.curr_user)
  end

  ProjectRole.rb
  set_table_name &quot;bs_#{Rails.env}&quot; + &quot;.project_roles&quot;
  belongs_to :project
  belongs_to :user

  User.rb
  establish_connection &quot;va_#{Rails.env}&quot;
  has_many :project_roles
  has_many :projects, :through =&gt; :project_roles
  alias :roles :project_roles
@@@

When i try to do:
@@@
Project.first.roles.create(:name =&gt; &quot;Owner&quot;, :user =&gt; User.first), i get the following error:
@@@
@@@
undefined method `name' for #&lt;Arel::Value:0x000000043f77e0&gt;
arel (1.0.1) lib/arel/engines/sql/engine.rb:26:in `block in create'
arel (1.0.1) lib/arel/engines/sql/engine.rb:26:in `each'
arel (1.0.1) lib/arel/engines/sql/engine.rb:26:in `detect'
arel (1.0.1) lib/arel/engines/sql/engine.rb:26:in `create'
arel (1.0.1) lib/arel/algebra/relations/writes.rb:24:in `call'
arel (1.0.1) lib/arel/session.rb:17:in `create'
arel (1.0.1) lib/arel/algebra/relations/relation.rb:159:in `insert'
activerecord (3.0.0.rc2) lib/active_record/relation.rb:14:in `insert'
activerecord (3.0.0.rc2) lib/active_record/persistence.rb:258:in `create'
activerecord (3.0.0.rc2) lib/active_record/timestamp.rb:47:in `create'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:281:in `block in create'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:413:in `_run_create_callbacks'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:281:in `create'
activerecord (3.0.0.rc2) lib/active_record/persistence.rb:234:in `create_or_update'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:277:in `block in create_or_update'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:423:in `_run_save_callbacks'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:277:in `create_or_update'
activerecord (3.0.0.rc2) lib/active_record/persistence.rb:39:in `save'
activerecord (3.0.0.rc2) lib/active_record/validations.rb:43:in `save'
activerecord (3.0.0.rc2) lib/active_record/attribute_methods/dirty.rb:21:in `save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:237:in `block (2 levels) in save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:289:in `block in with_transaction_returning_status'
activerecord (3.0.0.rc2) lib/active_record/connection_adapters/abstract/database_statements.rb:139:in `transaction'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:204:in `transaction'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:287:in `with_transaction_returning_status'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:237:in `block in save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:248:in `rollback_active_record_state!'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:236:in `save'
activerecord (3.0.0.rc2) lib/active_record/associations/association_collection.rb:271:in `block in create'
activerecord (3.0.0.rc2) lib/active_record/associations/association_collection.rb:504:in `block in create_record'
activerecord (3.0.0.rc2) lib/active_record/associations/association_collection.rb:479:in `add_record_to_target_with_callbacks'
activerecord (3.0.0.rc2) lib/active_record/associations/association_collection.rb:504:in `create_record'
activerecord (3.0.0.rc2) lib/active_record/associations/association_collection.rb:269:in `create'
app/models/project.rb:70:in `run_after_create'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:463:in `_run_create_callbacks'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:281:in `create'
activerecord (3.0.0.rc2) lib/active_record/persistence.rb:234:in `create_or_update'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:277:in `block in create_or_update'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:428:in `_run_save_callbacks'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:277:in `create_or_update'
activerecord (3.0.0.rc2) lib/active_record/persistence.rb:39:in `save'
activerecord (3.0.0.rc2) lib/active_record/validations.rb:43:in `save'
activerecord (3.0.0.rc2) lib/active_record/attribute_methods/dirty.rb:21:in `save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:237:in `block (2 levels) in save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:289:in `block in with_transaction_returning_status'
activerecord (3.0.0.rc2) lib/active_record/connection_adapters/abstract/database_statements.rb:139:in `transaction'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:204:in `transaction'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:287:in `with_transaction_returning_status'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:237:in `block in save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:248:in `rollback_active_record_state!'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:236:in `save'
app/controllers/projects_controller.rb:34:in `create'
actionpack (3.0.0.rc2) lib/action_controller/metal/implicit_render.rb:4:in `send_action'
actionpack (3.0.0.rc2) lib/abstract_controller/base.rb:148:in `process_action'
actionpack (3.0.0.rc2) lib/action_controller/metal/rendering.rb:11:in `process_action'
actionpack (3.0.0.rc2) lib/abstract_controller/callbacks.rb:18:in `block in process_action'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:460:in `_run__100660723245084705__process_action__3862972158326372300__callbacks'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:409:in `_run_process_action_callbacks'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:93:in `run_callbacks'
actionpack (3.0.0.rc2) lib/abstract_controller/callbacks.rb:17:in `process_action'
actionpack (3.0.0.rc2) lib/action_controller/metal/instrumentation.rb:30:in `block in process_action'
activesupport (3.0.0.rc2) lib/active_support/notifications.rb:52:in `block in instrument'
activesupport (3.0.0.rc2) lib/active_support/notifications/instrumenter.rb:21:in `instrument'
activesupport (3.0.0.rc2) lib/active_support/notifications.rb:52:in `instrument'
actionpack (3.0.0.rc2) lib/action_controller/metal/instrumentation.rb:29:in `process_action'
actionpack (3.0.0.rc2) lib/action_controller/metal/rescue.rb:17:in `process_action'
actionpack (3.0.0.rc2) lib/abstract_controller/base.rb:117:in `process'
actionpack (3.0.0.rc2) lib/abstract_controller/rendering.rb:40:in `process'
actionpack (3.0.0.rc2) lib/action_controller/metal.rb:133:in `dispatch'
actionpack (3.0.0.rc2) lib/action_controller/metal/rack_delegation.rb:14:in `dispatch'
actionpack (3.0.0.rc2) lib/action_controller/metal.rb:173:in `block in action'
actionpack (3.0.0.rc2) lib/action_dispatch/routing/route_set.rb:62:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/routing/route_set.rb:62:in `dispatch'
actionpack (3.0.0.rc2) lib/action_dispatch/routing/route_set.rb:27:in `call'
rack-mount (0.6.13) lib/rack/mount/route_set.rb:148:in `block in call'
rack-mount (0.6.13) lib/rack/mount/code_generation.rb:93:in `block in recognize'
rack-mount (0.6.13) lib/rack/mount/code_generation.rb:75:in `optimized_each'
rack-mount (0.6.13) lib/rack/mount/code_generation.rb:92:in `recognize'
rack-mount (0.6.13) lib/rack/mount/route_set.rb:139:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/routing/route_set.rb:492:in `call'
haml (3.0.24) lib/sass/plugin/rack.rb:41:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/best_standards_support.rb:17:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/head.rb:14:in `call'
rack (1.2.1) lib/rack/methodoverride.rb:24:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/params_parser.rb:21:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/flash.rb:177:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/session/abstract_store.rb:149:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/cookies.rb:278:in `call'
activerecord (3.0.0.rc2) lib/active_record/query_cache.rb:32:in `block in call'
activerecord (3.0.0.rc2) lib/active_record/connection_adapters/abstract/query_cache.rb:28:in `cache'
activerecord (3.0.0.rc2) lib/active_record/query_cache.rb:12:in `cache'
activerecord (3.0.0.rc2) lib/active_record/query_cache.rb:31:in `call'
activerecord (3.0.0.rc2) lib/active_record/connection_adapters/abstract/connection_pool.rb:355:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/callbacks.rb:46:in `block in call'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:415:in `_run_call_callbacks'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/callbacks.rb:44:in `call'
rack (1.2.1) lib/rack/sendfile.rb:107:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/remote_ip.rb:48:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/show_exceptions.rb:46:in `call'
railties (3.0.0.rc2) lib/rails/rack/logger.rb:13:in `call'
rack (1.2.1) lib/rack/runtime.rb:17:in `call'
activesupport (3.0.0.rc2) lib/active_support/cache/strategy/local_cache.rb:72:in `call'
rack (1.2.1) lib/rack/lock.rb:11:in `block in call'
&lt;internal:prelude&gt;:10:in `synchronize'
rack (1.2.1) lib/rack/lock.rb:11:in `call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/static.rb:30:in `call'
railties (3.0.0.rc2) lib/rails/application.rb:168:in `call'
railties (3.0.0.rc2) lib/rails/application.rb:77:in `method_missing'
railties (3.0.0.rc2) lib/rails/rack/log_tailer.rb:14:in `call'
rack (1.2.1) lib/rack/content_length.rb:13:in `call'
rack (1.2.1) lib/rack/handler/webrick.rb:52:in `service'
/home/pratik/.rvm/rubies/ruby-1.9.2-p0/lib/ruby/1.9.1/webrick/httpserver.rb:111:in `service'
/home/pratik/.rvm/rubies/ruby-1.9.2-p0/lib/ruby/1.9.1/webrick/httpserver.rb:70:in `run'
/home/pratik/.rvm/rubies/ruby-1.9.2-p0/lib/ruby/1.9.1/webrick/server.rb:183:in `block in start_thread'
@@@

For Rails 3.0.1 and 3.0.2, the problem persists, but the error is different and stack trace is:
@@@
NoMethodError: undefined method `name' for nil:NilClass  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activesupport-3.0.3/lib/active_support/whiny_nil.rb:48:in `method_missing'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/to_sql.rb:57:in `block in visit_Arel_Nodes_InsertStatement'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/to_sql.rb:56:in `map'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/to_sql.rb:56:in `visit_Arel_Nodes_InsertStatement'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/visitor.rb:15:in `visit'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/visitor.rb:5:in `accept'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/to_sql.rb:19:in `block in accept'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:110:in `with_connection'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/to_sql.rb:17:in `accept'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/tree_manager.rb:19:in `to_sql'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/select_manager.rb:191:in `insert'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/relation.rb:14:in `insert'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/persistence.rb:270:in `create'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/timestamp.rb:47:in `create'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/callbacks.rb:281:in `block in create'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activesupport-3.0.3/lib/active_support/callbacks.rb:413:in `_run_create_callbacks'  
... 30 levels...
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/attribute_methods/dirty.rb:21:in `save'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:237:in `block (2 levels) in save'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:289:in `block in with_transaction_returning_status'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/connection_adapters/abstract/database_statements.rb:139:in `transaction'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:204:in `transaction'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:287:in `with_transaction_returning_status'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:237:in `block in save'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:248:in `rollback_active_record_state!'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:236:in `save'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/base.rb:498:in `create'  
 from (irb):2  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.3/lib/rails/commands/console.rb:44:in `start'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.3/lib/rails/commands/console.rb:8:in `start'  
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.3/lib/rails/commands.rb:23:in `&lt;top (required)&gt;'  
 from script/rails:6:in `require'  
 from script/rails:6:in `&lt;main&gt;'
@@@

Please refer to my StackOverFlow issue for details:
http://stackoverflow.com/questions/4284043/rails2-to-rails3-upgrade-problem

Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;I too got the same issue with rails 3.0.0 RC2.&lt;/p&gt;
&lt;p&gt;I have two database schema's. One is bs_development and the
other is va_development.&lt;br&gt;
The Project and ProjectRole model lies in bs_development schema and
User model lies in va_development schema.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  Project.rb
  has_many :project_roles, :dependent =&amp;gt; :destroy
  has_many :users, :through =&amp;gt; :project_roles
  alias :roles :project_roles
  after_create :run_after_create

  def run_after_create
   #Make owner of project when created
   roles.create(:user =&amp;gt; User.curr_user)
  end

  ProjectRole.rb
  set_table_name &quot;bs_#{Rails.env}&quot; + &quot;.project_roles&quot;
  belongs_to :project
  belongs_to :user

  User.rb
  establish_connection &quot;va_#{Rails.env}&quot;
  has_many :project_roles
  has_many :projects, :through =&amp;gt; :project_roles
  alias :roles :project_roles&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When i try to do:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Project.first.roles.create(:name =&amp;gt; &quot;Owner&quot;, :user =&amp;gt; User.first), i get the following error:&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;undefined method &lt;/code&gt;name' for #&amp;amp;lt;Arel::Value:0x000000043f77e0&amp;amp;gt;
arel (1.0.1) lib/arel/engines/sql/engine.rb:26:inblock in create'
arel (1.0.1) lib/arel/engines/sql/engine.rb:26:in &lt;code&gt;each'
arel (1.0.1) lib/arel/engines/sql/engine.rb:26:in&lt;/code&gt;detect'
arel (1.0.1) lib/arel/engines/sql/engine.rb:26:in &lt;code&gt;create'
arel (1.0.1) lib/arel/algebra/relations/writes.rb:24:in&lt;/code&gt;call'
arel (1.0.1) lib/arel/session.rb:17:in &lt;code&gt;create'
arel (1.0.1) lib/arel/algebra/relations/relation.rb:159:in&lt;/code&gt;insert'
activerecord (3.0.0.rc2) lib/active_record/relation.rb:14:in &lt;code&gt;insert'
activerecord (3.0.0.rc2) lib/active_record/persistence.rb:258:in&lt;/code&gt;create'
activerecord (3.0.0.rc2) lib/active_record/timestamp.rb:47:in &lt;code&gt;create'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:281:in&lt;/code&gt;block in create'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:413:in &lt;code&gt;_run_create_callbacks'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:281:in&lt;/code&gt;create'
activerecord (3.0.0.rc2) lib/active_record/persistence.rb:234:in &lt;code&gt;create_or_update'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:277:in&lt;/code&gt;block in create_or_update'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:423:in &lt;code&gt;_run_save_callbacks'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:277:in&lt;/code&gt;create_or_update'
activerecord (3.0.0.rc2) lib/active_record/persistence.rb:39:in &lt;code&gt;save'
activerecord (3.0.0.rc2) lib/active_record/validations.rb:43:in&lt;/code&gt;save'
activerecord (3.0.0.rc2) lib/active_record/attribute_methods/dirty.rb:21:in &lt;code&gt;save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:237:in&lt;/code&gt;block (2 levels) in save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:289:in &lt;code&gt;block in with_transaction_returning_status'
activerecord (3.0.0.rc2) lib/active_record/connection_adapters/abstract/database_statements.rb:139:in&lt;/code&gt;transaction'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:204:in &lt;code&gt;transaction'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:287:in&lt;/code&gt;with_transaction_returning_status'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:237:in &lt;code&gt;block in save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:248:in&lt;/code&gt;rollback_active_record_state!'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:236:in &lt;code&gt;save'
activerecord (3.0.0.rc2) lib/active_record/associations/association_collection.rb:271:in&lt;/code&gt;block in create'
activerecord (3.0.0.rc2) lib/active_record/associations/association_collection.rb:504:in &lt;code&gt;block in create_record'
activerecord (3.0.0.rc2) lib/active_record/associations/association_collection.rb:479:in&lt;/code&gt;add_record_to_target_with_callbacks'
activerecord (3.0.0.rc2) lib/active_record/associations/association_collection.rb:504:in &lt;code&gt;create_record'
activerecord (3.0.0.rc2) lib/active_record/associations/association_collection.rb:269:in&lt;/code&gt;create'
app/models/project.rb:70:in &lt;code&gt;run_after_create'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:463:in&lt;/code&gt;&lt;em&gt;run_create_callbacks'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:281:in &lt;code&gt;create'
activerecord (3.0.0.rc2) lib/active_record/persistence.rb:234:in&lt;/code&gt;create_or_update'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:277:in &lt;code&gt;block in create_or_update'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:428:in&lt;/code&gt;&lt;/em&gt;run_save_callbacks'
activerecord (3.0.0.rc2) lib/active_record/callbacks.rb:277:in &lt;code&gt;create_or_update'
activerecord (3.0.0.rc2) lib/active_record/persistence.rb:39:in&lt;/code&gt;save'
activerecord (3.0.0.rc2) lib/active_record/validations.rb:43:in &lt;code&gt;save'
activerecord (3.0.0.rc2) lib/active_record/attribute_methods/dirty.rb:21:in&lt;/code&gt;save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:237:in &lt;code&gt;block (2 levels) in save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:289:in&lt;/code&gt;block in with_transaction_returning_status'
activerecord (3.0.0.rc2) lib/active_record/connection_adapters/abstract/database_statements.rb:139:in &lt;code&gt;transaction'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:204:in&lt;/code&gt;transaction'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:287:in &lt;code&gt;with_transaction_returning_status'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:237:in&lt;/code&gt;block in save'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:248:in &lt;code&gt;rollback_active_record_state!'
activerecord (3.0.0.rc2) lib/active_record/transactions.rb:236:in&lt;/code&gt;save'
app/controllers/projects_controller.rb:34:in &lt;code&gt;create'
actionpack (3.0.0.rc2) lib/action_controller/metal/implicit_render.rb:4:in&lt;/code&gt;send_action'
actionpack (3.0.0.rc2) lib/abstract_controller/base.rb:148:in &lt;code&gt;process_action'
actionpack (3.0.0.rc2) lib/action_controller/metal/rendering.rb:11:in&lt;/code&gt;process_action'
actionpack (3.0.0.rc2) lib/abstract_controller/callbacks.rb:18:in &lt;code&gt;block in process_action'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:460:in&lt;/code&gt;&lt;em&gt;run&lt;strong&gt;100660723245084705&lt;/strong&gt;process_action&lt;strong&gt;3862972158326372300&lt;/strong&gt;callbacks'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:409:in &lt;code&gt;_run_process_action_callbacks'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:93:in&lt;/code&gt;run_callbacks'
actionpack (3.0.0.rc2) lib/abstract_controller/callbacks.rb:17:in &lt;code&gt;process_action'
actionpack (3.0.0.rc2) lib/action_controller/metal/instrumentation.rb:30:in&lt;/code&gt;block in process_action'
activesupport (3.0.0.rc2) lib/active_support/notifications.rb:52:in &lt;code&gt;block in instrument'
activesupport (3.0.0.rc2) lib/active_support/notifications/instrumenter.rb:21:in&lt;/code&gt;instrument'
activesupport (3.0.0.rc2) lib/active_support/notifications.rb:52:in &lt;code&gt;instrument'
actionpack (3.0.0.rc2) lib/action_controller/metal/instrumentation.rb:29:in&lt;/code&gt;process_action'
actionpack (3.0.0.rc2) lib/action_controller/metal/rescue.rb:17:in &lt;code&gt;process_action'
actionpack (3.0.0.rc2) lib/abstract_controller/base.rb:117:in&lt;/code&gt;process'
actionpack (3.0.0.rc2) lib/abstract_controller/rendering.rb:40:in &lt;code&gt;process'
actionpack (3.0.0.rc2) lib/action_controller/metal.rb:133:in&lt;/code&gt;dispatch'
actionpack (3.0.0.rc2) lib/action_controller/metal/rack_delegation.rb:14:in &lt;code&gt;dispatch'
actionpack (3.0.0.rc2) lib/action_controller/metal.rb:173:in&lt;/code&gt;block in action'
actionpack (3.0.0.rc2) lib/action_dispatch/routing/route_set.rb:62:in &lt;code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/routing/route_set.rb:62:in&lt;/code&gt;dispatch'
actionpack (3.0.0.rc2) lib/action_dispatch/routing/route_set.rb:27:in &lt;code&gt;call'
rack-mount (0.6.13) lib/rack/mount/route_set.rb:148:in&lt;/code&gt;block in call'
rack-mount (0.6.13) lib/rack/mount/code_generation.rb:93:in &lt;code&gt;block in recognize'
rack-mount (0.6.13) lib/rack/mount/code_generation.rb:75:in&lt;/code&gt;optimized_each'
rack-mount (0.6.13) lib/rack/mount/code_generation.rb:92:in &lt;code&gt;recognize'
rack-mount (0.6.13) lib/rack/mount/route_set.rb:139:in&lt;/code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/routing/route_set.rb:492:in &lt;code&gt;call'
haml (3.0.24) lib/sass/plugin/rack.rb:41:in&lt;/code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/best_standards_support.rb:17:in &lt;code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/head.rb:14:in&lt;/code&gt;call'
rack (1.2.1) lib/rack/methodoverride.rb:24:in &lt;code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/params_parser.rb:21:in&lt;/code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/flash.rb:177:in &lt;code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/session/abstract_store.rb:149:in&lt;/code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/cookies.rb:278:in &lt;code&gt;call'
activerecord (3.0.0.rc2) lib/active_record/query_cache.rb:32:in&lt;/code&gt;block in call'
activerecord (3.0.0.rc2) lib/active_record/connection_adapters/abstract/query_cache.rb:28:in &lt;code&gt;cache'
activerecord (3.0.0.rc2) lib/active_record/query_cache.rb:12:in&lt;/code&gt;cache'
activerecord (3.0.0.rc2) lib/active_record/query_cache.rb:31:in &lt;code&gt;call'
activerecord (3.0.0.rc2) lib/active_record/connection_adapters/abstract/connection_pool.rb:355:in&lt;/code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/callbacks.rb:46:in &lt;code&gt;block in call'
activesupport (3.0.0.rc2) lib/active_support/callbacks.rb:415:in&lt;/code&gt;&lt;/em&gt;run_call_callbacks'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/callbacks.rb:44:in &lt;code&gt;call'
rack (1.2.1) lib/rack/sendfile.rb:107:in&lt;/code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/remote_ip.rb:48:in &lt;code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/show_exceptions.rb:46:in&lt;/code&gt;call'
railties (3.0.0.rc2) lib/rails/rack/logger.rb:13:in &lt;code&gt;call'
rack (1.2.1) lib/rack/runtime.rb:17:in&lt;/code&gt;call'
activesupport (3.0.0.rc2) lib/active_support/cache/strategy/local_cache.rb:72:in &lt;code&gt;call'
rack (1.2.1) lib/rack/lock.rb:11:in&lt;/code&gt;block in call'
&amp;lt;internal:prelude&amp;gt;:10:in &lt;code&gt;synchronize'
rack (1.2.1) lib/rack/lock.rb:11:in&lt;/code&gt;call'
actionpack (3.0.0.rc2) lib/action_dispatch/middleware/static.rb:30:in &lt;code&gt;call'
railties (3.0.0.rc2) lib/rails/application.rb:168:in&lt;/code&gt;call'
railties (3.0.0.rc2) lib/rails/application.rb:77:in &lt;code&gt;method_missing'
railties (3.0.0.rc2) lib/rails/rack/log_tailer.rb:14:in&lt;/code&gt;call'
rack (1.2.1) lib/rack/content_length.rb:13:in &lt;code&gt;call'
rack (1.2.1) lib/rack/handler/webrick.rb:52:in&lt;/code&gt;service'
/home/pratik/.rvm/rubies/ruby-1.9.2-p0/lib/ruby/1.9.1/webrick/httpserver.rb:111:in &lt;code&gt;service'
/home/pratik/.rvm/rubies/ruby-1.9.2-p0/lib/ruby/1.9.1/webrick/httpserver.rb:70:in&lt;/code&gt;run'
/home/pratik/.rvm/rubies/ruby-1.9.2-p0/lib/ruby/1.9.1/webrick/server.rb:183:in &lt;code&gt;block in start_thread'&amp;lt;/code&amp;gt;
&amp;lt;/pre&amp;gt;&lt;/code&gt;

&lt;br&gt;
For Rails 3.0.1 and 3.0.2, the problem persists, but the error is different and stack trace is:&lt;br&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;NoMethodError: undefined method &lt;/code&gt;name' for nil:NilClass&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activesupport-3.0.3/lib/active_support/whiny_nil.rb:48:inmethod_missing'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/to_sql.rb:57:in &lt;code&gt;block in visit_Arel_Nodes_InsertStatement'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/to_sql.rb:56:in&lt;/code&gt;map'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/to_sql.rb:56:in &lt;code&gt;visit_Arel_Nodes_InsertStatement'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/visitor.rb:15:in&lt;/code&gt;visit'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/visitor.rb:5:in &lt;code&gt;accept'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/to_sql.rb:19:in&lt;/code&gt;block in accept'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/connection_adapters/abstract/connection_pool.rb:110:in &lt;code&gt;with_connection'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/visitors/to_sql.rb:17:in&lt;/code&gt;accept'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/tree_manager.rb:19:in &lt;code&gt;to_sql'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/arel-2.0.4/lib/arel/select_manager.rb:191:in&lt;/code&gt;insert'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/relation.rb:14:in &lt;code&gt;insert'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/persistence.rb:270:in&lt;/code&gt;create'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/timestamp.rb:47:in &lt;code&gt;create'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/callbacks.rb:281:in&lt;/code&gt;block in create'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activesupport-3.0.3/lib/active_support/callbacks.rb:413:in &lt;code&gt;_run_create_callbacks'&amp;lt;br/&amp;gt;
... 30 levels...
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/attribute_methods/dirty.rb:21:in&lt;/code&gt;save'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:237:in &lt;code&gt;block (2 levels) in save'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:289:in&lt;/code&gt;block in with_transaction_returning_status'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/connection_adapters/abstract/database_statements.rb:139:in &lt;code&gt;transaction'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:204:in&lt;/code&gt;transaction'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:287:in &lt;code&gt;with_transaction_returning_status'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:237:in&lt;/code&gt;block in save'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:248:in &lt;code&gt;rollback_active_record_state!'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/transactions.rb:236:in&lt;/code&gt;save'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/activerecord-3.0.3/lib/active_record/base.rb:498:in &lt;code&gt;create'&amp;lt;br/&amp;gt;
 from (irb):2&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.3/lib/rails/commands/console.rb:44:in&lt;/code&gt;start'&lt;br&gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.3/lib/rails/commands/console.rb:8:in &lt;code&gt;start'&amp;lt;br/&amp;gt;
 from /home/pratik/.rvm/gems/ruby-1.9.2-p0/gems/railties-3.0.3/lib/rails/commands.rb:23:in&lt;/code&gt;&amp;lt;top (required)&amp;gt;'&lt;br&gt;
 from script/rails:6:in &lt;code&gt;require'&amp;lt;br/&amp;gt;
 from script/rails:6:in&lt;/code&gt;&amp;lt;main&amp;gt;'
&lt;/pre&gt;
&lt;pre&gt;


&lt;br&gt;
Please refer to my StackOverFlow issue for details:&lt;br&gt;
&lt;a href=
&quot;http://stackoverflow.com/questions/4284043/rails2-to-rails3-upgrade-problem&quot;&gt;http://stackoverflow.com/questions/4284043/rails2-to-rails3-upgrade...&lt;/a&gt;

&lt;br&gt;
Thanks!
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-28T10:58:12+00:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: arel mysql2 rails3.0rc
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2010-11-28T10:58:25+00:00</updated-at>
      <user-id type="integer">57166</user-id>
      <version type="integer">4</version>
      <user-name>tispratik</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>FYI, when I last looked into this problem, the issue is that AREL doesn't think the table exists when you do a create - for some reason it does not have the other schema's tables in the list of tables.

I've been using the following @ work to circumvent this problem. Telling AREL that a table always exists solves the issue.


module ActiveRecord
  module ConnectionAdapters
    module SchemaStatements
      def table_exists?(table_name)
        tables.include?(table_name)
        true
      end
    end
  end
end</body>
      <body-html>&lt;div&gt;&lt;p&gt;FYI, when I last looked into this problem, the issue is that
AREL doesn't think the table exists when you do a create - for some
reason it does not have the other schema's tables in the list of
tables.&lt;/p&gt;
&lt;p&gt;I've been using the following @ work to circumvent this problem.
Telling AREL that a table always exists solves the issue.&lt;/p&gt;
&lt;p&gt;module ActiveRecord&lt;br&gt;
module ConnectionAdapters&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;module SchemaStatements
  def table_exists?(table_name)
    tables.include?(table_name)
    true
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;end end&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-06T15:23:12+00:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2010-12-06T15:23:27+00:00</updated-at>
      <user-id type="integer">64439</user-id>
      <version type="integer">5</version>
      <user-name>jpfuentes2 (at gmail)</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I can confirm this bug still exists in 3.0.3. You can also see some other weird behaviour with associations when you use database name prefixes in set_table_name:

@@@
class Car &lt; ActiveRecord::Base
  set_table_name &quot;multidb1.cars&quot;
  belongs_to :manufacturer
end

class Manufacturer &lt; ActiveRecord::Base
  has_many :cars
end
@@@

Then using a query like Car.includes(:manufacturer).first produces SQL:

SELECT  `multidb1`.`cars`.`id` AS t0_r0, `multidb1`.`cars`.`manufacturer_id` AS t0_r1, `multidb1`.`cars`.`name` AS t0_r2, `manufacturers`.`id` AS t1_r0, `manufacturers`.`name` AS t1_r1 FROM `multidb1`.`cars` LEFT OUTER JOIN `manufacturers` ON `manufacturers`.`id` IS NULL LIMIT 1
SELECT  `manufacturers`.* FROM `manufacturers` WHERE `manufacturers`.`id` = 1 LIMIT 1

Maybe it is just not intended to crossreference other databases by changing table names.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can confirm this bug still exists in 3.0.3. You can also see
some other weird behaviour with associations when you use database
name prefixes in set_table_name:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Car &amp;lt; ActiveRecord::Base
  set_table_name &quot;multidb1.cars&quot;
  belongs_to :manufacturer
end

class Manufacturer &amp;lt; ActiveRecord::Base
  has_many :cars
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then using a query like Car.includes(:manufacturer).first
produces SQL:&lt;/p&gt;
&lt;p&gt;SELECT &lt;code&gt;multidb1&lt;/code&gt;.&lt;code&gt;cars&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt;
AS t0_r0,
&lt;code&gt;multidb1&lt;/code&gt;.&lt;code&gt;cars&lt;/code&gt;.&lt;code&gt;manufacturer_id&lt;/code&gt;
AS t0_r1, &lt;code&gt;multidb1&lt;/code&gt;.&lt;code&gt;cars&lt;/code&gt;.&lt;code&gt;name&lt;/code&gt;
AS t0_r2, &lt;code&gt;manufacturers&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; AS t1_r0,
&lt;code&gt;manufacturers&lt;/code&gt;.&lt;code&gt;name&lt;/code&gt; AS t1_r1 FROM
&lt;code&gt;multidb1&lt;/code&gt;.&lt;code&gt;cars&lt;/code&gt; LEFT OUTER JOIN
&lt;code&gt;manufacturers&lt;/code&gt; ON
&lt;code&gt;manufacturers&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; IS NULL LIMIT 1&lt;br&gt;
SELECT &lt;code&gt;manufacturers&lt;/code&gt;.* FROM &lt;code&gt;manufacturers&lt;/code&gt;
WHERE &lt;code&gt;manufacturers&lt;/code&gt;.&lt;code&gt;id&lt;/code&gt; = 1 LIMIT 1&lt;/p&gt;
&lt;p&gt;Maybe it is just not intended to crossreference other databases
by changing table names.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-26T09:51:26+00:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-02-26T09:51:44+00:00</updated-at>
      <user-id type="integer">138842</user-id>
      <version type="integer">6</version>
      <user-name>kmunteanu</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>This is a MAJOR pitfall of Rails at the moment and needs to be a top priority for the Rails/AREL developers. We have created multiple web applications using Rails and have, for the most part, enjoyed the framework. As the applications gain popularity, scaling becomes a major issue.

Our largest application is spread across multiple database servers (with identical schemas) and collects millions of new entries per day. As our needs grow, we expand horizontally. Database.yml has entries for each database server and during boot we setup abstract classes to get a connection, then use a single abstract class to switch between connections while performing a set_table_name.

This worked without a problem for Rails 2.3.x but is now broken in Rails 3.x with the addition of AREL. We thought that by adding some monkey patches to AREL we had made a work-around, but the problem still exists for creating new records.

We were hasty to upgrade to Rails3 and are unable to easily roll back. As a result, a large portion of our code will now be using direct database queries on the abstract model connection. Simply put, the beautiful ActiveRecord layer that originally made Rails attractive is now unusable in a large application.

FIX IT! Add beautiful built-in support for storing data in different databases with the same schema either on the same or different database server. Data_Fabric and DB_Charmer worked well for Rails 2.x support for some, but are broken as well for Rails 3.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a MAJOR pitfall of Rails at the moment and needs to be a
top priority for the Rails/AREL developers. We have created
multiple web applications using Rails and have, for the most part,
enjoyed the framework. As the applications gain popularity, scaling
becomes a major issue.&lt;/p&gt;
&lt;p&gt;Our largest application is spread across multiple database
servers (with identical schemas) and collects millions of new
entries per day. As our needs grow, we expand horizontally.
Database.yml has entries for each database server and during boot
we setup abstract classes to get a connection, then use a single
abstract class to switch between connections while performing a
set_table_name.&lt;/p&gt;
&lt;p&gt;This worked without a problem for Rails 2.3.x but is now broken
in Rails 3.x with the addition of AREL. We thought that by adding
some monkey patches to AREL we had made a work-around, but the
problem still exists for creating new records.&lt;/p&gt;
&lt;p&gt;We were hasty to upgrade to Rails3 and are unable to easily roll
back. As a result, a large portion of our code will now be using
direct database queries on the abstract model connection. Simply
put, the beautiful ActiveRecord layer that originally made Rails
attractive is now unusable in a large application.&lt;/p&gt;
&lt;p&gt;FIX IT! Add beautiful built-in support for storing data in
different databases with the same schema either on the same or
different database server. Data_Fabric and DB_Charmer worked well
for Rails 2.x support for some, but are broken as well for Rails
3.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-04T19:15:27+00:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-03-04T19:15:52+00:00</updated-at>
      <user-id type="integer">69870</user-id>
      <version type="integer">7</version>
      <user-name>Tyler</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>We're seeing this same issue during a Rails 2.3.11 -&gt; 3.0.5 upgrade.</body>
      <body-html>&lt;div&gt;&lt;p&gt;We're seeing this same issue during a Rails 2.3.11 -&amp;gt; 3.0.5
upgrade.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-05T08:37:11+00:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-03-05T08:37:37+00:00</updated-at>
      <user-id type="integer">71135</user-id>
      <version type="integer">8</version>
      <user-name>Blue Box Jesse</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I'm having an issue with simple find.  For example, if do:

@@@ ruby
class Customer
  set_table_name &quot;legacy.customers&quot;
  set_primary_key &quot;legacy_id&quot;
end

customer = Customer.find(1)
@@@

I will get

@@@ ruby
undefined method `eq' for nil:NilClass
@@@

I agree that this should be a high priority as Rails 2.3.x was handling this correctly.  This essentially makes Rails 3 unusable for any apps that needs to connects to tables out of the original schema.  I have seen this issue brought up multiple times on different web sites.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm having an issue with simple find. For example, if do:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Customer
  set_table_name &quot;legacy.customers&quot;
  set_primary_key &quot;legacy_id&quot;
end

customer = Customer.find(1)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I will get&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;undefined method `eq' for nil:NilClass&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I agree that this should be a high priority as Rails 2.3.x was
handling this correctly. This essentially makes Rails 3 unusable
for any apps that needs to connects to tables out of the original
schema. I have seen this issue brought up multiple times on
different web sites.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-10T03:21:55+00:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-03-10T03:22:21+00:00</updated-at>
      <user-id type="integer">30589</user-id>
      <version type="integer">9</version>
      <user-name>Peter Liu</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>The monkey patch I used to bypass this issue is attached.  Not happy w/ it as a long term fix, but it works to get you started for now.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The monkey patch I used to bypass this issue is attached. Not
happy w/ it as a long term fix, but it works to get you started for
now.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-10T17:19:36+00:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-03-10T17:19:57+00:00</updated-at>
      <user-id type="integer">71135</user-id>
      <version type="integer">10</version>
      <user-name>Blue Box Jesse</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-13T15:42:23+00:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-03-13T15:42:58+00:00</updated-at>
      <user-id type="integer">22242</user-id>
      <version type="integer">11</version>
      <user-name>Dan Pickett</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [eb1eac93151c1d45c3ef292d99bfcf74799185ea]) schemas set by set_table_name are respected by the mysql adapter. [#5322 state:resolved]
https://github.com/rails/rails/commit/eb1eac93151c1d45c3ef292d99bfcf74799185ea</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/eb1eac93151c1d45c3ef292d99bfcf74799185ea&quot;
title=
&quot;Changeset [eb1eac93151c1d45c3ef292d99bfcf74799185ea]&quot;&gt;[eb1eac93151c1d45c3ef292d99bfcf74799185ea]&lt;/a&gt;)
schemas set by set_table_name are respected by the mysql adapter.
[&lt;a href=&quot;/projects/8994/tickets/5322&quot; title=
&quot;Ticket #5322&quot;&gt;#5322&lt;/a&gt; state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/eb1eac93151c1d45c3ef292d99bfcf74799185ea&quot;&gt;
https://github.com/rails/rails/commit/eb1eac93151c1d45c3ef292d99bfc...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-21T18:48:48+00:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-03-21T18:50:03+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">12</version>
      <user-name>Repository</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [ea8fcfb729c0bca528d2e8522585cd6d0e98ebc7]) schemas set by set_table_name are respected by the mysql adapter. [#5322 state:resolved]
https://github.com/rails/rails/commit/ea8fcfb729c0bca528d2e8522585cd6d0e98ebc7</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/ea8fcfb729c0bca528d2e8522585cd6d0e98ebc7&quot;
title=
&quot;Changeset [ea8fcfb729c0bca528d2e8522585cd6d0e98ebc7]&quot;&gt;[ea8fcfb729c0bca528d2e8522585cd6d0e98ebc7]&lt;/a&gt;)
schemas set by set_table_name are respected by the mysql adapter.
[&lt;a href=&quot;/projects/8994/tickets/5322&quot; title=
&quot;Ticket #5322&quot;&gt;#5322&lt;/a&gt; state:resolved] &lt;a href=
&quot;https://github.com/rails/rails/commit/ea8fcfb729c0bca528d2e8522585cd6d0e98ebc7&quot;&gt;
https://github.com/rails/rails/commit/ea8fcfb729c0bca528d2e8522585c...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-21T18:48:50+00:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-03-21T18:49:29+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">13</version>
      <user-name>Repository</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>(from [2ef6270f8fbbefba8d4f10504497e198d8e7deea]) Merge branch 'master' into fuuu

* master:
  Do not show optional (.:format) block for wildcard route [#6605 state:resolved]
  pushing id insertion and prefetch primary keys down to Relation#insert
  use prepared statements to fetch the last insert id
  escaping binary data encoding when inserting to sqlite3. Thanks Naruse! [#6559 state:resolved]
  schemas set by set_table_name are respected by the mysql adapter. [#5322 state:resolved]
  Reapply extensions when using except and only
  SJIS is an alias to Windows-31J in ruby trunk. Use SHIFT_JIS for this test
  Improved resolver docs a bit
  [action_view] docs for FileSystemResolver
  [action_view] added custom patterns to template resolver
https://github.com/rails/rails/commit/2ef6270f8fbbefba8d4f10504497e198d8e7deea</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from &lt;a href=
&quot;/projects/8994/changesets/2ef6270f8fbbefba8d4f10504497e198d8e7deea&quot;
title=
&quot;Changeset [2ef6270f8fbbefba8d4f10504497e198d8e7deea]&quot;&gt;[2ef6270f8fbbefba8d4f10504497e198d8e7deea]&lt;/a&gt;)
Merge branch 'master' into fuuu&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;master: Do not show optional (.:format) block for wildcard
route [&lt;a href=&quot;/projects/8994/tickets/6605&quot; title=
&quot;Ticket #6605&quot;&gt;#6605&lt;/a&gt; state:resolved] pushing id insertion and
prefetch primary keys down to Relation#insert use prepared
statements to fetch the last insert id escaping binary data
encoding when inserting to sqlite3. Thanks Naruse! [&lt;a href=
&quot;/projects/8994/tickets/6559&quot; title=&quot;Ticket #6559&quot;&gt;#6559&lt;/a&gt;
state:resolved] schemas set by set_table_name are respected by the
mysql adapter. [&lt;a href=&quot;/projects/8994/tickets/5322&quot; title=
&quot;Ticket #5322&quot;&gt;#5322&lt;/a&gt; state:resolved] Reapply extensions when
using except and only SJIS is an alias to Windows-31J in ruby
trunk. Use SHIFT_JIS for this test Improved resolver docs a bit
[action_view] docs for FileSystemResolver [action_view] added
custom patterns to template resolver &lt;a href=
&quot;https://github.com/rails/rails/commit/2ef6270f8fbbefba8d4f10504497e198d8e7deea&quot;&gt;
https://github.com/rails/rails/commit/2ef6270f8fbbefba8d4f10504497e...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-22T17:11:28+00:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-03-22T17:12:10+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">14</version>
      <user-name>Repository</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Hi Aaron,

This problem does not seem fixed, even with your change as is committed in 3.0.6.rc2 commit =ea8fcfb729c0bca528d2e8522585cd6d0e98ebc7

A class defined like such:
@@@
class T1 &lt; ActiveRecord::Base
  set_table_name 'bla.t1s'
end
@@@

Doing:
@@@
T1.find(1)
@@@
still yields

NoMethodError: undefined method `eq' for nil:NilClass
        from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activesupport-3.0.6.rc2/lib/active_support/whiny_nil.rb:48:in `method_missing'
        from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activerecord-3.0.6.rc2/lib/active_record/relation/finder_methods.rb:291:in `find_one'
        from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activerecord-3.0.6.rc2/lib/active_record/relation/finder_methods.rb:281:in `find_with_ids'
        from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activerecord-3.0.6.rc2/lib/active_record/relation/finder_methods.rb:107:in `find'
        from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activerecord-3.0.6.rc2/lib/active_record/base.rb:439:in `__send__'
        from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activerecord-3.0.6.rc2/lib/active_record/base.rb:439:in `find'

Both Blue Box Jesse and Peter Liu's problem described above still exist and the patch at:
  &gt; https://rails.lighthouseapp.com/projects/8994/tickets/5322/a/952829/arel-patch.txt
still need to be manually applied to make this problem go away.

Please let me know if there is anything I can do to help resolve this issue.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Aaron,&lt;/p&gt;
&lt;p&gt;This problem does not seem fixed, even with your change as is
committed in 3.0.6.rc2 commit
=ea8fcfb729c0bca528d2e8522585cd6d0e98ebc7&lt;/p&gt;
&lt;p&gt;A class defined like such:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class T1 &amp;lt; ActiveRecord::Base
  set_table_name 'bla.t1s'
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Doing:&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;T1.find(1)&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;still yields&lt;/p&gt;
&lt;p&gt;NoMethodError: undefined method `eq' for nil:NilClass&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activesupport-3.0.6.rc2/lib/active_support/whiny_nil.rb:48:in `method_missing'
    from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activerecord-3.0.6.rc2/lib/active_record/relation/finder_methods.rb:291:in `find_one'
    from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activerecord-3.0.6.rc2/lib/active_record/relation/finder_methods.rb:281:in `find_with_ids'
    from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activerecord-3.0.6.rc2/lib/active_record/relation/finder_methods.rb:107:in `find'
    from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activerecord-3.0.6.rc2/lib/active_record/base.rb:439:in `__send__'
    from /Users/goggins/.rvm/gems/ruby-1.8.7-p334@rails3/gems/activerecord-3.0.6.rc2/lib/active_record/base.rb:439:in `find'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Both Blue Box Jesse and Peter Liu's problem described above
still exist and the patch at:&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/5322/a/952829/arel-patch.txt&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/5322/a/952829...&lt;/a&gt;
still need to be manually applied to make this problem go away.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Please let me know if there is anything I can do to help resolve
this issue.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-01T23:12:09+01:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: arel mysql2 rails3.0.1 rails3.0.3 rails3.0rc
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0.6.rc2 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-04-01T23:12:41+01:00</updated-at>
      <user-id type="integer">51996</user-id>
      <version type="integer">15</version>
      <user-name>Joe Goggins</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>I can confirm this issue does indeed still exist in 3.0.6</body>
      <body-html>&lt;div&gt;&lt;p&gt;I can confirm this issue does indeed still exist in 3.0.6&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-07T19:49:28+01:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0.6.rc2 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-04-07T19:49:58+01:00</updated-at>
      <user-id type="integer">138842</user-id>
      <version type="integer">16</version>
      <user-name>kmunteanu</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>also with the patch mentioned above reading associations will work, but if you try to save a model instance to the database that has a database prefix in set_table_name you will get a NoMethodError: undefined method `name' for nil:NilClass error.</body>
      <body-html>&lt;div&gt;&lt;p&gt;also with the patch mentioned above reading associations will
work, but if you try to save a model instance to the database that
has a database prefix in set_table_name you will get a
NoMethodError: undefined method `name' for nil:NilClass error.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-16T09:58:29+01:00</created-at>
      <creator-id type="integer">64439</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5322</number>
      <permalink>rails3-rc-arel-does-not-work-with-multiple-schemas-using-mysql</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>arel mysql2 rails3.0.1 rails3.0.3 rails3.0.6.rc2 rails3.0rc</tag>
      <title>Rails3 RC - AREL does not work with multiple schemas using MySQL</title>
      <updated-at type="datetime">2011-04-16T09:58:57+01:00</updated-at>
      <user-id type="integer">138842</user-id>
      <version type="integer">17</version>
      <user-name>kmunteanu</user-name>
      <creator-name>jpfuentes2 (at gmail)</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5322</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>f903b383b41a8a41138960d80fd9ddf41ca173fa</code>
      <content-type>application/octet-stream</content-type>
      <created-at type="datetime">2010-08-06T21:00:44+01:00</created-at>
      <filename>migrate_and_seed_fails</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">618814</id>
      <size type="integer">7087</size>
      <uploader-id type="integer">64439</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/618814/migrate_and_seed_fails</url>
    </attachment>
    <attachment type="Attachment">
      <code>0f0716449bf3eaa927dac109bd7787c32e96ab66</code>
      <content-type>application/octet-stream</content-type>
      <created-at type="datetime">2010-08-06T21:00:44+01:00</created-at>
      <filename>rails_console_cooperates</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">618815</id>
      <size type="integer">1030</size>
      <uploader-id type="integer">64439</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/618815/rails_console_cooperates</url>
    </attachment>
    <attachment type="Attachment">
      <code>000532f412f89667ffc5561ff57e3fc62d4db031</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-03-10T17:19:36+00:00</created-at>
      <filename>arel-patch.txt</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">952829</id>
      <size type="integer">1141</size>
      <uploader-id type="integer">71135</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/952829/arel-patch.txt</url>
    </attachment>
  </attachments>
</ticket>
