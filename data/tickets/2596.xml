<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-21T01:45:47+01:00</created-at>
  <creator-id type="integer">17449</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2596</number>
  <permalink>include-and-nested-conditions-hash</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>patch</tag>
  <title>:include and nested conditions hash</title>
  <updated-at type="datetime">2010-07-21T01:45:47+01:00</updated-at>
  <user-id type="integer">17449</user-id>
  <version type="integer">9</version>
  <user-name>blj</user-name>
  <creator-name>blj</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2596</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>@@@ ruby
# All these works
User.find(:all,:include=&gt;:bank_accounts, :conditions=&gt;'bank_accounts.name=&quot;ICICI&quot;') =&gt; [some users]
User.find(:all,:include=&gt;:bank_accounts, :conditions=&gt;{'bank_accounts.name' =&gt; &quot;ICICI&quot;}) =&gt; [some users again]
User.find(:all,:joins=&gt;:bank_accounts, :conditions=&gt;{:bank_accounts=&gt;{:name=&gt;'ICICI'}}) =&gt; [some users again and again]

# This does not work 
User.find(:all,:include=&gt;:bank_accounts, :conditions=&gt;{:bank_accounts=&gt;{:name=&gt;'ICICI'}}) =&gt; throws error with invalid SQL

#ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'bank_accounts.name' in 'where clause': SELECT * FROM `users` WHERE (`bank_accounts`.`name` = 'ICICI') 

@@@</original-body>
  <latest-body>@@@ ruby
# All these works
User.find(:all,:include=&gt;:bank_accounts, :conditions=&gt;'bank_accounts.name=&quot;ICICI&quot;') =&gt; [some users]
User.find(:all,:include=&gt;:bank_accounts, :conditions=&gt;{'bank_accounts.name' =&gt; &quot;ICICI&quot;}) =&gt; [some users again]
User.find(:all,:joins=&gt;:bank_accounts, :conditions=&gt;{:bank_accounts=&gt;{:name=&gt;'ICICI'}}) =&gt; [some users again and again]

# This does not work 
User.find(:all,:include=&gt;:bank_accounts, :conditions=&gt;{:bank_accounts=&gt;{:name=&gt;'ICICI'}}) =&gt; throws error with invalid SQL

#ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'bank_accounts.name' in 'where clause': SELECT * FROM `users` WHERE (`bank_accounts`.`name` = 'ICICI') 

@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
# All these works
User.find(:all,:include=&amp;gt;:bank_accounts, :conditions=&amp;gt;'bank_accounts.name=&amp;quot;ICICI&amp;quot;') =&amp;gt; [some users]
User.find(:all,:include=&amp;gt;:bank_accounts, :conditions=&amp;gt;{'bank_accounts.name' =&amp;gt; &amp;quot;ICICI&amp;quot;}) =&amp;gt; [some users again]
User.find(:all,:joins=&amp;gt;:bank_accounts, :conditions=&amp;gt;{:bank_accounts=&amp;gt;{:name=&amp;gt;'ICICI'}}) =&amp;gt; [some users again and again]

# This does not work 
User.find(:all,:include=&amp;gt;:bank_accounts, :conditions=&amp;gt;{:bank_accounts=&amp;gt;{:name=&amp;gt;'ICICI'}}) =&amp;gt; throws error with invalid SQL

#ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'bank_accounts.name' in 'where clause': SELECT * FROM `users` WHERE (`bank_accounts`.`name` = 'ICICI') 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@@@ ruby
# All these works
User.find(:all,:include=&gt;:bank_accounts, :conditions=&gt;'bank_accounts.name=&quot;ICICI&quot;') =&gt; [some users]
User.find(:all,:include=&gt;:bank_accounts, :conditions=&gt;{'bank_accounts.name' =&gt; &quot;ICICI&quot;}) =&gt; [some users again]
User.find(:all,:joins=&gt;:bank_accounts, :conditions=&gt;{:bank_accounts=&gt;{:name=&gt;'ICICI'}}) =&gt; [some users again and again]

# This does not work 
User.find(:all,:include=&gt;:bank_accounts, :conditions=&gt;{:bank_accounts=&gt;{:name=&gt;'ICICI'}}) =&gt; throws error with invalid SQL

#ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'bank_accounts.name' in 'where clause': SELECT * FROM `users` WHERE (`bank_accounts`.`name` = 'ICICI') 

@@@</body>
      <body-html>&lt;div&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
# All these works
User.find(:all,:include=&amp;gt;:bank_accounts, :conditions=&amp;gt;'bank_accounts.name=&amp;quot;ICICI&amp;quot;') =&amp;gt; [some users]
User.find(:all,:include=&amp;gt;:bank_accounts, :conditions=&amp;gt;{'bank_accounts.name' =&amp;gt; &amp;quot;ICICI&amp;quot;}) =&amp;gt; [some users again]
User.find(:all,:joins=&amp;gt;:bank_accounts, :conditions=&amp;gt;{:bank_accounts=&amp;gt;{:name=&amp;gt;'ICICI'}}) =&amp;gt; [some users again and again]

# This does not work 
User.find(:all,:include=&amp;gt;:bank_accounts, :conditions=&amp;gt;{:bank_accounts=&amp;gt;{:name=&amp;gt;'ICICI'}}) =&amp;gt; throws error with invalid SQL

#ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'bank_accounts.name' in 'where clause': SELECT * FROM `users` WHERE (`bank_accounts`.`name` = 'ICICI') 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-01T22:56:05+01:00</created-at>
      <creator-id type="integer">17449</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2596</number>
      <permalink>include-and-nested-conditions-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>:include and nested conditions hash</title>
      <updated-at type="datetime">2009-05-01T22:56:06+01:00</updated-at>
      <user-id type="integer">17449</user-id>
      <version type="integer">1</version>
      <user-name>blj</user-name>
      <creator-name>blj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2596</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>The issue here is that the include table is not recognized as being in the conditions.  The code that identifies the tables in conditions is expecting strings in the format of &quot;table_name&quot;.column or table_name.column.  A conditions hash like {:bank_accounts=&gt;{:name=&gt;'ICICI'}} results in the table name bank_accounts which does not match the expected formats.

The solution provided in this patch uses the rails function for converting hashes to sql conditions to normalize the hash conditions so the same logic applied to string and array conditions will apply to hashes as well.

Anthony</body>
      <body-html>&lt;div&gt;&lt;p&gt;The issue here is that the include table is not recognized as
being in the conditions. The code that identifies the tables in
conditions is expecting strings in the format of
&quot;table_name&quot;.column or table_name.column. A conditions hash like
{:bank_accounts=&amp;gt;{:name=&amp;gt;'ICICI'}} results in the table name
bank_accounts which does not match the expected formats.&lt;/p&gt;
&lt;p&gt;The solution provided in this patch uses the rails function for
converting hashes to sql conditions to normalize the hash
conditions so the same logic applied to string and array conditions
will apply to hashes as well.&lt;/p&gt;
&lt;p&gt;Anthony&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-04T18:50:56+01:00</created-at>
      <creator-id type="integer">17449</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2596</number>
      <permalink>include-and-nested-conditions-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>:include and nested conditions hash</title>
      <updated-at type="datetime">2009-05-04T18:51:00+01:00</updated-at>
      <user-id type="integer">17003</user-id>
      <version type="integer">2</version>
      <user-name>Anthony Crumley</user-name>
      <creator-name>blj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2596</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Whoops, here is the patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Whoops, here is the patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-04T18:55:37+01:00</created-at>
      <creator-id type="integer">17449</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2596</number>
      <permalink>include-and-nested-conditions-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>:include and nested conditions hash</title>
      <updated-at type="datetime">2009-05-04T18:55:42+01:00</updated-at>
      <user-id type="integer">17003</user-id>
      <version type="integer">3</version>
      <user-name>Anthony Crumley</user-name>
      <creator-name>blj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2596</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>that looks solid to me ... converting the hash to a sql string making it act like the rest of the conditions should be a good fix</body>
      <body-html>&lt;div&gt;&lt;p&gt;that looks solid to me ... converting the hash to a sql string
making it act like the rest of the conditions should be a good
fix&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-04T19:21:54+01:00</created-at>
      <creator-id type="integer">17449</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2596</number>
      <permalink>include-and-nested-conditions-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>:include and nested conditions hash</title>
      <updated-at type="datetime">2009-05-04T19:22:00+01:00</updated-at>
      <user-id type="integer">21807</user-id>
      <version type="integer">4</version>
      <user-name>Ben Wyrosdick</user-name>
      <creator-name>blj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2596</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Can't we just change the code that recognizes the table names in the strings, to recognize these hashes?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can't we just change the code that recognizes the table names in
the strings, to recognize these hashes?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-04T19:46:05+01:00</created-at>
      <creator-id type="integer">17449</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2596</number>
      <permalink>include-and-nested-conditions-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>:include and nested conditions hash</title>
      <updated-at type="datetime">2009-05-04T19:46:09+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">5</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>blj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2596</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The problem is that it would not be able to tell the difference between column names from the find model and table names from included models.  They both can appear as a simple name in the resulting string.

The following method is the one that pulls out the table names based on a regex.

        def tables_in_string(string)
          return [] if string.blank?
          string.scan(/([\.a-zA-Z_]+).?\./).flatten
        end

We can code the logic to determine whether or not the hash keys are table names, column names, or table.column strings and handle them appropriately but that logic is already in the function being used below.  Maybe this is a good opportunity to refactor that logic out.

        def sanitize_sql_hash_for_conditions(attrs, table_name = quoted_table_name)
          attrs = expand_hash_conditions_for_aggregates(attrs)

          conditions = attrs.map do |attr, value|
            unless value.is_a?(Hash)
              attr = attr.to_s

              # Extract table name from qualified attribute names.
              if attr.include?('.')
                table_name, attr = attr.split('.', 2)
                table_name = connection.quote_table_name(table_name)
              end

              attribute_condition(&quot;#{table_name}.#{connection.quote_column_name(attr)}&quot;, value)
            else
              sanitize_sql_hash_for_conditions(value, connection.quote_table_name(attr.to_s))
            end
          end.join(' AND ')

          replace_bind_variables(conditions, expand_range_bind_variables(attrs.values))
        end</body>
      <body-html>&lt;div&gt;&lt;p&gt;The problem is that it would not be able to tell the difference
between column names from the find model and table names from
included models. They both can appear as a simple name in the
resulting string.&lt;/p&gt;
&lt;p&gt;The following method is the one that pulls out the table names
based on a regex.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    def tables_in_string(string)
      return [] if string.blank?
      string.scan(/([\.a-zA-Z_]+).?\./).flatten
    end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We can code the logic to determine whether or not the hash keys
are table names, column names, or table.column strings and handle
them appropriately but that logic is already in the function being
used below. Maybe this is a good opportunity to refactor that logic
out.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    def sanitize_sql_hash_for_conditions(attrs, table_name = quoted_table_name)
      attrs = expand_hash_conditions_for_aggregates(attrs)

      conditions = attrs.map do |attr, value|
        unless value.is_a?(Hash)
          attr = attr.to_s

          # Extract table name from qualified attribute names.
          if attr.include?('.')
            table_name, attr = attr.split('.', 2)
            table_name = connection.quote_table_name(table_name)
          end

          attribute_condition(&quot;#{table_name}.#{connection.quote_column_name(attr)}&quot;, value)
        else
          sanitize_sql_hash_for_conditions(value, connection.quote_table_name(attr.to_s))
        end
      end.join(' AND ')

      replace_bind_variables(conditions, expand_range_bind_variables(attrs.values))
    end
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-04T20:20:51+01:00</created-at>
      <creator-id type="integer">17449</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2596</number>
      <permalink>include-and-nested-conditions-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>:include and nested conditions hash</title>
      <updated-at type="datetime">2009-05-04T20:20:55+01:00</updated-at>
      <user-id type="integer">17003</user-id>
      <version type="integer">6</version>
      <user-name>Anthony Crumley</user-name>
      <creator-name>blj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2596</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>After thinking on it a while, the following may be a better solution.  I added a tables_in_hash method to handle the hash case.

Please take a look and see if this looks better.

Anthony</body>
      <body-html>&lt;div&gt;&lt;p&gt;After thinking on it a while, the following may be a better
solution. I added a tables_in_hash method to handle the hash
case.&lt;/p&gt;
&lt;p&gt;Please take a look and see if this looks better.&lt;/p&gt;
&lt;p&gt;Anthony&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-05-05T02:28:06+01:00</created-at>
      <creator-id type="integer">17449</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2596</number>
      <permalink>include-and-nested-conditions-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>patch</tag>
      <title>:include and nested conditions hash</title>
      <updated-at type="datetime">2009-05-05T02:28:12+01:00</updated-at>
      <user-id type="integer">17003</user-id>
      <version type="integer">7</version>
      <user-name>Anthony Crumley</user-name>
      <creator-name>blj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2596</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Great work Anthony, applied to 2-3-stable and master.

[state:committed]</body>
      <body-html>&lt;div&gt;&lt;p&gt;Great work Anthony, applied to 2-3-stable and master.&lt;/p&gt;
&lt;p&gt;[state:committed]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-10T02:38:03+01:00</created-at>
      <creator-id type="integer">17449</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2596</number>
      <permalink>include-and-nested-conditions-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>patch</tag>
      <title>:include and nested conditions hash</title>
      <updated-at type="datetime">2009-05-10T02:38:04+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">8</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>blj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2596</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Thanks guys.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Thanks guys.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-05-10T13:17:48+01:00</created-at>
      <creator-id type="integer">17449</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2596</number>
      <permalink>include-and-nested-conditions-hash</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>patch</tag>
      <title>:include and nested conditions hash</title>
      <updated-at type="datetime">2009-05-10T13:17:54+01:00</updated-at>
      <user-id type="integer">17449</user-id>
      <version type="integer">9</version>
      <user-name>blj</user-name>
      <creator-name>blj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2596</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>sequence. pop &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/8605-replica.html&quot;&gt;8605 replica&lt;/a&gt;&lt;/b&gt; in your form Porsche &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/733-7533-8555rs-replica-2244.html&quot;&gt;Divers 733-7533-8555RS&lt;/a&gt;&lt;/b&gt; build Dashboard dominate on &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/miros-replica.html&quot;&gt;Miros replica&lt;/a&gt;&lt;/b&gt; you hand, high-class class &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/19303653715-replica-2292.html&quot;&gt;Rado 19303653715 Replica&lt;/a&gt;&lt;/b&gt; you seem. These watches &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/l2-142-4-73-6-replica-5691.html&quot;&gt;cheap L2.142.4.73.6 replica&lt;/a&gt;&lt;/b&gt; are designed with the &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/8908bb-v2-864-replica-2082.html&quot;&gt;8908BB.V2.864 replica&lt;/a&gt;&lt;/b&gt; appearance of the instruct &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt; uniform the gages on &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;omega replica Watch&lt;/a&gt;&lt;/b&gt; the dashboard of a &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-jacob-co--watches.html&quot;&gt;cheap Replica Jacob &amp; Co. Watches&lt;/a&gt;&lt;/b&gt; Porsche again boldly characterize &lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/collection/replica-iwc-watches.html&quot;&gt;buy replica IWC watches&lt;/a&gt;&lt;/b&gt; between male and feminine. They besides turn out hush up a huge</body>
      <body-html>&lt;div&gt;&lt;p&gt;sequence. pop &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/8605-replica.html&quot;&gt;8605
replica&lt;/a&gt;&lt;/b&gt; in your form Porsche &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/733-7533-8555rs-replica-2244.html&quot;&gt;
Divers 733-7533-8555RS&lt;/a&gt;&lt;/b&gt; build Dashboard dominate on
&lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/miros-replica.html&quot;&gt;Miros
replica&lt;/a&gt;&lt;/b&gt; you hand, high-class class &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/19303653715-replica-2292.html&quot;&gt;
Rado 19303653715 Replica&lt;/a&gt;&lt;/b&gt; you seem. These watches
&lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com/watches/l2-142-4-73-6-replica-5691.html&quot;&gt;
cheap L2.142.4.73.6 replica&lt;/a&gt;&lt;/b&gt; are designed with the
&lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/watches/8908bb-v2-864-replica-2082.html&quot;&gt;
8908BB.V2.864 replica&lt;/a&gt;&lt;/b&gt; appearance of the instruct
&lt;b&gt;&lt;a href=&quot;http://www.replicawatches5.com&quot;&gt;Replica Watches&lt;/a&gt;&lt;/b&gt;
uniform the gages on &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com&quot;&gt;omega replica Watch&lt;/a&gt;&lt;/b&gt; the
dashboard of a &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-jacob-co--watches.html&quot;&gt;
cheap Replica Jacob &amp;amp; Co. Watches&lt;/a&gt;&lt;/b&gt; Porsche again boldly
characterize &lt;b&gt;&lt;a href=
&quot;http://www.replicawatches5.com/collection/replica-iwc-watches.html&quot;&gt;
buy replica IWC watches&lt;/a&gt;&lt;/b&gt; between male and feminine. They
besides turn out hush up a huge&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-19T07:38:29+01:00</created-at>
      <creator-id type="integer">17449</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2596</number>
      <permalink>include-and-nested-conditions-hash</permalink>
      <priority type="integer">1733</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>patch</tag>
      <title>:include and nested conditions hash</title>
      <updated-at type="datetime">2010-07-21T01:45:47+01:00</updated-at>
      <user-id type="integer">107790</user-id>
      <version type="integer">10</version>
      <user-name>a4490302sc</user-name>
      <creator-name>blj</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2596</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>a7478bd1f30405e62739fcc1ea1fbb5d7de73f3e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-05-04T18:55:37+01:00</created-at>
      <filename>2596-include-with-conditions-hash.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">118593</id>
      <size type="integer">2126</size>
      <uploader-id type="integer">17003</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/118593/2596-include-with-conditions-hash.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>dc3ca3278eed8cbdb4c1c5b1d1dddfc3a6e5a0d4</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-05-05T02:28:06+01:00</created-at>
      <filename>2596-include-with-conditions-hash-2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">118796</id>
      <size type="integer">2969</size>
      <uploader-id type="integer">17003</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/118796/2596-include-with-conditions-hash-2.diff</url>
    </attachment>
  </attachments>
</ticket>
