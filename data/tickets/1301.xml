<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">5</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-30T18:09:43+00:00</created-at>
  <creator-id type="integer">28420</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1301</number>
  <permalink>patch-named-routes-in-actionview-scope-dont-respect-acbasedefault_url_options</permalink>
  <priority type="integer">28</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>actionview bug named_routes patch</tag>
  <title>[PATCH] Named Routes in ActionView Scope Don't Respect AC::Base#default_url_options</title>
  <updated-at type="datetime">2008-11-11T13:35:40+00:00</updated-at>
  <user-id type="integer">141</user-id>
  <version type="integer">10</version>
  <user-name>Michael Koziarski</user-name>
  <creator-name>Tom Lea</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1301</url>
  <priority-name nil="true"></priority-name>
  <original-body>As discussed on the mailing list:

I have added a test case [1] in url_helper_test.rb (1st commit), that replicates a scenario we are seeing in production.

This fails [2], while similar test (in the second commit), hitting the controller directly seem to work ok.

This seems to be caused by the ActionController::Routing::Optimisation module.

The 3rd and final commit fixes the issue, does anyone know of a better way to get the test to pass, or are we going to have to just not optimize the *_url named routes (as the patch does)?


Thanks in advance
   - Tom


[1]
@@@ ruby
  def  
test_named_route_should_show_host_and_path_using_controller_default_url_options
    class &lt;&lt; @controller
      def default_url_options(options = nil)
        {:host =&gt; 'testtwo.host'}
      end
    end

    with_url_helper_routing do
      get :show_named_route, :kind =&gt; 'url'
      assert_equal 'http://testtwo.host/url_helper_with_controller/show_named_route' 
, @response.body
    end
  end
@@@


[2] Example Failure:
@@@
 1) Failure:
test_named_route_should_show_host_and_path_using_controller_default_url_options(UrlHelperWithControllerTest)
    [./test/template/url_helper_test.rb:392:in `test_named_route_should_show_host_and_path_using_controller_default_url_options'
     ./test/template/url_helper_test.rb:417:in `with_url_helper_routing'
     ./test/../lib/action_controller/test_process.rb:514:in `with_routing'
     ./test/template/url_helper_test.rb:412:in `with_url_helper_routing'
     ./test/template/url_helper_test.rb:390:in `test_named_route_should_show_host_and_path_using_controller_default_url_options'
     ./test/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `__send__'
     ./test/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `run']:
&lt;&quot;http://testtwo.host/url_helper_with_controller/show_named_route&quot;&gt; expected but was
&lt;&quot;http://test.host/url_helper_with_controller/show_named_route&quot;&gt;.
@@@</original-body>
  <latest-body>As discussed on the mailing list:

I have added a test case [1] in url_helper_test.rb (1st commit), that replicates a scenario we are seeing in production.

This fails [2], while similar test (in the second commit), hitting the controller directly seem to work ok.

This seems to be caused by the ActionController::Routing::Optimisation module.

The 3rd and final commit fixes the issue, does anyone know of a better way to get the test to pass, or are we going to have to just not optimize the *_url named routes (as the patch does)?


Thanks in advance
   - Tom


[1]
@@@ ruby
  def  
test_named_route_should_show_host_and_path_using_controller_default_url_options
    class &lt;&lt; @controller
      def default_url_options(options = nil)
        {:host =&gt; 'testtwo.host'}
      end
    end

    with_url_helper_routing do
      get :show_named_route, :kind =&gt; 'url'
      assert_equal 'http://testtwo.host/url_helper_with_controller/show_named_route' 
, @response.body
    end
  end
@@@


[2] Example Failure:
@@@
 1) Failure:
test_named_route_should_show_host_and_path_using_controller_default_url_options(UrlHelperWithControllerTest)
    [./test/template/url_helper_test.rb:392:in `test_named_route_should_show_host_and_path_using_controller_default_url_options'
     ./test/template/url_helper_test.rb:417:in `with_url_helper_routing'
     ./test/../lib/action_controller/test_process.rb:514:in `with_routing'
     ./test/template/url_helper_test.rb:412:in `with_url_helper_routing'
     ./test/template/url_helper_test.rb:390:in `test_named_route_should_show_host_and_path_using_controller_default_url_options'
     ./test/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `__send__'
     ./test/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `run']:
&lt;&quot;http://testtwo.host/url_helper_with_controller/show_named_route&quot;&gt; expected but was
&lt;&quot;http://test.host/url_helper_with_controller/show_named_route&quot;&gt;.
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;As discussed on the mailing list:&lt;/p&gt;
&lt;p&gt;I have added a test case &lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt; in url_helper_test.rb (1st commit),
that replicates a scenario we are seeing in production.&lt;/p&gt;
&lt;p&gt;This fails &lt;a href=&quot;/projects/8994/changesets/2&quot; title=&quot;Changeset #2&quot;&gt;[2]&lt;/a&gt;, while similar test (in the second commit),
hitting the controller directly seem to work ok.&lt;/p&gt;
&lt;p&gt;This seems to be caused by the
ActionController::Routing::Optimisation module.&lt;/p&gt;
&lt;p&gt;The 3rd and final commit fixes the issue, does anyone know of a
better way to get the test to pass, or are we going to have to just
not optimize the *_url named routes (as the patch does)?&lt;/p&gt;
&lt;p&gt;Thanks in advance - Tom&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt;&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  def
test_named_route_should_show_host_and_path_using_controller_default_url_options
    class &amp;lt;&amp;lt; @controller
      def default_url_options(options = nil)
        {:host =&amp;gt; 'testtwo.host'}
      end
    end

    with_url_helper_routing do
      get :show_named_route, :kind =&amp;gt; 'url'
      assert_equal 'http://testtwo.host/url_helper_with_controller/show_named_route'
, @response.body
    end
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/2&quot; title=&quot;Changeset #2&quot;&gt;[2]&lt;/a&gt; Example Failure:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
 1) Failure:
test_named_route_should_show_host_and_path_using_controller_default_url_options(UrlHelperWithControllerTest)
    [./test/template/url_helper_test.rb:392:in `test_named_route_should_show_host_and_path_using_controller_default_url_options'
     ./test/template/url_helper_test.rb:417:in `with_url_helper_routing'
     ./test/../lib/action_controller/test_process.rb:514:in `with_routing'
     ./test/template/url_helper_test.rb:412:in `with_url_helper_routing'
     ./test/template/url_helper_test.rb:390:in `test_named_route_should_show_host_and_path_using_controller_default_url_options'
     ./test/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `__send__'
     ./test/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `run']:
&amp;lt;&amp;quot;http://testtwo.host/url_helper_with_controller/show_named_route&amp;quot;&amp;gt; expected but was
&amp;lt;&amp;quot;http://test.host/url_helper_with_controller/show_named_route&amp;quot;&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As discussed on the mailing list:

I have added a test case [1] in url_helper_test.rb (1st commit), that replicates a scenario we are seeing in production.

This fails [2], while similar test (in the second commit), hitting the controller directly seem to work ok.

This seems to be caused by the ActionController::Routing::Optimisation module.

The 3rd and final commit fixes the issue, does anyone know of a better way to get the test to pass, or are we going to have to just not optimize the *_url named routes (as the patch does)?


Thanks in advance
   - Tom


[1]
@@@ ruby
  def  
test_named_route_should_show_host_and_path_using_controller_default_url_options
    class &lt;&lt; @controller
      def default_url_options(options = nil)
        {:host =&gt; 'testtwo.host'}
      end
    end

    with_url_helper_routing do
      get :show_named_route, :kind =&gt; 'url'
      assert_equal 'http://testtwo.host/url_helper_with_controller/show_named_route' 
, @response.body
    end
  end
@@@


[2] Example Failure:
@@@
 1) Failure:
test_named_route_should_show_host_and_path_using_controller_default_url_options(UrlHelperWithControllerTest)
    [./test/template/url_helper_test.rb:392:in `test_named_route_should_show_host_and_path_using_controller_default_url_options'
     ./test/template/url_helper_test.rb:417:in `with_url_helper_routing'
     ./test/../lib/action_controller/test_process.rb:514:in `with_routing'
     ./test/template/url_helper_test.rb:412:in `with_url_helper_routing'
     ./test/template/url_helper_test.rb:390:in `test_named_route_should_show_host_and_path_using_controller_default_url_options'
     ./test/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `__send__'
     ./test/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `run']:
&lt;&quot;http://testtwo.host/url_helper_with_controller/show_named_route&quot;&gt; expected but was
&lt;&quot;http://test.host/url_helper_with_controller/show_named_route&quot;&gt;.
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;As discussed on the mailing list:&lt;/p&gt;
&lt;p&gt;I have added a test case &lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt; in url_helper_test.rb (1st commit),
that replicates a scenario we are seeing in production.&lt;/p&gt;
&lt;p&gt;This fails &lt;a href=&quot;/projects/8994/changesets/2&quot; title=&quot;Changeset #2&quot;&gt;[2]&lt;/a&gt;, while similar test (in the second commit),
hitting the controller directly seem to work ok.&lt;/p&gt;
&lt;p&gt;This seems to be caused by the
ActionController::Routing::Optimisation module.&lt;/p&gt;
&lt;p&gt;The 3rd and final commit fixes the issue, does anyone know of a
better way to get the test to pass, or are we going to have to just
not optimize the *_url named routes (as the patch does)?&lt;/p&gt;
&lt;p&gt;Thanks in advance - Tom&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/1&quot; title=&quot;Changeset #1&quot;&gt;[1]&lt;/a&gt;&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  def
test_named_route_should_show_host_and_path_using_controller_default_url_options
    class &amp;lt;&amp;lt; @controller
      def default_url_options(options = nil)
        {:host =&amp;gt; 'testtwo.host'}
      end
    end

    with_url_helper_routing do
      get :show_named_route, :kind =&amp;gt; 'url'
      assert_equal 'http://testtwo.host/url_helper_with_controller/show_named_route'
, @response.body
    end
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;/projects/8994/changesets/2&quot; title=&quot;Changeset #2&quot;&gt;[2]&lt;/a&gt; Example Failure:&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
 1) Failure:
test_named_route_should_show_host_and_path_using_controller_default_url_options(UrlHelperWithControllerTest)
    [./test/template/url_helper_test.rb:392:in `test_named_route_should_show_host_and_path_using_controller_default_url_options'
     ./test/template/url_helper_test.rb:417:in `with_url_helper_routing'
     ./test/../lib/action_controller/test_process.rb:514:in `with_routing'
     ./test/template/url_helper_test.rb:412:in `with_url_helper_routing'
     ./test/template/url_helper_test.rb:390:in `test_named_route_should_show_host_and_path_using_controller_default_url_options'
     ./test/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `__send__'
     ./test/../../activesupport/lib/active_support/testing/setup_and_teardown.rb:94:in `run']:
&amp;lt;&amp;quot;http://testtwo.host/url_helper_with_controller/show_named_route&amp;quot;&amp;gt; expected but was
&amp;lt;&amp;quot;http://test.host/url_helper_with_controller/show_named_route&amp;quot;&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-30T18:09:43+00:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1301</number>
      <permalink>patch-named-routes-in-actionview-scope-dont-respect-acbasedefault_url_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview bug named_routes patch</tag>
      <title>[PATCH] Named Routes in ActionView Scope Don't Respect AC::Base#default_url_options</title>
      <updated-at type="datetime">2008-10-30T18:09:46+00:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">1</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Tom Lea</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1301</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>OK, that fix is way too pessimistic.  Turns off the optimisations for everything :)

Given that the model already does a check on defined?(default_url_options) I'm a little confused why it's not working for you.

the best bet is probably to either use a debugger, or logging, and see why / if the defined?(... guards are functioning correctly.</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, that fix is way too pessimistic. Turns off the optimisations
for everything :)&lt;/p&gt;
&lt;p&gt;Given that the model already does a check on
defined?(default_url_options) I'm a little confused why it's not
working for you.&lt;/p&gt;
&lt;p&gt;the best bet is probably to either use a debugger, or logging,
and see why / if the defined?(... guards are functioning
correctly.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-30T18:26:25+00:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1301</number>
      <permalink>patch-named-routes-in-actionview-scope-dont-respect-acbasedefault_url_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview bug named_routes patch</tag>
      <title>[PATCH] Named Routes in ActionView Scope Don't Respect AC::Base#default_url_options</title>
      <updated-at type="datetime">2008-10-30T18:26:29+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Tom Lea</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1301</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Koz: The guard conditions don't fire because default_url_options is not defined on the action view.

The patch should just disable *_url methods and not *_path methods... but I agree, this does not feel ideal.

The only other alternative I can see is to add a default_url_options method to the action view (patch attached). I was initially reluctant to add the method directly to ActionView, as the only reason it is needed is because of the optimizations.

The named routes are created on the AV::Base at the same time as they are defined on the AC::Base, but AV::Base has no knowledge of default_url_options, before the optimization we would just ask the controller what to do.

So the third way, would be to ensure that AV::Base#foo_url would delegate to @controller#foo_url. This may be the cleanest option.

What are your thoughts?

If the third option is going to be preferred, let me know and I'll try and get a patch together tonight.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Koz: The guard conditions don't fire because default_url_options
is not defined on the action view.&lt;/p&gt;
&lt;p&gt;The patch should just disable &lt;em&gt;_url methods and not&lt;/em&gt;
_path methods... but I agree, this does not feel ideal.&lt;/p&gt;
&lt;p&gt;The only other alternative I can see is to add a
default_url_options method to the action view (patch attached). I
was initially reluctant to add the method directly to ActionView,
as the only reason it is needed is because of the
optimizations.&lt;/p&gt;
&lt;p&gt;The named routes are created on the AV::Base at the same time as
they are defined on the AC::Base, but AV::Base has no knowledge of
default_url_options, before the optimization we would just ask the
controller what to do.&lt;/p&gt;
&lt;p&gt;So the third way, would be to ensure that AV::Base#foo_url would
delegate to @controller#foo_url. This may be the cleanest
option.&lt;/p&gt;
&lt;p&gt;What are your thoughts?&lt;/p&gt;
&lt;p&gt;If the third option is going to be preferred, let me know and
I'll try and get a patch together tonight.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-31T14:26:12+00:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1301</number>
      <permalink>patch-named-routes-in-actionview-scope-dont-respect-acbasedefault_url_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview bug named_routes patch</tag>
      <title>[PATCH] Named Routes in ActionView Scope Don't Respect AC::Base#default_url_options</title>
      <updated-at type="datetime">2008-10-31T14:26:13+00:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">3</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Tom Lea</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1301</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-31T17:43:54+00:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1301</number>
      <permalink>patch-named-routes-in-actionview-scope-dont-respect-acbasedefault_url_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview bug named_routes patch</tag>
      <title>[PATCH] Named Routes in ActionView Scope Don't Respect AC::Base#default_url_options</title>
      <updated-at type="datetime">2008-10-31T17:43:58+00:00</updated-at>
      <user-id type="integer">83</user-id>
      <version type="integer">4</version>
      <user-name>DHH</user-name>
      <creator-name>Tom Lea</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1301</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>I got bored, so here is a possible implementation of delegating named routes away to the controller.

Patch attached.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I got bored, so here is a possible implementation of delegating
named routes away to the controller.&lt;/p&gt;
&lt;p&gt;Patch attached.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-31T20:08:53+00:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1301</number>
      <permalink>patch-named-routes-in-actionview-scope-dont-respect-acbasedefault_url_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview bug named_routes patch</tag>
      <title>[PATCH] Named Routes in ActionView Scope Don't Respect AC::Base#default_url_options</title>
      <updated-at type="datetime">2008-10-31T20:08:56+00:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">5</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Tom Lea</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1301</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Sorry for the slow responses on this, been a little snowed under.

So from my understanding, the url_for in ActionView will fallback to the controller's default_url_options.  Because of this the faster routes guard conditions don't fire, and the methods return the wrong values.

Does adding helper_method :default_url_options in your controller fix the issue?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry for the slow responses on this, been a little snowed
under.&lt;/p&gt;
&lt;p&gt;So from my understanding, the url_for in ActionView will
fallback to the controller's default_url_options. Because of this
the faster routes guard conditions don't fire, and the methods
return the wrong values.&lt;/p&gt;
&lt;p&gt;Does adding helper_method :default_url_options in your
controller fix the issue?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-01T11:19:06+00:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1301</number>
      <permalink>patch-named-routes-in-actionview-scope-dont-respect-acbasedefault_url_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview bug named_routes patch</tag>
      <title>[PATCH] Named Routes in ActionView Scope Don't Respect AC::Base#default_url_options</title>
      <updated-at type="datetime">2008-11-01T11:19:07+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">6</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Tom Lea</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1301</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>&gt; So from my understanding, the url_for in ActionView will fallback to the controller's default_url_options. Because of this the faster routes guard conditions don't fire, and the methods return the wrong values.

Correct, that seems to be what I am seeing in testing and production.

&gt; Does adding helper_method :default_url_options in your controller fix the issue?

Indeed it does, but it doesn't feel quite right.


How would you feel about extending the guard conditions to include `defined?(@controller.default_url_options) &amp;&amp; !@controller.default_url_options.empty?` amongst the rest.

(once again, patch attached, it seems I just love patches)</body>
      <body-html>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;So from my understanding, the url_for in ActionView will
fallback to the controller's default_url_options. Because of this
the faster routes guard conditions don't fire, and the methods
return the wrong values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Correct, that seems to be what I am seeing in testing and
production.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Does adding helper_method :default_url_options in your
controller fix the issue?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Indeed it does, but it doesn't feel quite right.&lt;/p&gt;
&lt;p&gt;How would you feel about extending the guard conditions to
include &lt;code&gt;defined?(@controller.default_url_options) &amp;amp;&amp;amp;
&lt;a href=&quot;mailto:!@controller.default&quot;&gt;!@controller.default&lt;/a&gt;_url_options.empty?&lt;/code&gt;
amongst the rest.&lt;/p&gt;
&lt;p&gt;(once again, patch attached, it seems I just love patches)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-01T16:46:37+00:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1301</number>
      <permalink>patch-named-routes-in-actionview-scope-dont-respect-acbasedefault_url_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview bug named_routes patch</tag>
      <title>[PATCH] Named Routes in ActionView Scope Don't Respect AC::Base#default_url_options</title>
      <updated-at type="datetime">2008-11-01T16:46:39+00:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">7</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Tom Lea</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1301</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>OK, This looks good to me,  but could you tidy up those guard conditions.  They're 99% the same now so should be defined in one place with the differences getting shifted on the end.</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, This looks good to me, but could you tidy up those guard
conditions. They're 99% the same now so should be defined in one
place with the differences getting shifted on the end.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-01T16:49:41+00:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1301</number>
      <permalink>patch-named-routes-in-actionview-scope-dont-respect-acbasedefault_url_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview bug named_routes patch</tag>
      <title>[PATCH] Named Routes in ActionView Scope Don't Respect AC::Base#default_url_options</title>
      <updated-at type="datetime">2008-11-01T16:49:44+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">8</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Tom Lea</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1301</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Right, went a little further, built up an array and then &amp;&amp;'d them, felt more readable, all the requirements with a line each.

Final merged + rebased patch attached.

Thanks for the help.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Right, went a little further, built up an array and then
&amp;amp;&amp;amp;'d them, felt more readable, all the requirements with a
line each.&lt;/p&gt;
&lt;p&gt;Final merged + rebased patch attached.&lt;/p&gt;
&lt;p&gt;Thanks for the help.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-01T18:00:22+00:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1301</number>
      <permalink>patch-named-routes-in-actionview-scope-dont-respect-acbasedefault_url_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>actionview bug named_routes patch</tag>
      <title>[PATCH] Named Routes in ActionView Scope Don't Respect AC::Base#default_url_options</title>
      <updated-at type="datetime">2008-11-01T18:00:24+00:00</updated-at>
      <user-id type="integer">28420</user-id>
      <version type="integer">9</version>
      <user-name>Tom Lea</user-name>
      <creator-name>Tom Lea</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1301</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>applied ages ago</body>
      <body-html>&lt;div&gt;&lt;p&gt;applied ages ago&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-11-11T13:35:38+00:00</created-at>
      <creator-id type="integer">28420</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1301</number>
      <permalink>patch-named-routes-in-actionview-scope-dont-respect-acbasedefault_url_options</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>actionview bug named_routes patch</tag>
      <title>[PATCH] Named Routes in ActionView Scope Don't Respect AC::Base#default_url_options</title>
      <updated-at type="datetime">2008-11-11T13:35:40+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">10</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Tom Lea</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1301</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>7db048479cc0c9a93b485d5d6d81ad5179720d20</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-30T18:09:43+00:00</created-at>
      <filename>default_url_options_issue.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">58319</id>
      <size type="integer">4119</size>
      <uploader-id type="integer">28420</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/58319/default_url_options_issue.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>83166bf6c04fbfc68c022c74996b2238a4acd93f</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-31T14:26:12+00:00</created-at>
      <filename>default_url_options_issue.2.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">58564</id>
      <size type="integer">4269</size>
      <uploader-id type="integer">28420</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/58564/default_url_options_issue.2.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>c809479e751ba2e1d6330d647abf277f5aa9c1f2</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-31T20:08:53+00:00</created-at>
      <filename>default_url_options_issue.3.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">58659</id>
      <size type="integer">2721</size>
      <uploader-id type="integer">28420</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/58659/default_url_options_issue.3.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>4a912eff81701373522f3902d15325651e9c6da2</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-01T16:46:37+00:00</created-at>
      <filename>default_url_options_issue.4.adding_more_guard_conditions.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">58756</id>
      <size type="integer">2668</size>
      <uploader-id type="integer">28420</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/58756/default_url_options_issue.4.adding_more_guard_conditions.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>2ec39367dcdecd0e08cf14c1df615a91d7bed2b6</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-11-01T18:00:23+00:00</created-at>
      <filename>default_url_options_issue.5.final.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">58759</id>
      <size type="integer">7268</size>
      <uploader-id type="integer">28420</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/58759/default_url_options_issue.5.final.diff</url>
    </attachment>
  </attachments>
</ticket>
