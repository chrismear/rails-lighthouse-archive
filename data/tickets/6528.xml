<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-03-04T21:02:18+00:00</created-at>
  <creator-id type="integer">139976</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6528</number>
  <permalink>bad-singularization-when-creating-scaffold-for-anamnesis</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag nil="true"></tag>
  <title>Bad singularization when creating scaffold for &quot;anamnesis&quot;</title>
  <updated-at type="datetime">2011-03-04T21:28:55+00:00</updated-at>
  <user-id type="integer">7697</user-id>
  <version type="integer">2</version>
  <user-name>Andrew White</user-name>
  <creator-name>Emil Loer</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6528</url>
  <priority-name>Low</priority-name>
  <original-body>I want to create a scaffold for a model named Anamnesis, which is a medical term (see http://en.wikipedia.org/wiki/Anamnesis_(medicine) for more info).

Now, the plural form for anamnesis is anamneses, and Rails handles this correctly. However, in the controller you can see that Rails tries to derive a singular form of the plural form again and it thinks it should be &quot;anamnese&quot;, which is wrong. What happens then is that some parts of the controller refer to variables named anamnesis while others refer to variables named anamnese, and this causes the controller to be unable to store data.

Steps needed to reproduce erratic behaviour:

 1. rails new myapp
 2. rails g scaffold anamnesis myfield:string
 3. rake db:migrate
 4. start a server and create an anamnesis
 5. notice that myfield was not stored</original-body>
  <latest-body>I want to create a scaffold for a model named Anamnesis, which is a medical term (see http://en.wikipedia.org/wiki/Anamnesis_(medicine) for more info).

Now, the plural form for anamnesis is anamneses, and Rails handles this correctly. However, in the controller you can see that Rails tries to derive a singular form of the plural form again and it thinks it should be &quot;anamnese&quot;, which is wrong. What happens then is that some parts of the controller refer to variables named anamnesis while others refer to variables named anamnese, and this causes the controller to be unable to store data.

Steps needed to reproduce erratic behaviour:

 1. rails new myapp
 2. rails g scaffold anamnesis myfield:string
 3. rake db:migrate
 4. start a server and create an anamnesis
 5. notice that myfield was not stored</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I want to create a scaffold for a model named Anamnesis, which
is a medical term (see &lt;a href=
&quot;http://en.wikipedia.org/wiki/Anamnesis_(medicine)&quot;&gt;http://en.wikipedia.org/wiki/Anamnesis_(medicine)&lt;/a&gt;
for more info).&lt;/p&gt;
&lt;p&gt;Now, the plural form for anamnesis is anamneses, and Rails
handles this correctly. However, in the controller you can see that
Rails tries to derive a singular form of the plural form again and
it thinks it should be &quot;anamnese&quot;, which is wrong. What happens
then is that some parts of the controller refer to variables named
anamnesis while others refer to variables named anamnese, and this
causes the controller to be unable to store data.&lt;/p&gt;
&lt;p&gt;Steps needed to reproduce erratic behaviour:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;rails new myapp&lt;/li&gt;
&lt;li&gt;rails g scaffold anamnesis myfield:string&lt;/li&gt;
&lt;li&gt;rake db:migrate&lt;/li&gt;
&lt;li&gt;start a server and create an anamnesis&lt;/li&gt;
&lt;li&gt;notice that myfield was not stored&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I want to create a scaffold for a model named Anamnesis, which is a medical term (see http://en.wikipedia.org/wiki/Anamnesis_(medicine) for more info).

Now, the plural form for anamnesis is anamneses, and Rails handles this correctly. However, in the controller you can see that Rails tries to derive a singular form of the plural form again and it thinks it should be &quot;anamnese&quot;, which is wrong. What happens then is that some parts of the controller refer to variables named anamnesis while others refer to variables named anamnese, and this causes the controller to be unable to store data.

Steps needed to reproduce erratic behaviour:

 1. rails new myapp
 2. rails g scaffold anamnesis myfield:string
 3. rake db:migrate
 4. start a server and create an anamnesis
 5. notice that myfield was not stored</body>
      <body-html>&lt;div&gt;&lt;p&gt;I want to create a scaffold for a model named Anamnesis, which
is a medical term (see &lt;a href=
&quot;http://en.wikipedia.org/wiki/Anamnesis_(medicine)&quot;&gt;http://en.wikipedia.org/wiki/Anamnesis_(medicine)&lt;/a&gt;
for more info).&lt;/p&gt;
&lt;p&gt;Now, the plural form for anamnesis is anamneses, and Rails
handles this correctly. However, in the controller you can see that
Rails tries to derive a singular form of the plural form again and
it thinks it should be &quot;anamnese&quot;, which is wrong. What happens
then is that some parts of the controller refer to variables named
anamnesis while others refer to variables named anamnese, and this
causes the controller to be unable to store data.&lt;/p&gt;
&lt;p&gt;Steps needed to reproduce erratic behaviour:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;rails new myapp&lt;/li&gt;
&lt;li&gt;rails g scaffold anamnesis myfield:string&lt;/li&gt;
&lt;li&gt;rake db:migrate&lt;/li&gt;
&lt;li&gt;start a server and create an anamnesis&lt;/li&gt;
&lt;li&gt;notice that myfield was not stored&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-03-04T21:02:18+00:00</created-at>
      <creator-id type="integer">139976</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6528</number>
      <permalink>bad-singularization-when-creating-scaffold-for-anamnesis</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>Bad singularization when creating scaffold for &quot;anamnesis&quot;</title>
      <updated-at type="datetime">2011-03-04T21:02:21+00:00</updated-at>
      <user-id type="integer">139976</user-id>
      <version type="integer">1</version>
      <user-name>Emil Loer</user-name>
      <creator-name>Emil Loer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6528</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Edit your inflections.rb initializer to add any custom inflections required by your application, e.g:

@@@ ruby
# config/initializers/inflections.rb
ActiveSupport::Inflector.inflections do |inflect|
  inflect.irregular 'anamnesis', 'anamneses'
end
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Edit your inflections.rb initializer to add any custom
inflections required by your application, e.g:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;# config/initializers/inflections.rb
ActiveSupport::Inflector.inflections do |inflect|
  inflect.irregular 'anamnesis', 'anamneses'
end&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-03-04T21:28:47+00:00</created-at>
      <creator-id type="integer">139976</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6528</number>
      <permalink>bad-singularization-when-creating-scaffold-for-anamnesis</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag nil="true"></tag>
      <title>Bad singularization when creating scaffold for &quot;anamnesis&quot;</title>
      <updated-at type="datetime">2011-03-04T21:28:55+00:00</updated-at>
      <user-id type="integer">7697</user-id>
      <version type="integer">2</version>
      <user-name>Andrew White</user-name>
      <creator-name>Emil Loer</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6528</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
