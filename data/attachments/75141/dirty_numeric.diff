From 417bf79f822bab22211677396d92e55c7249fcf3 Mon Sep 17 00:00:00 2001
From: Carlos Kozuszko <carlos@insignia4u.com>
Date: Sat, 3 Jan 2009 17:12:31 -0200
Subject: [PATCH] Fixing bug on ActiveRecord::Dirty#field_changed? for nullable numeric columns, NULL gets stored in database for blank (i.e. '') values.
 Only integer columns were considered.

---
 activerecord/lib/active_record/dirty.rb |    4 ++--
 activerecord/test/cases/dirty_test.rb   |   24 ++++++++++++++++++++++++
 activerecord/test/schema/schema.rb      |    1 +
 3 files changed, 27 insertions(+), 2 deletions(-)

diff --git a/activerecord/lib/active_record/dirty.rb b/activerecord/lib/active_record/dirty.rb
index 4c899f5..883be44 100644
--- a/activerecord/lib/active_record/dirty.rb
+++ b/activerecord/lib/active_record/dirty.rb
@@ -151,8 +151,8 @@ module ActiveRecord
 
       def field_changed?(attr, old, value)
         if column = column_for_attribute(attr)
-          if column.type == :integer && column.null && (old.nil? || old == 0) && value.blank?
-            # For nullable integer columns, NULL gets stored in database for blank (i.e. '') values.
+          if [:integer, :decimal, :float].include?(column.type) && column.null && (old.nil? || old == 0) && value.blank?
+            # For nullable numeric columns, NULL gets stored in database for blank (i.e. '') values.
             # Hence we don't record it as a change if the value changes from nil to ''.
             # If an old value of 0 is set to '' we want this to get changed to nil as otherwise it'll
             # be typecast back to 0 (''.to_i => 0)
diff --git a/activerecord/test/cases/dirty_test.rb b/activerecord/test/cases/dirty_test.rb
index 10cdbdc..5c43a07 100644
--- a/activerecord/test/cases/dirty_test.rb
+++ b/activerecord/test/cases/dirty_test.rb
@@ -21,6 +21,10 @@ private
   end
 end
 
+class NumericData < ActiveRecord::Base
+  self.table_name = 'numeric_data'
+end
+
 class DirtyTest < ActiveRecord::TestCase
   def test_attribute_changes
     # New record - no changes.
@@ -68,6 +72,26 @@ class DirtyTest < ActiveRecord::TestCase
     end
   end
 
+  def test_nullable_decimal_not_marked_as_changed_if_new_value_is_blank
+    numeric_data = NumericData.new
+
+    ["", nil].each do |value|
+      numeric_data.bank_balance = value
+      assert !numeric_data.bank_balance_changed?
+      assert_nil numeric_data.bank_balance_change
+    end
+  end
+
+  def test_nullable_float_not_marked_as_changed_if_new_value_is_blank
+    numeric_data = NumericData.new
+
+    ["", nil].each do |value|
+      numeric_data.temperature = value
+      assert !numeric_data.temperature_changed?
+      assert_nil numeric_data.temperature_change
+    end
+  end
+
   def test_nullable_integer_zero_to_string_zero_not_marked_as_changed
     pirate = Pirate.new
     pirate.parrot_id = 0
diff --git a/activerecord/test/schema/schema.rb b/activerecord/test/schema/schema.rb
index 8199cb8..094932d 100644
--- a/activerecord/test/schema/schema.rb
+++ b/activerecord/test/schema/schema.rb
@@ -252,6 +252,7 @@ ActiveRecord::Schema.define do
     t.decimal :world_population, :precision => 10, :scale => 0
     t.decimal :my_house_population, :precision => 2, :scale => 0
     t.decimal :decimal_number_with_default, :precision => 3, :scale => 2, :default => 2.78
+    t.float   :temperature
   end
 
   create_table :orders, :force => true do |t|
-- 
1.5.6.1.1071.g76fb

