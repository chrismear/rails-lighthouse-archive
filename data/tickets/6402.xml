<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-02-09T17:13:19+00:00</created-at>
  <creator-id type="integer">11787</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6402</number>
  <permalink>activerecordobserver-simplification-causes-callbacks-to-be-fired-multiple-times</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>activerecord observers patch &quot;rails 3.0.4&quot; rails3 &quot;rails3 observers&quot;</tag>
  <title>ActiveRecord::Observer simplification causes callbacks to be fired multiple times</title>
  <updated-at type="datetime">2011-02-23T00:58:00+00:00</updated-at>
  <user-id type="integer">15316</user-id>
  <version type="integer">4</version>
  <user-name>Aaron Patterson</user-name>
  <creator-name>Kamal Fariz</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6402</url>
  <priority-name>Low</priority-name>
  <original-body>[Commit 61f2d52d8](https://github.com/rails/rails/commit/61f2d52d8a95ca89ebcb107848890c07b014750c &quot;61f2d52d8a95ca89ebcb107848890c07b014750c&quot;) from #6065 causes the same callback from an observer to be fired multiple times.

For example,

@@@ ruby
class Developer &lt; ActiveRecord::Base; end

class SpecialDeveloper &lt; Developer; end

class DeveloperObserver &lt; ActiveRecord::Observer
  def before_save(developer)
    puts &quot;i'm called&quot;
  end
end
@@@

Calling `SpecialDeveloper.create(:name =&gt; &quot;foo&quot;)` will cause `&quot;i'm called&quot;` to be printed twice.

The problem is the simplication in `AR::Observer` created separate anonymous callbacks on each descendent

@@@ ruby
  SpecialDeveloper.before_save { |record| observer.before_save(record) }
  Developer.before_save { |record| observer.before_save(record) }
@@@

causing each to run in turn. Attached is a fix that goes back to defining a method on `Developer` and `SpecialDeveloper` and creating the callback of the form

@@@ ruby
  Developer.before_save :_notify_developer_observer_before_save_callback
  SpecialDeveloper.before_save :_notify_developer_observer_before_save_callback
@@@</original-body>
  <latest-body>[Commit 61f2d52d8](https://github.com/rails/rails/commit/61f2d52d8a95ca89ebcb107848890c07b014750c &quot;61f2d52d8a95ca89ebcb107848890c07b014750c&quot;) from #6065 causes the same callback from an observer to be fired multiple times.

For example,

@@@ ruby
class Developer &lt; ActiveRecord::Base; end

class SpecialDeveloper &lt; Developer; end

class DeveloperObserver &lt; ActiveRecord::Observer
  def before_save(developer)
    puts &quot;i'm called&quot;
  end
end
@@@

Calling `SpecialDeveloper.create(:name =&gt; &quot;foo&quot;)` will cause `&quot;i'm called&quot;` to be printed twice.

The problem is the simplication in `AR::Observer` created separate anonymous callbacks on each descendent

@@@ ruby
  SpecialDeveloper.before_save { |record| observer.before_save(record) }
  Developer.before_save { |record| observer.before_save(record) }
@@@

causing each to run in turn. Attached is a fix that goes back to defining a method on `Developer` and `SpecialDeveloper` and creating the callback of the form

@@@ ruby
  Developer.before_save :_notify_developer_observer_before_save_callback
  SpecialDeveloper.before_save :_notify_developer_observer_before_save_callback
@@@</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;https://github.com/rails/rails/commit/61f2d52d8a95ca89ebcb107848890c07b014750c&quot;
title=&quot;61f2d52d8a95ca89ebcb107848890c07b014750c&quot;&gt;Commit
61f2d52d8&lt;/a&gt; from &lt;a href=&quot;/projects/8994/tickets/6065&quot; title=
&quot;Ticket #6065&quot;&gt;#6065&lt;/a&gt; causes the same callback from an observer
to be fired multiple times.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Developer &amp;lt; ActiveRecord::Base; end

class SpecialDeveloper &amp;lt; Developer; end

class DeveloperObserver &amp;lt; ActiveRecord::Observer
  def before_save(developer)
    puts &quot;i'm called&quot;
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Calling &lt;code&gt;SpecialDeveloper.create(:name =&amp;gt; &quot;foo&quot;)&lt;/code&gt;
will cause &lt;code&gt;&quot;i'm called&quot;&lt;/code&gt; to be printed twice.&lt;/p&gt;
&lt;p&gt;The problem is the simplication in &lt;code&gt;AR::Observer&lt;/code&gt;
created separate anonymous callbacks on each descendent&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  SpecialDeveloper.before_save { |record| observer.before_save(record) }
  Developer.before_save { |record| observer.before_save(record) }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;causing each to run in turn. Attached is a fix that goes back to
defining a method on &lt;code&gt;Developer&lt;/code&gt; and
&lt;code&gt;SpecialDeveloper&lt;/code&gt; and creating the callback of the
form&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  Developer.before_save :_notify_developer_observer_before_save_callback
  SpecialDeveloper.before_save :_notify_developer_observer_before_save_callback&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[Commit 61f2d52d8](https://github.com/rails/rails/commit/61f2d52d8a95ca89ebcb107848890c07b014750c &quot;61f2d52d8a95ca89ebcb107848890c07b014750c&quot;) from #6065 causes the same callback from an observer to be fired multiple times.

For example,

@@@ ruby
class Developer &lt; ActiveRecord::Base; end

class SpecialDeveloper &lt; Developer; end

class DeveloperObserver &lt; ActiveRecord::Observer
  def before_save(developer)
    puts &quot;i'm called&quot;
  end
end
@@@

Calling `SpecialDeveloper.create(:name =&gt; &quot;foo&quot;)` will cause `&quot;i'm called&quot;` to be printed twice.

The problem is the simplication in `AR::Observer` created separate anonymous callbacks on each descendent

@@@ ruby
  SpecialDeveloper.before_save { |record| observer.before_save(record) }
  Developer.before_save { |record| observer.before_save(record) }
@@@

causing each to run in turn. Attached is a fix that goes back to defining a method on `Developer` and `SpecialDeveloper` and creating the callback of the form

@@@ ruby
  Developer.before_save :_notify_developer_observer_before_save_callback
  SpecialDeveloper.before_save :_notify_developer_observer_before_save_callback
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;https://github.com/rails/rails/commit/61f2d52d8a95ca89ebcb107848890c07b014750c&quot;
title=&quot;61f2d52d8a95ca89ebcb107848890c07b014750c&quot;&gt;Commit
61f2d52d8&lt;/a&gt; from &lt;a href=&quot;/projects/8994/tickets/6065&quot; title=
&quot;Ticket #6065&quot;&gt;#6065&lt;/a&gt; causes the same callback from an observer
to be fired multiple times.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;class Developer &amp;lt; ActiveRecord::Base; end

class SpecialDeveloper &amp;lt; Developer; end

class DeveloperObserver &amp;lt; ActiveRecord::Observer
  def before_save(developer)
    puts &quot;i'm called&quot;
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Calling &lt;code&gt;SpecialDeveloper.create(:name =&amp;gt; &quot;foo&quot;)&lt;/code&gt;
will cause &lt;code&gt;&quot;i'm called&quot;&lt;/code&gt; to be printed twice.&lt;/p&gt;
&lt;p&gt;The problem is the simplication in &lt;code&gt;AR::Observer&lt;/code&gt;
created separate anonymous callbacks on each descendent&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  SpecialDeveloper.before_save { |record| observer.before_save(record) }
  Developer.before_save { |record| observer.before_save(record) }&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;causing each to run in turn. Attached is a fix that goes back to
defining a method on &lt;code&gt;Developer&lt;/code&gt; and
&lt;code&gt;SpecialDeveloper&lt;/code&gt; and creating the callback of the
form&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;  Developer.before_save :_notify_developer_observer_before_save_callback
  SpecialDeveloper.before_save :_notify_developer_observer_before_save_callback&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-09T17:13:19+00:00</created-at>
      <creator-id type="integer">11787</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6402</number>
      <permalink>activerecordobserver-simplification-causes-callbacks-to-be-fired-multiple-times</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord observers patch &quot;rails 3.0.4&quot; rails3 &quot;rails3 observers&quot;</tag>
      <title>ActiveRecord::Observer simplification causes callbacks to be fired multiple times</title>
      <updated-at type="datetime">2011-02-09T17:13:24+00:00</updated-at>
      <user-id type="integer">11787</user-id>
      <version type="integer">1</version>
      <user-name>Kamal Fariz</user-name>
      <creator-name>Kamal Fariz</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6402</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'm experiencing this bug as well. I don't see how it could be accomplished using the anonymous callbacks so falling back to the previous implementation seems best.

Applied cleanly with test passing against 3-0-4-security branch.

+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm experiencing this bug as well. I don't see how it could be
accomplished using the anonymous callbacks so falling back to the
previous implementation seems best.&lt;/p&gt;
&lt;p&gt;Applied cleanly with test passing against 3-0-4-security
branch.&lt;/p&gt;
&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-09T19:27:46+00:00</created-at>
      <creator-id type="integer">11787</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6402</number>
      <permalink>activerecordobserver-simplification-causes-callbacks-to-be-fired-multiple-times</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord observers patch &quot;rails 3.0.4&quot; rails3 &quot;rails3 observers&quot;</tag>
      <title>ActiveRecord::Observer simplification causes callbacks to be fired multiple times</title>
      <updated-at type="datetime">2011-02-09T19:27:51+00:00</updated-at>
      <user-id type="integer">39818</user-id>
      <version type="integer">2</version>
      <user-name>Jesse Storimer</user-name>
      <creator-name>Kamal Fariz</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6402</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I have been unwilling to upgrade to 3.0.5 because of this bug.

+1</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have been unwilling to upgrade to 3.0.5 because of this
bug.&lt;/p&gt;
&lt;p&gt;+1&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-22T07:24:16+00:00</created-at>
      <creator-id type="integer">11787</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6402</number>
      <permalink>activerecordobserver-simplification-causes-callbacks-to-be-fired-multiple-times</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord observers patch &quot;rails 3.0.4&quot; rails3 &quot;rails3 observers&quot;</tag>
      <title>ActiveRecord::Observer simplification causes callbacks to be fired multiple times</title>
      <updated-at type="datetime">2011-02-22T07:24:22+00:00</updated-at>
      <user-id type="integer">109149</user-id>
      <version type="integer">3</version>
      <user-name>Daniel Abrahamsson</user-name>
      <creator-name>Kamal Fariz</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6402</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Applied and pushed.  Thanks!</body>
      <body-html>&lt;div&gt;&lt;p&gt;Applied and pushed. Thanks!&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-23T00:57:50+00:00</created-at>
      <creator-id type="integer">11787</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6402</number>
      <permalink>activerecordobserver-simplification-causes-callbacks-to-be-fired-multiple-times</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>activerecord observers patch &quot;rails 3.0.4&quot; rails3 &quot;rails3 observers&quot;</tag>
      <title>ActiveRecord::Observer simplification causes callbacks to be fired multiple times</title>
      <updated-at type="datetime">2011-02-23T00:58:00+00:00</updated-at>
      <user-id type="integer">15316</user-id>
      <version type="integer">4</version>
      <user-name>Aaron Patterson</user-name>
      <creator-name>Kamal Fariz</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6402</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c457adeb03e1d0ac70ec2c2742f2dcce4f22ef2a</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2011-02-09T17:13:19+00:00</created-at>
      <filename>observer_callbacks_fired_multiple_times.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">904309</id>
      <size type="integer">2519</size>
      <uploader-id type="integer">11787</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/904309/observer_callbacks_fired_multiple_times.diff</url>
    </attachment>
  </attachments>
</ticket>
