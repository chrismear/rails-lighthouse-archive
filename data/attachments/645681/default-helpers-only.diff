From ab4f0eef2194b30fb6d00322aeefa21883ffd83c Mon Sep 17 00:00:00 2001
From: Jesse Storimer <jstorimer@gmail.com>
Date: Wed, 25 Aug 2010 16:43:43 -0400
Subject: [PATCH] Add option to opt out of `helper :all` in controllers [#5348 state:resolved]

---
 actionpack/lib/action_controller/base.rb           |    2 +-
 actionpack/lib/action_controller/metal/helpers.rb  |   20 ++++++++++++++++++++
 actionpack/test/controller/helper_test.rb          |   12 ++++++++++++
 actionpack/test/fixtures/helpers/just_me_helper.rb |    3 +++
 actionpack/test/fixtures/helpers/me_too_helper.rb  |    3 +++
 5 files changed, 39 insertions(+), 1 deletions(-)
 create mode 100644 actionpack/test/fixtures/helpers/just_me_helper.rb
 create mode 100644 actionpack/test/fixtures/helpers/me_too_helper.rb

diff --git a/actionpack/lib/action_controller/base.rb b/actionpack/lib/action_controller/base.rb
index 9dfffce..21eac8e 100644
--- a/actionpack/lib/action_controller/base.rb
+++ b/actionpack/lib/action_controller/base.rb
@@ -60,7 +60,7 @@ module ActionController
 
     def self.inherited(klass)
       super
-      klass.helper :all
+      klass.helper(:all) unless klass.dont_include_all_helpers
     end
 
     ActiveSupport.run_load_hooks(:action_controller, self)
diff --git a/actionpack/lib/action_controller/metal/helpers.rb b/actionpack/lib/action_controller/metal/helpers.rb
index e0bc473..997f4f0 100644
--- a/actionpack/lib/action_controller/metal/helpers.rb
+++ b/actionpack/lib/action_controller/metal/helpers.rb
@@ -55,6 +55,8 @@ module ActionController
     included do
       config_accessor :helpers_path
       self.helpers_path ||= []
+
+      config_accessor :dont_include_all_helpers
     end
 
     module ClassMethods
@@ -86,6 +88,24 @@ module ActionController
         @helper_proxy ||= ActionView::Base.new.extend(_helpers)
       end
 
+      # Declares that this controller (and its inheritors) will not
+      # include all helpers. Only the default helpers will be included
+      # this controller (ie. ProductsHelper for ProductsController).
+      #
+      # ==== Examples
+      #   class ApplicationController < ActionController::Base
+      #     default_helpers_only!
+      #   end
+      #
+      #  The above example replicates the behaviour of removing `helper :all`
+      #  from ApplicationController in Rails 2.x.
+      def default_helpers_only!
+        self.dont_include_all_helpers = true
+
+        self._helpers = Module.new
+        default_helper_module! unless anonymous?
+      end
+
       private
         # Overwrite modules_for_helpers to accept :all as argument, which loads
         # all helpers in helpers_dir.
diff --git a/actionpack/test/controller/helper_test.rb b/actionpack/test/controller/helper_test.rb
index ad66f13..f4136d2 100644
--- a/actionpack/test/controller/helper_test.rb
+++ b/actionpack/test/controller/helper_test.rb
@@ -25,6 +25,13 @@ class AllHelpersController < ActionController::Base
   helper :all
 end
 
+class JustMeController < ActionController::Base
+  default_helpers_only!
+end
+
+class MeTooController < JustMeController
+end
+
 module LocalAbcHelper
   def a() end
   def b() end
@@ -92,6 +99,11 @@ class HelperTest < ActiveSupport::TestCase
     # assert_equal 'test: baz', Fun::PdfController.process(request, response).body
   end
 
+  def test_default_helpers_only
+    assert_equal [JustMeHelper], JustMeController._helpers.ancestors.reject(&:anonymous?)
+    assert_equal [MeTooHelper, JustMeHelper], MeTooController._helpers.ancestors.reject(&:anonymous?)
+  end
+
   def test_all_helpers
     methods = AllHelpersController._helpers.instance_methods.map {|m| m.to_s}
 
diff --git a/actionpack/test/fixtures/helpers/just_me_helper.rb b/actionpack/test/fixtures/helpers/just_me_helper.rb
new file mode 100644
index 0000000..b140a7b
--- /dev/null
+++ b/actionpack/test/fixtures/helpers/just_me_helper.rb
@@ -0,0 +1,3 @@
+module JustMeHelper
+  def me() "mine!" end
+end
\ No newline at end of file
diff --git a/actionpack/test/fixtures/helpers/me_too_helper.rb b/actionpack/test/fixtures/helpers/me_too_helper.rb
new file mode 100644
index 0000000..ce56042
--- /dev/null
+++ b/actionpack/test/fixtures/helpers/me_too_helper.rb
@@ -0,0 +1,3 @@
+module MeTooHelper
+  def me() "me too!" end
+end
\ No newline at end of file
-- 
1.7.2.2

