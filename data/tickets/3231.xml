<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">424</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-18T08:49:56+01:00</created-at>
  <creator-id type="integer">1023</creator-id>
  <milestone-due-on type="datetime">2010-01-15T00:00:00+00:00</milestone-due-on>
  <milestone-id type="integer">50064</milestone-id>
  <number type="integer">3231</number>
  <permalink>routes_for-method-doesnt-work-at-all</permalink>
  <priority type="integer">2</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>2-3-stable</tag>
  <title>#routes_for method doesn't work at all</title>
  <updated-at type="datetime">2009-09-19T16:27:20+01:00</updated-at>
  <user-id type="integer">424</user-id>
  <version type="integer">6</version>
  <user-name>Joshua Peek</user-name>
  <creator-name>Ian White</creator-name>
  <assigned-user-name>Joshua Peek</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3231</url>
  <milestone-title>2.3.6</milestone-title>
  <priority-name>Medium</priority-name>
  <original-body>(in AR::Routing::RouteSet)

In ticket #3023, `#routes_for_controller_and_action` is deprecated in favour of `#routes_for`.  I am using #routes_for_controller_and_action, so am keen to change up.

Trouble is, `#routes_for` doesn't work at all.  Here's the code form line 463 of route_set.rb

@@@ ruby
def routes_for(options, merged, expire_on)
  raise &quot;Need controller and action!&quot; unless controller &amp;&amp; action
  controller = merged[:controller]
  merged = options if expire_on[:controller]
  action = merged[:action] || 'index'

  routes_by_controller[controller][action][merged.keys][1]
end
@@@

The method always dies on the first line, since `controller` and `action` are not in local scope. (and are not instance methods either).

There were no tests for this method, so I'm not sure of the intent.  It looks like the raise should be relocated to line 5 of the method.</original-body>
  <latest-body>(in AR::Routing::RouteSet)

In ticket #3023, `#routes_for_controller_and_action` is deprecated in favour of `#routes_for`.  I am using #routes_for_controller_and_action, so am keen to change up.

Trouble is, `#routes_for` doesn't work at all.  Here's the code form line 463 of route_set.rb

@@@ ruby
def routes_for(options, merged, expire_on)
  raise &quot;Need controller and action!&quot; unless controller &amp;&amp; action
  controller = merged[:controller]
  merged = options if expire_on[:controller]
  action = merged[:action] || 'index'

  routes_by_controller[controller][action][merged.keys][1]
end
@@@

The method always dies on the first line, since `controller` and `action` are not in local scope. (and are not instance methods either).

There were no tests for this method, so I'm not sure of the intent.  It looks like the raise should be relocated to line 5 of the method.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;(in AR::Routing::RouteSet)&lt;/p&gt;
&lt;p&gt;In ticket &lt;a href=&quot;/projects/8994/tickets/3023&quot; title=
&quot;Ticket #3023&quot;&gt;#3023&lt;/a&gt;,
&lt;code&gt;#routes_for_controller_and_action&lt;/code&gt; is deprecated in
favour of &lt;code&gt;#routes_for&lt;/code&gt;. I am using
#routes_for_controller_and_action, so am keen to change up.&lt;/p&gt;
&lt;p&gt;Trouble is, &lt;code&gt;#routes_for&lt;/code&gt; doesn't work at all. Here's
the code form line 463 of route_set.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def routes_for(options, merged, expire_on)
  raise &quot;Need controller and action!&quot; unless controller &amp;amp;&amp;amp; action
  controller = merged[:controller]
  merged = options if expire_on[:controller]
  action = merged[:action] || 'index'

  routes_by_controller[controller][action][merged.keys][1]
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The method always dies on the first line, since
&lt;code&gt;controller&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt; are not in local
scope. (and are not instance methods either).&lt;/p&gt;
&lt;p&gt;There were no tests for this method, so I'm not sure of the
intent. It looks like the raise should be relocated to line 5 of
the method.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>(in AR::Routing::RouteSet)

In ticket #3023, `#routes_for_controller_and_action` is deprecated in favour of `#routes_for`.  I am using #routes_for_controller_and_action, so am keen to change up.

Trouble is, `#routes_for` doesn't work at all.  Here's the code form line 463 of route_set.rb

@@@ ruby
def routes_for(options, merged, expire_on)
  raise &quot;Need controller and action!&quot; unless controller &amp;&amp; action
  controller = merged[:controller]
  merged = options if expire_on[:controller]
  action = merged[:action] || 'index'

  routes_by_controller[controller][action][merged.keys][1]
end
@@@

The method always dies on the first line, since `controller` and `action` are not in local scope. (and are not instance methods either).

There were no tests for this method, so I'm not sure of the intent.  It looks like the raise should be relocated to line 5 of the method.</body>
      <body-html>&lt;div&gt;&lt;p&gt;(in AR::Routing::RouteSet)&lt;/p&gt;
&lt;p&gt;In ticket &lt;a href=&quot;/projects/8994/tickets/3023&quot; title=
&quot;Ticket #3023&quot;&gt;#3023&lt;/a&gt;,
&lt;code&gt;#routes_for_controller_and_action&lt;/code&gt; is deprecated in
favour of &lt;code&gt;#routes_for&lt;/code&gt;. I am using
#routes_for_controller_and_action, so am keen to change up.&lt;/p&gt;
&lt;p&gt;Trouble is, &lt;code&gt;#routes_for&lt;/code&gt; doesn't work at all. Here's
the code form line 463 of route_set.rb&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;def routes_for(options, merged, expire_on)
  raise &quot;Need controller and action!&quot; unless controller &amp;amp;&amp;amp; action
  controller = merged[:controller]
  merged = options if expire_on[:controller]
  action = merged[:action] || 'index'

  routes_by_controller[controller][action][merged.keys][1]
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The method always dies on the first line, since
&lt;code&gt;controller&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt; are not in local
scope. (and are not instance methods either).&lt;/p&gt;
&lt;p&gt;There were no tests for this method, so I'm not sure of the
intent. It looks like the raise should be relocated to line 5 of
the method.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-18T08:49:56+01:00</created-at>
      <creator-id type="integer">1023</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3231</number>
      <permalink>routes_for-method-doesnt-work-at-all</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2-3-stable</tag>
      <title>#routes_for method doesn't work at all</title>
      <updated-at type="datetime">2009-09-18T08:49:59+01:00</updated-at>
      <user-id type="integer">1023</user-id>
      <version type="integer">1</version>
      <user-name>Ian White</user-name>
      <creator-name>Ian White</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3231</url>
      <milestone-title nil="true"></milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>These methods are supposed to be &quot;private&quot; api. I'm willing to patch them if they are broken in 2.x but they will be gone in Rails 3.0.

However, I'm interested in your use case for them. Maybe we can come up with a better api we can officially expose.</body>
      <body-html>&lt;div&gt;&lt;p&gt;These methods are supposed to be &quot;private&quot; api. I'm willing to
patch them if they are broken in 2.x but they will be gone in Rails
3.0.&lt;/p&gt;
&lt;p&gt;However, I'm interested in your use case for them. Maybe we can
come up with a better api we can officially expose.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-18T15:22:25+01:00</created-at>
      <creator-id type="integer">1023</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3231</number>
      <permalink>routes_for-method-doesnt-work-at-all</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable</tag>
      <title>#routes_for method doesn't work at all</title>
      <updated-at type="datetime">2009-09-18T15:22:30+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">2</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Ian White</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3231</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>My use case is for a plugin called resources_controller.  This plugin enables controllers to load nesting resources by introspecting the route that invoked the controller (enabling stuff like one controller for a polymorphic assoc, instead of many controllers, one for each (parent,child) pair).

Anyway, that aside, I originally solved this problem by patching Routing to store the the route that was recognised, and pass this along with the request to the controller.  This worked, but I gave up on it, because I didn't want to rely on internals of Routing in the patch (And the plugin is supported on all rails 2.x versions) 

So I swapped this for relying of being able to re-recognise the route in the controller (this was waaaay back before a 'plugin API' was ever on the cards).  I used `#routes_by_controller_and_action` to get a subset of routes to recognize, to make this process cheaper.

Bottom line: I want to ask what route was recognised in a particular request.  I'm not wedded to #routes_for, that's just a stepping stone.

I think that being able to know what route invoked a controller is a nice bit of reflection, and it enables lots of cool stuff.  If you agree, I'd happily write a patch for this (when I did it a year and a half ago it was a two liner + test).

But back to this ticket, I think that either the #route_for method should be corrected, or obliterated, as it just doesn't work.  If the latter, then the deprecation warning should be changed as well.</body>
      <body-html>&lt;div&gt;&lt;p&gt;My use case is for a plugin called resources_controller. This
plugin enables controllers to load nesting resources by
introspecting the route that invoked the controller (enabling stuff
like one controller for a polymorphic assoc, instead of many
controllers, one for each (parent,child) pair).&lt;/p&gt;
&lt;p&gt;Anyway, that aside, I originally solved this problem by patching
Routing to store the the route that was recognised, and pass this
along with the request to the controller. This worked, but I gave
up on it, because I didn't want to rely on internals of Routing in
the patch (And the plugin is supported on all rails 2.x
versions)&lt;/p&gt;
&lt;p&gt;So I swapped this for relying of being able to re-recognise the
route in the controller (this was waaaay back before a 'plugin API'
was ever on the cards). I used
&lt;code&gt;#routes_by_controller_and_action&lt;/code&gt; to get a subset of
routes to recognize, to make this process cheaper.&lt;/p&gt;
&lt;p&gt;Bottom line: I want to ask what route was recognised in a
particular request. I'm not wedded to #routes_for, that's just a
stepping stone.&lt;/p&gt;
&lt;p&gt;I think that being able to know what route invoked a controller
is a nice bit of reflection, and it enables lots of cool stuff. If
you agree, I'd happily write a patch for this (when I did it a year
and a half ago it was a two liner + test).&lt;/p&gt;
&lt;p&gt;But back to this ticket, I think that either the #route_for
method should be corrected, or obliterated, as it just doesn't
work. If the latter, then the deprecation warning should be changed
as well.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-18T18:42:34+01:00</created-at>
      <creator-id type="integer">1023</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3231</number>
      <permalink>routes_for-method-doesnt-work-at-all</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable</tag>
      <title>#routes_for method doesn't work at all</title>
      <updated-at type="datetime">2009-09-18T18:42:38+01:00</updated-at>
      <user-id type="integer">1023</user-id>
      <version type="integer">3</version>
      <user-name>Ian White</user-name>
      <creator-name>Ian White</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3231</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Lets fix this in 2.3 for now. Does removing &quot;raise &quot;Need controller and action!&quot; unless controller &amp;&amp; action&quot; fix the issue?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Lets fix this in 2.3 for now. Does removing &quot;raise &quot;Need
controller and action!&quot; unless controller &amp;amp;&amp;amp; action&quot; fix
the issue?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-18T19:12:11+01:00</created-at>
      <creator-id type="integer">1023</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3231</number>
      <permalink>routes_for-method-doesnt-work-at-all</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable</tag>
      <title>#routes_for method doesn't work at all</title>
      <updated-at type="datetime">2009-09-18T19:12:12+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">4</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Ian White</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3231</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@Josh, it doesn't really fix the issue as #routes_for and #routes_for_controller_and_action have different signatures, and return different things.  I was checking out #routes_for only because of the deprecation warning that is issued when calling #routes_for_controller_and_action.

In terms of my issue, I'm going to take a different route that avoids relying on the private API, so I'm not so worried about how this issue gets resolved.

I just did a search, and #routes_for is never called, and is only referenced in the deprecation warning, so I think it might be a red herring that should go.  Unless it's part of a refactoring effort that's not fully complete that is.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@Josh, it doesn't really fix the issue as #routes_for and
#routes_for_controller_and_action have different signatures, and
return different things. I was checking out #routes_for only
because of the deprecation warning that is issued when calling
#routes_for_controller_and_action.&lt;/p&gt;
&lt;p&gt;In terms of my issue, I'm going to take a different route that
avoids relying on the private API, so I'm not so worried about how
this issue gets resolved.&lt;/p&gt;
&lt;p&gt;I just did a search, and #routes_for is never called, and is
only referenced in the deprecation warning, so I think it might be
a red herring that should go. Unless it's part of a refactoring
effort that's not fully complete that is.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-19T08:38:47+01:00</created-at>
      <creator-id type="integer">1023</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3231</number>
      <permalink>routes_for-method-doesnt-work-at-all</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2-3-stable</tag>
      <title>#routes_for method doesn't work at all</title>
      <updated-at type="datetime">2009-09-19T08:38:52+01:00</updated-at>
      <user-id type="integer">1023</user-id>
      <version type="integer">5</version>
      <user-name>Ian White</user-name>
      <creator-name>Ian White</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3231</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">424</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Yeah, those routes_for are just dead code. Should of been marked as private way back when.

K, going close out this ticket for now. If you come up with a patch for 2.x, just let me know.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Yeah, those routes_for are just dead code. Should of been marked
as private way back when.&lt;/p&gt;
&lt;p&gt;K, going close out this ticket for now. If you come up with a
patch for 2.x, just let me know.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-09-19T16:27:16+01:00</created-at>
      <creator-id type="integer">1023</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">50064</milestone-id>
      <number type="integer">3231</number>
      <permalink>routes_for-method-doesnt-work-at-all</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>2-3-stable</tag>
      <title>#routes_for method doesn't work at all</title>
      <updated-at type="datetime">2009-09-19T16:27:20+01:00</updated-at>
      <user-id type="integer">424</user-id>
      <version type="integer">6</version>
      <user-name>Joshua Peek</user-name>
      <creator-name>Ian White</creator-name>
      <assigned-user-name>Joshua Peek</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3231</url>
      <milestone-title>2.3.6</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
