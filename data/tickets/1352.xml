<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">85</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-11-11T03:39:17+00:00</created-at>
  <creator-id type="integer">12631</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1352</number>
  <permalink>enumerablegroup_by-is-on2</permalink>
  <priority type="integer">30</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>committed</state>
  <tag>2.1.0 2.1.1 2.1.2 performance</tag>
  <title>Enumerable#group_by is O(n^2)</title>
  <updated-at type="datetime">2008-12-10T17:08:12+00:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">7</version>
  <user-name>Repository</user-name>
  <creator-name>Pete Yandell</creator-name>
  <assigned-user-name>Jeremy Kemper</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1352</url>
  <priority-name nil="true"></priority-name>
  <original-body>Enumerable#group_by is O(n^2) in Rails 2.1 and up, making it extremely slow for big data sets.

Some quick tests show that group_by in Rails 2.1 takes 90 times as long as group_by in Rails 2.0 on an array of 10000 items.

This change:

http://github.com/rails/rails/commit/8273280a637a5e40de2c37dd1da507c749b11aab

makes group_by use OrderedHash rather than Hash, which introduces the problem.

It's really the naive implementation of OrderedHash, on which most operations are O(n), that causes the problem.</original-body>
  <latest-body>Enumerable#group_by is O(n^2) in Rails 2.1 and up, making it extremely slow for big data sets.

Some quick tests show that group_by in Rails 2.1 takes 90 times as long as group_by in Rails 2.0 on an array of 10000 items.

This change:

http://github.com/rails/rails/commit/8273280a637a5e40de2c37dd1da507c749b11aab

makes group_by use OrderedHash rather than Hash, which introduces the problem.

It's really the naive implementation of OrderedHash, on which most operations are O(n), that causes the problem.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Enumerable#group_by is O(n^2) in Rails 2.1 and up, making it
extremely slow for big data sets.&lt;/p&gt;
&lt;p&gt;Some quick tests show that group_by in Rails 2.1 takes 90 times
as long as group_by in Rails 2.0 on an array of 10000 items.&lt;/p&gt;
&lt;p&gt;This change:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/rails/rails/commit/8273280a637a5e40de2c37dd1da507c749b11aab&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;makes group_by use OrderedHash rather than Hash, which
introduces the problem.&lt;/p&gt;
&lt;p&gt;It's really the naive implementation of OrderedHash, on which
most operations are O(n), that causes the problem.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Enumerable#group_by is O(n^2) in Rails 2.1 and up, making it extremely slow for big data sets.

Some quick tests show that group_by in Rails 2.1 takes 90 times as long as group_by in Rails 2.0 on an array of 10000 items.

This change:

http://github.com/rails/rails/commit/8273280a637a5e40de2c37dd1da507c749b11aab

makes group_by use OrderedHash rather than Hash, which introduces the problem.

It's really the naive implementation of OrderedHash, on which most operations are O(n), that causes the problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Enumerable#group_by is O(n^2) in Rails 2.1 and up, making it
extremely slow for big data sets.&lt;/p&gt;
&lt;p&gt;Some quick tests show that group_by in Rails 2.1 takes 90 times
as long as group_by in Rails 2.0 on an array of 10000 items.&lt;/p&gt;
&lt;p&gt;This change:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/rails/rails/commit/8273280a637a5e40de2c37dd1da507c749b11aab&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;makes group_by use OrderedHash rather than Hash, which
introduces the problem.&lt;/p&gt;
&lt;p&gt;It's really the naive implementation of OrderedHash, on which
most operations are O(n), that causes the problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-11-11T03:39:17+00:00</created-at>
      <creator-id type="integer">12631</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1352</number>
      <permalink>enumerablegroup_by-is-on2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1.0 2.1.1 2.1.2 performance</tag>
      <title>Enumerable#group_by is O(n^2)</title>
      <updated-at type="datetime">2008-11-11T03:39:20+00:00</updated-at>
      <user-id type="integer">12631</user-id>
      <version type="integer">1</version>
      <user-name>Pete Yandell</user-name>
      <creator-name>Pete Yandell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1352</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>As a very quick test I did this (in a rails 2.2 app)
@@@ ruby
module Enumerable
  def old_group_by
    groups = []
    inject({}) do |grouped, element|
      index = yield(element)
      if group = grouped[index]
        group &lt;&lt; element
      else
        group = [element]
        groups &lt;&lt; [index, group]
        grouped[index] = group
      end
      grouped
    end
    groups
  end
end


require 'benchmark'
include Benchmark
array = (1..1000000).to_a; false

bmbm(5) do |x|
  x.report(&quot;current implementation&quot;) { array.group_by {|i| i % 13}}
  x.report(&quot;old implementation&quot;) { array.old_group_by {|i| i % 13}}
end
@@@

I get something like

current implementation   3.340000   0.030000   3.370000 (  3.419125)
old implementation       1.960000   0.020000   1.980000 (  1.997561)

Varying the size of array the ratio of the two seems pretty constant, so to me at least the newer implementation is slower, but only by a constant factor. What testcase did you have that showed much worse results?</body>
      <body-html>&lt;div&gt;&lt;p&gt;As a very quick test I did this (in a rails 2.2 app)&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
module Enumerable
  def old_group_by
    groups = []
    inject({}) do |grouped, element|
      index = yield(element)
      if group = grouped[index]
        group &amp;lt;&amp;lt; element
      else
        group = [element]
        groups &amp;lt;&amp;lt; [index, group]
        grouped[index] = group
      end
      grouped
    end
    groups
  end
end


require 'benchmark'
include Benchmark
array = (1..1000000).to_a; false

bmbm(5) do |x|
  x.report(&amp;quot;current implementation&amp;quot;) { array.group_by {|i| i % 13}}
  x.report(&amp;quot;old implementation&amp;quot;) { array.old_group_by {|i| i % 13}}
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I get something like&lt;/p&gt;
&lt;p&gt;current implementation 3.340000 0.030000 3.370000 ( 3.419125)
old implementation 1.960000 0.020000 1.980000 ( 1.997561)&lt;/p&gt;
&lt;p&gt;Varying the size of array the ratio of the two seems pretty
constant, so to me at least the newer implementation is slower, but
only by a constant factor. What testcase did you have that showed
much worse results?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-08T11:26:30+00:00</created-at>
      <creator-id type="integer">12631</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1352</number>
      <permalink>enumerablegroup_by-is-on2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1.0 2.1.1 2.1.2 performance</tag>
      <title>Enumerable#group_by is O(n^2)</title>
      <updated-at type="datetime">2008-12-08T11:26:30+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">2</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Pete Yandell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1352</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi Frederick. Thanks for picking this up!

Try it with more groups, by bumping up the i % 13 in your test code to a bigger value.

For i % 130:

current implementation  14.610000   0.100000  14.710000 ( 15.687624)
old implementation       4.990000   0.040000   5.030000 (  5.300712)

For i % 1300:

current implementation 128.240000   0.460000 128.700000 (130.583804)
old implementation       5.410000   0.030000   5.440000 (  5.639136)

You can see that it degrades very quickly as the number of groups goes up. This is because OrderedHash (as used by the current implementation) is O(n) for finding elements or inserting new elements.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Frederick. Thanks for picking this up!&lt;/p&gt;
&lt;p&gt;Try it with more groups, by bumping up the i % 13 in your test
code to a bigger value.&lt;/p&gt;
&lt;p&gt;For i % 130:&lt;/p&gt;
&lt;p&gt;current implementation 14.610000 0.100000 14.710000 ( 15.687624)
old implementation 4.990000 0.040000 5.030000 ( 5.300712)&lt;/p&gt;
&lt;p&gt;For i % 1300:&lt;/p&gt;
&lt;p&gt;current implementation 128.240000 0.460000 128.700000
(130.583804) old implementation 5.410000 0.030000 5.440000 (
5.639136)&lt;/p&gt;
&lt;p&gt;You can see that it degrades very quickly as the number of
groups goes up. This is because OrderedHash (as used by the current
implementation) is O(n) for finding elements or inserting new
elements.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-09T06:00:41+00:00</created-at>
      <creator-id type="integer">12631</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1352</number>
      <permalink>enumerablegroup_by-is-on2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1.0 2.1.1 2.1.2 performance</tag>
      <title>Enumerable#group_by is O(n^2)</title>
      <updated-at type="datetime">2008-12-09T06:00:43+00:00</updated-at>
      <user-id type="integer">12631</user-id>
      <version type="integer">3</version>
      <user-name>Pete Yandell</user-name>
      <creator-name>Pete Yandell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1352</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Ah, O(n^2) in the number of groups - I'd interpreted the question as being O(n^2) in the size of the array</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ah, O(n^2) in the number of groups - I'd interpreted the
question as being O(n^2) in the size of the array&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-09T08:36:35+00:00</created-at>
      <creator-id type="integer">12631</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1352</number>
      <permalink>enumerablegroup_by-is-on2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.1.0 2.1.1 2.1.2 performance</tag>
      <title>Enumerable#group_by is O(n^2)</title>
      <updated-at type="datetime">2008-12-09T08:36:40+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">4</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Pete Yandell</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1352</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Let's swap out OrderedHash implementation, then.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Let's swap out OrderedHash implementation, then.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-09T18:47:42+00:00</created-at>
      <creator-id type="integer">12631</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:milestone: 9903
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1352</number>
      <permalink>enumerablegroup_by-is-on2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.1.0 2.1.1 2.1.2 performance</tag>
      <title>Enumerable#group_by is O(n^2)</title>
      <updated-at type="datetime">2008-12-09T18:47:43+00:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Pete Yandell</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1352</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>New OrderedHash implementation</body>
      <body-html>&lt;div&gt;&lt;p&gt;New OrderedHash implementation&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-09T20:39:03+00:00</created-at>
      <creator-id type="integer">12631</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1352</number>
      <permalink>enumerablegroup_by-is-on2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>2.1.0 2.1.1 2.1.2 performance</tag>
      <title>Enumerable#group_by is O(n^2)</title>
      <updated-at type="datetime">2008-12-09T20:39:06+00:00</updated-at>
      <user-id type="integer">17477</user-id>
      <version type="integer">6</version>
      <user-name>Frederick Cheung</user-name>
      <creator-name>Pete Yandell</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1352</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">85</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [355f41d8aafd75d76db25cdda4736e0052b0605c]) Rework ActiveSupport::OrderedHash to make lookups faster

[#1352 state:committed]

Signed-off-by: Jeremy Kemper &lt;jeremy@bitsweat.net&gt;
http://github.com/rails/rails/commit/355f41d8aafd75d76db25cdda4736e0052b0605c</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [355f41d8aafd75d76db25cdda4736e0052b0605c]) Rework
ActiveSupport::OrderedHash to make lookups faster&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;/projects/8994/tickets/1352&quot; title=&quot;Ticket #1352&quot;&gt;#1352&lt;/a&gt; state:committed]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Jeremy Kemper &lt;a href=&quot;mailto:jeremy@bitsweat.net&quot;&gt;jeremy@bitsweat.net&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/355f41d8aafd75d76db25cdda4736e0052b0605c&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2008-12-10T17:08:11+00:00</created-at>
      <creator-id type="integer">12631</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1352</number>
      <permalink>enumerablegroup_by-is-on2</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>committed</state>
      <tag>2.1.0 2.1.1 2.1.2 performance</tag>
      <title>Enumerable#group_by is O(n^2)</title>
      <updated-at type="datetime">2008-12-10T17:08:12+00:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">7</version>
      <user-name>Repository</user-name>
      <creator-name>Pete Yandell</creator-name>
      <assigned-user-name>Jeremy Kemper</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1352</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c294f42ea4369d1ed9da87bde69d9cbd68911e94</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-12-09T20:39:03+00:00</created-at>
      <filename>0001-Rework-ActiveSupport-OrderedHash-to-make-lookups-fa.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">69574</id>
      <size type="integer">3961</size>
      <uploader-id type="integer">17477</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/69574/0001-Rework-ActiveSupport-OrderedHash-to-make-lookups-fa.patch</url>
    </attachment>
  </attachments>
</ticket>
