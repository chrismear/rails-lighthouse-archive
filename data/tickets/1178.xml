<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">141</assigned-user-id>
  <attachments-count type="integer">2</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-06T18:13:36+01:00</created-at>
  <creator-id type="integer">24327</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">1178</number>
  <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
  <priority type="integer">17</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord associations belongs_to bug bug patch</tag>
  <title>Re-implemented support for updating a belongs to association from the foreign key</title>
  <updated-at type="datetime">2010-10-06T06:44:33+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">16</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Aliaksey Kandratsenka</creator-name>
  <assigned-user-name>Michael Koziarski</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
  <priority-name nil="true"></priority-name>
  <original-body>I've encountered a bug in this new feature. While fixing it I realized that there're a whole bunch of bugs.

The proposed patch has tests for all found bugs and a complete reimplementation of this feature which fixes those bugs.</original-body>
  <latest-body>I've encountered a bug in this new feature. While fixing it I realized that there're a whole bunch of bugs.

The proposed patch has tests for all found bugs and a complete reimplementation of this feature which fixes those bugs.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I've encountered a bug in this new feature. While fixing it I
realized that there're a whole bunch of bugs.&lt;/p&gt;
&lt;p&gt;The proposed patch has tests for all found bugs and a complete
reimplementation of this feature which fixes those bugs.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I've encountered a bug in this new feature. While fixing it I realized that there're a whole bunch of bugs.

The proposed patch has tests for all found bugs and a complete reimplementation of this feature which fixes those bugs.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've encountered a bug in this new feature. While fixing it I
realized that there're a whole bunch of bugs.&lt;/p&gt;
&lt;p&gt;The proposed patch has tests for all found bugs and a complete
reimplementation of this feature which fixes those bugs.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-06T18:13:36+01:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations belongs_to bug patch</tag>
      <title>[PATCH] re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2008-10-06T18:13:41+01:00</updated-at>
      <user-id type="integer">24327</user-id>
      <version type="integer">1</version>
      <user-name>Aliaksey Kandratsenka</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>The write_attribute case isn't particularly interesting to me, if you're using that you're 'painting outside the lines'

However the case which covers multiple belongs_to associations definitely is more interesting and something that should be addressed.

Seems it should be possible to take that one generated foo_id= method and make it figure out the different associations which use that id and invalidate them all?

Failing that we should revert the feature.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The write_attribute case isn't particularly interesting to me,
if you're using that you're 'painting outside the lines'&lt;/p&gt;
&lt;p&gt;However the case which covers multiple belongs_to associations
definitely is more interesting and something that should be
addressed.&lt;/p&gt;
&lt;p&gt;Seems it should be possible to take that one generated foo_id=
method and make it figure out the different associations which use
that id and invalidate them all?&lt;/p&gt;
&lt;p&gt;Failing that we should revert the feature.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-07T20:27:56+01:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations belongs_to bug patch</tag>
      <title>[PATCH] re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2008-10-07T20:27:58+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">2</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>That's possible aproach. And I considered that. But I think that write_attribute is important. Otherwise it won't be able to cleanly override attribute setter by user.</body>
      <body-html>&lt;div&gt;&lt;p&gt;That's possible aproach. And I considered that. But I think that
write_attribute is important. Otherwise it won't be able to cleanly
override attribute setter by user.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-08T07:05:25+01:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord associations belongs_to bug patch
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>[PATCH] re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2008-10-08T07:05:29+01:00</updated-at>
      <user-id type="integer">24327</user-id>
      <version type="integer">3</version>
      <user-name>Aliaksey Kandratsenka</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>OK, I'm going to revert this functionality till post 2.2</body>
      <body-html>&lt;div&gt;&lt;p&gt;OK, I'm going to revert this functionality till post 2.2&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-10T16:06:56+01:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>[PATCH] re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2008-10-10T16:06:59+01:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">4</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title>2.x</milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-01-11T14:56:27+00:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
:title: &quot;[PATCH] re-implemented support for updating a belongs to association from the foreign key&quot;
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2009-01-11T18:20:28+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I'd like to do this, but by adding a writer that invalidates all the cached associations.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'd like to do this, but by adding a writer that invalidates all
the cached associations.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-12T05:59:10+00:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2009-01-12T05:59:13+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">6</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>I still think that doing this in attribute writer is not ok.

When someone overrides attribute writer he/she uses 'write_attribute' and not 'super' to invoke original implementation. If only attribute writer has association validation logic, then we have no way to override foreign keys writers.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I still think that doing this in attribute writer is not ok.&lt;/p&gt;
&lt;p&gt;When someone overrides attribute writer he/she uses
'write_attribute' and not 'super' to invoke original
implementation. If only attribute writer has association validation
logic, then we have no way to override foreign keys writers.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-12T07:12:59+00:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2009-01-12T07:13:05+00:00</updated-at>
      <user-id type="integer">24327</user-id>
      <version type="integer">7</version>
      <user-name>Aliaksey Kandratsenka</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>hmm, that's a compelling point.

Can you give us an updated rebased patch with a commit message explaining the feature rather than comparing it to the previous implementation?</body>
      <body-html>&lt;div&gt;&lt;p&gt;hmm, that's a compelling point.&lt;/p&gt;
&lt;p&gt;Can you give us an updated rebased patch with a commit message
explaining the feature rather than comparing it to the previous
implementation?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-12T07:44:01+00:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2009-01-12T07:44:04+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">8</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Ok. Will do that today.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Ok. Will do that today.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-12T07:54:56+00:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2009-01-12T07:54:57+00:00</updated-at>
      <user-id type="integer">24327</user-id>
      <version type="integer">9</version>
      <user-name>Aliaksey Kandratsenka</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Uploading. But I'm not happy with it right now. The problem is that there are many places where association is read (via #instance_variable_get), and all that places need to be modified to check for association stale-ness. I'm uploading it in as-is state, where not all such places are covered.

Extra work needs to be done if this approach is taken. It seems that we need generic association reader method that in addition forcing reload will be able to skip reload. And we'll need to convert #instance_variable_get invokations to invokations of this new method.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Uploading. But I'm not happy with it right now. The problem is
that there are many places where association is read (via
#instance_variable_get), and all that places need to be modified to
check for association stale-ness. I'm uploading it in as-is state,
where not all such places are covered.&lt;/p&gt;
&lt;p&gt;Extra work needs to be done if this approach is taken. It seems
that we need generic association reader method that in addition
forcing reload will be able to skip reload. And we'll need to
convert #instance_variable_get invokations to invokations of this
new method.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-13T09:08:47+00:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2009-01-13T09:08:50+00:00</updated-at>
      <user-id type="integer">24327</user-id>
      <version type="integer">10</version>
      <user-name>Aliaksey Kandratsenka</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Could we perhaps push this logic into the proxy class itself?  It knows the owner and the attribute that it matches?

It'd make it a lot less intrusive than having to change everywhere?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could we perhaps push this logic into the proxy class itself? It
knows the owner and the attribute that it matches?&lt;/p&gt;
&lt;p&gt;It'd make it a lot less intrusive than having to change
everywhere?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-15T20:36:15+00:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2009-01-15T20:36:16+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">11</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Change detection is indeed placed in proxy in my patch. But the code which should run this detection and drop the proxy should not IMO belong to proxy.
That's because we cannot use #reset and must simply drop reference on old proxy.

I'll try to complete this work this weekend. I think there's no other way to support this feature.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Change detection is indeed placed in proxy in my patch. But the
code which should run this detection and drop the proxy should not
IMO belong to proxy. That's because we cannot use #reset and must
simply drop reference on old proxy.&lt;/p&gt;
&lt;p&gt;I'll try to complete this work this weekend. I think there's no
other way to support this feature.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-16T06:43:18+00:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2009-01-16T06:43:19+00:00</updated-at>
      <user-id type="integer">24327</user-id>
      <version type="integer">12</version>
      <user-name>Aliaksey Kandratsenka</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>What's the reason that we have to drop the reference to the old proxy
rather than replacing the target internally?  Seems more encapsulated
that way?</body>
      <body-html>&lt;div&gt;&lt;p&gt;What's the reason that we have to drop the reference to the old
proxy rather than replacing the target internally? Seems more
encapsulated that way?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-16T07:28:02+00:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2009-01-16T07:28:02+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">13</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Consider this:

parent = record.parent

old_id = parent.id

record.parent_id = new_id

assert_equal old_id, parent.id # will not fail

record.parent # here parent discovers that foreign key change and turns to completely other object

assert_equal old_id, parent.id # will fail

The reason is that proxy is often used instead of it's target object and it's mostly transparent. Reseting proxy will look like mysterious change of object's identity.

Original implementation had same problem due to use of #reset.

BTW, because belong_to proxies are loaded eagerly (to be able to return nil, which cannot be emulated via #method_missing magic) we can try to return proxy's target instead of proxy itself. Actually, this way it looks much better and this approach should be tried.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Consider this:&lt;/p&gt;
&lt;p&gt;parent = record.parent&lt;/p&gt;
&lt;p&gt;old_id = parent.id&lt;/p&gt;
&lt;p&gt;record.parent_id = new_id&lt;/p&gt;
&lt;p&gt;assert_equal old_id, parent.id # will not fail&lt;/p&gt;
&lt;p&gt;record.parent # here parent discovers that foreign key change
and turns to completely other object&lt;/p&gt;
&lt;p&gt;assert_equal old_id, parent.id # will fail&lt;/p&gt;
&lt;p&gt;The reason is that proxy is often used instead of it's target
object and it's mostly transparent. Reseting proxy will look like
mysterious change of object's identity.&lt;/p&gt;
&lt;p&gt;Original implementation had same problem due to use of
#reset.&lt;/p&gt;
&lt;p&gt;BTW, because belong_to proxies are loaded eagerly (to be able to
return nil, which cannot be emulated via #method_missing magic) we
can try to return proxy's target instead of proxy itself. Actually,
this way it looks much better and this approach should be
tried.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-16T07:42:18+00:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2009-01-16T07:42:19+00:00</updated-at>
      <user-id type="integer">24327</user-id>
      <version type="integer">14</version>
      <user-name>Aliaksey Kandratsenka</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Right, the eager loading for nil support is a bloody good point :)

Give that a go and see what the patch comes out like, it sounds like it'll possibly be a little nicer.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Right, the eager loading for nil support is a bloody good point
:)&lt;/p&gt;
&lt;p&gt;Give that a go and see what the patch comes out like, it sounds
like it'll possibly be a little nicer.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-26T03:41:23+00:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2009-01-26T03:41:27+00:00</updated-at>
      <user-id type="integer">141</user-id>
      <version type="integer">15</version>
      <user-name>Michael Koziarski</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">141</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-06T06:44:31+01:00</created-at>
      <creator-id type="integer">24327</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">1178</number>
      <permalink>patch-re-implemented-support-for-updating-a-belongs-to-association-from-the-foreign-key</permalink>
      <priority type="integer">17</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord associations belongs_to bug bug patch</tag>
      <title>Re-implemented support for updating a belongs to association from the foreign key</title>
      <updated-at type="datetime">2010-10-06T06:44:33+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">16</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Aliaksey Kandratsenka</creator-name>
      <assigned-user-name>Michael Koziarski</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1178</url>
      <priority-name nil="true"></priority-name>
      <milestone-title nil="true"></milestone-title>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c66fa49538fc293d3e2a85568edaeffcab28e602</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2008-10-06T18:13:36+01:00</created-at>
      <filename>0001-re-implemented-support-for-updating-a-belongs-to-ass.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">51685</id>
      <size type="integer">8980</size>
      <uploader-id type="integer">24327</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/51685/0001-re-implemented-support-for-updating-a-belongs-to-ass.patch</url>
    </attachment>
    <attachment type="Attachment">
      <code>5a44eaf680d4c332e15d8a0748f7dc75045cdcce</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-01-13T09:08:47+00:00</created-at>
      <filename>0001--re-implemented-support-for-updating-a-belongs-to-as.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">77744</id>
      <size type="integer">8229</size>
      <uploader-id type="integer">24327</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/77744/0001--re-implemented-support-for-updating-a-belongs-to-as.patch</url>
    </attachment>
  </attachments>
</ticket>
