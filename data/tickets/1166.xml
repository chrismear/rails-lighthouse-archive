<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">17477</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2008-10-03T23:42:58+01:00</created-at>
  <creator-id type="integer">18589</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1166</number>
  <permalink>count-works-differently-than-find-with-polymorphic-include</permalink>
  <priority type="integer">576</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord include polymorphic</tag>
  <title>count works differently than find with polymorphic include</title>
  <updated-at type="datetime">2011-02-02T17:19:51+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">7</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>acechase</creator-name>
  <assigned-user-name>Frederick Cheung</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1166</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>It looks like AR::Base#count has different behavior than AR::Base#find when a polymorphic association is listed in the :include option. For instance, assuming with we have a class Foo, with a polymporphic association &quot;bar&quot;, I see the following behavior:
@@@ruby
Foo.find(:all, :include =&gt; :bar) # works fine
Foo.count(:include =&gt; :bar) # raises ActiveRecord::EagerLoadPolymorphicError
@@@

I see that ActiveRecord::Calculations::ClassMethods#count is documented to use an outer join for associations in the :include, but this feels like it is out of date in light of the changes made to the way #find makes use of the :include hash. We can already use :join in #count, so why leave the path through the :include cause as well? It feels weird that the values that are legal in the :include hash for #find are not necessarily allowed in #count. Was this a backwards compatibility issue? Maybe I'm missing something?</original-body>
  <latest-body>It looks like AR::Base#count has different behavior than AR::Base#find when a polymorphic association is listed in the :include option. For instance, assuming with we have a class Foo, with a polymporphic association &quot;bar&quot;, I see the following behavior:
@@@ruby
Foo.find(:all, :include =&gt; :bar) # works fine
Foo.count(:include =&gt; :bar) # raises ActiveRecord::EagerLoadPolymorphicError
@@@

I see that ActiveRecord::Calculations::ClassMethods#count is documented to use an outer join for associations in the :include, but this feels like it is out of date in light of the changes made to the way #find makes use of the :include hash. We can already use :join in #count, so why leave the path through the :include cause as well? It feels weird that the values that are legal in the :include hash for #find are not necessarily allowed in #count. Was this a backwards compatibility issue? Maybe I'm missing something?</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;It looks like AR::Base#count has different behavior than
AR::Base#find when a polymorphic association is listed in the
:include option. For instance, assuming with we have a class Foo,
with a polymporphic association &quot;bar&quot;, I see the following
behavior: @@@ruby Foo.find(:all, :include =&amp;gt; :bar) # works fine
Foo.count(:include =&amp;gt; :bar) # raises
ActiveRecord::EagerLoadPolymorphicError&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;

I see that ActiveRecord::Calculations::ClassMethods#count is documented to use an outer join for associations in the :include, but this feels like it is out of date in light of the changes made to the way #find makes use of the :include hash. We can already use :join in #count, so why leave the path through the :include cause as well? It feels weird that the values that are legal in the :include hash for #find are not necessarily allowed in #count. Was this a backwards compatibility issue? Maybe I'm missing something?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It looks like AR::Base#count has different behavior than AR::Base#find when a polymorphic association is listed in the :include option. For instance, assuming with we have a class Foo, with a polymporphic association &quot;bar&quot;, I see the following behavior:
    Foo.find(:all, :include =&gt; :bar) # works fine
    Foo.count(:include =&gt; :bar) # raises ActiveRecord::EagerLoadPolymorphicError
I see that ActiveRecord::Calculations::ClassMethods#count is documented to use an outer join for associations in the :include, but this feels like it is out of date in light of the changes made to the way #find makes use of the :include hash. We can already use :join in #count, so why leave the path through the :include cause as well? It feels weird that the values that are legal in the :include hash for #find are not necessarily allowed in #count. Was this a backwards compatibility issue? Maybe I'm missing something?</body>
      <body-html>&lt;div&gt;&lt;p&gt;It looks like AR::Base#count has different behavior than
AR::Base#find when a polymorphic association is listed in the
:include option. For instance, assuming with we have a class Foo,
with a polymporphic association &quot;bar&quot;, I see the following
behavior:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Foo.find(:all, :include =&amp;gt; :bar) # works fine
Foo.count(:include =&amp;gt; :bar) # raises ActiveRecord::EagerLoadPolymorphicError
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I see that ActiveRecord::Calculations::ClassMethods#count is
documented to use an outer join for associations in the :include,
but this feels like it is out of date in light of the changes made
to the way #find makes use of the :include hash. We can already use
:join in #count, so why leave the path through the :include cause
as well? It feels weird that the values that are legal in the
:include hash for #find are not necessarily allowed in #count. Was
this a backwards compatibility issue? Maybe I'm missing
something?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-03T23:42:58+01:00</created-at>
      <creator-id type="integer">18589</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1166</number>
      <permalink>count-works-differently-than-find-with-polymorphic-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord include polymorphic</tag>
      <title>count works differently than find with polymorphic include</title>
      <updated-at type="datetime">2008-10-03T23:46:22+01:00</updated-at>
      <user-id type="integer">18589</user-id>
      <version type="integer">1</version>
      <user-name>acechase</user-name>
      <creator-name>acechase</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1166</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Could you please submit a failing test case ?

Assigning to Fred, as I think he added the count#:include option.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Could you please submit a failing test case ?&lt;/p&gt;
&lt;p&gt;Assigning to Fred, as I think he added the count#:include
option.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-01-18T06:06:50+00:00</created-at>
      <creator-id type="integer">18589</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1166</number>
      <permalink>count-works-differently-than-find-with-polymorphic-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord include polymorphic</tag>
      <title>count works differently than find with polymorphic include</title>
      <updated-at type="datetime">2009-01-18T06:06:54+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">2</version>
      <user-name>Pratik</user-name>
      <creator-name>acechase</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1166</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Fred, any news on this? I can still replicate it in 2.3.5.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Fred, any news on this? I can still replicate it in 2.3.5.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-10T11:20:02+01:00</created-at>
      <creator-id type="integer">18589</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1166</number>
      <permalink>count-works-differently-than-find-with-polymorphic-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord include polymorphic</tag>
      <title>count works differently than find with polymorphic include</title>
      <updated-at type="datetime">2010-04-10T11:20:07+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">3</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>acechase</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1166</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:35+01:00</created-at>
      <creator-id type="integer">18589</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1166</number>
      <permalink>count-works-differently-than-find-with-polymorphic-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord include polymorphic</tag>
      <title>count works differently than find with polymorphic include</title>
      <updated-at type="datetime">2010-05-04T18:48:35+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">4</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>acechase</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1166</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Trying to help out by writing a failing test case for this one, but the test I wrote passes fine. I'd like to assume this means the error is fixed in master, otherwise my test isn't right.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Trying to help out by writing a failing test case for this one,
but the test I wrote passes fine. I'd like to assume this means the
error is fixed in master, otherwise my test isn't right.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-06-15T11:14:31+01:00</created-at>
      <creator-id type="integer">18589</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1166</number>
      <permalink>count-works-differently-than-find-with-polymorphic-include</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord include polymorphic</tag>
      <title>count works differently than find with polymorphic include</title>
      <updated-at type="datetime">2010-06-15T11:14:49+01:00</updated-at>
      <user-id type="integer">49899</user-id>
      <version type="integer">5</version>
      <user-name>Jeremy Olliver</user-name>
      <creator-name>acechase</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1166</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:37:17+00:00</created-at>
      <creator-id type="integer">18589</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1166</number>
      <permalink>count-works-differently-than-find-with-polymorphic-include</permalink>
      <priority type="integer">576</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord include polymorphic</tag>
      <title>count works differently than find with polymorphic include</title>
      <updated-at type="datetime">2011-02-02T17:19:41+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">6</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>acechase</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1166</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">17477</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:37:19+00:00</created-at>
      <creator-id type="integer">18589</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1166</number>
      <permalink>count-works-differently-than-find-with-polymorphic-include</permalink>
      <priority type="integer">576</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord include polymorphic</tag>
      <title>count works differently than find with polymorphic include</title>
      <updated-at type="datetime">2011-02-02T17:19:51+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">7</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>acechase</creator-name>
      <assigned-user-name>Frederick Cheung</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1166</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>c0b3edb13913efc55561f12815d6be0eb4ce04df</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-06-15T11:14:31+01:00</created-at>
      <filename>0001-test_count_with_polymorphic_include.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">559476</id>
      <size type="integer">1121</size>
      <uploader-id type="integer">49899</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/559476/0001-test_count_with_polymorphic_include.diff</url>
    </attachment>
  </attachments>
</ticket>
