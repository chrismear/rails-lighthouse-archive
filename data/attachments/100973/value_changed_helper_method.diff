From 1ed92b767981be03df37c39bb0f6b52f45be82f1 Mon Sep 17 00:00:00 2001
From: Jason Arora <jasoo24@gmail.com>
Date: Tue, 17 Mar 2009 15:48:13 -0700
Subject: [PATCH] value_changed helper method

---
 actionpack/lib/action_view/helpers/text_helper.rb |   28 +++++++++++++++++++++
 actionpack/test/template/text_helper_test.rb      |   14 ++++++++++
 2 files changed, 42 insertions(+), 0 deletions(-)

diff --git a/actionpack/lib/action_view/helpers/text_helper.rb b/actionpack/lib/action_view/helpers/text_helper.rb
index 48bf471..f344c41 100644
--- a/actionpack/lib/action_view/helpers/text_helper.rb
+++ b/actionpack/lib/action_view/helpers/text_helper.rb
@@ -375,6 +375,34 @@ module ActionView
           when :urls                        then auto_link_urls(text, options[:html], &block)
         end
       end
+      
+      # Watches a value and returns true if the value has changed. This can be used
+      # when iterating through a sorted set of records to display the name of each
+      # subset. Passing in the +name+ parameter allows nesting in loops. The default 
+      # name of a value being watched is <tt>"default"</tt>.
+      #
+      # ==== Examples
+      #   # Assuming people has been sorted by occupation...
+      #   <% @people.each do |person| %>
+      #     <%= "<h2>#{person.occupation.pluralize}</h2>" if value_changed?(person.occupation) %>
+      #     <%= person.name %><br/>
+      #   <% end %>
+      #
+      #   # This produces: <h2>Doctors</h2>
+      #   #                Jane Doe
+      #   #                John Smith
+      #   #                <h2>Programmers</h2>
+      #   #                Rails Rules
+      #   #                ...
+      def value_changed?(current_value, name = 'default')
+        change = false
+        @_watch_list ||= Hash.new
+        if current_value != @_watch_list[name]
+          change = true
+          @_watch_list[name] = current_value
+        end
+        return change
+      end
 
       # Creates a Cycle object whose _to_s_ method cycles through elements of an
       # array every time it is called. This can be used for example, to alternate
diff --git a/actionpack/test/template/text_helper_test.rb b/actionpack/test/template/text_helper_test.rb
index a370f14..d5f35ea 100644
--- a/actionpack/test/template/text_helper_test.rb
+++ b/actionpack/test/template/text_helper_test.rb
@@ -517,4 +517,18 @@ class TextHelperTest < ActionView::TestCase
     assert_equal("red", cycle("red", "blue"))
     assert_equal(%w{Specialized Fuji Giant}, @cycles)
   end
+  
+  def test_value_changed
+    assert_equal(true, value_changed?('Ruby'))
+    assert_equal(false, value_changed?('Ruby'))
+    assert_equal(true, value_changed?('Rails'))
+    assert_equal(true, value_changed?(nil))
+  end
+  
+  def test_value_changed_with_name
+    assert_equal(true, value_changed?('red', 'color'))
+    assert_equal(true, value_changed?('green', 'second color'))
+    assert_equal(false, value_changed?('red', 'color'))
+    assert_equal(true, value_changed?('red', 'second color'))
+  end
 end
-- 
1.6.2.1217.gd7bc3

