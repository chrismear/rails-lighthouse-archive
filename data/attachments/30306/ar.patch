Index: lib/active_resource/custom_methods.rb
===================================================================
--- lib/active_resource/custom_methods.rb	(revision 1806)
+++ lib/active_resource/custom_methods.rb	(working copy)
@@ -77,7 +77,7 @@
       
       def post(method_name, options = {}, body = '')
         if new?
-          connection.post(custom_method_new_element_url(method_name, options), (body.nil? ? to_xml : body), self.class.headers)
+          connection.post(custom_method_new_element_url(method_name, options), (body.blank? ? to_xml : body), self.class.headers)
         else
           connection.post(custom_method_element_url(method_name, options), body, self.class.headers)
         end
Index: test/base/custom_methods_test.rb
===================================================================
--- test/base/custom_methods_test.rb	(revision 1806)
+++ test/base/custom_methods_test.rb	(working copy)
@@ -1,4 +1,4 @@
-require "#{File.dirname(__FILE__)}/../abstract_unit"
+"#{File.dirname(__FILE__)}/../abstract_unit"
 require "#{File.dirname(__FILE__)}/../fixtures/person"
 require "#{File.dirname(__FILE__)}/../fixtures/street_address"
 
@@ -77,8 +77,10 @@
 
   def test_custom_new_element_method
     # Test POST against a new element URL
-    ryan = Person.new(:name => 'Ryan')
-    assert_equal ActiveResource::Response.new(@ryan, 201, {'Location' => '/people/5.xml'}), ryan.post(:register)
+    ryan = Person.new(:name => 'Ryan')
+    assert_equal ActiveResource::Response.new(@ryan, 201, {'Location' => '/people/5.xml'}), ryan.post(:register)
+    expected_request = ActiveResource::Request.new(:post, '/people/new/register.xml', @ryan)
+    assert_equal expected_request.body, ActiveResource::HttpMock.requests.first.body
 
     # Test POST against a nested collection URL
     addy = StreetAddress.new(:street => '123 Test Dr.', :person_id => 1)
