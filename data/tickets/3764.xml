<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-01-21T09:08:16+00:00</created-at>
  <creator-id type="integer">73743</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3764</number>
  <permalink>activerecord-through-reflections-has-recursion-bug</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>2.3-stable activerecord associations has_many_through_association</tag>
  <title>ActiveRecord through reflections has recursion bug</title>
  <updated-at type="datetime">2010-10-08T03:08:29+01:00</updated-at>
  <user-id type="integer">89656</user-id>
  <version type="integer">4</version>
  <user-name>Rohit Arondekar</user-name>
  <creator-name>Sai Emrys</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3764</url>
  <priority-name>Low</priority-name>
  <original-body>In 2.3-stable, rails/activerecord/lib/active_record/reflection.rb:309 (source_reflection) calls klass.

klass in turn calls derive_class_name, which - if options[:source_type] falls through - calls&#8230; source_reflection. And boom, stack blows.

Don't know how to fix, as I only just found the bug.

This came up for me when using something like:

ThroughManyHaver.last :include =&gt; :through_relation</original-body>
  <latest-body>In 2.3-stable, rails/activerecord/lib/active_record/reflection.rb:309 (source_reflection) calls klass.

klass in turn calls derive_class_name, which - if options[:source_type] falls through - calls&#8230; source_reflection. And boom, stack blows.

Don't know how to fix, as I only just found the bug.

This came up for me when using something like:

ThroughManyHaver.last :include =&gt; :through_relation</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;In 2.3-stable,
rails/activerecord/lib/active_record/reflection.rb:309
(source_reflection) calls klass.&lt;/p&gt;
&lt;p&gt;klass in turn calls derive_class_name, which - if
options[:source_type] falls through - calls&amp;#8230;
source_reflection. And boom, stack blows.&lt;/p&gt;
&lt;p&gt;Don't know how to fix, as I only just found the bug.&lt;/p&gt;
&lt;p&gt;This came up for me when using something like:&lt;/p&gt;
&lt;p&gt;ThroughManyHaver.last :include =&amp;gt; :through_relation&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In 2.3-stable, rails/activerecord/lib/active_record/reflection.rb:309 (source_reflection) calls klass.

klass in turn calls derive_class_name, which - if options[:source_type] falls through - calls&#8230; source_reflection. And boom, stack blows.

Don't know how to fix, as I only just found the bug.

This came up for me when using something like:

ThroughManyHaver.last :include =&gt; :through_relation</body>
      <body-html>&lt;div&gt;&lt;p&gt;In 2.3-stable,
rails/activerecord/lib/active_record/reflection.rb:309
(source_reflection) calls klass.&lt;/p&gt;
&lt;p&gt;klass in turn calls derive_class_name, which - if
options[:source_type] falls through - calls&amp;#8230;
source_reflection. And boom, stack blows.&lt;/p&gt;
&lt;p&gt;Don't know how to fix, as I only just found the bug.&lt;/p&gt;
&lt;p&gt;This came up for me when using something like:&lt;/p&gt;
&lt;p&gt;ThroughManyHaver.last :include =&amp;gt; :through_relation&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-21T09:08:16+00:00</created-at>
      <creator-id type="integer">73743</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3764</number>
      <permalink>activerecord-through-reflections-has-recursion-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-stable activerecord associations has_many_through_association</tag>
      <title>ActiveRecord through reflections has recursion bug</title>
      <updated-at type="datetime">2010-01-21T09:08:20+00:00</updated-at>
      <user-id type="integer">73743</user-id>
      <version type="integer">1</version>
      <user-name>Sai Emrys</user-name>
      <creator-name>Sai Emrys</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3764</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Can you provide a failing test for this?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can you provide a failing test for this?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-21T15:48:18+00:00</created-at>
      <creator-id type="integer">73743</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3764</number>
      <permalink>activerecord-through-reflections-has-recursion-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-stable activerecord associations has_many_through_association</tag>
      <title>ActiveRecord through reflections has recursion bug</title>
      <updated-at type="datetime">2010-01-21T15:48:20+00:00</updated-at>
      <user-id type="integer">65556</user-id>
      <version type="integer">2</version>
      <user-name>Rizwan Reza</user-name>
      <creator-name>Sai Emrys</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3764</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I don't know Rails' testing framework well enough to do so, sorry.

But the error is fairly evident just from looking through the calls.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I don't know Rails' testing framework well enough to do so,
sorry.&lt;/p&gt;
&lt;p&gt;But the error is fairly evident just from looking through the
calls.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-24T01:01:51+00:00</created-at>
      <creator-id type="integer">73743</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3764</number>
      <permalink>activerecord-through-reflections-has-recursion-bug</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3-stable activerecord associations has_many_through_association</tag>
      <title>ActiveRecord through reflections has recursion bug</title>
      <updated-at type="datetime">2010-01-24T01:01:52+00:00</updated-at>
      <user-id type="integer">73743</user-id>
      <version type="integer">3</version>
      <user-name>Sai Emrys</user-name>
      <creator-name>Sai Emrys</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3764</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Marking ticket as stale. If this is still an issue please leave a comment with suggested changes, creating a patch with tests, rebasing an existing patch or just confirming the issue on a latest release or master/branches.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Marking ticket as stale. If this is still an issue please leave
a comment with suggested changes, creating a patch with tests,
rebasing an existing patch or just confirming the issue on a latest
release or master/branches.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-10-08T03:08:25+01:00</created-at>
      <creator-id type="integer">73743</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3764</number>
      <permalink>activerecord-through-reflections-has-recursion-bug</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>2.3-stable activerecord associations has_many_through_association</tag>
      <title>ActiveRecord through reflections has recursion bug</title>
      <updated-at type="datetime">2010-10-08T03:08:29+01:00</updated-at>
      <user-id type="integer">89656</user-id>
      <version type="integer">4</version>
      <user-name>Rohit Arondekar</user-name>
      <creator-name>Sai Emrys</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3764</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
