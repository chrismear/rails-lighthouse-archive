<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">1366</assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-19T09:02:41+01:00</created-at>
  <creator-id type="integer">19117</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4472</number>
  <permalink>joins-and-include-behave-differently-with-conditions</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>23x activerecord associations include joins</tag>
  <title>:joins and :include behave differently with :conditions</title>
  <updated-at type="datetime">2011-02-02T18:23:01+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">10</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Josh Kalderimis</creator-name>
  <assigned-user-name>Pratik</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4472</url>
  <priority-name nil="true"></priority-name>
  <original-body>When using a has_many :through, :conditions are applied differently for joins and includes.

The issue is related to applying the aliased table name to the condition has, and is only evident when two :has_many :through relationships use one :has_many as the :through. 

Please refer to the attached file for a full example, or the gist found at http://gist.github.com/373613.

I am not sure how to create a test case for this issue but am happy to provide one if someone can give me some pointers.</original-body>
  <latest-body>When using a has_many :through, :conditions are applied differently for joins and includes.

The issue is related to applying the aliased table name to the condition has, and is only evident when two :has_many :through relationships use one :has_many as the :through. 

Please refer to the attached file for a full example, or the gist found at http://gist.github.com/373613.

I am not sure how to create a test case for this issue but am happy to provide one if someone can give me some pointers.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When using a has_many :through, :conditions are applied
differently for joins and includes.&lt;/p&gt;
&lt;p&gt;The issue is related to applying the aliased table name to the
condition has, and is only evident when two :has_many :through
relationships use one :has_many as the :through.&lt;/p&gt;
&lt;p&gt;Please refer to the attached file for a full example, or the
gist found at &lt;a href=
&quot;http://gist.github.com/373613&quot;&gt;http://gist.github.com/373613&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I am not sure how to create a test case for this issue but am
happy to provide one if someone can give me some pointers.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When using a has_many :through, :conditions are applied differently for joins and includes.

The issue is related to applying the aliased table name to the condition has, and is only evident when two :has_many :through relationships use one :has_many as the :through. 

Please refer to the attached file for a full example, or the gist found at http://gist.github.com/373613.

I am not sure how to create a test case for this issue but am happy to provide one if someone can give me some pointers.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When using a has_many :through, :conditions are applied
differently for joins and includes.&lt;/p&gt;
&lt;p&gt;The issue is related to applying the aliased table name to the
condition has, and is only evident when two :has_many :through
relationships use one :has_many as the :through.&lt;/p&gt;
&lt;p&gt;Please refer to the attached file for a full example, or the
gist found at &lt;a href=
&quot;http://gist.github.com/373613&quot;&gt;http://gist.github.com/373613&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I am not sure how to create a test case for this issue but am
happy to provide one if someone can give me some pointers.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-25T15:28:57+01:00</created-at>
      <creator-id type="integer">19117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4472</number>
      <permalink>joins-and-include-behave-differently-with-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord associations include joins</tag>
      <title>:joins and :include behave differently with :conditions</title>
      <updated-at type="datetime">2010-04-25T15:28:59+01:00</updated-at>
      <user-id type="integer">19117</user-id>
      <version type="integer">1</version>
      <user-name>Josh Kalderimis</user-name>
      <creator-name>Josh Kalderimis</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4472</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>added related version tag</body>
      <body-html>&lt;div&gt;&lt;p&gt;added related version tag&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-25T15:29:27+01:00</created-at>
      <creator-id type="integer">19117</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: activerecord associations include joins
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4472</number>
      <permalink>joins-and-include-behave-differently-with-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.x activerecord associations include joins</tag>
      <title>:joins and :include behave differently with :conditions</title>
      <updated-at type="datetime">2010-04-25T15:29:29+01:00</updated-at>
      <user-id type="integer">19117</user-id>
      <version type="integer">2</version>
      <user-name>Josh Kalderimis</user-name>
      <creator-name>Josh Kalderimis</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4472</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Can you provide a test case?.
Thanks.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Can you provide a test case?.&lt;br&gt;
Thanks.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-26T04:47:46+01:00</created-at>
      <creator-id type="integer">19117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4472</number>
      <permalink>joins-and-include-behave-differently-with-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.x activerecord associations include joins</tag>
      <title>:joins and :include behave differently with :conditions</title>
      <updated-at type="datetime">2010-04-26T04:47:49+01:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Josh Kalderimis</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4472</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Hi Santiago,

As I said in the issue, I am not sure how to create a test case for this issue, but I am happy to give it a stab if you can provide me with some pointers or another test which is similar and I can use as an example.

Thanks,

Josh</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi Santiago,&lt;/p&gt;
&lt;p&gt;As I said in the issue, I am not sure how to create a test case
for this issue, but I am happy to give it a stab if you can provide
me with some pointers or another test which is similar and I can
use as an example.&lt;/p&gt;
&lt;p&gt;Thanks,&lt;/p&gt;
&lt;p&gt;Josh&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-26T09:11:40+01:00</created-at>
      <creator-id type="integer">19117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4472</number>
      <permalink>joins-and-include-behave-differently-with-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.x activerecord associations include joins</tag>
      <title>:joins and :include behave differently with :conditions</title>
      <updated-at type="datetime">2010-04-26T09:11:42+01:00</updated-at>
      <user-id type="integer">19117</user-id>
      <version type="integer">4</version>
      <user-name>Josh Kalderimis</user-name>
      <creator-name>Josh Kalderimis</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4472</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>If you're wanting to do conditions on another table you have to use `joins` rather than `includes`, as this will insert an SQL join. `include` is more for eager loading of *potential* records, where as joins will only load records that have that particular join.</body>
      <body-html>&lt;div&gt;&lt;p&gt;If you're wanting to do conditions on another table you have to
use &lt;code&gt;joins&lt;/code&gt; rather than &lt;code&gt;includes&lt;/code&gt;, as this
will insert an SQL join. &lt;code&gt;include&lt;/code&gt; is more for eager
loading of &lt;em&gt;potential&lt;/em&gt; records, where as joins will only
load records that have that particular join.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-26T09:15:15+01:00</created-at>
      <creator-id type="integer">19117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4472</number>
      <permalink>joins-and-include-behave-differently-with-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.x activerecord associations include joins</tag>
      <title>:joins and :include behave differently with :conditions</title>
      <updated-at type="datetime">2010-04-26T09:15:18+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">5</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Josh Kalderimis</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4472</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body></body>
      <body-html></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-27T08:44:36+01:00</created-at>
      <creator-id type="integer">19117</creator-id>
      <diffable-attributes type="yaml">--- 
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4472</number>
      <permalink>joins-and-include-behave-differently-with-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.x activerecord associations include joins</tag>
      <title>:joins and :include behave differently with :conditions</title>
      <updated-at type="datetime">2010-04-27T08:44:41+01:00</updated-at>
      <user-id type="integer">14998</user-id>
      <version type="integer">6</version>
      <user-name>Ryan Bigg</user-name>
      <creator-name>Josh Kalderimis</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4472</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue is very similar to [Issue 2908](https://rails.lighthouseapp.com/projects/8994/tickets/2908-constructed-sql-is-wrong-for-multiple-joins-based-on-has_many-with-conditions)

The core of the issue seems to be that the table alias name is not being applied to the conditions when using `:joins`</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue is very similar to &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/2908-constructed-sql-is-wrong-for-multiple-joins-based-on-has_many-with-conditions&quot;&gt;
Issue 2908&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The core of the issue seems to be that the table alias name is
not being applied to the conditions when using
&lt;code&gt;:joins&lt;/code&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-04-29T09:25:07+01:00</created-at>
      <creator-id type="integer">19117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4472</number>
      <permalink>joins-and-include-behave-differently-with-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.x activerecord associations include joins</tag>
      <title>:joins and :include behave differently with :conditions</title>
      <updated-at type="datetime">2010-04-29T09:25:11+01:00</updated-at>
      <user-id type="integer">19117</user-id>
      <version type="integer">7</version>
      <user-name>Josh Kalderimis</user-name>
      <creator-name>Josh Kalderimis</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4472</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>se Tag &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/collection/omega-aquaterra-railmaster.html&quot;&gt;Omega Aquaterra Railmaster watches&lt;/a&gt;&lt;/b&gt; Heuer replica watches being &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/watches/oris-williams-f1-day-date-stainless-steel-mens-watch-635-7595-4164rs-3149-2385.html&quot;&gt;Oris Williams F1 Williams F1 Day Date Stainless Steel Mens 635-7595-4164RS-3149&lt;/a&gt;&lt;/b&gt; so low, it makes &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/watches/baume-mercier-baume-and-mercier-18kt-gold-two-tone-riviera-mens-watch-8598-2135-1259.html&quot;&gt;Baume and Mercier 18kt Gold Two-Tone Riviera Mens 8598-2135&lt;/a&gt;&lt;/b&gt; sense to go in &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/watches/baume-mercier-baume-mercier-hampton-milleis-ladies-watch-8448-2241-1377.html&quot;&gt;fake Baume &amp; Mercier Hampton Milleis Ladies 8448-2241&lt;/a&gt;&lt;/b&gt; for more than one. &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega sales&lt;/a&gt;&lt;/b&gt; These imitatio &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega wathces&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/watches/omega-speedmaster-broad-arrow-chronograph-mens-watch-3851-50-11-410-3439.html&quot;&gt;Speedmaster Broad Arrow Chronograph Mens 3851.50.11-410&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega watches replica&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega wathces&lt;/a&gt;&lt;/b&gt;  &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com/watches/tag-heuer-classic-watch-1-mens-watch-1507-566.html&quot;&gt;Classic 1 mens-1507&lt;/a&gt;&lt;/b&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;se Tag &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/collection/omega-aquaterra-railmaster.html&quot;&gt;
Omega Aquaterra Railmaster watches&lt;/a&gt;&lt;/b&gt; Heuer replica watches
being &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/watches/oris-williams-f1-day-date-stainless-steel-mens-watch-635-7595-4164rs-3149-2385.html&quot;&gt;
Oris Williams F1 Williams F1 Day Date Stainless Steel Mens
635-7595-4164RS-3149&lt;/a&gt;&lt;/b&gt; so low, it makes &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/watches/baume-mercier-baume-and-mercier-18kt-gold-two-tone-riviera-mens-watch-8598-2135-1259.html&quot;&gt;
Baume and Mercier 18kt Gold Two-Tone Riviera Mens 8598-2135&lt;/a&gt;&lt;/b&gt;
sense to go in &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/watches/baume-mercier-baume-mercier-hampton-milleis-ladies-watch-8448-2241-1377.html&quot;&gt;
fake Baume &amp;amp; Mercier Hampton Milleis Ladies 8448-2241&lt;/a&gt;&lt;/b&gt;
for more than one. &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com&quot;&gt;omega sales&lt;/a&gt;&lt;/b&gt; These
imitatio &lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega
wathces&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/watches/omega-speedmaster-broad-arrow-chronograph-mens-watch-3851-50-11-410-3439.html&quot;&gt;
Speedmaster Broad Arrow Chronograph Mens 3851.50.11-410&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=&quot;http://www.omegawatchesforsale.com&quot;&gt;omega watches
replica&lt;/a&gt;&lt;/b&gt; &lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com&quot;&gt;omega wathces&lt;/a&gt;&lt;/b&gt;
&lt;b&gt;&lt;a href=
&quot;http://www.omegawatchesforsale.com/watches/tag-heuer-classic-watch-1-mens-watch-1507-566.html&quot;&gt;
Classic 1 mens-1507&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-19T08:54:01+01:00</created-at>
      <creator-id type="integer">19117</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4472</number>
      <permalink>joins-and-include-behave-differently-with-conditions</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>2.3.x activerecord associations include joins</tag>
      <title>:joins and :include behave differently with :conditions</title>
      <updated-at type="datetime">2010-07-19T09:02:37+01:00</updated-at>
      <user-id type="integer">107771</user-id>
      <version type="integer">8</version>
      <user-name>zhuzhu</user-name>
      <creator-name>Josh Kalderimis</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4472</url>
      <priority-name>Low</priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:51:31+00:00</created-at>
      <creator-id type="integer">19117</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:tag: 2.3.x activerecord associations include joins
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4472</number>
      <permalink>joins-and-include-behave-differently-with-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>23x activerecord associations include joins</tag>
      <title>:joins and :include behave differently with :conditions</title>
      <updated-at type="datetime">2011-02-02T18:23:01+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">9</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Josh Kalderimis</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4472</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">1366</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:51:32+00:00</created-at>
      <creator-id type="integer">19117</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4472</number>
      <permalink>joins-and-include-behave-differently-with-conditions</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>23x activerecord associations include joins</tag>
      <title>:joins and :include behave differently with :conditions</title>
      <updated-at type="datetime">2011-02-02T18:22:44+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">10</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Josh Kalderimis</creator-name>
      <assigned-user-name>Pratik</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4472</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>1187790966943b9b04a335caa0bef4b6f18e35ba</code>
      <content-type>text/x-ruby-script</content-type>
      <created-at type="datetime">2010-04-25T15:28:58+01:00</created-at>
      <filename>conditions_joins_issues.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">495945</id>
      <size type="integer">3938</size>
      <uploader-id type="integer">19117</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/495945/conditions_joins_issues.rb</url>
    </attachment>
  </attachments>
</ticket>
