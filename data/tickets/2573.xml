<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-04-27T21:31:18+01:00</created-at>
  <creator-id type="integer">16138</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">9903</milestone-id>
  <number type="integer">2573</number>
  <permalink>make-assert_sql-output-easier-to-debug-the-problem</permalink>
  <priority type="integer">1714</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag>activerecord debug patch testing tiny</tag>
  <title>Make assert_sql output easier to debug the problem</title>
  <updated-at type="datetime">2009-04-28T22:13:06+01:00</updated-at>
  <user-id type="integer">17393</user-id>
  <version type="integer">2</version>
  <user-name>Repository</user-name>
  <creator-name>Emilio Tagua</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/2573</url>
  <milestone-title>2.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>This is a small improvement to assert_sql, making the it's output easier to debug the problem.

Fox example for this failing test:

@@@ ruby
  def test_merged_scoped_find
    poor_jamis = developers(:poor_jamis)
    Developer.with_scope(:find =&gt; { :conditions =&gt; &quot;salary &lt; 100000&quot; }) do
      Developer.with_scope(:find =&gt; { :offset =&gt; 1, :order =&gt; 'id asc' }) do
        assert_sql /ORDER BY id asc  / do
          assert_equal(poor_jamis, Developer.find(:first, :order =&gt; 'id asc'))
        end
      end
    end
  end
@@@


Instead of the current output:

    Query pattern(s) /ORDER BY id asc  / not found.
&lt;false&gt; is not true.


You'll get something like this:

    Query pattern(s) /ORDER BY id asc  / not found in SELECT * FROM `developers` WHERE (salary &lt; 100000)  ORDER BY id asc LIMIT 1, 1.
&lt;false&gt; is not true.


Showing the executed queries and making easier to figure put why it isn't the expected result.</original-body>
  <latest-body>This is a small improvement to assert_sql, making the it's output easier to debug the problem.

Fox example for this failing test:

@@@ ruby
  def test_merged_scoped_find
    poor_jamis = developers(:poor_jamis)
    Developer.with_scope(:find =&gt; { :conditions =&gt; &quot;salary &lt; 100000&quot; }) do
      Developer.with_scope(:find =&gt; { :offset =&gt; 1, :order =&gt; 'id asc' }) do
        assert_sql /ORDER BY id asc  / do
          assert_equal(poor_jamis, Developer.find(:first, :order =&gt; 'id asc'))
        end
      end
    end
  end
@@@


Instead of the current output:

    Query pattern(s) /ORDER BY id asc  / not found.
&lt;false&gt; is not true.


You'll get something like this:

    Query pattern(s) /ORDER BY id asc  / not found in SELECT * FROM `developers` WHERE (salary &lt; 100000)  ORDER BY id asc LIMIT 1, 1.
&lt;false&gt; is not true.


Showing the executed queries and making easier to figure put why it isn't the expected result.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;This is a small improvement to assert_sql, making the it's
output easier to debug the problem.&lt;/p&gt;
&lt;p&gt;Fox example for this failing test:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  def test_merged_scoped_find
    poor_jamis = developers(:poor_jamis)
    Developer.with_scope(:find =&amp;gt; { :conditions =&amp;gt; &amp;quot;salary &amp;lt; 100000&amp;quot; }) do
      Developer.with_scope(:find =&amp;gt; { :offset =&amp;gt; 1, :order =&amp;gt; 'id asc' }) do
        assert_sql /ORDER BY id asc  / do
          assert_equal(poor_jamis, Developer.find(:first, :order =&amp;gt; 'id asc'))
        end
      end
    end
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instead of the current output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Query pattern(s) /ORDER BY id asc  / not found.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;is not true.&lt;/p&gt;
&lt;p&gt;You'll get something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Query pattern(s) /ORDER BY id asc  / not found in SELECT * FROM `developers` WHERE (salary &amp;lt; 100000)  ORDER BY id asc LIMIT 1, 1.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;is not true.&lt;/p&gt;
&lt;p&gt;Showing the executed queries and making easier to figure put why
it isn't the expected result.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is a small improvement to assert_sql, making the it's output easier to debug the problem.

Fox example for this failing test:

@@@ ruby
  def test_merged_scoped_find
    poor_jamis = developers(:poor_jamis)
    Developer.with_scope(:find =&gt; { :conditions =&gt; &quot;salary &lt; 100000&quot; }) do
      Developer.with_scope(:find =&gt; { :offset =&gt; 1, :order =&gt; 'id asc' }) do
        assert_sql /ORDER BY id asc  / do
          assert_equal(poor_jamis, Developer.find(:first, :order =&gt; 'id asc'))
        end
      end
    end
  end
@@@


Instead of the current output:

    Query pattern(s) /ORDER BY id asc  / not found.


You'll get something like this:

    Query pattern(s) /ORDER BY id asc  / not found in SELECT * FROM `developers` WHERE (salary &lt; 100000)  ORDER BY id asc LIMIT 1, 1.


Showing the executed queries and making easier to figure put why it isn't the expected result.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is a small improvement to assert_sql, making the it's
output easier to debug the problem.&lt;/p&gt;
&lt;p&gt;Fox example for this failing test:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
  def test_merged_scoped_find
    poor_jamis = developers(:poor_jamis)
    Developer.with_scope(:find =&amp;gt; { :conditions =&amp;gt; &amp;quot;salary &amp;lt; 100000&amp;quot; }) do
      Developer.with_scope(:find =&amp;gt; { :offset =&amp;gt; 1, :order =&amp;gt; 'id asc' }) do
        assert_sql /ORDER BY id asc  / do
          assert_equal(poor_jamis, Developer.find(:first, :order =&amp;gt; 'id asc'))
        end
      end
    end
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instead of the current output:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Query pattern(s) /ORDER BY id asc  / not found.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You'll get something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Query pattern(s) /ORDER BY id asc  / not found in SELECT * FROM `developers` WHERE (salary &amp;lt; 100000)  ORDER BY id asc LIMIT 1, 1.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Showing the executed queries and making easier to figure put why
it isn't the expected result.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-27T21:31:18+01:00</created-at>
      <creator-id type="integer">16138</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2573</number>
      <permalink>make-assert_sql-output-easier-to-debug-the-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord debug patch testing tiny</tag>
      <title>Make assert_sql output easier to debug the problem</title>
      <updated-at type="datetime">2009-04-27T21:35:42+01:00</updated-at>
      <user-id type="integer">16138</user-id>
      <version type="integer">1</version>
      <user-name>Emilio Tagua</user-name>
      <creator-name>Emilio Tagua</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2573</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>(from [4246a79a991af6c4c5a9473d01e805a5ac04624a]) Show executed queries when assert_sql assertion fails [#2573 state:resolved]

Signed-off-by: Pratik Naik &lt;pratiknaik@gmail.com&gt;
http://github.com/rails/rails/commit/4246a79a991af6c4c5a9473d01e805a5ac04624a</body>
      <body-html>&lt;div&gt;&lt;p&gt;(from [4246a79a991af6c4c5a9473d01e805a5ac04624a]) Show executed
queries when assert_sql assertion fails [&lt;a href=&quot;/projects/8994/tickets/2573&quot; title=&quot;Ticket #2573&quot;&gt;#2573&lt;/a&gt;
state:resolved]&lt;/p&gt;
&lt;p&gt;Signed-off-by: Pratik Naik &lt;a href=&quot;mailto:pratiknaik@gmail.com&quot;&gt;pratiknaik@gmail.com&lt;/a&gt; &lt;a href=&quot;http://github.com/rails/rails/commit/4246a79a991af6c4c5a9473d01e805a5ac04624a&quot;&gt;
http://github.com/rails/rails/co...&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-28T22:13:04+01:00</created-at>
      <creator-id type="integer">16138</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">2573</number>
      <permalink>make-assert_sql-output-easier-to-debug-the-problem</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag>activerecord debug patch testing tiny</tag>
      <title>Make assert_sql output easier to debug the problem</title>
      <updated-at type="datetime">2009-04-28T22:13:06+01:00</updated-at>
      <user-id type="integer">17393</user-id>
      <version type="integer">2</version>
      <user-name>Repository</user-name>
      <creator-name>Emilio Tagua</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/2573</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>8858d817e405f225a454362bf926f8a4e63f29c7</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-27T21:31:18+01:00</created-at>
      <filename>make_assert_sql_output_easier_to_debug.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">115803</id>
      <size type="integer">1037</size>
      <uploader-id type="integer">16138</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/115803/make_assert_sql_output_easier_to_debug.diff</url>
    </attachment>
  </attachments>
</ticket>
