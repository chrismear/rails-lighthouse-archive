<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">14890</assigned-user-id>
  <attachments-count type="integer">5</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2011-01-13T06:52:10+00:00</created-at>
  <creator-id type="integer">31847</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer">71472</milestone-id>
  <number type="integer">1036</number>
  <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
  <priority type="integer">468</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>activerecord postgresql</tag>
  <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
  <updated-at type="datetime">2011-04-14T01:01:47+01:00</updated-at>
  <user-id type="integer">136779</user-id>
  <version type="integer">25</version>
  <user-name>rails</user-name>
  <creator-name>John Whitley</creator-name>
  <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
  <milestone-title>3.x</milestone-title>
  <priority-name nil="true"></priority-name>
  <original-body>Repro steps:

Commit (http://github.com/rails/rails/commit/09343166ac213e5fcbd3eb5b21d44606b56afa62 &quot;09343166ac213e5fcbd3eb5b21d44606b56afa62&quot;) breaks previously working migrations, as the PostgreSQL 7 code is more liberal about what column types it will successfully change.
e.g., 
@@@ ruby
# original (somewhat misguided) migration
create_table &quot;foo&quot;, :force =&gt; true do |t|
  t.column &quot;bar&quot;, :string, :limit =&gt; 40
end
@@@

In a Later Migration...

@@@ ruby
# Was on crack, need integer
change_column :foo, :bar, :integer
@@@

The `change_column` will now fail (against PostgreSQL 8.3.0) with:

`ActiveRecord::StatementInvalid: PGError: ERROR:  column &quot;bar&quot; cannot be cast to type &quot;pg_catalog.int4&quot;`

`change_column` worked fine in AR 2.1, but now throws in 2.1.1.  The resulting ALTER COLUMN isn't legit, but the postgres 7 fallback code worked fine.</original-body>
  <latest-body>Repro steps:

Commit (http://github.com/rails/rails/commit/09343166ac213e5fcbd3eb5b21d44606b56afa62 &quot;09343166ac213e5fcbd3eb5b21d44606b56afa62&quot;) breaks previously working migrations, as the PostgreSQL 7 code is more liberal about what column types it will successfully change.
e.g., 
@@@ ruby
# original (somewhat misguided) migration
create_table &quot;foo&quot;, :force =&gt; true do |t|
  t.column &quot;bar&quot;, :string, :limit =&gt; 40
end
@@@

In a Later Migration...

@@@ ruby
# Was on crack, need integer
change_column :foo, :bar, :integer
@@@

The `change_column` will now fail (against PostgreSQL 8.3.0) with:

`ActiveRecord::StatementInvalid: PGError: ERROR:  column &quot;bar&quot; cannot be cast to type &quot;pg_catalog.int4&quot;`

`change_column` worked fine in AR 2.1, but now throws in 2.1.1.  The resulting ALTER COLUMN isn't legit, but the postgres 7 fallback code worked fine.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Repro steps:&lt;/p&gt;
&lt;p&gt;Commit (&lt;a href=&quot;http://github.com/rails/rails/commit/09343166ac213e5fcbd3eb5b21d44606b56afa62&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&quot;09343166ac213e5fcbd3eb5b21d44606b56afa62&quot;) breaks previously
working migrations, as the PostgreSQL 7 code is more liberal about
what column types it will successfully change. e.g.,&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
# original (somewhat misguided) migration
create_table &amp;quot;foo&amp;quot;, :force =&amp;gt; true do |t|
  t.column &amp;quot;bar&amp;quot;, :string, :limit =&amp;gt; 40
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In a Later Migration...&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
# Was on crack, need integer
change_column :foo, :bar, :integer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;change_column&lt;/code&gt; will now fail (against PostgreSQL
8.3.0) with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ActiveRecord::StatementInvalid: PGError: ERROR: column
&quot;bar&quot; cannot be cast to type &quot;pg_catalog.int4&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;change_column&lt;/code&gt; worked fine in AR 2.1, but now throws
in 2.1.1. The resulting ALTER COLUMN isn't legit, but the postgres
7 fallback code worked fine.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Repro steps:

Commit (http://github.com/rails/rails/commit/09343166ac213e5fcbd3eb5b21d44606b56afa62 &quot;09343166ac213e5fcbd3eb5b21d44606b56afa62&quot;) breaks previously working migrations, as the PostgreSQL 7 code is more liberal about what column types it will successfully change.
e.g., 
@@@ ruby
# original (somewhat misguided) migration
create_table &quot;foo&quot;, :force =&gt; true do |t|
  t.column &quot;bar&quot;, :string, :limit =&gt; 40
end
@@@

In a Later Migration...

@@@ ruby
# Was on crack, need integer
change_column :foo, :bar, :integer
@@@

The `change_column` will now fail (against PostgreSQL 8.3.0) with:

`ActiveRecord::StatementInvalid: PGError: ERROR:  column &quot;bar&quot; cannot be cast to type &quot;pg_catalog.int4&quot;`

`change_column` worked fine in AR 2.1, but now throws in 2.1.1.  The resulting ALTER COLUMN isn't legit, but the postgres 7 fallback code worked fine.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Repro steps:&lt;/p&gt;
&lt;p&gt;Commit (&lt;a href=&quot;http://github.com/rails/rails/commit/09343166ac213e5fcbd3eb5b21d44606b56afa62&quot;&gt;http://github.com/rails/rails/co...&lt;/a&gt;
&quot;09343166ac213e5fcbd3eb5b21d44606b56afa62&quot;) breaks previously
working migrations, as the PostgreSQL 7 code is more liberal about
what column types it will successfully change. e.g.,&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
# original (somewhat misguided) migration
create_table &amp;quot;foo&amp;quot;, :force =&amp;gt; true do |t|
  t.column &amp;quot;bar&amp;quot;, :string, :limit =&amp;gt; 40
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In a Later Migration...&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
# Was on crack, need integer
change_column :foo, :bar, :integer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;change_column&lt;/code&gt; will now fail (against PostgreSQL
8.3.0) with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ActiveRecord::StatementInvalid: PGError: ERROR: column
&quot;bar&quot; cannot be cast to type &quot;pg_catalog.int4&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;change_column&lt;/code&gt; worked fine in AR 2.1, but now throws
in 2.1.1. The resulting ALTER COLUMN isn't legit, but the postgres
7 fallback code worked fine.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-12T22:17:45+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord postgresql</tag>
      <title>ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2008-09-12T22:17:56+01:00</updated-at>
      <user-id type="integer">31847</user-id>
      <version type="integer">1</version>
      <user-name>John Whitley</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'll further observe that the ALTER COLUMN needs a USING clause to work correctly in this use case, ala:

@@@ ruby
execute &quot;ALTER TABLE #{quoted_table_name} ALTER COLUMN #{quote_column_name(column_name)} TYPE #{type_to_sql(type, options[:limit], options[:precision], options[:scale])} USING CAST(#{quote_column_name(column_name)} AS #{type_to_sql(type, options[:limit], options[:precision], options[:scale])})&quot;
@@@

Note that the CAST() is identical to the one used in the PostgreSQL 7.x fallback code.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'll further observe that the ALTER COLUMN needs a USING clause
to work correctly in this use case, ala:&lt;/p&gt;


&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;
execute &amp;quot;ALTER TABLE #{quoted_table_name} ALTER COLUMN #{quote_column_name(column_name)} TYPE #{type_to_sql(type, options[:limit], options[:precision], options[:scale])} USING CAST(#{quote_column_name(column_name)} AS #{type_to_sql(type, options[:limit], options[:precision], options[:scale])})&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the CAST() is identical to the one used in the
PostgreSQL 7.x fallback code.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-09-12T23:01:24+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord postgresql</tag>
      <title>ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2008-09-12T23:01:27+01:00</updated-at>
      <user-id type="integer">31847</user-id>
      <version type="integer">2</version>
      <user-name>John Whitley</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>@John: have you submitted a patch?  This is a problem for me, too.</body>
      <body-html>&lt;div&gt;&lt;p&gt;@John: have you submitted a patch? This is a problem for me,
too.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-10-16T04:17:11+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord postgresql</tag>
      <title>ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2008-10-16T04:17:13+01:00</updated-at>
      <user-id type="integer">16406</user-id>
      <version type="integer">3</version>
      <user-name>Michael Hartl</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>In addition to the change mentioned by John, the change_column method needs to drop the default value of a column prior to changing it.

This is so that you don't get an error when the default value of a column is incompatible with the column type you are changing it to.</body>
      <body-html>&lt;div&gt;&lt;p&gt;In addition to the change mentioned by John, the change_column
method needs to drop the default value of a column prior to
changing it.&lt;/p&gt;
&lt;p&gt;This is so that you don't get an error when the default value of
a column is incompatible with the column type you are changing it
to.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2008-12-06T03:01:55+00:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord postgresql</tag>
      <title>ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2008-12-06T03:01:57+00:00</updated-at>
      <user-id type="integer">39909</user-id>
      <version type="integer">4</version>
      <user-name>Blim</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name nil="true"></assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Is this still an issue ? Will reopen once we have a fix or a failing test.

http://guides.rails.info/contributing_to_rails.html might come handy if you wish to submit a failing test case :)</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is this still an issue ? Will reopen once we have a fix or a
failing test.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://guides.rails.info/contributing_to_rails.html&quot;&gt;http://guides.rails.info/contrib...&lt;/a&gt;
might come handy if you wish to submit a failing test case :)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-08T17:19:30+00:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
:assigned_user: 
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord postgresql</tag>
      <title>ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-03-08T17:19:31+00:00</updated-at>
      <user-id type="integer">1366</user-id>
      <version type="integer">5</version>
      <user-name>Pratik</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>It appears that it's still broken in edge. I'd suggest looking at a diff between 2.1 and 2.1.1 for a hint about where to start, since that's where it broke.</body>
      <body-html>&lt;div&gt;&lt;p&gt;It appears that it's still broken in edge. I'd suggest looking
at a diff between 2.1 and 2.1.1 for a hint about where to start,
since that's where it broke.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-03-12T22:48:28+00:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord postgresql</tag>
      <title>ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-03-12T22:48:30+00:00</updated-at>
      <user-id type="integer">16406</user-id>
      <version type="integer">6</version>
      <user-name>Michael Hartl</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have recreated it with he gem: postgres (0.7.9.2008.01.28) and have PostgreSQL 8.3.6 installed on ubuntu 8.04.

I have uploaded the AR/test/cases/migration_test.rb to illustrate the problem migrating from a string column to an integer.  Below is the diff of the test. 

diff --git a/activerecord/test/cases/migration_test.rb b/activerecord/test/cases/migration_test.rb
index 16861f2..07197ee 100644
--- a/activerecord/test/cases/migration_test.rb
+++ b/activerecord/test/cases/migration_test.rb
@@ -712,6 +712,19 @@ if ActiveRecord::Base.connection.supports_migrations?
       assert_nothing_raised { Topic.connection.change_column :topics, :approved, :boolean, :default =&gt; true }
     end
 
+   def test_change_column_requires_type_cast
+      Person.connection.add_column 'people', 'age', :string
+      old_columns = Person.connection.columns(Person.table_name, &quot;#{name} Columns&quot;)
+      assert old_columns.find { |c| c.name == 'age' and c.type == :string }
+
+      assert_nothing_raised { Person.connection.change_column &quot;people&quot;, &quot;age&quot;, :integer }
+
+      new_columns = Person.connection.columns(Person.table_name, &quot;#{name} Columns&quot;)
+      assert_nil new_columns.find { |c| c.name == 'age' and c.type == :string }
+      assert new_columns.find { |c| c.name == 'age' and c.type == :integer }
+    end
+
+
     def test_change_column_with_nil_default
       Person.connection.add_column &quot;people&quot;, &quot;contributor&quot;, :boolean, :default =&gt; true
       Person.reset_column_information


Here is the result, also attached(tests.log):

 23) Failure:
test_change_column_requires_type_cast(MigrationTest)
    [./test/cases/migration_test.rb:720:in `test_change_column_requires_type_cast'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
     ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run']:
Exception raised:
Class: &lt;ActiveRecord::StatementInvalid&gt;
Message: &lt;&quot;PGError: ERROR:  column \&quot;age\&quot; cannot be cast to type \&quot;pg_catalog.int4\&quot;\n: ALTER TABLE \&quot;people\&quot; ALTER COLUMN \&quot;age\&quot; TYPE integer&quot;&gt;
---Backtrace---
./test/cases/../../lib/active_record/connection_adapters/abstract_adapter.rb:212:in `log'
./test/cases/../../lib/active_record/connection_adapters/postgresql_adapter.rb:507:in `execute_without_query_record'
./test/cases/helper.rb:37:in `execute'
./test/cases/../../lib/active_record/connection_adapters/postgresql_adapter.rb:802:in `change_column'
./test/cases/migration_test.rb:720:in `test_change_column_requires_type_cast'
./test/cases/migration_test.rb:720:in `test_change_column_requires_type_cast'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run'


The problem is in the change_column method, the execute fails and the raise e line (804) raises the exception seen above.  Apparently the alter table works in earlier versions of postgres but not in 8.3+

        begin
          execute &quot;ALTER TABLE #{quoted_table_name} ALTER COLUMN #{quote_column_name(column_name)} TYPE #{type_to_sql(type, options[:limit], options[:precision], options[:scale])}&quot;
        rescue ActiveRecord::StatementInvalid =&gt; e
          raise e if postgresql_version &gt; 80000
          # This is PostgreSQL 7.x, so we have to use a more arcane way of doing it.
          begin
            begin_db_transaction
            tmp_column_name = &quot;#{column_name}_ar_tmp&quot;
            add_column(table_name, tmp_column_name, type, options)
            execute &quot;UPDATE #{quoted_table_name} SET #{quote_column_name(tmp_column_name)} = CAST(#{quote_column_name(column_name)} AS #{type_to_sql(type, options[:limit], options[:precision], options[:scale])})&quot;
            remove_column(table_name, column_name)
            rename_column(table_name, tmp_column_name, column_name)
            commit_db_transaction
          rescue
            rollback_db_transaction
          end
        end</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have recreated it with he gem: postgres (0.7.9.2008.01.28) and
have PostgreSQL 8.3.6 installed on ubuntu 8.04.&lt;/p&gt;
&lt;p&gt;I have uploaded the AR/test/cases/migration_test.rb to
illustrate the problem migrating from a string column to an
integer. Below is the diff of the test.&lt;/p&gt;
&lt;p&gt;diff --git a/activerecord/test/cases/migration_test.rb
b/activerecord/test/cases/migration_test.rb index 16861f2..07197ee
100644 --- a/activerecord/test/cases/migration_test.rb +++
b/activerecord/test/cases/migration_test.rb @@ -712,6 +712,19 @@ if
ActiveRecord::Base.connection.supports_migrations?&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;   assert_nothing_raised { Topic.connection.change_column :topics, :approved, :boolean, :default =&amp;gt; true }
 end
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;def test_change_column_requires_type_cast&lt;/li&gt;
&lt;li&gt;Person.connection.add_column 'people', 'age', :string&lt;/li&gt;
&lt;li&gt;old_columns = Person.connection.columns(Person.table_name,
&quot;#{name} Columns&quot;)&lt;/li&gt;
&lt;li&gt;assert old_columns.find { |c| c.name == 'age' and c.type ==
:string } +&lt;/li&gt;
&lt;li&gt;assert_nothing_raised { Person.connection.change_column
&quot;people&quot;, &quot;age&quot;, :integer } +&lt;/li&gt;
&lt;li&gt;new_columns = Person.connection.columns(Person.table_name,
&quot;#{name} Columns&quot;)&lt;/li&gt;
&lt;li&gt;assert_nil new_columns.find { |c| c.name == 'age' and c.type ==
:string }&lt;/li&gt;
&lt;li&gt;assert new_columns.find { |c| c.name == 'age' and c.type ==
:integer }&lt;/li&gt;
&lt;li&gt;end + + def test_change_column_with_nil_default
Person.connection.add_column &quot;people&quot;, &quot;contributor&quot;, :boolean,
:default =&amp;gt; true Person.reset_column_information&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is the result, also attached(tests.log):&lt;/p&gt;
&lt;p&gt;23) Failure:
test_change_column_requires_type_cast(MigrationTest)&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[./test/cases/migration_test.rb:720:in `test_change_column_requires_type_cast'
 ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `__send__'
 ./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in `run']:
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Exception raised: Class: &amp;lt;ActiveRecord::StatementInvalid&amp;gt;
Message: &amp;lt;&quot;PGError: ERROR: column &quot;age&quot; cannot be cast to type
&quot;pg_catalog.int4&quot;\n: ALTER TABLE &quot;people&quot; ALTER COLUMN &quot;age&quot; TYPE
integer&quot;&amp;gt; ---Backtrace---
./test/cases/../../lib/active_record/connection_adapters/abstract_adapter.rb:212:in
&lt;code&gt;log'
./test/cases/../../lib/active_record/connection_adapters/postgresql_adapter.rb:507:in&lt;/code&gt;execute_without_query_record'
./test/cases/helper.rb:37:in &lt;code&gt;execute'
./test/cases/../../lib/active_record/connection_adapters/postgresql_adapter.rb:802:in&lt;/code&gt;change_column'
./test/cases/migration_test.rb:720:in
&lt;code&gt;test_change_column_requires_type_cast'
./test/cases/migration_test.rb:720:in&lt;/code&gt;test_change_column_requires_type_cast'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in
&lt;code&gt;__send__'
./test/cases/../../../activesupport/lib/active_support/testing/setup_and_teardown.rb:62:in&lt;/code&gt;run'&lt;/p&gt;
&lt;p&gt;The problem is in the change_column method, the execute fails
and the raise e line (804) raises the exception seen above.
Apparently the alter table works in earlier versions of postgres
but not in 8.3+&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    begin
      execute &quot;ALTER TABLE #{quoted_table_name} ALTER COLUMN #{quote_column_name(column_name)} TYPE #{type_to_sql(type, options[:limit], options[:precision], options[:scale])}&quot;
    rescue ActiveRecord::StatementInvalid =&amp;gt; e
      raise e if postgresql_version &amp;gt; 80000
      # This is PostgreSQL 7.x, so we have to use a more arcane way of doing it.
      begin
        begin_db_transaction
        tmp_column_name = &quot;#{column_name}_ar_tmp&quot;
        add_column(table_name, tmp_column_name, type, options)
        execute &quot;UPDATE #{quoted_table_name} SET #{quote_column_name(tmp_column_name)} = CAST(#{quote_column_name(column_name)} AS #{type_to_sql(type, options[:limit], options[:precision], options[:scale])})&quot;
        remove_column(table_name, column_name)
        rename_column(table_name, tmp_column_name, column_name)
        commit_db_transaction
      rescue
        rollback_db_transaction
      end
    end
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-03T17:32:07+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord postgresql</tag>
      <title>ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-04-03T17:32:12+01:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">7</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>Sorry, the unit test did not get attached... let's try that again.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Sorry, the unit test did not get attached... let's try that
again.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-03T17:33:27+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord postgresql</tag>
      <title>ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-04-03T17:33:31+01:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">8</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Looks like the diff did not print properly... see the attached migration_test.rb, method: test_change_column_requires_type_cast

I updated the one in test/cases/migration_test.rb and ran it from rails/activerecord from edge rails.  &quot;rake test_postgresql&quot;</body>
      <body-html>&lt;div&gt;&lt;p&gt;Looks like the diff did not print properly... see the attached
migration_test.rb, method:
test_change_column_requires_type_cast&lt;/p&gt;
&lt;p&gt;I updated the one in test/cases/migration_test.rb and ran it
from rails/activerecord from edge rails. &quot;rake test_postgresql&quot;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-03T17:50:38+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord postgresql</tag>
      <title>ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-04-03T17:50:42+01:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">9</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">2</attachments-count>
      <body>Attached is the unit test diff which fails on Edge rails with 8.3.6 PG</body>
      <body-html>&lt;div&gt;&lt;p&gt;Attached is the unit test diff which fails on Edge rails with
8.3.6 PG&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-06T19:16:18+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- 
:title: ActiveRecord 2.1.1 breaks formerly legit postgres migrations
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-04-06T19:16:23+01:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">10</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>Joe, unfortunately I don't currently have enough free time to try to solve this, but if you'd like to, I can point you in the right direction. What is needed here is for the &quot;ALTER COLUMN&quot; statement to include a &quot;USING&quot; argument that explicitly specifies the type conversion that (in previous versions of postgresql) happened manually. For example, for 'change_column &quot;people&quot;, &quot;age&quot;, :integer' it should be 'USING age::integer'.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Joe, unfortunately I don't currently have enough free time to
try to solve this, but if you'd like to, I can point you in the
right direction. What is needed here is for the &quot;ALTER COLUMN&quot;
statement to include a &quot;USING&quot; argument that explicitly specifies
the type conversion that (in previous versions of postgresql)
happened manually. For example, for 'change_column &quot;people&quot;, &quot;age&quot;,
:integer' it should be 'USING age::integer'.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-06T19:25:45+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-04-06T19:25:48+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">11</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">3</attachments-count>
      <body>To make the unit test pass, attached is a simple patch based on John Whitley's suggestion of &quot;USING CAST&quot; which was introduced in 8.0.  This was needed because 8.x seems to complain about implicit type casts.  Unfortunately, I don't have a pre-8.0 database to verify this patch works for it.</body>
      <body-html>&lt;div&gt;&lt;p&gt;To make the unit test pass, attached is a simple patch based on
John Whitley's suggestion of &quot;USING CAST&quot; which was introduced in
8.0. This was needed because 8.x seems to complain about implicit
type casts. Unfortunately, I don't have a pre-8.0 database to
verify this patch works for it.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-06T19:27:03+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-04-06T19:27:05+01:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">12</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>The patch looks good, only thing I'm unsure about is if the casting should be enabled for postgresql versions older than 8.3 as those really don't have a problem with implicit casts.</body>
      <body-html>&lt;div&gt;&lt;p&gt;The patch looks good, only thing I'm unsure about is if the
casting should be enabled for postgresql versions older than 8.3 as
those really don't have a problem with implicit casts.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-06T19:37:39+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-04-06T19:37:42+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">13</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Good point... maybe others know when exactly Postgres started complaining about implicit type conversions.  Currently, I'm adding the USING CAST for 8.0 and higher since this link indicates this syntax was added in 8.0:

http://www.postgresonline.com/journal/index.php?/archives/29-How-to-convert-a-table-column-to-another-data-type.html

Feel free to error on the side of caution and use 8.3 since I can verify it certainly complains if there is no explicit type conversion for the source and destination types.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Good point... maybe others know when exactly Postgres started
complaining about implicit type conversions. Currently, I'm adding
the USING CAST for 8.0 and higher since this link indicates this
syntax was added in 8.0:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.postgresonline.com/journal/index.php&quot;&gt;http://www.postgresonline.com/jo...&lt;/a&gt;?/archives/29-How-to-convert-a-table-column-to-another-data-type.html&lt;/p&gt;
&lt;p&gt;Feel free to error on the side of caution and use 8.3 since I
can verify it certainly complains if there is no explicit type
conversion for the source and destination types.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2009-04-06T20:06:12+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>incomplete</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-04-06T20:06:17+01:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">14</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Implicit casts were first removed in 8.3, theoretically there are a few more issues in Rails due to this. You no longer can compare a  text column with an integer value, though you can compare a integer column with a text value, so thankfully it's only the less common case that no longer works (basically you can't do &quot;User.find_by_first_name(1)&quot; and there is no activerecord-level solution either as conditions can be built in many ways and in many cases the column type information may not be readily available).</body>
      <body-html>&lt;div&gt;&lt;p&gt;Implicit casts were first removed in 8.3, theoretically there
are a few more issues in Rails due to this. You no longer can
compare a text column with an integer value, though you can compare
a integer column with a text value, so thankfully it's only the
less common case that no longer works (basically you can't do
&quot;User.find_by_first_name(1)&quot; and there is no activerecord-level
solution either as conditions can be built in many ways and in many
cases the column type information may not be readily
available).&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-06T20:21:23+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- 
:state: incomplete
</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-04-06T20:21:27+01:00</updated-at>
      <user-id type="integer">14890</user-id>
      <version type="integer">15</version>
      <user-name>Tarmo T&#228;nav</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">4</attachments-count>
      <body>Submitting a &quot;using_cast_bug.diff&quot; typo fix on top of prior patch.  In addition, I ran into a PG 8.2.6 that complained about implicit type casts so I am using USING CAST for 80206 and above.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Submitting a &quot;using_cast_bug.diff&quot; typo fix on top of prior
patch. In addition, I ran into a PG 8.2.6 that complained about
implicit type casts so I am using USING CAST for 80206 and
above.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-04-24T21:23:38+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-04-24T21:23:43+01:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">16</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>I've ran in to a bug where my schema states:

t.text     &quot;description&quot;, :limit =&gt; 255

When trying to use the schema on a PG 8.3 database, I get:

PGError: ERROR:  type modifier is not allowed for type &quot;text&quot;

The limit comes from the fact that this column used to be of type string.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I've ran in to a bug where my schema states:&lt;/p&gt;
&lt;p&gt;t.text &quot;description&quot;, :limit =&amp;gt; 255&lt;/p&gt;
&lt;p&gt;When trying to use the schema on a PG 8.3 database, I get:&lt;/p&gt;
&lt;p&gt;PGError: ERROR: type modifier is not allowed for type &quot;text&quot;&lt;/p&gt;
&lt;p&gt;The limit comes from the fact that this column used to be of
type string.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-12-29T23:48:44+00:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2009-12-29T23:48:49+00:00</updated-at>
      <user-id type="integer">71852</user-id>
      <version type="integer">17</version>
      <user-name>felipekk</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Is there anything else needed for this ticket?  The supplied patch with the follow-on patch seem to fix this for me.  I'm hoping to get this moved upstream to avoid monkey patching my local version.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Is there anything else needed for this ticket? The supplied
patch with the follow-on patch seem to fix this for me. I'm hoping
to get this moved upstream to avoid monkey patching my local
version.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-01-27T16:24:39+00:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">9903</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2010-01-27T16:24:41+00:00</updated-at>
      <user-id type="integer">38760</user-id>
      <version type="integer">18</version>
      <user-name>Joe Rafaniello</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>2.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>[[bulk edit](/projects/8994/bulk_edits/19097)]</body>
      <body-html>&lt;div&gt;&lt;p&gt;[&lt;a href=&quot;/projects/8994/bulk_edits/19097&quot;&gt;bulk edit&lt;/a&gt;]&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-05-04T18:48:34+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- 
:milestone: 9903
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2010-05-04T18:48:34+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">19</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>Why this ticket is still not resolved. It was posted 2 years ago (!) and have working patch.

As a Postgres user I've run into this issue few times in serveral projects :(</body>
      <body-html>&lt;div&gt;&lt;p&gt;Why this ticket is still not resolved. It was posted 2 years ago
(!) and have working patch.&lt;/p&gt;
&lt;p&gt;As a Postgres user I've run into this issue few times in
serveral projects :(&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-17T09:46:53+00:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">468</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2010-11-17T09:46:58+00:00</updated-at>
      <user-id type="integer">21342</user-id>
      <version type="integer">20</version>
      <user-name>&#321;ukasz Strza&#322;kowski</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>It would be great if you could apply this patch.  I ran into this today.

Any chance you can do the changeon the 2.3 branch as well?</body>
      <body-html>&lt;div&gt;&lt;p&gt;It would be great if you could apply this patch. I ran into this
today.&lt;/p&gt;
&lt;p&gt;Any chance you can do the changeon the 2.3 branch as well?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-11-20T23:30:48+00:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">468</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2010-11-20T23:30:52+00:00</updated-at>
      <user-id type="integer">31929</user-id>
      <version type="integer">21</version>
      <user-name>Uwe Kubosch</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>+1, apply this patch.</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1, apply this patch.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-01T01:44:44+00:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">468</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2010-12-01T01:45:02+00:00</updated-at>
      <user-id type="integer">65714</user-id>
      <version type="integer">22</version>
      <user-name>Harold Gim&#233;nez</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>&lt;a href=&quot;http://www.mp4converter.jp/dvd-creator-mac.html&quot;&gt;DVD&#20316;&#25104;Mac &lt;/a&gt;
&lt;a href=&quot;http://www.mp4converter.jp/dvd-ripper-mac.html&quot;&gt;DVD&#12522;&#12483;&#12500;&#12531;&#12464;Mac&lt;/a&gt;
&lt;a href=&quot;http://www.mp4converter.jp/dvd-copy-mac.html&quot;&gt; DVD&#12467;&#12500;&#12540;Mac &lt;/a&gt;
&lt;a href=&quot;http://www.mp4converter.jp/avi-to-dvd-converter-mac.html&quot;&gt;AVI DVD&#22793;&#25563; Mac&lt;/a&gt;
&lt;a href=&quot;http://www.mp4converter.jp/video-to-dvd-converter-mac.html&quot;&gt;&#21205;&#30011; DVD&#22793;&#25563; Mac &lt;/a&gt;
&lt;a href=&quot;http://www.mp4converter.jp/dvd-audio-ripper-mac.html&quot;&gt;DVD&#38899;&#22768;&#12522;&#12483;&#12500;&#12531;&#12464; Mac&lt;/a&gt;</body>
      <body-html>&lt;div&gt;&lt;p&gt;&lt;a href=
&quot;http://www.mp4converter.jp/dvd-creator-mac.html&quot;&gt;DVD&amp;#20316;&amp;#25104;Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.mp4converter.jp/dvd-ripper-mac.html&quot;&gt;DVD&amp;#12522;&amp;#12483;&amp;#12500;&amp;#12531;&amp;#12464;Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.mp4converter.jp/dvd-copy-mac.html&quot;&gt;DVD&amp;#12467;&amp;#12500;&amp;#12540;Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.mp4converter.jp/avi-to-dvd-converter-mac.html&quot;&gt;AVI
DVD&amp;#22793;&amp;#25563; Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.mp4converter.jp/video-to-dvd-converter-mac.html&quot;&gt;&amp;#21205;&amp;#30011;
DVD&amp;#22793;&amp;#25563; Mac&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://www.mp4converter.jp/dvd-audio-ripper-mac.html&quot;&gt;DVD&amp;#38899;&amp;#22768;&amp;#12522;&amp;#12483;&amp;#12500;&amp;#12531;&amp;#12464;
Mac&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-12-06T06:29:13+00:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">468</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2011-01-13T06:52:10+00:00</updated-at>
      <user-id type="integer">127909</user-id>
      <version type="integer">23</version>
      <user-name>xiangxiang</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-04-14T01:00:18+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">468</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2011-04-14T01:01:47+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">24</version>
      <user-name>rails</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">14890</assigned-user-id>
      <attachments-count type="integer">5</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-04-14T01:00:18+01:00</created-at>
      <creator-id type="integer">31847</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer">71472</milestone-id>
      <number type="integer">1036</number>
      <permalink>activerecord-211-breaks-formerly-legit-postgres-migrations</permalink>
      <priority type="integer">468</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>activerecord postgresql</tag>
      <title>[Patch] ActiveRecord 2.1.1 breaks formerly legit postgres migrations</title>
      <updated-at type="datetime">2011-04-14T01:00:46+01:00</updated-at>
      <user-id type="integer">136779</user-id>
      <version type="integer">25</version>
      <user-name>rails</user-name>
      <creator-name>John Whitley</creator-name>
      <assigned-user-name>Tarmo T&#228;nav</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/1036</url>
      <milestone-title>3.x</milestone-title>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>faa468a9818b4b26bace9fe67e35518400ee1563</code>
      <content-type>application/octet-stream</content-type>
      <created-at type="datetime">2009-04-03T17:32:07+01:00</created-at>
      <filename>tests.log</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">107804</id>
      <size type="integer">400418</size>
      <uploader-id type="integer">38760</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/107804/tests.log</url>
    </attachment>
    <attachment type="Attachment">
      <code>5700c6708bd0a150efd0002d98ec3f29908d5547</code>
      <content-type>application/octet-stream</content-type>
      <created-at type="datetime">2009-04-03T17:33:27+01:00</created-at>
      <filename>migration_test.rb</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">107807</id>
      <size type="integer">58645</size>
      <uploader-id type="integer">38760</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/107807/migration_test.rb</url>
    </attachment>
    <attachment type="Attachment">
      <code>24e668d57dc643422007cc45e7e8f4888c0e9abd</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-06T19:16:19+01:00</created-at>
      <filename>0001-Added-test-case-showing-change_column-from-string-t.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">108491</id>
      <size type="integer">1603</size>
      <uploader-id type="integer">38760</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/108491/0001-Added-test-case-showing-change_column-from-string-t.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>b6c9ee722a4b290b23863955eabd642d493f42f8</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-06T19:27:03+01:00</created-at>
      <filename>0004-Adapt-change_column-to-use-USING-CAST-syntax-for-Pos.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">108503</id>
      <size type="integer">1922</size>
      <uploader-id type="integer">38760</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/108503/0004-Adapt-change_column-to-use-USING-CAST-syntax-for-Pos.diff</url>
    </attachment>
    <attachment type="Attachment">
      <code>f9e442dfc3a2f56dffaefb267f73f56b4d19df26</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2009-04-24T21:23:38+01:00</created-at>
      <filename>using_cast_bug.diff</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">115166</id>
      <size type="integer">2712</size>
      <uploader-id type="integer">38760</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/115166/using_cast_bug.diff</url>
    </attachment>
  </attachments>
</ticket>
