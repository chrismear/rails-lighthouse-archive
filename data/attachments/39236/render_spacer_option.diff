From 55d9da74f6db98383a82657903bc63659a45d03a Mon Sep 17 00:00:00 2001
From: Ryan Bates <ryan@railscasts.com>
Date: Thu, 14 Aug 2008 08:51:31 -0700
Subject: [PATCH] adding :spacer option to 'render' method which uses the given string as the divider instead of a separate partial

---
 actionpack/lib/action_controller/base.rb      |    5 ++++-
 actionpack/lib/action_view/base.rb            |    2 +-
 actionpack/lib/action_view/partials.rb        |    6 +++---
 actionpack/test/controller/new_render_test.rb |   15 ++++++++++++---
 4 files changed, 20 insertions(+), 8 deletions(-)

diff --git a/actionpack/lib/action_controller/base.rb b/actionpack/lib/action_controller/base.rb
index 0fdbcbd..a5f2d70 100644
--- a/actionpack/lib/action_controller/base.rb
+++ b/actionpack/lib/action_controller/base.rb
@@ -734,6 +734,9 @@ module ActionController #:nodoc:
       #   # Renders a collection of partials but with a custom local variable name
       #   render :partial => "admin_person", :collection => @winners, :as => :person
       #
+      #   # Renders the same collection of partials with "<hr />" between each partial
+      #   render :partial => "person", :collection => @winners, :spacer => "<hr />"
+      #
       #   # Renders the same collection of partials, but also renders the
       #   # person_divider partial between each person partial.
       #   render :partial => "person", :collection => @winners, :spacer_template => "person_divider"
@@ -921,7 +924,7 @@ module ActionController #:nodoc:
             if collection = options[:collection]
               render_for_text(
                 @template.send!(:render_partial_collection, partial, collection,
-                options[:spacer_template], options[:locals], options[:as]), options[:status]
+                options[:spacer_template], options[:locals], options[:as], options[:spacer]), options[:status]
               )
             else
               render_for_text(
diff --git a/actionpack/lib/action_view/base.rb b/actionpack/lib/action_view/base.rb
index ad59d92..559c365 100644
--- a/actionpack/lib/action_view/base.rb
+++ b/actionpack/lib/action_view/base.rb
@@ -257,7 +257,7 @@ module ActionView #:nodoc:
         elsif options[:file]
           render_file(options[:file], nil, options[:locals])
         elsif options[:partial] && options[:collection]
-          render_partial_collection(options[:partial], options[:collection], options[:spacer_template], options[:locals], options[:as])
+          render_partial_collection(options[:partial], options[:collection], options[:spacer_template], options[:locals], options[:as], options[:spacer])
         elsif options[:partial]
           render_partial(options[:partial], options[:object], options[:locals])
         elsif options[:inline]
diff --git a/actionpack/lib/action_view/partials.rb b/actionpack/lib/action_view/partials.rb
index eb74d4a..2c10290 100644
--- a/actionpack/lib/action_view/partials.rb
+++ b/actionpack/lib/action_view/partials.rb
@@ -117,7 +117,7 @@ module ActionView
         when Array, ActiveRecord::Associations::AssociationCollection, ActiveRecord::NamedScope::Scope
           if partial_path.any?
             collection = partial_path
-            render_partial_collection(nil, collection, nil, local_assigns)
+            render_partial_collection(nil, collection, nil, local_assigns, nil)
           else
             ""
           end
@@ -126,11 +126,11 @@ module ActionView
         end
       end
 
-      def render_partial_collection(partial_path, collection, partial_spacer_template = nil, local_assigns = {}, as = nil) #:nodoc:
+      def render_partial_collection(partial_path, collection, partial_spacer_template = nil, local_assigns = {}, as = nil, spacer_string = nil) #:nodoc:
         return " " if collection.empty?
 
         local_assigns = local_assigns ? local_assigns.clone : {}
-        spacer = partial_spacer_template ? render(:partial => partial_spacer_template) : ''
+        spacer = partial_spacer_template ? render(:partial => partial_spacer_template) : spacer_string
 
         index = 0
         collection.map do |object|
diff --git a/actionpack/test/controller/new_render_test.rb b/actionpack/test/controller/new_render_test.rb
index be99350..69d7238 100644
--- a/actionpack/test/controller/new_render_test.rb
+++ b/actionpack/test/controller/new_render_test.rb
@@ -160,10 +160,14 @@ class NewRenderTestController < ActionController::Base
     render :partial => "customer_with_var", :collection => [ Customer.new("david"), Customer.new("mary") ], :as => :customer
   end
 
-  def partial_collection_with_spacer
+  def partial_collection_with_spacer_template
     render :partial => "customer", :spacer_template => "partial_only", :collection => [ Customer.new("david"), Customer.new("mary") ]
   end
 
+  def partial_collection_with_spacer_string
+    render :partial => "customer", :spacer => ", ", :collection => [ Customer.new("david"), Customer.new("mary") ]
+  end
+
   def partial_collection_with_counter
     render :partial => "customer_counter", :collection => [ Customer.new("david"), Customer.new("mary") ]
   end
@@ -792,11 +796,16 @@ EOS
     assert_equal "Bonjour: davidBonjour: mary", @response.body
   end
 
-  def test_partial_collection_with_spacer
-    get :partial_collection_with_spacer
+  def test_partial_collection_with_spacer_template
+    get :partial_collection_with_spacer_template
     assert_equal "Hello: davidonly partialHello: mary", @response.body
   end
 
+  def test_partial_collection_with_spacer_string
+    get :partial_collection_with_spacer_string
+    assert_equal "Hello: david, Hello: mary", @response.body
+  end
+
   def test_partial_collection_shorthand_with_locals
     get :partial_collection_shorthand_with_locals
     assert_equal "Bonjour: davidBonjour: mary", @response.body
-- 
1.5.6.4

