<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2009-09-26T17:41:16+01:00</created-at>
  <creator-id type="integer">71122</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">3263</number>
  <permalink>failing-functional-test-of-a-named-route</permalink>
  <priority type="integer">153807</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>invalid</state>
  <tag>bugmash functional routing test</tag>
  <title>Failing functional test of a named route</title>
  <updated-at type="datetime">2010-01-25T13:51:17+00:00</updated-at>
  <user-id type="integer">25293</user-id>
  <version type="integer">14</version>
  <user-name>Prem Sichanugrist (sikachu)</user-name>
  <creator-name>Giuseppe Bertini</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
  <priority-name nil="true"></priority-name>
  <original-body>Given the following named route:

@@@ ruby
map.accept_invitation '/accept_invitation/:id', :controller =&gt; &quot;invitations&quot;, :action =&gt; &quot;accept&quot;, :method =&gt; &quot;get&quot;
@@@

and the following controller:

@@@ ruby
class InvitationsController &lt; ApplicationController
  def accept
  end
end
@@@

This test will fail:

@@@ ruby
class InvitationsControllerTest &lt; ActionController::TestCase
  test &quot;the post accept invitation should be successful&quot; do
    get :accept, :id =&gt; &quot;1&quot;
    assert_response :success
  end
end
@@@

...with the following error:

    ActionController::RoutingError: No route matches
    {:controller=&gt;&quot;invitations&quot;, :action=&gt;&quot;accept&quot;, :id=&gt;&quot;1&quot;} 

while the app does not complain upon receiving the request:

    http://localhost:3000/accept_invitation/3


I have posted a dummy app to reproduce the problem at

    git://github.com/giuseb/spec_named_route.git

--Giuseppe</original-body>
  <latest-body>Given the following named route:

@@@ ruby
map.accept_invitation '/accept_invitation/:id', :controller =&gt; &quot;invitations&quot;, :action =&gt; &quot;accept&quot;, :method =&gt; &quot;get&quot;
@@@

and the following controller:

@@@ ruby
class InvitationsController &lt; ApplicationController
  def accept
  end
end
@@@

This test will fail:

@@@ ruby
class InvitationsControllerTest &lt; ActionController::TestCase
  test &quot;the post accept invitation should be successful&quot; do
    get :accept, :id =&gt; &quot;1&quot;
    assert_response :success
  end
end
@@@

...with the following error:

    ActionController::RoutingError: No route matches
    {:controller=&gt;&quot;invitations&quot;, :action=&gt;&quot;accept&quot;, :id=&gt;&quot;1&quot;} 

while the app does not complain upon receiving the request:

    http://localhost:3000/accept_invitation/3


I have posted a dummy app to reproduce the problem at

    git://github.com/giuseb/spec_named_route.git

--Giuseppe</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;Given the following named route:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;map.accept_invitation '/accept_invitation/:id', :controller =&amp;gt; &quot;invitations&quot;, :action =&amp;gt; &quot;accept&quot;, :method =&amp;gt; &quot;get&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and the following controller:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class InvitationsController &amp;lt; ApplicationController
  def accept
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This test will fail:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class InvitationsControllerTest &amp;lt; ActionController::TestCase
  test &quot;the post accept invitation should be successful&quot; do
    get :accept, :id =&amp;gt; &quot;1&quot;
    assert_response :success
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...with the following error:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActionController::RoutingError: No route matches
{:controller=&amp;gt;&quot;invitations&quot;, :action=&amp;gt;&quot;accept&quot;, :id=&amp;gt;&quot;1&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;while the app does not complain upon receiving the request:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;http://localhost:3000/accept_invitation/3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have posted a dummy app to reproduce the problem at&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;git://github.com/giuseb/spec_named_route.git&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;--Giuseppe&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Given the following named route:

@@@ ruby
map.accept_invitation '/accept_invitation/:id', :controller =&gt; &quot;invitations&quot;, :action =&gt; &quot;accept&quot;, :method =&gt; &quot;get&quot;
@@@

and the following controller:

@@@ ruby
class InvitationsController &lt; ApplicationController
  def accept
  end
end
@@@

This test will fail:

@@@ ruby
class InvitationsControllerTest &lt; ActionController::TestCase
  test &quot;the post accept invitation should be successful&quot; do
    get :accept, :id =&gt; &quot;1&quot;
    assert_response :success
  end
end
@@@

...with the following error:

    ActionController::RoutingError: No route matches
    {:controller=&gt;&quot;invitations&quot;, :action=&gt;&quot;accept&quot;, :id=&gt;&quot;1&quot;} 

while the app does not complain upon receiving the request:

    http://localhost:3000/accept_invitation/3


I have posted a dummy app to reproduce the problem at

    git://github.com/giuseb/spec_named_route.git

--Giuseppe</body>
      <body-html>&lt;div&gt;&lt;p&gt;Given the following named route:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;map.accept_invitation '/accept_invitation/:id', :controller =&amp;gt; &quot;invitations&quot;, :action =&amp;gt; &quot;accept&quot;, :method =&amp;gt; &quot;get&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and the following controller:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class InvitationsController &amp;lt; ApplicationController
  def accept
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This test will fail:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;class InvitationsControllerTest &amp;lt; ActionController::TestCase
  test &quot;the post accept invitation should be successful&quot; do
    get :accept, :id =&amp;gt; &quot;1&quot;
    assert_response :success
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;...with the following error:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ActionController::RoutingError: No route matches
{:controller=&amp;gt;&quot;invitations&quot;, :action=&amp;gt;&quot;accept&quot;, :id=&amp;gt;&quot;1&quot;}&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;while the app does not complain upon receiving the request:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;http://localhost:3000/accept_invitation/3&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I have posted a dummy app to reproduce the problem at&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;git://github.com/giuseb/spec_named_route.git&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;--Giuseppe&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-26T17:41:16+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-26T17:41:19+01:00</updated-at>
      <user-id type="integer">71122</user-id>
      <version type="integer">1</version>
      <user-name>Giuseppe Bertini</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Giuseppe, can you please specify the rails version you're on?

Seems to work for me on 2.3.3:

@@@
ts &gt; rails -v
Rails 2.3.3

ts &gt; cat config/routes.rb 
ActionController::Routing::Routes.draw do |map|
  map.accept_invitation '/accept_invitation/:id', :controller =&gt; &quot;invitations&quot;, :action =&gt; &quot;accept&quot;, :method =&gt; &quot;get&quot;
  map.connect ':controller/:action/:id'
end

ts &gt; cat app/controllers/invitations_controller.rb 
class InvitationsController &lt; ApplicationController
  def accept; end
end

ts &gt; cat test/functional/invitations_controller_test.rb 
require 'test_helper'

class InvitationsControllerTest &lt; ActionController::TestCase
  test &quot;the post accept invitation should be successful&quot; do
    get :accept, :id =&gt; &quot;1&quot;
    assert_response :success
  end
end

ts &gt; ruby -Itest test/functional/invitations_controller_test.rb 
Loaded suite test/functional/invitations_controller_test
Started
.
Finished in 0.082477 seconds.

1 tests, 1 assertions, 0 failures, 0 errors
@@@</body>
      <body-html>&lt;div&gt;&lt;p&gt;Giuseppe, can you please specify the rails version you're
on?&lt;/p&gt;
&lt;p&gt;Seems to work for me on 2.3.3:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ts &amp;gt; rails -v
Rails 2.3.3

ts &amp;gt; cat config/routes.rb 
ActionController::Routing::Routes.draw do |map|
  map.accept_invitation '/accept_invitation/:id', :controller =&amp;gt; &quot;invitations&quot;, :action =&amp;gt; &quot;accept&quot;, :method =&amp;gt; &quot;get&quot;
  map.connect ':controller/:action/:id'
end

ts &amp;gt; cat app/controllers/invitations_controller.rb 
class InvitationsController &amp;lt; ApplicationController
  def accept; end
end

ts &amp;gt; cat test/functional/invitations_controller_test.rb 
require 'test_helper'

class InvitationsControllerTest &amp;lt; ActionController::TestCase
  test &quot;the post accept invitation should be successful&quot; do
    get :accept, :id =&amp;gt; &quot;1&quot;
    assert_response :success
  end
end

ts &amp;gt; ruby -Itest test/functional/invitations_controller_test.rb 
Loaded suite test/functional/invitations_controller_test
Started
.
Finished in 0.082477 seconds.

1 tests, 1 assertions, 0 failures, 0 errors&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-26T19:57:30+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-26T19:57:35+01:00</updated-at>
      <user-id type="integer">71121</user-id>
      <version type="integer">2</version>
      <user-name>sr.iniv.t</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hi, I am on rails 2.3.4.

I believe that the reason your test passes is that, after the named route in question, you have the catch-all route (:controller/:action/:id). What happens if you remove the latter?

Cheers,
Giuseppe</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hi, I am on rails 2.3.4.&lt;/p&gt;
&lt;p&gt;I believe that the reason your test passes is that, after the
named route in question, you have the catch-all route
(:controller/:action/:id). What happens if you remove the
latter?&lt;/p&gt;
&lt;p&gt;Cheers,&lt;br&gt;
Giuseppe&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-26T22:24:23+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-26T22:24:26+01:00</updated-at>
      <user-id type="integer">71122</user-id>
      <version type="integer">3</version>
      <user-name>Giuseppe Bertini</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T11:30:14+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- 
:tag: functional routing test
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-27T11:30:19+01:00</updated-at>
      <user-id type="integer">7211</user-id>
      <version type="integer">4</version>
      <user-name>CancelProfileIsBroken</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>verified, when removing the default routes this error does indeed occur.

It's noteworthy that removing :method =&gt; 'get' from the route eliminates the problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;verified, when removing the default routes this error does
indeed occur.&lt;/p&gt;
&lt;p&gt;It's noteworthy that removing :method =&amp;gt; 'get' from the route
eliminates the problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T16:13:50+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-27T16:13:54+01:00</updated-at>
      <user-id type="integer">24346</user-id>
      <version type="integer">5</version>
      <user-name>John Trupiano</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>+1 verified.

it might have something to do with the use of `accept` as a method name? maybe `get :accept` is confusing for some reason...</body>
      <body-html>&lt;div&gt;&lt;p&gt;+1 verified.&lt;/p&gt;
&lt;p&gt;it might have something to do with the use of
&lt;code&gt;accept&lt;/code&gt; as a method name? maybe &lt;code&gt;get
:accept&lt;/code&gt; is confusing for some reason...&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T20:10:41+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-27T20:10:42+01:00</updated-at>
      <user-id type="integer">36381</user-id>
      <version type="integer">6</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>No it's not.... i tried a different action name and it still failed... possibly this has something to do with the catch-all route that may be required.</body>
      <body-html>&lt;div&gt;&lt;p&gt;No it's not.... i tried a different action name and it still
failed... possibly this has something to do with the catch-all
route that may be required.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T20:19:27+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-27T20:19:29+01:00</updated-at>
      <user-id type="integer">36381</user-id>
      <version type="integer">7</version>
      <user-name>Elad Meidar</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Does the view `app/views/invitations/accept.html.erb` exist? Your empty definition of `accept` implicitly renders this view (or the more general `app/views/inivitations/accept.erb`). If that doesn't exist, you'll get a 404.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Does the view &lt;code&gt;app/views/invitations/accept.html.erb&lt;/code&gt;
exist? Your empty definition of &lt;code&gt;accept&lt;/code&gt; implicitly
renders this view (or the more general
&lt;code&gt;app/views/inivitations/accept.erb&lt;/code&gt;). If that doesn't
exist, you'll get a 404.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T22:41:03+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-27T22:41:07+01:00</updated-at>
      <user-id type="integer">15704</user-id>
      <version type="integer">8</version>
      <user-name>Gaius Centus Novus</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Also, you don't mean `:method =&gt; :get`, you mean `:conditions =&gt; { :method =&gt; :get }`.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Also, you don't mean &lt;code&gt;:method =&amp;gt; :get&lt;/code&gt;, you mean
&lt;code&gt;:conditions =&amp;gt; { :method =&amp;gt; :get }&lt;/code&gt;.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-27T22:42:26+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-27T22:42:31+01:00</updated-at>
      <user-id type="integer">15704</user-id>
      <version type="integer">9</version>
      <user-name>Gaius Centus Novus</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I verified the behavior you described on 2-3-stable, but I'm not sure this is a bug.
I agree with Gaius, correct syntax is :conditions =&gt; {:method =&gt; :get}, not just :method =&gt; 'get'</body>
      <body-html>&lt;div&gt;&lt;p&gt;I verified the behavior you described on 2-3-stable, but I'm not
sure this is a bug.&lt;br&gt;
I agree with Gaius, correct syntax is :conditions =&amp;gt; {:method
=&amp;gt; :get}, not just :method =&amp;gt; 'get'&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-28T05:13:24+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-28T05:13:28+01:00</updated-at>
      <user-id type="integer">56830</user-id>
      <version type="integer">10</version>
      <user-name>Mat&#237;as Flores</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Suppose you have the following two named routes (along with controller actions and .erb templates):

@@@ ruby
ActionController::Routing::Routes.draw do |map|
  map.accept_invitation '/accept_invitation/:id', :controller =&gt; &quot;invitations&quot;, :action =&gt; &quot;accept&quot;, :conditions =&gt; {:method =&gt; &quot;get&quot;}
  map.view_invitation '/view_invitation/:id',   :controller =&gt; &quot;invitations&quot;, :action =&gt; &quot;view&quot;,   :method =&gt; &quot;get&quot;
end
@@@

and the following two test:

@@@ ruby
test &quot;the get accept invitation should be successful&quot; do
  get :accept, :id =&gt; &quot;1&quot;
  assert_response :success
end
test &quot;the get view invitation should be successful&quot; do
  get :view, :id =&gt; &quot;1&quot;
  assert_response :success
end
@@@

The first passes, while the second returns an error, seemingly supporting Gaius and Mat&#237;as.
However, if you stick the following 2 URLs in your browser:

http://localhost:3000/accept_invitation/1
http://localhost:3000/view_invitation/1

...then the FORMER request fails, while the latter succeeds.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Suppose you have the following two named routes (along with
controller actions and .erb templates):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;ActionController::Routing::Routes.draw do |map|
  map.accept_invitation '/accept_invitation/:id', :controller =&amp;gt; &quot;invitations&quot;, :action =&amp;gt; &quot;accept&quot;, :conditions =&amp;gt; {:method =&amp;gt; &quot;get&quot;}
  map.view_invitation '/view_invitation/:id',   :controller =&amp;gt; &quot;invitations&quot;, :action =&amp;gt; &quot;view&quot;,   :method =&amp;gt; &quot;get&quot;
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and the following two test:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=
&quot;ruby&quot;&gt;test &quot;the get accept invitation should be successful&quot; do
  get :accept, :id =&amp;gt; &quot;1&quot;
  assert_response :success
end
test &quot;the get view invitation should be successful&quot; do
  get :view, :id =&amp;gt; &quot;1&quot;
  assert_response :success
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The first passes, while the second returns an error, seemingly
supporting Gaius and Mat&amp;iacute;as.&lt;br&gt;
However, if you stick the following 2 URLs in your browser:&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://localhost:3000/accept_invitation/1&quot;&gt;http://localhost:3000/accept_invitation/1&lt;/a&gt;&lt;br&gt;
&lt;a href=
&quot;http://localhost:3000/view_invitation/1&quot;&gt;http://localhost:3000/view_invitation/1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;...then the FORMER request fails, while the latter succeeds.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-28T06:28:17+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-28T06:33:00+01:00</updated-at>
      <user-id type="integer">71122</user-id>
      <version type="integer">11</version>
      <user-name>Giuseppe Bertini</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Which leads to the following proposal.

- The testing framework simply enforces the proper `:conditions =&gt; {:method =&gt; :get}` syntax, so there's no problem there.
- It's really the routing that behaves funny.

Reasonable?</body>
      <body-html>&lt;div&gt;&lt;p&gt;Which leads to the following proposal.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The testing framework simply enforces the proper
&lt;code&gt;:conditions =&amp;gt; {:method =&amp;gt; :get}&lt;/code&gt; syntax, so
there's no problem there.&lt;/li&gt;
&lt;li&gt;It's really the routing that behaves funny.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reasonable?&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-09-28T08:24:14+01:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-09-28T08:24:17+01:00</updated-at>
      <user-id type="integer">71122</user-id>
      <version type="integer">12</version>
      <user-name>Giuseppe Bertini</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have run into the same problem with restful routes. Something as simple as the following will fail in testing.

@@@ ruby
routes.rb
map.resources :products

products_controller_test.rb
test &quot;should get index&quot; do
  get :index
  assert_response :success
end

Whatever format the testing framework requires you would think that the generated routes will be correct. This must be a bug, surely resource routes are meant to be testable in functional tests.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have run into the same problem with restful routes. Something
as simple as the following will fail in testing.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;ruby&quot;&gt;routes.rb
map.resources :products

products_controller_test.rb
test &quot;should get index&quot; do
  get :index
  assert_response :success
end

Whatever format the testing framework requires you would think that the generated routes will be correct. This must be a bug, surely resource routes are meant to be testable in functional tests.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2009-10-27T18:21:34+00:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>bugmash functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2009-10-27T18:21:39+00:00</updated-at>
      <user-id type="integer">74604</user-id>
      <version type="integer">13</version>
      <user-name>Pablo Calderon</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>1. If you put `:method =&gt; &quot;get&quot;` in your route, and not `:conditions =&gt; {:method =&gt; :get}`, you just made typos there

- You should specify `:method` as symbol
- If you don't put it in `:conditions`, path will be recognized as `:requirement =&gt; {:method =&gt; &quot;get}`. So no way the test will pass.

However, somehow the `:method` will be included in the `params[]` when you request via browser. So in the post number 12 you will be able to visit `view_invitation_path`.

I don't think this is really a problem. You just need to use `:conditions =&gt; {:method =&gt; :get}`, and your problem will go away</body>
      <body-html>&lt;div&gt;&lt;ol&gt;
&lt;li&gt;If you put &lt;code&gt;:method =&amp;gt; &quot;get&quot;&lt;/code&gt; in your route, and
not &lt;code&gt;:conditions =&amp;gt; {:method =&amp;gt; :get}&lt;/code&gt;, you just
made typos there&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;You should specify &lt;code&gt;:method&lt;/code&gt; as symbol&lt;/li&gt;
&lt;li&gt;If you don't put it in &lt;code&gt;:conditions&lt;/code&gt;, path will be
recognized as &lt;code&gt;:requirement =&amp;gt; {:method =&amp;gt; &quot;get}&lt;/code&gt;.
So no way the test will pass.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, somehow the &lt;code&gt;:method&lt;/code&gt; will be included in
the &lt;code&gt;params[]&lt;/code&gt; when you request via browser. So in the
post number 12 you will be able to visit
&lt;code&gt;view_invitation_path&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I don't think this is really a problem. You just need to use
&lt;code&gt;:conditions =&amp;gt; {:method =&amp;gt; :get}&lt;/code&gt;, and your
problem will go away&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-01-25T13:51:15+00:00</created-at>
      <creator-id type="integer">71122</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">3263</number>
      <permalink>failing-functional-test-of-a-named-route</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>invalid</state>
      <tag>bugmash functional routing test</tag>
      <title>Failing functional test of a named route</title>
      <updated-at type="datetime">2010-01-25T13:51:17+00:00</updated-at>
      <user-id type="integer">25293</user-id>
      <version type="integer">14</version>
      <user-name>Prem Sichanugrist (sikachu)</user-name>
      <creator-name>Giuseppe Bertini</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/3263</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
