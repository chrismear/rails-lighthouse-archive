<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">false</closed>
  <created-at type="datetime">2011-05-01T02:42:32+01:00</created-at>
  <creator-id type="integer">24170</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">6760</number>
  <permalink>very-obscure-issue-with-ctrl-c-in-console-not-workng-and-periodic-freezes</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>new</state>
  <tag>backticks dependencies natty rails3 reload! ruby1.9 threadsafety</tag>
  <title>Very obscure issue with Ctrl + C in console not workng and periodic freezes</title>
  <updated-at type="datetime">2011-05-04T17:48:58+01:00</updated-at>
  <user-id type="integer">30647</user-id>
  <version type="integer">3</version>
  <user-name>Daniel Choi</user-name>
  <creator-name>VirtualFunction</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/6760</url>
  <priority-name nil="true"></priority-name>
  <original-body>There's a good chance this is a Ruby bug with the way it deals with process management, but I'm posting it here because Rails is the only place it affects me. Now I know the issue, I can work round it, but it's something caused me a hell of a lot of frustration trying to track this down.

I had issues with Ctrl + C not working in &quot;rails console&quot; (it wasn't working), and occasionally I found &quot;reload!&quot; and some methods freezing up Ruby. (I had to use kill -9 to terminate things, a normal 'kill' didn't work. I went down alsorts of paths looking at gems, etc. After several hours I realised the issue went away if I booted into Maverick's kernel (2.6.35) instead the natty kernel (2.6.38). After more fiddling I also found that changing my database.yml also got round the issue. It turns out the call to `hostname` in some ERB in my database.yml was the cause after 3-4 hours of hair pulling!

I'm running Ruby trunk, Rails 3.0.7, and Ubuntu Natty.

To replicate the issue:

On natty and Rails 3.x, create a new project 'rails new tester'. Edit config/database.yml and put `echo` in config/application.rb, then run &quot;rails console&quot;. Try and press Ctrl + C once loaded, it probably won't do anything. Loading irb normally and pressing Ctrl + C will work fine.

While the loack of Ctrl + C is merely an annoyance, I find that if you use backticks in code that runs after &quot;reload!&quot; is called, or use backticks a lot in general, the console seems to lock up very randomly and that kill -9 is needed. This doesn't happen if I revert back to Maverick kernel, 2.6.35.

As a result, I guess this is a corner case shell-spawning/process/threading issue in Ruby itself, and not Rails. However I only seem to replicate this is Rails for now, hence reporting. It seems the Dependency system in ActiveSupport is what triggers this, as I can't replicate this in irb.

I'm guessing some other people will have report process/threading issues like what I've mentioned above but obviously manifest very differently depending on how their code utilises backticks.

Hopefully someone smarter than me will be see what is happening and will be able to pass this upstream to the Ruby devs, explaining to them a way to replicate it without Rails so it can be fixed.

When my console instance locks up, if I attach strace to it I get a constant loop of:

sched_yield()                           = 0</original-body>
  <latest-body>There's a good chance this is a Ruby bug with the way it deals with process management, but I'm posting it here because Rails is the only place it affects me. Now I know the issue, I can work round it, but it's something caused me a hell of a lot of frustration trying to track this down.

I had issues with Ctrl + C not working in &quot;rails console&quot; (it wasn't working), and occasionally I found &quot;reload!&quot; and some methods freezing up Ruby. (I had to use kill -9 to terminate things, a normal 'kill' didn't work. I went down alsorts of paths looking at gems, etc. After several hours I realised the issue went away if I booted into Maverick's kernel (2.6.35) instead the natty kernel (2.6.38). After more fiddling I also found that changing my database.yml also got round the issue. It turns out the call to `hostname` in some ERB in my database.yml was the cause after 3-4 hours of hair pulling!

I'm running Ruby trunk, Rails 3.0.7, and Ubuntu Natty.

To replicate the issue:

On natty and Rails 3.x, create a new project 'rails new tester'. Edit config/database.yml and put `echo` in config/application.rb, then run &quot;rails console&quot;. Try and press Ctrl + C once loaded, it probably won't do anything. Loading irb normally and pressing Ctrl + C will work fine.

While the loack of Ctrl + C is merely an annoyance, I find that if you use backticks in code that runs after &quot;reload!&quot; is called, or use backticks a lot in general, the console seems to lock up very randomly and that kill -9 is needed. This doesn't happen if I revert back to Maverick kernel, 2.6.35.

As a result, I guess this is a corner case shell-spawning/process/threading issue in Ruby itself, and not Rails. However I only seem to replicate this is Rails for now, hence reporting. It seems the Dependency system in ActiveSupport is what triggers this, as I can't replicate this in irb.

I'm guessing some other people will have report process/threading issues like what I've mentioned above but obviously manifest very differently depending on how their code utilises backticks.

Hopefully someone smarter than me will be see what is happening and will be able to pass this upstream to the Ruby devs, explaining to them a way to replicate it without Rails so it can be fixed.

When my console instance locks up, if I attach strace to it I get a constant loop of:

sched_yield()                           = 0</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;There's a good chance this is a Ruby bug with the way it deals
with process management, but I'm posting it here because Rails is
the only place it affects me. Now I know the issue, I can work
round it, but it's something caused me a hell of a lot of
frustration trying to track this down.&lt;/p&gt;
&lt;p&gt;I had issues with Ctrl + C not working in &quot;rails console&quot; (it
wasn't working), and occasionally I found &quot;reload!&quot; and some
methods freezing up Ruby. (I had to use kill -9 to terminate
things, a normal 'kill' didn't work. I went down alsorts of paths
looking at gems, etc. After several hours I realised the issue went
away if I booted into Maverick's kernel (2.6.35) instead the natty
kernel (2.6.38). After more fiddling I also found that changing my
database.yml also got round the issue. It turns out the call to
&lt;code&gt;hostname&lt;/code&gt; in some ERB in my database.yml was the cause
after 3-4 hours of hair pulling!&lt;/p&gt;
&lt;p&gt;I'm running Ruby trunk, Rails 3.0.7, and Ubuntu Natty.&lt;/p&gt;
&lt;p&gt;To replicate the issue:&lt;/p&gt;
&lt;p&gt;On natty and Rails 3.x, create a new project 'rails new tester'.
Edit config/database.yml and put &lt;code&gt;echo&lt;/code&gt; in
config/application.rb, then run &quot;rails console&quot;. Try and press Ctrl
+ C once loaded, it probably won't do anything. Loading irb
normally and pressing Ctrl + C will work fine.&lt;/p&gt;
&lt;p&gt;While the loack of Ctrl + C is merely an annoyance, I find that
if you use backticks in code that runs after &quot;reload!&quot; is called,
or use backticks a lot in general, the console seems to lock up
very randomly and that kill -9 is needed. This doesn't happen if I
revert back to Maverick kernel, 2.6.35.&lt;/p&gt;
&lt;p&gt;As a result, I guess this is a corner case
shell-spawning/process/threading issue in Ruby itself, and not
Rails. However I only seem to replicate this is Rails for now,
hence reporting. It seems the Dependency system in ActiveSupport is
what triggers this, as I can't replicate this in irb.&lt;/p&gt;
&lt;p&gt;I'm guessing some other people will have report
process/threading issues like what I've mentioned above but
obviously manifest very differently depending on how their code
utilises backticks.&lt;/p&gt;
&lt;p&gt;Hopefully someone smarter than me will be see what is happening
and will be able to pass this upstream to the Ruby devs, explaining
to them a way to replicate it without Rails so it can be fixed.&lt;/p&gt;
&lt;p&gt;When my console instance locks up, if I attach strace to it I
get a constant loop of:&lt;/p&gt;
&lt;p&gt;sched_yield() = 0&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There's a good chance this is a Ruby bug with the way it deals with process management, but I'm posting it here because Rails is the only place it affects me. Now I know the issue, I can work round it, but it's something caused me a hell of a lot of frustration trying to track this down.

I had issues with Ctrl + C not working in &quot;rails console&quot; (it wasn't working), and occasionally I found &quot;reload!&quot; and some methods freezing up Ruby. (I had to use kill -9 to terminate things, a normal 'kill' didn't work. I went down alsorts of paths looking at gems, etc. After several hours I realised the issue went away if I booted into Maverick's kernel (2.6.35) instead the natty kernel (2.6.38). After more fiddling I also found that changing my database.yml also got round the issue. It turns out the call to `hostname` in some ERB in my database.yml was the cause after 3-4 hours of hair pulling!

I'm running Ruby trunk, Rails 3.0.7, and Ubuntu Natty.

To replicate the issue:

On natty and Rails 3.x, create a new project 'rails new tester'. Edit config/database.yml and put `echo` in config/application.rb, then run &quot;rails console&quot;. Try and press Ctrl + C once loaded, it probably won't do anything. Loading irb normally and pressing Ctrl + C will work fine.

While the loack of Ctrl + C is merely an annoyance, I find that if you use backticks in code that runs after &quot;reload!&quot; is called, or use backticks a lot in general, the console seems to lock up very randomly and that kill -9 is needed. This doesn't happen if I revert back to Maverick kernel, 2.6.35.

As a result, I guess this is a corner case shell-spawning/process/threading issue in Ruby itself, and not Rails. However I only seem to replicate this is Rails for now, hence reporting. It seems the Dependency system in ActiveSupport is what triggers this, as I can't replicate this in irb.

I'm guessing some other people will have report process/threading issues like what I've mentioned above but obviously manifest very differently depending on how their code utilises backticks.

Hopefully someone smarter than me will be see what is happening and will be able to pass this upstream to the Ruby devs, explaining to them a way to replicate it without Rails so it can be fixed.

When my console instance locks up, if I attach strace to it I get a constant loop of:

sched_yield()                           = 0</body>
      <body-html>&lt;div&gt;&lt;p&gt;There's a good chance this is a Ruby bug with the way it deals
with process management, but I'm posting it here because Rails is
the only place it affects me. Now I know the issue, I can work
round it, but it's something caused me a hell of a lot of
frustration trying to track this down.&lt;/p&gt;
&lt;p&gt;I had issues with Ctrl + C not working in &quot;rails console&quot; (it
wasn't working), and occasionally I found &quot;reload!&quot; and some
methods freezing up Ruby. (I had to use kill -9 to terminate
things, a normal 'kill' didn't work. I went down alsorts of paths
looking at gems, etc. After several hours I realised the issue went
away if I booted into Maverick's kernel (2.6.35) instead the natty
kernel (2.6.38). After more fiddling I also found that changing my
database.yml also got round the issue. It turns out the call to
&lt;code&gt;hostname&lt;/code&gt; in some ERB in my database.yml was the cause
after 3-4 hours of hair pulling!&lt;/p&gt;
&lt;p&gt;I'm running Ruby trunk, Rails 3.0.7, and Ubuntu Natty.&lt;/p&gt;
&lt;p&gt;To replicate the issue:&lt;/p&gt;
&lt;p&gt;On natty and Rails 3.x, create a new project 'rails new tester'.
Edit config/database.yml and put &lt;code&gt;echo&lt;/code&gt; in
config/application.rb, then run &quot;rails console&quot;. Try and press Ctrl
+ C once loaded, it probably won't do anything. Loading irb
normally and pressing Ctrl + C will work fine.&lt;/p&gt;
&lt;p&gt;While the loack of Ctrl + C is merely an annoyance, I find that
if you use backticks in code that runs after &quot;reload!&quot; is called,
or use backticks a lot in general, the console seems to lock up
very randomly and that kill -9 is needed. This doesn't happen if I
revert back to Maverick kernel, 2.6.35.&lt;/p&gt;
&lt;p&gt;As a result, I guess this is a corner case
shell-spawning/process/threading issue in Ruby itself, and not
Rails. However I only seem to replicate this is Rails for now,
hence reporting. It seems the Dependency system in ActiveSupport is
what triggers this, as I can't replicate this in irb.&lt;/p&gt;
&lt;p&gt;I'm guessing some other people will have report
process/threading issues like what I've mentioned above but
obviously manifest very differently depending on how their code
utilises backticks.&lt;/p&gt;
&lt;p&gt;Hopefully someone smarter than me will be see what is happening
and will be able to pass this upstream to the Ruby devs, explaining
to them a way to replicate it without Rails so it can be fixed.&lt;/p&gt;
&lt;p&gt;When my console instance locks up, if I attach strace to it I
get a constant loop of:&lt;/p&gt;
&lt;p&gt;sched_yield() = 0&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-05-01T02:42:32+01:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6760</number>
      <permalink>very-obscure-issue-with-ctrl-c-in-console-not-workng-and-periodic-freezes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>backticks dependencies natty rails3 reload! ruby1.9 threadsafety</tag>
      <title>Very obscure issue with Ctrl + C in console not workng and periodic freezes</title>
      <updated-at type="datetime">2011-05-01T02:42:35+01:00</updated-at>
      <user-id type="integer">24170</user-id>
      <version type="integer">1</version>
      <user-name>VirtualFunction</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6760</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I have the same issue after I upgraded to Ubuntu 11.04. I tried reinstalling ruby 1.9.2 via RVM but that didn't fix the problem.</body>
      <body-html>&lt;div&gt;&lt;p&gt;I have the same issue after I upgraded to Ubuntu 11.04. I tried
reinstalling ruby 1.9.2 via RVM but that didn't fix the
problem.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-05-04T17:46:13+01:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6760</number>
      <permalink>very-obscure-issue-with-ctrl-c-in-console-not-workng-and-periodic-freezes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>backticks dependencies natty rails3 reload! ruby1.9 threadsafety</tag>
      <title>Very obscure issue with Ctrl + C in console not workng and periodic freezes</title>
      <updated-at type="datetime">2011-05-04T17:46:18+01:00</updated-at>
      <user-id type="integer">30647</user-id>
      <version type="integer">2</version>
      <user-name>Daniel Choi</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6760</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>There's a similar ticket filed for Ruby 1.9.2

http://redmine.ruby-lang.org/issues/4608</body>
      <body-html>&lt;div&gt;&lt;p&gt;There's a similar ticket filed for Ruby 1.9.2&lt;/p&gt;
&lt;p&gt;&lt;a href=
&quot;http://redmine.ruby-lang.org/issues/4608&quot;&gt;http://redmine.ruby-lang.org/issues/4608&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-05-04T17:48:52+01:00</created-at>
      <creator-id type="integer">24170</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">6760</number>
      <permalink>very-obscure-issue-with-ctrl-c-in-console-not-workng-and-periodic-freezes</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>backticks dependencies natty rails3 reload! ruby1.9 threadsafety</tag>
      <title>Very obscure issue with Ctrl + C in console not workng and periodic freezes</title>
      <updated-at type="datetime">2011-05-04T17:48:58+01:00</updated-at>
      <user-id type="integer">30647</user-id>
      <version type="integer">3</version>
      <user-name>Daniel Choi</user-name>
      <creator-name>VirtualFunction</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/6760</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
