<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer">15316</assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-07-29T03:38:53+01:00</created-at>
  <creator-id type="integer">109372</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5237</number>
  <permalink>racksessionrecord-too-lazy</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>resolved</state>
  <tag nil="true"></tag>
  <title>rack.session.record too lazy</title>
  <updated-at type="datetime">2010-07-29T16:19:35+01:00</updated-at>
  <user-id type="integer">102763</user-id>
  <version type="integer">3</version>
  <user-name>Mike Riley</user-name>
  <creator-name>Andr&#233; Camargo</creator-name>
  <assigned-user-name>Aaron Patterson</assigned-user-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5237</url>
  <priority-name>Low</priority-name>
  <original-body>I'm porting a Rails 1.1.6 :-) app to Rails3 that stores sessions in db.

In the old days, I used session.model to put some data in the sessions table.

Now I saw that session.model is deprecated in favour of request.env['rack.session.record']

But, it seems like http://github.com/rails/rails/commit/e210895ba95e498b9debbf43a3e5ae588bca81f0 broke my attached test.

Reverting the changes should solve the case, but, is this the right way?

Some information:

    andre@amazonpc:~/rails/edge/actionpack$ rails -v
    Rails 3.0.0.rc
    andre@amazonpc:~/rails/edge/actionpack$ ruby -v
    ruby 1.8.7 (2010-04-19 patchlevel 253) [i686-linux], MBARI 0x8770, Ruby Enterprise Edition 2010.02  
    andre@amazonpc:~/rails/edge/actionpack$ rake test_active_record_integration
    (in /home/andre/rails/edge/actionpack)
    Loaded suite /usr/local/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    .......F................................................................
    Finished in 9.356048 seconds.
    
      1) Failure:
    test_rack_session_record_presence(ActiveRecordStoreTest)
        [./test/activerecord/active_record_store_test.rb:78:in `test_rack_session_record_presence'
         ./test/activerecord/active_record_store_test.rb:223:in `with_test_route_set'
         ./test/abstract_unit.rb:214:in `with_routing'
         ./test/activerecord/active_record_store_test.rb:213:in `with_test_route_set'
         ./test/activerecord/active_record_store_test.rb:75:in `test_rack_session_record_presence'
         /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
         /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
         /home/andre/rails/edge/activesupport/lib/active_support/callbacks.rb:423:in `_run_setup_callbacks'
         /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run']:
    &lt;&quot;ActiveRecord::SessionStore::Session&quot;&gt; expected but was
    &lt;&quot;NilClass&quot;&gt;.
    
    72 tests, 141 assertions, 1 failures, 0 errors
    rake aborted!
    Command failed with status (1): [/usr/local/bin/ruby -I&quot;lib:test&quot; &quot;/usr/loc...]
    
    (See full trace by running task with --trace)</original-body>
  <latest-body>I'm porting a Rails 1.1.6 :-) app to Rails3 that stores sessions in db.

In the old days, I used session.model to put some data in the sessions table.

Now I saw that session.model is deprecated in favour of request.env['rack.session.record']

But, it seems like http://github.com/rails/rails/commit/e210895ba95e498b9debbf43a3e5ae588bca81f0 broke my attached test.

Reverting the changes should solve the case, but, is this the right way?

Some information:

    andre@amazonpc:~/rails/edge/actionpack$ rails -v
    Rails 3.0.0.rc
    andre@amazonpc:~/rails/edge/actionpack$ ruby -v
    ruby 1.8.7 (2010-04-19 patchlevel 253) [i686-linux], MBARI 0x8770, Ruby Enterprise Edition 2010.02  
    andre@amazonpc:~/rails/edge/actionpack$ rake test_active_record_integration
    (in /home/andre/rails/edge/actionpack)
    Loaded suite /usr/local/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    .......F................................................................
    Finished in 9.356048 seconds.
    
      1) Failure:
    test_rack_session_record_presence(ActiveRecordStoreTest)
        [./test/activerecord/active_record_store_test.rb:78:in `test_rack_session_record_presence'
         ./test/activerecord/active_record_store_test.rb:223:in `with_test_route_set'
         ./test/abstract_unit.rb:214:in `with_routing'
         ./test/activerecord/active_record_store_test.rb:213:in `with_test_route_set'
         ./test/activerecord/active_record_store_test.rb:75:in `test_rack_session_record_presence'
         /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
         /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
         /home/andre/rails/edge/activesupport/lib/active_support/callbacks.rb:423:in `_run_setup_callbacks'
         /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run']:
    &lt;&quot;ActiveRecord::SessionStore::Session&quot;&gt; expected but was
    &lt;&quot;NilClass&quot;&gt;.
    
    72 tests, 141 assertions, 1 failures, 0 errors
    rake aborted!
    Command failed with status (1): [/usr/local/bin/ruby -I&quot;lib:test&quot; &quot;/usr/loc...]
    
    (See full trace by running task with --trace)</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;I'm porting a Rails 1.1.6 :-) app to Rails3 that stores sessions
in db.&lt;/p&gt;
&lt;p&gt;In the old days, I used session.model to put some data in the
sessions table.&lt;/p&gt;
&lt;p&gt;Now I saw that session.model is deprecated in favour of
request.env['rack.session.record']&lt;/p&gt;
&lt;p&gt;But, it seems like &lt;a href=
&quot;http://github.com/rails/rails/commit/e210895ba95e498b9debbf43a3e5ae588bca81f0&quot;&gt;
http://github.com/rails/rails/commit/e210895ba95e498b9debbf43a3e5ae...&lt;/a&gt;
broke my attached test.&lt;/p&gt;
&lt;p&gt;Reverting the changes should solve the case, but, is this the
right way?&lt;/p&gt;
&lt;p&gt;Some information:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;andre@amazonpc:~/rails/edge/actionpack$ rails -v
Rails 3.0.0.rc
andre@amazonpc:~/rails/edge/actionpack$ ruby -v
ruby 1.8.7 (2010-04-19 patchlevel 253) [i686-linux], MBARI 0x8770, Ruby Enterprise Edition 2010.02  
andre@amazonpc:~/rails/edge/actionpack$ rake test_active_record_integration
(in /home/andre/rails/edge/actionpack)
Loaded suite /usr/local/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
.......F................................................................
Finished in 9.356048 seconds.

  1) Failure:
test_rack_session_record_presence(ActiveRecordStoreTest)
    [./test/activerecord/active_record_store_test.rb:78:in `test_rack_session_record_presence'
     ./test/activerecord/active_record_store_test.rb:223:in `with_test_route_set'
     ./test/abstract_unit.rb:214:in `with_routing'
     ./test/activerecord/active_record_store_test.rb:213:in `with_test_route_set'
     ./test/activerecord/active_record_store_test.rb:75:in `test_rack_session_record_presence'
     /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
     /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
     /home/andre/rails/edge/activesupport/lib/active_support/callbacks.rb:423:in `_run_setup_callbacks'
     /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run']:
&amp;lt;&quot;ActiveRecord::SessionStore::Session&quot;&amp;gt; expected but was
&amp;lt;&quot;NilClass&quot;&amp;gt;.

72 tests, 141 assertions, 1 failures, 0 errors
rake aborted!
Command failed with status (1): [/usr/local/bin/ruby -I&quot;lib:test&quot; &quot;/usr/loc...]

(See full trace by running task with --trace)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>I'm porting a Rails 1.1.6 :-) app to Rails3 that stores sessions in db.

In the old days, I used session.model to put some data in the sessions table.

Now I saw that session.model is deprecated in favour of request.env['rack.session.record']

But, it seems like http://github.com/rails/rails/commit/e210895ba95e498b9debbf43a3e5ae588bca81f0 broke my attached test.

Reverting the changes should solve the case, but, is this the right way?

Some information:

    andre@amazonpc:~/rails/edge/actionpack$ rails -v
    Rails 3.0.0.rc
    andre@amazonpc:~/rails/edge/actionpack$ ruby -v
    ruby 1.8.7 (2010-04-19 patchlevel 253) [i686-linux], MBARI 0x8770, Ruby Enterprise Edition 2010.02  
    andre@amazonpc:~/rails/edge/actionpack$ rake test_active_record_integration
    (in /home/andre/rails/edge/actionpack)
    Loaded suite /usr/local/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake/rake_test_loader
    Started
    .......F................................................................
    Finished in 9.356048 seconds.
    
      1) Failure:
    test_rack_session_record_presence(ActiveRecordStoreTest)
        [./test/activerecord/active_record_store_test.rb:78:in `test_rack_session_record_presence'
         ./test/activerecord/active_record_store_test.rb:223:in `with_test_route_set'
         ./test/abstract_unit.rb:214:in `with_routing'
         ./test/activerecord/active_record_store_test.rb:213:in `with_test_route_set'
         ./test/activerecord/active_record_store_test.rb:75:in `test_rack_session_record_presence'
         /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
         /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
         /home/andre/rails/edge/activesupport/lib/active_support/callbacks.rb:423:in `_run_setup_callbacks'
         /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run']:
    &lt;&quot;ActiveRecord::SessionStore::Session&quot;&gt; expected but was
    &lt;&quot;NilClass&quot;&gt;.
    
    72 tests, 141 assertions, 1 failures, 0 errors
    rake aborted!
    Command failed with status (1): [/usr/local/bin/ruby -I&quot;lib:test&quot; &quot;/usr/loc...]
    
    (See full trace by running task with --trace)</body>
      <body-html>&lt;div&gt;&lt;p&gt;I'm porting a Rails 1.1.6 :-) app to Rails3 that stores sessions
in db.&lt;/p&gt;
&lt;p&gt;In the old days, I used session.model to put some data in the
sessions table.&lt;/p&gt;
&lt;p&gt;Now I saw that session.model is deprecated in favour of
request.env['rack.session.record']&lt;/p&gt;
&lt;p&gt;But, it seems like &lt;a href=
&quot;http://github.com/rails/rails/commit/e210895ba95e498b9debbf43a3e5ae588bca81f0&quot;&gt;
http://github.com/rails/rails/commit/e210895ba95e498b9debbf43a3e5ae...&lt;/a&gt;
broke my attached test.&lt;/p&gt;
&lt;p&gt;Reverting the changes should solve the case, but, is this the
right way?&lt;/p&gt;
&lt;p&gt;Some information:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;andre@amazonpc:~/rails/edge/actionpack$ rails -v
Rails 3.0.0.rc
andre@amazonpc:~/rails/edge/actionpack$ ruby -v
ruby 1.8.7 (2010-04-19 patchlevel 253) [i686-linux], MBARI 0x8770, Ruby Enterprise Edition 2010.02  
andre@amazonpc:~/rails/edge/actionpack$ rake test_active_record_integration
(in /home/andre/rails/edge/actionpack)
Loaded suite /usr/local/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake/rake_test_loader
Started
.......F................................................................
Finished in 9.356048 seconds.

  1) Failure:
test_rack_session_record_presence(ActiveRecordStoreTest)
    [./test/activerecord/active_record_store_test.rb:78:in `test_rack_session_record_presence'
     ./test/activerecord/active_record_store_test.rb:223:in `with_test_route_set'
     ./test/abstract_unit.rb:214:in `with_routing'
     ./test/activerecord/active_record_store_test.rb:213:in `with_test_route_set'
     ./test/activerecord/active_record_store_test.rb:75:in `test_rack_session_record_presence'
     /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `__send__'
     /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:67:in `run'
     /home/andre/rails/edge/activesupport/lib/active_support/callbacks.rb:423:in `_run_setup_callbacks'
     /home/andre/rails/edge/activesupport/lib/active_support/testing/setup_and_teardown.rb:65:in `run']:
&amp;lt;&quot;ActiveRecord::SessionStore::Session&quot;&amp;gt; expected but was
&amp;lt;&quot;NilClass&quot;&amp;gt;.

72 tests, 141 assertions, 1 failures, 0 errors
rake aborted!
Command failed with status (1): [/usr/local/bin/ruby -I&quot;lib:test&quot; &quot;/usr/loc...]

(See full trace by running task with --trace)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-29T03:38:53+01:00</created-at>
      <creator-id type="integer">109372</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5237</number>
      <permalink>racksessionrecord-too-lazy</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>rack.session.record too lazy</title>
      <updated-at type="datetime">2010-07-29T03:38:54+01:00</updated-at>
      <user-id type="integer">109372</user-id>
      <version type="integer">1</version>
      <user-name>Andr&#233; Camargo</user-name>
      <creator-name>Andr&#233; Camargo</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5237</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>This is duplication of https://rails.lighthouseapp.com/projects/8994/tickets/5233-rails3-rc#ticket-5233-3 and Jose Valim fixed with https://rails.lighthouseapp.com/projects/8994/changesets/0f0bdaea7bf46c316ee63a9a66c8668354f142f2

I think this can be closed :-)</body>
      <body-html>&lt;div&gt;&lt;p&gt;This is duplication of &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/tickets/5233-rails3-rc#ticket-5233-3&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/tickets/5233-rails3-r...&lt;/a&gt;
and Jose Valim fixed with &lt;a href=
&quot;https://rails.lighthouseapp.com/projects/8994/changesets/0f0bdaea7bf46c316ee63a9a66c8668354f142f2&quot;&gt;
https://rails.lighthouseapp.com/projects/8994/changesets/0f0bdaea7b...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I think this can be closed :-)&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-07-29T16:02:44+01:00</created-at>
      <creator-id type="integer">109372</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5237</number>
      <permalink>racksessionrecord-too-lazy</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag nil="true"></tag>
      <title>rack.session.record too lazy</title>
      <updated-at type="datetime">2010-07-29T16:02:47+01:00</updated-at>
      <user-id type="integer">109372</user-id>
      <version type="integer">2</version>
      <user-name>Andr&#233; Camargo</user-name>
      <creator-name>Andr&#233; Camargo</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5237</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer">15316</assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Hello Andre,

I'll close this out as requested.  If this is still valid or if you have more issues with it, feel free to reopen this.

Mike Riley</body>
      <body-html>&lt;div&gt;&lt;p&gt;Hello Andre,&lt;/p&gt;
&lt;p&gt;I'll close this out as requested. If this is still valid or if
you have more issues with it, feel free to reopen this.&lt;/p&gt;
&lt;p&gt;Mike Riley&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-07-29T16:19:34+01:00</created-at>
      <creator-id type="integer">109372</creator-id>
      <diffable-attributes type="yaml">--- 
:priority: 0
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5237</number>
      <permalink>racksessionrecord-too-lazy</permalink>
      <priority type="integer">3</priority>
      <project-id type="integer">8994</project-id>
      <state>resolved</state>
      <tag nil="true"></tag>
      <title>rack.session.record too lazy</title>
      <updated-at type="datetime">2010-07-29T16:19:35+01:00</updated-at>
      <user-id type="integer">102763</user-id>
      <version type="integer">3</version>
      <user-name>Mike Riley</user-name>
      <creator-name>Andr&#233; Camargo</creator-name>
      <assigned-user-name>Aaron Patterson</assigned-user-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5237</url>
      <priority-name>Low</priority-name>
    </version>
  </versions>
</ticket>
