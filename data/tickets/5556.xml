<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">1</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-09-05T12:06:59+01:00</created-at>
  <creator-id type="integer">71516</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">5556</number>
  <permalink>before_validation-callback-affected-by-rollback-if-validation-failed</permalink>
  <priority type="integer">0</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>stale</state>
  <tag>active_record before_validation callbacks validation</tag>
  <title>before_validation callback affected by rollback if validation failed</title>
  <updated-at type="datetime">2011-02-02T18:06:45+00:00</updated-at>
  <user-id type="integer">40272</user-id>
  <version type="integer">4</version>
  <user-name>Santiago Pastorino</user-name>
  <creator-name>Bogdan Gusiev</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/5556</url>
  <priority-name nil="true"></priority-name>
  <original-body>When I tryed to do some actions that interact with database in before_validation callback - they were rollback if validation failed.

Simple code to demonstrate examle:

    class Message &lt; ActiveRecord::Base
    end
    
    class PersistentCallbackDeveloper &lt; ActiveRecord::Base
    
      set_table_name 'developers'
    
      validates_presence_of :name
    
      before_validation do 
        Message.create!(:body =&gt; &quot;Validating #{self.inspect}&quot;)
      end
    
    end

And the test:

    def test_persistent_callbacks
      assert !PersistentCallbackDeveloper.create
      assert Message.exists?
    end

The second assertion fail.

I think this is not correct: before and after validation callbacks should not be a part of transaction around save.

What do you think?

Thanks,
Bogdan.</original-body>
  <latest-body>When I tryed to do some actions that interact with database in before_validation callback - they were rollback if validation failed.

Simple code to demonstrate examle:

    class Message &lt; ActiveRecord::Base
    end
    
    class PersistentCallbackDeveloper &lt; ActiveRecord::Base
    
      set_table_name 'developers'
    
      validates_presence_of :name
    
      before_validation do 
        Message.create!(:body =&gt; &quot;Validating #{self.inspect}&quot;)
      end
    
    end

And the test:

    def test_persistent_callbacks
      assert !PersistentCallbackDeveloper.create
      assert Message.exists?
    end

The second assertion fail.

I think this is not correct: before and after validation callbacks should not be a part of transaction around save.

What do you think?

Thanks,
Bogdan.</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;When I tryed to do some actions that interact with database in
before_validation callback - they were rollback if validation
failed.&lt;/p&gt;
&lt;p&gt;Simple code to demonstrate examle:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Message &amp;lt; ActiveRecord::Base
end

class PersistentCallbackDeveloper &amp;lt; ActiveRecord::Base

  set_table_name 'developers'

  validates_presence_of :name

  before_validation do 
    Message.create!(:body =&amp;gt; &quot;Validating #{self.inspect}&quot;)
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And the test:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test_persistent_callbacks
  assert !PersistentCallbackDeveloper.create
  assert Message.exists?
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The second assertion fail.&lt;/p&gt;
&lt;p&gt;I think this is not correct: before and after validation
callbacks should not be a part of transaction around save.&lt;/p&gt;
&lt;p&gt;What do you think?&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Bogdan.&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>When I tryed to do some actions that interact with database in before_validation callback - they were rollback if validation failed.

Simple code to demonstrate examle:

    class Message &lt; ActiveRecord::Base
    end
    
    class PersistentCallbackDeveloper &lt; ActiveRecord::Base
    
      set_table_name 'developers'
    
      validates_presence_of :name
    
      before_validation do 
        Message.create!(:body =&gt; &quot;Validating #{self.inspect}&quot;)
      end
    
    end

And the test:

    def test_persistent_callbacks
      assert !PersistentCallbackDeveloper.create
      assert Message.exists?
    end

The second assertion fail.

I think this is not correct: before and after validation callbacks should not be a part of transaction around save.

What do you think?

Thanks,
Bogdan.</body>
      <body-html>&lt;div&gt;&lt;p&gt;When I tryed to do some actions that interact with database in
before_validation callback - they were rollback if validation
failed.&lt;/p&gt;
&lt;p&gt;Simple code to demonstrate examle:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;class Message &amp;lt; ActiveRecord::Base
end

class PersistentCallbackDeveloper &amp;lt; ActiveRecord::Base

  set_table_name 'developers'

  validates_presence_of :name

  before_validation do 
    Message.create!(:body =&amp;gt; &quot;Validating #{self.inspect}&quot;)
  end

end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And the test:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;def test_persistent_callbacks
  assert !PersistentCallbackDeveloper.create
  assert Message.exists?
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The second assertion fail.&lt;/p&gt;
&lt;p&gt;I think this is not correct: before and after validation
callbacks should not be a part of transaction around save.&lt;/p&gt;
&lt;p&gt;What do you think?&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Bogdan.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-05T12:06:59+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5556</number>
      <permalink>before_validation-callback-affected-by-rollback-if-validation-failed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record before_validation callbacks validation</tag>
      <title>before_validation callback affected by rollback if validation failed</title>
      <updated-at type="datetime">2010-09-05T12:10:00+01:00</updated-at>
      <user-id type="integer">71516</user-id>
      <version type="integer">1</version>
      <user-name>Bogdan Gusiev</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5556</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Test that demonstrate the issue</body>
      <body-html>&lt;div&gt;&lt;p&gt;Test that demonstrate the issue&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-09-05T12:09:02+01:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5556</number>
      <permalink>before_validation-callback-affected-by-rollback-if-validation-failed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>active_record before_validation callbacks validation</tag>
      <title>before_validation callback affected by rollback if validation failed</title>
      <updated-at type="datetime">2010-09-05T12:09:04+01:00</updated-at>
      <user-id type="integer">71516</user-id>
      <version type="integer">2</version>
      <user-name>Bogdan Gusiev</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5556</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body>This issue has been automatically marked as stale because it has not been commented on for at least three months.

The resources of the Rails core team are limited, and so we are asking for your help. If you can still reproduce this error on the 3-0-stable branch or on master, please reply with all of the information you have about it and add &quot;[state:open]&quot; to your comment. This will reopen the ticket for review. Likewise, if you feel that this is a very important feature for Rails to include, please reply with your explanation so we can consider it.

Thank you for all your contributions, and we hope you will understand this step to focus our efforts where they are most helpful.</body>
      <body-html>&lt;div&gt;&lt;p&gt;This issue has been automatically marked as stale because it has
not been commented on for at least three months.&lt;/p&gt;
&lt;p&gt;The resources of the Rails core team are limited, and so we are
asking for your help. If you can still reproduce this error on the
3-0-stable branch or on master, please reply with all of the
information you have about it and add &quot;[state:open]&quot; to your
comment. This will reopen the ticket for review. Likewise, if you
feel that this is a very important feature for Rails to include,
please reply with your explanation so we can consider it.&lt;/p&gt;
&lt;p&gt;Thank you for all your contributions, and we hope you will
understand this step to focus our efforts where they are most
helpful.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2011-02-02T16:48:51+00:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5556</number>
      <permalink>before_validation-callback-affected-by-rollback-if-validation-failed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>open</state>
      <tag>active_record before_validation callbacks validation</tag>
      <title>before_validation callback affected by rollback if validation failed</title>
      <updated-at type="datetime">2011-02-02T18:06:45+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">3</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5556</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">1</attachments-count>
      <body nil="true"></body>
      <body-html nil="true"></body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2011-02-02T16:48:53+00:00</created-at>
      <creator-id type="integer">71516</creator-id>
      <diffable-attributes type="yaml">--- 
:state: open
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">5556</number>
      <permalink>before_validation-callback-affected-by-rollback-if-validation-failed</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>stale</state>
      <tag>active_record before_validation callbacks validation</tag>
      <title>before_validation callback affected by rollback if validation failed</title>
      <updated-at type="datetime">2011-02-02T18:06:29+00:00</updated-at>
      <user-id type="integer">40272</user-id>
      <version type="integer">4</version>
      <user-name>Santiago Pastorino</user-name>
      <creator-name>Bogdan Gusiev</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/5556</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
  <attachments type="array">
    <attachment type="Attachment">
      <code>2d9bad8cae413a85fe2563e1f04b6b528d3ebe7e</code>
      <content-type>text/plain</content-type>
      <created-at type="datetime">2010-09-05T12:09:02+01:00</created-at>
      <filename>0001-test-to-demonstrate-the-bug-5556.patch</filename>
      <height type="integer" nil="true"></height>
      <id type="integer">659707</id>
      <size type="integer">2637</size>
      <uploader-id type="integer">71516</uploader-id>
      <width type="integer" nil="true"></width>
      <url>http://rails.lighthouseapp.com/attachments/659707/0001-test-to-demonstrate-the-bug-5556.patch</url>
    </attachment>
  </attachments>
</ticket>
