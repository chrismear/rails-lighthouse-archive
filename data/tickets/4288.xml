<?xml version="1.0" encoding="UTF-8"?>
<ticket>
  <assigned-user-id type="integer" nil="true"></assigned-user-id>
  <attachments-count type="integer">0</attachments-count>
  <closed type="boolean">true</closed>
  <created-at type="datetime">2010-03-29T03:46:12+01:00</created-at>
  <creator-id type="integer">23117</creator-id>
  <milestone-due-on type="datetime" nil="true"></milestone-due-on>
  <milestone-id type="integer" nil="true"></milestone-id>
  <number type="integer">4288</number>
  <permalink>modellast-too-clever-when-using-concat_ws-in-order</permalink>
  <priority type="integer">3</priority>
  <project-id type="integer">8994</project-id>
  <raw-data type="binary" nil="true" encoding="base64"></raw-data>
  <state>wontfix</state>
  <tag>activerecord model.last reverse_sql_order</tag>
  <title>Model.last too clever when using CONCAT_WS in order</title>
  <updated-at type="datetime">2010-03-29T07:31:56+01:00</updated-at>
  <user-id type="integer">85</user-id>
  <version type="integer">2</version>
  <user-name>Jeremy Kemper</user-name>
  <creator-name>Alex Farrill</creator-name>
  <url>http://rails.lighthouseapp.com/projects/8994/tickets/4288</url>
  <priority-name>Low</priority-name>
  <original-body>My model has:

default_scope :order =&gt; &quot;CONCAT_WS(' ', last_name, first_name)&quot;

i.e. concat last name and first name for order

Calling Model.last, AR calls reverse_sql_order, which produces:

&quot;CONCAT_WS(' ' DESC, last_name DESC, first_name) DESC&quot;

which is no good.  Maybe allow an override of the reverse sql order to be passed to default_scope or make reverse_sql_order aware of concat function?

Thanks,
Alex</original-body>
  <latest-body>My model has:

default_scope :order =&gt; &quot;CONCAT_WS(' ', last_name, first_name)&quot;

i.e. concat last name and first name for order

Calling Model.last, AR calls reverse_sql_order, which produces:

&quot;CONCAT_WS(' ' DESC, last_name DESC, first_name) DESC&quot;

which is no good.  Maybe allow an override of the reverse sql order to be passed to default_scope or make reverse_sql_order aware of concat function?

Thanks,
Alex</latest-body>
  <original-body-html>&lt;div&gt;&lt;p&gt;My model has:&lt;/p&gt;
&lt;p&gt;default_scope :order =&amp;gt; &quot;CONCAT_WS(' ', last_name,
first_name)&quot;&lt;/p&gt;
&lt;p&gt;i.e. concat last name and first name for order&lt;/p&gt;
&lt;p&gt;Calling Model.last, AR calls reverse_sql_order, which
produces:&lt;/p&gt;
&lt;p&gt;&quot;CONCAT_WS(' ' DESC, last_name DESC, first_name) DESC&quot;&lt;/p&gt;
&lt;p&gt;which is no good. Maybe allow an override of the reverse sql
order to be passed to default_scope or make reverse_sql_order aware
of concat function?&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Alex&lt;/p&gt;&lt;/div&gt;</original-body-html>
  <versions type="array">
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>My model has:

default_scope :order =&gt; &quot;CONCAT_WS(' ', last_name, first_name)&quot;

i.e. concat last name and first name for order

Calling Model.last, AR calls reverse_sql_order, which produces:

&quot;CONCAT_WS(' ' DESC, last_name DESC, first_name) DESC&quot;

which is no good.  Maybe allow an override of the reverse sql order to be passed to default_scope or make reverse_sql_order aware of concat function?

Thanks,
Alex</body>
      <body-html>&lt;div&gt;&lt;p&gt;My model has:&lt;/p&gt;
&lt;p&gt;default_scope :order =&amp;gt; &quot;CONCAT_WS(' ', last_name,
first_name)&quot;&lt;/p&gt;
&lt;p&gt;i.e. concat last name and first name for order&lt;/p&gt;
&lt;p&gt;Calling Model.last, AR calls reverse_sql_order, which
produces:&lt;/p&gt;
&lt;p&gt;&quot;CONCAT_WS(' ' DESC, last_name DESC, first_name) DESC&quot;&lt;/p&gt;
&lt;p&gt;which is no good. Maybe allow an override of the reverse sql
order to be passed to default_scope or make reverse_sql_order aware
of concat function?&lt;/p&gt;
&lt;p&gt;Thanks,&lt;br&gt;
Alex&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">false</closed>
      <created-at type="datetime">2010-03-29T03:46:12+01:00</created-at>
      <creator-id type="integer">23117</creator-id>
      <diffable-attributes type="yaml">--- {}

</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4288</number>
      <permalink>modellast-too-clever-when-using-concat_ws-in-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>new</state>
      <tag>activerecord model.last reverse_sql_order</tag>
      <title>Model.last too clever when using CONCAT_WS in order</title>
      <updated-at type="datetime">2010-03-29T03:46:14+01:00</updated-at>
      <user-id type="integer">23117</user-id>
      <version type="integer">1</version>
      <user-name>Alex Farrill</user-name>
      <creator-name>Alex Farrill</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4288</url>
      <priority-name nil="true"></priority-name>
    </version>
    <version type="Ticket::Version">
      <assigned-user-id type="integer" nil="true"></assigned-user-id>
      <attachments-count type="integer">0</attachments-count>
      <body>Better to avoid Model.last if you know you're using irreversible :order clauses.

Note, that's a very expensive order that'll cause full table scans for every query.</body>
      <body-html>&lt;div&gt;&lt;p&gt;Better to avoid Model.last if you know you're using irreversible
:order clauses.&lt;/p&gt;
&lt;p&gt;Note, that's a very expensive order that'll cause full table
scans for every query.&lt;/p&gt;&lt;/div&gt;</body-html>
      <closed type="boolean">true</closed>
      <created-at type="datetime">2010-03-29T07:31:53+01:00</created-at>
      <creator-id type="integer">23117</creator-id>
      <diffable-attributes type="yaml">--- 
:state: new
</diffable-attributes>
      <milestone-id type="integer" nil="true"></milestone-id>
      <number type="integer">4288</number>
      <permalink>modellast-too-clever-when-using-concat_ws-in-order</permalink>
      <priority type="integer">0</priority>
      <project-id type="integer">8994</project-id>
      <state>wontfix</state>
      <tag>activerecord model.last reverse_sql_order</tag>
      <title>Model.last too clever when using CONCAT_WS in order</title>
      <updated-at type="datetime">2010-03-29T07:31:56+01:00</updated-at>
      <user-id type="integer">85</user-id>
      <version type="integer">2</version>
      <user-name>Jeremy Kemper</user-name>
      <creator-name>Alex Farrill</creator-name>
      <url>http://rails.lighthouseapp.com/projects/8994/tickets/4288</url>
      <priority-name nil="true"></priority-name>
    </version>
  </versions>
</ticket>
