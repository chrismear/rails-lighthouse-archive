From d25d08a9090631d4659d3bd417a9744f1ec271d8 Mon Sep 17 00:00:00 2001
From: Steven Fenigstein <steve@navigatingcancer.com>
Date: Tue, 15 Mar 2011 15:47:41 -0700
Subject: [PATCH] fixes mass assignment security warning when retrieving records during a nested attribute assignment (#5738).  What this actually fixes is a concurrency issue, where someone is doing a nested_attribute update and between assignment and save a protected attribute gets updated but someone else, the protected attribute update would be lost.

---
 .../associations/association_collection.rb         |    2 +-
 activerecord/test/cases/associations_test.rb       |   13 +++++++++++++
 activerecord/test/models/ship_part.rb              |    2 ++
 activerecord/test/schema/schema.rb                 |    1 +
 4 files changed, 17 insertions(+), 1 deletions(-)

diff --git a/activerecord/lib/active_record/associations/association_collection.rb b/activerecord/lib/active_record/associations/association_collection.rb
index ebb1bb7..45d98cc 100644
--- a/activerecord/lib/active_record/associations/association_collection.rb
+++ b/activerecord/lib/active_record/associations/association_collection.rb
@@ -400,7 +400,7 @@ module ActiveRecord
                     if i
                       @target.delete_at(i).tap do |t|
                         keys = ["id"] + t.changes.keys + (f.attribute_names - t.attribute_names)
-                        t.attributes = f.attributes.except(*keys)
+                        t.send(:attributes=, f.attributes.except(*keys), false)
                       end
                     else
                       f
diff --git a/activerecord/test/cases/associations_test.rb b/activerecord/test/cases/associations_test.rb
index dde62d8..f15afd5 100644
--- a/activerecord/test/cases/associations_test.rb
+++ b/activerecord/test/cases/associations_test.rb
@@ -71,6 +71,19 @@ class AssociationsTest < ActiveRecord::TestCase
     assert_equal 'Deck', ship.parts[0].name
   end
 
+  def test_the_change_of_protected_attribute_after_a_record_is_loaded_through_nested_attributes_should_survive_subsequent_change_to_the_record
+    ship = Ship.create!(:name => "The good ship Dollypop")
+    part = ship.parts.create! do |p|
+      p.name = 'Mast'
+      p.a_protected_attribute = 'Original Value'
+    end
+    ship.parts_attributes = [{:id => part.id, :name => 'Main Mast'}]
+    a_copy_of_part = ShipPart.find(part.id)
+    a_copy_of_part.update_attribute(:a_protected_attribute, 'New Value')    
+    ship.save
+    assert_equal 'Main Mast', ship.parts[0].name
+    assert_equal a_copy_of_part.a_protected_attribute, ship.parts[0].a_protected_attribute
+  end
 
   def test_include_with_order_works
     assert_nothing_raised {Account.find(:first, :order => 'id', :include => :firm)}
diff --git a/activerecord/test/models/ship_part.rb b/activerecord/test/models/ship_part.rb
index b6a8a50..a0910f3 100644
--- a/activerecord/test/models/ship_part.rb
+++ b/activerecord/test/models/ship_part.rb
@@ -4,4 +4,6 @@ class ShipPart < ActiveRecord::Base
   accepts_nested_attributes_for :trinkets, :allow_destroy => true
 
   validates_presence_of :name
+  
+  attr_protected :a_protected_attribute
 end
\ No newline at end of file
diff --git a/activerecord/test/schema/schema.rb b/activerecord/test/schema/schema.rb
index fd1386b..fb94d9d 100644
--- a/activerecord/test/schema/schema.rb
+++ b/activerecord/test/schema/schema.rb
@@ -481,6 +481,7 @@ ActiveRecord::Schema.define do
 
   create_table :ship_parts, :force => true do |t|
     t.string :name
+    t.string :a_protected_attribute
     t.integer :ship_id
   end
 
-- 
1.7.3.3

